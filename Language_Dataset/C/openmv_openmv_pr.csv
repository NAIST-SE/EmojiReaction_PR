openmv/openmv,https://github.com/openmv/openmv,98,2016-03-09T04:39:29Z,2016-03-09T22:32:32Z,2016-03-09T22:32:32Z,MERGED,True,160,46,9,https://github.com/kwagyeman,Add file read speed.,1,[],https://github.com/openmv/openmv/pull/98,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/98,"File reading is runing ultra fast now. We're getting that SD card speed
the STM32 promised now. The file buffer commands have been updated to
alloc as much available memory to read as much of a file in as possible
now to speed up things. This works really great.
Note however, while the file buffer is active you have to use the file
buffer versions of tell and size. Spent a few hours on tracking down an
error related to not using the buffered versions.","File reading is runing ultra fast now. We're getting that SD card speed
the STM32 promised now. The file buffer commands have been updated to
alloc as much available memory to read as much of a file in as possible
now to speed up things. This works really great.
Note however, while the file buffer is active you have to use the file
buffer versions of tell and size. Spent a few hours on tracking down an
error related to not using the buffered versions.",True,{}
openmv/openmv,https://github.com/openmv/openmv,99,2016-03-18T00:13:08Z,2016-03-18T23:33:35Z,2016-03-18T23:33:35Z,MERGED,True,432,1,6,https://github.com/kwagyeman,Move LCD code into module.,1,[],https://github.com/openmv/openmv/pull/99,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/99,"It's now ultra fast, safe and friendly. I tested everything too and added an example script (very simple).","It's now ultra fast, safe and friendly. I tested everything too and added an example script (very simple).",True,{}
openmv/openmv,https://github.com/openmv/openmv,100,2016-03-19T16:10:43Z,2016-03-19T17:36:27Z,2016-03-19T17:36:27Z,CLOSED,False,323,157,15,https://github.com/kwagyeman,Example Fixes,2,[],https://github.com/openmv/openmv/pull/100,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/100,"Updated the example scripts to have a standard format so we look professional and filled in broken functionality in the IDE.
I need to pivot back to working on python modules to use my weekend effectively. So, I am flushing these changes now. Place holder code will be filled on once BLE/WiFi/etc are done.","Updated the example scripts to have a standard format so we look professional and filled in broken functionality in the IDE.
I need to pivot back to working on python modules to use my weekend effectively. So, I am flushing these changes now. Place holder code will be filled on once BLE/WiFi/etc are done.",True,{}
openmv/openmv,https://github.com/openmv/openmv,101,2016-03-19T17:42:51Z,2016-03-19T18:44:44Z,2016-03-19T18:44:44Z,MERGED,True,147,3,2,https://github.com/kwagyeman,Add copy color.,1,[],https://github.com/openmv/openmv/pull/101,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/101,"The copy color function now works. It will automatically determine the
best thresholds to use to track a particular color blob for you.","The copy color function now works. It will automatically determine the
best thresholds to use to track a particular color blob for you.",True,{}
openmv/openmv,https://github.com/openmv/openmv,102,2016-03-20T16:59:30Z,2016-03-20T18:04:35Z,2016-03-20T18:04:35Z,MERGED,True,78,44,1,https://github.com/kwagyeman,Add BLE Driver,1,[],https://github.com/openmv/openmv/pull/102,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/102,"This a python module driver for the BLE module. It puts the module into
a mode that's good for machine interfacing and handles parsing commands
for you. Additionally, it lets you get access to the low level serial
port.
Users who want to use this driver will need to read and understand the
TruConnect API for what commands they can execute. This driver simply
makes executing commands easy. The user simply needs to call the
""command()"" function with the strings listed on the TruConnect API and
they will get the response from the command back as a byte object.
Once the user has executed the necessary commands to setup the BLE
connection they can then do:
ble.command(""str"")
To put the BLE module into streaming mode and then they can just
directly access the serial port via:
ble.uart().write()
And etc.","This a python module driver for the BLE module. It puts the module into
a mode that's good for machine interfacing and handles parsing commands
for you. Additionally, it lets you get access to the low level serial
port.
Users who want to use this driver will need to read and understand the
TruConnect API for what commands they can execute. This driver simply
makes executing commands easy. The user simply needs to call the
""command()"" function with the strings listed on the TruConnect API and
they will get the response from the command back as a byte object.
Once the user has executed the necessary commands to setup the BLE
connection they can then do:
ble.command(""str"")
To put the BLE module into streaming mode and then they can just
directly access the serial port via:
ble.uart().write()
And etc.",True,{}
openmv/openmv,https://github.com/openmv/openmv,103,2016-03-24T04:06:36Z,2016-03-24T22:36:27Z,2016-03-24T22:36:27Z,MERGED,True,520,401,9,https://github.com/kwagyeman,Redid MLX Code,1,[],https://github.com/openmv/openmv/pull/103,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/103,"First, a few things:
The MLX 16x4 sensor has just too low of a resolution for mass appeal for
the price. The product is not going to sell very well. We need to look
into supporting sensors with a better res. Like the FLIR 1. The MLX
module was renamed to the ""flir"" module with this idea in mind.
The flir code now takes care of doing scaling and blending itself. I did
this to get rid of the user having to scale the image themselves and
blend themselves. Its too easy to run out of memory given our current
ultra small heap. In general, anything that requires multiple images in
RAM has got to go. When we do another OpenMV Cam with external RAM in
the MB range then maybe such functions will be safe. But, right now they
are definitely not.
Anyway, moving on, I fixed a few bugs with the MLX math code. But, for
the most part was correct. I also added recommended polling code for
brownouts as required by the datasheet.
Last, I designed this code like the LCD code to support a type value
when inited. This will allow the system to user a different sensor in the
future without any API changes to the user.
I will add test scripts for this next. Basic usage follows:
import flir
flir.init()
flir.display_ir(sensor.snapshot())
And that's it. Super easy. If the user wants the raw temp values they
can use flir.read_ir() to get the ta and to values. The display function
has a hidden alpha and scale argument for controlling blending and the
min/max scaling.
The previous way we worked out scaling kinda sucked... it was a good
shot, but, controllable min and maxes that autoscale by default just
work better. If the user knows the temp range then they can just set the
min and max.
One more thing - scaling is just done using nearest neighbor. Better scaling would have been cool, but, I think, pointless since the res is so low its not really buying anyone anything. We have to get that 80x60 FLIR 1 sensor in the future.
Anyway, longest commit ever done.","First, a few things:
The MLX 16x4 sensor has just too low of a resolution for mass appeal for
the price. The product is not going to sell very well. We need to look
into supporting sensors with a better res. Like the FLIR 1. The MLX
module was renamed to the ""flir"" module with this idea in mind.
The flir code now takes care of doing scaling and blending itself. I did
this to get rid of the user having to scale the image themselves and
blend themselves. Its too easy to run out of memory given our current
ultra small heap. In general, anything that requires multiple images in
RAM has got to go. When we do another OpenMV Cam with external RAM in
the MB range then maybe such functions will be safe. But, right now they
are definitely not.
Anyway, moving on, I fixed a few bugs with the MLX math code. But, for
the most part was correct. I also added recommended polling code for
brownouts as required by the datasheet.
Last, I designed this code like the LCD code to support a type value
when inited. This will allow the system to user a different sensor in the
future without any API changes to the user.
I will add test scripts for this next. Basic usage follows:
import flir
flir.init()
flir.display_ir(sensor.snapshot())
And that's it. Super easy. If the user wants the raw temp values they
can use flir.read_ir() to get the ta and to values. The display function
has a hidden alpha and scale argument for controlling blending and the
min/max scaling.
The previous way we worked out scaling kinda sucked... it was a good
shot, but, controllable min and maxes that autoscale by default just
work better. If the user knows the temp range then they can just set the
min and max.
One more thing - scaling is just done using nearest neighbor. Better scaling would have been cool, but, I think, pointless since the res is so low its not really buying anyone anything. We have to get that 80x60 FLIR 1 sensor in the future.
Anyway, longest commit ever done.",True,{}
openmv/openmv,https://github.com/openmv/openmv,103,2016-03-24T04:06:36Z,2016-03-24T22:36:27Z,2016-03-24T22:36:27Z,MERGED,True,520,401,9,https://github.com/kwagyeman,Redid MLX Code,1,[],https://github.com/openmv/openmv/pull/103,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/103#issuecomment-201053697,"First, a few things:
The MLX 16x4 sensor has just too low of a resolution for mass appeal for
the price. The product is not going to sell very well. We need to look
into supporting sensors with a better res. Like the FLIR 1. The MLX
module was renamed to the ""flir"" module with this idea in mind.
The flir code now takes care of doing scaling and blending itself. I did
this to get rid of the user having to scale the image themselves and
blend themselves. Its too easy to run out of memory given our current
ultra small heap. In general, anything that requires multiple images in
RAM has got to go. When we do another OpenMV Cam with external RAM in
the MB range then maybe such functions will be safe. But, right now they
are definitely not.
Anyway, moving on, I fixed a few bugs with the MLX math code. But, for
the most part was correct. I also added recommended polling code for
brownouts as required by the datasheet.
Last, I designed this code like the LCD code to support a type value
when inited. This will allow the system to user a different sensor in the
future without any API changes to the user.
I will add test scripts for this next. Basic usage follows:
import flir
flir.init()
flir.display_ir(sensor.snapshot())
And that's it. Super easy. If the user wants the raw temp values they
can use flir.read_ir() to get the ta and to values. The display function
has a hidden alpha and scale argument for controlling blending and the
min/max scaling.
The previous way we worked out scaling kinda sucked... it was a good
shot, but, controllable min and maxes that autoscale by default just
work better. If the user knows the temp range then they can just set the
min and max.
One more thing - scaling is just done using nearest neighbor. Better scaling would have been cool, but, I think, pointless since the res is so low its not really buying anyone anything. We have to get that 80x60 FLIR 1 sensor in the future.
Anyway, longest commit ever done.","import sensor, image, time, fir
sensor.reset() # Initialize the camera sensor.
sensor.set_pixformat(sensor.RGB565) # or sensor.GRAYSCALE
sensor.set_framesize(sensor.QVGA) # or sensor.QQVGA (or others)
clock = time.clock() # Tracks FPS.
fir.init()
while(True):
clock.tick()
fir.display_ir(sensor.snapshot())
print(clock.fps())",True,{}
openmv/openmv,https://github.com/openmv/openmv,104,2016-03-24T23:53:17Z,2016-03-25T11:52:28Z,2016-03-25T11:52:28Z,MERGED,True,66,135,5,https://github.com/kwagyeman,Improved IR code.,1,[],https://github.com/openmv/openmv/pull/104,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/104,"Return min and max from read_ir now. Also, made drawing functions take
IR values.
Example scripts have been updated to work with the new module code.","Return min and max from read_ir now. Also, made drawing functions take
IR values.
Example scripts have been updated to work with the new module code.",True,{}
openmv/openmv,https://github.com/openmv/openmv,105,2016-03-25T20:37:35Z,2016-03-25T22:12:09Z,2016-03-25T22:12:09Z,MERGED,True,227,7,9,https://github.com/kwagyeman,Add AWB/HMirror/VFlip,1,[],https://github.com/openmv/openmv/pull/105,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/105,"Added setters for these camera settings. AWB is necessary for color
tracking to work correctly. AGC still runs, which causes lighting
shifts. It may need to be disabled too. Not sure... if I want to do that
or not however, because without it lightning won't get normalized to
remain at a certain level. So, turning AGC off may cause issues in other
ways.","Added setters for these camera settings. AWB is necessary for color
tracking to work correctly. AGC still runs, which causes lighting
shifts. It may need to be disabled too. Not sure... if I want to do that
or not however, because without it lightning won't get normalized to
remain at a certain level. So, turning AGC off may cause issues in other
ways.",True,{}
openmv/openmv,https://github.com/openmv/openmv,106,2016-03-26T01:28:39Z,2016-03-26T13:15:18Z,2016-03-26T13:15:18Z,MERGED,True,121,3,5,https://github.com/kwagyeman,Add Midpoint filter.,1,[],https://github.com/openmv/openmv/pull/106,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/106,"Has a bias value that allows you to control if its really a midpoint,
min, max filter, or something inbetween. Run at 160x120 or lower. 320x240
is slow (seems to be the case for all convoltions at that res).","Has a bias value that allows you to control if its really a midpoint,
min, max filter, or something inbetween. Run at 160x120 or lower. 320x240
is slow (seems to be the case for all convoltions at that res).",True,{}
openmv/openmv,https://github.com/openmv/openmv,107,2016-03-26T14:27:12Z,2016-03-26T22:43:13Z,2016-03-26T22:43:13Z,MERGED,True,20,20,3,https://github.com/kwagyeman,Renamed Display to Draw,1,[],https://github.com/openmv/openmv/pull/107,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/107,And fixed type in blend. Per Ibrahim's suggestion.,And fixed type in blend. Per Ibrahim's suggestion.,True,{}
openmv/openmv,https://github.com/openmv/openmv,109,2016-03-29T03:04:58Z,2016-03-29T14:35:58Z,2016-03-29T14:35:58Z,MERGED,True,14,0,2,https://github.com/kwagyeman,We seem to be doing this alot in the code.,1,[],https://github.com/openmv/openmv/pull/109,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/109,"So I'm just adding a function to do it cleanly and efficiently. Call
skip_frames() after changing any camera settings to let it settle.
10 frames by default works fine. Tested it.","So I'm just adding a function to do it cleanly and efficiently. Call
skip_frames() after changing any camera settings to let it settle.
10 frames by default works fine. Tested it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,110,2016-03-31T01:31:29Z,2016-03-31T01:55:22Z,2016-03-31T01:55:23Z,MERGED,True,140,100,48,https://github.com/kwagyeman,Moved examples arround.,1,[],https://github.com/openmv/openmv/pull/110,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/110,"Tried to emulate Arduino's 11 folders... I'd prefer to have all the
shield scripts in one folder... but, that might not make sense. I don't
really want one script per folder however. So, I might merge some more
stuff in the future. I have a grand idea here that will become evident as
I work though the examples.
Anyway, the current structure is not final. It will be in flux for a
little while.
As for Git History, folder history is the best we're going to get. Git
and GitHub don't seem to deal with moves too well.
The changed content in the scripts is from me merging in stuff I had lying around for a while waiting for this moment. Note: I'm going to try to put all scripts which take a picture as their final action or record a video as their final action in the picture taking and video recording dirs.","Tried to emulate Arduino's 11 folders... I'd prefer to have all the
shield scripts in one folder... but, that might not make sense. I don't
really want one script per folder however. So, I might merge some more
stuff in the future. I have a grand idea here that will become evident as
I work though the examples.
Anyway, the current structure is not final. It will be in flux for a
little while.
As for Git History, folder history is the best we're going to get. Git
and GitHub don't seem to deal with moves too well.
The changed content in the scripts is from me merging in stuff I had lying around for a while waiting for this moment. Note: I'm going to try to put all scripts which take a picture as their final action or record a video as their final action in the picture taking and video recording dirs.",True,{}
openmv/openmv,https://github.com/openmv/openmv,111,2016-04-02T15:21:09Z,2016-04-02T17:08:04Z,2016-04-02T17:08:04Z,MERGED,True,372,308,32,https://github.com/kwagyeman,Working on scripts...,1,[],https://github.com/openmv/openmv/pull/111,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/111,"Moved feature detection scripts into their own folders and added explicit
frame_skip value per Ibrahim's request.
Finished working on snapshot and video recording scripts for next
release along with basics for now.
... From CMUcam4 work I learned that people will just want examples that
do ""X"" thing. So, in general, our examples should include a simple
script showing off a feature and then a more complex script that does ""X""
where ""X"" is some app that a person would want. For example, we'll get
requests for face tracking with servos, and movement detection with
servos. So, instead of answering this question a million times with an
example script we'll just have examples for all kinds of things people
will want.
Gotta automate dealing with help support at the end of the day...","Moved feature detection scripts into their own folders and added explicit
frame_skip value per Ibrahim's request.
Finished working on snapshot and video recording scripts for next
release along with basics for now.
... From CMUcam4 work I learned that people will just want examples that
do ""X"" thing. So, in general, our examples should include a simple
script showing off a feature and then a more complex script that does ""X""
where ""X"" is some app that a person would want. For example, we'll get
requests for face tracking with servos, and movement detection with
servos. So, instead of answering this question a million times with an
example script we'll just have examples for all kinds of things people
will want.
Gotta automate dealing with help support at the end of the day...",True,{}
openmv/openmv,https://github.com/openmv/openmv,112,2016-04-05T20:42:16Z,2016-04-05T21:22:23Z,2016-04-05T21:22:23Z,MERGED,True,645,175,10,https://github.com/kwagyeman,"Added mean, median, and mode filters.",1,[],https://github.com/openmv/openmv/pull/112,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/112,"Mean filter -> Fast and easy to use. This will likely be the only filter
that gets alot of action on the M4.
Median filter -> Works really well, but, slow. On grayscale at 160x120
you can get also 10 FPS with it for a 3x3 kernel. That said, it's still
slow. Also, the code only works for 3x3 and 5x5 kernels.
About the previous histogram filter... technically, that filter should be
better. However, it suffers from a startup cost. The operation of finding
the median point in the histogram costs too much to compute. This is
what causes it to be slow. On very large kernels it will be faster than
the sorting median alrogithm I put up... but, large kernels will be too
slow for anyone to use anyway. The paper Ibrahim linked to about it
showed it being used for like 7x7 kernels and up... so, I think the
researcher who thought of the idea was really thinking about the
algorithm for large kernels.
Mode filter -> Works great on grayscale. Not so much on color. I think it
needs to be run on the LAB color space instead of the RGB color space. I
say this because it causes pretty strong artifacts around edges. When we
get more flash we'll be able to have a reverse lookup table for LAB to
make the mode filter better. Until then...","Mean filter -> Fast and easy to use. This will likely be the only filter
that gets alot of action on the M4.
Median filter -> Works really well, but, slow. On grayscale at 160x120
you can get also 10 FPS with it for a 3x3 kernel. That said, it's still
slow. Also, the code only works for 3x3 and 5x5 kernels.
About the previous histogram filter... technically, that filter should be
better. However, it suffers from a startup cost. The operation of finding
the median point in the histogram costs too much to compute. This is
what causes it to be slow. On very large kernels it will be faster than
the sorting median alrogithm I put up... but, large kernels will be too
slow for anyone to use anyway. The paper Ibrahim linked to about it
showed it being used for like 7x7 kernels and up... so, I think the
researcher who thought of the idea was really thinking about the
algorithm for large kernels.
Mode filter -> Works great on grayscale. Not so much on color. I think it
needs to be run on the LAB color space instead of the RGB color space. I
say this because it causes pretty strong artifacts around edges. When we
get more flash we'll be able to have a reverse lookup table for LAB to
make the mode filter better. Until then...",True,{}
openmv/openmv,https://github.com/openmv/openmv,114,2016-04-09T15:45:16Z,2016-04-09T23:22:16Z,2016-04-09T23:22:16Z,MERGED,True,411,162,5,https://github.com/kwagyeman,New blob code.,1,[],https://github.com/openmv/openmv/pull/114,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/114,"Blob tracking has now been updated to work without requiring prior
segmentation of the image. You can still run it on a segmented image,
but, that is not needed anymore.
Use the copy color feature of the OpenMV IDE to get a color in the
image. Once you have that you can then pass the color to find_blobs which
will output a tuple of lists of blobs for each color. By default, all
blobs less than 1/1000th of the image are filtered out, however, you can
add a custom filter function which gets the image and the blob about to
be added to the list and you can decide to filter it or not.
For marker tracking, we now have a function called find markers which
basically merges all the blobs found by find blobs into one list of
blobs. Each new blob will have a color code value which will tell you
what colors are part of that blob. We support tracking up to 30 unique
colors this way.","Blob tracking has now been updated to work without requiring prior
segmentation of the image. You can still run it on a segmented image,
but, that is not needed anymore.
Use the copy color feature of the OpenMV IDE to get a color in the
image. Once you have that you can then pass the color to find_blobs which
will output a tuple of lists of blobs for each color. By default, all
blobs less than 1/1000th of the image are filtered out, however, you can
add a custom filter function which gets the image and the blob about to
be added to the list and you can decide to filter it or not.
For marker tracking, we now have a function called find markers which
basically merges all the blobs found by find blobs into one list of
blobs. Each new blob will have a color code value which will tell you
what colors are part of that blob. We support tracking up to 30 unique
colors this way.",True,{}
openmv/openmv,https://github.com/openmv/openmv,115,2016-04-09T23:34:21Z,2016-04-09T23:38:43Z,2016-04-09T23:38:43Z,MERGED,True,13,344,9,https://github.com/kwagyeman,Remove old code.,1,[],https://github.com/openmv/openmv/pull/115,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/115,"Pixels, centroid, and orientation are calculated in the blob code now.
As for threshold, it is no longer needed (plus, it required storing a
secondary image in RAM which isn't really something we can handle).","Pixels, centroid, and orientation are calculated in the blob code now.
As for threshold, it is no longer needed (plus, it required storing a
secondary image in RAM which isn't really something we can handle).",True,{}
openmv/openmv,https://github.com/openmv/openmv,118,2016-04-14T03:17:26Z,2016-04-14T22:41:46Z,2016-04-14T22:41:46Z,MERGED,True,289,174,8,https://github.com/kwagyeman,Fixed blob code.,2,[],https://github.com/openmv/openmv/pull/118,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/118,"Removed micropython code from the image libary. Also, blobs are now 10
tuple values by default now. The multilist thing has been removed from
blobs and it will return just a list of blobs instead of a tree of
lists.
Filter functions still work too.","Removed micropython code from the image libary. Also, blobs are now 10
tuple values by default now. The multilist thing has been removed from
blobs and it will return just a list of blobs instead of a tree of
lists.
Filter functions still work too.",True,{}
openmv/openmv,https://github.com/openmv/openmv,119,2016-04-15T03:57:32Z,2016-04-15T11:45:14Z,2016-04-15T11:45:14Z,MERGED,True,12,0,3,https://github.com/kwagyeman,Fixed file buffer bug.,1,[],https://github.com/openmv/openmv/pull/119,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/119,This wasn't getting reinited breaking the system.,This wasn't getting reinited breaking the system.,True,{}
openmv/openmv,https://github.com/openmv/openmv,120,2016-04-20T01:47:01Z,2016-04-20T10:45:47Z,2016-04-20T10:45:47Z,MERGED,True,125,419,4,https://github.com/kwagyeman,Imlib cleanup,1,[],https://github.com/openmv/openmv/pull/120,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/120,"*Changed subimg to copy.
*Made blend work the same way as all our other double image argument
functions.
*Changed bilt to replace (the name of bilt is way to esoteric). Replace
gives you the basic assignment op.

Removed scale/sacled. I removed this code because we don't want to
encourage people to scale things and allocate additional images in
memory. I decided to keep copy() for completeness sakes... but, I don't
see anyone using it. (By completeness sakes I mean that we now have the
assignment op, copy op, etc. for an image object).
Removed rainbow. This feature is built into the FIR module now.

Moving on, compress needs to be renamed to compressed and a new compress
function will need to be added.
The compress() function will compress the image (or frame buffer, etc)
and not return a new object. The compressed() function will return a new
object and not compress the original image.
The compress function will make it easier for users to compress images
once they are done working on them before sending the image some where.
I don't see compressed() being used much then after adding the
compress() function. Since the compress() function won't use up heap
space this makes it very good.","*Changed subimg to copy.
*Made blend work the same way as all our other double image argument
functions.
*Changed bilt to replace (the name of bilt is way to esoteric). Replace
gives you the basic assignment op.

Removed scale/sacled. I removed this code because we don't want to
encourage people to scale things and allocate additional images in
memory. I decided to keep copy() for completeness sakes... but, I don't
see anyone using it. (By completeness sakes I mean that we now have the
assignment op, copy op, etc. for an image object).
Removed rainbow. This feature is built into the FIR module now.

Moving on, compress needs to be renamed to compressed and a new compress
function will need to be added.
The compress() function will compress the image (or frame buffer, etc)
and not return a new object. The compressed() function will return a new
object and not compress the original image.
The compress function will make it easier for users to compress images
once they are done working on them before sending the image some where.
I don't see compressed() being used much then after adding the
compress() function. Since the compress() function won't use up heap
space this makes it very good.",True,{}
openmv/openmv,https://github.com/openmv/openmv,123,2016-04-20T21:19:39Z,2016-04-20T22:25:56Z,2016-04-20T22:25:56Z,MERGED,True,494,255,29,https://github.com/kwagyeman,Example Work,1,[],https://github.com/openmv/openmv/pull/123,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/123,"Filled in all the board control examples. Everything works except for
DAC.
Moved test drawing scripts to drawing dir and renamed them and added
comments.
Filled in all the image filter stuff. There are still some tests that
can be renamed, commented, and added to this folder. But, I will do that
later.
Fixed motion detection thresholds.
Fixed LCD script comments.
Fixed BLE return value.

About the SKIN filter stuff. That basically does the same thing as binary. Given that... I think we should re-work the API to work like binary, then re-add the filters examples. Doing the filter line by line while the image is coming in is a good idea... that said, I don't know exactly how much it will buy us. You have to... do something with the image after filtering it. E.g. find_blobs does the color segmentation for you while working.
What would be nice is if the image grayscale histogram was computed while it was read in instead. This would save a lot of time for doing histogram equalization.","Filled in all the board control examples. Everything works except for
DAC.
Moved test drawing scripts to drawing dir and renamed them and added
comments.
Filled in all the image filter stuff. There are still some tests that
can be renamed, commented, and added to this folder. But, I will do that
later.
Fixed motion detection thresholds.
Fixed LCD script comments.
Fixed BLE return value.

About the SKIN filter stuff. That basically does the same thing as binary. Given that... I think we should re-work the API to work like binary, then re-add the filters examples. Doing the filter line by line while the image is coming in is a good idea... that said, I don't know exactly how much it will buy us. You have to... do something with the image after filtering it. E.g. find_blobs does the color segmentation for you while working.
What would be nice is if the image grayscale histogram was computed while it was read in instead. This would save a lot of time for doing histogram equalization.",True,{}
openmv/openmv,https://github.com/openmv/openmv,125,2016-04-21T17:12:14Z,2016-04-21T18:07:20Z,2016-04-21T18:07:20Z,MERGED,True,16,6,1,https://github.com/kwagyeman,Fixed dilate.,1,[],https://github.com/openmv/openmv/pull/125,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/125,This was bugged. Tested and now works.,This was bugged. Tested and now works.,True,{}
openmv/openmv,https://github.com/openmv/openmv,126,2016-04-22T00:04:38Z,2016-04-23T00:07:56Z,2016-04-23T00:07:56Z,MERGED,True,486,295,30,https://github.com/kwagyeman,60 Scripts.,1,[],https://github.com/openmv/openmv/pull/126,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/126,"Everything except the DAC script works. That has to be fixed. Anyway, we
have a ton of example for launch. So, hopefully, comments about how to
do stuff should be limited.
That said, the PYB module is in a poor state still. Stuff kinda works and
kinda doesn't from it.
One day... There won't be any fires to put out on this project and I can
stop working so hard.
Echo server was removed because it was for the old wifi module and I did not feel like fixing it for the next release. The code for that wouldn't have run with even minor fixes - totally outdated.
I removed the save test script because it served no purpose anymore.","Everything except the DAC script works. That has to be fixed. Anyway, we
have a ton of example for launch. So, hopefully, comments about how to
do stuff should be limited.
That said, the PYB module is in a poor state still. Stuff kinda works and
kinda doesn't from it.
One day... There won't be any fires to put out on this project and I can
stop working so hard.
Echo server was removed because it was for the old wifi module and I did not feel like fixing it for the next release. The code for that wouldn't have run with even minor fixes - totally outdated.
I removed the save test script because it served no purpose anymore.",True,{}
openmv/openmv,https://github.com/openmv/openmv,128,2016-04-23T14:42:44Z,2016-04-23T21:48:44Z,2016-04-23T21:48:44Z,CLOSED,False,13,7,5,https://github.com/x893,Fix for OPENMV1. Need STM32F407VG,1,[],https://github.com/openmv/openmv/pull/128,https://github.com/x893,1,https://github.com/openmv/openmv/pull/128,"Hello,
compiled but not test with hardware.","Hello,
compiled but not test with hardware.",True,{}
openmv/openmv,https://github.com/openmv/openmv,128,2016-04-23T14:42:44Z,2016-04-23T21:48:44Z,2016-04-23T21:48:44Z,CLOSED,False,13,7,5,https://github.com/x893,Fix for OPENMV1. Need STM32F407VG,1,[],https://github.com/openmv/openmv/pull/128,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/128#issuecomment-213827363,"Hello,
compiled but not test with hardware.","Thanks for the PR. We'll likely not merge this right now since we're pushing to get the OpenMV Cam 2 firmware done.
Thanks,",True,{}
openmv/openmv,https://github.com/openmv/openmv,128,2016-04-23T14:42:44Z,2016-04-23T21:48:44Z,2016-04-23T21:48:44Z,CLOSED,False,13,7,5,https://github.com/x893,Fix for OPENMV1. Need STM32F407VG,1,[],https://github.com/openmv/openmv/pull/128,https://github.com/x893,3,https://github.com/openmv/openmv/pull/128#issuecomment-213839484,"Hello,
compiled but not test with hardware.","OK,
i try check with my hardware.
Good luck with OPENMV2 !",True,{}
openmv/openmv,https://github.com/openmv/openmv,130,2016-04-23T20:42:59Z,2016-04-26T00:47:08Z,2016-04-26T00:47:08Z,MERGED,True,109,45,11,https://github.com/kwagyeman,Improved JPEG capabilities.,1,[],https://github.com/openmv/openmv/pull/130,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/130,"Added the ability to control the quality on JPEG functions... However,
due to our JPEG implementation this doesn't seem to help. 90% JPEG
quality images and regular images should be about equal. But, you can
see heavy degredation with 90% still. E.g. text is unreabable. Not
exactly sure why this is happening but it can be fixed later.
Changed the compress() function to compressed(). Also, it now
compresses using FB_Alloc to prevent realloc issues when compressing.
Added new compress() function. This function compresses an image in
place and if that image is the frame bufffer then it will update the
frame buffer bpp value to reflect the image was compressed. Users can use
this function to basically finalize the frame buffer and then pass the FB
to functions that need to send image bytes. The benefit of using this
function is that it should allow higher quality JPEGs and let everything
run at a faster speed while connected to the IDE.

I made this function to speed up WiFi. However, I encountered a bug with
the winc.send() method. It appears to zero the bytes it sends. I didn't
debug further except to verify that the image data became zero after
calling send.","Added the ability to control the quality on JPEG functions... However,
due to our JPEG implementation this doesn't seem to help. 90% JPEG
quality images and regular images should be about equal. But, you can
see heavy degredation with 90% still. E.g. text is unreabable. Not
exactly sure why this is happening but it can be fixed later.
Changed the compress() function to compressed(). Also, it now
compresses using FB_Alloc to prevent realloc issues when compressing.
Added new compress() function. This function compresses an image in
place and if that image is the frame bufffer then it will update the
frame buffer bpp value to reflect the image was compressed. Users can use
this function to basically finalize the frame buffer and then pass the FB
to functions that need to send image bytes. The benefit of using this
function is that it should allow higher quality JPEGs and let everything
run at a faster speed while connected to the IDE.

I made this function to speed up WiFi. However, I encountered a bug with
the winc.send() method. It appears to zero the bytes it sends. I didn't
debug further except to verify that the image data became zero after
calling send.",True,{}
openmv/openmv,https://github.com/openmv/openmv,130,2016-04-23T20:42:59Z,2016-04-26T00:47:08Z,2016-04-26T00:47:08Z,MERGED,True,109,45,11,https://github.com/kwagyeman,Improved JPEG capabilities.,1,[],https://github.com/openmv/openmv/pull/130,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/130#issuecomment-214511742,"Added the ability to control the quality on JPEG functions... However,
due to our JPEG implementation this doesn't seem to help. 90% JPEG
quality images and regular images should be about equal. But, you can
see heavy degredation with 90% still. E.g. text is unreabable. Not
exactly sure why this is happening but it can be fixed later.
Changed the compress() function to compressed(). Also, it now
compresses using FB_Alloc to prevent realloc issues when compressing.
Added new compress() function. This function compresses an image in
place and if that image is the frame bufffer then it will update the
frame buffer bpp value to reflect the image was compressed. Users can use
this function to basically finalize the frame buffer and then pass the FB
to functions that need to send image bytes. The benefit of using this
function is that it should allow higher quality JPEGs and let everything
run at a faster speed while connected to the IDE.

I made this function to speed up WiFi. However, I encountered a bug with
the winc.send() method. It appears to zero the bytes it sends. I didn't
debug further except to verify that the image data became zero after
calling send.","Did you test this ? If you compress the FB, then sensor_snapshot will re-compress JPEG data on the next frame, the IDE will read garbage. Also I'm not sure how the new compress makes WiFi faster ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,130,2016-04-23T20:42:59Z,2016-04-26T00:47:08Z,2016-04-26T00:47:08Z,MERGED,True,109,45,11,https://github.com/kwagyeman,Improved JPEG capabilities.,1,[],https://github.com/openmv/openmv/pull/130,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/130#issuecomment-214565078,"Added the ability to control the quality on JPEG functions... However,
due to our JPEG implementation this doesn't seem to help. 90% JPEG
quality images and regular images should be about equal. But, you can
see heavy degredation with 90% still. E.g. text is unreabable. Not
exactly sure why this is happening but it can be fixed later.
Changed the compress() function to compressed(). Also, it now
compresses using FB_Alloc to prevent realloc issues when compressing.
Added new compress() function. This function compresses an image in
place and if that image is the frame bufffer then it will update the
frame buffer bpp value to reflect the image was compressed. Users can use
this function to basically finalize the frame buffer and then pass the FB
to functions that need to send image bytes. The benefit of using this
function is that it should allow higher quality JPEGs and let everything
run at a faster speed while connected to the IDE.

I made this function to speed up WiFi. However, I encountered a bug with
the winc.send() method. It appears to zero the bytes it sends. I didn't
debug further except to verify that the image data became zero after
calling send.","Yes, I always test my PRs. I modified the sensor snapshot function not to compress images if they are JPEG already. The code works.
The new compress makes WiFi faster when connected to the IDE because you don't have to compress twice... however, until the send() zeroing the data buffer issue is fixed you can't use the command and have to use a temporary buffer.
Anyway, please merge, I've got more stuff in the works.",True,{}
openmv/openmv,https://github.com/openmv/openmv,131,2016-04-26T02:26:26Z,2016-04-26T20:50:40Z,2016-04-26T20:50:40Z,MERGED,True,276,332,8,https://github.com/kwagyeman,Final Imlib Cleanup,1,[],https://github.com/openmv/openmv/pull/131,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/131,"Finished going through imlib.c.
-> Histeq uses fb_alloc now and has hook for RGB histeq when I add the reverse YUV
LUT (coming soon in next PR).
Cleanuped py_helper.c/h
-> No functional changes. Just added some header info.
Finished going through py_image.c

1 - Finished general code cleanup and updating everything to using new
library functions. In particular, I updated the remaining find_*
functions with the new roi clipping code when they accept rois.
2 - Made blob stuff return a list when nothing is found so you don't
have to do an if on the returned value anymore.
3 - img subscr is more powerful now allowing image reading and
writing. I updated this because I had to use it to find a previous bug
with socket.send() for the WINC driver.
4 - Renamed find_eyes to find_eye. Because it just finds one eye.
5 - Other than that just general code cleanup to make functions look
consistent.

And yes, changes have been tested. Face tracking, eye tracking, keypoints,
etc. all work still.
Future things todo before release:
1 - Change all LAB stuff to YUV.
2 - Add in reverse YUV->RGB LUT and update functions like Mode() to use
this so they don't generate messed up outputs, also histeq() too.
3 - Add any remaining sensor control functions like agc control.","Finished going through imlib.c.
-> Histeq uses fb_alloc now and has hook for RGB histeq when I add the reverse YUV
LUT (coming soon in next PR).
Cleanuped py_helper.c/h
-> No functional changes. Just added some header info.
Finished going through py_image.c

1 - Finished general code cleanup and updating everything to using new
library functions. In particular, I updated the remaining find_*
functions with the new roi clipping code when they accept rois.
2 - Made blob stuff return a list when nothing is found so you don't
have to do an if on the returned value anymore.
3 - img subscr is more powerful now allowing image reading and
writing. I updated this because I had to use it to find a previous bug
with socket.send() for the WINC driver.
4 - Renamed find_eyes to find_eye. Because it just finds one eye.
5 - Other than that just general code cleanup to make functions look
consistent.

And yes, changes have been tested. Face tracking, eye tracking, keypoints,
etc. all work still.
Future things todo before release:
1 - Change all LAB stuff to YUV.
2 - Add in reverse YUV->RGB LUT and update functions like Mode() to use
this so they don't generate messed up outputs, also histeq() too.
3 - Add any remaining sensor control functions like agc control.",True,{}
openmv/openmv,https://github.com/openmv/openmv,132,2016-04-28T01:54:27Z,2016-04-28T21:58:27Z,2016-04-28T21:58:27Z,MERGED,True,200,41,9,https://github.com/kwagyeman,Add missing cam functionality,1,[],https://github.com/openmv/openmv/pull/132,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/132,"Added the ability to turn AGC off. Kinda will need the ability to restore
AGC settings back to user specified ones in the future... but, this will
do for now.
Added the ability to turn AEC off. Objectively this function probably
won't be used. But, in low light situations it can help.
Added get_fb() to allow you to get the last image snapshot returned.
There was some old exposure function in the code that was getting
optimized out. So, I deleted the used methods that didn't have any code
in them and commented out the only method that did.","Added the ability to turn AGC off. Kinda will need the ability to restore
AGC settings back to user specified ones in the future... but, this will
do for now.
Added the ability to turn AEC off. Objectively this function probably
won't be used. But, in low light situations it can help.
Added get_fb() to allow you to get the last image snapshot returned.
There was some old exposure function in the code that was getting
optimized out. So, I deleted the used methods that didn't have any code
in them and commented out the only method that did.",True,{}
openmv/openmv,https://github.com/openmv/openmv,133,2016-04-30T03:04:08Z,2016-04-30T03:21:32Z,2016-04-30T03:21:32Z,MERGED,True,39,7,2,https://github.com/kwagyeman,Made histeq work for RGB565.,1,[],https://github.com/openmv/openmv/pull/133,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/133,Added YUV to RGB565 conversion to make this happen.,Added YUV to RGB565 conversion to make this happen.,True,{}
openmv/openmv,https://github.com/openmv/openmv,140,2016-06-12T23:56:53Z,2016-06-13T00:42:50Z,2016-06-13T00:42:50Z,MERGED,True,716,33,9,https://github.com/kwagyeman,Add FFT Code and Phase Correlation Code,1,[],https://github.com/openmv/openmv/pull/140,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/140,"The heart of the 1D FFT works. I tested this on the PC. However, 2D FFTs
may have issues and the phase correlation algorithm does not generate
the expected results. That said, most of the work is done. Stuff just
needs to be debugged.
The FFT lib is designed to handle up to 1024 point real FFTs and 512
complex FFTs. As for 2D FFTs, we can do up to 64x64 pixels. After which,
we don't have enough RAM to handle them because they use up about 128KB
each.
Things to do... the 2D FFT needs to be verified. So, we need to run an
image through it and then back again to verify that there are no
problems. Then we need to compare the 2D FFT output with another 2D FFT
algorithm on the PC...
Once the FFTs are known to be good we then need to make sure the phase
correlation algorithm outs the correct results. We need to test that with
multiple shifted images, etc.","The heart of the 1D FFT works. I tested this on the PC. However, 2D FFTs
may have issues and the phase correlation algorithm does not generate
the expected results. That said, most of the work is done. Stuff just
needs to be debugged.
The FFT lib is designed to handle up to 1024 point real FFTs and 512
complex FFTs. As for 2D FFTs, we can do up to 64x64 pixels. After which,
we don't have enough RAM to handle them because they use up about 128KB
each.
Things to do... the 2D FFT needs to be verified. So, we need to run an
image through it and then back again to verify that there are no
problems. Then we need to compare the 2D FFT output with another 2D FFT
algorithm on the PC...
Once the FFTs are known to be good we then need to make sure the phase
correlation algorithm outs the correct results. We need to test that with
multiple shifted images, etc.",True,{}
openmv/openmv,https://github.com/openmv/openmv,141,2016-06-14T04:02:26Z,2016-06-14T16:25:00Z,2016-06-14T16:25:00Z,MERGED,True,44,42,3,https://github.com/kwagyeman,Fixed FFT and Phase Correlation!,1,[],https://github.com/openmv/openmv/pull/141,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/141,"There were some mistakes, they are fixed now. FFT 1D and 2D work
flawlessly. No problems with that code anymore.
As for phase correlation I need to study how to interpret the output
better. The function generates noisy results once you move the image too
far and I'm not quite sure if I have the code right for detecting
positive and negative displacements.
For testing, just compare the previous image against the current. Its very accurate then. Size must be 64x64 pixels or less.","There were some mistakes, they are fixed now. FFT 1D and 2D work
flawlessly. No problems with that code anymore.
As for phase correlation I need to study how to interpret the output
better. The function generates noisy results once you move the image too
far and I'm not quite sure if I have the code right for detecting
positive and negative displacements.
For testing, just compare the previous image against the current. Its very accurate then. Size must be 64x64 pixels or less.",True,{}
openmv/openmv,https://github.com/openmv/openmv,142,2016-06-19T03:08:26Z,2016-06-19T18:42:11Z,2016-06-19T18:42:11Z,MERGED,True,351,11,10,https://github.com/kwagyeman,Finished up optical flow code.,1,[],https://github.com/openmv/openmv/pull/142,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/142,"Added pooling functions to make getting small images easy. set_binning
works too... but, it zooms in way to much. pooling functions allow you to
shrink the image while not zooming in.
To make the pooling functions easy to use I created a version that
pools the image out of place and one that pools the image in place. The
in place pooling function can work on the frame buffer (see edits to
sensor.c)
I added the code to do hann windowing to the FFT lib. However, I
commented it out after it improved performance by basically zero.
Specialized windowing stuff will only come in handy for folks trying to
tune their algorithm... not in general for everything.
I added subpixel resolution for the phase correlation code. You can
now track the image movement really precisely. Additionally, I fixed up
the displacement outputs to give expected results. I also added a QoR
output for the displacement code so that you can know when the results
are bad.
Finally, an example script has been added to show off the features.","Added pooling functions to make getting small images easy. set_binning
works too... but, it zooms in way to much. pooling functions allow you to
shrink the image while not zooming in.
To make the pooling functions easy to use I created a version that
pools the image out of place and one that pools the image in place. The
in place pooling function can work on the frame buffer (see edits to
sensor.c)
I added the code to do hann windowing to the FFT lib. However, I
commented it out after it improved performance by basically zero.
Specialized windowing stuff will only come in handy for folks trying to
tune their algorithm... not in general for everything.
I added subpixel resolution for the phase correlation code. You can
now track the image movement really precisely. Additionally, I fixed up
the displacement outputs to give expected results. I also added a QoR
output for the displacement code so that you can know when the results
are bad.
Finally, an example script has been added to show off the features.",True,{}
openmv/openmv,https://github.com/openmv/openmv,143,2016-06-19T20:27:31Z,2016-06-20T20:26:18Z,2016-06-20T20:26:18Z,CLOSED,False,7,7,2,https://github.com/kwagyeman,Fixed binning with pooling.,1,[],https://github.com/openmv/openmv/pull/143,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/143,Done.,Done.,True,{}
openmv/openmv,https://github.com/openmv/openmv,143,2016-06-19T20:27:31Z,2016-06-20T20:26:18Z,2016-06-20T20:26:18Z,CLOSED,False,7,7,2,https://github.com/kwagyeman,Fixed binning with pooling.,1,[],https://github.com/openmv/openmv/pull/143,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/143#issuecomment-227258808,Done.,Fixed.,True,{}
openmv/openmv,https://github.com/openmv/openmv,149,2016-08-18T18:53:03Z,2016-08-19T10:24:50Z,2016-08-26T12:01:29Z,MERGED,True,36,2,1,https://github.com/wminarik,changes fir_init() to take specified refresh rate and ADC resolution,1,[],https://github.com/openmv/openmv/pull/149,https://github.com/wminarik,1,https://github.com/openmv/openmv/pull/149,"Changes fir_init() (file py_fir.c) to take three arguments:
fir_init([refresh,resolution, type=1])
where:
refresh: refresh rate in Hz, between 1 and 64 Hz (64 Hz default)
resolution: ADC resolution in bits, between 15 and 18 (18-bits default)
following the rational in #147
The existing type=1 argument was placed last, as I believe that dictionary arguments (*kw_args) must follow scalar args (*args)
I'm unpracticed with writing C for Python, especially within a large calling framework -please make suggestions!","Changes fir_init() (file py_fir.c) to take three arguments:
fir_init([refresh,resolution, type=1])
where:
refresh: refresh rate in Hz, between 1 and 64 Hz (64 Hz default)
resolution: ADC resolution in bits, between 15 and 18 (18-bits default)
following the rational in #147
The existing type=1 argument was placed last, as I believe that dictionary arguments (*kw_args) must follow scalar args (*args)
I'm unpracticed with writing C for Python, especially within a large calling framework -please make suggestions!",True,{}
openmv/openmv,https://github.com/openmv/openmv,149,2016-08-18T18:53:03Z,2016-08-19T10:24:50Z,2016-08-26T12:01:29Z,MERGED,True,36,2,1,https://github.com/wminarik,changes fir_init() to take specified refresh rate and ADC resolution,1,[],https://github.com/openmv/openmv/pull/149,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/149#issuecomment-240983602,"Changes fir_init() (file py_fir.c) to take three arguments:
fir_init([refresh,resolution, type=1])
where:
refresh: refresh rate in Hz, between 1 and 64 Hz (64 Hz default)
resolution: ADC resolution in bits, between 15 and 18 (18-bits default)
following the rational in #147
The existing type=1 argument was placed last, as I believe that dictionary arguments (*kw_args) must follow scalar args (*args)
I'm unpracticed with writing C for Python, especially within a large calling framework -please make suggestions!","merged, I'll use keywords instead of positional args, anyway thanks!",True,{}
openmv/openmv,https://github.com/openmv/openmv,149,2016-08-18T18:53:03Z,2016-08-19T10:24:50Z,2016-08-26T12:01:29Z,MERGED,True,36,2,1,https://github.com/wminarik,changes fir_init() to take specified refresh rate and ADC resolution,1,[],https://github.com/openmv/openmv/pull/149,https://github.com/wminarik,3,https://github.com/openmv/openmv/pull/149#issuecomment-241203790,"Changes fir_init() (file py_fir.c) to take three arguments:
fir_init([refresh,resolution, type=1])
where:
refresh: refresh rate in Hz, between 1 and 64 Hz (64 Hz default)
resolution: ADC resolution in bits, between 15 and 18 (18-bits default)
following the rational in #147
The existing type=1 argument was placed last, as I believe that dictionary arguments (*kw_args) must follow scalar args (*args)
I'm unpracticed with writing C for Python, especially within a large calling framework -please make suggestions!","Thanks -you've taken my awkward code and made it elegant; thanks also for introducing me to built in intrinsic functions.
One bug: The current algorithm works well for user input that is a power of 2. For arbitrary integers, the algorithm gives less straightforward results -in fact all odd numbers set the refresh rate to 0.5 Hz. I suggest the following change:
under ""//sanitize values"":
change:
IR_refresh_rate = 14 - __CLZ(__RBIT((IR_refresh_rate > 512) ? 512:(IR_refresh_rate < 1)? 1:IR_refresh_rate));
to
IR_refresh_rate = __CLZ((IR_refresh_rate > 512) ? 512:(IR_refresh_rate < 1)? 1:IR_refresh_rate) - 17;
this saves a bit reversal step and sets any user input between two powers of 2 to the lower valid refresh rate (that is, refresh=10 Hz is set to 8 Hz).
Cheers,
Bill",True,{}
openmv/openmv,https://github.com/openmv/openmv,149,2016-08-18T18:53:03Z,2016-08-19T10:24:50Z,2016-08-26T12:01:29Z,MERGED,True,36,2,1,https://github.com/wminarik,changes fir_init() to take specified refresh rate and ADC resolution,1,[],https://github.com/openmv/openmv/pull/149,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/149#issuecomment-242716354,"Changes fir_init() (file py_fir.c) to take three arguments:
fir_init([refresh,resolution, type=1])
where:
refresh: refresh rate in Hz, between 1 and 64 Hz (64 Hz default)
resolution: ADC resolution in bits, between 15 and 18 (18-bits default)
following the rational in #147
The existing type=1 argument was placed last, as I believe that dictionary arguments (*kw_args) must follow scalar args (*args)
I'm unpracticed with writing C for Python, especially within a large calling framework -please make suggestions!","Hi, sorry got busy with other issues, feel free to send another PR if you want.",True,{}
openmv/openmv,https://github.com/openmv/openmv,150,2016-08-26T19:46:24Z,2018-04-26T19:07:04Z,2018-04-26T19:07:04Z,CLOSED,False,1,1,1,https://github.com/wminarik,modified refresh rate processing code to accept inputs not = 2^n,2,[],https://github.com/openmv/openmv/pull/150,https://github.com/wminarik,1,https://github.com/openmv/openmv/pull/150,"Changes the code in order to set any user input between two powers of 2 to the lower valid refresh rate which must be a power of two (that is, an input of refresh=10 Hz is set to 8 Hz).","Changes the code in order to set any user input between two powers of 2 to the lower valid refresh rate which must be a power of two (that is, an input of refresh=10 Hz is set to 8 Hz).",True,{}
openmv/openmv,https://github.com/openmv/openmv,150,2016-08-26T19:46:24Z,2018-04-26T19:07:04Z,2018-04-26T19:07:04Z,CLOSED,False,1,1,1,https://github.com/wminarik,modified refresh rate processing code to accept inputs not = 2^n,2,[],https://github.com/openmv/openmv/pull/150,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/150#issuecomment-242945313,"Changes the code in order to set any user input between two powers of 2 to the lower valid refresh rate which must be a power of two (that is, an input of refresh=10 Hz is set to 8 Hz).","@wminarik Hi, thanks for the PR, however I can't merge this because it has a ""merge commit"" you need to rebase git pull --rebase in the future to void of that.",True,{}
openmv/openmv,https://github.com/openmv/openmv,150,2016-08-26T19:46:24Z,2018-04-26T19:07:04Z,2018-04-26T19:07:04Z,CLOSED,False,1,1,1,https://github.com/wminarik,modified refresh rate processing code to accept inputs not = 2^n,2,[],https://github.com/openmv/openmv/pull/150,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/150#issuecomment-384756537,"Changes the code in order to set any user input between two powers of 2 to the lower valid refresh rate which must be a power of two (that is, an input of refresh=10 Hz is set to 8 Hz).",Closing this because we're not supporting the old FIR shield anymore.,True,{}
openmv/openmv,https://github.com/openmv/openmv,154,2016-11-29T04:26:23Z,2016-11-29T21:52:53Z,2016-11-29T21:52:53Z,MERGED,True,1578,471,3,https://github.com/kwagyeman,Added 3 more I/O pins,1,[],https://github.com/openmv/openmv/pull/154,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/154,"The following things were changed:
PB3 (CAN_RX/UART7_TX) is now available as P9.
PB4 (CAN_TX/UART7_RX) is now available as P10.
Anyone needing a dedicated CAN bus output has one. Additionally, we also now have a second UART bus so no more conflicts with the I2C bus pins. Finally, both these pins have timers on them.
Note that PB12 and PB13 are actually a CAN Bus too. But, they conflict with SPI.
Moving on, I also routed out PA7 to the header (as P11) for use as another ADC pin. I really wanted another DAC/ADC pin but PA4 was already in use (why do they route the DAC to one pin only... and then have other functions on it...).
FSIN is connected to the processor again using the same pin as the M4 board. This pin needs to be connected to the processor so that both the camera and the CPU can be in sync. This is because for syncing frame capture you'll want to inject a 60 Hz square wave on the FSIN pin and then the camera will sync to this and the M7 should interrupt itself on the rising edge to set a flag to tell the main loop to start a sensor.snapshot().
BOOT was moved to the debug header. We'll provide a 6-pin header to easily short the BOOT pin. I am not worried about cost here. I really wanted extra I/O pins so we aren't too limited and I'm happy with this tradeoff.
The VBUS has an 100K pull down on it now. This makes sure the pin is not floating anymore. So, the bootloader can quickly determine if a USB host is connected now. The bootloader should check if VBUS is low. If so, then skip the bootloader. If it is high then it should do a check on the USB data lines to make sure its not connected to a USB charger. If not, then it waits 5 seconds for the host to connect otherwise it boots. This should eliminate all the bootloader issues.
Yes, the bootloader should wait 5 seconds. I don't see any computer having problems enumerating in that time. I will make the IDE smarter so that if it connects to the bootloader when it wants to connect to the main firmware it will keep trying instead of giving an error. I really don't want there to be any more issues with this.
Other than that I made sure all wire segments were named. Checked schematic errors. Made sure there were no DRC errors. Verified there were no islands in the ground plane. Made sure all the signals I touched were routed. And... I fixed up the silkscreen.","The following things were changed:
PB3 (CAN_RX/UART7_TX) is now available as P9.
PB4 (CAN_TX/UART7_RX) is now available as P10.
Anyone needing a dedicated CAN bus output has one. Additionally, we also now have a second UART bus so no more conflicts with the I2C bus pins. Finally, both these pins have timers on them.
Note that PB12 and PB13 are actually a CAN Bus too. But, they conflict with SPI.
Moving on, I also routed out PA7 to the header (as P11) for use as another ADC pin. I really wanted another DAC/ADC pin but PA4 was already in use (why do they route the DAC to one pin only... and then have other functions on it...).
FSIN is connected to the processor again using the same pin as the M4 board. This pin needs to be connected to the processor so that both the camera and the CPU can be in sync. This is because for syncing frame capture you'll want to inject a 60 Hz square wave on the FSIN pin and then the camera will sync to this and the M7 should interrupt itself on the rising edge to set a flag to tell the main loop to start a sensor.snapshot().
BOOT was moved to the debug header. We'll provide a 6-pin header to easily short the BOOT pin. I am not worried about cost here. I really wanted extra I/O pins so we aren't too limited and I'm happy with this tradeoff.
The VBUS has an 100K pull down on it now. This makes sure the pin is not floating anymore. So, the bootloader can quickly determine if a USB host is connected now. The bootloader should check if VBUS is low. If so, then skip the bootloader. If it is high then it should do a check on the USB data lines to make sure its not connected to a USB charger. If not, then it waits 5 seconds for the host to connect otherwise it boots. This should eliminate all the bootloader issues.
Yes, the bootloader should wait 5 seconds. I don't see any computer having problems enumerating in that time. I will make the IDE smarter so that if it connects to the bootloader when it wants to connect to the main firmware it will keep trying instead of giving an error. I really don't want there to be any more issues with this.
Other than that I made sure all wire segments were named. Checked schematic errors. Made sure there were no DRC errors. Verified there were no islands in the ground plane. Made sure all the signals I touched were routed. And... I fixed up the silkscreen.",True,{}
openmv/openmv,https://github.com/openmv/openmv,155,2016-11-30T00:17:43Z,2016-11-30T00:19:48Z,2016-11-30T00:19:48Z,MERGED,True,66,62,3,https://github.com/kwagyeman,Swap BOOT0 and RST pins,1,[],https://github.com/openmv/openmv/pull/155,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/155,"Swapped BOOT0 and RST pins.
Changed 100K pull down to 470K.
Fixed schematic copyright date.","Swapped BOOT0 and RST pins.
Changed 100K pull down to 470K.
Fixed schematic copyright date.",True,{}
openmv/openmv,https://github.com/openmv/openmv,157,2016-12-25T01:40:22Z,2016-12-25T03:17:32Z,2016-12-25T03:17:32Z,CLOSED,False,7104,7,43,https://github.com/kwagyeman,QR Code Detection + Start of New LIB,3,[],https://github.com/openmv/openmv/pull/157,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/157,"This PR brings in the start of the New LIB. An effort on my part to cleanup the OpenMV code, make it faster, and in general address problems that have been simmering for a while. New LIB integration will be done slowly and surely to replace old code with better code. Anyway, I put all New LIB changes in the first two commits. Integration of the New LIB with the OpenMV code is only done in the last commit.
The last commit, the integration commit, brings in new blob detection code which uses a scanline based flood fill algorithm that is faster than the previous algorithm - see this for a comparison http://will.thimbleby.net/scanline-flood-fill/. Additionally, find_blobs returns a list of blob objects now which have named values so you don't have to use array accesses everywhere anymore. The new blob objects can be sliced however so that old code continues to work.
And... for the main course, qr code detection. This works now... and it is awesome. I've created a demo script to show off this feature. The qrcode function also returns a new qrcode object like blob detection which features named properties now. The qrcode detection algorithm can find multiple qrcodes in view and does not slow the frame rate down unless there are a lot of QR codes in view. Additionally, it does not require the qr code to be aligned with the camera. It can handle qrcodes that are rotated, scaled, sheared, etc. all with respect to the camera.
In fact, after reading the qr code I think I know how to do a lot of stuff better now... in particular, I re-did the blob code with the flood fill algorithm after reading the QR code.","This PR brings in the start of the New LIB. An effort on my part to cleanup the OpenMV code, make it faster, and in general address problems that have been simmering for a while. New LIB integration will be done slowly and surely to replace old code with better code. Anyway, I put all New LIB changes in the first two commits. Integration of the New LIB with the OpenMV code is only done in the last commit.
The last commit, the integration commit, brings in new blob detection code which uses a scanline based flood fill algorithm that is faster than the previous algorithm - see this for a comparison http://will.thimbleby.net/scanline-flood-fill/. Additionally, find_blobs returns a list of blob objects now which have named values so you don't have to use array accesses everywhere anymore. The new blob objects can be sliced however so that old code continues to work.
And... for the main course, qr code detection. This works now... and it is awesome. I've created a demo script to show off this feature. The qrcode function also returns a new qrcode object like blob detection which features named properties now. The qrcode detection algorithm can find multiple qrcodes in view and does not slow the frame rate down unless there are a lot of QR codes in view. Additionally, it does not require the qr code to be aligned with the camera. It can handle qrcodes that are rotated, scaled, sheared, etc. all with respect to the camera.
In fact, after reading the qr code I think I know how to do a lot of stuff better now... in particular, I re-did the blob code with the flood fill algorithm after reading the QR code.",True,{}
openmv/openmv,https://github.com/openmv/openmv,157,2016-12-25T01:40:22Z,2016-12-25T03:17:32Z,2016-12-25T03:17:32Z,CLOSED,False,7104,7,43,https://github.com/kwagyeman,QR Code Detection + Start of New LIB,3,[],https://github.com/openmv/openmv/pull/157,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/157#issuecomment-269108537,"This PR brings in the start of the New LIB. An effort on my part to cleanup the OpenMV code, make it faster, and in general address problems that have been simmering for a while. New LIB integration will be done slowly and surely to replace old code with better code. Anyway, I put all New LIB changes in the first two commits. Integration of the New LIB with the OpenMV code is only done in the last commit.
The last commit, the integration commit, brings in new blob detection code which uses a scanline based flood fill algorithm that is faster than the previous algorithm - see this for a comparison http://will.thimbleby.net/scanline-flood-fill/. Additionally, find_blobs returns a list of blob objects now which have named values so you don't have to use array accesses everywhere anymore. The new blob objects can be sliced however so that old code continues to work.
And... for the main course, qr code detection. This works now... and it is awesome. I've created a demo script to show off this feature. The qrcode function also returns a new qrcode object like blob detection which features named properties now. The qrcode detection algorithm can find multiple qrcodes in view and does not slow the frame rate down unless there are a lot of QR codes in view. Additionally, it does not require the qr code to be aligned with the camera. It can handle qrcodes that are rotated, scaled, sheared, etc. all with respect to the camera.
In fact, after reading the qr code I think I know how to do a lot of stuff better now... in particular, I re-did the blob code with the flood fill algorithm after reading the QR code.","Sorry I can't merge all that. Please keep the PRs very specific, 1 commit of related changes max. Also I don't like all the changes to image library stuff, it all works fine, if you see a problem, bug, improvement just send PRs to fix those one at a time.",True,{}
openmv/openmv,https://github.com/openmv/openmv,158,2016-12-27T01:44:05Z,2016-12-27T17:43:38Z,2016-12-27T17:43:38Z,CLOSED,False,713,51,2,https://github.com/kwagyeman,Integrated Primative Library,1,[],https://github.com/openmv/openmv/pull/158,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/158,"The primatives library is designed to hold all simple data structures
and color/image manipulations functions for imlib in one place. New
helper classes should go it in.","The primatives library is designed to hold all simple data structures
and color/image manipulations functions for imlib in one place. New
helper classes should go it in.",True,{}
openmv/openmv,https://github.com/openmv/openmv,159,2016-12-27T17:45:28Z,2016-12-27T18:03:54Z,2016-12-27T18:03:54Z,MERGED,True,713,51,2,https://github.com/kwagyeman,Better Image Lib Primatives,1,[],https://github.com/openmv/openmv/pull/159,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/159,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,160,2016-12-27T18:35:10Z,2016-12-27T18:49:21Z,2016-12-27T18:49:21Z,CLOSED,False,668,45,5,https://github.com/kwagyeman,Add new collection classes,1,[],https://github.com/openmv/openmv/pull/160,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/160,Also fixed missing IM_ in front of UINT macros.,Also fixed missing IM_ in front of UINT macros.,True,{}
openmv/openmv,https://github.com/openmv/openmv,161,2016-12-27T19:05:25Z,2016-12-27T19:07:00Z,2016-12-27T19:07:00Z,MERGED,True,631,8,5,https://github.com/kwagyeman,Add collections,1,[],https://github.com/openmv/openmv/pull/161,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/161,No comment.,No comment.,True,{}
openmv/openmv,https://github.com/openmv/openmv,162,2016-12-27T20:31:48Z,2016-12-27T20:46:12Z,2016-12-27T20:46:12Z,MERGED,True,3257,65,9,https://github.com/kwagyeman,Add QRCode detection.,1,[],https://github.com/openmv/openmv/pull/162,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/162,"Use the qrcodes script in the examples folder and point your OpenMV Cam at google search
results for QR Codes.","Use the qrcodes script in the examples folder and point your OpenMV Cam at google search
results for QR Codes.",True,{}
openmv/openmv,https://github.com/openmv/openmv,163,2016-12-28T00:11:28Z,2016-12-28T14:11:01Z,2016-12-28T14:11:01Z,MERGED,True,795,492,7,https://github.com/kwagyeman,New Blob Code,1,[],https://github.com/openmv/openmv/pull/163,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/163,"The new API is backwards compatible with the previous one except for
advanced features. The new blob code uses a flood fill algorithm that is
3x faster in filling out blobs that the previous code. On the M7 the
performance cap of 30 FPS is usually reached.
Additionally, blobs are objects with named attributes now so you don't
have to index access them anymore. However, index access is still
supported.","The new API is backwards compatible with the previous one except for
advanced features. The new blob code uses a flood fill algorithm that is
3x faster in filling out blobs that the previous code. On the M7 the
performance cap of 30 FPS is usually reached.
Additionally, blobs are objects with named attributes now so you don't
have to index access them anymore. However, index access is still
supported.",True,{}
openmv/openmv,https://github.com/openmv/openmv,164,2016-12-28T15:58:58Z,2016-12-28T23:58:54Z,2016-12-28T23:58:54Z,MERGED,True,206,181,3,https://github.com/kwagyeman,Updated QR Code Library with upstream changes.,1,[],https://github.com/openmv/openmv/pull/164,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/164,And fixed up scripts for demo.,And fixed up scripts for demo.,True,{}
openmv/openmv,https://github.com/openmv/openmv,165,2017-01-03T17:27:59Z,2017-01-03T17:29:34Z,2017-01-03T17:29:34Z,MERGED,True,14,8,3,https://github.com/kwagyeman,Fixed copy_to_fb for loading images.,1,[],https://github.com/openmv/openmv/pull/165,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/165,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,166,2017-01-08T01:16:08Z,2017-01-08T15:13:03Z,2017-01-08T15:13:03Z,MERGED,True,1197,253,4,https://github.com/kwagyeman,Updated stats code,1,[],https://github.com/openmv/openmv/pull/166,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/166,"We now have a method to get an the normalized histogram of an image
patch. The histogram is returned as an object with methods too. You can
then get the stats off of the histogram or just get the CDF of it. The
CDF is particularly useful for automatically changing the the color
tracking bounds.
I'll push the scripts to use all this code next. I didn't want to make this PR any bigger.
Note that I put the (tedious) work in to make these function return python objects versus tuples. We need to get in the habit of doing this so folks code doesn't look jacked up using tuple index all over the place.","We now have a method to get an the normalized histogram of an image
patch. The histogram is returned as an object with methods too. You can
then get the stats off of the histogram or just get the CDF of it. The
CDF is particularly useful for automatically changing the the color
tracking bounds.
I'll push the scripts to use all this code next. I didn't want to make this PR any bigger.
Note that I put the (tedious) work in to make these function return python objects versus tuples. We need to get in the habit of doing this so folks code doesn't look jacked up using tuple index all over the place.",True,{}
openmv/openmv,https://github.com/openmv/openmv,167,2017-01-10T23:27:42Z,2017-01-11T16:36:43Z,2017-01-11T16:36:43Z,MERGED,True,102,139,6,https://github.com/kwagyeman,"Removed new_image_t, replaced with current image_t.",1,[],https://github.com/openmv/openmv/pull/167,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/167,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,169,2017-01-11T22:15:23Z,2017-01-11T23:09:36Z,2017-01-11T23:09:36Z,MERGED,True,74,62,8,https://github.com/kwagyeman,"Minor Speed Improvements to Blob, QRCode, and Stats",1,[],https://github.com/openmv/openmv/pull/169,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/169,And some code quality fixes.,And some code quality fixes.,True,{}
openmv/openmv,https://github.com/openmv/openmv,170,2017-01-12T02:24:53Z,2017-01-12T02:47:37Z,2018-12-23T05:17:46Z,MERGED,True,50,43,2,https://github.com/kwagyeman,Fix compress and compressed.,1,[],https://github.com/openmv/openmv/pull/170,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/170,"Note that I removed the compressing overlapped code for the main frame buffer. So, on the M4 you can't compress large images in place using the frame buffer anymore. That said, the code was bugged from other things being changed so who cares. On the M7 fb_alloc will have plenty of RAM to compress anything.","Note that I removed the compressing overlapped code for the main frame buffer. So, on the M4 you can't compress large images in place using the frame buffer anymore. That said, the code was bugged from other things being changed so who cares. On the M7 fb_alloc will have plenty of RAM to compress anything.",True,{}
openmv/openmv,https://github.com/openmv/openmv,172,2017-01-12T04:18:38Z,2017-01-12T15:32:36Z,2018-12-23T05:17:47Z,MERGED,True,27,0,1,https://github.com/kwagyeman,Add fb_alloc stack unwinding code.,1,[],https://github.com/openmv/openmv/pull/172,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/172,"Needs to be linked into MP too.
fb_alloc_free_till_mark() must be called by nlr_jump().
This way fb_allocs clean themselves up when an exception happens. mark just has to be called first before any fb_allocs. If mark is not called then the entire fb_alloc stack is cleaned up. As of right now we don't have any image lib functions which are re-entrant (i.e. multiple marks) so all memory will be free'd by an exception anyway.","Needs to be linked into MP too.
fb_alloc_free_till_mark() must be called by nlr_jump().
This way fb_allocs clean themselves up when an exception happens. mark just has to be called first before any fb_allocs. If mark is not called then the entire fb_alloc stack is cleaned up. As of right now we don't have any image lib functions which are re-entrant (i.e. multiple marks) so all memory will be free'd by an exception anyway.",True,{}
openmv/openmv,https://github.com/openmv/openmv,173,2017-01-12T22:43:04Z,2017-01-12T22:59:56Z,2018-12-23T05:17:48Z,MERGED,True,23,19,2,https://github.com/kwagyeman,Made set_windowing simpler.,1,[],https://github.com/openmv/openmv/pull/173,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/173,Tested with updated qr code example script.,Tested with updated qr code example script.,True,{}
openmv/openmv,https://github.com/openmv/openmv,174,2017-01-14T16:18:20Z,2017-01-14T16:29:27Z,2018-12-23T05:17:49Z,MERGED,True,257,94,10,https://github.com/kwagyeman,Update color tracking scripts.,1,[],https://github.com/openmv/openmv/pull/174,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/174,"Lots of scripts now. Cleaned up old code. And yes, it's all tested.","Lots of scripts now. Cleaned up old code. And yes, it's all tested.",True,{}
openmv/openmv,https://github.com/openmv/openmv,175,2017-01-15T01:36:05Z,2017-01-15T01:56:59Z,2018-12-23T05:17:50Z,MERGED,True,192,0,2,https://github.com/kwagyeman,Arduino Interfacing Code,1,[],https://github.com/openmv/openmv/pull/175,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/175,Simple SPI and I2C examples.,Simple SPI and I2C examples.,True,{}
openmv/openmv,https://github.com/openmv/openmv,176,2017-01-15T20:02:14Z,2017-01-15T20:54:14Z,2018-12-23T05:18:19Z,MERGED,True,544,400,7,https://github.com/kwagyeman,Tested stats with examples and fixed bugs,1,[],https://github.com/openmv/openmv/pull/176,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/176,"The automatic grayscale and rgb565 color tracking scripts are very cool. Try them out.
I didn't actually change many lines in the py_image.c file. But, I had to re-arrange the order of code blocks so it looks like I changed a lot.","The automatic grayscale and rgb565 color tracking scripts are very cool. Try them out.
I didn't actually change many lines in the py_image.c file. But, I had to re-arrange the order of code blocks so it looks like I changed a lot.",True,{}
openmv/openmv,https://github.com/openmv/openmv,177,2017-01-16T02:37:27Z,2017-01-16T02:43:57Z,2018-12-23T05:18:18Z,MERGED,True,140,64,5,https://github.com/kwagyeman,Speed up lens_corr.,1,[],https://github.com/openmv/openmv/pull/177,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/177,"Speed up the algorithm by fixing the abs() issue. Do not use that
function in any of your code. It by itself cut the speed of the code
in half. I don't know what's in that function but I'm guessing it does
ABS of a float using ints or something.
I made the zoom parameter functional now too so you can use lens_corr to
zoom in on the image. Argument parsing is handled too. Finally, I
updated the only script where this is used.
Note that I'm able to get more than 10 FPS at 160x120 on the M4 and 15
FPS at 160x120 on the M7. Previous this was at about 5 FPS and 7.5 FPS
respectively.
Note: I noticed how you only allocated half the image in your old code. That was a good idea. However, after doing the RAM calculations the effort doesn't make it so that the M4 can operate on images as large as 240x240 in RGB565. On the M7 the effort is moot since it has enough RAM. So, I just took it out and alloced a whole image at once.","Speed up the algorithm by fixing the abs() issue. Do not use that
function in any of your code. It by itself cut the speed of the code
in half. I don't know what's in that function but I'm guessing it does
ABS of a float using ints or something.
I made the zoom parameter functional now too so you can use lens_corr to
zoom in on the image. Argument parsing is handled too. Finally, I
updated the only script where this is used.
Note that I'm able to get more than 10 FPS at 160x120 on the M4 and 15
FPS at 160x120 on the M7. Previous this was at about 5 FPS and 7.5 FPS
respectively.
Note: I noticed how you only allocated half the image in your old code. That was a good idea. However, after doing the RAM calculations the effort doesn't make it so that the M4 can operate on images as large as 240x240 in RGB565. On the M7 the effort is moot since it has enough RAM. So, I just took it out and alloced a whole image at once.",True,{}
openmv/openmv,https://github.com/openmv/openmv,178,2017-01-16T03:28:12Z,2017-01-16T14:37:10Z,2018-12-23T05:18:17Z,MERGED,True,16,8,2,https://github.com/kwagyeman,Make how to use these scripts more obvious.,1,[],https://github.com/openmv/openmv/pull/178,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/178,Added a box to put the object to track in.,Added a box to put the object to track in.,True,{}
openmv/openmv,https://github.com/openmv/openmv,179,2017-01-18T04:37:03Z,2017-01-18T13:06:33Z,2017-01-18T13:06:33Z,MERGED,True,2,0,1,https://github.com/dhylands,Fix udev rules,1,[],https://github.com/openmv/openmv/pull/179,https://github.com/dhylands,1,https://github.com/openmv/openmv/pull/179,"These changes cause modemmanager to ignore the serial port
created when plugging in the OpenMV board.
Without these changes, the modemmanager open /dev/ttyACM0 and
sends AT commnads. This delays being able to access the REPL
using a temrinal emulator and also cause a syntax error
since the AT commands aren't valid python.","These changes cause modemmanager to ignore the serial port
created when plugging in the OpenMV board.
Without these changes, the modemmanager open /dev/ttyACM0 and
sends AT commnads. This delays being able to access the REPL
using a temrinal emulator and also cause a syntax error
since the AT commands aren't valid python.",True,{}
openmv/openmv,https://github.com/openmv/openmv,180,2017-01-18T23:41:08Z,2017-01-19T06:20:58Z,2018-12-23T05:18:15Z,MERGED,True,35,32,4,https://github.com/kwagyeman,Fixed fb_alloc() with mark for recently re-worked code.,1,[],https://github.com/openmv/openmv/pull/180,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/180,"I also tested the firmware for about an hour to make sure there was no
stack leak.
Note that I prefer for fb_free() to still be called versus
fb_free_till_mark() doing that for you in the code.
For functions without this fix they will just free the entire fb_alloc
stack when an exception happens. For functions with this fix they will
only free up to and including the mark. Since there are no places in the
firmware where you could start building a second fb_alloc stack when one
is already in place this point is moot currently. But, if we do
something like that in the future the problem will have already been
solved.
Any new code or re-worked code should use the mark function.","I also tested the firmware for about an hour to make sure there was no
stack leak.
Note that I prefer for fb_free() to still be called versus
fb_free_till_mark() doing that for you in the code.
For functions without this fix they will just free the entire fb_alloc
stack when an exception happens. For functions with this fix they will
only free up to and including the mark. Since there are no places in the
firmware where you could start building a second fb_alloc stack when one
is already in place this point is moot currently. But, if we do
something like that in the future the problem will have already been
solved.
Any new code or re-worked code should use the mark function.",True,{}
openmv/openmv,https://github.com/openmv/openmv,181,2017-01-30T00:53:21Z,2017-01-30T20:45:57Z,2018-12-23T05:18:14Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fixed bootloader LED,1,[],https://github.com/openmv/openmv/pull/181,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/181,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,182,2017-01-30T21:07:02Z,2017-01-30T22:30:39Z,2018-12-23T05:18:12Z,MERGED,True,4,0,1,https://github.com/kwagyeman,Add flag for SWD programmer.,1,[],https://github.com/openmv/openmv/pull/182,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/182,It can now check if the self-test passed.,It can now check if the self-test passed.,True,{}
openmv/openmv,https://github.com/openmv/openmv,182,2017-01-30T21:07:02Z,2017-01-30T22:30:39Z,2018-12-23T05:18:12Z,MERGED,True,4,0,1,https://github.com/kwagyeman,Add flag for SWD programmer.,1,[],https://github.com/openmv/openmv/pull/182,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/182#issuecomment-276198366,It can now check if the self-test passed.,"Sure you want to use BPP and not the CRC reg ? I'm not entirely sure how this might affect code that checks MAIN_FB->BPP, like sensor and fb_alloc.",True,{}
openmv/openmv,https://github.com/openmv/openmv,182,2017-01-30T21:07:02Z,2017-01-30T22:30:39Z,2018-12-23T05:18:12Z,MERGED,True,4,0,1,https://github.com/kwagyeman,Add flag for SWD programmer.,1,[],https://github.com/openmv/openmv/pull/182,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/182#issuecomment-276198978,It can now check if the self-test passed.,"Can't use the CRC reg without resetting the hardware for that. I tried the CRC reg first and all writes to it failed. I think you have to do something with the reset and clock control first.
As for any side affects. Not that this only runs after the self test. Afterwards it doesn't run again.",True,{}
openmv/openmv,https://github.com/openmv/openmv,186,2017-02-09T22:06:46Z,2017-02-09T22:27:26Z,2017-02-09T22:27:26Z,MERGED,True,12541,0,1,https://github.com/kwagyeman,AprilTags Main,1,[],https://github.com/openmv/openmv/pull/186,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/186,"This file includes all of the relevant header/source files from the
april tag library merged into one big file. Additionally, it also
includes heap/quicksort code. I've done the work of going through
the april tag library line by line and fixing it to use fb_alloc,
floats, and our fast math functions.
Anyway, I'm sending this massive file by itself first since it's so
big. Note that we might in the future want to pull things out of this
file for our own use later if we need linear algebra support.
The next PR will include files to link everything in and enable the feature.","This file includes all of the relevant header/source files from the
april tag library merged into one big file. Additionally, it also
includes heap/quicksort code. I've done the work of going through
the april tag library line by line and fixing it to use fb_alloc,
floats, and our fast math functions.
Anyway, I'm sending this massive file by itself first since it's so
big. Note that we might in the future want to pull things out of this
file for our own use later if we need linear algebra support.
The next PR will include files to link everything in and enable the feature.",True,{}
openmv/openmv,https://github.com/openmv/openmv,187,2017-02-09T22:40:47Z,2017-02-09T22:54:28Z,2017-02-09T22:54:28Z,MERGED,True,374,33,11,https://github.com/kwagyeman,AprilTags Support,1,[],https://github.com/openmv/openmv/pull/187,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/187,"Works super good.
Note that for the M4 all this code disappears since it doesn't get linked in due to the OMV_ENABLE_APRILTAGS define. The code needs about 64 KB of flash. That said, even if we made space on the M4 for it we don't have enough memory to do more than 80x60 which is not exactly that usable. We can do 160x120 on the M7 which is enough to see full sized (8""x11"" paper) april tags a good 10 ft away.","Works super good.
Note that for the M4 all this code disappears since it doesn't get linked in due to the OMV_ENABLE_APRILTAGS define. The code needs about 64 KB of flash. That said, even if we made space on the M4 for it we don't have enough memory to do more than 80x60 which is not exactly that usable. We can do 160x120 on the M7 which is enough to see full sized (8""x11"" paper) april tags a good 10 ft away.",True,{}
openmv/openmv,https://github.com/openmv/openmv,188,2017-02-10T18:43:18Z,2017-02-10T18:48:43Z,2018-12-23T05:18:11Z,MERGED,True,83,31,2,https://github.com/kwagyeman,April Tag Release Fixes,1,[],https://github.com/openmv/openmv/pull/188,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/188,"Everything works. Running out of memory is fixed and the rotation value
is valid now. For 320x240 operation on the STM32H7 we're going to need
on the order of 1 MB in the entire frame buffer. The code is designed to
handle us getting this amount of memory without any new changes for
320x240 support.","Everything works. Running out of memory is fixed and the rotation value
is valid now. For 320x240 operation on the STM32H7 we're going to need
on the order of 1 MB in the entire frame buffer. The code is designed to
handle us getting this amount of memory without any new changes for
320x240 support.",True,{}
openmv/openmv,https://github.com/openmv/openmv,189,2017-02-10T20:16:25Z,2017-02-11T04:39:45Z,2018-12-23T05:18:10Z,MERGED,True,8,8,3,https://github.com/kwagyeman,QR Code Bug Fixes,1,[],https://github.com/openmv/openmv/pull/189,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/189,"Fixed typo in qrcode script. Moved scripts to new folder. Fixed roi
offset for qrcodes. Use fast functions in qrcode library.","Fixed typo in qrcode script. Moved scripts to new folder. Fixed roi
offset for qrcodes. Use fast functions in qrcode library.",True,{}
openmv/openmv,https://github.com/openmv/openmv,190,2017-02-14T23:38:51Z,2017-02-15T16:33:52Z,2018-12-23T05:18:09Z,MERGED,True,205,56,7,https://github.com/kwagyeman,AprilTags Fixes,1,[],https://github.com/openmv/openmv/pull/190,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/190,"Made all memory allocations during the exhaustive time safe.
Added 3D pose output from the AprilTags code (might not be useful but it's not really costly to output the info).","Made all memory allocations during the exhaustive time safe.
Added 3D pose output from the AprilTags code (might not be useful but it's not really costly to output the info).",True,{}
openmv/openmv,https://github.com/openmv/openmv,192,2017-02-15T18:19:01Z,2017-02-15T21:41:22Z,2018-12-23T05:18:08Z,MERGED,True,74,7,4,https://github.com/kwagyeman,Add callbacks back in for emulating pixy.,1,[],https://github.com/openmv/openmv/pull/192,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/192,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,194,2017-03-11T00:26:43Z,2017-03-11T00:57:04Z,2017-03-11T00:57:04Z,MERGED,True,1702,0,6,https://github.com/kwagyeman,Add pixy emulation scripts,1,[],https://github.com/openmv/openmv/pull/194,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/194,"UART/I2C work really good. SPI works as best as it can. I put a note in the script about issues with SPI interfacing.
These scripts are goo reference for how to do UART/I2C/SPI I/O.","UART/I2C work really good. SPI works as best as it can. I put a note in the script about issues with SPI interfacing.
These scripts are goo reference for how to do UART/I2C/SPI I/O.",True,{}
openmv/openmv,https://github.com/openmv/openmv,195,2017-03-13T01:02:52Z,2017-03-15T01:57:02Z,2018-12-23T05:18:07Z,CLOSED,False,1,1,1,https://github.com/kwagyeman,Fix volatile issue.,1,[],https://github.com/openmv/openmv/pull/195,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/195,"This flag has to be set for the SWD debugger to pass. This worked for
the M4 without volatile but failed for the M7 without the keyword.
As for how this worked before. I don't know. Anyway, good this was caught now.","This flag has to be set for the SWD debugger to pass. This worked for
the M4 without volatile but failed for the M7 without the keyword.
As for how this worked before. I don't know. Anyway, good this was caught now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,195,2017-03-13T01:02:52Z,2017-03-15T01:57:02Z,2018-12-23T05:18:07Z,CLOSED,False,1,1,1,https://github.com/kwagyeman,Fix volatile issue.,1,[],https://github.com/openmv/openmv/pull/195,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/195#issuecomment-286617961,"This flag has to be set for the SWD debugger to pass. This worked for
the M4 without volatile but failed for the M7 without the keyword.
As for how this worked before. I don't know. Anyway, good this was caught now.",I'll add cache clean after setting the flag in main.c,True,{}
openmv/openmv,https://github.com/openmv/openmv,198,2017-03-21T20:32:17Z,2017-03-21T23:48:55Z,2017-03-21T23:48:55Z,MERGED,True,250,0,2,https://github.com/kwagyeman,Add MAVLink scripts for quadcopters,1,[],https://github.com/openmv/openmv/pull/198,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/198,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,199,2017-03-22T00:29:52Z,2017-03-22T00:45:04Z,2018-12-23T05:18:06Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Fix uart receiving code,1,[],https://github.com/openmv/openmv/pull/199,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/199,Shouldn't have been disabled.,Shouldn't have been disabled.,True,{}
openmv/openmv,https://github.com/openmv/openmv,200,2017-03-22T01:02:45Z,2017-03-22T02:16:06Z,2017-03-22T02:16:06Z,MERGED,True,8,8,4,https://github.com/kwagyeman,Fixed apriltags z translation.,1,[],https://github.com/openmv/openmv/pull/200,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/200,And scripts too.,And scripts too.,True,{}
openmv/openmv,https://github.com/openmv/openmv,201,2017-03-24T16:02:16Z,2017-03-24T16:07:33Z,2017-03-24T16:07:34Z,MERGED,True,9583,0,1,https://github.com/kwagyeman,ZBar Integration Part 1/2.,1,[],https://github.com/openmv/openmv/pull/201,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/201,"Main ZBar code, breaking the commit up because the main file is big.
I will refeactor UMM alloc out of apriltag.c and zbar.c once I'm
finished with this commit stream.
ZBar integration gives us support for basically all 1D linear barcodes.","Main ZBar code, breaking the commit up because the main file is big.
I will refeactor UMM alloc out of apriltag.c and zbar.c once I'm
finished with this commit stream.
ZBar integration gives us support for basically all 1D linear barcodes.",True,{}
openmv/openmv,https://github.com/openmv/openmv,202,2017-03-24T16:47:22Z,2017-03-24T17:18:05Z,2018-12-23T05:18:05Z,MERGED,True,290,0,7,https://github.com/kwagyeman,Integrate ZBar 2/2,1,[],https://github.com/openmv/openmv/pull/202,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/202,ZBar functionality integrated along with an example script.,ZBar functionality integrated along with an example script.,True,{}
openmv/openmv,https://github.com/openmv/openmv,203,2017-03-25T16:49:57Z,2017-03-25T16:54:44Z,2017-03-25T16:54:44Z,MERGED,True,173,2,2,https://github.com/kwagyeman,Image Streaming Code,1,[],https://github.com/openmv/openmv/pull/203,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/203,"The user can now call compressed_for_ide() and compress_for_ide() on an
image to make a jpeg compressed image formatted for transmission over a
data link other than USB. Note that OpenMV IDE will automatically handle
one of these compressed images ending up in the frame buffer and display
it like normal.
To send the image data the user can do:
print(img.compress_for_ide(), end='') # end='' removes newline from print
print(img.compressed_for_ide(), end='') # end='' removes newline from print
uart.write(img.compress_for_ide())
uart.write(img.compressed_for_ide())
and etc. As mentioned above, compress() compresses the image in place.
And that in place compressed image will then end up in the jpeg buffer.
OpenMV IDE will automatically handling decoding these special compressed
images when this happens.
All variations of the above code have been tested and are working.
Note that users should connect via a serial link running at above 1 Megabaud for image streaming...","The user can now call compressed_for_ide() and compress_for_ide() on an
image to make a jpeg compressed image formatted for transmission over a
data link other than USB. Note that OpenMV IDE will automatically handle
one of these compressed images ending up in the frame buffer and display
it like normal.
To send the image data the user can do:
print(img.compress_for_ide(), end='') # end='' removes newline from print
print(img.compressed_for_ide(), end='') # end='' removes newline from print
uart.write(img.compress_for_ide())
uart.write(img.compressed_for_ide())
and etc. As mentioned above, compress() compresses the image in place.
And that in place compressed image will then end up in the jpeg buffer.
OpenMV IDE will automatically handling decoding these special compressed
images when this happens.
All variations of the above code have been tested and are working.
Note that users should connect via a serial link running at above 1 Megabaud for image streaming...",True,{}
openmv/openmv,https://github.com/openmv/openmv,215,2017-04-26T01:18:29Z,2017-04-26T23:04:11Z,2017-04-26T23:04:11Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Pull in upstream quirc fixes from github.,1,[],https://github.com/openmv/openmv/pull/215,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/215,"Keeping code up to date with quirc library commits. (No functional change difference in code execution, but, want to make sure I'm tracking the upstream on every change).","Keeping code up to date with quirc library commits. (No functional change difference in code execution, but, want to make sure I'm tracking the upstream on every change).",True,{}
openmv/openmv,https://github.com/openmv/openmv,216,2017-04-27T02:52:33Z,2017-04-27T02:55:06Z,2017-04-27T02:55:06Z,MERGED,True,745,1422,7,https://github.com/kwagyeman,Refactor umm_malloc into it's own file.,1,[],https://github.com/openmv/openmv/pull/216,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/216,"We now have a nice and fast malloc system that easily offers 300KB+
dynamic memory... No need to use xalloc anymore except when we're
transfering objects to MP memory space.","We now have a nice and fast malloc system that easily offers 300KB+
dynamic memory... No need to use xalloc anymore except when we're
transfering objects to MP memory space.",True,{}
openmv/openmv,https://github.com/openmv/openmv,217,2017-04-27T04:24:09Z,2017-04-27T04:32:17Z,2017-04-27T04:32:17Z,MERGED,True,7,9,1,https://github.com/kwagyeman,Fix UMM_Refactor Issues.,1,[],https://github.com/openmv/openmv/pull/217,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/217,"Memory allocation will grow organically now when more RAM is available.
... Note for the H7 we'll have to revisit the constant I'm using here to reserve space. It can be as low as 6 on the F7 and the algorithm will still work.  However, this means the hash table has less space. Raising the constant gives the hash table more space but takes away from the memory pool. On the F7 a value of 8 for the constant works great... but, if you scale the resolution up to 320x240 on the H7 you run into RAM issues  which favor using a constant value of 6. We'll need to wait and see how much RAM is on the high end H7 devices.","Memory allocation will grow organically now when more RAM is available.
... Note for the H7 we'll have to revisit the constant I'm using here to reserve space. It can be as low as 6 on the F7 and the algorithm will still work.  However, this means the hash table has less space. Raising the constant gives the hash table more space but takes away from the memory pool. On the F7 a value of 8 for the constant works great... but, if you scale the resolution up to 320x240 on the H7 you run into RAM issues  which favor using a constant value of 6. We'll need to wait and see how much RAM is on the high end H7 devices.",True,{}
openmv/openmv,https://github.com/openmv/openmv,218,2017-04-27T04:44:59Z,2017-04-27T05:17:16Z,2017-04-27T05:17:16Z,MERGED,True,2,2,2,https://github.com/kwagyeman,Fix typos.,1,[],https://github.com/openmv/openmv/pull/218,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/218,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,219,2017-04-28T08:08:12Z,2017-04-30T00:12:14Z,2017-04-30T03:43:32Z,CLOSED,False,36,3,2,https://github.com/rmokerone,Add chinese readme,3,[],https://github.com/openmv/openmv/pull/219,https://github.com/rmokerone,1,https://github.com/openmv/openmv/pull/219,"Modified the README syntax error, and added the Chinese translation.","Modified the README syntax error, and added the Chinese translation.",True,{}
openmv/openmv,https://github.com/openmv/openmv,219,2017-04-28T08:08:12Z,2017-04-30T00:12:14Z,2017-04-30T03:43:32Z,CLOSED,False,36,3,2,https://github.com/rmokerone,Add chinese readme,3,[],https://github.com/openmv/openmv/pull/219,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/219#issuecomment-298033609,"Modified the README syntax error, and added the Chinese translation.","Hi,
Thanks for the PR, what's oopy.org and why do you add it to our readme ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,219,2017-04-28T08:08:12Z,2017-04-30T00:12:14Z,2017-04-30T03:43:32Z,CLOSED,False,36,3,2,https://github.com/rmokerone,Add chinese readme,3,[],https://github.com/openmv/openmv/pull/219,https://github.com/rmokerone,3,https://github.com/openmv/openmv/pull/219#issuecomment-298142828,"Modified the README syntax error, and added the Chinese translation.","oopy.org is an open source hardware organization in China. We add this URL in this document, only to illustrate that this document is translated(翻译) by the oopy organization:-D",True,{}
openmv/openmv,https://github.com/openmv/openmv,219,2017-04-28T08:08:12Z,2017-04-30T00:12:14Z,2017-04-30T03:43:32Z,CLOSED,False,36,3,2,https://github.com/rmokerone,Add chinese readme,3,[],https://github.com/openmv/openmv/pull/219,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/219#issuecomment-298202485,"Modified the README syntax error, and added the Chinese translation.","I'm sorry but we can't reference an organization which we're not affiliated with, plus the README is really outdated, I'm going to update it in the following days, if you would like to translate the new one without references you're welcome.",True,{'LAUGH': ['https://github.com/rmokerone']}
openmv/openmv,https://github.com/openmv/openmv,219,2017-04-28T08:08:12Z,2017-04-30T00:12:14Z,2017-04-30T03:43:32Z,CLOSED,False,36,3,2,https://github.com/rmokerone,Add chinese readme,3,[],https://github.com/openmv/openmv/pull/219,https://github.com/rmokerone,5,https://github.com/openmv/openmv/pull/219#issuecomment-298208969,"Modified the README syntax error, and added the Chinese translation.","I am very happy to contribute to this project.I did not notice the issue of the organization. If there is a mistake, please forgive me.Thanks again.
PS:Please update README as soon as possible.This is too old.",True,{}
openmv/openmv,https://github.com/openmv/openmv,220,2017-04-28T13:57:46Z,2017-04-28T15:49:44Z,2017-04-30T03:40:55Z,MERGED,True,19,0,3,https://github.com/rmokerone,Add image.raw() function.,1,[],https://github.com/openmv/openmv/pull/220,https://github.com/rmokerone,1,https://github.com/openmv/openmv/pull/220,"Sometimes we need to get raw pixels. So, I wrote such a function, can return   the original information. The function returns bytes and prints the number of bytes.
>>> img = sensor.snapshot()
>>> dat = img.raw()
153600
>>> type(dat)
<class 'bytes'>
>>> data[0:10]
b'\x84\x91\x84\x92\x9c\x92\x9c\x92\x9c\x92'","Sometimes we need to get raw pixels. So, I wrote such a function, can return   the original information. The function returns bytes and prints the number of bytes.
>>> img = sensor.snapshot()
>>> dat = img.raw()
153600
>>> type(dat)
<class 'bytes'>
>>> data[0:10]
b'\x84\x91\x84\x92\x9c\x92\x9c\x92\x9c\x92'",True,{}
openmv/openmv,https://github.com/openmv/openmv,220,2017-04-28T13:57:46Z,2017-04-28T15:49:44Z,2017-04-30T03:40:55Z,MERGED,True,19,0,3,https://github.com/rmokerone,Add image.raw() function.,1,[],https://github.com/openmv/openmv/pull/220,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/220#issuecomment-298035269,"Sometimes we need to get raw pixels. So, I wrote such a function, can return   the original information. The function returns bytes and prints the number of bytes.
>>> img = sensor.snapshot()
>>> dat = img.raw()
153600
>>> type(dat)
<class 'bytes'>
>>> data[0:10]
b'\x84\x91\x84\x92\x9c\x92\x9c\x92\x9c\x92'","Interesting. Um, question - Images can be accessed directly using [] indexing which returns the pixels. What's the rational behind raw byte access versus raw pixel access which is already built-in?",True,{}
openmv/openmv,https://github.com/openmv/openmv,220,2017-04-28T13:57:46Z,2017-04-28T15:49:44Z,2017-04-30T03:40:55Z,MERGED,True,19,0,3,https://github.com/rmokerone,Add image.raw() function.,1,[],https://github.com/openmv/openmv/pull/220,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/220#issuecomment-298037624,"Sometimes we need to get raw pixels. So, I wrote such a function, can return   the original information. The function returns bytes and prints the number of bytes.
>>> img = sensor.snapshot()
>>> dat = img.raw()
153600
>>> type(dat)
<class 'bytes'>
>>> data[0:10]
b'\x84\x91\x84\x92\x9c\x92\x9c\x92\x9c\x92'","@kwagyeman @rmokerone That's true, I implemented the subscr function in image class long time ago and forgot about it, I'll revert this PR.",True,{}
openmv/openmv,https://github.com/openmv/openmv,220,2017-04-28T13:57:46Z,2017-04-28T15:49:44Z,2017-04-30T03:40:55Z,MERGED,True,19,0,3,https://github.com/rmokerone,Add image.raw() function.,1,[],https://github.com/openmv/openmv/pull/220,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/220#issuecomment-298052946,"Sometimes we need to get raw pixels. So, I wrote such a function, can return   the original information. The function returns bytes and prints the number of bytes.
>>> img = sensor.snapshot()
>>> dat = img.raw()
153600
>>> type(dat)
<class 'bytes'>
>>> data[0:10]
b'\x84\x91\x84\x92\x9c\x92\x9c\x92\x9c\x92'","I'm okay with adding a raw function for total byte access. Just want to know why though. If you want to serialize images you can just pass them to functions which send data because images are treated as buffer objects for uart.write()/spi.send() etc. If that was your use case for raw() then it is not needed as it's already built-in. raw() is only useful for byte level modification access of an image... which, I'm not sure what's that good for.",True,{}
openmv/openmv,https://github.com/openmv/openmv,220,2017-04-28T13:57:46Z,2017-04-28T15:49:44Z,2017-04-30T03:40:55Z,MERGED,True,19,0,3,https://github.com/rmokerone,Add image.raw() function.,1,[],https://github.com/openmv/openmv/pull/220,https://github.com/rmokerone,5,https://github.com/openmv/openmv/pull/220#issuecomment-298143831,"Sometimes we need to get raw pixels. So, I wrote such a function, can return   the original information. The function returns bytes and prints the number of bytes.
>>> img = sensor.snapshot()
>>> dat = img.raw()
153600
>>> type(dat)
<class 'bytes'>
>>> data[0:10]
b'\x84\x91\x84\x92\x9c\x92\x9c\x92\x9c\x92'","@iabdalkader Thank you for your reply.I have seen subscr function, but this function can only return one pixel at a time.I want to access multiple pixels at once. Perhaps I can rewrite the subscr function, let it return a bytes type.",True,{}
openmv/openmv,https://github.com/openmv/openmv,220,2017-04-28T13:57:46Z,2017-04-28T15:49:44Z,2017-04-30T03:40:55Z,MERGED,True,19,0,3,https://github.com/rmokerone,Add image.raw() function.,1,[],https://github.com/openmv/openmv/pull/220,https://github.com/rmokerone,6,https://github.com/openmv/openmv/pull/220#issuecomment-298144124,"Sometimes we need to get raw pixels. So, I wrote such a function, can return   the original information. The function returns bytes and prints the number of bytes.
>>> img = sensor.snapshot()
>>> dat = img.raw()
153600
>>> type(dat)
<class 'bytes'>
>>> data[0:10]
b'\x84\x91\x84\x92\x9c\x92\x9c\x92\x9c\x92'","@kwagyeman Thank you very much, I did not know image types can be passed directly to the spi.write() .Now know, thanks again.",True,{}
openmv/openmv,https://github.com/openmv/openmv,220,2017-04-28T13:57:46Z,2017-04-28T15:49:44Z,2017-04-30T03:40:55Z,MERGED,True,19,0,3,https://github.com/rmokerone,Add image.raw() function.,1,[],https://github.com/openmv/openmv/pull/220,https://github.com/kwagyeman,7,https://github.com/openmv/openmv/pull/220#issuecomment-298144262,"Sometimes we need to get raw pixels. So, I wrote such a function, can return   the original information. The function returns bytes and prints the number of bytes.
>>> img = sensor.snapshot()
>>> dat = img.raw()
153600
>>> type(dat)
<class 'bytes'>
>>> data[0:10]
b'\x84\x91\x84\x92\x9c\x92\x9c\x92\x9c\x92'","Hi, I'll make the subscr function allow splices so you can get multiple bytes at a time. However, this will use a lot of ram for a large splice. So be careful. I'll push a PR for this tomorrow.",True,{'THUMBS_UP': ['https://github.com/rmokerone']}
openmv/openmv,https://github.com/openmv/openmv,220,2017-04-28T13:57:46Z,2017-04-28T15:49:44Z,2017-04-30T03:40:55Z,MERGED,True,19,0,3,https://github.com/rmokerone,Add image.raw() function.,1,[],https://github.com/openmv/openmv/pull/220,https://github.com/rmokerone,8,https://github.com/openmv/openmv/pull/220#issuecomment-298209049,"Sometimes we need to get raw pixels. So, I wrote such a function, can return   the original information. The function returns bytes and prints the number of bytes.
>>> img = sensor.snapshot()
>>> dat = img.raw()
153600
>>> type(dat)
<class 'bytes'>
>>> data[0:10]
b'\x84\x91\x84\x92\x9c\x92\x9c\x92\x9c\x92'",@kwagyeman See this feature very happy. thank you~,True,{}
openmv/openmv,https://github.com/openmv/openmv,221,2017-04-28T16:02:14Z,2017-04-28T16:02:58Z,2018-07-18T00:58:05Z,MERGED,True,0,19,3,https://github.com/iabdalkader,"Revert ""Add image.raw() function.""",1,[],https://github.com/openmv/openmv/pull/221,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/221,"Reverts #220
Function py_image_subscr allows pixel access.","Reverts #220
Function py_image_subscr allows pixel access.",True,{}
openmv/openmv,https://github.com/openmv/openmv,222,2017-04-28T23:59:26Z,2017-04-29T00:03:09Z,2017-04-29T00:03:09Z,MERGED,True,6616,0,9,https://github.com/kwagyeman,Add data matrix support.,1,[],https://github.com/openmv/openmv/pull/222,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/222,Add support for decoding data matrices and example scripts.,Add support for decoding data matrices and example scripts.,True,{}
openmv/openmv,https://github.com/openmv/openmv,223,2017-04-29T23:28:31Z,2017-04-30T00:05:34Z,2017-04-30T00:05:34Z,MERGED,True,213,52,2,https://github.com/kwagyeman,Improved subscr and get_buffer,1,[],https://github.com/openmv/openmv/pull/223,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/223,"In response to PR #221.
You can now read and write slices of data to and image at a time.
All changes were tested.","In response to PR #221.
You can now read and write slices of data to and image at a time.
All changes were tested.",True,{}
openmv/openmv,https://github.com/openmv/openmv,224,2017-05-01T00:12:36Z,2017-05-01T01:51:28Z,2017-05-01T01:51:28Z,MERGED,True,9,5,3,https://github.com/kwagyeman,Add ID string to arch output.,1,[],https://github.com/openmv/openmv/pull/224,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/224,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,226,2017-05-06T18:32:58Z,2017-05-06T21:22:32Z,2017-05-06T21:22:32Z,MERGED,True,541,106,6,https://github.com/kwagyeman,Improved find_lines,1,[],https://github.com/openmv/openmv/pull/226,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/226,"Frame rate now can hit 30 FPS when JPEG compression is off. Merging of
lines is perfected too which greatly reduces the noise output. Also,
lines are now objects so you can get their values in an easy way.","Frame rate now can hit 30 FPS when JPEG compression is off. Merging of
lines is perfected too which greatly reduces the noise output. Also,
lines are now objects so you can get their values in an easy way.",True,{}
openmv/openmv,https://github.com/openmv/openmv,228,2017-05-11T01:44:17Z,2017-05-11T11:52:53Z,2017-05-11T11:52:54Z,MERGED,True,822,126,7,https://github.com/kwagyeman,Add find_line_segments,1,[],https://github.com/openmv/openmv/pull/228,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/228,"The OpenMV Cam can now find infinite lines and line segments from those
infinite lines. find_lines had to be re-worked to allow all this to work.","The OpenMV Cam can now find infinite lines and line segments from those
infinite lines. find_lines had to be re-worked to allow all this to work.",True,{}
openmv/openmv,https://github.com/openmv/openmv,231,2017-05-23T15:57:27Z,2017-05-23T16:50:16Z,2017-05-23T16:50:16Z,MERGED,True,9,14,1,https://github.com/seth10,Update black_grayscale_line_following.py,3,[],https://github.com/openmv/openmv/pull/231,https://github.com/seth10,1,https://github.com/openmv/openmv/pull/231,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,232,2017-05-26T22:56:59Z,2017-05-27T00:25:31Z,2017-05-27T00:25:31Z,MERGED,True,111,43,6,https://github.com/kwagyeman,Add more resolution combinations.,1,[],https://github.com/openmv/openmv/pull/232,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/232,"With the new frame rate speed increase folks will be asking for smaller
resolutions to get 85 FPS or so when running an algorithm. This commit
adds all scaled modes of frame sizes we already support. We should be
good now on frame sizes for the present and future now.
Todo - skip frames does not run long enough anymore for auto white
balance and gain to stabilize before they are turned off in some scripts.
This needs to be adjusted.

Yes, this is tested.","With the new frame rate speed increase folks will be asking for smaller
resolutions to get 85 FPS or so when running an algorithm. This commit
adds all scaled modes of frame sizes we already support. We should be
good now on frame sizes for the present and future now.
Todo - skip frames does not run long enough anymore for auto white
balance and gain to stabilize before they are turned off in some scripts.
This needs to be adjusted.

Yes, this is tested.",True,{}
openmv/openmv,https://github.com/openmv/openmv,232,2017-05-26T22:56:59Z,2017-05-27T00:25:31Z,2017-05-27T00:25:31Z,MERGED,True,111,43,6,https://github.com/kwagyeman,Add more resolution combinations.,1,[],https://github.com/openmv/openmv/pull/232,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/232#issuecomment-304412433,"With the new frame rate speed increase folks will be asking for smaller
resolutions to get 85 FPS or so when running an algorithm. This commit
adds all scaled modes of frame sizes we already support. We should be
good now on frame sizes for the present and future now.
Todo - skip frames does not run long enough anymore for auto white
balance and gain to stabilize before they are turned off in some scripts.
This needs to be adjusted.

Yes, this is tested.",Removed the extra QQVGA2 reses.,True,{}
openmv/openmv,https://github.com/openmv/openmv,233,2017-05-27T20:44:23Z,2017-05-27T20:53:13Z,2017-05-27T20:53:13Z,MERGED,True,17,13,3,https://github.com/kwagyeman,Update QRCode,1,[],https://github.com/openmv/openmv/pull/233,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/233,"Fixed issues with QRCode method in response to user reqeust on the
forums: http://forums.openmv.io/viewtopic.php?
f=6&t=286&p=1799&hilit=qrcode#p1799.","Fixed issues with QRCode method in response to user reqeust on the
forums: http://forums.openmv.io/viewtopic.php?
f=6&t=286&p=1799&hilit=qrcode#p1799.",True,{}
openmv/openmv,https://github.com/openmv/openmv,234,2017-05-27T23:34:18Z,2017-05-27T23:38:31Z,2017-05-27T23:38:31Z,MERGED,True,103,77,57,https://github.com/kwagyeman,Change skip_frames() to use a 2 second timeout.,1,[],https://github.com/openmv/openmv/pull/234,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/234,"This was necessary due to the increase in the frame rate. The previous
method did not correlate to time.
All scripts updated.","This was necessary due to the increase in the frame rate. The previous
method did not correlate to time.
All scripts updated.",True,{}
openmv/openmv,https://github.com/openmv/openmv,235,2017-05-29T03:07:54Z,2017-05-29T19:31:39Z,2017-05-29T19:31:39Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix error with compress_for_ide(),1,[],https://github.com/openmv/openmv/pull/235,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/235,Forgot to add size of start and end markers.,Forgot to add size of start and end markers.,True,{}
openmv/openmv,https://github.com/openmv/openmv,237,2017-06-03T18:37:19Z,2017-06-03T18:49:20Z,2017-06-03T18:49:20Z,MERGED,True,66,54,4,https://github.com/kwagyeman,Fixed binary and/or naming.,1,[],https://github.com/openmv/openmv/pull/237,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/237,Left aliases in to keep current code working.,Left aliases in to keep current code working.,True,{}
openmv/openmv,https://github.com/openmv/openmv,238,2017-06-03T19:10:49Z,2017-06-03T19:58:09Z,2017-06-03T19:58:09Z,MERGED,True,10,4,1,https://github.com/kwagyeman,Upstream Kanji fix from quirc.,1,[],https://github.com/openmv/openmv/pull/238,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/238,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,239,2017-06-05T02:00:27Z,2017-06-05T02:01:56Z,2017-06-05T02:01:56Z,MERGED,True,16,2,1,https://github.com/kwagyeman,Add sensor width and height.,1,[],https://github.com/openmv/openmv/pull/239,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/239,"Should have added this a long time ago.
Now we can update all the scripts which have this stuff hard coded.","Should have added this a long time ago.
Now we can update all the scripts which have this stuff hard coded.",True,{}
openmv/openmv,https://github.com/openmv/openmv,241,2017-06-11T03:34:31Z,2017-06-11T17:54:27Z,2017-06-11T17:54:27Z,MERGED,True,159,122,11,https://github.com/kwagyeman,Refactor framebuffer,2,[],https://github.com/openmv/openmv/pull/241,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/241,"Moved structs along with image copying code from sensor into
framebuffer.c so that we can use the new copy_fb_to_jpeg_fb() function
in the image library for methods with ""copy_to_fb"" so that they update
the IDE preview when called. In particular, I need for for my new ImageWriter/Reader classes.
Will send them once this PR is accepted.
Also, I noticed that the MAIN_FB_SIZE() value is not calculated
correctly in all cases. Will fix later. Trying to keep this commit clean
for just the refactoring.
All changes have been tested. Too.","Moved structs along with image copying code from sensor into
framebuffer.c so that we can use the new copy_fb_to_jpeg_fb() function
in the image library for methods with ""copy_to_fb"" so that they update
the IDE preview when called. In particular, I need for for my new ImageWriter/Reader classes.
Will send them once this PR is accepted.
Also, I noticed that the MAIN_FB_SIZE() value is not calculated
correctly in all cases. Will fix later. Trying to keep this commit clean
for just the refactoring.
All changes have been tested. Too.",True,{}
openmv/openmv,https://github.com/openmv/openmv,242,2017-06-11T19:55:26Z,2017-06-11T22:52:13Z,2017-06-11T22:52:13Z,MERGED,True,354,2,6,https://github.com/kwagyeman,Add Image Writer/Reader,1,[],https://github.com/openmv/openmv/pull/242,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/242,"These two new classes allow you to record image data for later viewing
at the same speed the image data was recorded. Unlike GIF/MJPEG the
image data is stored on the file system completely uncompressed in
native frame buffer format making super fast reading and writing
possible. Recording VGA Grayscale at ~13 FPS is possible along with
playing it back. (That's about 30 Mb/s folks).
...
The motivation for writing these scripts is so that you can record video
of something like a line following track, take that video home, and work
on computer vision algorithms for that data.
These classes should make it a lot easier to use the camera at home now.","These two new classes allow you to record image data for later viewing
at the same speed the image data was recorded. Unlike GIF/MJPEG the
image data is stored on the file system completely uncompressed in
native frame buffer format making super fast reading and writing
possible. Recording VGA Grayscale at ~13 FPS is possible along with
playing it back. (That's about 30 Mb/s folks).
...
The motivation for writing these scripts is so that you can record video
of something like a line following track, take that video home, and work
on computer vision algorithms for that data.
These classes should make it a lot easier to use the camera at home now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,243,2017-06-12T05:45:39Z,2017-06-12T17:45:13Z,2017-06-12T17:45:13Z,MERGED,True,45,55,1,https://github.com/kwagyeman,Improve stream file format.,1,[],https://github.com/openmv/openmv/pull/243,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/243,"All chunks are multiples of 16 bytes. Don't want to run into issues with
long alignment now or in the future.","All chunks are multiples of 16 bytes. Don't want to run into issues with
long alignment now or in the future.",True,{}
openmv/openmv,https://github.com/openmv/openmv,244,2017-06-16T05:59:11Z,2017-06-16T14:13:12Z,2017-06-16T14:13:12Z,MERGED,True,96,24,7,https://github.com/kwagyeman,Add corners to code objects,1,[],https://github.com/openmv/openmv/pull/244,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/244,Corners go clock wise from the top left.,Corners go clock wise from the top left.,True,{}
openmv/openmv,https://github.com/openmv/openmv,245,2017-06-18T17:59:54Z,2017-06-18T23:04:19Z,2017-06-18T23:04:19Z,MERGED,True,37,8,1,https://github.com/kwagyeman,Improve image load.,1,[],https://github.com/openmv/openmv/pull/245,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/245,"It now updates the jpeg buffer and will error out if loading an image that is too large.
We should also add a method to flush the jpeg buffer since the example script still requires a call to do that...","It now updates the jpeg buffer and will error out if loading an image that is too large.
We should also add a method to flush the jpeg buffer since the example script still requires a call to do that...",True,{}
openmv/openmv,https://github.com/openmv/openmv,246,2017-06-24T05:30:59Z,2017-06-24T20:56:40Z,2017-06-24T20:56:40Z,MERGED,True,66,81,6,https://github.com/kwagyeman,Cleanup framebuffer code,3,[],https://github.com/openmv/openmv/pull/246,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/246,"No functional changes except fixing a bug with MAIN_FB_SIZE().
Need to add a flush function for the frame buffer so you don't have to call sensor.snapshot(). That's coming next.
Yes, hog works now to... however, the script needs to be fixed since the camera init is done in the wrong order.","No functional changes except fixing a bug with MAIN_FB_SIZE().
Need to add a flush function for the frame buffer so you don't have to call sensor.snapshot(). That's coming next.
Yes, hog works now to... however, the script needs to be fixed since the camera init is done in the wrong order.",True,{}
openmv/openmv,https://github.com/openmv/openmv,247,2017-06-28T05:19:04Z,2017-06-29T16:28:52Z,2017-06-29T16:28:52Z,MERGED,True,586,111,6,https://github.com/kwagyeman,Add linear regression,1,[],https://github.com/openmv/openmv/pull/247,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/247,"For easy line following mainly. In non-robust mode the line is computed
using least squares. In robust mode the line is computed using the
Theil-Sen median of slopes method. We do not use the Siegel Median of
Medians operation because it costs more CPU time... but, more
importantly there's no way to improve the centroid estimate so even if
the slope is more robust the line will be drawn in the wrong place still.
https://en.wikipedia.org/wiki/Theil–Sen_estimator
We can handle about 30% of the points being outliers in robust mode. If we used the Siegel addon we could handle up to about 50% at the cost of more a lot CPU time.","For easy line following mainly. In non-robust mode the line is computed
using least squares. In robust mode the line is computed using the
Theil-Sen median of slopes method. We do not use the Siegel Median of
Medians operation because it costs more CPU time... but, more
importantly there's no way to improve the centroid estimate so even if
the slope is more robust the line will be drawn in the wrong place still.
https://en.wikipedia.org/wiki/Theil–Sen_estimator
We can handle about 30% of the points being outliers in robust mode. If we used the Siegel addon we could handle up to about 50% at the cost of more a lot CPU time.",True,{}
openmv/openmv,https://github.com/openmv/openmv,248,2017-07-03T17:06:55Z,2017-07-03T18:13:10Z,2017-07-03T18:13:10Z,MERGED,True,9,7,2,https://github.com/kwagyeman,Fixed blob issues.,1,[],https://github.com/openmv/openmv/pull/248,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/248,"Angle averaging done correctly using sin/cos now.
Unspecfied color bounds default to least restrictive instead of most
restrictive.","Angle averaging done correctly using sin/cos now.
Unspecfied color bounds default to least restrictive instead of most
restrictive.",True,{}
openmv/openmv,https://github.com/openmv/openmv,249,2017-07-04T18:11:51Z,2017-07-04T18:16:59Z,2017-07-04T18:16:59Z,MERGED,True,532,7,6,https://github.com/kwagyeman,Add find circles.,1,[],https://github.com/openmv/openmv/pull/249,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/249,"Now you can find circles with your OpenMV Cam! The algorithm can eek out
about 7 FPS on a 160x120 image which is quite impressive given how
computationally expensive circle finding is...","Now you can find circles with your OpenMV Cam! The algorithm can eek out
about 7 FPS on a 160x120 image which is quite impressive given how
computationally expensive circle finding is...",True,{}
openmv/openmv,https://github.com/openmv/openmv,250,2017-07-04T18:22:10Z,2017-07-04T18:52:18Z,2017-07-04T18:52:18Z,MERGED,True,4,1,1,https://github.com/kwagyeman,Fix memory leak with get_regression.,1,[],https://github.com/openmv/openmv/pull/250,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/250,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,251,2017-07-04T22:24:35Z,2017-07-04T22:36:21Z,2017-07-04T22:36:21Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Improve find lines merging.,1,[],https://github.com/openmv/openmv/pull/251,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/251,This prevents the magnitude from growing repeatedly every merge.,This prevents the magnitude from growing repeatedly every merge.,True,{}
openmv/openmv,https://github.com/openmv/openmv,254,2017-07-10T00:15:50Z,2017-07-11T00:52:36Z,2017-07-11T01:24:34Z,MERGED,True,162,3,1,https://github.com/normen,Support for new Haar XML format,7,[],https://github.com/openmv/openmv/pull/254,https://github.com/normen,1,https://github.com/openmv/openmv/pull/254,"So this is my PR for the new Haar XML format with a big caveat - it doesn't seem to work (UPDATE - It works now!) I changed the importer in such a way that it still supports the old files just like before, thats why I made a PR already.

It doesn't support creating the header files for the new format yet because I can't test them
It does allow showing the info and creating binary files from both the new and old XML format
It recognizes the format by itself
(FIXED) The binary files created from the new format load in the OpenMV cam but don't track anything
(FIXED) The new format seems to have a different count of features in the rects and the weakClassifiers, this might be the issue?

Edit: Oh and I also fixed a bug where the -i parameter would create a .cascade file :)","So this is my PR for the new Haar XML format with a big caveat - it doesn't seem to work (UPDATE - It works now!) I changed the importer in such a way that it still supports the old files just like before, thats why I made a PR already.

It doesn't support creating the header files for the new format yet because I can't test them
It does allow showing the info and creating binary files from both the new and old XML format
It recognizes the format by itself
(FIXED) The binary files created from the new format load in the OpenMV cam but don't track anything
(FIXED) The new format seems to have a different count of features in the rects and the weakClassifiers, this might be the issue?

Edit: Oh and I also fixed a bug where the -i parameter would create a .cascade file :)",True,{}
openmv/openmv,https://github.com/openmv/openmv,254,2017-07-10T00:15:50Z,2017-07-11T00:52:36Z,2017-07-11T01:24:34Z,MERGED,True,162,3,1,https://github.com/normen,Support for new Haar XML format,7,[],https://github.com/openmv/openmv/pull/254,https://github.com/normen,2,https://github.com/openmv/openmv/pull/254#issuecomment-313987359,"So this is my PR for the new Haar XML format with a big caveat - it doesn't seem to work (UPDATE - It works now!) I changed the importer in such a way that it still supports the old files just like before, thats why I made a PR already.

It doesn't support creating the header files for the new format yet because I can't test them
It does allow showing the info and creating binary files from both the new and old XML format
It recognizes the format by itself
(FIXED) The binary files created from the new format load in the OpenMV cam but don't track anything
(FIXED) The new format seems to have a different count of features in the rects and the weakClassifiers, this might be the issue?

Edit: Oh and I also fixed a bug where the -i parameter would create a .cascade file :)","I guess the answer is hidden somewhere in this file: https://github.com/opencv/opencv/blob/master/apps/traincascade/cascadeclassifier.cpp
At the bottom where it saves for the old format it uses some kind of index to pick the correct rect and for the new format it seems to leave out ""unused"" rects/features? (getUsedFeaturesIdxMap)
..but its too late over here for me to make sense of it all.. :) If you have a hint I'll try and complete the PR (sans the header generation).",True,{}
openmv/openmv,https://github.com/openmv/openmv,254,2017-07-10T00:15:50Z,2017-07-11T00:52:36Z,2017-07-11T01:24:34Z,MERGED,True,162,3,1,https://github.com/normen,Support for new Haar XML format,7,[],https://github.com/openmv/openmv/pull/254,https://github.com/normen,3,https://github.com/openmv/openmv/pull/254#issuecomment-314004112,"So this is my PR for the new Haar XML format with a big caveat - it doesn't seem to work (UPDATE - It works now!) I changed the importer in such a way that it still supports the old files just like before, thats why I made a PR already.

It doesn't support creating the header files for the new format yet because I can't test them
It does allow showing the info and creating binary files from both the new and old XML format
It recognizes the format by itself
(FIXED) The binary files created from the new format load in the OpenMV cam but don't track anything
(FIXED) The new format seems to have a different count of features in the rects and the weakClassifiers, this might be the issue?

Edit: Oh and I also fixed a bug where the -i parameter would create a .cascade file :)",Its working! Cats! Detected! Me -> Tired & Happy o__O,True,{}
openmv/openmv,https://github.com/openmv/openmv,254,2017-07-10T00:15:50Z,2017-07-11T00:52:36Z,2017-07-11T01:24:34Z,MERGED,True,162,3,1,https://github.com/normen,Support for new Haar XML format,7,[],https://github.com/openmv/openmv/pull/254,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/254#issuecomment-314113113,"So this is my PR for the new Haar XML format with a big caveat - it doesn't seem to work (UPDATE - It works now!) I changed the importer in such a way that it still supports the old files just like before, thats why I made a PR already.

It doesn't support creating the header files for the new format yet because I can't test them
It does allow showing the info and creating binary files from both the new and old XML format
It recognizes the format by itself
(FIXED) The binary files created from the new format load in the OpenMV cam but don't track anything
(FIXED) The new format seems to have a different count of features in the rects and the weakClassifiers, this might be the issue?

Edit: Oh and I also fixed a bug where the -i parameter would create a .cascade file :)","Hi, thanks for the PR, I'll test it tonight 👍",True,{}
openmv/openmv,https://github.com/openmv/openmv,254,2017-07-10T00:15:50Z,2017-07-11T00:52:36Z,2017-07-11T01:24:34Z,MERGED,True,162,3,1,https://github.com/normen,Support for new Haar XML format,7,[],https://github.com/openmv/openmv/pull/254,https://github.com/normen,5,https://github.com/openmv/openmv/pull/254#issuecomment-314279922,"So this is my PR for the new Haar XML format with a big caveat - it doesn't seem to work (UPDATE - It works now!) I changed the importer in such a way that it still supports the old files just like before, thats why I made a PR already.

It doesn't support creating the header files for the new format yet because I can't test them
It does allow showing the info and creating binary files from both the new and old XML format
It recognizes the format by itself
(FIXED) The binary files created from the new format load in the OpenMV cam but don't track anything
(FIXED) The new format seems to have a different count of features in the rects and the weakClassifiers, this might be the issue?

Edit: Oh and I also fixed a bug where the -i parameter would create a .cascade file :)","Lol, looking at the code after sleeping a while I see I do a completely unnecessary loop over the features array while using a counter in that loop to access the array index.. Instead of simply using the array index ;) I'll clean that up.",True,{}
openmv/openmv,https://github.com/openmv/openmv,254,2017-07-10T00:15:50Z,2017-07-11T00:52:36Z,2017-07-11T01:24:34Z,MERGED,True,162,3,1,https://github.com/normen,Support for new Haar XML format,7,[],https://github.com/openmv/openmv/pull/254,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/254#issuecomment-314291505,"So this is my PR for the new Haar XML format with a big caveat - it doesn't seem to work (UPDATE - It works now!) I changed the importer in such a way that it still supports the old files just like before, thats why I made a PR already.

It doesn't support creating the header files for the new format yet because I can't test them
It does allow showing the info and creating binary files from both the new and old XML format
It recognizes the format by itself
(FIXED) The binary files created from the new format load in the OpenMV cam but don't track anything
(FIXED) The new format seems to have a different count of features in the rects and the weakClassifiers, this might be the issue?

Edit: Oh and I also fixed a bug where the -i parameter would create a .cascade file :)","Hi, I tested the new converter vs the old one using the old format, and it generates the same cascade. Will test the new format later. Thanks a lot of the help 👍",True,{}
openmv/openmv,https://github.com/openmv/openmv,254,2017-07-10T00:15:50Z,2017-07-11T00:52:36Z,2017-07-11T01:24:34Z,MERGED,True,162,3,1,https://github.com/normen,Support for new Haar XML format,7,[],https://github.com/openmv/openmv/pull/254,https://github.com/iabdalkader,7,https://github.com/openmv/openmv/pull/254#issuecomment-314292599,"So this is my PR for the new Haar XML format with a big caveat - it doesn't seem to work (UPDATE - It works now!) I changed the importer in such a way that it still supports the old files just like before, thats why I made a PR already.

It doesn't support creating the header files for the new format yet because I can't test them
It does allow showing the info and creating binary files from both the new and old XML format
It recognizes the format by itself
(FIXED) The binary files created from the new format load in the OpenMV cam but don't track anything
(FIXED) The new format seems to have a different count of features in the rects and the weakClassifiers, this might be the issue?

Edit: Oh and I also fixed a bug where the -i parameter would create a .cascade file :)",Yep it's working :),True,{}
openmv/openmv,https://github.com/openmv/openmv,254,2017-07-10T00:15:50Z,2017-07-11T00:52:36Z,2017-07-11T01:24:34Z,MERGED,True,162,3,1,https://github.com/normen,Support for new Haar XML format,7,[],https://github.com/openmv/openmv/pull/254,https://github.com/normen,8,https://github.com/openmv/openmv/pull/254#issuecomment-314295775,"So this is my PR for the new Haar XML format with a big caveat - it doesn't seem to work (UPDATE - It works now!) I changed the importer in such a way that it still supports the old files just like before, thats why I made a PR already.

It doesn't support creating the header files for the new format yet because I can't test them
It does allow showing the info and creating binary files from both the new and old XML format
It recognizes the format by itself
(FIXED) The binary files created from the new format load in the OpenMV cam but don't track anything
(FIXED) The new format seems to have a different count of features in the rects and the weakClassifiers, this might be the issue?

Edit: Oh and I also fixed a bug where the -i parameter would create a .cascade file :)","Aww what a cutie :)
As said I didn't change the header generation but I guess you'll only need that when you plan to add new built-in cascades and then you can change it yourself based on my changes, I guess this is what most users will want.
All the best with the project!",True,{}
openmv/openmv,https://github.com/openmv/openmv,255,2017-07-13T05:26:58Z,2017-07-13T16:44:09Z,2017-07-13T16:44:09Z,MERGED,True,423,10,7,https://github.com/kwagyeman,Add find_rects() using AprilTag's quad detector.,1,[],https://github.com/openmv/openmv/pull/255,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/255,It's awesome.,It's awesome.,True,{}
openmv/openmv,https://github.com/openmv/openmv,257,2017-07-22T19:42:07Z,2017-10-03T06:41:06Z,2017-10-03T06:41:06Z,CLOSED,False,0,0,0,https://github.com/kwagyeman,Add code to deal with serial drivers that drop bytes,0,[],https://github.com/openmv/openmv/pull/257,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/257,The IDE will use the new learn MTU command to split up frame buffer requests. I've tested this with IDE code and it works fine. That is pushed to openmv-ide.,The IDE will use the new learn MTU command to split up frame buffer requests. I've tested this with IDE code and it works fine. That is pushed to openmv-ide.,True,{}
openmv/openmv,https://github.com/openmv/openmv,258,2017-08-07T05:40:39Z,2017-08-07T12:47:30Z,2017-08-07T12:47:30Z,MERGED,True,41,17,3,https://github.com/kwagyeman,Fixed issues with polar math code.,3,[],https://github.com/openmv/openmv/pull/258,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/258,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,259,2017-08-23T10:19:10Z,2017-08-23T17:02:04Z,2017-08-23T17:06:16Z,MERGED,True,33,7,1,https://github.com/neurodroid,Update to latest openmv API,1,[],https://github.com/openmv/openmv/pull/259,https://github.com/neurodroid,1,https://github.com/openmv/openmv/pull/259,"Make this script work as a standalone program, and update to latest openmv API","Make this script work as a standalone program, and update to latest openmv API",True,{}
openmv/openmv,https://github.com/openmv/openmv,259,2017-08-23T10:19:10Z,2017-08-23T17:02:04Z,2017-08-23T17:06:16Z,MERGED,True,33,7,1,https://github.com/neurodroid,Update to latest openmv API,1,[],https://github.com/openmv/openmv/pull/259,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/259#issuecomment-324400231,"Make this script work as a standalone program, and update to latest openmv API","Hi,
Thanks for the PR. This script is not used or maintained anymore, I kept it around as an example for using pygame to display the framebuffer. If you're interested in fixing it more, you should add calls stop_script() enable_fb() after calling init:
#Interrupt main.py
openmv.stop_script()

# Enable Framebuffer
openmv.enable_fb(True)",True,{}
openmv/openmv,https://github.com/openmv/openmv,263,2017-09-13T04:40:34Z,2017-09-13T16:09:51Z,2018-12-23T05:18:03Z,MERGED,True,2741,44,10,https://github.com/kwagyeman,Lsd,2,[],https://github.com/openmv/openmv/pull/263,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/263,More stable line segment detection for folks using it to do actual precise line segment detection.,More stable line segment detection for folks using it to do actual precise line segment detection.,True,{}
openmv/openmv,https://github.com/openmv/openmv,267,2017-10-03T06:51:53Z,2017-10-03T10:50:05Z,2017-10-03T10:50:05Z,MERGED,True,9,0,2,https://github.com/kwagyeman,Disable find line segments on the M4.,1,[],https://github.com/openmv/openmv/pull/267,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/267,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,276,2017-10-17T05:16:59Z,2017-10-17T10:38:16Z,2017-10-17T10:38:16Z,MERGED,True,2,2,2,https://github.com/kwagyeman,Use special version of nlr_raise again.,1,[],https://github.com/openmv/openmv/pull/276,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/276,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,277,2017-10-27T05:22:50Z,2017-10-27T10:48:49Z,2017-10-27T10:48:49Z,MERGED,True,252,7,6,https://github.com/kwagyeman,Add perspective rotation correction code.,1,[],https://github.com/openmv/openmv/pull/277,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/277,"This code will help you undo image rotation issues in the X/Y/Z
direction. The demo shows off the frame buffer spinning around.","This code will help you undo image rotation issues in the X/Y/Z
direction. The demo shows off the frame buffer spinning around.",True,{}
openmv/openmv,https://github.com/openmv/openmv,278,2017-10-28T04:32:07Z,2017-10-30T00:07:30Z,2017-10-30T00:07:30Z,MERGED,True,27,3,3,https://github.com/kwagyeman,Fix up lens_correction and add example script.,1,[],https://github.com/openmv/openmv/pull/278,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/278,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,282,2017-11-19T06:49:11Z,2017-11-19T11:31:29Z,2017-11-19T11:31:29Z,MERGED,True,116,114,1,https://github.com/kwagyeman,Improved the performance of the get_regression() robust linear regression code for racing.,1,[],https://github.com/openmv/openmv/pull/282,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/282,"No more memcpys all over the place. Not sure why I was doing that.
... code must have been written by an idiot before :) (me).
It can handle 5X more pixels than before (that said, the N^2 nature means you still need to keep the number of points low).","No more memcpys all over the place. Not sure why I was doing that.
... code must have been written by an idiot before :) (me).
It can handle 5X more pixels than before (that said, the N^2 nature means you still need to keep the number of points low).",True,{}
openmv/openmv,https://github.com/openmv/openmv,283,2017-12-06T08:29:14Z,2017-12-07T09:26:41Z,2017-12-07T09:26:41Z,MERGED,True,1,1,1,https://github.com/falkoschindler,changing sign of z_rotation() to follow conventions of a right-handed coordinate system...,1,[],https://github.com/openmv/openmv/pull/283,https://github.com/falkoschindler,1,https://github.com/openmv/openmv/pull/283,"...with yaw, pitch and roll defined as right-handed rotations about z-, y- and x-axis (http://nghiaho.com/?page_id=846, http://planning.cs.uiuc.edu/node102.html)
This commit partly reverts pull request #200: https://github.com/openmv/openmv/pull/200/files
This commit relates to a discussion in the OpenMV forum: http://forums.openmv.io/viewtopic.php?f=6&t=538
Note that apriltag.rotation() is probably effected by this change. But it should rather remain being a clockwise rotation.
The documentation should now read as follows:

Coordinate frame of OpenMV Camera:
Origin: projection center of the camera
X-axis: pointing to the right (with respect to camera image)
Y-axis: pointing up (with respect to camera image)
Z-axis: pointing towards the camera (Z coordinate corresponds to negative distance, completing a right-handed coordinate frame)
Coordinate frame of an AprilTag:
Origin: marker center
X-axis: pointing to the right
Y-axis: pointing down
Z-axis: pointing into the marker (completing a right-handed coordinate frame)
The directions refer to an ""upright"" AprilTag as shown here: https://april.eecs.umich.edu/software/apriltag.html.
Translation and rotation of a detected AprilTag:
x_translation: translation from left to right with respect to the camera projection center as seen by the camera
y_translation: translation from bottom to top with respect to the camera projection center as seen by the camera
z_translation: negative z-distance between AprilTag and camera projection center, increases towards 0 when getting closer
x_rotation: rotation around the AprilTag's left-to-right x-axis, increases when lifting its upper half
y_rotation: rotation around the AprilTag's top-to-bottom y-axis, increases when lifting its left half
z_rotation: rotation around the AprilTag's z-axis, increases when turning counterclockwise
The concatenated translation and rotation of the AprilTag can be imagined like this:
Start with both coordinate frames aligned to each other. Translate the AprilTag to its (x, y, z) location within the camera frame. Rotate it around its z-axis, then its y-axis and finally its x-axis - using a so-called body-fixed frame of reference.","...with yaw, pitch and roll defined as right-handed rotations about z-, y- and x-axis (http://nghiaho.com/?page_id=846, http://planning.cs.uiuc.edu/node102.html)
This commit partly reverts pull request #200: https://github.com/openmv/openmv/pull/200/files
This commit relates to a discussion in the OpenMV forum: http://forums.openmv.io/viewtopic.php?f=6&t=538
Note that apriltag.rotation() is probably effected by this change. But it should rather remain being a clockwise rotation.
The documentation should now read as follows:

Coordinate frame of OpenMV Camera:
Origin: projection center of the camera
X-axis: pointing to the right (with respect to camera image)
Y-axis: pointing up (with respect to camera image)
Z-axis: pointing towards the camera (Z coordinate corresponds to negative distance, completing a right-handed coordinate frame)
Coordinate frame of an AprilTag:
Origin: marker center
X-axis: pointing to the right
Y-axis: pointing down
Z-axis: pointing into the marker (completing a right-handed coordinate frame)
The directions refer to an ""upright"" AprilTag as shown here: https://april.eecs.umich.edu/software/apriltag.html.
Translation and rotation of a detected AprilTag:
x_translation: translation from left to right with respect to the camera projection center as seen by the camera
y_translation: translation from bottom to top with respect to the camera projection center as seen by the camera
z_translation: negative z-distance between AprilTag and camera projection center, increases towards 0 when getting closer
x_rotation: rotation around the AprilTag's left-to-right x-axis, increases when lifting its upper half
y_rotation: rotation around the AprilTag's top-to-bottom y-axis, increases when lifting its left half
z_rotation: rotation around the AprilTag's z-axis, increases when turning counterclockwise
The concatenated translation and rotation of the AprilTag can be imagined like this:
Start with both coordinate frames aligned to each other. Translate the AprilTag to its (x, y, z) location within the camera frame. Rotate it around its z-axis, then its y-axis and finally its x-axis - using a so-called body-fixed frame of reference.",True,{}
openmv/openmv,https://github.com/openmv/openmv,283,2017-12-06T08:29:14Z,2017-12-07T09:26:41Z,2017-12-07T09:26:41Z,MERGED,True,1,1,1,https://github.com/falkoschindler,changing sign of z_rotation() to follow conventions of a right-handed coordinate system...,1,[],https://github.com/openmv/openmv/pull/283,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/283#issuecomment-349623447,"...with yaw, pitch and roll defined as right-handed rotations about z-, y- and x-axis (http://nghiaho.com/?page_id=846, http://planning.cs.uiuc.edu/node102.html)
This commit partly reverts pull request #200: https://github.com/openmv/openmv/pull/200/files
This commit relates to a discussion in the OpenMV forum: http://forums.openmv.io/viewtopic.php?f=6&t=538
Note that apriltag.rotation() is probably effected by this change. But it should rather remain being a clockwise rotation.
The documentation should now read as follows:

Coordinate frame of OpenMV Camera:
Origin: projection center of the camera
X-axis: pointing to the right (with respect to camera image)
Y-axis: pointing up (with respect to camera image)
Z-axis: pointing towards the camera (Z coordinate corresponds to negative distance, completing a right-handed coordinate frame)
Coordinate frame of an AprilTag:
Origin: marker center
X-axis: pointing to the right
Y-axis: pointing down
Z-axis: pointing into the marker (completing a right-handed coordinate frame)
The directions refer to an ""upright"" AprilTag as shown here: https://april.eecs.umich.edu/software/apriltag.html.
Translation and rotation of a detected AprilTag:
x_translation: translation from left to right with respect to the camera projection center as seen by the camera
y_translation: translation from bottom to top with respect to the camera projection center as seen by the camera
z_translation: negative z-distance between AprilTag and camera projection center, increases towards 0 when getting closer
x_rotation: rotation around the AprilTag's left-to-right x-axis, increases when lifting its upper half
y_rotation: rotation around the AprilTag's top-to-bottom y-axis, increases when lifting its left half
z_rotation: rotation around the AprilTag's z-axis, increases when turning counterclockwise
The concatenated translation and rotation of the AprilTag can be imagined like this:
Start with both coordinate frames aligned to each other. Translate the AprilTag to its (x, y, z) location within the camera frame. Rotate it around its z-axis, then its y-axis and finally its x-axis - using a so-called body-fixed frame of reference.",@kwagyeman,True,{}
openmv/openmv,https://github.com/openmv/openmv,283,2017-12-06T08:29:14Z,2017-12-07T09:26:41Z,2017-12-07T09:26:41Z,MERGED,True,1,1,1,https://github.com/falkoschindler,changing sign of z_rotation() to follow conventions of a right-handed coordinate system...,1,[],https://github.com/openmv/openmv/pull/283,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/283#issuecomment-349867353,"...with yaw, pitch and roll defined as right-handed rotations about z-, y- and x-axis (http://nghiaho.com/?page_id=846, http://planning.cs.uiuc.edu/node102.html)
This commit partly reverts pull request #200: https://github.com/openmv/openmv/pull/200/files
This commit relates to a discussion in the OpenMV forum: http://forums.openmv.io/viewtopic.php?f=6&t=538
Note that apriltag.rotation() is probably effected by this change. But it should rather remain being a clockwise rotation.
The documentation should now read as follows:

Coordinate frame of OpenMV Camera:
Origin: projection center of the camera
X-axis: pointing to the right (with respect to camera image)
Y-axis: pointing up (with respect to camera image)
Z-axis: pointing towards the camera (Z coordinate corresponds to negative distance, completing a right-handed coordinate frame)
Coordinate frame of an AprilTag:
Origin: marker center
X-axis: pointing to the right
Y-axis: pointing down
Z-axis: pointing into the marker (completing a right-handed coordinate frame)
The directions refer to an ""upright"" AprilTag as shown here: https://april.eecs.umich.edu/software/apriltag.html.
Translation and rotation of a detected AprilTag:
x_translation: translation from left to right with respect to the camera projection center as seen by the camera
y_translation: translation from bottom to top with respect to the camera projection center as seen by the camera
z_translation: negative z-distance between AprilTag and camera projection center, increases towards 0 when getting closer
x_rotation: rotation around the AprilTag's left-to-right x-axis, increases when lifting its upper half
y_rotation: rotation around the AprilTag's top-to-bottom y-axis, increases when lifting its left half
z_rotation: rotation around the AprilTag's z-axis, increases when turning counterclockwise
The concatenated translation and rotation of the AprilTag can be imagined like this:
Start with both coordinate frames aligned to each other. Translate the AprilTag to its (x, y, z) location within the camera frame. Rotate it around its z-axis, then its y-axis and finally its x-axis - using a so-called body-fixed frame of reference.","Hi, I'm okay with this fix. I only use the tag's for location detection. Not pose. If you have some ideas in the future for pose let me know. That said, we're not really about doing 3D graphics. So, it would have to be something robotic orientated. I guess maybe a method that takes AprilTag (some number) and spits out your location relative to them would be cool. If you'd like to add that let me know and I'll show you how to do it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,283,2017-12-06T08:29:14Z,2017-12-07T09:26:41Z,2017-12-07T09:26:41Z,MERGED,True,1,1,1,https://github.com/falkoschindler,changing sign of z_rotation() to follow conventions of a right-handed coordinate system...,1,[],https://github.com/openmv/openmv/pull/283,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/283#issuecomment-349867378,"...with yaw, pitch and roll defined as right-handed rotations about z-, y- and x-axis (http://nghiaho.com/?page_id=846, http://planning.cs.uiuc.edu/node102.html)
This commit partly reverts pull request #200: https://github.com/openmv/openmv/pull/200/files
This commit relates to a discussion in the OpenMV forum: http://forums.openmv.io/viewtopic.php?f=6&t=538
Note that apriltag.rotation() is probably effected by this change. But it should rather remain being a clockwise rotation.
The documentation should now read as follows:

Coordinate frame of OpenMV Camera:
Origin: projection center of the camera
X-axis: pointing to the right (with respect to camera image)
Y-axis: pointing up (with respect to camera image)
Z-axis: pointing towards the camera (Z coordinate corresponds to negative distance, completing a right-handed coordinate frame)
Coordinate frame of an AprilTag:
Origin: marker center
X-axis: pointing to the right
Y-axis: pointing down
Z-axis: pointing into the marker (completing a right-handed coordinate frame)
The directions refer to an ""upright"" AprilTag as shown here: https://april.eecs.umich.edu/software/apriltag.html.
Translation and rotation of a detected AprilTag:
x_translation: translation from left to right with respect to the camera projection center as seen by the camera
y_translation: translation from bottom to top with respect to the camera projection center as seen by the camera
z_translation: negative z-distance between AprilTag and camera projection center, increases towards 0 when getting closer
x_rotation: rotation around the AprilTag's left-to-right x-axis, increases when lifting its upper half
y_rotation: rotation around the AprilTag's top-to-bottom y-axis, increases when lifting its left half
z_rotation: rotation around the AprilTag's z-axis, increases when turning counterclockwise
The concatenated translation and rotation of the AprilTag can be imagined like this:
Start with both coordinate frames aligned to each other. Translate the AprilTag to its (x, y, z) location within the camera frame. Rotate it around its z-axis, then its y-axis and finally its x-axis - using a so-called body-fixed frame of reference.","Ibrahim, please merge this PR. Thanks,",True,{}
openmv/openmv,https://github.com/openmv/openmv,284,2017-12-18T03:00:16Z,2017-12-18T13:36:36Z,2018-12-23T05:18:01Z,MERGED,True,135,0,4,https://github.com/kwagyeman,Add chrominace and illuminace invariant image generators.,1,[],https://github.com/openmv/openmv/pull/284,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/284,"Both algorithms were tested on the OpenMV Cam using images loaded from a
file and work correctly. However, shot noise from the sensor.snapshot()
makes the output value somewhat worthless except in a situation unless
you've controlled for it. Anyway, the illuminvar method works best when the
image is constrained to a very particular view point looking at a flat
scene without shadow and then a shadow enters.
(Not adding demo's for these methods since the output looks bad
unless you've put some work into constraining the scene... need to add
HDR code and other stuff to the sensor module to get better images).","Both algorithms were tested on the OpenMV Cam using images loaded from a
file and work correctly. However, shot noise from the sensor.snapshot()
makes the output value somewhat worthless except in a situation unless
you've controlled for it. Anyway, the illuminvar method works best when the
image is constrained to a very particular view point looking at a flat
scene without shadow and then a shadow enters.
(Not adding demo's for these methods since the output looks bad
unless you've put some work into constraining the scene... need to add
HDR code and other stuff to the sensor module to get better images).",True,{}
openmv/openmv,https://github.com/openmv/openmv,285,2017-12-23T20:07:57Z,2017-12-23T20:22:23Z,2017-12-23T20:22:23Z,MERGED,True,325,32,6,https://github.com/kwagyeman,Compare methods,2,[],https://github.com/openmv/openmv/pull/285,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/285,"Squash the two commits if you like. The first one was needed for the SSIM code. Yes, I tested previous code to make sure it still works.","Squash the two commits if you like. The first one was needed for the SSIM code. Yes, I tested previous code to make sure it still works.",True,{}
openmv/openmv,https://github.com/openmv/openmv,286,2017-12-24T02:19:32Z,2017-12-24T15:24:32Z,2017-12-24T15:24:32Z,MERGED,True,4175,7,6,https://github.com/kwagyeman,Add a LUT for illuminvar(),1,[],https://github.com/openmv/openmv/pull/286,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/286,"It's now faster to be more useful.
Need to work on HDR for the sensor and making the sensor output better.
I fixed some issues with the illuminvar() method going crazy when it
gets colors with values near 0... but, the shot noise from the sensor
adds a lot of noise to everything. Fixing this will likely solve a lot
of algorithm problems.","It's now faster to be more useful.
Need to work on HDR for the sensor and making the sensor output better.
I fixed some issues with the illuminvar() method going crazy when it
gets colors with values near 0... but, the shot noise from the sensor
adds a lot of noise to everything. Fixing this will likely solve a lot
of algorithm problems.",True,{}
openmv/openmv,https://github.com/openmv/openmv,287,2017-12-25T03:45:43Z,2017-12-25T17:14:48Z,2017-12-25T17:14:48Z,MERGED,True,56,0,2,https://github.com/kwagyeman,Add extra frame buffer.,1,[],https://github.com/openmv/openmv/pull/287,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/287,"You can now allocate an extra frame buffer for storing images. However,
this takes memory from the main frame buffer. In particular this reduces
the RAM for many methods that do image processing making memory errors
more likely to happen. Note that you may allocate as many extra fb's as
you like. Dealloc happens in reverse order.
Anyway, you can use this method to now storage things like difference
images in RAM allowing for MUCH faster frame difference image
processing.
Moving on, to keep memory management sane... the second fb looks just
like an image and you can use all the image methods to load and update
it, etc. That said, if users deallocate the second FB they need to NOT
use the image pointer anymore. There's no way for me to delete the image
pointer in python right now so this is just something that has to be
manually managed (even if I did setup a deconstructor the second FB is
on a stack... so, things wouldn't work so easily with that).
...
By much faster I mean you can do 42 FPS frame differencing on the M7. 21 FPS after doing get_histogram() to actually do useful work. This is for RGB565. For QQVGA you can do 84 and 42 FPS respectively.
...
I have more commits coming to add error protection code in and whatnot for changing the FB size and allowing for getting images into the extra fb.","You can now allocate an extra frame buffer for storing images. However,
this takes memory from the main frame buffer. In particular this reduces
the RAM for many methods that do image processing making memory errors
more likely to happen. Note that you may allocate as many extra fb's as
you like. Dealloc happens in reverse order.
Anyway, you can use this method to now storage things like difference
images in RAM allowing for MUCH faster frame difference image
processing.
Moving on, to keep memory management sane... the second fb looks just
like an image and you can use all the image methods to load and update
it, etc. That said, if users deallocate the second FB they need to NOT
use the image pointer anymore. There's no way for me to delete the image
pointer in python right now so this is just something that has to be
manually managed (even if I did setup a deconstructor the second FB is
on a stack... so, things wouldn't work so easily with that).
...
By much faster I mean you can do 42 FPS frame differencing on the M7. 21 FPS after doing get_histogram() to actually do useful work. This is for RGB565. For QQVGA you can do 84 and 42 FPS respectively.
...
I have more commits coming to add error protection code in and whatnot for changing the FB size and allowing for getting images into the extra fb.",True,{}
openmv/openmv,https://github.com/openmv/openmv,288,2017-12-25T23:03:06Z,2017-12-26T19:24:01Z,2018-12-23T05:17:59Z,MERGED,True,16,8,2,https://github.com/kwagyeman,Restore MAIN_FB() size on snapshot(),1,[],https://github.com/openmv/openmv/pull/288,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/288,"This fix allows ""copy_to_fb"" with a different resolution than the
current frame buffer to work. It also allows the frame buffer to be
resized, etc. In particular, the pooling methods I added for optical
flow work again... you'll also be able to scale the frame buffer too.
Make sure to rebuild after taking this. Freaking build system needs rebuild all the time...","This fix allows ""copy_to_fb"" with a different resolution than the
current frame buffer to work. It also allows the frame buffer to be
resized, etc. In particular, the pooling methods I added for optical
flow work again... you'll also be able to scale the frame buffer too.
Make sure to rebuild after taking this. Freaking build system needs rebuild all the time...",True,{}
openmv/openmv,https://github.com/openmv/openmv,289,2017-12-26T05:04:08Z,2017-12-26T11:48:11Z,2018-12-23T05:17:57Z,MERGED,True,55,38,3,https://github.com/kwagyeman,Refactor histeq(),1,[],https://github.com/openmv/openmv/pull/289,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/289,"Just updating the code with the same style as other methods. I have
another new sister method for histeq() coming up next which I'll push
as soon as this PR is done. Didn't want to merge the two into one PR.
Code's been tested and there is no performance change.","Just updating the code with the same style as other methods. I have
another new sister method for histeq() coming up next which I'll push
as soon as this PR is done. Didn't want to merge the two into one PR.
Code's been tested and there is no performance change.",True,{}
openmv/openmv,https://github.com/openmv/openmv,290,2017-12-27T19:46:50Z,2017-12-27T22:29:52Z,2018-12-23T05:17:56Z,MERGED,True,177,4,6,https://github.com/kwagyeman,Add frame differencing example scripts.,1,[],https://github.com/openmv/openmv/pull/290,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/290,Better ones that can work in memory now.,Better ones that can work in memory now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,291,2017-12-28T00:26:33Z,2017-12-28T00:56:50Z,2018-12-23T05:17:55Z,MERGED,True,162,34,10,https://github.com/kwagyeman,Add adaptive thresholding to filters.,1,[],https://github.com/openmv/openmv/pull/291,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/291,"I still need to go back and optimizing and cleanup the code. I just
wanted to get the feature in first.
Adaptive thresholding lets you see things like dirty on a white piece of paper that's unevenly lit. There was a question on the forums about this about a week or two ago. This algorithm makes their life easy.","I still need to go back and optimizing and cleanup the code. I just
wanted to get the feature in first.
Adaptive thresholding lets you see things like dirty on a white piece of paper that's unevenly lit. There was a question on the forums about this about a week or two ago. This algorithm makes their life easy.",True,{}
openmv/openmv,https://github.com/openmv/openmv,292,2017-12-30T03:44:23Z,2017-12-30T13:56:12Z,2017-12-30T13:56:12Z,MERGED,True,480,151,12,https://github.com/kwagyeman,Add exposure control for all sensors,9,[],https://github.com/openmv/openmv/pull/292,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/292,"The following commits are for adding exposure control to all sensors. I broke things up into multiple commits as I was working. However, everything is related. I think github has a feature to squash all these commits into a single commit for merging if you like.
Anyway, the code was tested with the example exposure control script with the OV7725. I can't say if the code works on any of the other sensors but it's what needs to be done given the datasheets for those sensors. Will work on HDR in snapshot next.","The following commits are for adding exposure control to all sensors. I broke things up into multiple commits as I was working. However, everything is related. I think github has a feature to squash all these commits into a single commit for merging if you like.
Anyway, the code was tested with the example exposure control script with the OV7725. I can't say if the code works on any of the other sensors but it's what needs to be done given the datasheets for those sensors. Will work on HDR in snapshot next.",True,{}
openmv/openmv,https://github.com/openmv/openmv,293,2017-12-30T21:09:20Z,2017-12-30T21:18:36Z,2017-12-30T21:18:36Z,MERGED,True,261,35,10,https://github.com/kwagyeman,Add auto gain control setting support,1,[],https://github.com/openmv/openmv/pull/293,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/293,"You can now get the auto gain setting in dBs and set the value in dBs.
Example scripts are included. Code was tested on the OV7725.","You can now get the auto gain setting in dBs and set the value in dBs.
Example scripts are included. Code was tested on the OV7725.",True,{}
openmv/openmv,https://github.com/openmv/openmv,294,2017-12-30T22:29:34Z,2017-12-30T22:32:02Z,2017-12-30T22:32:02Z,MERGED,True,81,36,9,https://github.com/kwagyeman,Added hmirror and vflip support to the MT9V034 and example scripts,3,[],https://github.com/openmv/openmv/pull/294,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/294,More sensor fixes...,More sensor fixes...,True,{}
openmv/openmv,https://github.com/openmv/openmv,295,2017-12-31T04:55:52Z,2017-12-31T13:05:51Z,2017-12-31T13:05:51Z,MERGED,True,86,13,10,https://github.com/kwagyeman,Add auto gain control ceiling value to be settable by the auto gain,1,[],https://github.com/openmv/openmv/pull/295,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/295,Things are in dB now too. Need to remove the previous settable method.,Things are in dB now too. Need to remove the previous settable method.,True,{}
openmv/openmv,https://github.com/openmv/openmv,296,2017-12-31T22:32:16Z,2017-12-31T23:55:19Z,2017-12-31T23:55:19Z,MERGED,True,66,46,4,https://github.com/kwagyeman,Fix bugs with sensor auto gain control.,1,[],https://github.com/openmv/openmv/pull/296,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/296,"Note... I noticed when I was double checking this stuff that for the exposure there's this extra line thing which can be used to increase the exposure value... not sure why it's needed but it exists. Registers 2D and 2E basically can be used to increase the exposure like the normal 16-bit exposure reg. Anyway, I don't have plan to include these ever in the exposure calcs. We should always make those registers 0 in our systems.","Note... I noticed when I was double checking this stuff that for the exposure there's this extra line thing which can be used to increase the exposure value... not sure why it's needed but it exists. Registers 2D and 2E basically can be used to increase the exposure like the normal 16-bit exposure reg. Anyway, I don't have plan to include these ever in the exposure calcs. We should always make those registers 0 in our systems.",True,{}
openmv/openmv,https://github.com/openmv/openmv,297,2018-01-01T00:57:50Z,2018-01-01T18:28:15Z,2018-01-01T18:28:15Z,MERGED,True,217,43,11,https://github.com/kwagyeman,Add white balance control.,1,[],https://github.com/openmv/openmv/pull/297,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/297,"You can now get white balance gains from the camera chip and set the
camera to then use these gains again in a new environment (that said, I'm not sure how useful this will be. Try setting 0,0,0 to the white balance gains and you'll see that the color of the light in a different room heavily affects the sensor output).","You can now get white balance gains from the camera chip and set the
camera to then use these gains again in a new environment (that said, I'm not sure how useful this will be. Try setting 0,0,0 to the white balance gains and you'll see that the color of the light in a different room heavily affects the sensor output).",True,{}
openmv/openmv,https://github.com/openmv/openmv,298,2018-01-06T16:28:53Z,2018-01-06T16:42:35Z,2018-12-23T05:18:44Z,MERGED,True,4098,4100,3,https://github.com/kwagyeman,Update invariant table.,1,[],https://github.com/openmv/openmv/pull/298,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/298,Boosted gain by 3X.,Boosted gain by 3X.,True,{}
openmv/openmv,https://github.com/openmv/openmv,299,2018-01-07T22:50:38Z,2018-01-07T23:14:50Z,2018-01-07T23:14:50Z,MERGED,True,702,111,14,https://github.com/kwagyeman,Complete Overhaul of phasecorrelation,1,[],https://github.com/openmv/openmv/pull/299,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/299,"Just doing one big commit/PR here since I noticed that breaking it up
causes issues.
Anyway, these fixes give us GOOD/WORKING/FAST optical flow now on the
OpenMV Cam M7. A number of changes were made to the optical flow
scripts. You have have absolute and differential estimation example
scripts. Additionally, you also have the ability to measure rotation and
scale changes too. Linear/Log Polar conversion was added for this. Users
may use the new code for generic image manipulation too. Finally, I
updated the power of 2 resolutions since you actually HAVE to use them
with optical flow for the phasecorrelation code to work correctly.
I have some more advanced scripts coming after this. But, This commit is
already getting kinda large so I'm stopping it here.","Just doing one big commit/PR here since I noticed that breaking it up
causes issues.
Anyway, these fixes give us GOOD/WORKING/FAST optical flow now on the
OpenMV Cam M7. A number of changes were made to the optical flow
scripts. You have have absolute and differential estimation example
scripts. Additionally, you also have the ability to measure rotation and
scale changes too. Linear/Log Polar conversion was added for this. Users
may use the new code for generic image manipulation too. Finally, I
updated the power of 2 resolutions since you actually HAVE to use them
with optical flow for the phasecorrelation code to work correctly.
I have some more advanced scripts coming after this. But, This commit is
already getting kinda large so I'm stopping it here.",True,{}
openmv/openmv,https://github.com/openmv/openmv,300,2018-01-08T05:13:25Z,2018-01-08T12:58:36Z,2018-01-08T12:58:36Z,MERGED,True,360,10,8,https://github.com/kwagyeman,Add Advanced Optical Flow scripts,1,[],https://github.com/openmv/openmv/pull/300,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/300,"Someone asked me about doing a field of receptors before. These scripts
show how to do that. Also, added example scripts for calling the linear
polar and log polar methods added previously which power
find_rotscale().
Bug fixes are included which make the scripts work.","Someone asked me about doing a field of receptors before. These scripts
show how to do that. Also, added example scripts for calling the linear
polar and log polar methods added previously which power
find_rotscale().
Bug fixes are included which make the scripts work.",True,{}
openmv/openmv,https://github.com/openmv/openmv,301,2018-01-09T06:26:05Z,2018-01-09T12:14:57Z,2018-01-09T12:14:57Z,MERGED,True,15,13,2,https://github.com/kwagyeman,Fixed bugs with logpolar/linpolar.,1,[],https://github.com/openmv/openmv/pull/301,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/301,Images look great now.,Images look great now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,303,2018-01-15T01:07:59Z,2018-01-16T10:36:37Z,2018-01-16T10:36:37Z,MERGED,True,4271,4148,3,https://github.com/kwagyeman,Update to full invariant image.,1,[],https://github.com/openmv/openmv/pull/303,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/303,"This commit updates the shadow free invariant image to 2 colors from
just grayscale. This 2-color image removes less information than the 1-color image.
If we need to save ROM room in the future we'll just disable the LUT and
have the algorithm run with the regular C code. Right now this is not an
issue.","This commit updates the shadow free invariant image to 2 colors from
just grayscale. This 2-color image removes less information than the 1-color image.
If we need to save ROM room in the future we'll just disable the LUT and
have the algorithm run with the regular C code. Right now this is not an
issue.",True,{}
openmv/openmv,https://github.com/openmv/openmv,304,2018-01-16T04:30:35Z,2018-01-16T10:38:43Z,2018-12-23T05:18:43Z,MERGED,True,735,348,17,https://github.com/kwagyeman,Phase Corr Redo 2,1,[],https://github.com/openmv/openmv/pull/304,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/304,"Redid the phase correlation code again so it's one method call now. This
method call can either do logpolar phase correlation to get rotation/
scale or translation(x/y). Additionally, it will be able to also do both
at once. However, I don't have that quite working yet.
I've updated the example scripts to reflect the new code too.
Finally, I had to fix a bug in the rotation correction code.
...
Once I've got the full pipeline working I will post scripts for that. I
have all the code in there and it's been debugged... However, I
can't get a useful phase correlation lock out of the log polar fft mag.
I plan to look into noise filtering and spectral whitening solutions for
this.","Redid the phase correlation code again so it's one method call now. This
method call can either do logpolar phase correlation to get rotation/
scale or translation(x/y). Additionally, it will be able to also do both
at once. However, I don't have that quite working yet.
I've updated the example scripts to reflect the new code too.
Finally, I had to fix a bug in the rotation correction code.
...
Once I've got the full pipeline working I will post scripts for that. I
have all the code in there and it's been debugged... However, I
can't get a useful phase correlation lock out of the log polar fft mag.
I plan to look into noise filtering and spectral whitening solutions for
this.",True,{}
openmv/openmv,https://github.com/openmv/openmv,305,2018-01-17T07:16:11Z,2018-01-17T11:03:05Z,2018-01-17T11:03:05Z,MERGED,True,102,0,4,https://github.com/kwagyeman,Add min()/max() for frame differencing.,1,[],https://github.com/openmv/openmv/pull/305,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/305,"These have cool ghost image like affects and are useful for frame
differencing.","These have cool ghost image like affects and are useful for frame
differencing.",True,{}
openmv/openmv,https://github.com/openmv/openmv,306,2018-01-20T06:57:57Z,2018-01-20T11:54:47Z,2018-01-20T11:54:47Z,MERGED,True,48,7,4,https://github.com/kwagyeman,Add pixel and area threshold settings to get_regression(),1,[],https://github.com/openmv/openmv/pull/306,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/306,"You can now make it not return anything for images with a low pixel
count.","You can now make it not return anything for images with a low pixel
count.",True,{}
openmv/openmv,https://github.com/openmv/openmv,307,2018-01-21T21:42:25Z,2018-01-21T22:34:47Z,2018-01-21T22:34:47Z,MERGED,True,326,29,7,https://github.com/kwagyeman,Frame Differencing with Shadow Removal,1,[],https://github.com/openmv/openmv/pull/307,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/307,"Add in support for shadow removal from the current image using a shadow
free background image. Test results show the algorithm works similar to
max() while still keeping dark objects around. The preformance impact of
the algorithm is not too high. An in memory example can achieve 30 FPS.","Add in support for shadow removal from the current image using a shadow
free background image. Test results show the algorithm works similar to
max() while still keeping dark objects around. The preformance impact of
the algorithm is not too high. An in memory example can achieve 30 FPS.",True,{}
openmv/openmv,https://github.com/openmv/openmv,308,2018-01-22T08:35:30Z,2018-01-23T17:00:17Z,2018-01-23T17:00:17Z,MERGED,True,737,0,5,https://github.com/kwagyeman,Add REPL Uart Ini File Setting Support,1,[],https://github.com/openmv/openmv/pull/308,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/308,"OpenMV IDE includes an ini file generator which will let you set board
settings easily from the IDE. Currently, the IDE has support for setting
the WiFi shield up along with adding a REPL Uart.
Anyway, this commit adds support for the OpenMV Cam to parse an ini file
on startup to configure things before starting main.py. WiFi support is
not yet implmented. However, we now have the ability to turn the UART
and put the REPL terminal on it on startup given a setting in the ini
file.
(Why not use boot.py like normal MP? While that is more flxible it's
much harder for the IDE to easily write out settings for you which is
what most users will want to do versus coding this up).
...
The movitation for adding REPL UART support in particular is so that the
OpenMV Cam can be used as a slave processor to IoT type processors like
the ESP32/ESP8266/ParticlePhoton/ElectricImp. In particular, a processor
like the ParticlePhoton can control the OpenMV Cam's reset wire. Wake
the camera up by releasing reset, then send a script to it after it
powers on over the UART. The camera will then run the script, do
computer vision, and report results back over the UART to the
ParticlePhoton. Users can then push new scripts to the OpenMV Cam from
the cloud allowing for semi-flexible firmware fixes for the OpenMV Cam
over low data rate networks.
By setting this feature up the need for OpenMV to offer a WiFi IoT
system is reduced as we can now just be the best camera for everything.
...
Due to... I don't know... ctrl-c doesn't work on the duplicated UART.
micropython/micropython#1568
Not sure how to handle this. I don't want to fix it since it needs to be
fixed by MP upstream. Right now the work around is for the mastering MCU
to just reset the OpenMV Cam when it's done with the system.
That said, this does mean that once you start a script using the Open
Terminal command line system you won't be able to stop the script.","OpenMV IDE includes an ini file generator which will let you set board
settings easily from the IDE. Currently, the IDE has support for setting
the WiFi shield up along with adding a REPL Uart.
Anyway, this commit adds support for the OpenMV Cam to parse an ini file
on startup to configure things before starting main.py. WiFi support is
not yet implmented. However, we now have the ability to turn the UART
and put the REPL terminal on it on startup given a setting in the ini
file.
(Why not use boot.py like normal MP? While that is more flxible it's
much harder for the IDE to easily write out settings for you which is
what most users will want to do versus coding this up).
...
The movitation for adding REPL UART support in particular is so that the
OpenMV Cam can be used as a slave processor to IoT type processors like
the ESP32/ESP8266/ParticlePhoton/ElectricImp. In particular, a processor
like the ParticlePhoton can control the OpenMV Cam's reset wire. Wake
the camera up by releasing reset, then send a script to it after it
powers on over the UART. The camera will then run the script, do
computer vision, and report results back over the UART to the
ParticlePhoton. Users can then push new scripts to the OpenMV Cam from
the cloud allowing for semi-flexible firmware fixes for the OpenMV Cam
over low data rate networks.
By setting this feature up the need for OpenMV to offer a WiFi IoT
system is reduced as we can now just be the best camera for everything.
...
Due to... I don't know... ctrl-c doesn't work on the duplicated UART.
micropython/micropython#1568
Not sure how to handle this. I don't want to fix it since it needs to be
fixed by MP upstream. Right now the work around is for the mastering MCU
to just reset the OpenMV Cam when it's done with the system.
That said, this does mean that once you start a script using the Open
Terminal command line system you won't be able to stop the script.",True,{}
openmv/openmv,https://github.com/openmv/openmv,309,2018-01-24T06:36:30Z,2018-01-24T12:26:35Z,2018-01-24T12:26:35Z,MERGED,True,80,20,3,https://github.com/kwagyeman,Add more ifdefs to remove OpenMV Cam M4 features...,1,[],https://github.com/openmv/openmv/pull/309,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/309,Since we're flash exhausted....,Since we're flash exhausted....,True,{}
openmv/openmv,https://github.com/openmv/openmv,310,2018-01-25T12:17:54Z,2018-01-25T12:24:17Z,2018-01-25T12:24:18Z,MERGED,True,1,1,1,https://github.com/Xbaal,typo correction,1,[],https://github.com/openmv/openmv/pull/310,https://github.com/Xbaal,1,https://github.com/openmv/openmv/pull/310,just a small typo,just a small typo,True,{}
openmv/openmv,https://github.com/openmv/openmv,311,2018-01-29T00:35:28Z,2018-01-29T16:03:25Z,2018-12-23T05:18:45Z,MERGED,True,825,434,13,https://github.com/kwagyeman,Add single image shadow remover code.,1,[],https://github.com/openmv/openmv/pull/311,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/311,"Calling remove_shadows() on an image without a background source of
truth image now works. However, that said, the shadow remover isn't
suitable for anything other than removing shadow on an image of concrete
floor or something of the like. In general, it can only remove shadows
from a scene that has nothing else in it except for a hard edge shadow.
Improving this to work for anything is about a month of work. I've
researched enough about shadow removal to now know the optimal way to do
it. However, it requires many steps and a large amount of RAM. On the H7
I may revisit this as being possible.
...
In order to get the shadow remover working well I had to add a few
features to the image library and fix the convolution code (mean/median/mode/midpoint/morph).
These fixes will likely be more useful than the shadow removal code.
Note the addition of the new get_threshold() method. This computes
otsu's threshold on a histogram allowing you to pick the optimal color
bounds.","Calling remove_shadows() on an image without a background source of
truth image now works. However, that said, the shadow remover isn't
suitable for anything other than removing shadow on an image of concrete
floor or something of the like. In general, it can only remove shadows
from a scene that has nothing else in it except for a hard edge shadow.
Improving this to work for anything is about a month of work. I've
researched enough about shadow removal to now know the optimal way to do
it. However, it requires many steps and a large amount of RAM. On the H7
I may revisit this as being possible.
...
In order to get the shadow remover working well I had to add a few
features to the image library and fix the convolution code (mean/median/mode/midpoint/morph).
These fixes will likely be more useful than the shadow removal code.
Note the addition of the new get_threshold() method. This computes
otsu's threshold on a histogram allowing you to pick the optimal color
bounds.",True,{}
openmv/openmv,https://github.com/openmv/openmv,312,2018-02-08T06:51:28Z,2018-02-12T20:21:43Z,2018-12-23T05:18:40Z,MERGED,True,145,3,5,https://github.com/kwagyeman,Add wifi_dbg stub.,1,[],https://github.com/openmv/openmv/pull/312,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/312,"All the notes about how to implement wifi programming are in the code.
Steps:

Get wifi_apply_settings() working first and make sure you can turn
the wifi shield on in the right mode. Then add the necessary hooks into
the network code to make it such that previous user wifi code still
works. Also, make sure to handle start and shutdown gracefully.

Basically, get all the lifecycle code working first before moving to the
next step so notning gets in a weird state and bugs creep in...


Get the beacon method working. Once this works OpenMV IDE should see
the camera when you hit the connect button.


Do the code to turn off the regular usbdbg interface and swtich to
having the data come from wifi_dbg. This isn't a lot of code... but,
will be tricky since you no longer will have USB frames to work with.
All bytes are just going to come randomly and in bursts so you have to
handle the serial stream yourself... (Kwabena can help writing a
statemachine for dealing with this type of stuff if you want. I do it
all the time).","All the notes about how to implement wifi programming are in the code.
Steps:

Get wifi_apply_settings() working first and make sure you can turn
the wifi shield on in the right mode. Then add the necessary hooks into
the network code to make it such that previous user wifi code still
works. Also, make sure to handle start and shutdown gracefully.

Basically, get all the lifecycle code working first before moving to the
next step so notning gets in a weird state and bugs creep in...


Get the beacon method working. Once this works OpenMV IDE should see
the camera when you hit the connect button.


Do the code to turn off the regular usbdbg interface and swtich to
having the data come from wifi_dbg. This isn't a lot of code... but,
will be tricky since you no longer will have USB frames to work with.
All bytes are just going to come randomly and in bursts so you have to
handle the serial stream yourself... (Kwabena can help writing a
statemachine for dealing with this type of stuff if you want. I do it
all the time).",True,{}
openmv/openmv,https://github.com/openmv/openmv,314,2018-02-17T22:36:57Z,2018-02-17T22:38:34Z,2018-02-17T22:38:34Z,MERGED,True,7446,0,3,https://github.com/kwagyeman,Add motor shield files.,1,[],https://github.com/openmv/openmv/pull/314,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/314,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,316,2018-02-22T04:56:56Z,2018-02-23T01:54:33Z,2018-02-23T01:54:33Z,MERGED,True,151,88,7,https://github.com/kwagyeman,Add color thresholding support to get_histogram/stats.,1,[],https://github.com/openmv/openmv/pull/316,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/316,"You can now pass a color threshold list to get histogram and get stats
(along with an invert arg) to control what gets put into the histogram.","You can now pass a color threshold list to get histogram and get stats
(along with an invert arg) to control what gets put into the histogram.",True,{}
openmv/openmv,https://github.com/openmv/openmv,317,2018-02-25T05:19:08Z,2018-02-25T13:39:36Z,2018-02-25T13:39:36Z,MERGED,True,1081,443,13,https://github.com/kwagyeman,Overhaul Binary Functions,1,[],https://github.com/openmv/openmv/pull/317,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/317,"Binary() can now zero things so you can remove bright lights. All the
line ops (and/or/xor/etc) accept masks. Erode and dilate now accept
masks. And finally, you can now pass arguments versus keywords for folks
who don't read the documentation. Also, the binary image type is now
supported for these methods.
I'm putting in all this work because I saw the need for it when I was
doing shadow removal. It will come in handy very soon when impmementing
a state-of-the-art shadow removal method.
Note: Some effort needs to be put into optimizing the py_image.c code
soon. This is on the todo list before the next release. Need to make the helper
methods smarter and add more of them.","Binary() can now zero things so you can remove bright lights. All the
line ops (and/or/xor/etc) accept masks. Erode and dilate now accept
masks. And finally, you can now pass arguments versus keywords for folks
who don't read the documentation. Also, the binary image type is now
supported for these methods.
I'm putting in all this work because I saw the need for it when I was
doing shadow removal. It will come in handy very soon when impmementing
a state-of-the-art shadow removal method.
Note: Some effort needs to be put into optimizing the py_image.c code
soon. This is on the todo list before the next release. Need to make the helper
methods smarter and add more of them.",True,{}
openmv/openmv,https://github.com/openmv/openmv,318,2018-02-26T03:06:54Z,2018-02-26T16:35:56Z,2018-02-26T16:35:56Z,MERGED,True,914,237,9,https://github.com/kwagyeman,Cleanup Math Operations,1,[],https://github.com/openmv/openmv/pull/318,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/318,"Add binary image support to the math operations and updated them to
support masks. Replace now also support mirroring operations. Finally,
adding missing basic math ops like add/sub/mul/div. The operations are
designed to work as image blending operations so they take care of
scaling their output accordingly. Additionally, if a user doesn't pass
arguments using keywords we pick them up via the normal args.
I'm going to cleanup the py_image.c file next by adding some helper methods. It's getting rather hard to read/write the code without helper methods. This should reduce the code size and make things more readable.","Add binary image support to the math operations and updated them to
support masks. Replace now also support mirroring operations. Finally,
adding missing basic math ops like add/sub/mul/div. The operations are
designed to work as image blending operations so they take care of
scaling their output accordingly. Additionally, if a user doesn't pass
arguments using keywords we pick them up via the normal args.
I'm going to cleanup the py_image.c file next by adding some helper methods. It's getting rather hard to read/write the code without helper methods. This should reduce the code size and make things more readable.",True,{}
openmv/openmv,https://github.com/openmv/openmv,320,2018-03-03T06:30:47Z,2018-03-03T18:04:58Z,2018-12-23T05:18:39Z,CLOSED,False,787,663,5,https://github.com/kwagyeman,Started improving python argument argument passing.,1,[],https://github.com/openmv/openmv/pull/320,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/320,"In this commit I fixed up about half of the image library method
argument parsing front ends. The fixed up methods now:


Handle both standard and keyword arguments. If the user forgets to
pass the argument as a keyword but passes it in the right position the
method will ""do the right"" thing. If the user passes an argument twice
the method will take the keyword version of the value. Note that python
requires users to pass positional arguments first followed by keywords.


If a drawing method takes an array the method can handle that array
being passed as a list of numbers now. This makes the drawing methods
much easier for newbies to use.


Anyway, I've managed to get about half way through the code. Need to
pivot to other things now. But, I will get back to this later. This fix
will in general allow us to remove all the warnings in the API about
having to call methods with keywords (if you look int he API you will see these warnings everywhere).","In this commit I fixed up about half of the image library method
argument parsing front ends. The fixed up methods now:


Handle both standard and keyword arguments. If the user forgets to
pass the argument as a keyword but passes it in the right position the
method will ""do the right"" thing. If the user passes an argument twice
the method will take the keyword version of the value. Note that python
requires users to pass positional arguments first followed by keywords.


If a drawing method takes an array the method can handle that array
being passed as a list of numbers now. This makes the drawing methods
much easier for newbies to use.


Anyway, I've managed to get about half way through the code. Need to
pivot to other things now. But, I will get back to this later. This fix
will in general allow us to remove all the warnings in the API about
having to call methods with keywords (if you look int he API you will see these warnings everywhere).",True,{}
openmv/openmv,https://github.com/openmv/openmv,321,2018-03-04T19:51:22Z,2018-03-05T14:04:45Z,2018-03-05T14:04:45Z,MERGED,True,1622,1555,11,https://github.com/kwagyeman,Argument Parsing Done Correctly,1,[],https://github.com/openmv/openmv/pull/321,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/321,"All of our argument parsing code has now been updated to handle
positional as well as keyword arguments in our python libraries.
Basically, python allows you to pass some number of positional arguments
to functions/methods followed by keyword arguments (you cannot have more
positional arguments after keyword arguments). Previously, our code
would only look for keyword arguments. Now, it works better and will
grab as many positional arguments as it can followed by processing
keyword arguments. Note: If the case of a positional argument value for
a parameter being passed followed by a keyword for that same parameter
the keyword value is taken (since it comes aftward).
Because arguments were passed in keyword form before this update has no
affect on current code. However, moving forward, argument positions are
now locked and cannot be moved around.","All of our argument parsing code has now been updated to handle
positional as well as keyword arguments in our python libraries.
Basically, python allows you to pass some number of positional arguments
to functions/methods followed by keyword arguments (you cannot have more
positional arguments after keyword arguments). Previously, our code
would only look for keyword arguments. Now, it works better and will
grab as many positional arguments as it can followed by processing
keyword arguments. Note: If the case of a positional argument value for
a parameter being passed followed by a keyword for that same parameter
the keyword value is taken (since it comes aftward).
Because arguments were passed in keyword form before this update has no
affect on current code. However, moving forward, argument positions are
now locked and cannot be moved around.",True,{}
openmv/openmv,https://github.com/openmv/openmv,322,2018-03-12T05:16:29Z,2018-03-12T14:38:25Z,2018-03-12T14:38:25Z,MERGED,True,541,355,17,https://github.com/kwagyeman,Upgrade Drawing Features,2,[],https://github.com/openmv/openmv/pull/322,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/322,"Heavily upgraded the drawing features onboard the OpenMV Cam. We now
have all the basic drawing methods folks expect along with all the
parameters you need. Finally! You can make big text fonts.

Added line thickness support
Added shape fills
Added text scaling
Added draw arrow.","Heavily upgraded the drawing features onboard the OpenMV Cam. We now
have all the basic drawing methods folks expect along with all the
parameters you need. Finally! You can make big text fonts.

Added line thickness support
Added shape fills
Added text scaling
Added draw arrow.",True,{}
openmv/openmv,https://github.com/openmv/openmv,324,2018-03-16T05:29:48Z,2018-03-16T22:04:02Z,2018-03-16T22:04:02Z,MERGED,True,14,6,5,https://github.com/kwagyeman,Add the ability to pull higher scaled text kerning in...,1,[],https://github.com/openmv/openmv/pull/324,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/324,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,325,2018-03-19T02:14:18Z,2018-03-19T12:48:23Z,2018-03-19T12:48:23Z,MERGED,True,1112,709,20,https://github.com/kwagyeman,Improved image filtering operations,3,[],https://github.com/openmv/openmv/pull/325,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/325,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,326,2018-03-20T07:34:13Z,2018-03-20T17:16:29Z,2018-03-20T17:16:29Z,MERGED,True,312,192,8,https://github.com/kwagyeman,Add scalar support,2,[],https://github.com/openmv/openmv/pull/326,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/326,"All our basic ops now support ""color"" scalars. This brings our basic ups to other image library specs.","All our basic ops now support ""color"" scalars. This brings our basic ups to other image library specs.",True,{}
openmv/openmv,https://github.com/openmv/openmv,327,2018-03-26T05:25:13Z,2018-03-26T18:21:25Z,2018-03-26T18:21:25Z,MERGED,True,3,5,1,https://github.com/kwagyeman,Fix bug with sharpen.,1,[],https://github.com/openmv/openmv/pull/327,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/327,Wayyy too much gain before.,Wayyy too much gain before.,True,{}
openmv/openmv,https://github.com/openmv/openmv,328,2018-04-01T04:59:38Z,2018-04-01T15:46:02Z,2018-04-01T15:46:02Z,MERGED,True,846,11,7,https://github.com/kwagyeman,More image filtering stuff,2,[],https://github.com/openmv/openmv/pull/328,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/328,"Just need to add a mean shift like filter and we'll have a pretty solid lib of all major filtering algorithms.
I think I can use the find_blob algorithm to do something mean shift like that will flatten similar colored areas and remove texture.","Just need to add a mean shift like filter and we'll have a pretty solid lib of all major filtering algorithms.
I think I can use the find_blob algorithm to do something mean shift like that will flatten similar colored areas and remove texture.",True,{}
openmv/openmv,https://github.com/openmv/openmv,329,2018-04-02T04:26:06Z,2018-04-03T20:10:01Z,2018-04-03T20:10:02Z,MERGED,True,649,118,15,https://github.com/kwagyeman,Random Library Fixes,5,[],https://github.com/openmv/openmv/pull/329,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/329,"The big win is CLAHE. Works super nice. Bilateral filtering is nice too.
...
I also started working on the code for a fast mean_shift like filter. However, it's very buggy still.","The big win is CLAHE. Works super nice. Bilateral filtering is nice too.
...
I also started working on the code for a fast mean_shift like filter. However, it's very buggy still.",True,{}
openmv/openmv,https://github.com/openmv/openmv,330,2018-04-06T04:21:41Z,2018-04-06T13:11:02Z,2018-04-06T13:11:02Z,MERGED,True,581,23,7,https://github.com/kwagyeman,Add flood fill,1,[],https://github.com/openmv/openmv/pull/330,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/330,"The algorithm itself is setup to be used for future filters.
Those will come in some PRs next.","The algorithm itself is setup to be used for future filters.
Those will come in some PRs next.",True,{}
openmv/openmv,https://github.com/openmv/openmv,331,2018-04-08T04:49:07Z,2018-04-08T19:00:47Z,2018-04-08T19:00:47Z,MERGED,True,336,39,9,https://github.com/kwagyeman,More basic image manipulation features,4,[],https://github.com/openmv/openmv/pull/331,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/331,Just trying to flush pending stuff out for the next release.,Just trying to flush pending stuff out for the next release.,True,{}
openmv/openmv,https://github.com/openmv/openmv,332,2018-04-08T21:34:31Z,2018-04-08T22:43:04Z,2018-04-08T22:43:04Z,MERGED,True,47,8,5,https://github.com/kwagyeman,Add better text drawing.,1,[],https://github.com/openmv/openmv/pull/332,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/332,Non monospace text drawing. Looks way better.,Non monospace text drawing. Looks way better.,True,{}
openmv/openmv,https://github.com/openmv/openmv,333,2018-04-08T22:37:32Z,2018-04-08T22:47:49Z,2018-12-23T05:18:46Z,CLOSED,False,121,9,9,https://github.com/kwagyeman,OMV module,2,[],https://github.com/openmv/openmv/pull/333,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/333,I put these two commits on different branches and git hub merged them... sigh...,I put these two commits on different branches and git hub merged them... sigh...,True,{}
openmv/openmv,https://github.com/openmv/openmv,334,2018-04-08T22:48:17Z,2018-04-08T22:49:10Z,2018-12-23T05:18:46Z,MERGED,True,74,1,5,https://github.com/kwagyeman,Add openmv version info module.,1,[],https://github.com/openmv/openmv/pull/334,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/334,Lets you print out and access a few key strings.,Lets you print out and access a few key strings.,True,{}
openmv/openmv,https://github.com/openmv/openmv,335,2018-04-09T00:23:56Z,2018-04-09T03:14:12Z,2018-04-09T03:14:12Z,MERGED,True,35,44,4,https://github.com/kwagyeman,Fix gain_db control,1,[],https://github.com/openmv/openmv/pull/335,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/335,Mapping is correct now.,Mapping is correct now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,336,2018-04-12T07:48:07Z,2018-04-14T04:26:45Z,2018-04-14T04:26:46Z,CLOSED,False,0,0,0,https://github.com/kwagyeman,Add image conversion methods per user request via email.,0,[],https://github.com/openmv/openmv/pull/336,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/336,"You can now convert to grayscale/binary. Binary image support is not
fully built out yet however. So, do not use...","You can now convert to grayscale/binary. Binary image support is not
fully built out yet however. So, do not use...",True,{}
openmv/openmv,https://github.com/openmv/openmv,337,2018-04-14T06:24:23Z,2018-04-14T18:44:44Z,2018-04-14T18:44:44Z,MERGED,True,467,5,8,https://github.com/kwagyeman,Last fixes before release,2,[],https://github.com/openmv/openmv/pull/337,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/337,Just a quick test run now before release.,Just a quick test run now before release.,True,{}
openmv/openmv,https://github.com/openmv/openmv,340,2018-04-21T06:41:12Z,2018-04-25T13:05:11Z,2018-12-23T05:18:47Z,CLOSED,False,11190,101,37,https://github.com/kwagyeman,Flir support,10,[],https://github.com/openmv/openmv/pull/340,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/340,Please review and merge after the release.,Please review and merge after the release.,True,{}
openmv/openmv,https://github.com/openmv/openmv,340,2018-04-21T06:41:12Z,2018-04-25T13:05:11Z,2018-12-23T05:18:47Z,CLOSED,False,11190,101,37,https://github.com/kwagyeman,Flir support,10,[],https://github.com/openmv/openmv/pull/340,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/340#issuecomment-384279102,Please review and merge after the release.,merged.,True,{}
openmv/openmv,https://github.com/openmv/openmv,343,2018-04-22T17:01:43Z,2018-04-22T20:37:58Z,2018-12-23T05:18:48Z,MERGED,True,159,0,3,https://github.com/kwagyeman,Add motor shield examples,3,[],https://github.com/openmv/openmv/pull/343,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/343,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,346,2018-05-08T03:24:14Z,2018-05-13T22:10:22Z,2018-05-13T22:10:22Z,MERGED,True,63,0,1,https://github.com/kwagyeman,Add user example,1,[],https://github.com/openmv/openmv/pull/346,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/346,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,347,2018-05-13T23:35:58Z,2018-05-14T18:13:30Z,2018-05-14T18:13:30Z,MERGED,True,20,5,5,https://github.com/kwagyeman,Update find circles with min and max radius to run faster.,1,[],https://github.com/openmv/openmv/pull/347,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/347,This was a user request.,This was a user request.,True,{}
openmv/openmv,https://github.com/openmv/openmv,349,2018-05-28T19:45:13Z,2018-05-30T05:41:59Z,2018-05-30T05:41:59Z,CLOSED,False,391,150,9,https://github.com/kwagyeman,Global Shutter driver support.,9,[],https://github.com/openmv/openmv/pull/349,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/349,"The driver is now working for the global shutter camera.
After developing this. We will drop CFA support on the global shutter camera module. Lack of an ISP onboard makes using the CFA very difficult.","The driver is now working for the global shutter camera.
After developing this. We will drop CFA support on the global shutter camera module. Lack of an ISP onboard makes using the CFA very difficult.",True,{}
openmv/openmv,https://github.com/openmv/openmv,350,2018-05-30T05:43:26Z,2018-05-30T17:28:14Z,2018-12-23T05:18:49Z,CLOSED,False,383,150,7,https://github.com/kwagyeman,Global shutter,8,[],https://github.com/openmv/openmv/pull/350,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/350,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,350,2018-05-30T05:43:26Z,2018-05-30T17:28:14Z,2018-12-23T05:18:49Z,CLOSED,False,383,150,7,https://github.com/kwagyeman,Global shutter,8,[],https://github.com/openmv/openmv/pull/350,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/350#issuecomment-393249175,,merged.,True,{}
openmv/openmv,https://github.com/openmv/openmv,352,2018-06-04T02:17:17Z,2018-06-04T15:33:58Z,2018-06-04T15:33:58Z,CLOSED,False,149,39,8,https://github.com/kwagyeman,Add bitmap support to jpeg and binary.,2,[],https://github.com/openmv/openmv/pull/352,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/352,"This feature helps this guy:
http://forums.openmv.io/viewtopic.php?f=3&t=761","This feature helps this guy:
http://forums.openmv.io/viewtopic.php?f=3&t=761",True,{}
openmv/openmv,https://github.com/openmv/openmv,352,2018-06-04T02:17:17Z,2018-06-04T15:33:58Z,2018-06-04T15:33:58Z,CLOSED,False,149,39,8,https://github.com/kwagyeman,Add bitmap support to jpeg and binary.,2,[],https://github.com/openmv/openmv/pull/352,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/352#issuecomment-394398579,"This feature helps this guy:
http://forums.openmv.io/viewtopic.php?f=3&t=761",Fixed and merged.,True,{}
openmv/openmv,https://github.com/openmv/openmv,353,2018-06-05T06:34:27Z,2018-06-06T00:52:00Z,2018-12-23T05:18:51Z,MERGED,True,71,0,1,https://github.com/kwagyeman,Find small apriltags,1,[],https://github.com/openmv/openmv/pull/353,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/353,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,354,2018-06-06T05:02:13Z,2018-06-06T14:22:42Z,2018-12-23T05:18:53Z,MERGED,True,22,2,1,https://github.com/kwagyeman,Fixed bitmap support for image operations,1,[],https://github.com/openmv/openmv/pull/354,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/354,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,355,2018-06-11T02:10:39Z,2018-06-11T03:27:12Z,2019-10-04T18:07:25Z,MERGED,True,928,49,11,https://github.com/kwagyeman,Nn upgrade,8,[],https://github.com/openmv/openmv/pull/355,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/355,"The first few commits do some cleanup.
The next few commits bring in changes from the ARM NN library.
The commits afterward add ROI support to the NN runner.
Finally, I add the multi-scale code and examples.
Everything is tested and nothing has been broken.","The first few commits do some cleanup.
The next few commits bring in changes from the ARM NN library.
The commits afterward add ROI support to the NN runner.
Finally, I add the multi-scale code and examples.
Everything is tested and nothing has been broken.",True,{}
openmv/openmv,https://github.com/openmv/openmv,356,2018-06-20T08:03:12Z,2018-06-20T16:51:21Z,2018-12-23T05:19:00Z,CLOSED,False,225,155,12,https://github.com/kwagyeman,Apriltag higher res,15,[],https://github.com/openmv/openmv/pull/356,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/356,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,356,2018-06-20T08:03:12Z,2018-06-20T16:51:21Z,2018-12-23T05:19:00Z,CLOSED,False,225,155,12,https://github.com/kwagyeman,Apriltag higher res,15,[],https://github.com/openmv/openmv/pull/356,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/356#issuecomment-398820528,,merged.,True,{}
openmv/openmv,https://github.com/openmv/openmv,356,2018-06-20T08:03:12Z,2018-06-20T16:51:21Z,2018-12-23T05:19:00Z,CLOSED,False,225,155,12,https://github.com/kwagyeman,Apriltag higher res,15,[],https://github.com/openmv/openmv/pull/356,https://github.com/ThomasVon2021,3,https://github.com/openmv/openmv/pull/356#issuecomment-440594824,,Can I design a new icons of Apriltag myself?,True,{}
openmv/openmv,https://github.com/openmv/openmv,356,2018-06-20T08:03:12Z,2018-06-20T16:51:21Z,2018-12-23T05:19:00Z,CLOSED,False,225,155,12,https://github.com/kwagyeman,Apriltag higher res,15,[],https://github.com/openmv/openmv/pull/356,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/356#issuecomment-440685355,,The IDE has an AprilTag generator that can make all the supported tags.,True,{}
openmv/openmv,https://github.com/openmv/openmv,356,2018-06-20T08:03:12Z,2018-06-20T16:51:21Z,2018-12-23T05:19:00Z,CLOSED,False,225,155,12,https://github.com/kwagyeman,Apriltag higher res,15,[],https://github.com/openmv/openmv/pull/356,https://github.com/ThomasVon2021,5,https://github.com/openmv/openmv/pull/356#issuecomment-441670964,,Can I  design a tag with my own characteristics，not use the library tags.,True,{}
openmv/openmv,https://github.com/openmv/openmv,356,2018-06-20T08:03:12Z,2018-06-20T16:51:21Z,2018-12-23T05:19:00Z,CLOSED,False,225,155,12,https://github.com/kwagyeman,Apriltag higher res,15,[],https://github.com/openmv/openmv/pull/356,https://github.com/kwagyeman,6,https://github.com/openmv/openmv/pull/356#issuecomment-441706699,,"Yes, but, you'll need to edit the firmware to accept the tag family. This is involved...",True,{}
openmv/openmv,https://github.com/openmv/openmv,356,2018-06-20T08:03:12Z,2018-06-20T16:51:21Z,2018-12-23T05:19:00Z,CLOSED,False,225,155,12,https://github.com/kwagyeman,Apriltag higher res,15,[],https://github.com/openmv/openmv/pull/356,https://github.com/ThomasVon2021,7,https://github.com/openmv/openmv/pull/356#issuecomment-443992877,,Do you have any detailed explanations of the source code about apriltag?I want to know how to deal with it.,True,{}
openmv/openmv,https://github.com/openmv/openmv,356,2018-06-20T08:03:12Z,2018-06-20T16:51:21Z,2018-12-23T05:19:00Z,CLOSED,False,225,155,12,https://github.com/kwagyeman,Apriltag higher res,15,[],https://github.com/openmv/openmv/pull/356,https://github.com/iabdalkader,8,https://github.com/openmv/openmv/pull/356#issuecomment-444073617,,@binbinshare https://april.eecs.umich.edu/software/apriltag,True,{}
openmv/openmv,https://github.com/openmv/openmv,357,2018-06-22T06:32:00Z,2018-06-22T12:54:23Z,2019-10-04T18:07:56Z,MERGED,True,4,4,4,https://github.com/kwagyeman,Make both networks output the same value types.,1,[],https://github.com/openmv/openmv/pull/357,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/357,"Both CIFAR and LENET work still.
The smile network... I couldn't really get to work before or afterwards.
I noticed the Haar Cascade one has trouble finding my face. Maybe fix via using
the contrast settings of the previous Haar scripts?
Also, does the smile network need the whole face? Because the bounding rect on my face is missing my forehead.
...
Note, I want to get this fix in before the release otherwise we're stuck with the unscaled values for life. Since the scaling is done with floats this mod is reversible in python if the user needs to undo it.","Both CIFAR and LENET work still.
The smile network... I couldn't really get to work before or afterwards.
I noticed the Haar Cascade one has trouble finding my face. Maybe fix via using
the contrast settings of the previous Haar scripts?
Also, does the smile network need the whole face? Because the bounding rect on my face is missing my forehead.
...
Note, I want to get this fix in before the release otherwise we're stuck with the unscaled values for life. Since the scaling is done with floats this mod is reversible in python if the user needs to undo it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,357,2018-06-22T06:32:00Z,2018-06-22T12:54:23Z,2019-10-04T18:07:56Z,MERGED,True,4,4,4,https://github.com/kwagyeman,Make both networks output the same value types.,1,[],https://github.com/openmv/openmv/pull/357,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/357#issuecomment-399439199,"Both CIFAR and LENET work still.
The smile network... I couldn't really get to work before or afterwards.
I noticed the Haar Cascade one has trouble finding my face. Maybe fix via using
the contrast settings of the previous Haar scripts?
Also, does the smile network need the whole face? Because the bounding rect on my face is missing my forehead.
...
Note, I want to get this fix in before the release otherwise we're stuck with the unscaled values for life. Since the scaling is done with floats this mod is reversible in python if the user needs to undo it.","Also, does the smile network need the whole face?


Not the training images are tightly cropped around the face, basically just needs the eyes + mouth, actually I just made the ROI smaller works a lot better now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,358,2018-06-22T06:42:12Z,2018-06-22T15:19:27Z,2018-12-23T05:19:01Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix bitmap streaming bpp value check.,1,[],https://github.com/openmv/openmv/pull/358,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/358,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,359,2018-06-29T04:16:17Z,2018-06-29T15:23:46Z,2018-06-29T15:23:46Z,MERGED,True,10,15,2,https://github.com/kwagyeman,Unittest fixes,2,[],https://github.com/openmv/openmv/pull/359,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/359,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,361,2018-07-06T06:56:21Z,2018-07-06T14:57:19Z,2018-12-23T05:19:04Z,MERGED,True,8,8,1,https://github.com/kwagyeman,FIxed FLIR driver,1,[],https://github.com/openmv/openmv/pull/361,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/361,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,362,2018-07-30T15:35:06Z,2018-07-30T18:10:55Z,2018-07-30T18:11:00Z,MERGED,True,240,161,10,https://github.com/iabdalkader,Add WiFi programming.,8,[],https://github.com/openmv/openmv/pull/362,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/362,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,363,2018-07-30T17:33:13Z,2018-07-30T17:41:01Z,2018-07-30T17:41:41Z,CLOSED,False,252,161,13,https://github.com/iabdalkader,Fix OPENMV-2 build.,9,[],https://github.com/openmv/openmv/pull/363,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/363,Disable morph().,Disable morph().,True,{}
openmv/openmv,https://github.com/openmv/openmv,364,2018-07-30T17:47:24Z,2018-07-30T17:56:04Z,2018-07-30T17:56:08Z,MERGED,True,12,0,3,https://github.com/iabdalkader,Fix OMV2 build.,1,[],https://github.com/openmv/openmv/pull/364,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/364,Disable morph().,Disable morph().,True,{}
openmv/openmv,https://github.com/openmv/openmv,366,2018-08-09T05:28:43Z,2018-08-10T15:57:59Z,2018-12-23T05:19:06Z,CLOSED,False,154,45,9,https://github.com/kwagyeman,Wifi updates,4,[],https://github.com/openmv/openmv/pull/366,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/366,"AP mode works with the AP alright. STA mode needs help. Not sure what's wrong and I don't have an SWDIO debugger to find out.
Here's the latest IDE that support everything. OpenMV IDE will create the settings files and etc.
http://upload.openmv.io/openmv-ide-windows-2.1.0/openmv-ide-winodws-2.1.0.exe
http://upload.openmv.io/openmv-ide-linux-x86_64-2.1.0/openmv-ide-linux-x86_64-2.1.0.run
Note that the reason for AP and STA mode settings having different names is so that you don't have to retype them if you want to change modes in the IDE...","AP mode works with the AP alright. STA mode needs help. Not sure what's wrong and I don't have an SWDIO debugger to find out.
Here's the latest IDE that support everything. OpenMV IDE will create the settings files and etc.
http://upload.openmv.io/openmv-ide-windows-2.1.0/openmv-ide-winodws-2.1.0.exe
http://upload.openmv.io/openmv-ide-linux-x86_64-2.1.0/openmv-ide-linux-x86_64-2.1.0.run
Note that the reason for AP and STA mode settings having different names is so that you don't have to retype them if you want to change modes in the IDE...",True,{}
openmv/openmv,https://github.com/openmv/openmv,366,2018-08-09T05:28:43Z,2018-08-10T15:57:59Z,2018-12-23T05:19:06Z,CLOSED,False,154,45,9,https://github.com/kwagyeman,Wifi updates,4,[],https://github.com/openmv/openmv/pull/366,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/366#issuecomment-412127047,"AP mode works with the AP alright. STA mode needs help. Not sure what's wrong and I don't have an SWDIO debugger to find out.
Here's the latest IDE that support everything. OpenMV IDE will create the settings files and etc.
http://upload.openmv.io/openmv-ide-windows-2.1.0/openmv-ide-winodws-2.1.0.exe
http://upload.openmv.io/openmv-ide-linux-x86_64-2.1.0/openmv-ide-linux-x86_64-2.1.0.run
Note that the reason for AP and STA mode settings having different names is so that you don't have to retype them if you want to change modes in the IDE...",Merged 0413d4b,True,{}
openmv/openmv,https://github.com/openmv/openmv,367,2018-08-10T14:22:51Z,2018-08-10T15:57:06Z,2018-08-10T15:57:09Z,MERGED,True,154,45,9,https://github.com/iabdalkader,Wifi udp,2,[],https://github.com/openmv/openmv/pull/367,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/367,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,368,2018-08-16T09:51:35Z,2018-09-02T20:00:17Z,2018-09-02T20:00:17Z,MERGED,True,12,0,1,https://github.com/miiicmueller,"SPI timeout in slave mode, due to internal chip error",1,[],https://github.com/openmv/openmv/pull/368,https://github.com/miiicmueller,1,https://github.com/openmv/openmv/pull/368,"See stm32f7 erratasheet, chapter 2.11.2.
This is a proposition that worked for us, with clk speed of 10MHz.
Maybe it wont be sufficient with a higher clk speed...","See stm32f7 erratasheet, chapter 2.11.2.
This is a proposition that worked for us, with clk speed of 10MHz.
Maybe it wont be sufficient with a higher clk speed...",True,{}
openmv/openmv,https://github.com/openmv/openmv,368,2018-08-16T09:51:35Z,2018-09-02T20:00:17Z,2018-09-02T20:00:17Z,MERGED,True,12,0,1,https://github.com/miiicmueller,"SPI timeout in slave mode, due to internal chip error",1,[],https://github.com/openmv/openmv/pull/368,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/368#issuecomment-413585847,"See stm32f7 erratasheet, chapter 2.11.2.
This is a proposition that worked for us, with clk speed of 10MHz.
Maybe it wont be sufficient with a higher clk speed...","Wow, thanks for spending a PR. I'll let Ibrahim approve but helping on the code is appreciated!",True,{}
openmv/openmv,https://github.com/openmv/openmv,371,2018-09-05T14:45:48Z,2018-09-05T15:00:56Z,2018-09-05T15:01:00Z,MERGED,True,15,0,2,https://github.com/iabdalkader,Add sensor shutdown function.,1,[],https://github.com/openmv/openmv/pull/371,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/371,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,374,2018-09-15T22:49:16Z,2018-09-16T23:21:50Z,2018-09-16T23:21:53Z,MERGED,True,6806,34,32,https://github.com/iabdalkader,Add webcam/UVC firmware.,3,[],https://github.com/openmv/openmv/pull/374,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/374,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,375,2018-09-15T22:52:14Z,2018-09-16T23:22:09Z,2018-09-16T23:22:12Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix H7 flash latency.,1,[],https://github.com/openmv/openmv/pull/375,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/375,VOS1 ~1.2v the flash latency should be 2 cycles.,VOS1 ~1.2v the flash latency should be 2 cycles.,True,{}
openmv/openmv,https://github.com/openmv/openmv,376,2018-09-16T23:33:37Z,2018-09-16T23:54:04Z,2018-09-16T23:54:08Z,MERGED,True,3,0,1,https://github.com/iabdalkader,Set fixed FS label.,1,[],https://github.com/openmv/openmv/pull/376,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/376,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,377,2018-09-16T23:33:39Z,2018-09-16T23:57:06Z,2018-09-16T23:57:13Z,CLOSED,False,12,9,2,https://github.com/iabdalkader,Fix mt typos,2,[],https://github.com/openmv/openmv/pull/377,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/377,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,378,2018-09-16T23:58:01Z,2018-09-17T00:07:03Z,2018-10-29T21:35:16Z,MERGED,True,9,9,1,https://github.com/iabdalkader,Fix MT driver typos.,1,[],https://github.com/openmv/openmv/pull/378,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/378,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,380,2018-09-20T16:01:21Z,2018-09-20T16:11:39Z,2018-09-20T16:11:41Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add function to check if IDE is connected (debug mode).,1,[],https://github.com/openmv/openmv/pull/380,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/380,Fixes #379,Fixes #379,True,{}
openmv/openmv,https://github.com/openmv/openmv,382,2018-09-24T04:28:03Z,2018-09-24T20:58:47Z,2018-12-23T05:18:32Z,MERGED,True,2762,300,34,https://github.com/kwagyeman,Fir update,10,[],https://github.com/openmv/openmv/pull/382,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/382,More thermal vision sensor support! Woot.,More thermal vision sensor support! Woot.,True,{}
openmv/openmv,https://github.com/openmv/openmv,383,2018-09-29T17:54:24Z,2018-09-29T18:02:06Z,2018-10-29T21:35:14Z,MERGED,True,228,89,3,https://github.com/iabdalkader,Webcam streaming,2,[],https://github.com/openmv/openmv/pull/383,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/383,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,384,2018-09-30T00:43:47Z,2018-09-30T01:09:45Z,2018-10-29T21:35:13Z,MERGED,True,22,43,1,https://github.com/iabdalkader,Fix UVC streaming on H7.,1,[],https://github.com/openmv/openmv/pull/384,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/384,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,385,2018-10-01T01:17:14Z,2018-10-01T01:44:07Z,2018-10-29T21:34:34Z,MERGED,True,98,159,6,https://github.com/iabdalkader,Add streaming support to snapshot function.,1,[],https://github.com/openmv/openmv/pull/385,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/385,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,386,2018-10-01T17:18:17Z,2018-10-01T21:29:05Z,2018-10-29T21:34:32Z,MERGED,True,24,24,31,https://github.com/iabdalkader,Rename webcam to uvc.,1,[],https://github.com/openmv/openmv/pull/386,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/386,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,387,2018-10-03T17:10:05Z,2018-10-03T17:20:03Z,2018-10-03T17:20:10Z,MERGED,True,1,1,1,https://github.com/iabdalkader,NN: fix col buffer size.,1,[],https://github.com/openmv/openmv/pull/387,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/387,This is a workaround until a proper fix is found.,This is a workaround until a proper fix is found.,True,{}
openmv/openmv,https://github.com/openmv/openmv,388,2018-10-05T23:30:18Z,2018-10-05T23:42:14Z,2018-10-29T21:34:26Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix H7 SPI clock source.,1,[],https://github.com/openmv/openmv/pull/388,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/388,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,389,2018-10-10T00:16:21Z,2018-10-10T00:29:57Z,2018-10-10T00:30:11Z,MERGED,True,348,305,7,https://github.com/iabdalkader,Use DMA for FLIR 1 and 3,5,[],https://github.com/openmv/openmv/pull/389,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/389,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,390,2018-10-10T16:13:19Z,2018-10-10T17:36:45Z,2018-10-29T21:34:24Z,MERGED,True,3,18,3,https://github.com/iabdalkader,Use the MPU to make H7 DMA region uncacheable.,1,[],https://github.com/openmv/openmv/pull/390,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/390,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,391,2018-10-11T05:45:43Z,2018-10-11T16:33:18Z,2018-10-11T16:33:18Z,CLOSED,False,560,46,34,https://github.com/kwagyeman,Cmsis improvements,17,[],https://github.com/openmv/openmv/pull/391,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/391,"New README and code allows you to actually implement our nets. Stuff was missing previously.
We can now start to train more complex stuff.
Please always update the readme with steps for new models.","New README and code allows you to actually implement our nets. Stuff was missing previously.
We can now start to train more complex stuff.
Please always update the readme with steps for new models.",True,{}
openmv/openmv,https://github.com/openmv/openmv,391,2018-10-11T05:45:43Z,2018-10-11T16:33:18Z,2018-10-11T16:33:18Z,CLOSED,False,560,46,34,https://github.com/kwagyeman,Cmsis improvements,17,[],https://github.com/openmv/openmv/pull/391,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/391#issuecomment-429025455,"New README and code allows you to actually implement our nets. Stuff was missing previously.
We can now start to train more complex stuff.
Please always update the readme with steps for new models.",merged.,True,{}
openmv/openmv,https://github.com/openmv/openmv,392,2018-10-17T19:10:15Z,2018-10-17T19:21:20Z,2018-10-17T19:35:39Z,MERGED,True,2,2,1,https://github.com/iabdalkader,Fix H7 DMA region size.,1,[],https://github.com/openmv/openmv/pull/392,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/392,Note still need to make the MSC buffer size configurable in MP.,Note still need to make the MSC buffer size configurable in MP.,True,{}
openmv/openmv,https://github.com/openmv/openmv,395,2018-10-20T12:57:30Z,2018-10-20T15:52:37Z,2018-10-20T15:52:37Z,MERGED,True,1,1,1,https://github.com/bj-wanghz,Update lbp.c,1,[],https://github.com/openmv/openmv/pull/395,https://github.com/bj-wanghz,1,https://github.com/openmv/openmv/pull/395,fix lbp_weights index calculation in imlib_lbp_desc_distance.,fix lbp_weights index calculation in imlib_lbp_desc_distance.,True,{}
openmv/openmv,https://github.com/openmv/openmv,396,2018-10-21T01:17:12Z,2018-10-21T01:50:27Z,2018-10-21T01:50:33Z,MERGED,True,624,21,7,https://github.com/iabdalkader,Update to CMSIS NN 5.4.0,1,[],https://github.com/openmv/openmv/pull/396,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/396,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,397,2018-10-22T05:38:23Z,2018-10-22T23:05:07Z,2018-12-23T05:18:30Z,MERGED,True,70,37,1,https://github.com/kwagyeman,Lepton driver working great for flir 1/3 with scaling now.,1,[],https://github.com/openmv/openmv/pull/397,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/397,Tested and works for flir 1/3 in gs and rgb565 with multiple resolutions and resolutions that causes cropping.,Tested and works for flir 1/3 in gs and rgb565 with multiple resolutions and resolutions that causes cropping.,True,{}
openmv/openmv,https://github.com/openmv/openmv,398,2018-10-24T23:19:21Z,2018-10-24T23:31:17Z,2018-10-24T23:31:20Z,MERGED,True,16,7,2,https://github.com/iabdalkader,Fix WINC init timeout.,1,[],https://github.com/openmv/openmv/pull/398,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/398,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,400,2018-10-28T06:34:26Z,2019-09-04T19:56:22Z,2019-09-04T19:56:22Z,CLOSED,False,631,542,19,https://github.com/andrewleech,Port ffwrapper and other omv file operations to the micropython vfs,1,[],https://github.com/openmv/openmv/pull/400,https://github.com/andrewleech,1,https://github.com/openmv/openmv/pull/400,"The existing implementation goes directly to oofatfs which limits file operations to stm32 port  and files on the the fatfs drives only.
This change allows any micropython filesystem to be used for all file IO in the omv subsystem, including virtual file systems defined via a python interface (eg mprepl)
This patch has not been tested explicitly in this submitted form, however it's been used a fair bit in my omv_module repo form (see below).
This pr is intended as a hopefully useful contribution though even if it needs some further fixes, but also as a conversation starter.
At work I'm building a product which includes much of the omv folder as a submodule built directly against upstream micropython, as described in:
micropython/micropython#4195
https://gitlab.com/alelec/mp_omv
https://gitlab.com/alelec/omv
This has been restructured as such partly as a test case, but mostly as we need to use other features from mainline micropython (and I'm on a personal mission to reduce the need for micropython forks :-)
I've got a bunch of other changes in the omv repo above which may be of use to you too, most of which are for compatibility both with mainline stm32 but also to add support for use with the unix port for automated unit testing of imaging functions. I'm happy to help with anything there of interest.
Note: my mp_omv system currently breaks support for the openmv ide but I'd like to add it back using the second cdc port now optionally available in mainline micropython, rather than the existing method of interleaving it into the main cdc... this hasn't been started yet though.
On our private work fork we've also got initial support for a 12bit 1.3mp image sensor (ar0130) which I could discuss pushing up if there's any value for you (it needs the sdram support too to fit the larger images). Thanks for your fantastic platform!","The existing implementation goes directly to oofatfs which limits file operations to stm32 port  and files on the the fatfs drives only.
This change allows any micropython filesystem to be used for all file IO in the omv subsystem, including virtual file systems defined via a python interface (eg mprepl)
This patch has not been tested explicitly in this submitted form, however it's been used a fair bit in my omv_module repo form (see below).
This pr is intended as a hopefully useful contribution though even if it needs some further fixes, but also as a conversation starter.
At work I'm building a product which includes much of the omv folder as a submodule built directly against upstream micropython, as described in:
micropython/micropython#4195
https://gitlab.com/alelec/mp_omv
https://gitlab.com/alelec/omv
This has been restructured as such partly as a test case, but mostly as we need to use other features from mainline micropython (and I'm on a personal mission to reduce the need for micropython forks :-)
I've got a bunch of other changes in the omv repo above which may be of use to you too, most of which are for compatibility both with mainline stm32 but also to add support for use with the unix port for automated unit testing of imaging functions. I'm happy to help with anything there of interest.
Note: my mp_omv system currently breaks support for the openmv ide but I'd like to add it back using the second cdc port now optionally available in mainline micropython, rather than the existing method of interleaving it into the main cdc... this hasn't been started yet though.
On our private work fork we've also got initial support for a 12bit 1.3mp image sensor (ar0130) which I could discuss pushing up if there's any value for you (it needs the sdram support too to fit the larger images). Thanks for your fantastic platform!",True,{}
openmv/openmv,https://github.com/openmv/openmv,400,2018-10-28T06:34:26Z,2019-09-04T19:56:22Z,2019-09-04T19:56:22Z,CLOSED,False,631,542,19,https://github.com/andrewleech,Port ffwrapper and other omv file operations to the micropython vfs,1,[],https://github.com/openmv/openmv/pull/400,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/400#issuecomment-433753008,"The existing implementation goes directly to oofatfs which limits file operations to stm32 port  and files on the the fatfs drives only.
This change allows any micropython filesystem to be used for all file IO in the omv subsystem, including virtual file systems defined via a python interface (eg mprepl)
This patch has not been tested explicitly in this submitted form, however it's been used a fair bit in my omv_module repo form (see below).
This pr is intended as a hopefully useful contribution though even if it needs some further fixes, but also as a conversation starter.
At work I'm building a product which includes much of the omv folder as a submodule built directly against upstream micropython, as described in:
micropython/micropython#4195
https://gitlab.com/alelec/mp_omv
https://gitlab.com/alelec/omv
This has been restructured as such partly as a test case, but mostly as we need to use other features from mainline micropython (and I'm on a personal mission to reduce the need for micropython forks :-)
I've got a bunch of other changes in the omv repo above which may be of use to you too, most of which are for compatibility both with mainline stm32 but also to add support for use with the unix port for automated unit testing of imaging functions. I'm happy to help with anything there of interest.
Note: my mp_omv system currently breaks support for the openmv ide but I'd like to add it back using the second cdc port now optionally available in mainline micropython, rather than the existing method of interleaving it into the main cdc... this hasn't been started yet though.
On our private work fork we've also got initial support for a 12bit 1.3mp image sensor (ar0130) which I could discuss pushing up if there's any value for you (it needs the sdram support too to fit the larger images). Thanks for your fantastic platform!","Hi, could you fix the travis CI issues? Your changes fail to compile on all OpenMV Cam targets. Otherwise, it looks like you just did a lot of find and replace on things which is okay.",True,{}
openmv/openmv,https://github.com/openmv/openmv,400,2018-10-28T06:34:26Z,2019-09-04T19:56:22Z,2019-09-04T19:56:22Z,CLOSED,False,631,542,19,https://github.com/andrewleech,Port ffwrapper and other omv file operations to the micropython vfs,1,[],https://github.com/openmv/openmv/pull/400,https://github.com/andrewleech,3,https://github.com/openmv/openmv/pull/400#issuecomment-433778685,"The existing implementation goes directly to oofatfs which limits file operations to stm32 port  and files on the the fatfs drives only.
This change allows any micropython filesystem to be used for all file IO in the omv subsystem, including virtual file systems defined via a python interface (eg mprepl)
This patch has not been tested explicitly in this submitted form, however it's been used a fair bit in my omv_module repo form (see below).
This pr is intended as a hopefully useful contribution though even if it needs some further fixes, but also as a conversation starter.
At work I'm building a product which includes much of the omv folder as a submodule built directly against upstream micropython, as described in:
micropython/micropython#4195
https://gitlab.com/alelec/mp_omv
https://gitlab.com/alelec/omv
This has been restructured as such partly as a test case, but mostly as we need to use other features from mainline micropython (and I'm on a personal mission to reduce the need for micropython forks :-)
I've got a bunch of other changes in the omv repo above which may be of use to you too, most of which are for compatibility both with mainline stm32 but also to add support for use with the unix port for automated unit testing of imaging functions. I'm happy to help with anything there of interest.
Note: my mp_omv system currently breaks support for the openmv ide but I'd like to add it back using the second cdc port now optionally available in mainline micropython, rather than the existing method of interleaving it into the main cdc... this hasn't been started yet though.
On our private work fork we've also got initial support for a 12bit 1.3mp image sensor (ar0130) which I could discuss pushing up if there's any value for you (it needs the sdram support too to fit the larger images). Thanks for your fantastic platform!","Yeah sorry there are a number of build failures, I'll clean them up.
The bulk of the notable changes are in ff_wrapper, reworking that to target the micropython fs interfaces rather than oofatfs. This is a higher level interface present in all micropython ports rather than going direct to oofatfs.
The rest of it really us just renaming as you noted to used the updated ffwrapper layer.",True,{}
openmv/openmv,https://github.com/openmv/openmv,400,2018-10-28T06:34:26Z,2019-09-04T19:56:22Z,2019-09-04T19:56:22Z,CLOSED,False,631,542,19,https://github.com/andrewleech,Port ffwrapper and other omv file operations to the micropython vfs,1,[],https://github.com/openmv/openmv/pull/400,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/400#issuecomment-433779118,"The existing implementation goes directly to oofatfs which limits file operations to stm32 port  and files on the the fatfs drives only.
This change allows any micropython filesystem to be used for all file IO in the omv subsystem, including virtual file systems defined via a python interface (eg mprepl)
This patch has not been tested explicitly in this submitted form, however it's been used a fair bit in my omv_module repo form (see below).
This pr is intended as a hopefully useful contribution though even if it needs some further fixes, but also as a conversation starter.
At work I'm building a product which includes much of the omv folder as a submodule built directly against upstream micropython, as described in:
micropython/micropython#4195
https://gitlab.com/alelec/mp_omv
https://gitlab.com/alelec/omv
This has been restructured as such partly as a test case, but mostly as we need to use other features from mainline micropython (and I'm on a personal mission to reduce the need for micropython forks :-)
I've got a bunch of other changes in the omv repo above which may be of use to you too, most of which are for compatibility both with mainline stm32 but also to add support for use with the unix port for automated unit testing of imaging functions. I'm happy to help with anything there of interest.
Note: my mp_omv system currently breaks support for the openmv ide but I'd like to add it back using the second cdc port now optionally available in mainline micropython, rather than the existing method of interleaving it into the main cdc... this hasn't been started yet though.
On our private work fork we've also got initial support for a 12bit 1.3mp image sensor (ar0130) which I could discuss pushing up if there's any value for you (it needs the sdram support too to fit the larger images). Thanks for your fantastic platform!","Ibrahim will have to approve this after all compiles pass. I'm not sure what the exact implications are. However, we appreciate the PRs and can use any help on features. Thanks!",True,{}
openmv/openmv,https://github.com/openmv/openmv,400,2018-10-28T06:34:26Z,2019-09-04T19:56:22Z,2019-09-04T19:56:22Z,CLOSED,False,631,542,19,https://github.com/andrewleech,Port ffwrapper and other omv file operations to the micropython vfs,1,[],https://github.com/openmv/openmv/pull/400,https://github.com/andrewleech,5,https://github.com/openmv/openmv/pull/400#issuecomment-433779963,"The existing implementation goes directly to oofatfs which limits file operations to stm32 port  and files on the the fatfs drives only.
This change allows any micropython filesystem to be used for all file IO in the omv subsystem, including virtual file systems defined via a python interface (eg mprepl)
This patch has not been tested explicitly in this submitted form, however it's been used a fair bit in my omv_module repo form (see below).
This pr is intended as a hopefully useful contribution though even if it needs some further fixes, but also as a conversation starter.
At work I'm building a product which includes much of the omv folder as a submodule built directly against upstream micropython, as described in:
micropython/micropython#4195
https://gitlab.com/alelec/mp_omv
https://gitlab.com/alelec/omv
This has been restructured as such partly as a test case, but mostly as we need to use other features from mainline micropython (and I'm on a personal mission to reduce the need for micropython forks :-)
I've got a bunch of other changes in the omv repo above which may be of use to you too, most of which are for compatibility both with mainline stm32 but also to add support for use with the unix port for automated unit testing of imaging functions. I'm happy to help with anything there of interest.
Note: my mp_omv system currently breaks support for the openmv ide but I'd like to add it back using the second cdc port now optionally available in mainline micropython, rather than the existing method of interleaving it into the main cdc... this hasn't been started yet though.
On our private work fork we've also got initial support for a 12bit 1.3mp image sensor (ar0130) which I could discuss pushing up if there's any value for you (it needs the sdram support too to fit the larger images). Thanks for your fantastic platform!","Yeah no pressure or anything, I've just been trying to find some things from my tree that make sense to push up in case it's useful. Most of my my changes are to support a larger camera sensor with more pixel formats, which isn't much use if you don't have hardware to suit.
This PR is also part of a set of changes to allow building the unix port though which may be of interest?
I use mprepl a lot to mount my pc's local dir in micropython (get's exposed as a virtual filesystem), this filesystem change lets me read/write images directly to folder on PC over the usb.
Going via the higher level interface though is surely going to have some overhead though which I haven't profiled. I also know you've got your filesystem buffering, and micropython has it's write pagefile buffer, I'm not sure if these are going to be effectively duplicating/fighting each other now too.",True,{}
openmv/openmv,https://github.com/openmv/openmv,400,2018-10-28T06:34:26Z,2019-09-04T19:56:22Z,2019-09-04T19:56:22Z,CLOSED,False,631,542,19,https://github.com/andrewleech,Port ffwrapper and other omv file operations to the micropython vfs,1,[],https://github.com/openmv/openmv/pull/400,https://github.com/kwagyeman,6,https://github.com/openmv/openmv/pull/400#issuecomment-433780920,"The existing implementation goes directly to oofatfs which limits file operations to stm32 port  and files on the the fatfs drives only.
This change allows any micropython filesystem to be used for all file IO in the omv subsystem, including virtual file systems defined via a python interface (eg mprepl)
This patch has not been tested explicitly in this submitted form, however it's been used a fair bit in my omv_module repo form (see below).
This pr is intended as a hopefully useful contribution though even if it needs some further fixes, but also as a conversation starter.
At work I'm building a product which includes much of the omv folder as a submodule built directly against upstream micropython, as described in:
micropython/micropython#4195
https://gitlab.com/alelec/mp_omv
https://gitlab.com/alelec/omv
This has been restructured as such partly as a test case, but mostly as we need to use other features from mainline micropython (and I'm on a personal mission to reduce the need for micropython forks :-)
I've got a bunch of other changes in the omv repo above which may be of use to you too, most of which are for compatibility both with mainline stm32 but also to add support for use with the unix port for automated unit testing of imaging functions. I'm happy to help with anything there of interest.
Note: my mp_omv system currently breaks support for the openmv ide but I'd like to add it back using the second cdc port now optionally available in mainline micropython, rather than the existing method of interleaving it into the main cdc... this hasn't been started yet though.
On our private work fork we've also got initial support for a 12bit 1.3mp image sensor (ar0130) which I could discuss pushing up if there's any value for you (it needs the sdram support too to fit the larger images). Thanks for your fantastic platform!","A unix port would be very helpful. We'd love to have the software run on unix (which isn't particular hard but we don't have time). As for the pagewrite buffer... that must be new. We added the buffering because things were slow without it. That code is kinda only now however. 2 years now. Anyway, yeah, we love getting PRs that make sense for us to merge. Thanks!",True,{}
openmv/openmv,https://github.com/openmv/openmv,400,2018-10-28T06:34:26Z,2019-09-04T19:56:22Z,2019-09-04T19:56:22Z,CLOSED,False,631,542,19,https://github.com/andrewleech,Port ffwrapper and other omv file operations to the micropython vfs,1,[],https://github.com/openmv/openmv/pull/400,https://github.com/iabdalkader,7,https://github.com/openmv/openmv/pull/400#issuecomment-528059975,"The existing implementation goes directly to oofatfs which limits file operations to stm32 port  and files on the the fatfs drives only.
This change allows any micropython filesystem to be used for all file IO in the omv subsystem, including virtual file systems defined via a python interface (eg mprepl)
This patch has not been tested explicitly in this submitted form, however it's been used a fair bit in my omv_module repo form (see below).
This pr is intended as a hopefully useful contribution though even if it needs some further fixes, but also as a conversation starter.
At work I'm building a product which includes much of the omv folder as a submodule built directly against upstream micropython, as described in:
micropython/micropython#4195
https://gitlab.com/alelec/mp_omv
https://gitlab.com/alelec/omv
This has been restructured as such partly as a test case, but mostly as we need to use other features from mainline micropython (and I'm on a personal mission to reduce the need for micropython forks :-)
I've got a bunch of other changes in the omv repo above which may be of use to you too, most of which are for compatibility both with mainline stm32 but also to add support for use with the unix port for automated unit testing of imaging functions. I'm happy to help with anything there of interest.
Note: my mp_omv system currently breaks support for the openmv ide but I'd like to add it back using the second cdc port now optionally available in mainline micropython, rather than the existing method of interleaving it into the main cdc... this hasn't been started yet though.
On our private work fork we've also got initial support for a 12bit 1.3mp image sensor (ar0130) which I could discuss pushing up if there's any value for you (it needs the sdram support too to fit the larger images). Thanks for your fantastic platform!",Closing this please reopen if there's an update.,True,{}
openmv/openmv,https://github.com/openmv/openmv,401,2018-10-29T03:28:41Z,2018-10-29T03:33:05Z,2018-10-29T03:53:10Z,CLOSED,False,5,1,1,https://github.com/andrewleech,jpeg: ensure buffer is deallocated on compression failure,1,[],https://github.com/openmv/openmv/pull/401,https://github.com/andrewleech,1,https://github.com/openmv/openmv/pull/401,"I've had a number of situations where the jpeg compression fails due to not enough free memory, which is to be expected.
I noticed however that in these cases, the memory used during the compression attempt was not getting freed so I couldn't just re-try the compression at a lower setting.
This PR should address this issue by ensuring the allocated memory is freed before the exception is raised.","I've had a number of situations where the jpeg compression fails due to not enough free memory, which is to be expected.
I noticed however that in these cases, the memory used during the compression attempt was not getting freed so I couldn't just re-try the compression at a lower setting.
This PR should address this issue by ensuring the allocated memory is freed before the exception is raised.",True,{}
openmv/openmv,https://github.com/openmv/openmv,401,2018-10-29T03:28:41Z,2018-10-29T03:33:05Z,2018-10-29T03:53:10Z,CLOSED,False,5,1,1,https://github.com/andrewleech,jpeg: ensure buffer is deallocated on compression failure,1,[],https://github.com/openmv/openmv/pull/401,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/401#issuecomment-433778620,"I've had a number of situations where the jpeg compression fails due to not enough free memory, which is to be expected.
I noticed however that in these cases, the memory used during the compression attempt was not getting freed so I couldn't just re-try the compression at a lower setting.
This PR should address this issue by ensuring the allocated memory is freed before the exception is raised.","Hi, I know what you are trying to fix here. But, the act of throwing an exception triggers the memory deallocator. This isn't actually necessary. If you check the MP code under our fork you'll find that the fb_free_till_mark method is called in the NLR longjump handler.
See here: https://github.com/openmv/micropython/blob/901023b150448c9815a51cbb8782ab8c9809a3c3/py/nlr.h#L131
https://github.com/openmv/micropython/blob/901023b150448c9815a51cbb8782ab8c9809a3c3/py/nlr.h#L143",True,{}
openmv/openmv,https://github.com/openmv/openmv,401,2018-10-29T03:28:41Z,2018-10-29T03:33:05Z,2018-10-29T03:53:10Z,CLOSED,False,5,1,1,https://github.com/andrewleech,jpeg: ensure buffer is deallocated on compression failure,1,[],https://github.com/openmv/openmv/pull/401,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/401#issuecomment-433778755,"I've had a number of situations where the jpeg compression fails due to not enough free memory, which is to be expected.
I noticed however that in these cases, the memory used during the compression attempt was not getting freed so I couldn't just re-try the compression at a lower setting.
This PR should address this issue by ensuring the allocated memory is freed before the exception is raised.","Sorry, if this was kinda hidden :). But, we actually prevent ALL memory from leaking in the system. This is why we don't dealloc memory in our code ever. Because this little hook is here.",True,{}
openmv/openmv,https://github.com/openmv/openmv,401,2018-10-29T03:28:41Z,2018-10-29T03:33:05Z,2018-10-29T03:53:10Z,CLOSED,False,5,1,1,https://github.com/andrewleech,jpeg: ensure buffer is deallocated on compression failure,1,[],https://github.com/openmv/openmv/pull/401,https://github.com/andrewleech,4,https://github.com/openmv/openmv/pull/401#issuecomment-433778792,"I've had a number of situations where the jpeg compression fails due to not enough free memory, which is to be expected.
I noticed however that in these cases, the memory used during the compression attempt was not getting freed so I couldn't just re-try the compression at a lower setting.
This PR should address this issue by ensuring the allocated memory is freed before the exception is raised.","Ah I see, thanks for the clarification!",True,{}
openmv/openmv,https://github.com/openmv/openmv,401,2018-10-29T03:28:41Z,2018-10-29T03:33:05Z,2018-10-29T03:53:10Z,CLOSED,False,5,1,1,https://github.com/andrewleech,jpeg: ensure buffer is deallocated on compression failure,1,[],https://github.com/openmv/openmv/pull/401,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/401#issuecomment-433778994,"I've had a number of situations where the jpeg compression fails due to not enough free memory, which is to be expected.
I noticed however that in these cases, the memory used during the compression attempt was not getting freed so I couldn't just re-try the compression at a lower setting.
This PR should address this issue by ensuring the allocated memory is freed before the exception is raised.","The way this stuff works, it makes it really easy to write the C code. Effectively all malloc calls either succeed or an exception is triggered and memory is freed. Then leaked stuff in the python heap is garbage collected.",True,{}
openmv/openmv,https://github.com/openmv/openmv,401,2018-10-29T03:28:41Z,2018-10-29T03:33:05Z,2018-10-29T03:53:10Z,CLOSED,False,5,1,1,https://github.com/andrewleech,jpeg: ensure buffer is deallocated on compression failure,1,[],https://github.com/openmv/openmv/pull/401,https://github.com/andrewleech,6,https://github.com/openmv/openmv/pull/401#issuecomment-433780917,"I've had a number of situations where the jpeg compression fails due to not enough free memory, which is to be expected.
I noticed however that in these cases, the memory used during the compression attempt was not getting freed so I couldn't just re-try the compression at a lower setting.
This PR should address this issue by ensuring the allocated memory is freed before the exception is raised.","Yep that's really very neat. The joys of working in a python system, it can even make c better!",True,{}
openmv/openmv,https://github.com/openmv/openmv,402,2018-10-29T19:07:10Z,2018-10-29T19:21:48Z,2018-10-29T19:30:17Z,MERGED,True,87,75,1,https://github.com/iabdalkader,FLIR: Faster UVC streaming.,1,[],https://github.com/openmv/openmv/pull/402,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/402,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,403,2018-10-29T21:22:22Z,2018-10-29T21:27:41Z,2018-10-29T21:28:06Z,MERGED,True,15,118,2,https://github.com/iabdalkader,Revert MT to default snapshot function.,1,[],https://github.com/openmv/openmv/pull/403,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/403,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,404,2018-10-29T21:27:42Z,2018-10-29T21:37:46Z,2018-10-29T21:37:54Z,MERGED,True,0,9,1,https://github.com/iabdalkader,Remove streaming callback workaround.,1,[],https://github.com/openmv/openmv/pull/404,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/404,All sensors support streaming callback now.,All sensors support streaming callback now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,405,2018-10-31T00:20:54Z,2018-10-31T00:28:21Z,2018-10-31T00:28:25Z,MERGED,True,15,3,1,https://github.com/iabdalkader,Create hidden file for the IDE to detect OMV disk.,1,[],https://github.com/openmv/openmv/pull/405,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/405,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,406,2018-10-31T00:44:44Z,2018-10-31T00:50:26Z,2019-02-13T21:37:23Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Enable exFAT for OpenMV 3 and 4.,1,[],https://github.com/openmv/openmv/pull/406,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/406,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,407,2018-10-31T23:50:41Z,2018-10-31T23:56:52Z,2018-11-01T01:22:16Z,MERGED,True,6,8,1,https://github.com/iabdalkader,Parse config on soft resets.,1,[],https://github.com/openmv/openmv/pull/407,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/407,Otherwise config is read once and then reset.,Otherwise config is read once and then reset.,True,{}
openmv/openmv,https://github.com/openmv/openmv,408,2018-11-02T23:36:00Z,2018-11-02T23:53:12Z,2018-11-02T23:53:17Z,MERGED,True,71,419,9,https://github.com/iabdalkader,UVC: send GS descriptor for MT sensor.,1,[],https://github.com/openmv/openmv/pull/408,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/408,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,409,2018-11-04T10:55:53Z,2018-11-05T03:26:29Z,2018-11-05T18:19:59Z,CLOSED,False,51,0,2,https://github.com/kidswong999,add motor shield stepper driver and example,1,[],https://github.com/openmv/openmv/pull/409,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/409,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,409,2018-11-04T10:55:53Z,2018-11-05T03:26:29Z,2018-11-05T18:19:59Z,CLOSED,False,51,0,2,https://github.com/kidswong999,add motor shield stepper driver and example,1,[],https://github.com/openmv/openmv/pull/409,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/409#issuecomment-435689713,,"Cool, Ibrahim will merge.",True,{}
openmv/openmv,https://github.com/openmv/openmv,409,2018-11-04T10:55:53Z,2018-11-05T03:26:29Z,2018-11-05T18:19:59Z,CLOSED,False,51,0,2,https://github.com/kidswong999,add motor shield stepper driver and example,1,[],https://github.com/openmv/openmv/pull/409,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/409#issuecomment-435699122,,"@kidswong999 Hi, can you move motor_shield_stepper.py to scripts/libraries/ ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,409,2018-11-04T10:55:53Z,2018-11-05T03:26:29Z,2018-11-05T18:19:59Z,CLOSED,False,51,0,2,https://github.com/kidswong999,add motor shield stepper driver and example,1,[],https://github.com/openmv/openmv/pull/409,https://github.com/kidswong999,4,https://github.com/openmv/openmv/pull/409#issuecomment-435730235,,"@iabdalkader OK.
Emm, but what is the role of script/libraries? I noticed that pca9685.py is in script/examples.",True,{}
openmv/openmv,https://github.com/openmv/openmv,409,2018-11-04T10:55:53Z,2018-11-05T03:26:29Z,2018-11-05T18:19:59Z,CLOSED,False,51,0,2,https://github.com/kidswong999,add motor shield stepper driver and example,1,[],https://github.com/openmv/openmv/pull/409,https://github.com/iabdalkader,5,https://github.com/openmv/openmv/pull/409#issuecomment-435853081,,"@kidswong999 scripts/libraries is for libraries (modules you import). The IDE will search both examples and libraries, but if it can't copy to the camera it's easier to find imports in scripts/libraries. pca9685.py should be in libraries. If you want to send a PR to move pca to libraries go ahead.",True,{}
openmv/openmv,https://github.com/openmv/openmv,409,2018-11-04T10:55:53Z,2018-11-05T03:26:29Z,2018-11-05T18:19:59Z,CLOSED,False,51,0,2,https://github.com/kidswong999,add motor shield stepper driver and example,1,[],https://github.com/openmv/openmv/pull/409,https://github.com/kidswong999,6,https://github.com/openmv/openmv/pull/409#issuecomment-435862893,,"I add a new PR.
#410
It is more convenient to directly compile the commonly used libraries into firmware (such as pca9685, tb6612).
If the flash is enough. : )",True,{}
openmv/openmv,https://github.com/openmv/openmv,409,2018-11-04T10:55:53Z,2018-11-05T03:26:29Z,2018-11-05T18:19:59Z,CLOSED,False,51,0,2,https://github.com/kidswong999,add motor shield stepper driver and example,1,[],https://github.com/openmv/openmv/pull/409,https://github.com/kwagyeman,7,https://github.com/openmv/openmv/pull/409#issuecomment-435910017,,"Hey, I just merge libraries into the example folder in the IDE. Doing this for the GitHub matters little.",True,{}
openmv/openmv,https://github.com/openmv/openmv,409,2018-11-04T10:55:53Z,2018-11-05T03:26:29Z,2018-11-05T18:19:59Z,CLOSED,False,51,0,2,https://github.com/kidswong999,add motor shield stepper driver and example,1,[],https://github.com/openmv/openmv/pull/409,https://github.com/iabdalkader,8,https://github.com/openmv/openmv/pull/409#issuecomment-435979251,,"It is more convenient to directly compile the commonly used libraries into firmware (such as pca9685, tb6612).
If the flash is enough. : )

The M4 flash is full, so we'll have to disable those libraries for the M4 and then include them with the IDE again as scripts, so probably best to leave them as scripts for now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,410,2018-11-05T12:44:00Z,2018-11-05T18:15:14Z,2018-11-05T18:15:14Z,MERGED,True,104,0,3,https://github.com/kidswong999,"add tb6612 library, DC motors and stepper example",1,[],https://github.com/openmv/openmv/pull/410,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/410,"I rename the file, shorter.
motor.py example is easier to understand.","I rename the file, shorter.
motor.py example is easier to understand.",True,{}
openmv/openmv,https://github.com/openmv/openmv,422,2018-12-31T07:44:31Z,2018-12-31T16:32:14Z,2019-01-06T21:12:59Z,MERGED,True,237,12,7,https://github.com/kwagyeman,Kwabena/drawing updates,5,[],https://github.com/openmv/openmv/pull/422,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/422,Tested and works.,Tested and works.,True,{}
openmv/openmv,https://github.com/openmv/openmv,424,2019-01-04T07:52:48Z,2019-01-06T15:53:50Z,2019-01-06T21:12:58Z,MERGED,True,585,176,12,https://github.com/kwagyeman,"Various drawing, binary, and mathop fixes",14,[],https://github.com/openmv/openmv/pull/424,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/424,"This PR contains various fixes to the drawing, binary, and math op methods. I discovered many of the fixes while implementing the user requested ellipse method and gamma/contrast/brightness correction. Here's the fix list:

Added a gamma/contrast/brightness correction method which can fix the image extremely fast (uses a LUT to apply the correction).
Add transpose support to replace allowing you now to rotate the frame buffer by 90/180/270 degrees.
Added another image blend mode to div.
Allow non-integer scaling on draw_string.
Add alpha blending to draw_image (making it useful for thermal image overlays now).
Restored the ability of draw_keypoints to take a list of 3-value tuples to draw in.
Fixed a major bug in binary that caused it to ignore all thresholds passed in except the first.
Added more code examples per the above stuff.

Anyway, the commits are mostly atomic following git protocol. Working on adding in min_area_rect code to binary next per a user request on the forums.","This PR contains various fixes to the drawing, binary, and math op methods. I discovered many of the fixes while implementing the user requested ellipse method and gamma/contrast/brightness correction. Here's the fix list:

Added a gamma/contrast/brightness correction method which can fix the image extremely fast (uses a LUT to apply the correction).
Add transpose support to replace allowing you now to rotate the frame buffer by 90/180/270 degrees.
Added another image blend mode to div.
Allow non-integer scaling on draw_string.
Add alpha blending to draw_image (making it useful for thermal image overlays now).
Restored the ability of draw_keypoints to take a list of 3-value tuples to draw in.
Fixed a major bug in binary that caused it to ignore all thresholds passed in except the first.
Added more code examples per the above stuff.

Anyway, the commits are mostly atomic following git protocol. Working on adding in min_area_rect code to binary next per a user request on the forums.",True,{}
openmv/openmv,https://github.com/openmv/openmv,425,2019-01-06T15:50:34Z,2019-01-06T16:03:37Z,2019-01-06T16:04:06Z,MERGED,True,100,103,1,https://github.com/iabdalkader,Fix JPEG MCU boundaries.,1,[],https://github.com/openmv/openmv/pull/425,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/425,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,428,2019-01-15T12:35:51Z,2019-01-15T20:13:27Z,2019-06-24T05:03:25Z,MERGED,True,658,0,5,https://github.com/kidswong999,Add tv module for `video output SHIELD`,3,[],https://github.com/openmv/openmv/pull/428,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/428,"I don't know if the name tv is good enough.
If you have a good name, I can change it.","I don't know if the name tv is good enough.
If you have a good name, I can change it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,429,2019-01-19T01:57:42Z,2019-01-19T13:59:08Z,2019-01-19T13:59:17Z,MERGED,True,147,61,4,https://github.com/iabdalkader,Update CPU frequency scaling module.,3,[],https://github.com/openmv/openmv/pull/429,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/429,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,431,2019-01-22T09:14:18Z,2019-01-26T21:36:36Z,2019-01-26T21:36:36Z,MERGED,True,163,0,1,https://github.com/kidswong999,Create vl53l1x.py,1,[],https://github.com/openmv/openmv/pull/431,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/431,"I wrote the MicroPython driver for vl53l1x range sensor, it works perfect on OpenMV.","I wrote the MicroPython driver for vl53l1x range sensor, it works perfect on OpenMV.",True,{}
openmv/openmv,https://github.com/openmv/openmv,431,2019-01-22T09:14:18Z,2019-01-26T21:36:36Z,2019-01-26T21:36:36Z,MERGED,True,163,0,1,https://github.com/kidswong999,Create vl53l1x.py,1,[],https://github.com/openmv/openmv/pull/431,https://github.com/kidswong999,2,https://github.com/openmv/openmv/pull/431#issuecomment-456325482,"I wrote the MicroPython driver for vl53l1x range sensor, it works perfect on OpenMV.","There is a 90 bytes array VL51L1X_DEFAULT_CONFIGURATION.
I don't know if there is any optimization, such as putting the bytes array into flash.",True,{}
openmv/openmv,https://github.com/openmv/openmv,431,2019-01-22T09:14:18Z,2019-01-26T21:36:36Z,2019-01-26T21:36:36Z,MERGED,True,163,0,1,https://github.com/kidswong999,Create vl53l1x.py,1,[],https://github.com/openmv/openmv/pull/431,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/431#issuecomment-456473083,"I wrote the MicroPython driver for vl53l1x range sensor, it works perfect on OpenMV.",Should be fine to merge. I'll let Ibrahim do it.,True,{}
openmv/openmv,https://github.com/openmv/openmv,432,2019-01-26T18:28:28Z,2019-01-26T18:33:56Z,2019-01-26T18:34:01Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Disable exFAT.,1,[],https://github.com/openmv/openmv/pull/432,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/432,"The old FatFs R0.12b exFAT implementation is buggy, will disable exFAT until it gets updated.","The old FatFs R0.12b exFAT implementation is buggy, will disable exFAT until it gets updated.",True,{}
openmv/openmv,https://github.com/openmv/openmv,433,2019-01-26T20:30:29Z,2019-01-26T22:46:15Z,2019-01-26T22:46:15Z,MERGED,True,1437,282,13,https://github.com/kwagyeman,New Blob Code,37,[],https://github.com/openmv/openmv/pull/433,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/433,"It's got all the features for anyone to stop asking for stuff now.
I did the commits as I worked on the features versus waiting to till the very end. So, there's a lot of commits. I did not join lots of unrelated stuff into one commit however. The first commits are more atomic than the later ones.","It's got all the features for anyone to stop asking for stuff now.
I did the commits as I worked on the features versus waiting to till the very end. So, there's a lot of commits. I did not join lots of unrelated stuff into one commit however. The first commits are more atomic than the later ones.",True,{}
openmv/openmv,https://github.com/openmv/openmv,434,2019-01-27T05:42:02Z,2019-01-27T21:01:13Z,2019-01-27T21:01:13Z,CLOSED,False,602,399,12,https://github.com/kwagyeman,Fix M4 Compile and re-enable methods at the cost of JPEG speed.,4,[],https://github.com/openmv/openmv/pull/434,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/434,Made the YUV conversion done in software now versus a LUT on the M4. Speed is lower but we can fix more features. A fair trade for mostly debug functionality.,Made the YUV conversion done in software now versus a LUT on the M4. Speed is lower but we can fix more features. A fair trade for mostly debug functionality.,True,{}
openmv/openmv,https://github.com/openmv/openmv,434,2019-01-27T05:42:02Z,2019-01-27T21:01:13Z,2019-01-27T21:01:13Z,CLOSED,False,602,399,12,https://github.com/kwagyeman,Fix M4 Compile and re-enable methods at the cost of JPEG speed.,4,[],https://github.com/openmv/openmv/pull/434,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/434#issuecomment-457953854,Made the YUV conversion done in software now versus a LUT on the M4. Speed is lower but we can fix more features. A fair trade for mostly debug functionality.,Merged most of the commits.,True,{}
openmv/openmv,https://github.com/openmv/openmv,435,2019-01-27T21:23:02Z,2019-01-27T21:33:33Z,2019-01-27T21:33:36Z,MERGED,True,3,1,2,https://github.com/iabdalkader,Enable py_tv module.,1,[],https://github.com/openmv/openmv/pull/435,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/435,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,436,2019-01-28T05:31:31Z,2019-01-28T14:04:51Z,2019-10-04T18:07:15Z,MERGED,True,400,171,5,https://github.com/kwagyeman,Basic method updates,8,[],https://github.com/openmv/openmv/pull/436,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/436,Making essential image manipulation easier...,Making essential image manipulation easier...,True,{}
openmv/openmv,https://github.com/openmv/openmv,437,2019-01-29T01:32:28Z,2019-01-29T12:05:29Z,2019-01-29T12:05:29Z,CLOSED,False,1,0,1,https://github.com/slylzn,Get into this sphere,1,[],https://github.com/openmv/openmv/pull/437,https://github.com/slylzn,1,https://github.com/openmv/openmv/pull/437,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,437,2019-01-29T01:32:28Z,2019-01-29T12:05:29Z,2019-01-29T12:05:29Z,CLOSED,False,1,0,1,https://github.com/slylzn,Get into this sphere,1,[],https://github.com/openmv/openmv/pull/437,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/437#issuecomment-458393151,,Why would we merge this?,True,{}
openmv/openmv,https://github.com/openmv/openmv,438,2019-01-29T22:36:07Z,2019-01-29T22:58:33Z,2019-01-29T22:58:36Z,MERGED,True,62,62,1,https://github.com/iabdalkader,Use stdint in color conversion functions.,1,[],https://github.com/openmv/openmv/pull/438,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/438,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,439,2019-01-31T19:53:26Z,2019-01-31T23:03:11Z,2019-02-13T21:37:20Z,MERGED,True,9,3,2,https://github.com/iabdalkader,Use fb_alloc_mark to avoid dealloc'ing the extra FB.,1,[],https://github.com/openmv/openmv/pull/439,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/439,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,440,2019-02-03T04:23:42Z,2019-02-03T22:33:53Z,2019-10-04T18:07:09Z,MERGED,True,229,58,4,https://github.com/kwagyeman,Kwabena/upgrade copy ops,6,[],https://github.com/openmv/openmv/pull/440,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/440,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,441,2019-02-03T05:17:01Z,2019-02-03T16:40:43Z,2019-10-04T18:07:03Z,MERGED,True,8,4,1,https://github.com/kwagyeman,Fixed thermal image rotation issues,1,[],https://github.com/openmv/openmv/pull/441,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/441,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,442,2019-02-04T17:39:27Z,2019-02-04T20:54:43Z,2019-10-04T18:06:56Z,MERGED,True,29,100,2,https://github.com/kwagyeman,Cleanup color methods,1,[],https://github.com/openmv/openmv/pull/442,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/442,Per Ibrahim's request.,Per Ibrahim's request.,True,{}
openmv/openmv,https://github.com/openmv/openmv,443,2019-02-06T07:19:16Z,2019-02-06T17:23:17Z,2019-10-04T18:06:49Z,MERGED,True,192,42,1,https://github.com/kwagyeman,Kwabena/copy fixes,2,[],https://github.com/openmv/openmv/pull/443,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/443,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,445,2019-02-12T08:05:57Z,2019-02-12T12:59:13Z,2019-02-12T12:59:14Z,MERGED,True,0,10,1,https://github.com/kidswong999, remove rst pin,2,[],https://github.com/openmv/openmv/pull/445,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/445,remove rst pin in code.,remove rst pin in code.,True,{}
openmv/openmv,https://github.com/openmv/openmv,446,2019-02-13T21:13:20Z,2019-02-13T21:20:47Z,2019-02-13T21:20:50Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix keypoint op.,1,[],https://github.com/openmv/openmv/pull/446,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/446,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,447,2019-02-13T21:21:09Z,2019-02-13T21:30:21Z,2019-02-13T21:30:24Z,MERGED,True,8,3,3,https://github.com/iabdalkader,Link with libgcc for AEABI functions.,1,[],https://github.com/openmv/openmv/pull/447,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/447,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,448,2019-02-13T21:32:30Z,2019-02-13T21:32:46Z,2019-02-13T21:37:08Z,CLOSED,False,1,1,1,https://github.com/iabdalkader,Update FatFS to ff13c,1,[],https://github.com/openmv/openmv/pull/448,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/448,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,449,2019-02-13T21:37:58Z,2019-02-13T22:04:32Z,2019-02-13T22:04:39Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update FatFS to FF13C,1,[],https://github.com/openmv/openmv/pull/449,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/449,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,450,2019-02-13T22:05:58Z,2019-02-13T22:22:23Z,2019-02-13T22:22:26Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Enable exFAT support.,1,[],https://github.com/openmv/openmv/pull/450,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/450,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,451,2019-02-17T02:30:57Z,2019-02-17T16:07:58Z,2019-10-04T18:06:42Z,MERGED,True,387,118,8,https://github.com/kwagyeman,Kwabena/improve drawing stuff,7,[],https://github.com/openmv/openmv/pull/451,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/451,"Add methods to mask parts of the image (mask ellipse now works).
Improve clear given new functionality.
Fix rotation issues and scaling issues with drawing stuff.
Add character rotation support to draw text.

While it is possible to support 0-359 degree rotation via draw text you cannot do it by rotating the text directly. Instead you have to determine the area the rotated text would occupy and then project backwards into the character bitmap to grab the right pixel. I do this type of stuff in rotation correction. However, it would be a rather large re-write of draw_string to support an operation like this.
Users can draw a temp image, draw text on it, and then rotate it, and then draw the image if they need this functionality. draw_string will just support 90 degree rotation increments.","Add methods to mask parts of the image (mask ellipse now works).
Improve clear given new functionality.
Fix rotation issues and scaling issues with drawing stuff.
Add character rotation support to draw text.

While it is possible to support 0-359 degree rotation via draw text you cannot do it by rotating the text directly. Instead you have to determine the area the rotated text would occupy and then project backwards into the character bitmap to grab the right pixel. I do this type of stuff in rotation correction. However, it would be a rather large re-write of draw_string to support an operation like this.
Users can draw a temp image, draw text on it, and then rotate it, and then draw the image if they need this functionality. draw_string will just support 90 degree rotation increments.",True,{}
openmv/openmv,https://github.com/openmv/openmv,452,2019-02-20T07:01:18Z,2019-02-20T20:48:38Z,2019-10-04T18:06:35Z,MERGED,True,19,21,5,https://github.com/kwagyeman,Kwabena/add binary to sensor,2,[],https://github.com/openmv/openmv/pull/452,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/452,"This format is for use in the Image Lib module since sensor is where
we put the image types. It makes it possible to create binary images in RAM, frame buffer, etc.

Will work on the lepton and global shutter drivers next.","This format is for use in the Image Lib module since sensor is where
we put the image types. It makes it possible to create binary images in RAM, frame buffer, etc.

Will work on the lepton and global shutter drivers next.",True,{}
openmv/openmv,https://github.com/openmv/openmv,454,2019-02-21T15:29:57Z,2019-02-21T16:01:01Z,2019-02-21T16:01:11Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix H7 ADC bug.,1,[],https://github.com/openmv/openmv/pull/454,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/454,"Fix issue #453
Use ADC handle to read the used ADC instance.","Fix issue #453
Use ADC handle to read the used ADC instance.",True,{}
openmv/openmv,https://github.com/openmv/openmv,457,2019-02-24T18:02:58Z,2019-02-24T21:00:51Z,2019-02-24T21:00:58Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Apply ff13c patches.,1,[],https://github.com/openmv/openmv/pull/457,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/457,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,458,2019-02-25T13:39:42Z,2019-02-25T18:33:50Z,2019-02-25T18:33:53Z,CLOSED,False,51,51,10,https://github.com/iabdalkader,Force 32-bit Lepton enums.,2,[],https://github.com/openmv/openmv/pull/458,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/458,"libgcc uses variable sized enums and Lepton code assumes 32-bit enums.
Change all Lepton enums to force 32-bit enums.","libgcc uses variable sized enums and Lepton code assumes 32-bit enums.
Change all Lepton enums to force 32-bit enums.",True,{}
openmv/openmv,https://github.com/openmv/openmv,459,2019-02-25T20:13:34Z,2019-02-26T10:29:22Z,2019-02-26T10:31:08Z,MERGED,True,96,44,9,https://github.com/iabdalkader,Force 32-bit enums in Lepton code.,1,[],https://github.com/openmv/openmv/pull/459,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/459,Fix bug introduced by linking libgcc making enums variable size which breaks Lepton code.,Fix bug introduced by linking libgcc making enums variable size which breaks Lepton code.,True,{}
openmv/openmv,https://github.com/openmv/openmv,461,2019-03-01T19:17:52Z,2019-03-01T19:25:43Z,2019-03-05T16:23:03Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Check return value from set_framesize.,1,[],https://github.com/openmv/openmv/pull/461,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/461,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,462,2019-03-01T19:25:47Z,2019-03-01T19:45:56Z,2019-03-05T16:23:00Z,MERGED,True,0,4,1,https://github.com/iabdalkader,Fix MT set_framesize.,1,[],https://github.com/openmv/openmv/pull/462,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/462,"Fix exception if the order of functions call is swapped (set_framesize before set_pixformat)
The order of functions shouldn't matter, if necessary this check should be done in snapshot.
This fixes issue #444","Fix exception if the order of functions call is swapped (set_framesize before set_pixformat)
The order of functions shouldn't matter, if necessary this check should be done in snapshot.
This fixes issue #444",True,{}
openmv/openmv,https://github.com/openmv/openmv,463,2019-03-03T03:13:52Z,2019-03-04T16:34:55Z,2019-10-04T18:06:20Z,CLOSED,False,1376,36,23,https://github.com/kwagyeman,Kwabena/finalize flir lepton support,10,[],https://github.com/openmv/openmv/pull/463,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/463,"This PR contains the following features for the FLIR Lepton:

Adds the ability to change the color rainbow table LUT to the ironbow FLIR Lepton style LUT to make the image look cool. I updated the script that generates the rainbow table too.
Add methods to allow the user to get information about the FLIR Lepton attached
Add methods to allow the user to execute FLIR Lepton API functions so that they can mess with the module settings easily without us having to do any work on the firmware image.
Add the ability to turn the AGC off so that you can set a temperature range for the FLIR Lepton to look for. This allows you to actually use the sensor for real applications.
Added a ton of example scripts showing off how to use all this stuff.
Tested the software with the FLIR Lepton 1.0/2.0/2.5/3.5.","This PR contains the following features for the FLIR Lepton:

Adds the ability to change the color rainbow table LUT to the ironbow FLIR Lepton style LUT to make the image look cool. I updated the script that generates the rainbow table too.
Add methods to allow the user to get information about the FLIR Lepton attached
Add methods to allow the user to execute FLIR Lepton API functions so that they can mess with the module settings easily without us having to do any work on the firmware image.
Add the ability to turn the AGC off so that you can set a temperature range for the FLIR Lepton to look for. This allows you to actually use the sensor for real applications.
Added a ton of example scripts showing off how to use all this stuff.
Tested the software with the FLIR Lepton 1.0/2.0/2.5/3.5.",True,{}
openmv/openmv,https://github.com/openmv/openmv,463,2019-03-03T03:13:52Z,2019-03-04T16:34:55Z,2019-10-04T18:06:20Z,CLOSED,False,1376,36,23,https://github.com/kwagyeman,Kwabena/finalize flir lepton support,10,[],https://github.com/openmv/openmv/pull/463,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/463#issuecomment-469320321,"This PR contains the following features for the FLIR Lepton:

Adds the ability to change the color rainbow table LUT to the ironbow FLIR Lepton style LUT to make the image look cool. I updated the script that generates the rainbow table too.
Add methods to allow the user to get information about the FLIR Lepton attached
Add methods to allow the user to execute FLIR Lepton API functions so that they can mess with the module settings easily without us having to do any work on the firmware image.
Add the ability to turn the AGC off so that you can set a temperature range for the FLIR Lepton to look for. This allows you to actually use the sensor for real applications.
Added a ton of example scripts showing off how to use all this stuff.
Tested the software with the FLIR Lepton 1.0/2.0/2.5/3.5.",This doesn't work and when ioctl is added (or when PR #465 is merged) it will break this PR anyway.,True,{}
openmv/openmv,https://github.com/openmv/openmv,464,2019-03-03T03:40:57Z,2019-03-03T13:30:30Z,2019-10-04T18:06:27Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Make default jpeg res not so terrible.,1,[],https://github.com/openmv/openmv/pull/464,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/464,It's higher than 35... On the H7 it no longer looks so bad on startup.  Tested the M7 and M4 too.,It's higher than 35... On the H7 it no longer looks so bad on startup.  Tested the M7 and M4 too.,True,{}
openmv/openmv,https://github.com/openmv/openmv,465,2019-03-04T03:59:17Z,2019-03-04T16:44:13Z,2019-10-04T18:06:11Z,MERGED,True,161,38,7,https://github.com/kwagyeman,Kwabena/mt driver update,7,[],https://github.com/openmv/openmv/pull/465,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/465,"Fixed all resolution modes for the global shutter camera
Added a method to set the triggered mode
Added the ability to force the frame rate to be really high
Cleaned up the code.","Fixed all resolution modes for the global shutter camera
Added a method to set the triggered mode
Added the ability to force the frame rate to be really high
Cleaned up the code.",True,{}
openmv/openmv,https://github.com/openmv/openmv,466,2019-03-04T17:40:42Z,2019-03-04T17:58:00Z,2019-03-04T18:11:52Z,MERGED,True,27,0,4,https://github.com/iabdalkader,Add sensor ioctl function.,1,[],https://github.com/openmv/openmv/pull/466,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/466,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,467,2019-03-04T18:55:28Z,2019-03-04T19:16:03Z,2019-03-04T19:16:34Z,MERGED,True,66,63,6,https://github.com/iabdalkader,Implement MT triggered mode using ioctls,1,[],https://github.com/openmv/openmv/pull/467,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/467,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,468,2019-03-05T13:56:55Z,2019-03-05T14:04:41Z,2019-03-05T14:04:45Z,MERGED,True,9,22,1,https://github.com/iabdalkader,Flir fixes,2,[],https://github.com/openmv/openmv/pull/468,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/468,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,469,2019-03-05T16:14:17Z,2019-03-05T16:20:02Z,2019-03-05T16:22:48Z,MERGED,True,319,2,4,https://github.com/iabdalkader,Add ironbow lookup table,2,[],https://github.com/openmv/openmv/pull/469,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/469,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,470,2019-03-05T16:22:20Z,2019-03-05T16:45:05Z,2019-03-05T16:45:10Z,MERGED,True,47,5,5,https://github.com/iabdalkader,Add sensor function to change color palettes,2,[],https://github.com/openmv/openmv/pull/470,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/470,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,471,2019-03-05T19:08:40Z,2019-03-05T19:11:01Z,2019-03-05T19:11:01Z,CLOSED,False,168,12,4,https://github.com/iabdalkader,Add FLIR Lepton IOCTLs,1,[],https://github.com/openmv/openmv/pull/471,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/471,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,472,2019-03-05T19:13:06Z,2019-03-05T19:21:18Z,2019-03-05T19:21:28Z,MERGED,True,168,12,4,https://github.com/iabdalkader,Add FLIR Lepton IOCTLs,1,[],https://github.com/openmv/openmv/pull/472,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/472,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,473,2019-03-07T03:12:14Z,2019-03-07T16:44:48Z,2019-03-07T16:44:48Z,MERGED,True,3,3,1,https://github.com/peitschie,Avoid invalid mem access by validating post-rounded indices,1,[],https://github.com/openmv/openmv/pull/473,https://github.com/peitschie,1,https://github.com/openmv/openmv/pull/473,"These bounds checks were incorrect if sourceX/Y rounds up. In this situation, the unrounded source will be smaller than the limit by a factional amount (C will elevate the int bounds to a float for comparison), but the post-rounded version will equal the limit.
E.g.,
sourceX = 10.5
img->w = 11 (i.e., valid indices are [0-10])
sourceX2 = 11, which is invalid memory","These bounds checks were incorrect if sourceX/Y rounds up. In this situation, the unrounded source will be smaller than the limit by a factional amount (C will elevate the int bounds to a float for comparison), but the post-rounded version will equal the limit.
E.g.,
sourceX = 10.5
img->w = 11 (i.e., valid indices are [0-10])
sourceX2 = 11, which is invalid memory",True,{}
openmv/openmv,https://github.com/openmv/openmv,473,2019-03-07T03:12:14Z,2019-03-07T16:44:48Z,2019-03-07T16:44:48Z,MERGED,True,3,3,1,https://github.com/peitschie,Avoid invalid mem access by validating post-rounded indices,1,[],https://github.com/openmv/openmv/pull/473,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/473#issuecomment-470388721,"These bounds checks were incorrect if sourceX/Y rounds up. In this situation, the unrounded source will be smaller than the limit by a factional amount (C will elevate the int bounds to a float for comparison), but the post-rounded version will equal the limit.
E.g.,
sourceX = 10.5
img->w = 11 (i.e., valid indices are [0-10])
sourceX2 = 11, which is invalid memory",Is this to resolve the bug with the rotation method not doing perfect 90 degree rotations? I fixed another bug involving the round more liberally than I should which makes me guess this is the issue affecting this code. I haven't gotten around to fixing it yet.,True,{}
openmv/openmv,https://github.com/openmv/openmv,473,2019-03-07T03:12:14Z,2019-03-07T16:44:48Z,2019-03-07T16:44:48Z,MERGED,True,3,3,1,https://github.com/peitschie,Avoid invalid mem access by validating post-rounded indices,1,[],https://github.com/openmv/openmv/pull/473,https://github.com/peitschie,3,https://github.com/openmv/openmv/pull/473#issuecomment-470392768,"These bounds checks were incorrect if sourceX/Y rounds up. In this situation, the unrounded source will be smaller than the limit by a factional amount (C will elevate the int bounds to a float for comparison), but the post-rounded version will equal the limit.
E.g.,
sourceX = 10.5
img->w = 11 (i.e., valid indices are [0-10])
sourceX2 = 11, which is invalid memory","The fix was purely to avoid the invalid memory being accessed by this method. The bounds-checks meant that images rotated by unlucky amounts tended to get a line of white pixels (well... uninitialized memory/noise) near the upper bounds of the image.
I didn't look too hard at whether the rounding should have been done another way, just wanted to get rid of the clearly-bad data being added to the image.",True,{}
openmv/openmv,https://github.com/openmv/openmv,473,2019-03-07T03:12:14Z,2019-03-07T16:44:48Z,2019-03-07T16:44:48Z,MERGED,True,3,3,1,https://github.com/peitschie,Avoid invalid mem access by validating post-rounded indices,1,[],https://github.com/openmv/openmv/pull/473,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/473#issuecomment-470396414,"These bounds checks were incorrect if sourceX/Y rounds up. In this situation, the unrounded source will be smaller than the limit by a factional amount (C will elevate the int bounds to a float for comparison), but the post-rounded version will equal the limit.
E.g.,
sourceX = 10.5
img->w = 11 (i.e., valid indices are [0-10])
sourceX2 = 11, which is invalid memory","Okay, it should be merged in then.",True,{}
openmv/openmv,https://github.com/openmv/openmv,474,2019-03-07T17:33:21Z,2019-03-07T17:33:40Z,2019-03-07T17:33:44Z,MERGED,True,2,2,1,https://github.com/iabdalkader,Fix cascade converter script Windows bug.,1,[],https://github.com/openmv/openmv/pull/474,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/474,"Using open ""w"" instead of ""wb"" causes the script to fail on Windows.","Using open ""w"" instead of ""wb"" causes the script to fail on Windows.",True,{}
openmv/openmv,https://github.com/openmv/openmv,476,2019-03-11T05:47:37Z,2019-03-12T00:34:04Z,2019-03-12T00:34:04Z,MERGED,True,1,1,1,https://github.com/kidswong999,fixed class name,1,[],https://github.com/openmv/openmv/pull/476,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/476,VL53L0X => VL53L1X,VL53L0X => VL53L1X,True,{}
openmv/openmv,https://github.com/openmv/openmv,477,2019-03-11T05:53:02Z,2019-03-11T18:31:15Z,2019-10-04T18:06:05Z,CLOSED,False,784,39,16,https://github.com/kwagyeman,Kwabena/flir lepton pr round 2,17,[],https://github.com/openmv/openmv/pull/477,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/477,This is a redo of the previous flir functionality commit but now using the right ioctl methods.,This is a redo of the previous flir functionality commit but now using the right ioctl methods.,True,{}
openmv/openmv,https://github.com/openmv/openmv,477,2019-03-11T05:53:02Z,2019-03-11T18:31:15Z,2019-10-04T18:06:05Z,CLOSED,False,784,39,16,https://github.com/kwagyeman,Kwabena/flir lepton pr round 2,17,[],https://github.com/openmv/openmv/pull/477,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/477#issuecomment-471665183,This is a redo of the previous flir functionality commit but now using the right ioctl methods.,"This is all Merged in PRs #478 to #485 except init0 commit, also renamed GET_TYPE to GET_RADIOMETRY.",True,{}
openmv/openmv,https://github.com/openmv/openmv,478,2019-03-11T15:34:41Z,2019-03-11T16:09:59Z,2019-03-11T16:10:04Z,MERGED,True,55,11,4,https://github.com/iabdalkader,Add ioctl to get the lepton module width and height.,2,[],https://github.com/openmv/openmv/pull/478,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/478,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,479,2019-03-11T16:25:42Z,2019-03-11T16:33:10Z,2019-03-18T16:21:16Z,MERGED,True,121,19,4,https://github.com/iabdalkader,Add the ability to set the flir into measurment mode,1,[],https://github.com/openmv/openmv/pull/479,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/479,Measurement mode allows you to set a target temperature for the FLIR lepton so that you can actually use it to measure object temperatures and do useful things. We try to make the mode work on non-radiometric FLIR letpons however it will not be accurate.,Measurement mode allows you to set a target temperature for the FLIR lepton so that you can actually use it to measure object temperatures and do useful things. We try to make the mode work on non-radiometric FLIR letpons however it will not be accurate.,True,{}
openmv/openmv,https://github.com/openmv/openmv,480,2019-03-11T16:56:31Z,2019-03-11T17:04:57Z,2019-03-11T17:05:01Z,MERGED,True,28,0,1,https://github.com/iabdalkader,Add timeout and crash receovery code.,1,[],https://github.com/openmv/openmv/pull/480,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/480,The FLIR Lepton 3.5 sometimes doesn't startup. Our previous code just waited forever. The new code now will timeout but also will try to recover the FLIR Lepton 3.5 if possible if the video doesn't start in a timely manner.,The FLIR Lepton 3.5 sometimes doesn't startup. Our previous code just waited forever. The new code now will timeout but also will try to recover the FLIR Lepton 3.5 if possible if the video doesn't start in a timely manner.,True,{}
openmv/openmv,https://github.com/openmv/openmv,481,2019-03-11T17:07:13Z,2019-03-11T17:21:11Z,2019-03-11T17:26:23Z,MERGED,True,21,0,4,https://github.com/iabdalkader,Add method to get the color palette.,1,[],https://github.com/openmv/openmv/pull/481,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/481,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,482,2019-03-11T17:32:29Z,2019-03-11T17:39:57Z,2019-03-11T17:40:01Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix temperature equation.,1,[],https://github.com/openmv/openmv/pull/482,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/482,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,483,2019-03-11T17:41:36Z,2019-03-11T17:54:51Z,2019-03-11T17:54:55Z,MERGED,True,9,7,1,https://github.com/iabdalkader,Fix ioctls,3,[],https://github.com/openmv/openmv/pull/483,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/483,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,484,2019-03-11T17:57:24Z,2019-03-11T18:11:12Z,2019-03-11T18:11:16Z,MERGED,True,19,8,2,https://github.com/iabdalkader,Add color palette conversion to to_rainbow(),1,[],https://github.com/openmv/openmv/pull/484,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/484,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,485,2019-03-11T18:16:05Z,2019-03-11T18:28:53Z,2019-03-18T16:21:14Z,MERGED,True,516,0,10,https://github.com/iabdalkader,Add lepton examples.,1,[],https://github.com/openmv/openmv/pull/485,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/485,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,486,2019-03-12T20:42:22Z,2019-03-13T19:18:17Z,2019-03-13T19:24:04Z,MERGED,True,24,17,1,https://github.com/iabdalkader,Fix Lepton reset.,1,[],https://github.com/openmv/openmv/pull/486,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/486,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,487,2019-03-14T18:34:41Z,2019-03-14T19:01:31Z,2019-03-14T19:01:35Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Call lepton_reset in recovery code.,1,[],https://github.com/openmv/openmv/pull/487,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/487,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,489,2019-03-17T23:21:56Z,2019-03-18T15:08:10Z,2019-10-04T18:05:52Z,MERGED,True,48,4,6,https://github.com/kwagyeman,Fix exceptions from freeing fb_alloc_mark,1,[],https://github.com/openmv/openmv/pull/489,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/489,"This fix creates a flag that prevents fb_alloc_free_till_mark() from
doing anything unless there was a previous fb_alloc_mark(). Once
fb_alloc_free_till_mark() is called it will no longer do anything until
there's another fb_alloc_mark().
This means that if an exception is triggered while in code that
previously did fb_alloc_mark() the stack will be cleaned up.
If the fb_alloc_mark() method is not called then the stack will not be
cleaned up and that memory fb_alloc()'ed will remain until a soft reset.
All OpenMV Cam library code is designed to fb_alloc_mark() before using
the fb stack and then fb_alloc_free_till_mark() when complete. However,
in the case of py_sensor_alloc_extra_fb() it doesn't mark first such
that the RAM it allocates stays across exceptions and is only free'd via
py_sensor_dealloc_extra_fb() or via a soft reset.
...
Summary of changes:
fb_alloc.c -> Added a semaphore lock to prevent
fb_alloc_free_till_mark() from doing anything unless fb_alloc_mark() was
called first.
py_sensor.c -> Removed calling fb_alloc_mark() and
fb_alloc_free_till_mark() and re-arranged code calls to prevent a trival
leak sitatuion on heap exhaustion.
py_image.c, py_fir.c, py_lcd.c py_tv.c -> Added fb_alloc_mark() and
fb_alloc_free_till_mark() to methods originally coded without using it.
...
Note - I coded the mark semaphore lock in such a way things work even if
fb_alloc_mark() and fb_alloc_free_till_mark() calls are nested. This
allows the find_blobs() call-back methods to call py_image.c methods
still and also allows us to add more call-backs in the future without
worry if we need to.
...
Finally, if you have an exception in an interrupt handler all this above
breaks terribly. Given MP already breaks if you try to allocate memory
in an exception this is a ""won't fix problem"". Don't call code that can
have exceptions or needs memory in an interrupt handler.","This fix creates a flag that prevents fb_alloc_free_till_mark() from
doing anything unless there was a previous fb_alloc_mark(). Once
fb_alloc_free_till_mark() is called it will no longer do anything until
there's another fb_alloc_mark().
This means that if an exception is triggered while in code that
previously did fb_alloc_mark() the stack will be cleaned up.
If the fb_alloc_mark() method is not called then the stack will not be
cleaned up and that memory fb_alloc()'ed will remain until a soft reset.
All OpenMV Cam library code is designed to fb_alloc_mark() before using
the fb stack and then fb_alloc_free_till_mark() when complete. However,
in the case of py_sensor_alloc_extra_fb() it doesn't mark first such
that the RAM it allocates stays across exceptions and is only free'd via
py_sensor_dealloc_extra_fb() or via a soft reset.
...
Summary of changes:
fb_alloc.c -> Added a semaphore lock to prevent
fb_alloc_free_till_mark() from doing anything unless fb_alloc_mark() was
called first.
py_sensor.c -> Removed calling fb_alloc_mark() and
fb_alloc_free_till_mark() and re-arranged code calls to prevent a trival
leak sitatuion on heap exhaustion.
py_image.c, py_fir.c, py_lcd.c py_tv.c -> Added fb_alloc_mark() and
fb_alloc_free_till_mark() to methods originally coded without using it.
...
Note - I coded the mark semaphore lock in such a way things work even if
fb_alloc_mark() and fb_alloc_free_till_mark() calls are nested. This
allows the find_blobs() call-back methods to call py_image.c methods
still and also allows us to add more call-backs in the future without
worry if we need to.
...
Finally, if you have an exception in an interrupt handler all this above
breaks terribly. Given MP already breaks if you try to allocate memory
in an exception this is a ""won't fix problem"". Don't call code that can
have exceptions or needs memory in an interrupt handler.",True,{}
openmv/openmv,https://github.com/openmv/openmv,490,2019-03-18T15:40:24Z,2019-03-18T16:20:37Z,2019-03-18T16:21:00Z,MERGED,True,0,58,5,https://github.com/iabdalkader,Remove extra fb_free calls.,1,[],https://github.com/openmv/openmv/pull/490,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/490,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,492,2019-03-21T16:31:58Z,2019-03-21T16:59:51Z,2019-03-21T16:59:55Z,MERGED,True,3,3,2,https://github.com/iabdalkader,Fix NN enum sizes.,1,[],https://github.com/openmv/openmv/pull/492,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/492,"Fixes issue #491
Since enums are now short, make sure NN layer types are 4 bytes.","Fixes issue #491
Since enums are now short, make sure NN layer types are 4 bytes.",True,{}
openmv/openmv,https://github.com/openmv/openmv,493,2019-03-22T07:28:31Z,2019-03-22T11:27:06Z,2019-03-22T11:27:06Z,MERGED,True,98,0,1,https://github.com/kidswong999,bno055 lib for imu shield,1,[],https://github.com/openmv/openmv/pull/493,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/493,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,494,2019-03-22T20:47:50Z,2019-03-22T21:49:56Z,2019-04-26T22:05:24Z,MERGED,True,30,11,1,https://github.com/iabdalkader,Fix H7 JPEG encoder boundaries.,1,[],https://github.com/openmv/openmv/pull/494,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/494,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,495,2019-03-29T14:27:02Z,2019-03-29T15:54:24Z,2019-03-29T15:54:24Z,MERGED,True,23,0,1,https://github.com/kidswong999,imu shield example,1,[],https://github.com/openmv/openmv/pull/495,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/495,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,496,2019-03-29T14:40:42Z,2019-03-29T15:54:40Z,2019-03-29T15:54:40Z,MERGED,True,11,0,1,https://github.com/kidswong999,distance shield example,1,[],https://github.com/openmv/openmv/pull/496,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/496,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,497,2019-03-29T20:35:26Z,2019-03-29T21:16:33Z,2019-03-29T21:16:39Z,MERGED,True,12,8,4,https://github.com/iabdalkader,Enable logging in NN scripts.,1,[],https://github.com/openmv/openmv/pull/497,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/497,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,498,2019-03-30T03:53:22Z,2019-03-30T13:47:03Z,2019-03-30T13:47:03Z,MERGED,True,15,0,1,https://github.com/kidswong999,example for tv shield,1,[],https://github.com/openmv/openmv/pull/498,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/498,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,499,2019-03-31T22:19:44Z,2019-03-31T22:25:32Z,2019-03-31T22:25:35Z,MERGED,True,353,35,4,https://github.com/iabdalkader,Use nonsquare NN functions.,1,[],https://github.com/openmv/openmv/pull/499,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/499,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,502,2019-04-05T00:12:47Z,2019-04-05T14:23:22Z,2019-04-06T00:58:56Z,MERGED,True,22,11,1,https://github.com/rmackay9,Fixup MAVLink optical flow script after testing with ArduPilot,3,[],https://github.com/openmv/openmv/pull/502,https://github.com/rmackay9,1,https://github.com/openmv/openmv/pull/502,"This PR makes a few small but important changes to the example script for sending optical flow message (via mavlink) to mavlink enabled flight controllers like those running ArduPilot.
The fixes are:

fix to the direction (one axis was reversed) and scaling (the values were 3 to 5 times too small) of the flow sensor values being sent
always send packets regardless of whether the sensor has seen much movement.  This is important because the flight controller side performs best with regular updates.  One reason is that without messages it can't determine if the sensor has failed or not (i.e. does no message mean the sensor has failed or that it can't see anyway?).  Also the Extended Kalman Filter does best with regular samples.
added a green flashing LED which makes it more obvious if the script is running or not.  This is very optional and feel free to drop this commit if you're not happy with it.

By the way, here's a video of the camera in action on my quadcopter: https://www.youtube.com/watch?v=BmixVDBiIbA","This PR makes a few small but important changes to the example script for sending optical flow message (via mavlink) to mavlink enabled flight controllers like those running ArduPilot.
The fixes are:

fix to the direction (one axis was reversed) and scaling (the values were 3 to 5 times too small) of the flow sensor values being sent
always send packets regardless of whether the sensor has seen much movement.  This is important because the flight controller side performs best with regular updates.  One reason is that without messages it can't determine if the sensor has failed or not (i.e. does no message mean the sensor has failed or that it can't see anyway?).  Also the Extended Kalman Filter does best with regular samples.
added a green flashing LED which makes it more obvious if the script is running or not.  This is very optional and feel free to drop this commit if you're not happy with it.

By the way, here's a video of the camera in action on my quadcopter: https://www.youtube.com/watch?v=BmixVDBiIbA",True,{}
openmv/openmv,https://github.com/openmv/openmv,502,2019-04-05T00:12:47Z,2019-04-05T14:23:22Z,2019-04-06T00:58:56Z,MERGED,True,22,11,1,https://github.com/rmackay9,Fixup MAVLink optical flow script after testing with ArduPilot,3,[],https://github.com/openmv/openmv/pull/502,https://github.com/rmackay9,2,https://github.com/openmv/openmv/pull/502#issuecomment-480453847,"This PR makes a few small but important changes to the example script for sending optical flow message (via mavlink) to mavlink enabled flight controllers like those running ArduPilot.
The fixes are:

fix to the direction (one axis was reversed) and scaling (the values were 3 to 5 times too small) of the flow sensor values being sent
always send packets regardless of whether the sensor has seen much movement.  This is important because the flight controller side performs best with regular updates.  One reason is that without messages it can't determine if the sensor has failed or not (i.e. does no message mean the sensor has failed or that it can't see anyway?).  Also the Extended Kalman Filter does best with regular samples.
added a green flashing LED which makes it more obvious if the script is running or not.  This is very optional and feel free to drop this commit if you're not happy with it.

By the way, here's a video of the camera in action on my quadcopter: https://www.youtube.com/watch?v=BmixVDBiIbA",thanks!,True,{}
openmv/openmv,https://github.com/openmv/openmv,502,2019-04-05T00:12:47Z,2019-04-05T14:23:22Z,2019-04-06T00:58:56Z,MERGED,True,22,11,1,https://github.com/rmackay9,Fixup MAVLink optical flow script after testing with ArduPilot,3,[],https://github.com/openmv/openmv/pull/502,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/502#issuecomment-480460624,"This PR makes a few small but important changes to the example script for sending optical flow message (via mavlink) to mavlink enabled flight controllers like those running ArduPilot.
The fixes are:

fix to the direction (one axis was reversed) and scaling (the values were 3 to 5 times too small) of the flow sensor values being sent
always send packets regardless of whether the sensor has seen much movement.  This is important because the flight controller side performs best with regular updates.  One reason is that without messages it can't determine if the sensor has failed or not (i.e. does no message mean the sensor has failed or that it can't see anyway?).  Also the Extended Kalman Filter does best with regular samples.
added a green flashing LED which makes it more obvious if the script is running or not.  This is very optional and feel free to drop this commit if you're not happy with it.

By the way, here's a video of the camera in action on my quadcopter: https://www.youtube.com/watch?v=BmixVDBiIbA",Can you update the AprilTag script to with similar changes in another PR @rmackay9.,True,{}
openmv/openmv,https://github.com/openmv/openmv,502,2019-04-05T00:12:47Z,2019-04-05T14:23:22Z,2019-04-06T00:58:56Z,MERGED,True,22,11,1,https://github.com/rmackay9,Fixup MAVLink optical flow script after testing with ArduPilot,3,[],https://github.com/openmv/openmv/pull/502,https://github.com/rmackay9,4,https://github.com/openmv/openmv/pull/502#issuecomment-480461012,"This PR makes a few small but important changes to the example script for sending optical flow message (via mavlink) to mavlink enabled flight controllers like those running ArduPilot.
The fixes are:

fix to the direction (one axis was reversed) and scaling (the values were 3 to 5 times too small) of the flow sensor values being sent
always send packets regardless of whether the sensor has seen much movement.  This is important because the flight controller side performs best with regular updates.  One reason is that without messages it can't determine if the sensor has failed or not (i.e. does no message mean the sensor has failed or that it can't see anyway?).  Also the Extended Kalman Filter does best with regular samples.
added a green flashing LED which makes it more obvious if the script is running or not.  This is very optional and feel free to drop this commit if you're not happy with it.

By the way, here's a video of the camera in action on my quadcopter: https://www.youtube.com/watch?v=BmixVDBiIbA","@kwagyeman, yes will do.",True,{}
openmv/openmv,https://github.com/openmv/openmv,503,2019-04-11T16:56:37Z,2019-04-11T22:10:43Z,2019-04-11T22:15:12Z,MERGED,True,1,0,1,https://github.com/iabdalkader,Allow ctrl-C to work with UARTs put on REPL.,1,[],https://github.com/openmv/openmv/pull/503,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/503,Fix from MP upstream.,Fix from MP upstream.,True,{}
openmv/openmv,https://github.com/openmv/openmv,505,2019-04-15T21:45:27Z,2019-04-15T22:17:11Z,2019-04-15T22:17:15Z,MERGED,True,7,1,1,https://github.com/iabdalkader,WINC: Set ioctl function.,1,[],https://github.com/openmv/openmv/pull/505,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/505,MP code doesn't check for NULL ioctl.,MP code doesn't check for NULL ioctl.,True,{}
openmv/openmv,https://github.com/openmv/openmv,506,2019-04-17T20:28:05Z,2019-04-17T20:46:26Z,2019-04-17T20:46:29Z,MERGED,True,2,1,2,https://github.com/iabdalkader,Enable framebuf module,1,[],https://github.com/openmv/openmv/pull/506,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/506,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,509,2019-04-20T23:19:00Z,2019-04-20T23:29:21Z,2019-04-26T22:05:19Z,MERGED,True,4,4,3,https://github.com/iabdalkader,Move SCCB timing to board config files.,1,[],https://github.com/openmv/openmv/pull/509,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/509,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,510,2019-04-21T22:04:11Z,2019-04-21T22:10:48Z,2019-04-21T22:11:03Z,MERGED,True,2,2,1,https://github.com/iabdalkader,Fix H7 SD clock.,1,[],https://github.com/openmv/openmv/pull/510,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/510,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,511,2019-04-21T22:49:15Z,2019-04-21T22:54:25Z,2019-04-21T23:03:03Z,MERGED,True,3,3,2,https://github.com/iabdalkader,Set H7 frequency to 480MHz.,1,[],https://github.com/openmv/openmv/pull/511,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/511,"According to ST, the H7 can actually run at 480MHz.","According to ST, the H7 can actually run at 480MHz.",True,{}
openmv/openmv,https://github.com/openmv/openmv,512,2019-04-22T21:27:57Z,2019-04-22T21:35:28Z,2019-04-22T21:35:32Z,MERGED,True,234,28,3,https://github.com/iabdalkader,H7 clocks,2,[],https://github.com/openmv/openmv/pull/512,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/512,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,515,2019-04-26T21:20:00Z,2019-04-26T21:30:04Z,2019-04-26T22:05:15Z,MERGED,True,1,1,1,https://github.com/iabdalkader,OMV2 FFS fixes.,1,[],https://github.com/openmv/openmv/pull/515,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/515,"Enable exFAT for OpenMV2
Allow smaller filesystems to be created.
Fixes issue #514","Enable exFAT for OpenMV2
Allow smaller filesystems to be created.
Fixes issue #514",True,{}
openmv/openmv,https://github.com/openmv/openmv,517,2019-04-28T05:49:18Z,2019-04-28T13:39:57Z,2019-04-28T13:39:57Z,MERGED,True,3,0,1,https://github.com/ddech,fixed missing break statement in py_net_search.,1,[],https://github.com/openmv/openmv/pull/517,https://github.com/ddech,1,https://github.com/openmv/openmv/pull/517,"Add break statement in switch-case in py_net_search function.
Reference issue #516","Add break statement in switch-case in py_net_search function.
Reference issue #516",True,{}
openmv/openmv,https://github.com/openmv/openmv,518,2019-04-29T01:22:27Z,2019-04-29T01:41:48Z,2019-10-04T18:05:44Z,MERGED,True,3,3,1,https://github.com/kwagyeman,Fixed missing parens,1,[],https://github.com/openmv/openmv/pull/518,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/518,COLOR_YUV_TO_RGB565 was broken due to the missing parens.,COLOR_YUV_TO_RGB565 was broken due to the missing parens.,True,{}
openmv/openmv,https://github.com/openmv/openmv,519,2019-04-29T21:55:57Z,2019-04-29T22:39:34Z,2019-04-29T22:39:34Z,MERGED,True,6,1,2,https://github.com/ddech,include frozen_mpy.o when compiling a frozen module.,1,[],https://github.com/openmv/openmv/pull/519,https://github.com/ddech,1,https://github.com/openmv/openmv/pull/519,"when compiling a frozen module, include frozen_mpy.o object to prevent error
undefined reference to 'mp_frozen_mpy_names'
undefined reference to 'mp_frozen_mpy_names'
undefined reference to 'mp_frozen_mpy_content'
undefined reference to 'mp_qstr_frozen_const_pool'

reference issues #456","when compiling a frozen module, include frozen_mpy.o object to prevent error
undefined reference to 'mp_frozen_mpy_names'
undefined reference to 'mp_frozen_mpy_names'
undefined reference to 'mp_frozen_mpy_content'
undefined reference to 'mp_qstr_frozen_const_pool'

reference issues #456",True,{}
openmv/openmv,https://github.com/openmv/openmv,520,2019-05-01T16:25:38Z,2019-05-01T17:21:10Z,2019-05-01T23:54:00Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix Lepton clock.,1,[],https://github.com/openmv/openmv/pull/520,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/520,Set Lepton clock to 24MHz to work with the new clock speed.,Set Lepton clock to 24MHz to work with the new clock speed.,True,{}
openmv/openmv,https://github.com/openmv/openmv,522,2019-05-02T17:09:14Z,2019-05-02T17:21:38Z,2019-05-02T17:21:41Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix DMA_BUFFER macro.,1,[],https://github.com/openmv/openmv/pull/522,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/522,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,523,2019-05-02T18:32:35Z,2019-05-03T01:32:56Z,2019-05-03T01:32:56Z,MERGED,True,10,132,8,https://github.com/thyrrestrup,optimised solver for cifar10/cifar10_fast,1,[],https://github.com/openmv/openmv/pull/523,https://github.com/thyrrestrup,1,https://github.com/openmv/openmv/pull/523,"This enables multistep for the solver file and removes the need for multiple solver files.
This also reduces the number of times the setup procedure/network initialisation is done - from 3 to 1.
Also simplifies the train scripts.","This enables multistep for the solver file and removes the need for multiple solver files.
This also reduces the number of times the setup procedure/network initialisation is done - from 3 to 1.
Also simplifies the train scripts.",True,{}
openmv/openmv,https://github.com/openmv/openmv,523,2019-05-02T18:32:35Z,2019-05-03T01:32:56Z,2019-05-03T01:32:56Z,MERGED,True,10,132,8,https://github.com/thyrrestrup,optimised solver for cifar10/cifar10_fast,1,[],https://github.com/openmv/openmv/pull/523,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/523#issuecomment-488878194,"This enables multistep for the solver file and removes the need for multiple solver files.
This also reduces the number of times the setup procedure/network initialisation is done - from 3 to 1.
Also simplifies the train scripts.",Looks fine. I'm okay to merge.,True,{}
openmv/openmv,https://github.com/openmv/openmv,525,2019-05-09T13:05:22Z,2019-05-09T13:19:06Z,2019-08-23T13:47:47Z,MERGED,True,4,4,1,https://github.com/iabdalkader,Fix LBP ROI bug.,1,[],https://github.com/openmv/openmv/pull/525,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/525,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,528,2019-05-13T17:32:59Z,2019-05-13T17:54:19Z,2019-05-13T17:54:25Z,MERGED,True,1,1,1,https://github.com/iabdalkader,H7 DMA Fixes.,1,[],https://github.com/openmv/openmv/pull/528,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/528,"Initialize all members of DMA structs for H7.
Always reset and configure the H7 DMA peripheral.
Add SPI IRQ priority.
Enable SPI IRQ for H7 MCUs.","Initialize all members of DMA structs for H7.
Always reset and configure the H7 DMA peripheral.
Add SPI IRQ priority.
Enable SPI IRQ for H7 MCUs.",True,{}
openmv/openmv,https://github.com/openmv/openmv,529,2019-05-15T01:26:18Z,2019-05-15T01:31:02Z,2019-05-15T01:31:02Z,CLOSED,False,3,3,1,https://github.com/jjungwoopark,Patch 1,2,[],https://github.com/openmv/openmv/pull/529,https://github.com/jjungwoopark,1,https://github.com/openmv/openmv/pull/529,daf,daf,True,{}
openmv/openmv,https://github.com/openmv/openmv,529,2019-05-15T01:26:18Z,2019-05-15T01:31:02Z,2019-05-15T01:31:02Z,CLOSED,False,3,3,1,https://github.com/jjungwoopark,Patch 1,2,[],https://github.com/openmv/openmv/pull/529,https://github.com/jjungwoopark,2,https://github.com/openmv/openmv/pull/529#issuecomment-492469895,daf,sorry. my mistake,True,{}
openmv/openmv,https://github.com/openmv/openmv,530,2019-05-16T23:59:35Z,2019-05-17T14:09:28Z,2019-05-17T14:09:49Z,MERGED,True,276,0,1,https://github.com/ekrell,pyopenmv extended to support multiple cameras,1,[],https://github.com/openmv/openmv/pull/530,https://github.com/ekrell,1,https://github.com/openmv/openmv/pull/530,"Instead of a single global '__serial', this version has a list of them. Another list has just the port name. The two lists are parallel in that the index of one corresponds to the index of the other. So, any serial can be accessed by  searching for the port name.
I have been using this version for combining multiple cameras for OpenCV processing. Perhaps others will find it useful.","Instead of a single global '__serial', this version has a list of them. Another list has just the port name. The two lists are parallel in that the index of one corresponds to the index of the other. So, any serial can be accessed by  searching for the port name.
I have been using this version for combining multiple cameras for OpenCV processing. Perhaps others will find it useful.",True,{}
openmv/openmv,https://github.com/openmv/openmv,530,2019-05-16T23:59:35Z,2019-05-17T14:09:28Z,2019-05-17T14:09:49Z,MERGED,True,276,0,1,https://github.com/ekrell,pyopenmv extended to support multiple cameras,1,[],https://github.com/openmv/openmv/pull/530,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/530#issuecomment-493467607,"Instead of a single global '__serial', this version has a list of them. Another list has just the port name. The two lists are parallel in that the index of one corresponds to the index of the other. So, any serial can be accessed by  searching for the port name.
I have been using this version for combining multiple cameras for OpenCV processing. Perhaps others will find it useful.",Thanks!,True,{}
openmv/openmv,https://github.com/openmv/openmv,531,2019-05-17T22:52:08Z,2019-05-18T00:05:03Z,2019-05-18T00:05:23Z,MERGED,True,21,0,1,https://github.com/nezra,Update ssd1306.py,1,[],https://github.com/openmv/openmv/pull/531,https://github.com/nezra,1,https://github.com/openmv/openmv/pull/531,Add i2c support,Add i2c support,True,{}
openmv/openmv,https://github.com/openmv/openmv,531,2019-05-17T22:52:08Z,2019-05-18T00:05:03Z,2019-05-18T00:05:23Z,MERGED,True,21,0,1,https://github.com/nezra,Update ssd1306.py,1,[],https://github.com/openmv/openmv/pull/531,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/531#issuecomment-493630972,Add i2c support,Thanks!,True,{}
openmv/openmv,https://github.com/openmv/openmv,533,2019-05-31T14:09:00Z,2019-05-31T14:42:00Z,2019-05-31T14:42:54Z,MERGED,True,6,1,2,https://github.com/iabdalkader,Enable btree module.,2,[],https://github.com/openmv/openmv/pull/533,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/533,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,535,2019-06-10T07:11:24Z,2019-06-10T18:18:28Z,2019-10-04T18:05:29Z,MERGED,True,87,90,5,https://github.com/kwagyeman,Kwabena/ov7725 fixes,2,[],https://github.com/openmv/openmv/pull/535,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/535,"Fixes exposure control so that it works with new camera settings
Cleanedup other methods
Updated camera settings to provide better picture quality (at the cost of frame rate) - users should force the exposure to lock the frame rate if they need it.
Fixed banding settings for VGA (not possible to fix for lower resolutions as our fps gets too high).","Fixes exposure control so that it works with new camera settings
Cleanedup other methods
Updated camera settings to provide better picture quality (at the cost of frame rate) - users should force the exposure to lock the frame rate if they need it.
Fixed banding settings for VGA (not possible to fix for lower resolutions as our fps gets too high).",True,{}
openmv/openmv,https://github.com/openmv/openmv,536,2019-06-12T05:40:43Z,2019-06-12T05:47:40Z,2019-06-12T05:47:40Z,CLOSED,False,94,0,1,https://github.com/kidswong999,add modbus.py,1,[],https://github.com/openmv/openmv/pull/536,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/536,It works with the RS232 shield.,It works with the RS232 shield.,True,{}
openmv/openmv,https://github.com/openmv/openmv,537,2019-06-12T06:02:25Z,2019-06-13T12:59:05Z,2019-06-13T12:59:06Z,MERGED,True,104,0,2,https://github.com/kidswong999,Modbus,3,[],https://github.com/openmv/openmv/pull/537,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/537,The modbus library works with RS232 shield.,The modbus library works with RS232 shield.,True,{}
openmv/openmv,https://github.com/openmv/openmv,538,2019-06-20T18:04:35Z,2019-06-20T18:13:06Z,2019-06-20T18:13:55Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add static pin AF function from upstream.,1,[],https://github.com/openmv/openmv/pull/538,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/538,This is required for SDRAM driver.,This is required for SDRAM driver.,True,{}
openmv/openmv,https://github.com/openmv/openmv,539,2019-06-20T18:14:07Z,2019-06-20T18:48:43Z,2019-06-20T18:48:48Z,MERGED,True,2,1,2,https://github.com/iabdalkader,Add SDRAM driver,2,[],https://github.com/openmv/openmv/pull/539,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/539,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,540,2019-06-20T18:59:34Z,2019-06-20T19:25:32Z,2019-06-20T19:25:35Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix pin AF functions.,1,[],https://github.com/openmv/openmv/pull/540,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/540,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,541,2019-06-20T19:33:08Z,2019-06-20T19:43:14Z,2019-06-20T19:43:18Z,CLOSED,False,0,196,2,https://github.com/iabdalkader,Remove old SDRAM driver.,1,[],https://github.com/openmv/openmv/pull/541,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/541,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,542,2019-06-20T19:44:54Z,2019-06-20T19:56:18Z,2019-06-20T19:56:22Z,MERGED,True,1,197,3,https://github.com/iabdalkader,Remove old SDRAM driver.,1,[],https://github.com/openmv/openmv/pull/542,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/542,Add missing sdram header to stm32 port.,Add missing sdram header to stm32 port.,True,{}
openmv/openmv,https://github.com/openmv/openmv,543,2019-06-20T20:00:22Z,2019-06-20T20:09:24Z,2019-06-20T20:09:30Z,MERGED,True,398,1,4,https://github.com/iabdalkader,Add OPENMV4R board files.,1,[],https://github.com/openmv/openmv/pull/543,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/543,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,544,2019-06-21T12:28:36Z,2019-06-21T12:34:13Z,2019-06-21T12:34:16Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update OMV4R pins.,1,[],https://github.com/openmv/openmv/pull/544,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/544,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,545,2019-06-24T07:03:23Z,2019-07-12T21:37:34Z,2019-07-15T07:11:41Z,CLOSED,False,4764,47,12,https://github.com/kidswong999,Add OV5640 sensor,7,[],https://github.com/openmv/openmv/pull/545,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/545,"It works with RGB565 and Grayscale, not jpeg.","It works with RGB565 and Grayscale, not jpeg.",True,{}
openmv/openmv,https://github.com/openmv/openmv,545,2019-06-24T07:03:23Z,2019-07-12T21:37:34Z,2019-07-15T07:11:41Z,CLOSED,False,4764,47,12,https://github.com/kidswong999,Add OV5640 sensor,7,[],https://github.com/openmv/openmv/pull/545,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/545#issuecomment-511041627,"It works with RGB565 and Grayscale, not jpeg.","Hi, I merged this in #550
Made small fixes/edits/squashes. Thanks.",True,{}
openmv/openmv,https://github.com/openmv/openmv,545,2019-06-24T07:03:23Z,2019-07-12T21:37:34Z,2019-07-15T07:11:41Z,CLOSED,False,4764,47,12,https://github.com/kidswong999,Add OV5640 sensor,7,[],https://github.com/openmv/openmv/pull/545,https://github.com/kingsjl,3,https://github.com/openmv/openmv/pull/545#issuecomment-511295574,"It works with RGB565 and Grayscale, not jpeg.",support autofocus?,True,{}
openmv/openmv,https://github.com/openmv/openmv,549,2019-07-09T08:26:08Z,2019-09-06T13:53:59Z,2019-11-04T11:28:39Z,MERGED,True,56,0,1,https://github.com/kidswong999,Create pid.py,2,[],https://github.com/openmv/openmv/pull/549,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/549,refer to https://github.com/SingTown/OpenMV-Pan-Tilt/blob/master/pan-tilt/src/pid.py,refer to https://github.com/SingTown/OpenMV-Pan-Tilt/blob/master/pan-tilt/src/pid.py,True,{}
openmv/openmv,https://github.com/openmv/openmv,549,2019-07-09T08:26:08Z,2019-09-06T13:53:59Z,2019-11-04T11:28:39Z,MERGED,True,56,0,1,https://github.com/kidswong999,Create pid.py,2,[],https://github.com/openmv/openmv/pull/549,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/549#issuecomment-509749596,refer to https://github.com/SingTown/OpenMV-Pan-Tilt/blob/master/pan-tilt/src/pid.py,Can you add some comments to the script?,True,{}
openmv/openmv,https://github.com/openmv/openmv,549,2019-07-09T08:26:08Z,2019-09-06T13:53:59Z,2019-11-04T11:28:39Z,MERGED,True,56,0,1,https://github.com/kidswong999,Create pid.py,2,[],https://github.com/openmv/openmv/pull/549,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/549#issuecomment-511041869,refer to https://github.com/SingTown/OpenMV-Pan-Tilt/blob/master/pan-tilt/src/pid.py,What does this do ?,True,{}
openmv/openmv,https://github.com/openmv/openmv,549,2019-07-09T08:26:08Z,2019-09-06T13:53:59Z,2019-11-04T11:28:39Z,MERGED,True,56,0,1,https://github.com/kidswong999,Create pid.py,2,[],https://github.com/openmv/openmv/pull/549,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/549#issuecomment-528060221,refer to https://github.com/SingTown/OpenMV-Pan-Tilt/blob/master/pan-tilt/src/pid.py,"I want to either merge or close this, any update ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,549,2019-07-09T08:26:08Z,2019-09-06T13:53:59Z,2019-11-04T11:28:39Z,MERGED,True,56,0,1,https://github.com/kidswong999,Create pid.py,2,[],https://github.com/openmv/openmv/pull/549,https://github.com/kidswong999,5,https://github.com/openmv/openmv/pull/549#issuecomment-528680663,refer to https://github.com/SingTown/OpenMV-Pan-Tilt/blob/master/pan-tilt/src/pid.py,"I add a small example,
Sorry, I was too busy recently and I forgot about it.😊",True,{}
openmv/openmv,https://github.com/openmv/openmv,550,2019-07-12T21:20:36Z,2019-07-12T21:35:15Z,2019-08-23T13:47:45Z,MERGED,True,4759,41,12,https://github.com/iabdalkader,Add support for OV5640,4,[],https://github.com/openmv/openmv/pull/550,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/550,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,552,2019-07-18T23:42:35Z,2019-07-22T21:33:16Z,2019-07-22T21:33:20Z,CLOSED,False,2,2,1,https://github.com/iabdalkader,Fix JPEG mode.,1,[],https://github.com/openmv/openmv/pull/552,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/552,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,554,2019-07-21T06:34:52Z,2019-07-22T21:36:27Z,2019-10-04T18:05:02Z,MERGED,True,491,444,7,https://github.com/kwagyeman,Kwabena/ov2640 fixes,4,[],https://github.com/openmv/openmv/pull/554,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/554,"Images are right side up now.
Picture quality is acceptable (not as good as the OV7725)
All auto functions work now (the OV2640 ignores exposure control
however)
Added XGA frame size.
JPEG mode is enabled but needs work still (not sure if the H7 hardware
can capture the packet stream fast enough not to drop bytes).
Fix bayer/jpeg image print statement.","Images are right side up now.
Picture quality is acceptable (not as good as the OV7725)
All auto functions work now (the OV2640 ignores exposure control
however)
Added XGA frame size.
JPEG mode is enabled but needs work still (not sure if the H7 hardware
can capture the packet stream fast enough not to drop bytes).
Fix bayer/jpeg image print statement.",True,{}
openmv/openmv,https://github.com/openmv/openmv,555,2019-07-21T21:55:14Z,2019-07-21T22:04:43Z,2019-08-23T13:47:44Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix servo timer.,1,[],https://github.com/openmv/openmv/pull/555,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/555,"Timer IRQ handler wasn't called.
Fixes #553","Timer IRQ handler wasn't called.
Fixes #553",True,{}
openmv/openmv,https://github.com/openmv/openmv,556,2019-07-23T00:49:38Z,2019-07-24T11:55:24Z,2019-07-24T11:55:28Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix max DCMI transfer size.,1,[],https://github.com/openmv/openmv/pull/556,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/556,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,559,2019-08-10T16:54:57Z,2019-08-10T17:06:27Z,2019-08-10T17:06:32Z,MERGED,True,10,8,1,https://github.com/iabdalkader,Fix buffer alignment for JPEG mode.,1,[],https://github.com/openmv/openmv/pull/559,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/559,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,560,2019-08-11T16:04:46Z,2019-08-12T11:21:03Z,2019-08-23T13:47:39Z,MERGED,True,6,6,1,https://github.com/iabdalkader,Fix cache maintenance issue in JPEG mode.,1,[],https://github.com/openmv/openmv/pull/560,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/560,"In JPEG mode the cacheable framebuffer memory is used directly by the DMA, instead of the line buffer.
Cache maintenance must be performed before the CPU accesses the framebuffer memory.","In JPEG mode the cacheable framebuffer memory is used directly by the DMA, instead of the line buffer.
Cache maintenance must be performed before the CPU accesses the framebuffer memory.",True,{}
openmv/openmv,https://github.com/openmv/openmv,560,2019-08-11T16:04:46Z,2019-08-12T11:21:03Z,2019-08-23T13:47:39Z,MERGED,True,6,6,1,https://github.com/iabdalkader,Fix cache maintenance issue in JPEG mode.,1,[],https://github.com/openmv/openmv/pull/560,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/560#issuecomment-520306560,"In JPEG mode the cacheable framebuffer memory is used directly by the DMA, instead of the line buffer.
Cache maintenance must be performed before the CPU accesses the framebuffer memory.",Tested and works. It looks like the end of the jpeg stream is always 0xFFD9 or 0xFFD9D9D9D9D9 etc. E.g. there's extra D9 padding. While this doesn't need to be cleaned up to read the jpeg data is is extra garbage that could be removed.,True,{}
openmv/openmv,https://github.com/openmv/openmv,561,2019-08-12T20:24:22Z,2019-08-12T20:30:15Z,2019-08-12T20:32:04Z,MERGED,True,2,5,2,https://github.com/iabdalkader,Fix RTC issues on H7.,1,[],https://github.com/openmv/openmv/pull/561,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/561,"Update extint from upstream to fix EXTI number.
Fix EXTI numbers in rtc.c
Disable wakeup timer when initializing RTC.
Call RTC init in soft reset.","Update extint from upstream to fix EXTI number.
Fix EXTI numbers in rtc.c
Disable wakeup timer when initializing RTC.
Call RTC init in soft reset.",True,{}
openmv/openmv,https://github.com/openmv/openmv,562,2019-08-18T05:26:08Z,2019-08-20T00:41:54Z,2019-10-04T18:04:53Z,MERGED,True,131,74,6,https://github.com/kwagyeman,Kwabena/ov2640 final,2,[],https://github.com/openmv/openmv/pull/562,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/562,"Two commits

The first commit makes jpeg mode work even when the jpeg image is larger than the jpeg buffer. Frame rate takes a noise dive however. Also, added methods for sending jpeg data to the IDE over serial.
The second commit fixes the resolution errors previous with the OV2640. Setting the resolution works right now.

All features of the OV2640 driver appear to work except for AEC control. Turning AEC off/on doesn't appear to do anything. Not sure how to fix. We can definitely change the exposure value but the camera doesn't really care what we write and stays in auto mode. Without new information this is a won't fix.","Two commits

The first commit makes jpeg mode work even when the jpeg image is larger than the jpeg buffer. Frame rate takes a noise dive however. Also, added methods for sending jpeg data to the IDE over serial.
The second commit fixes the resolution errors previous with the OV2640. Setting the resolution works right now.

All features of the OV2640 driver appear to work except for AEC control. Turning AEC off/on doesn't appear to do anything. Not sure how to fix. We can definitely change the exposure value but the camera doesn't really care what we write and stays in auto mode. Without new information this is a won't fix.",True,{}
openmv/openmv,https://github.com/openmv/openmv,562,2019-08-18T05:26:08Z,2019-08-20T00:41:54Z,2019-10-04T18:04:53Z,MERGED,True,131,74,6,https://github.com/kwagyeman,Kwabena/ov2640 final,2,[],https://github.com/openmv/openmv/pull/562,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/562#issuecomment-522292395,"Two commits

The first commit makes jpeg mode work even when the jpeg image is larger than the jpeg buffer. Frame rate takes a noise dive however. Also, added methods for sending jpeg data to the IDE over serial.
The second commit fixes the resolution errors previous with the OV2640. Setting the resolution works right now.

All features of the OV2640 driver appear to work except for AEC control. Turning AEC off/on doesn't appear to do anything. Not sure how to fix. We can definitely change the exposure value but the camera doesn't really care what we write and stays in auto mode. Without new information this is a won't fix.",Switching to work on DRAM version now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,565,2019-08-23T13:48:17Z,2019-08-23T13:54:21Z,2019-08-23T13:54:24Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update RTC from upstream.,1,[],https://github.com/openmv/openmv/pull/565,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/565,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,566,2019-08-23T18:54:30Z,2019-08-23T19:01:50Z,2019-08-23T19:02:30Z,MERGED,True,4,0,1,https://github.com/iabdalkader,Restore sensor shutdown state on reset.,1,[],https://github.com/openmv/openmv/pull/566,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/566,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,568,2019-08-25T17:09:33Z,2019-08-25T17:15:39Z,2019-08-25T17:15:43Z,MERGED,True,69,61,4,https://github.com/iabdalkader,WINC1500: Support static IP.,1,[],https://github.com/openmv/openmv/pull/568,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/568,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,569,2019-08-25T17:19:14Z,2019-08-25T17:29:42Z,2019-08-25T17:29:45Z,MERGED,True,16,16,3,https://github.com/iabdalkader,Rename IP_ADDR_LEN to IPV4_ADDR_LEN.,1,[],https://github.com/openmv/openmv/pull/569,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/569,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,570,2019-08-25T22:51:25Z,2019-08-25T23:26:10Z,2019-08-25T23:26:16Z,MERGED,True,73,0,4,https://github.com/iabdalkader,WINC1500: Add netinfo function.,1,[],https://github.com/openmv/openmv/pull/570,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/570,"Returns connection RSSI, security type, remote MAC address and IP.","Returns connection RSSI, security type, remote MAC address and IP.",True,{}
openmv/openmv,https://github.com/openmv/openmv,571,2019-08-27T16:12:03Z,2019-08-27T16:20:52Z,2019-08-27T16:39:05Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix H7 deepsleep.,1,[],https://github.com/openmv/openmv/pull/571,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/571,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,574,2019-08-30T15:05:25Z,2019-08-30T15:15:18Z,2019-08-30T16:22:44Z,MERGED,True,22,0,2,https://github.com/iabdalkader,Add FB alloc stats.,1,[],https://github.com/openmv/openmv/pull/574,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/574,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,575,2019-08-30T16:36:45Z,2019-08-30T16:59:26Z,2019-08-30T16:59:29Z,MERGED,True,15,1,1,https://github.com/iabdalkader,Improved fb_alloc stats.,2,[],https://github.com/openmv/openmv/pull/575,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/575,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,576,2019-09-03T05:03:46Z,2019-09-03T11:21:52Z,2019-10-04T18:04:28Z,MERGED,True,115,1,1,https://github.com/kwagyeman,Allow apriltag detection on vflip and hmirrored images.,1,[],https://github.com/openmv/openmv/pull/576,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/576,A little bit more decoder overhead but not really that much.,A little bit more decoder overhead but not really that much.,True,{}
openmv/openmv,https://github.com/openmv/openmv,577,2019-09-03T05:05:22Z,2019-09-03T11:22:41Z,2019-10-04T18:05:36Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix Quote Location,1,[],https://github.com/openmv/openmv/pull/577,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/577,User pointed this out a while back,User pointed this out a while back,True,{}
openmv/openmv,https://github.com/openmv/openmv,578,2019-09-03T05:10:26Z,2019-09-04T19:55:45Z,2019-09-04T19:55:45Z,CLOSED,False,118,26,17,https://github.com/kwagyeman,Kwabena/sdram support,4,[],https://github.com/openmv/openmv/pull/578,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/578,"The jpeg compression timeout was too low initially for jpeg compressing UXGA images and etc. from the OV2640 (you can also just capture a JPG image from the OV2640 too).
High res apriltag support allows doing apriltag detection on high res images. Performance is poor because of low DRAM speed.","The jpeg compression timeout was too low initially for jpeg compressing UXGA images and etc. from the OV2640 (you can also just capture a JPG image from the OV2640 too).
High res apriltag support allows doing apriltag detection on high res images. Performance is poor because of low DRAM speed.",True,{}
openmv/openmv,https://github.com/openmv/openmv,578,2019-09-03T05:10:26Z,2019-09-04T19:55:45Z,2019-09-04T19:55:45Z,CLOSED,False,118,26,17,https://github.com/kwagyeman,Kwabena/sdram support,4,[],https://github.com/openmv/openmv/pull/578,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/578#issuecomment-527487508,"The jpeg compression timeout was too low initially for jpeg compressing UXGA images and etc. from the OV2640 (you can also just capture a JPG image from the OV2640 too).
High res apriltag support allows doing apriltag detection on high res images. Performance is poor because of low DRAM speed.",Let me check why that happens. It builds on my machine.,True,{}
openmv/openmv,https://github.com/openmv/openmv,578,2019-09-03T05:10:26Z,2019-09-04T19:55:45Z,2019-09-04T19:55:45Z,CLOSED,False,118,26,17,https://github.com/kwagyeman,Kwabena/sdram support,4,[],https://github.com/openmv/openmv/pull/578,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/578#issuecomment-527593286,"The jpeg compression timeout was too low initially for jpeg compressing UXGA images and etc. from the OV2640 (you can also just capture a JPG image from the OV2640 too).
High res apriltag support allows doing apriltag detection on high res images. Performance is poor because of low DRAM speed.","Let me check why that happens. It builds on my machine.

CI is having an issue finding that commit I think, anyway there shouldn't be any edits to src/micropython.",True,{}
openmv/openmv,https://github.com/openmv/openmv,578,2019-09-03T05:10:26Z,2019-09-04T19:55:45Z,2019-09-04T19:55:45Z,CLOSED,False,118,26,17,https://github.com/kwagyeman,Kwabena/sdram support,4,[],https://github.com/openmv/openmv/pull/578,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/578#issuecomment-527594840,"The jpeg compression timeout was too low initially for jpeg compressing UXGA images and etc. from the OV2640 (you can also just capture a JPG image from the OV2640 too).
High res apriltag support allows doing apriltag detection on high res images. Performance is poor because of low DRAM speed.","Ah, okay, I rebased off of master and it needed MP updated. I think I can fix this.",True,{}
openmv/openmv,https://github.com/openmv/openmv,578,2019-09-03T05:10:26Z,2019-09-04T19:55:45Z,2019-09-04T19:55:45Z,CLOSED,False,118,26,17,https://github.com/kwagyeman,Kwabena/sdram support,4,[],https://github.com/openmv/openmv/pull/578,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/578#issuecomment-527595324,"The jpeg compression timeout was too low initially for jpeg compressing UXGA images and etc. from the OV2640 (you can also just capture a JPG image from the OV2640 too).
High res apriltag support allows doing apriltag detection on high res images. Performance is poor because of low DRAM speed.","Actually, if you could fix this will get done faster. I can't look at this until much later tonight. Please feel free to cherry pick the commits.",True,{}
openmv/openmv,https://github.com/openmv/openmv,578,2019-09-03T05:10:26Z,2019-09-04T19:55:45Z,2019-09-04T19:55:45Z,CLOSED,False,118,26,17,https://github.com/kwagyeman,Kwabena/sdram support,4,[],https://github.com/openmv/openmv/pull/578,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/578#issuecomment-527672224,"The jpeg compression timeout was too low initially for jpeg compressing UXGA images and etc. from the OV2640 (you can also just capture a JPG image from the OV2640 too).
High res apriltag support allows doing apriltag detection on high res images. Performance is poor because of low DRAM speed.","Please feel free to cherry pick the commits.

I can't do that either, can't pull this locally.",True,{}
openmv/openmv,https://github.com/openmv/openmv,579,2019-09-04T05:44:26Z,2019-09-04T19:52:34Z,2019-10-04T18:04:20Z,MERGED,True,117,25,16,https://github.com/kwagyeman,Kwabena/sdram support 2,4,[],https://github.com/openmv/openmv/pull/579,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/579,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,580,2019-09-04T21:03:05Z,2019-09-04T21:21:03Z,2019-09-04T21:21:12Z,MERGED,True,15,11,2,https://github.com/iabdalkader,"Add memory offsets for FFS, JPEG and VOSPI buffers.",1,[],https://github.com/openmv/openmv/pull/580,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/580,"Allow FFS, JPEG and VOSPI buffers to be moved to any dedicated region with an offset.","Allow FFS, JPEG and VOSPI buffers to be moved to any dedicated region with an offset.",True,{}
openmv/openmv,https://github.com/openmv/openmv,581,2019-09-05T20:13:34Z,2019-09-05T20:39:14Z,2019-09-05T20:39:37Z,MERGED,True,1068,452,175,https://github.com/iabdalkader,License update.,1,[],https://github.com/openmv/openmv/pull/581,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/581,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,582,2019-09-06T13:52:06Z,2019-09-08T23:43:34Z,2019-09-08T23:43:37Z,MERGED,True,793,813,3,https://github.com/iabdalkader,"Fix printf issue in apriltags, dmtx and lsd.",1,[],https://github.com/openmv/openmv/pull/582,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/582,"The root cause for this issue is ""define double float"". printf functions promote
float to double, which is #define'd as float causing the implicit conversion error.
Replaced all double with float, and DBL_MIN and FLT_MIN etc... and added explicit
cast to double in printf functions.","The root cause for this issue is ""define double float"". printf functions promote
float to double, which is #define'd as float causing the implicit conversion error.
Replaced all double with float, and DBL_MIN and FLT_MIN etc... and added explicit
cast to double in printf functions.",True,{}
openmv/openmv,https://github.com/openmv/openmv,582,2019-09-06T13:52:06Z,2019-09-08T23:43:34Z,2019-09-08T23:43:37Z,MERGED,True,793,813,3,https://github.com/iabdalkader,"Fix printf issue in apriltags, dmtx and lsd.",1,[],https://github.com/openmv/openmv/pull/582,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/582#issuecomment-529194115,"The root cause for this issue is ""define double float"". printf functions promote
float to double, which is #define'd as float causing the implicit conversion error.
Replaced all double with float, and DBL_MIN and FLT_MIN etc... and added explicit
cast to double in printf functions.",@kwagyeman Can you test this ? I want to merge it.,True,{}
openmv/openmv,https://github.com/openmv/openmv,583,2019-09-08T14:49:33Z,2019-09-09T00:02:03Z,2019-09-09T00:02:12Z,MERGED,True,6,5,1,https://github.com/iabdalkader,Fix binary ops bug.,1,[],https://github.com/openmv/openmv/pull/583,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/583,fix #534,fix #534,True,{}
openmv/openmv,https://github.com/openmv/openmv,583,2019-09-08T14:49:33Z,2019-09-09T00:02:03Z,2019-09-09T00:02:12Z,MERGED,True,6,5,1,https://github.com/iabdalkader,Fix binary ops bug.,1,[],https://github.com/openmv/openmv/pull/583,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/583#issuecomment-529211302,fix #534,"I don't see how this fixes the bug, can you explain? Um, so, the thing to note is that BMP images are store upside down sometimes. So, with PPM/PNM you always read the image in top to bottom order which makes writing code for it easy. BMP images can start bottom to top however or top to bottom. This makes working with them harder as you have to handle that and invert the operation direction.",True,{}
openmv/openmv,https://github.com/openmv/openmv,583,2019-09-08T14:49:33Z,2019-09-09T00:02:03Z,2019-09-09T00:02:12Z,MERGED,True,6,5,1,https://github.com/iabdalkader,Fix binary ops bug.,1,[],https://github.com/openmv/openmv/pull/583,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/583#issuecomment-529212811,fix #534,"@kwagyeman This wasn't the only issue with the code, the temp image height was set to the max lines that fit alloc, so I limit that to image height. The other change line_start is always 0, this is an issue only when the buffer is less than height (otherwise it copies the whole image in one go).",True,{}
openmv/openmv,https://github.com/openmv/openmv,584,2019-09-09T00:06:40Z,2019-09-09T00:15:20Z,2019-10-04T18:04:15Z,MERGED,True,13,1,5,https://github.com/kwagyeman,Disable 8-way connectivity,1,[],https://github.com/openmv/openmv/pull/584,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/584,"Not neccessarily needed and takes 2-4x more processing power. If FPS is
not a concern enable it.","Not neccessarily needed and takes 2-4x more processing power. If FPS is
not a concern enable it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,586,2019-09-09T16:01:34Z,2019-09-09T16:21:36Z,2019-09-09T16:21:39Z,MERGED,True,18,22,4,https://github.com/iabdalkader,Remove line_start from read_pixels functions.,1,[],https://github.com/openmv/openmv/pull/586,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/586,line_start is not used in these functions.,line_start is not used in these functions.,True,{}
openmv/openmv,https://github.com/openmv/openmv,587,2019-09-11T22:07:07Z,2019-09-11T22:20:22Z,2019-09-11T22:20:25Z,MERGED,True,42,14,4,https://github.com/iabdalkader,WINC1500: Fix timeout bugs.,2,[],https://github.com/openmv/openmv/pull/587,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/587,"Setting timeout to 0 (from MicroPython) makes the socket blocking instead of non-blocking.
Sockets were closed on recv/recvfrom timeout.","Setting timeout to 0 (from MicroPython) makes the socket blocking instead of non-blocking.
Sockets were closed on recv/recvfrom timeout.",True,{}
openmv/openmv,https://github.com/openmv/openmv,588,2019-09-11T22:12:59Z,2019-09-11T22:27:22Z,2019-09-11T22:27:25Z,MERGED,True,43,7,3,https://github.com/iabdalkader,Mqtt fixes,2,[],https://github.com/openmv/openmv/pull/588,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/588,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,589,2019-09-13T19:07:42Z,2019-09-13T19:18:34Z,2019-09-13T19:18:37Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix accept() bug.,1,[],https://github.com/openmv/openmv/pull/589,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/589,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,590,2019-09-16T15:05:30Z,2019-09-16T15:07:42Z,2019-09-16T15:09:23Z,CLOSED,False,4,2,3,https://github.com/iabdalkader,Add FDCAN support.,1,[],https://github.com/openmv/openmv/pull/590,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/590,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,591,2019-09-16T15:21:36Z,2019-09-16T15:21:57Z,2019-09-16T15:22:00Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix Accept() hardfault.,1,[],https://github.com/openmv/openmv/pull/591,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/591,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,592,2019-09-16T15:25:53Z,2019-09-16T15:34:22Z,2019-09-16T15:35:54Z,MERGED,True,4,2,3,https://github.com/iabdalkader,Add FDCAN support.,1,[],https://github.com/openmv/openmv/pull/592,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/592,Fixes #526,Fixes #526,True,{}
openmv/openmv,https://github.com/openmv/openmv,593,2019-09-22T22:23:36Z,2019-09-28T20:49:44Z,2019-09-28T20:51:22Z,MERGED,True,46,39,6,https://github.com/iabdalkader,Update MP to 1.11,6,[],https://github.com/openmv/openmv/pull/593,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/593,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,594,2019-09-27T14:55:32Z,2019-09-27T15:04:58Z,2019-09-27T15:05:03Z,MERGED,True,11,2,3,https://github.com/iabdalkader,Fix jpeg timeout,2,[],https://github.com/openmv/openmv/pull/594,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/594,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,595,2019-09-29T22:29:30Z,2019-09-29T22:36:27Z,2019-09-29T22:36:28Z,MERGED,True,80,32,53,https://github.com/iabdalkader,Travis Updates.,6,[],https://github.com/openmv/openmv/pull/595,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/595,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,596,2019-09-30T15:17:52Z,2019-09-30T15:27:19Z,2020-02-11T18:19:56Z,MERGED,True,72,33,6,https://github.com/iabdalkader,Update examples.,1,[],https://github.com/openmv/openmv/pull/596,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/596,"Add Arduino UART example.
Update Arduino SPI example to use callbacks.
Remove printf from timer_control.py callback.
Add PWM channel 3 and servo 3 to pwm and servo examples.","Add Arduino UART example.
Update Arduino SPI example to use callbacks.
Remove printf from timer_control.py callback.
Add PWM channel 3 and servo 3 to pwm and servo examples.",True,{}
openmv/openmv,https://github.com/openmv/openmv,597,2019-09-30T15:33:20Z,2019-09-30T15:54:48Z,2019-09-30T15:54:53Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix SPI WFI bug.,1,[],https://github.com/openmv/openmv/pull/597,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/597,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,598,2019-10-05T04:48:57Z,2019-10-06T21:25:36Z,2019-10-06T21:25:36Z,MERGED,True,344,273,43,https://github.com/kwagyeman,Kwabena/fb alloc caching 2,2,[],https://github.com/openmv/openmv/pull/598,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/598,Please look at the two commits separately. It's easier to see the diffs that way.,Please look at the two commits separately. It's easier to see the diffs that way.,True,{}
openmv/openmv,https://github.com/openmv/openmv,599,2019-10-08T06:01:09Z,2019-10-08T11:34:18Z,2019-10-08T11:34:18Z,MERGED,True,3,3,1,https://github.com/kwagyeman,Fix reading RGB 24-bit images,1,[],https://github.com/openmv/openmv/pull/599,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/599,Found by Tobias.,Found by Tobias.,True,{}
openmv/openmv,https://github.com/openmv/openmv,600,2019-10-09T19:02:01Z,2019-10-09T19:11:41Z,2019-10-09T19:12:07Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Enable additional pins.,1,[],https://github.com/openmv/openmv/pull/600,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/600,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,601,2019-10-10T12:21:30Z,2019-10-10T13:22:21Z,2019-10-10T13:22:26Z,MERGED,True,73065,86711,289,https://github.com/iabdalkader,Update CMSIS.,1,[],https://github.com/openmv/openmv/pull/601,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/601,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,602,2019-10-10T22:52:25Z,2019-10-10T23:05:46Z,2019-10-10T23:05:49Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Increase VREF threshold in self-tests.,1,[],https://github.com/openmv/openmv/pull/602,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/602,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,603,2019-10-10T23:08:06Z,2019-10-10T23:18:59Z,2019-10-10T23:19:10Z,MERGED,True,196109,58707,229,https://github.com/iabdalkader,Update h7 hal,7,[],https://github.com/openmv/openmv/pull/603,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/603,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,604,2019-10-10T23:30:47Z,2019-10-10T23:38:18Z,2019-10-10T23:39:42Z,MERGED,True,10,1,1,https://github.com/iabdalkader,Enable VSCALE0 for revision V devices.,1,[],https://github.com/openmv/openmv/pull/604,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/604,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,605,2019-10-11T03:40:32Z,2019-10-11T16:26:36Z,2019-10-11T16:26:36Z,MERGED,True,39,1,1,https://github.com/kwagyeman,Fix bmp file reading for all formats,1,[],https://github.com/openmv/openmv/pull/605,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/605,Tested and works. All BMP file types should work now. Found by Tobias.,Tested and works. All BMP file types should work now. Found by Tobias.,True,{}
openmv/openmv,https://github.com/openmv/openmv,606,2019-10-11T18:13:57Z,2019-10-11T18:23:29Z,2019-10-11T18:23:36Z,MERGED,True,26,5,1,https://github.com/iabdalkader,Update H7 PLLs.,1,[],https://github.com/openmv/openmv/pull/606,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/606,Use PLL2 for FMC and PLL3 for SPI123.,Use PLL2 for FMC and PLL3 for SPI123.,True,{}
openmv/openmv,https://github.com/openmv/openmv,607,2019-10-12T03:58:10Z,2019-10-12T10:51:48Z,2019-10-12T10:51:48Z,MERGED,True,8,0,2,https://github.com/kwagyeman,Fix missing bank enables,1,[],https://github.com/openmv/openmv/pull/607,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/607,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,608,2019-10-12T14:39:40Z,2019-10-12T14:53:48Z,2019-10-12T14:53:52Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Cleanup adc.c.,1,[],https://github.com/openmv/openmv/pull/608,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/608,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,609,2019-10-14T21:35:59Z,2019-10-14T21:43:10Z,2019-10-14T21:43:35Z,MERGED,True,10304,4429,47,https://github.com/iabdalkader,Update WINC1500 firmware and host driver.,1,[],https://github.com/openmv/openmv/pull/609,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/609,Update to firmware 19.6.1 host driver 19.3.0.,Update to firmware 19.6.1 host driver 19.3.0.,True,{}
openmv/openmv,https://github.com/openmv/openmv,610,2019-10-15T14:11:35Z,2019-10-19T17:58:26Z,2019-10-23T16:25:56Z,MERGED,True,8906,2,45,https://github.com/thibthibaut,Integration of STM32Cube.AI in the firmware,4,[],https://github.com/openmv/openmv/pull/610,https://github.com/thibthibaut,1,https://github.com/openmv/openmv/pull/610,"This enables a user to compile a custom version of the OpenMV firmware enabling neural networks generated by ST tool Cube.AI.
All the instructions to use Cube.AI with OpenMV are provided in src/stm32cubeai/Readme.md","This enables a user to compile a custom version of the OpenMV firmware enabling neural networks generated by ST tool Cube.AI.
All the instructions to use Cube.AI with OpenMV are provided in src/stm32cubeai/Readme.md",True,{}
openmv/openmv,https://github.com/openmv/openmv,610,2019-10-15T14:11:35Z,2019-10-19T17:58:26Z,2019-10-23T16:25:56Z,MERGED,True,8906,2,45,https://github.com/thibthibaut,Integration of STM32Cube.AI in the firmware,4,[],https://github.com/openmv/openmv/pull/610,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/610#issuecomment-543172831,"This enables a user to compile a custom version of the OpenMV firmware enabling neural networks generated by ST tool Cube.AI.
All the instructions to use Cube.AI with OpenMV are provided in src/stm32cubeai/Readme.md","@thibthibaut I think there's a mismatch between the generated code and the libraries in the PR, I'm getting lots of errors when trying to test this with code generated with X-CUBE-AI 4.1.0 ?
data/network.c:231:36: error: macro ""AI_TENSOR_OBJ_DECLARE"" passed 9 arguments, but takes just 5
   1, &conv2d_3_scratch0_array, NULL)
                                    ^
data/network.c:235:36: error: macro ""AI_TENSOR_OBJ_DECLARE"" passed 9 arguments, but takes just 5
   1, &conv2d_2_scratch0_array, NULL)
                                    ^
data/network.c:228:1: error: unknown type name 'AI_TENSOR_OBJ_DECLARE'
 AI_TENSOR_OBJ_DECLARE(
Which X-CUBE-AI version should I use ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,610,2019-10-15T14:11:35Z,2019-10-19T17:58:26Z,2019-10-23T16:25:56Z,MERGED,True,8906,2,45,https://github.com/thibthibaut,Integration of STM32Cube.AI in the firmware,4,[],https://github.com/openmv/openmv/pull/610,https://github.com/thibthibaut,3,https://github.com/openmv/openmv/pull/610#issuecomment-543787920,"This enables a user to compile a custom version of the OpenMV firmware enabling neural networks generated by ST tool Cube.AI.
All the instructions to use Cube.AI with OpenMV are provided in src/stm32cubeai/Readme.md","Hello @iabdalkader , you're right I was using the 4.0.0 version of X-Cube-AI hence the missmatch. The latest commit fixes that and supports the 4.1.0 version of the tool.",True,{}
openmv/openmv,https://github.com/openmv/openmv,610,2019-10-15T14:11:35Z,2019-10-19T17:58:26Z,2019-10-23T16:25:56Z,MERGED,True,8906,2,45,https://github.com/thibthibaut,Integration of STM32Cube.AI in the firmware,4,[],https://github.com/openmv/openmv/pull/610,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/610#issuecomment-544182591,"This enables a user to compile a custom version of the OpenMV firmware enabling neural networks generated by ST tool Cube.AI.
All the instructions to use Cube.AI with OpenMV are provided in src/stm32cubeai/Readme.md",@thibthibaut Thanks for the update. I've merged this PR in #613 and made a few changes to make sure this still works if mpconfigport and qstrs change in the future.,True,{}
openmv/openmv,https://github.com/openmv/openmv,610,2019-10-15T14:11:35Z,2019-10-19T17:58:26Z,2019-10-23T16:25:56Z,MERGED,True,8906,2,45,https://github.com/thibthibaut,Integration of STM32Cube.AI in the firmware,4,[],https://github.com/openmv/openmv/pull/610,https://github.com/thibthibaut,5,https://github.com/openmv/openmv/pull/610#issuecomment-545526247,"This enables a user to compile a custom version of the OpenMV firmware enabling neural networks generated by ST tool Cube.AI.
All the instructions to use Cube.AI with OpenMV are provided in src/stm32cubeai/Readme.md","Hello Ibrahim,
Thank you for merging the pull request! I added today a little update on
license informations.

Have a nice day!

Thibaut
…
On Sat, 19 Oct 2019, 20:11 Ibrahim Abd Elkader, ***@***.***> wrote:
 @thibthibaut <https://github.com/thibthibaut> Thanks for the update. I've
 merged this PR in #613 <#613> and
 made a few changes to make sure this still works if mpconfigport and qstrs
 change in the future.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#610?email_source=notifications&email_token=ABCIKCTVFDROPAWO43PH7I3QPNEUBA5CNFSM4JA5G5D2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEBXZCPY#issuecomment-544182591>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ABCIKCSGSSEZFPBZM7MJCT3QPNEUBANCNFSM4JA5G5DQ>
 .",True,{}
openmv/openmv,https://github.com/openmv/openmv,611,2019-10-16T07:01:39Z,2019-10-16T11:13:14Z,2019-10-16T11:13:15Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Move flag setting inside the curly braces.,1,[],https://github.com/openmv/openmv/pull/611,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/611,Found this bug because the tensorflow code does fb_alloc all and then frees it and then allocs again. Should not have missed this before.,Found this bug because the tensorflow code does fb_alloc all and then frees it and then allocs again. Should not have missed this before.,True,{}
openmv/openmv,https://github.com/openmv/openmv,612,2019-10-16T18:14:17Z,2019-10-16T22:56:15Z,2019-10-16T22:56:19Z,MERGED,True,43,6,3,https://github.com/iabdalkader,Return string errors from WINC1500 init function.,1,[],https://github.com/openmv/openmv/pull/612,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/612,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,613,2019-10-19T17:22:10Z,2019-10-19T17:58:25Z,2019-10-19T17:58:29Z,MERGED,True,7353,11,45,https://github.com/iabdalkader,Stm32cubeai,11,[],https://github.com/openmv/openmv/pull/613,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/613,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,614,2019-10-21T19:15:26Z,2019-10-21T19:31:01Z,2019-10-21T19:32:25Z,MERGED,True,6,1,2,https://github.com/iabdalkader,OMV4R: Use QSPI for internal storage.,1,[],https://github.com/openmv/openmv/pull/614,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/614,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,615,2019-10-21T19:32:29Z,2019-10-21T19:57:51Z,2019-10-21T19:58:14Z,MERGED,True,8,0,1,https://github.com/iabdalkader,WINC: Check for empty SSID and/or key.,1,[],https://github.com/openmv/openmv/pull/615,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/615,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,616,2019-10-21T23:54:11Z,2019-10-22T13:51:26Z,2019-10-22T13:51:29Z,MERGED,True,5,7,2,https://github.com/iabdalkader,Pwr fixes,3,[],https://github.com/openmv/openmv/pull/616,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/616,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,619,2019-10-23T15:09:30Z,2019-10-23T21:28:43Z,2019-10-23T21:28:43Z,MERGED,True,22,2,2,https://github.com/thibthibaut,Updated license informations,1,[],https://github.com/openmv/openmv/pull/619,https://github.com/thibthibaut,1,https://github.com/openmv/openmv/pull/619,Clarified license information in stm32cube.AI,Clarified license information in stm32cube.AI,True,{}
openmv/openmv,https://github.com/openmv/openmv,620,2019-10-24T11:46:22Z,2019-10-24T15:17:05Z,2019-10-24T16:40:07Z,MERGED,True,27,6388,31,https://github.com/thibthibaut,License,3,[],https://github.com/openmv/openmv/pull/620,https://github.com/thibthibaut,1,https://github.com/openmv/openmv/pull/620,Removed Cube.AI specific files and added instruction to link them from its installation path to avoid dependancy on versions and missmatches between the API and the runtime library.,Removed Cube.AI specific files and added instruction to link them from its installation path to avoid dependancy on versions and missmatches between the API and the runtime library.,True,{}
openmv/openmv,https://github.com/openmv/openmv,620,2019-10-24T11:46:22Z,2019-10-24T15:17:05Z,2019-10-24T16:40:07Z,MERGED,True,27,6388,31,https://github.com/thibthibaut,License,3,[],https://github.com/openmv/openmv/pull/620,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/620#issuecomment-545997623,Removed Cube.AI specific files and added instruction to link them from its installation path to avoid dependancy on versions and missmatches between the API and the runtime library.,"Wait, this makes it.hard to compile the code. Please undo this PR. Our firmware should not require an install path. This is not approved.",True,{}
openmv/openmv,https://github.com/openmv/openmv,620,2019-10-24T11:46:22Z,2019-10-24T15:17:05Z,2019-10-24T16:40:07Z,MERGED,True,27,6388,31,https://github.com/thibthibaut,License,3,[],https://github.com/openmv/openmv/pull/620,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/620#issuecomment-546002647,Removed Cube.AI specific files and added instruction to link them from its installation path to avoid dependancy on versions and missmatches between the API and the runtime library.,"@kwagyeman Those Cube.AI files are required only if CUBEAI=1 is defined, so it doesn't affect the main firmware build. I trust ST know what's best for their demo that's why I've merged it. That said, I agree it makes it harder to test the example (I liked it more when it was all self-contained). @kwagyeman suggested that you add a step to fetch the required files and libraries if they don't exist @thibthibaut.",True,{}
openmv/openmv,https://github.com/openmv/openmv,621,2019-10-25T06:28:16Z,2019-10-25T19:09:43Z,2019-10-25T19:09:43Z,CLOSED,False,1184,8,27,https://github.com/kwagyeman,Add support for TensorFlow Lite for Microcontrollers,1,[],https://github.com/openmv/openmv/pull/621,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/621,"This has been a long-time coming, but, it's finally here. TensorFlow lite
runs on the OpenMV Cam now. Better yet, a person detection model
is now built-into all OpenMV Cams too!
Our default code does image classification and supports multi-scale
object detection using a sliding window.
In a coming PR I will add mobilenet examples for the H7 with SDRAM
and image segmentation support.","This has been a long-time coming, but, it's finally here. TensorFlow lite
runs on the OpenMV Cam now. Better yet, a person detection model
is now built-into all OpenMV Cams too!
Our default code does image classification and supports multi-scale
object detection using a sliding window.
In a coming PR I will add mobilenet examples for the H7 with SDRAM
and image segmentation support.",True,{}
openmv/openmv,https://github.com/openmv/openmv,621,2019-10-25T06:28:16Z,2019-10-25T19:09:43Z,2019-10-25T19:09:43Z,CLOSED,False,1184,8,27,https://github.com/kwagyeman,Add support for TensorFlow Lite for Microcontrollers,1,[],https://github.com/openmv/openmv/pull/621,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/621#issuecomment-546476577,"This has been a long-time coming, but, it's finally here. TensorFlow lite
runs on the OpenMV Cam now. Better yet, a person detection model
is now built-into all OpenMV Cams too!
Our default code does image classification and supports multi-scale
object detection using a sliding window.
In a coming PR I will add mobilenet examples for the H7 with SDRAM
and image segmentation support.",merged in #622,True,{}
openmv/openmv,https://github.com/openmv/openmv,622,2019-10-25T19:01:01Z,2019-10-25T19:09:05Z,2019-10-25T19:09:32Z,MERGED,True,1182,6,27,https://github.com/iabdalkader,Add support for TensorFlow Lite for Microcontrollers,1,[],https://github.com/openmv/openmv/pull/622,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/622,"This has been a long-time coming, but, it's finally here. TensorFlow lite
runs on the OpenMV Cam now. Better yet, a person detection model
is now built-into all OpenMV Cams too!
Our default code does image classification and supports multi-scale
object detection using a sliding window.
In a coming PR I will add mobilenet examples for the H7 with SDRAM
and image segmentation support.","This has been a long-time coming, but, it's finally here. TensorFlow lite
runs on the OpenMV Cam now. Better yet, a person detection model
is now built-into all OpenMV Cams too!
Our default code does image classification and supports multi-scale
object detection using a sliding window.
In a coming PR I will add mobilenet examples for the H7 with SDRAM
and image segmentation support.",True,{}
openmv/openmv,https://github.com/openmv/openmv,623,2019-10-25T20:02:38Z,2019-10-25T21:32:27Z,2020-02-11T18:19:59Z,MERGED,True,85,23,6,https://github.com/iabdalkader,Wifi updates,3,[],https://github.com/openmv/openmv/pull/623,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/623,"Fix recv() bug introduced after WINC1500 host driver/firmware updates.
Enable modussl via mbedtls.
Update HTTP client example.
Add HTTPS client example.
Fixes #348","Fix recv() bug introduced after WINC1500 host driver/firmware updates.
Enable modussl via mbedtls.
Update HTTP client example.
Add HTTPS client example.
Fixes #348",True,{}
openmv/openmv,https://github.com/openmv/openmv,624,2019-10-25T21:06:13Z,2019-10-25T21:16:36Z,2019-10-25T21:17:37Z,MERGED,True,2,2,2,https://github.com/iabdalkader,Disable YUV table for OMV4 and OMV4R.,1,[],https://github.com/openmv/openmv/pull/624,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/624,"Disable YUV tables for H7 cameras to temporarily save FLASH.
Since H7 cameras have and use the HW JPEG encoder the side effects are minimal.","Disable YUV tables for H7 cameras to temporarily save FLASH.
Since H7 cameras have and use the HW JPEG encoder the side effects are minimal.",True,{}
openmv/openmv,https://github.com/openmv/openmv,625,2019-10-25T21:35:42Z,2019-10-25T21:48:40Z,2019-10-25T21:48:48Z,MERGED,True,8,8,1,https://github.com/iabdalkader,Fix Makefile order dependency issue causing non-parallel to fail.,1,[],https://github.com/openmv/openmv/pull/625,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/625,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,626,2019-10-27T07:04:30Z,2019-10-27T10:21:49Z,2019-11-04T11:28:37Z,MERGED,True,9,0,1,https://github.com/kidswong999,light example for light shield,1,[],https://github.com/openmv/openmv/pull/626,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/626,A simple example.,A simple example.,True,{}
openmv/openmv,https://github.com/openmv/openmv,628,2019-10-28T16:22:57Z,2019-10-28T16:37:04Z,2019-10-28T16:37:08Z,MERGED,True,6,6,2,https://github.com/iabdalkader,Freq scaling updates,2,[],https://github.com/openmv/openmv/pull/628,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/628,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,629,2019-10-29T06:56:22Z,2019-10-29T11:18:59Z,2019-10-29T11:18:59Z,MERGED,True,126,65,2,https://github.com/kwagyeman,Add support for image segmentation.,1,[],https://github.com/openmv/openmv/pull/629,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/629,"With the segment method you can execute the CNN on an image and get the list of images back (per channel) that represent the CNN output mask.
This is cool because for DIY robocars we can make a really light-weight CNN that segments the image between line and no-line and gives back an image you can then call get_regression() on.","With the segment method you can execute the CNN on an image and get the list of images back (per channel) that represent the CNN output mask.
This is cool because for DIY robocars we can make a really light-weight CNN that segments the image between line and no-line and gives back an image you can then call get_regression() on.",True,{}
openmv/openmv,https://github.com/openmv/openmv,631,2019-10-29T22:55:40Z,2019-10-29T23:05:31Z,2019-10-29T23:05:36Z,MERGED,True,11,1,2,https://github.com/iabdalkader,Add ulab submodule.,1,[],https://github.com/openmv/openmv/pull/631,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/631,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,632,2019-10-29T23:18:58Z,2019-10-30T00:03:39Z,2019-10-30T00:04:04Z,MERGED,True,92,0,1,https://github.com/iabdalkader,Make images iterable.,1,[],https://github.com/openmv/openmv/pull/632,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/632,"Allow iterating over image objects.
This is mainly to support creating ulab ndarrays from images.","Allow iterating over image objects.
This is mainly to support creating ulab ndarrays from images.",True,{}
openmv/openmv,https://github.com/openmv/openmv,633,2019-10-30T07:28:22Z,2019-10-30T14:24:08Z,2019-10-30T14:24:08Z,MERGED,True,144,24,5,https://github.com/kwagyeman,Kwabena/add mobilenet examples,4,[],https://github.com/openmv/openmv/pull/633,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/633,This is the final tensorflow example thing I want to add for now. We have to get the transfer learning and quantization pipeline built-up to make this more useful.,This is the final tensorflow example thing I want to add for now. We have to get the transfer learning and quantization pipeline built-up to make this more useful.,True,{}
openmv/openmv,https://github.com/openmv/openmv,634,2019-10-30T19:02:05Z,2019-10-30T19:56:54Z,2019-10-30T19:57:13Z,MERGED,True,5,0,5,https://github.com/iabdalkader,Freeze all the modules in scripts/libraries.,2,[],https://github.com/openmv/openmv/pull/634,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/634,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,635,2019-11-01T16:42:55Z,2019-11-01T17:10:51Z,2019-11-01T17:10:54Z,MERGED,True,1,1,1,https://github.com/jeremitu,Default CAN baudrate is 125 kbps,1,[],https://github.com/openmv/openmv/pull/635,https://github.com/jeremitu,1,https://github.com/openmv/openmv/pull/635,CAN_DEFAULT_PRESCALER is 32. Tested with PCAN Dongle,CAN_DEFAULT_PRESCALER is 32. Tested with PCAN Dongle,True,{}
openmv/openmv,https://github.com/openmv/openmv,635,2019-11-01T16:42:55Z,2019-11-01T17:10:51Z,2019-11-01T17:10:54Z,MERGED,True,1,1,1,https://github.com/jeremitu,Default CAN baudrate is 125 kbps,1,[],https://github.com/openmv/openmv/pull/635,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/635#issuecomment-548871663,CAN_DEFAULT_PRESCALER is 32. Tested with PCAN Dongle,"That's right the default is 125Kbps, thanks.",True,{}
openmv/openmv,https://github.com/openmv/openmv,636,2019-11-01T17:03:57Z,2019-11-01T17:30:24Z,2019-11-01T17:30:44Z,MERGED,True,1290,0,11,https://github.com/iabdalkader,Add OpenRV library.,1,[],https://github.com/openmv/openmv/pull/636,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/636,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,637,2019-11-01T17:04:22Z,2019-11-01T17:31:42Z,2019-11-01T17:31:45Z,MERGED,True,1,0,1,https://github.com/iabdalkader,Add silent to makefile flags.,1,[],https://github.com/openmv/openmv/pull/637,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/637,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,638,2019-11-04T11:43:57Z,2019-11-04T14:25:37Z,2019-11-04T14:25:37Z,MERGED,True,125,40,3,https://github.com/kidswong999,Modbus,4,[],https://github.com/openmv/openmv/pull/638,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/638,"This example and library work very well.
I have tested with SIEMENS PLC S7-200.","This example and library work very well.
I have tested with SIEMENS PLC S7-200.",True,{}
openmv/openmv,https://github.com/openmv/openmv,639,2019-11-12T10:30:31Z,2019-11-12T23:59:54Z,2019-11-12T23:59:54Z,MERGED,True,4,4,1,https://github.com/jeremitu,More specific image format errors.,1,[],https://github.com/openmv/openmv/pull/639,https://github.com/jeremitu,1,https://github.com/openmv/openmv/pull/639,"Changed ""Image format is not supported"" to more specific errors for easier troubleshooting.","Changed ""Image format is not supported"" to more specific errors for easier troubleshooting.",True,{}
openmv/openmv,https://github.com/openmv/openmv,643,2019-11-25T03:03:03Z,2019-11-26T15:26:21Z,2019-11-26T15:26:21Z,MERGED,True,69,26,8,https://github.com/kwagyeman,Update TensorFlow,1,[],https://github.com/openmv/openmv/pull/643,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/643,"Pulled new TensorFlow library with MUL/RELU/RELU6 opcodes.
Fixed error message priting.
Added ability to load network into the framebuffer vs. the heap.","Pulled new TensorFlow library with MUL/RELU/RELU6 opcodes.
Fixed error message priting.
Added ability to load network into the framebuffer vs. the heap.",True,{}
openmv/openmv,https://github.com/openmv/openmv,644,2019-11-25T16:14:16Z,2019-11-25T16:25:27Z,2019-11-25T16:25:34Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Remove unused submodules.,1,[],https://github.com/openmv/openmv/pull/644,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/644,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,645,2019-11-25T16:32:51Z,2019-11-25T17:00:06Z,2019-11-25T17:00:10Z,MERGED,True,6,1,5,https://github.com/iabdalkader,Disable ulab for omv2.,1,[],https://github.com/openmv/openmv/pull/645,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/645,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,646,2019-11-25T22:05:53Z,2019-11-25T22:19:52Z,2019-11-25T22:20:01Z,MERGED,True,17,0,4,https://github.com/iabdalkader,Disable WiFi debug for older boards (especially OMV3).,1,[],https://github.com/openmv/openmv/pull/646,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/646,OMV3 is running out of memory because of tf global variables.,OMV3 is running out of memory because of tf global variables.,True,{}
openmv/openmv,https://github.com/openmv/openmv,647,2019-11-28T07:21:16Z,2019-12-02T10:23:47Z,2019-12-02T10:23:47Z,MERGED,True,0,0,4,https://github.com/kwagyeman,Fix tensorflow library conv2d,1,[],https://github.com/openmv/openmv/pull/647,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/647,"People can run their custom nets now and stop emailing me.
...
Don't merge this yet just right now... I'll keep updating the TensorFlow lib for a while.","People can run their custom nets now and stop emailing me.
...
Don't merge this yet just right now... I'll keep updating the TensorFlow lib for a while.",True,{}
openmv/openmv,https://github.com/openmv/openmv,648,2019-12-01T19:10:05Z,2019-12-01T19:31:09Z,2019-12-01T19:31:13Z,MERGED,True,8,10,1,https://github.com/iabdalkader,Fix sepconv3 boundaries.,1,[],https://github.com/openmv/openmv/pull/648,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/648,Fixes issue #641,Fixes issue #641,True,{}
openmv/openmv,https://github.com/openmv/openmv,649,2019-12-02T16:59:06Z,2019-12-02T17:11:57Z,2019-12-02T17:12:01Z,MERGED,True,6,6,3,https://github.com/iabdalkader,Fix debug build linker errors.,1,[],https://github.com/openmv/openmv/pull/649,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/649,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,650,2019-12-07T22:47:08Z,2019-12-07T23:01:43Z,2019-12-07T23:01:47Z,MERGED,True,24,24,2,https://github.com/iabdalkader,Fix MQTT module to work with SSL sockets.,1,[],https://github.com/openmv/openmv/pull/650,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/650,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,653,2019-12-16T17:11:43Z,2019-12-16T17:17:35Z,2019-12-16T17:18:13Z,MERGED,True,6,0,1,https://github.com/iabdalkader,Enable DBGMCU in sleep modes.,1,[],https://github.com/openmv/openmv/pull/653,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/653,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,654,2019-12-17T17:33:38Z,2019-12-17T17:47:15Z,2019-12-17T17:47:20Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Timer Fixes.,1,[],https://github.com/openmv/openmv/pull/654,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/654,"Add missing H7 timers 15, 16, 17 IRQ handlers.
Disable reserved timers.","Add missing H7 timers 15, 16, 17 IRQ handlers.
Disable reserved timers.",True,{}
openmv/openmv,https://github.com/openmv/openmv,655,2019-12-20T20:59:44Z,2019-12-20T23:22:23Z,2019-12-20T23:22:23Z,MERGED,True,45,33,1,https://github.com/kwagyeman,Fix get_histogram with color thresholding.,1,[],https://github.com/openmv/openmv/pull/655,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/655,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,656,2019-12-20T21:17:28Z,2019-12-20T23:22:41Z,2019-12-20T23:22:41Z,MERGED,True,6,6,6,https://github.com/kwagyeman,Tensorflow lite for microcontrollers is now mainlined,1,[],https://github.com/openmv/openmv/pull/656,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/656,"Google moved it from experimental to mainline now and added some more operations.
CMSIS-NN is not yet supported however. I am waiting on ARM to tell me when this is done.","Google moved it from experimental to mainline now and added some more operations.
CMSIS-NN is not yet supported however. I am waiting on ARM to tell me when this is done.",True,{}
openmv/openmv,https://github.com/openmv/openmv,657,2019-12-25T21:03:46Z,2019-12-25T21:18:23Z,2019-12-25T21:18:28Z,MERGED,True,1,1,1,https://github.com/iabdalkader,QSPI updates and fixes.,1,[],https://github.com/openmv/openmv/pull/657,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/657,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,658,2019-12-27T23:52:24Z,2019-12-28T00:13:27Z,2019-12-28T00:13:32Z,MERGED,True,661,27,7,https://github.com/iabdalkader,Add boootloader QSPI flash support.,2,[],https://github.com/openmv/openmv/pull/658,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/658,NOTE: The new bootloader will Not work until the IDE is updated.,NOTE: The new bootloader will Not work until the IDE is updated.,True,{}
openmv/openmv,https://github.com/openmv/openmv,659,2019-12-29T13:52:57Z,2019-12-31T14:30:15Z,2019-12-31T14:30:15Z,MERGED,True,109,15,1,https://github.com/bitbank2,first round of optimizations,2,[],https://github.com/openmv/openmv/pull/659,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/659,"The apriltag linked list search and image thresholding are significantly faster with this set of changes. It doesn't appear to have broken anything. Measuring the effect on the frame rate is harder. With an image full of apriltags, the minimum speed seems to have been accelerated from 7.7fps to 10.6fps.","The apriltag linked list search and image thresholding are significantly faster with this set of changes. It doesn't appear to have broken anything. Measuring the effect on the frame rate is harder. With an image full of apriltags, the minimum speed seems to have been accelerated from 7.7fps to 10.6fps.",True,{}
openmv/openmv,https://github.com/openmv/openmv,659,2019-12-29T13:52:57Z,2019-12-31T14:30:15Z,2019-12-31T14:30:15Z,MERGED,True,109,15,1,https://github.com/bitbank2,first round of optimizations,2,[],https://github.com/openmv/openmv/pull/659,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/659#issuecomment-569535377,"The apriltag linked list search and image thresholding are significantly faster with this set of changes. It doesn't appear to have broken anything. Measuring the effect on the frame rate is harder. With an image full of apriltags, the minimum speed seems to have been accelerated from 7.7fps to 10.6fps.","Hi, thank you for the PR, I'll review it. I'm wondering why you changed winc.c ? It looks irrelevant.",True,{}
openmv/openmv,https://github.com/openmv/openmv,659,2019-12-29T13:52:57Z,2019-12-31T14:30:15Z,2019-12-31T14:30:15Z,MERGED,True,109,15,1,https://github.com/bitbank2,first round of optimizations,2,[],https://github.com/openmv/openmv/pull/659,https://github.com/bitbank2,3,https://github.com/openmv/openmv/pull/659#issuecomment-569603924,"The apriltag linked list search and image thresholding are significantly faster with this set of changes. It doesn't appear to have broken anything. Measuring the effect on the frame rate is harder. With an image full of apriltags, the minimum speed seems to have been accelerated from 7.7fps to 10.6fps.","I changed winc.c because the original code gave ""punned-type"" pointer errors on my compiler.",True,{}
openmv/openmv,https://github.com/openmv/openmv,659,2019-12-29T13:52:57Z,2019-12-31T14:30:15Z,2019-12-31T14:30:15Z,MERGED,True,109,15,1,https://github.com/bitbank2,first round of optimizations,2,[],https://github.com/openmv/openmv/pull/659,https://github.com/bitbank2,4,https://github.com/openmv/openmv/pull/659#issuecomment-569893281,"The apriltag linked list search and image thresholding are significantly faster with this set of changes. It doesn't appear to have broken anything. Measuring the effect on the frame rate is harder. With an image full of apriltags, the minimum speed seems to have been accelerated from 7.7fps to 10.6fps.","The fact that you don't see much of a speedup at the lower resolution sounds like other issues in the camera pipeline are taking more time. The 1.5x speedup (not 1.25x) at VGA resolution means that the changes are having a good effect on speed when most of the CPU is busy working on image data. At lower resolutions there are probably purposeful pauses (frame rate limiter) or other limiting factors in the imaging pipeline which hide the speedup of smaller frame buffers. On the smaller sized frames, the savings may be in power if the system is smart enough to sleep during the frame rate limiting pauses.",True,{}
openmv/openmv,https://github.com/openmv/openmv,659,2019-12-29T13:52:57Z,2019-12-31T14:30:15Z,2019-12-31T14:30:15Z,MERGED,True,109,15,1,https://github.com/bitbank2,first round of optimizations,2,[],https://github.com/openmv/openmv/pull/659,https://github.com/iabdalkader,5,https://github.com/openmv/openmv/pull/659#issuecomment-569906044,"The apriltag linked list search and image thresholding are significantly faster with this set of changes. It doesn't appear to have broken anything. Measuring the effect on the frame rate is harder. With an image full of apriltags, the minimum speed seems to have been accelerated from 7.7fps to 10.6fps.","Hi I also benchmarked the changes on a 250x250 image with 9 apriltrags. It saves about 2ms on average (the test runs 1000 times to account for IRQs etc..). I'll merge this, but can you please first revert winc.c and send it in another PR ? Note we use gcc version 7.3.1 20180622 (7-2018-q2-update), it's probably a warning from a newer gcc but I need to look at it separately. Thank you.",True,{}
openmv/openmv,https://github.com/openmv/openmv,659,2019-12-29T13:52:57Z,2019-12-31T14:30:15Z,2019-12-31T14:30:15Z,MERGED,True,109,15,1,https://github.com/bitbank2,first round of optimizations,2,[],https://github.com/openmv/openmv/pull/659,https://github.com/bitbank2,6,https://github.com/openmv/openmv/pull/659#issuecomment-569921668,"The apriltag linked list search and image thresholding are significantly faster with this set of changes. It doesn't appear to have broken anything. Measuring the effect on the frame rate is harder. With an image full of apriltags, the minimum speed seems to have been accelerated from 7.7fps to 10.6fps.","ok, I removed the winc.c changes. I'll create a new pull request for that",True,{}
openmv/openmv,https://github.com/openmv/openmv,661,2020-01-01T19:28:14Z,2020-01-02T20:57:39Z,2020-01-02T20:57:39Z,MERGED,True,102,1,1,https://github.com/bitbank2,additional optimizations for thresholding and line search,1,[],https://github.com/openmv/openmv/pull/661,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/661,I saved a few more % by removing boundary checks which were applied to every pixel of the reduced resolution thresholded image (for a blur filter). I also improved a line fitting function by eliminating a divide in the inner loop.,I saved a few more % by removing boundary checks which were applied to every pixel of the reduced resolution thresholded image (for a blur filter). I also improved a line fitting function by eliminating a divide in the inner loop.,True,{}
openmv/openmv,https://github.com/openmv/openmv,663,2020-01-03T13:40:36Z,2020-01-03T19:58:03Z,2020-01-03T19:58:03Z,MERGED,True,38,16,1,https://github.com/bitbank2,Optimized JPEG MCU capture,2,[],https://github.com/openmv/openmv/pull/663,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/663,"For grayscale and RGB565 JPEG encoding (used to get camera output), the original code  was not optimal. The grayscale code was sped up slightly, but the change isn't very visible because the communication and receiving end of the pipeline are more of a limiting factor.
The RGB565 code was sped up enough to see a change in the max frame rate. On my test rig, the QVGA RGB565 frame rate (as visible in the IDE running the hello world sample) went from 15.6 FPS to 20.4 FPS with this change. Additional speed can be achieved with some SIMD optimization (I'll do on my next pass).","For grayscale and RGB565 JPEG encoding (used to get camera output), the original code  was not optimal. The grayscale code was sped up slightly, but the change isn't very visible because the communication and receiving end of the pipeline are more of a limiting factor.
The RGB565 code was sped up enough to see a change in the max frame rate. On my test rig, the QVGA RGB565 frame rate (as visible in the IDE running the hello world sample) went from 15.6 FPS to 20.4 FPS with this change. Additional speed can be achieved with some SIMD optimization (I'll do on my next pass).",True,{}
openmv/openmv,https://github.com/openmv/openmv,664,2020-01-04T11:29:10Z,2020-01-05T10:32:37Z,2020-01-05T10:32:37Z,MERGED,True,53,9,1,https://github.com/bitbank2,sped up JPEG capture with integer math,1,[],https://github.com/openmv/openmv/pull/664,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/664,Converted the RGB->YUV code to use integer math. No precision is lost because the output is 8-bit unsigned values. New max framerates I see in the IDE are 34 fps for QVGA RGB565 and 15 fps for VGA (bayer). This is generic C code. The Cortex-M4/M7 SIMD instructions don't really get us any benefit in this case because time would be lost moving 16-bit values around to make use of the multiply-accumulate instruction.,Converted the RGB->YUV code to use integer math. No precision is lost because the output is 8-bit unsigned values. New max framerates I see in the IDE are 34 fps for QVGA RGB565 and 15 fps for VGA (bayer). This is generic C code. The Cortex-M4/M7 SIMD instructions don't really get us any benefit in this case because time would be lost moving 16-bit values around to make use of the multiply-accumulate instruction.,True,{}
openmv/openmv,https://github.com/openmv/openmv,665,2020-01-05T01:49:57Z,2020-01-05T16:54:31Z,2020-01-05T16:54:31Z,MERGED,True,798,4434,7,https://github.com/kwagyeman,Kwabena/finish ov5640 driver,2,[],https://github.com/openmv/openmv/pull/665,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/665,"Need to increase sensor output speed
Need to add exposure control code","Need to increase sensor output speed
Need to add exposure control code",True,{}
openmv/openmv,https://github.com/openmv/openmv,666,2020-01-07T08:00:45Z,2020-01-13T08:18:24Z,2020-01-13T08:18:24Z,CLOSED,False,240,82,5,https://github.com/kwagyeman,More speed.,4,[],https://github.com/openmv/openmv/pull/666,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/666,Not done yet...,Not done yet...,True,{}
openmv/openmv,https://github.com/openmv/openmv,666,2020-01-07T08:00:45Z,2020-01-13T08:18:24Z,2020-01-13T08:18:24Z,CLOSED,False,240,82,5,https://github.com/kwagyeman,More speed.,4,[],https://github.com/openmv/openmv/pull/666,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/666#issuecomment-571633574,Not done yet...,"@kwagyeman please use a more descriptive commit message, also do you want this merged now ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,666,2020-01-07T08:00:45Z,2020-01-13T08:18:24Z,2020-01-13T08:18:24Z,CLOSED,False,240,82,5,https://github.com/kwagyeman,More speed.,4,[],https://github.com/openmv/openmv/pull/666,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/666#issuecomment-571719940,Not done yet...,"It doesn't have to be merged yet. But, was pushing it for others to see. There's no harm merging it however.",True,{}
openmv/openmv,https://github.com/openmv/openmv,667,2020-01-08T16:30:23Z,2020-02-15T17:53:23Z,2020-02-15T17:53:45Z,CLOSED,False,2,2,2,https://github.com/thouseweart,Red blue switcheroo,2,[],https://github.com/openmv/openmv/pull/667,https://github.com/thouseweart,1,https://github.com/openmv/openmv/pull/667,Tested working with H7 and LCD shield,Tested working with H7 and LCD shield,True,{}
openmv/openmv,https://github.com/openmv/openmv,667,2020-01-08T16:30:23Z,2020-02-15T17:53:23Z,2020-02-15T17:53:45Z,CLOSED,False,2,2,2,https://github.com/thouseweart,Red blue switcheroo,2,[],https://github.com/openmv/openmv/pull/667,https://github.com/thouseweart,2,https://github.com/openmv/openmv/pull/667#issuecomment-572261414,Tested working with H7 and LCD shield,"According to the ST7735R datasheet, it seems like RGB vs. BGR mode is also controlled by the voltage present at pin ""SRGB"". So perhaps a manufacturing defect? If it helps, I ordered my shield (RB-Omv-09) from RobotShop  on ~7/10/19.",True,{}
openmv/openmv,https://github.com/openmv/openmv,667,2020-01-08T16:30:23Z,2020-02-15T17:53:23Z,2020-02-15T17:53:45Z,CLOSED,False,2,2,2,https://github.com/thouseweart,Red blue switcheroo,2,[],https://github.com/openmv/openmv/pull/667,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/667#issuecomment-572290870,Tested working with H7 and LCD shield,"Yeah, okay, I'll just update the demo scripts and add an argument that allows you to specify this. I guess these are the shields that have the wrong bit set.",True,{}
openmv/openmv,https://github.com/openmv/openmv,667,2020-01-08T16:30:23Z,2020-02-15T17:53:23Z,2020-02-15T17:53:45Z,CLOSED,False,2,2,2,https://github.com/thouseweart,Red blue switcheroo,2,[],https://github.com/openmv/openmv/pull/667,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/667#issuecomment-586625042,Tested working with H7 and LCD shield,"Hi, I've added an argument to lcd init to switch to BGR mode see #719
lcd.init(bgr=True)

Sets MADCTL to 0xC8, and a comment to spi_control.py script.",True,{}
openmv/openmv,https://github.com/openmv/openmv,668,2020-01-11T16:26:31Z,2020-01-14T16:08:37Z,2020-01-14T16:08:37Z,MERGED,True,69,40,3,https://github.com/bitbank2,histeq and JPEG binary speedup,6,[],https://github.com/openmv/openmv/pull/668,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/668,This set of changes speeds up the histeq (equalization by histogram) of RGB565 images and the JPEG compression of binary (1-bpp) images.,This set of changes speeds up the histeq (equalization by histogram) of RGB565 images and the JPEG compression of binary (1-bpp) images.,True,{}
openmv/openmv,https://github.com/openmv/openmv,668,2020-01-11T16:26:31Z,2020-01-14T16:08:37Z,2020-01-14T16:08:37Z,MERGED,True,69,40,3,https://github.com/bitbank2,histeq and JPEG binary speedup,6,[],https://github.com/openmv/openmv/pull/668,https://github.com/bitbank2,2,https://github.com/openmv/openmv/pull/668#issuecomment-573580654,This set of changes speeds up the histeq (equalization by histogram) of RGB565 images and the JPEG compression of binary (1-bpp) images.,I fixed an issue with HQQQVGA JPEG compression and added more detailed comments to the rest of the new JPEG code.,True,{}
openmv/openmv,https://github.com/openmv/openmv,668,2020-01-11T16:26:31Z,2020-01-14T16:08:37Z,2020-01-14T16:08:37Z,MERGED,True,69,40,3,https://github.com/bitbank2,histeq and JPEG binary speedup,6,[],https://github.com/openmv/openmv/pull/668,https://github.com/bitbank2,3,https://github.com/openmv/openmv/pull/668#issuecomment-573835425,This set of changes speeds up the histeq (equalization by histogram) of RGB565 images and the JPEG compression of binary (1-bpp) images.,"ok, further cleanup of the comments, variables and braces",True,{}
openmv/openmv,https://github.com/openmv/openmv,670,2020-01-13T08:25:19Z,2020-01-16T20:44:04Z,2020-01-16T20:44:04Z,MERGED,True,152,60,4,https://github.com/kwagyeman,Kwabena/final ov5640,2,[],https://github.com/openmv/openmv/pull/670,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/670,"This is a working driver for the OV5640 now. All features for the OpenMV API are supported.
Work may be done in the future to further improve the image capture speed. To increase this some work will need to be done to make DCMI line transfer go faster as that causes issues when the copy isn't faster than the rate of pixels coming in.","This is a working driver for the OV5640 now. All features for the OpenMV API are supported.
Work may be done in the future to further improve the image capture speed. To increase this some work will need to be done to make DCMI line transfer go faster as that causes issues when the copy isn't faster than the rate of pixels coming in.",True,{}
openmv/openmv,https://github.com/openmv/openmv,671,2020-01-16T21:25:11Z,2020-01-21T00:27:06Z,2020-01-21T00:27:07Z,MERGED,True,170,55,2,https://github.com/bitbank2,find_line_segment and apriltags speedup,2,[],https://github.com/openmv/openmv/pull/671,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/671,This PR includes a major rewrite of find_line_segments() which nets a 4-5x speedup over the original code. I also found an easy improvement to apriltags which speeds it up 10-15%.,This PR includes a major rewrite of find_line_segments() which nets a 4-5x speedup over the original code. I also found an easy improvement to apriltags which speeds it up 10-15%.,True,{}
openmv/openmv,https://github.com/openmv/openmv,671,2020-01-16T21:25:11Z,2020-01-21T00:27:06Z,2020-01-21T00:27:07Z,MERGED,True,170,55,2,https://github.com/bitbank2,find_line_segment and apriltags speedup,2,[],https://github.com/openmv/openmv/pull/671,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/671#issuecomment-575914760,This PR includes a major rewrite of find_line_segments() which nets a 4-5x speedup over the original code. I also found an easy improvement to apriltags which speeds it up 10-15%.,"@bitbank2 In the future please split the changes into smaller PRs when they are not related, thanks.",True,{}
openmv/openmv,https://github.com/openmv/openmv,671,2020-01-16T21:25:11Z,2020-01-21T00:27:06Z,2020-01-21T00:27:07Z,MERGED,True,170,55,2,https://github.com/bitbank2,find_line_segment and apriltags speedup,2,[],https://github.com/openmv/openmv/pull/671,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/671#issuecomment-576468974,This PR includes a major rewrite of find_line_segments() which nets a 4-5x speedup over the original code. I also found an easy improvement to apriltags which speeds it up 10-15%.,"Approved, I tested it and its a huge performance improvement.",True,{}
openmv/openmv,https://github.com/openmv/openmv,673,2020-01-21T18:13:10Z,2020-01-21T18:23:32Z,2020-01-21T18:23:35Z,MERGED,True,50,34,3,https://github.com/iabdalkader,Update debugging protocol to be more consistent.,1,[],https://github.com/openmv/openmv/pull/673,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/673,All commands now send a 6-bytes header followed by the payload in a separate packet.,All commands now send a 6-bytes header followed by the payload in a separate packet.,True,{}
openmv/openmv,https://github.com/openmv/openmv,675,2020-01-27T17:18:12Z,2020-01-27T18:23:43Z,2020-01-27T18:23:53Z,MERGED,True,10,10,4,https://github.com/iabdalkader,Update to MP 1.12,1,[],https://github.com/openmv/openmv/pull/675,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/675,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,677,2020-01-29T17:34:48Z,2020-01-29T17:58:03Z,2020-01-29T17:58:07Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Pull upstream patch to support 32MBs QSPI.,1,[],https://github.com/openmv/openmv/pull/677,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/677,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,679,2020-01-30T11:06:42Z,2020-01-30T11:25:39Z,2020-01-30T11:25:43Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Redo upstream patch to support 32MBs QSPI.,1,[],https://github.com/openmv/openmv/pull/679,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/679,"This is the same patch to support bigger QSPI flashes, after being merged in upstream.","This is the same patch to support bigger QSPI flashes, after being merged in upstream.",True,{}
openmv/openmv,https://github.com/openmv/openmv,680,2020-01-30T18:12:32Z,2020-01-30T18:28:50Z,2020-01-30T18:28:53Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update H7 I2C timings.,1,[],https://github.com/openmv/openmv/pull/680,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/680,Fixes #676,Fixes #676,True,{}
openmv/openmv,https://github.com/openmv/openmv,681,2020-01-31T12:55:27Z,2020-01-31T13:04:20Z,2020-01-31T13:04:25Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Re-enable F7 overdrive after waking up from stop mode.,1,[],https://github.com/openmv/openmv/pull/681,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/681,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,682,2020-01-31T17:17:40Z,2020-02-02T18:20:31Z,2020-02-02T18:20:31Z,CLOSED,False,17702,90,22,https://github.com/kwagyeman,Kwabena/ov7690 driver,11,[],https://github.com/openmv/openmv/pull/682,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/682,Don't actually merge. Just made a PR for Ibrahim.,Don't actually merge. Just made a PR for Ibrahim.,True,{}
openmv/openmv,https://github.com/openmv/openmv,683,2020-02-01T17:30:21Z,2020-02-01T18:37:37Z,2020-02-01T18:37:37Z,MERGED,True,5,5,1,https://github.com/bitbank2,Fixed find_line_segments() regression,1,[],https://github.com/openmv/openmv/pull/683,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/683,The last round of optimizations disabled a conditional statement which was necessary.,The last round of optimizations disabled a conditional statement which was necessary.,True,{}
openmv/openmv,https://github.com/openmv/openmv,684,2020-02-02T18:22:13Z,2020-02-02T18:51:27Z,2020-02-02T18:51:27Z,MERGED,True,202,242,1,https://github.com/bitbank2,Software JPEG compressor optimization,3,[],https://github.com/openmv/openmv/pull/684,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/684,Optimized the software path of JPEG compression and removed the last vestiges of dependency on a YUV LUT.,Optimized the software path of JPEG compression and removed the last vestiges of dependency on a YUV LUT.,True,{}
openmv/openmv,https://github.com/openmv/openmv,685,2020-02-02T21:25:57Z,2020-02-03T14:49:11Z,2020-02-03T14:49:11Z,MERGED,True,44,17,1,https://github.com/bitbank2,Optimized grayscale and binary for SW encoder,1,[],https://github.com/openmv/openmv/pull/685,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/685,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,686,2020-02-03T21:17:03Z,2020-02-03T21:43:34Z,2020-02-11T18:20:32Z,MERGED,True,20,1,3,https://github.com/iabdalkader,Sensor,2,[],https://github.com/openmv/openmv/pull/686,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/686,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,687,2020-02-04T18:23:34Z,2020-02-04T20:32:00Z,2020-02-04T20:32:00Z,MERGED,True,78,36,2,https://github.com/bitbank2,QRCode optimizations,2,[],https://github.com/openmv/openmv/pull/687,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/687,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,688,2020-02-05T18:02:22Z,2020-02-05T18:33:32Z,2020-02-11T18:20:30Z,MERGED,True,6,6,5,https://github.com/iabdalkader,Rename OPENMV4R target.,1,[],https://github.com/openmv/openmv/pull/688,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/688,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,689,2020-02-05T20:35:50Z,2020-02-05T20:45:35Z,2020-02-05T20:45:39Z,MERGED,True,312,3,4,https://github.com/iabdalkader,Add UVC support for OMV4P.,1,[],https://github.com/openmv/openmv/pull/689,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/689,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,692,2020-02-07T17:49:26Z,2020-02-07T18:58:48Z,2020-02-11T18:19:48Z,MERGED,True,1,1,1,https://github.com/iabdalkader,DAC timed write fix.,1,[],https://github.com/openmv/openmv/pull/692,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/692,This is a workaround until a proper fix is found.,This is a workaround until a proper fix is found.,True,{}
openmv/openmv,https://github.com/openmv/openmv,693,2020-02-08T19:28:01Z,2020-02-08T19:36:45Z,2020-02-08T19:41:02Z,MERGED,True,380,0,7,https://github.com/iabdalkader,Add HIMAX HM01B0 driver.,1,[],https://github.com/openmv/openmv/pull/693,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/693,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,695,2020-02-09T17:02:48Z,2020-02-09T17:54:11Z,2020-02-09T17:55:42Z,MERGED,True,4,11,3,https://github.com/iabdalkader,Hm01b0 updates,2,[],https://github.com/openmv/openmv/pull/695,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/695,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,696,2020-02-09T18:18:12Z,2020-02-09T18:26:35Z,2020-02-09T18:50:05Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Move USB descriptor config to board config files.,1,[],https://github.com/openmv/openmv/pull/696,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/696,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,697,2020-02-09T19:19:40Z,2020-02-09T19:37:26Z,2020-02-09T19:37:30Z,CLOSED,False,1,1,1,https://github.com/iabdalkader,Fix USB descriptor.,1,[],https://github.com/openmv/openmv/pull/697,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/697,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,698,2020-02-09T19:39:03Z,2020-02-09T19:59:24Z,2020-02-09T19:59:28Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Use USB PID if defined for all different configurations.,1,[],https://github.com/openmv/openmv/pull/698,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/698,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,699,2020-02-09T20:13:33Z,2020-02-09T20:27:22Z,2020-02-09T20:37:27Z,MERGED,True,5,2,1,https://github.com/iabdalkader,Allow sensor clock to not be defined.,1,[],https://github.com/openmv/openmv/pull/699,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/699,Add OMV_XCLK_OSC to use when an external osc is used.,Add OMV_XCLK_OSC to use when an external osc is used.,True,{}
openmv/openmv,https://github.com/openmv/openmv,700,2020-02-10T07:03:58Z,2020-02-12T18:54:20Z,2020-02-12T18:54:20Z,CLOSED,False,17682,84,20,https://github.com/kwagyeman,Add OV7690 and LSM6DS3 driver support,1,[],https://github.com/openmv/openmv/pull/700,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/700,"Sensor transposing was added to support auto rotation using the IMU to
detect gravity.

IMU code paths are all done, tested, and working correctly.
Sensor auto rotation code paths are all done, tested, and working correctly.
The OV7690 driver needs more work still. Default register settings are not optimal and some sensor control methods do not have the correct affect in all cases.","Sensor transposing was added to support auto rotation using the IMU to
detect gravity.

IMU code paths are all done, tested, and working correctly.
Sensor auto rotation code paths are all done, tested, and working correctly.
The OV7690 driver needs more work still. Default register settings are not optimal and some sensor control methods do not have the correct affect in all cases.",True,{}
openmv/openmv,https://github.com/openmv/openmv,700,2020-02-10T07:03:58Z,2020-02-12T18:54:20Z,2020-02-12T18:54:20Z,CLOSED,False,17682,84,20,https://github.com/kwagyeman,Add OV7690 and LSM6DS3 driver support,1,[],https://github.com/openmv/openmv/pull/700,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/700#issuecomment-583986219,"Sensor transposing was added to support auto rotation using the IMU to
detect gravity.

IMU code paths are all done, tested, and working correctly.
Sensor auto rotation code paths are all done, tested, and working correctly.
The OV7690 driver needs more work still. Default register settings are not optimal and some sensor control methods do not have the correct affect in all cases.",Please merge PR: openmv/micropython#64 to fix the build.,True,{}
openmv/openmv,https://github.com/openmv/openmv,701,2020-02-10T17:46:59Z,2020-02-10T17:58:41Z,2020-02-10T17:58:45Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Make CDC buffer size configurable.,1,[],https://github.com/openmv/openmv/pull/701,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/701,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,702,2020-02-10T18:05:04Z,2020-02-10T18:17:35Z,2020-02-10T18:17:40Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix CAN header.,1,[],https://github.com/openmv/openmv/pull/702,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/702,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,703,2020-02-10T18:19:08Z,2020-02-10T18:36:54Z,2020-02-10T18:36:58Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix H747 powerctrl flag.,1,[],https://github.com/openmv/openmv/pull/703,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/703,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,704,2020-02-10T18:44:28Z,2020-02-10T18:56:46Z,2020-02-10T19:06:33Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix OTG HS WKUP IRQHandler,1,[],https://github.com/openmv/openmv/pull/704,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/704,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,705,2020-02-10T20:39:09Z,2020-02-10T20:48:14Z,2020-02-10T20:48:19Z,MERGED,True,18,4,10,https://github.com/iabdalkader,Make WINC1500 module configurable.,1,[],https://github.com/openmv/openmv/pull/705,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/705,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,706,2020-02-11T07:21:28Z,2020-02-11T12:31:25Z,2020-02-11T12:31:25Z,MERGED,True,16686,0,12,https://github.com/kwagyeman,Add IMU driver,1,[],https://github.com/openmv/openmv/pull/706,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/706,It's not linked in however.,It's not linked in however.,True,{}
openmv/openmv,https://github.com/openmv/openmv,707,2020-02-11T12:40:19Z,2020-02-11T12:52:29Z,2020-02-11T18:19:45Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Enable IMU module in MicroPython.,1,[],https://github.com/openmv/openmv/pull/707,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/707,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,708,2020-02-11T13:18:36Z,2020-02-11T13:37:38Z,2020-02-11T18:19:43Z,MERGED,True,17,28,5,https://github.com/iabdalkader,Make IMU configurable.,1,[],https://github.com/openmv/openmv/pull/708,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/708,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,709,2020-02-11T18:10:52Z,2020-02-11T18:18:20Z,2020-02-11T18:18:23Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix H747 floating point flags.,1,[],https://github.com/openmv/openmv/pull/709,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/709,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,710,2020-02-11T18:19:29Z,2020-02-11T18:32:09Z,2020-02-11T18:32:13Z,MERGED,True,10,0,1,https://github.com/iabdalkader,Support boards without SD cards.,1,[],https://github.com/openmv/openmv/pull/710,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/710,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,711,2020-02-11T18:31:29Z,2020-02-12T18:50:38Z,2020-02-12T18:50:38Z,MERGED,True,272,52,4,https://github.com/kwagyeman,Improve sensor module with transpose and get operations,1,[],https://github.com/openmv/openmv/pull/711,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/711,"Add transpose support
Add auto rotation support
Add ability to get state of vflip/hmirror/frame_size/pixformat/auto_rotation/transpose.

Note, auto rotation is done more or less in a stateless way because hmirror/vflip only run where there's a change. So, the sensor driver is only commanded when necessary.","Add transpose support
Add auto rotation support
Add ability to get state of vflip/hmirror/frame_size/pixformat/auto_rotation/transpose.

Note, auto rotation is done more or less in a stateless way because hmirror/vflip only run where there's a change. So, the sensor driver is only commanded when necessary.",True,{}
openmv/openmv,https://github.com/openmv/openmv,712,2020-02-11T18:41:52Z,2020-02-11T18:57:42Z,2020-02-11T18:58:41Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Check for H747 in adc and flashbdev.,1,[],https://github.com/openmv/openmv/pull/712,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/712,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,713,2020-02-11T19:17:50Z,2020-02-11T19:31:07Z,2020-02-11T19:31:33Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add portenta micropython board files.,1,[],https://github.com/openmv/openmv/pull/713,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/713,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,714,2020-02-12T06:18:54Z,2020-02-12T18:53:46Z,2020-02-12T18:53:46Z,MERGED,True,743,33,10,https://github.com/kwagyeman,New OV7690 camera driver.,1,[],https://github.com/openmv/openmv/pull/714,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/714,Integrates support for the OV7690 camera module. Driver is not completed yet however and still needs tuning. This gives basic support that is more or less debugged.,Integrates support for the OV7690 camera module. Driver is not completed yet however and still needs tuning. This gives basic support that is more or less debugged.,True,{}
openmv/openmv,https://github.com/openmv/openmv,715,2020-02-12T06:23:50Z,2020-02-12T18:54:09Z,2020-02-12T18:54:09Z,MERGED,True,2,0,2,https://github.com/kwagyeman,Add hm01b0 id,1,[],https://github.com/openmv/openmv/pull/715,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/715,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,716,2020-02-13T05:50:45Z,2020-02-14T16:17:21Z,2020-02-14T16:17:21Z,MERGED,True,10,2,4,https://github.com/kwagyeman,Auto rotation enabled,1,[],https://github.com/openmv/openmv/pull/716,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/716,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,716,2020-02-13T05:50:45Z,2020-02-14T16:17:21Z,2020-02-14T16:17:21Z,MERGED,True,10,2,4,https://github.com/kwagyeman,Auto rotation enabled,1,[],https://github.com/openmv/openmv/pull/716,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/716#issuecomment-585950047,,You need to create a new target for the new camera then.,True,{}
openmv/openmv,https://github.com/openmv/openmv,717,2020-02-13T05:52:16Z,2020-02-13T17:43:06Z,2020-02-13T17:43:06Z,MERGED,True,7,5,1,https://github.com/kwagyeman,Fix OV2640 sleep.,1,[],https://github.com/openmv/openmv/pull/717,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/717,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,718,2020-02-14T06:04:40Z,2020-02-14T17:59:53Z,2020-02-14T17:59:53Z,MERGED,True,20,17,1,https://github.com/kwagyeman,Disable rotation when pitch is wrong,1,[],https://github.com/openmv/openmv/pull/718,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/718,Stops auto rotation when +-10 degrees from 90 (face down) and 270 (face up). This has to be done because the roll is unstable when at these pitches.,Stops auto rotation when +-10 degrees from 90 (face down) and 270 (face up). This has to be done because the roll is unstable when at these pitches.,True,{}
openmv/openmv,https://github.com/openmv/openmv,719,2020-02-15T17:51:46Z,2020-02-15T18:55:46Z,2020-02-15T18:55:50Z,MERGED,True,5,1,3,https://github.com/iabdalkader,Add BGR argument to lcd init.,1,[],https://github.com/openmv/openmv/pull/719,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/719,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,720,2020-02-18T02:07:52Z,2020-02-18T19:46:54Z,2020-02-18T19:46:55Z,MERGED,True,0,132,13,https://github.com/kwagyeman,Remove unused code in the sensor module,1,[],https://github.com/openmv/openmv/pull/720,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/720,"Unused py_sensor.h header file.
Unused set_framerate method.
Unused py_sensor_print method.","Unused py_sensor.h header file.
Unused set_framerate method.
Unused py_sensor_print method.",True,{}
openmv/openmv,https://github.com/openmv/openmv,721,2020-02-18T02:38:11Z,2020-02-18T19:47:52Z,2020-02-18T19:47:52Z,MERGED,True,15,3,2,https://github.com/kwagyeman,Fix up set windowing and add way to get current window.,1,[],https://github.com/openmv/openmv/pull/721,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/721,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,722,2020-02-18T02:51:19Z,2020-02-18T19:49:05Z,2020-02-18T19:49:06Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix bug with TF load_to_fb,1,[],https://github.com/openmv/openmv/pull/722,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/722,Discovered this during a demo. It doesn't break the normal mode but causes the normal mode to leak fb memory and breaks the load_to_fb version.,Discovered this during a demo. It doesn't break the normal mode but causes the normal mode to leak fb memory and breaks the load_to_fb version.,True,{}
openmv/openmv,https://github.com/openmv/openmv,723,2020-02-18T03:11:15Z,2020-02-18T19:53:00Z,2020-02-18T19:53:00Z,MERGED,True,11,6,1,https://github.com/kwagyeman,Fixed alloc_extra_fb.,1,[],https://github.com/openmv/openmv/pull/723,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/723,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,724,2020-02-18T09:41:14Z,2020-02-18T09:42:40Z,2020-02-18T09:42:40Z,CLOSED,False,229,101,4,https://github.com/bitbank2,Optimization for find_circles(),5,[],https://github.com/openmv/openmv/pull/724,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/724,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,725,2020-02-18T19:44:48Z,2020-02-18T19:56:35Z,2020-02-20T15:58:11Z,MERGED,True,124,52,6,https://github.com/iabdalkader,Move clock config to board files.,1,[],https://github.com/openmv/openmv/pull/725,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/725,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,725,2020-02-18T19:44:48Z,2020-02-18T19:56:35Z,2020-02-20T15:58:11Z,MERGED,True,124,52,6,https://github.com/iabdalkader,Move clock config to board files.,1,[],https://github.com/openmv/openmv/pull/725,https://github.com/arunachalam9513,2,https://github.com/openmv/openmv/pull/725#issuecomment-589152701,,i micopython code for LED control using open mv pins,True,{}
openmv/openmv,https://github.com/openmv/openmv,726,2020-02-21T12:11:09Z,2020-02-21T12:31:36Z,2020-02-21T12:31:39Z,MERGED,True,21,21,8,https://github.com/iabdalkader,FSYNC pin fix,2,[],https://github.com/openmv/openmv/pull/726,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/726,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,727,2020-02-21T12:34:58Z,2020-02-21T12:48:24Z,2020-02-21T12:48:27Z,MERGED,True,16,1,6,https://github.com/iabdalkader,Make core vbat configurable.,1,[],https://github.com/openmv/openmv/pull/727,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/727,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,728,2020-02-21T16:36:07Z,2020-02-23T18:38:39Z,2020-02-23T18:38:39Z,MERGED,True,34,21,2,https://github.com/bitbank2,Faster find_circles,3,[],https://github.com/openmv/openmv/pull/728,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/728,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,729,2020-02-23T17:37:40Z,2020-02-23T17:53:08Z,2020-02-23T17:53:13Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Enable deque.,1,[],https://github.com/openmv/openmv/pull/729,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/729,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,730,2020-02-24T19:41:18Z,2020-02-25T16:48:39Z,2020-02-25T16:48:39Z,CLOSED,False,47,17,1,https://github.com/bitbank2,Optimized lens correction,5,[],https://github.com/openmv/openmv/pull/730,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/730,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,731,2020-02-25T22:14:29Z,2020-02-25T22:23:24Z,2020-02-25T22:32:05Z,MERGED,True,47,17,1,https://github.com/bitbank2,Lens correction speedup,1,[],https://github.com/openmv/openmv/pull/731,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/731,"I removed the pixel macros from the lens correction loop because they're slower than direct pointer access. The ""put"" macros calculate the destination address every pixel, while pointer access uses the current row pointer.","I removed the pixel macros from the lens correction loop because they're slower than direct pointer access. The ""put"" macros calculate the destination address every pixel, while pointer access uses the current row pointer.",True,{}
openmv/openmv,https://github.com/openmv/openmv,732,2020-02-26T17:09:10Z,2020-02-26T17:31:31Z,2020-07-14T19:28:50Z,MERGED,True,31423,67,24,https://github.com/iabdalkader,Add support for the Portenta board.,25,[],https://github.com/openmv/openmv/pull/732,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/732,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,734,2020-02-27T19:14:45Z,2020-02-27T19:46:01Z,2020-02-27T19:46:05Z,MERGED,True,89,89,8,https://github.com/iabdalkader,Rename soft I2C macros.,1,[],https://github.com/openmv/openmv/pull/734,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/734,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,735,2020-02-29T23:11:26Z,2020-02-29T23:56:41Z,2020-02-29T23:56:41Z,MERGED,True,0,0,4,https://github.com/kwagyeman,Add avg pool 2d op version 2,1,[],https://github.com/openmv/openmv/pull/735,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/735,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,736,2020-03-02T08:13:36Z,2020-03-02T17:50:12Z,2020-03-02T17:50:12Z,MERGED,True,81,61,8,https://github.com/kwagyeman,Lens correction cleanup,1,[],https://github.com/openmv/openmv/pull/736,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/736,"Added imlib control macro.
Fixed cross issues in the image using round()
Speed code up by removing -> and unnecessary checks.
Test for image width/height validity.","Added imlib control macro.
Fixed cross issues in the image using round()
Speed code up by removing -> and unnecessary checks.
Test for image width/height validity.",True,{}
openmv/openmv,https://github.com/openmv/openmv,736,2020-03-02T08:13:36Z,2020-03-02T17:50:12Z,2020-03-02T17:50:12Z,MERGED,True,81,61,8,https://github.com/kwagyeman,Lens correction cleanup,1,[],https://github.com/openmv/openmv/pull/736,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/736#issuecomment-593402381,"Added imlib control macro.
Fixed cross issues in the image using round()
Speed code up by removing -> and unnecessary checks.
Test for image width/height validity.",You forgot to add a macro for Portenta @kwagyeman,True,{}
openmv/openmv,https://github.com/openmv/openmv,736,2020-03-02T08:13:36Z,2020-03-02T17:50:12Z,2020-03-02T17:50:12Z,MERGED,True,81,61,8,https://github.com/kwagyeman,Lens correction cleanup,1,[],https://github.com/openmv/openmv/pull/736,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/736#issuecomment-593497537,"Added imlib control macro.
Fixed cross issues in the image using round()
Speed code up by removing -> and unnecessary checks.
Test for image width/height validity.",I didn't see the board config for it. Will fix.,True,{}
openmv/openmv,https://github.com/openmv/openmv,736,2020-03-02T08:13:36Z,2020-03-02T17:50:12Z,2020-03-02T17:50:12Z,MERGED,True,81,61,8,https://github.com/kwagyeman,Lens correction cleanup,1,[],https://github.com/openmv/openmv/pull/736,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/736#issuecomment-593523568,"Added imlib control macro.
Fixed cross issues in the image using round()
Speed code up by removing -> and unnecessary checks.
Test for image width/height validity.",Updated,True,{}
openmv/openmv,https://github.com/openmv/openmv,737,2020-03-04T17:15:39Z,2020-03-04T17:25:59Z,2020-03-04T17:26:25Z,MERGED,True,10,6,1,https://github.com/iabdalkader,Fix hardfault on disable D cache.,1,[],https://github.com/openmv/openmv/pull/737,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/737,Disable and clean caches only if they're enabled.,Disable and clean caches only if they're enabled.,True,{}
openmv/openmv,https://github.com/openmv/openmv,738,2020-03-05T07:02:37Z,2020-03-05T21:08:33Z,2020-03-05T21:08:33Z,MERGED,True,303,102,10,https://github.com/kwagyeman,Improve rotation_correction(),1,[],https://github.com/openmv/openmv/pull/738,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/738,"Optimized code to make it run slightly faster.
Added fov argument to control the zoom effect better.
Added perspective correction through 4 point correspondence.","Optimized code to make it run slightly faster.
Added fov argument to control the zoom effect better.
Added perspective correction through 4 point correspondence.",True,{}
openmv/openmv,https://github.com/openmv/openmv,739,2020-03-06T11:01:56Z,2020-03-06T11:11:36Z,2020-03-06T11:11:40Z,MERGED,True,7,7,4,https://github.com/iabdalkader,Tf fix,2,[],https://github.com/openmv/openmv/pull/739,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/739,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,740,2020-03-08T23:16:20Z,2020-03-08T23:23:23Z,2020-03-08T23:23:23Z,MERGED,True,197,96,2,https://github.com/kwagyeman,Improved the speed of logpolar and linpolar transforms.,1,[],https://github.com/openmv/openmv/pull/740,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/740,Fixed image quality issues too.,Fixed image quality issues too.,True,{}
openmv/openmv,https://github.com/openmv/openmv,741,2020-03-12T21:55:25Z,2020-03-14T21:48:40Z,2020-03-14T21:48:40Z,MERGED,True,79,37,1,https://github.com/bitbank2,Speed up of mean filter,2,[],https://github.com/openmv/openmv/pull/741,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/741,This change speeds up the mean filter for all bit depths. Large filter sizes don't affect performance as much due to the change I made to the algorithm.,This change speeds up the mean filter for all bit depths. Large filter sizes don't affect performance as much due to the change I made to the algorithm.,True,{}
openmv/openmv,https://github.com/openmv/openmv,742,2020-03-14T23:49:09Z,2020-03-29T23:06:07Z,2020-03-29T23:06:07Z,MERGED,True,253,116,1,https://github.com/bitbank2,optimized median and mode filters,1,[],https://github.com/openmv/openmv/pull/742,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/742,"Optimized the median and mode image filters for binary, grayscale and rgb565 images.","Optimized the median and mode image filters for binary, grayscale and rgb565 images.",True,{}
openmv/openmv,https://github.com/openmv/openmv,745,2020-03-30T00:19:41Z,2020-03-30T19:29:34Z,2020-03-30T19:29:34Z,MERGED,True,237,119,1,https://github.com/bitbank2,optimized more image filters,1,[],https://github.com/openmv/openmv/pull/745,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/745,"The remaining filter algorithms in filter.c got ""the treatment""","The remaining filter algorithms in filter.c got ""the treatment""",True,{}
openmv/openmv,https://github.com/openmv/openmv,747,2020-04-01T01:52:05Z,2020-04-02T19:38:52Z,2020-04-02T19:38:52Z,MERGED,True,30,37,2,https://github.com/bitbank2,optimized sensor copy to allow ful res capture,3,[],https://github.com/openmv/openmv/pull/747,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/747,"The OV5640 sensor produces up to a 2560x1944 image. At the highest res, the dma line copy code wasn't keeping up with the output of the sensor. I optimized this by improving the memory throughput. The Cortex-M7 has a 32-bit memory bus, so the fastest movement of memory is by reading and writing 32-bits at a time on aligned addresses. The memcpy() function already has code which detects if the source and destination addresses are 32-bit aligned, so most of the work was passed to memcpy().","The OV5640 sensor produces up to a 2560x1944 image. At the highest res, the dma line copy code wasn't keeping up with the output of the sensor. I optimized this by improving the memory throughput. The Cortex-M7 has a 32-bit memory bus, so the fastest movement of memory is by reading and writing 32-bits at a time on aligned addresses. The memcpy() function already has code which detects if the source and destination addresses are 32-bit aligned, so most of the work was passed to memcpy().",True,{}
openmv/openmv,https://github.com/openmv/openmv,748,2020-04-02T20:00:52Z,2020-04-15T11:50:44Z,2020-04-15T11:50:44Z,MERGED,True,94,2,1,https://github.com/bitbank2,Optimized bayer to RGB565,6,[],https://github.com/openmv/openmv/pull/748,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/748,Improved the conversion speed by minimizing memory accesses and combining operations.,Improved the conversion speed by minimizing memory accesses and combining operations.,True,{}
openmv/openmv,https://github.com/openmv/openmv,748,2020-04-02T20:00:52Z,2020-04-15T11:50:44Z,2020-04-15T11:50:44Z,MERGED,True,94,2,1,https://github.com/bitbank2,Optimized bayer to RGB565,6,[],https://github.com/openmv/openmv/pull/748,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/748#issuecomment-613524341,Improved the conversion speed by minimizing memory accesses and combining operations.,Please use BAYER->YUV for improving the jpeg compress speed.,True,{}
openmv/openmv,https://github.com/openmv/openmv,750,2020-04-08T03:01:16Z,2020-04-08T17:14:50Z,2020-04-08T17:14:50Z,MERGED,True,8,0,1,https://github.com/kwagyeman,Add raw data RD/WR access to the image object.,1,[],https://github.com/openmv/openmv/pull/750,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/750,"Do .bytearray() to get an object pointing to the image bytes which
allows you to manipulate the RAW data of an image.
This feature allows you to transfer images over a wire and load them back into memory again. Once cast to a bytearray() you can slice 16KB byte chunks for example from an image and transfer them one at a time. Additionally, you can also assign slices of data to an image. You can use alloc_extra_fb() to create a space to store an extra image.
...
That said, I'm just using this for easily transferring large jpeg images.","Do .bytearray() to get an object pointing to the image bytes which
allows you to manipulate the RAW data of an image.
This feature allows you to transfer images over a wire and load them back into memory again. Once cast to a bytearray() you can slice 16KB byte chunks for example from an image and transfer them one at a time. Additionally, you can also assign slices of data to an image. You can use alloc_extra_fb() to create a space to store an extra image.
...
That said, I'm just using this for easily transferring large jpeg images.",True,{}
openmv/openmv,https://github.com/openmv/openmv,752,2020-04-13T02:00:28Z,2020-04-13T09:33:33Z,2020-04-13T09:33:33Z,CLOSED,False,60,13,3,https://github.com/matsondawson,"Fix alpha on imlib_draw, implement palettes",1,[],https://github.com/openmv/openmv/pull/752,https://github.com/matsondawson,1,https://github.com/openmv/openmv/pull/752,"1/ image.draw_image fails to apply alpha correctly on anything other than grayscale images, this fixes that.
2/ it also adds a new parameter to image.draw_image, color_palette.  The palette is used when the other image is a grayscale image such as thermographic when you want an e.g. rainbow palette to be applied.  This saves allocating extra memory for a separate buffer for the color thermograph then using a function such as image.blend to blend to the camera.  If you pass a color_palette and the other image is not grayscale an exception is raised.","1/ image.draw_image fails to apply alpha correctly on anything other than grayscale images, this fixes that.
2/ it also adds a new parameter to image.draw_image, color_palette.  The palette is used when the other image is a grayscale image such as thermographic when you want an e.g. rainbow palette to be applied.  This saves allocating extra memory for a separate buffer for the color thermograph then using a function such as image.blend to blend to the camera.  If you pass a color_palette and the other image is not grayscale an exception is raised.",True,{}
openmv/openmv,https://github.com/openmv/openmv,752,2020-04-13T02:00:28Z,2020-04-13T09:33:33Z,2020-04-13T09:33:33Z,CLOSED,False,60,13,3,https://github.com/matsondawson,"Fix alpha on imlib_draw, implement palettes",1,[],https://github.com/openmv/openmv/pull/752,https://github.com/matsondawson,2,https://github.com/openmv/openmv/pull/752#issuecomment-612828256,"1/ image.draw_image fails to apply alpha correctly on anything other than grayscale images, this fixes that.
2/ it also adds a new parameter to image.draw_image, color_palette.  The palette is used when the other image is a grayscale image such as thermographic when you want an e.g. rainbow palette to be applied.  This saves allocating extra memory for a separate buffer for the color thermograph then using a function such as image.blend to blend to the camera.  If you pass a color_palette and the other image is not grayscale an exception is raised.","Please cancel, I forgot to branch before the changes.",True,{}
openmv/openmv,https://github.com/openmv/openmv,753,2020-04-13T09:34:34Z,2020-04-15T11:49:05Z,2020-05-10T01:53:31Z,MERGED,True,63,14,3,https://github.com/matsondawson,Fix DrawImage with alpha and add color palettes for grayscale,2,[],https://github.com/openmv/openmv/pull/753,https://github.com/matsondawson,1,https://github.com/openmv/openmv/pull/753,"1/ image.draw_image fails to apply alpha correctly on anything other than grayscale images, this fixes that.
2/ it also adds a new parameter to image.draw_image, color_palette. The palette is used when the other image is a grayscale image such as thermographic when you want an e.g. rainbow palette to be applied. This saves allocating extra memory for a separate buffer for the color thermograph then using a function such as image.blend to blend to the camera. If you pass a color_palette and the other image is not grayscale an exception is raised.","1/ image.draw_image fails to apply alpha correctly on anything other than grayscale images, this fixes that.
2/ it also adds a new parameter to image.draw_image, color_palette. The palette is used when the other image is a grayscale image such as thermographic when you want an e.g. rainbow palette to be applied. This saves allocating extra memory for a separate buffer for the color thermograph then using a function such as image.blend to blend to the camera. If you pass a color_palette and the other image is not grayscale an exception is raised.",True,{}
openmv/openmv,https://github.com/openmv/openmv,753,2020-04-13T09:34:34Z,2020-04-15T11:49:05Z,2020-05-10T01:53:31Z,MERGED,True,63,14,3,https://github.com/matsondawson,Fix DrawImage with alpha and add color palettes for grayscale,2,[],https://github.com/openmv/openmv/pull/753,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/753#issuecomment-613232756,"1/ image.draw_image fails to apply alpha correctly on anything other than grayscale images, this fixes that.
2/ it also adds a new parameter to image.draw_image, color_palette. The palette is used when the other image is a grayscale image such as thermographic when you want an e.g. rainbow palette to be applied. This saves allocating extra memory for a separate buffer for the color thermograph then using a function such as image.blend to blend to the camera. If you pass a color_palette and the other image is not grayscale an exception is raised.",Please fix and then I'll approve it.,True,{}
openmv/openmv,https://github.com/openmv/openmv,753,2020-04-13T09:34:34Z,2020-04-15T11:49:05Z,2020-05-10T01:53:31Z,MERGED,True,63,14,3,https://github.com/matsondawson,Fix DrawImage with alpha and add color palettes for grayscale,2,[],https://github.com/openmv/openmv/pull/753,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/753#issuecomment-613236971,"1/ image.draw_image fails to apply alpha correctly on anything other than grayscale images, this fixes that.
2/ it also adds a new parameter to image.draw_image, color_palette. The palette is used when the other image is a grayscale image such as thermographic when you want an e.g. rainbow palette to be applied. This saves allocating extra memory for a separate buffer for the color thermograph then using a function such as image.blend to blend to the camera. If you pass a color_palette and the other image is not grayscale an exception is raised.",Ibrahim will merge when ready.,True,{}
openmv/openmv,https://github.com/openmv/openmv,753,2020-04-13T09:34:34Z,2020-04-15T11:49:05Z,2020-05-10T01:53:31Z,MERGED,True,63,14,3,https://github.com/matsondawson,Fix DrawImage with alpha and add color palettes for grayscale,2,[],https://github.com/openmv/openmv/pull/753,https://github.com/matsondawson,4,https://github.com/openmv/openmv/pull/753#issuecomment-613243365,"1/ image.draw_image fails to apply alpha correctly on anything other than grayscale images, this fixes that.
2/ it also adds a new parameter to image.draw_image, color_palette. The palette is used when the other image is a grayscale image such as thermographic when you want an e.g. rainbow palette to be applied. This saves allocating extra memory for a separate buffer for the color thermograph then using a function such as image.blend to blend to the camera. If you pass a color_palette and the other image is not grayscale an exception is raised.","Here's an Open MV python script for the new feature, ""thermographic with smoothing"".
MLX90640_overlay_smoothed.py.txt",True,{}
openmv/openmv,https://github.com/openmv/openmv,753,2020-04-13T09:34:34Z,2020-04-15T11:49:05Z,2020-05-10T01:53:31Z,MERGED,True,63,14,3,https://github.com/matsondawson,Fix DrawImage with alpha and add color palettes for grayscale,2,[],https://github.com/openmv/openmv/pull/753,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/753#issuecomment-613476771,"1/ image.draw_image fails to apply alpha correctly on anything other than grayscale images, this fixes that.
2/ it also adds a new parameter to image.draw_image, color_palette. The palette is used when the other image is a grayscale image such as thermographic when you want an e.g. rainbow palette to be applied. This saves allocating extra memory for a separate buffer for the color thermograph then using a function such as image.blend to blend to the camera. If you pass a color_palette and the other image is not grayscale an exception is raised.",Can you send that to examples in a PR?,True,{}
openmv/openmv,https://github.com/openmv/openmv,754,2020-04-15T03:49:19Z,2020-04-15T11:49:49Z,2020-04-15T11:49:49Z,MERGED,True,4,4,6,https://github.com/kwagyeman,Updated tensorflow library to support int8,1,[],https://github.com/openmv/openmv/pull/754,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/754,Supports int8 now and uint8 models. Runs at 6 fps for the person detector still.,Supports int8 now and uint8 models. Runs at 6 fps for the person detector still.,True,{'HEART': ['https://github.com/iizukak']}
openmv/openmv,https://github.com/openmv/openmv,755,2020-04-15T17:12:00Z,2020-04-17T21:03:33Z,2020-04-17T21:03:33Z,MERGED,True,428,151,3,https://github.com/bitbank2,sped up jpeg encoder by adding a direct bayer-to-ycbcr path,3,[],https://github.com/openmv/openmv/pull/755,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/755,This change speeds up color JPEG encoding (as measured in the IDE) between 10 and 15% over the previous version. VGA color max frame rate is now around 15 FPS in good lighting with a simple scene (30+ FPS without the IDE).,This change speeds up color JPEG encoding (as measured in the IDE) between 10 and 15% over the previous version. VGA color max frame rate is now around 15 FPS in good lighting with a simple scene (30+ FPS without the IDE).,True,{}
openmv/openmv,https://github.com/openmv/openmv,755,2020-04-15T17:12:00Z,2020-04-17T21:03:33Z,2020-04-17T21:03:33Z,MERGED,True,428,151,3,https://github.com/bitbank2,sped up jpeg encoder by adding a direct bayer-to-ycbcr path,3,[],https://github.com/openmv/openmv/pull/755,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/755#issuecomment-614815219,This change speeds up color JPEG encoding (as measured in the IDE) between 10 and 15% over the previous version. VGA color max frame rate is now around 15 FPS in good lighting with a simple scene (30+ FPS without the IDE).,"Please move bayer_to_y and bayer_to_binary to the main library as they are re-usable for other algorithms.

@kwagyeman I don't see anything calling those functions ? If they are used somewhere, @bitbank2 can you please add the imlib_ prefix ? and function prototypes to the imlib.h ? It's very important to keep the prefix. Otherwise if they are not used please remove them.",True,{}
openmv/openmv,https://github.com/openmv/openmv,755,2020-04-15T17:12:00Z,2020-04-17T21:03:33Z,2020-04-17T21:03:33Z,MERGED,True,428,151,3,https://github.com/bitbank2,sped up jpeg encoder by adding a direct bayer-to-ycbcr path,3,[],https://github.com/openmv/openmv/pull/755,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/755#issuecomment-614816300,This change speeds up color JPEG encoding (as measured in the IDE) between 10 and 15% over the previous version. VGA color max frame rate is now around 15 FPS in good lighting with a simple scene (30+ FPS without the IDE).,"These methods are for adding bayer support to many of our find algorithms. In particular, the goal is to enable 640x480 processing on color images on the H7.",True,{}
openmv/openmv,https://github.com/openmv/openmv,755,2020-04-15T17:12:00Z,2020-04-17T21:03:33Z,2020-04-17T21:03:33Z,MERGED,True,428,151,3,https://github.com/bitbank2,sped up jpeg encoder by adding a direct bayer-to-ycbcr path,3,[],https://github.com/openmv/openmv/pull/755,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/755#issuecomment-614819899,This change speeds up color JPEG encoding (as measured in the IDE) between 10 and 15% over the previous version. VGA color max frame rate is now around 15 FPS in good lighting with a simple scene (30+ FPS without the IDE).,"These methods are for adding bayer support to many of our find algorithms. In particular, the goal is to enable 640x480 processing on color images on the H7.

In this case, we'll need the prototypes in imlib.h and the prefix please.",True,{}
openmv/openmv,https://github.com/openmv/openmv,755,2020-04-15T17:12:00Z,2020-04-17T21:03:33Z,2020-04-17T21:03:33Z,MERGED,True,428,151,3,https://github.com/bitbank2,sped up jpeg encoder by adding a direct bayer-to-ycbcr path,3,[],https://github.com/openmv/openmv/pull/755,https://github.com/bitbank2,5,https://github.com/openmv/openmv/pull/755#issuecomment-614820307,This change speeds up color JPEG encoding (as measured in the IDE) between 10 and 15% over the previous version. VGA color max frame rate is now around 15 FPS in good lighting with a simple scene (30+ FPS without the IDE).,"ok, will add...",True,{}
openmv/openmv,https://github.com/openmv/openmv,756,2020-04-16T00:26:47Z,2020-04-16T17:58:30Z,2020-04-16T17:58:30Z,MERGED,True,60,0,1,https://github.com/matsondawson,Demo sample for applying palettes with image.draw_image and smoothing,1,[],https://github.com/openmv/openmv/pull/756,https://github.com/matsondawson,1,https://github.com/openmv/openmv/pull/756,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,758,2020-04-17T11:35:09Z,2020-04-22T15:43:15Z,2020-05-10T01:54:00Z,MERGED,True,293,64,4,https://github.com/matsondawson,draw_image performance and negative scaling.,7,[],https://github.com/openmv/openmv/pull/758,https://github.com/matsondawson,1,https://github.com/openmv/openmv/pull/758,"Changed draw image to use row operations improving performance by a factor of at least 4.
Changed draw image to use SMUAD for alpha blending instead of normal c code.
Changed draw image to allow negative scales to reverse images.
This might require a bit of effort to approve.
I also wanted to change the mask lookup to use row pointers too, but there is no requirement for masks to be the same size as the other image, it's just a suggestion in the docs.
I've tested this with a python script that will be attached.","Changed draw image to use row operations improving performance by a factor of at least 4.
Changed draw image to use SMUAD for alpha blending instead of normal c code.
Changed draw image to allow negative scales to reverse images.
This might require a bit of effort to approve.
I also wanted to change the mask lookup to use row pointers too, but there is no requirement for masks to be the same size as the other image, it's just a suggestion in the docs.
I've tested this with a python script that will be attached.",True,{}
openmv/openmv,https://github.com/openmv/openmv,758,2020-04-17T11:35:09Z,2020-04-22T15:43:15Z,2020-05-10T01:54:00Z,MERGED,True,293,64,4,https://github.com/matsondawson,draw_image performance and negative scaling.,7,[],https://github.com/openmv/openmv/pull/758,https://github.com/matsondawson,2,https://github.com/openmv/openmv/pull/758#issuecomment-615196792,"Changed draw image to use row operations improving performance by a factor of at least 4.
Changed draw image to use SMUAD for alpha blending instead of normal c code.
Changed draw image to allow negative scales to reverse images.
This might require a bit of effort to approve.
I also wanted to change the mask lookup to use row pointers too, but there is no requirement for masks to be the same size as the other image, it's just a suggestion in the docs.
I've tested this with a python script that will be attached.","Python test script here.
draw_image_test_script.py.txt",True,{}
openmv/openmv,https://github.com/openmv/openmv,758,2020-04-17T11:35:09Z,2020-04-22T15:43:15Z,2020-05-10T01:54:00Z,MERGED,True,293,64,4,https://github.com/matsondawson,draw_image performance and negative scaling.,7,[],https://github.com/openmv/openmv/pull/758,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/758#issuecomment-615358005,"Changed draw image to use row operations improving performance by a factor of at least 4.
Changed draw image to use SMUAD for alpha blending instead of normal c code.
Changed draw image to allow negative scales to reverse images.
This might require a bit of effort to approve.
I also wanted to change the mask lookup to use row pointers too, but there is no requirement for masks to be the same size as the other image, it's just a suggestion in the docs.
I've tested this with a python script that will be attached.",Please add your pythons script to the PR in examples.,True,{}
openmv/openmv,https://github.com/openmv/openmv,758,2020-04-17T11:35:09Z,2020-04-22T15:43:15Z,2020-05-10T01:54:00Z,MERGED,True,293,64,4,https://github.com/matsondawson,draw_image performance and negative scaling.,7,[],https://github.com/openmv/openmv/pull/758,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/758#issuecomment-615358420,"Changed draw image to use row operations improving performance by a factor of at least 4.
Changed draw image to use SMUAD for alpha blending instead of normal c code.
Changed draw image to allow negative scales to reverse images.
This might require a bit of effort to approve.
I also wanted to change the mask lookup to use row pointers too, but there is no requirement for masks to be the same size as the other image, it's just a suggestion in the docs.
I've tested this with a python script that will be attached.",I.e. clean-up your test script and make it pretty for others to use as an example.,True,{}
openmv/openmv,https://github.com/openmv/openmv,758,2020-04-17T11:35:09Z,2020-04-22T15:43:15Z,2020-05-10T01:54:00Z,MERGED,True,293,64,4,https://github.com/matsondawson,draw_image performance and negative scaling.,7,[],https://github.com/openmv/openmv/pull/758,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/758#issuecomment-617244721,"Changed draw image to use row operations improving performance by a factor of at least 4.
Changed draw image to use SMUAD for alpha blending instead of normal c code.
Changed draw image to allow negative scales to reverse images.
This might require a bit of effort to approve.
I also wanted to change the mask lookup to use row pointers too, but there is no requirement for masks to be the same size as the other image, it's just a suggestion in the docs.
I've tested this with a python script that will be attached.","If you want to make it faster you can't use safe map pixel. You have to generate a different code path per possibility. So, 9 different tight loops. Not sure if that speed up is needed.",True,{}
openmv/openmv,https://github.com/openmv/openmv,758,2020-04-17T11:35:09Z,2020-04-22T15:43:15Z,2020-05-10T01:54:00Z,MERGED,True,293,64,4,https://github.com/matsondawson,draw_image performance and negative scaling.,7,[],https://github.com/openmv/openmv/pull/758,https://github.com/matsondawson,6,https://github.com/openmv/openmv/pull/758#issuecomment-617515304,"Changed draw image to use row operations improving performance by a factor of at least 4.
Changed draw image to use SMUAD for alpha blending instead of normal c code.
Changed draw image to allow negative scales to reverse images.
This might require a bit of effort to approve.
I also wanted to change the mask lookup to use row pointers too, but there is no requirement for masks to be the same size as the other image, it's just a suggestion in the docs.
I've tested this with a python script that will be attached.","If you want to make it faster you can't use safe map pixel. You have to generate a different code path per possibility. So, 9 different tight loops. Not sure if that speed up is needed.

I tried that, used some macros to generate tight code depending on alpha/mask/conversions, but it had little effect for the mess it created.  The safe map is pretty fast as I think it'll just uses a jump table to get to the right conversion.
I spent a week working on Chrom-Art accelerator to speed things up before I realised how utterly crap it is.  Ultimately found out to actually make it work I had to keep flushing the data cache of the processor, that thing is completely useless for anything other than LCD refresh.",True,{}
openmv/openmv,https://github.com/openmv/openmv,758,2020-04-17T11:35:09Z,2020-04-22T15:43:15Z,2020-05-10T01:54:00Z,MERGED,True,293,64,4,https://github.com/matsondawson,draw_image performance and negative scaling.,7,[],https://github.com/openmv/openmv/pull/758,https://github.com/matsondawson,7,https://github.com/openmv/openmv/pull/758#issuecomment-617539025,"Changed draw image to use row operations improving performance by a factor of at least 4.
Changed draw image to use SMUAD for alpha blending instead of normal c code.
Changed draw image to allow negative scales to reverse images.
This might require a bit of effort to approve.
I also wanted to change the mask lookup to use row pointers too, but there is no requirement for masks to be the same size as the other image, it's just a suggestion in the docs.
I've tested this with a python script that will be attached.","I've added the new alpha blending code, and moved the test script into examples.  Not sure if you have to re-approve?",True,{}
openmv/openmv,https://github.com/openmv/openmv,758,2020-04-17T11:35:09Z,2020-04-22T15:43:15Z,2020-05-10T01:54:00Z,MERGED,True,293,64,4,https://github.com/matsondawson,draw_image performance and negative scaling.,7,[],https://github.com/openmv/openmv/pull/758,https://github.com/kwagyeman,8,https://github.com/openmv/openmv/pull/758#issuecomment-617542098,"Changed draw image to use row operations improving performance by a factor of at least 4.
Changed draw image to use SMUAD for alpha blending instead of normal c code.
Changed draw image to allow negative scales to reverse images.
This might require a bit of effort to approve.
I also wanted to change the mask lookup to use row pointers too, but there is no requirement for masks to be the same size as the other image, it's just a suggestion in the docs.
I've tested this with a python script that will be attached.","Yeah, ST is good at making hardware that does one thing well and everything else not well. I understand it however, they have to verify all features so why make things super flexible when that's not what their big customers need.",True,{}
openmv/openmv,https://github.com/openmv/openmv,759,2020-04-19T06:10:15Z,2020-04-19T18:46:30Z,2020-04-19T18:46:30Z,MERGED,True,3,0,1,https://github.com/kwagyeman,First image is invalid on sensor init0.,1,[],https://github.com/openmv/openmv/pull/759,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/759,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,760,2020-04-20T15:47:51Z,2020-04-22T15:21:27Z,2020-04-22T15:21:27Z,MERGED,True,57,34,1,https://github.com/bitbank2,optimized erode/dilate,2,[],https://github.com/openmv/openmv/pull/760,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/760,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,760,2020-04-20T15:47:51Z,2020-04-22T15:21:27Z,2020-04-22T15:21:27Z,MERGED,True,57,34,1,https://github.com/bitbank2,optimized erode/dilate,2,[],https://github.com/openmv/openmv/pull/760,https://github.com/bitbank2,2,https://github.com/openmv/openmv/pull/760#issuecomment-617400416,,pushed a minor cleanup,True,{}
openmv/openmv,https://github.com/openmv/openmv,761,2020-04-22T16:19:01Z,2020-04-22T19:39:52Z,2020-04-22T19:39:52Z,CLOSED,False,19,9,1,https://github.com/bitbank2,Optimization of negate and difference (mathop.c),4,[],https://github.com/openmv/openmv/pull/761,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/761,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,761,2020-04-22T16:19:01Z,2020-04-22T19:39:52Z,2020-04-22T19:39:52Z,CLOSED,False,19,9,1,https://github.com/bitbank2,Optimization of negate and difference (mathop.c),4,[],https://github.com/openmv/openmv/pull/761,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/761#issuecomment-617900998,,This PR has old commits.,True,{}
openmv/openmv,https://github.com/openmv/openmv,762,2020-04-22T19:44:28Z,2020-04-24T12:44:34Z,2020-04-24T12:44:34Z,MERGED,True,19,9,1,https://github.com/bitbank2,optimize negate and difference,1,[],https://github.com/openmv/openmv/pull/762,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/762,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,763,2020-04-23T09:43:25Z,2020-04-29T16:57:23Z,2020-05-10T01:54:11Z,MERGED,True,81,4,4,https://github.com/matsondawson,Add custom palettes to draw image with demo,4,[],https://github.com/openmv/openmv/pull/763,https://github.com/matsondawson,1,https://github.com/openmv/openmv/pull/763,"For those people who don't like rainbows.  I chose to make the custom palette an image as you could load a palette from and image file, or create a palette using image ops e.g. put some constants color in then use a blur to smooth it.
I do wish there was a better way of assigning the raw palette data to the image, any ideas?","For those people who don't like rainbows.  I chose to make the custom palette an image as you could load a palette from and image file, or create a palette using image ops e.g. put some constants color in then use a blur to smooth it.
I do wish there was a better way of assigning the raw palette data to the image, any ideas?",True,{}
openmv/openmv,https://github.com/openmv/openmv,763,2020-04-23T09:43:25Z,2020-04-29T16:57:23Z,2020-05-10T01:54:11Z,MERGED,True,81,4,4,https://github.com/matsondawson,Add custom palettes to draw image with demo,4,[],https://github.com/openmv/openmv/pull/763,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/763#issuecomment-618543321,"For those people who don't like rainbows.  I chose to make the custom palette an image as you could load a palette from and image file, or create a palette using image ops e.g. put some constants color in then use a blur to smooth it.
I do wish there was a better way of assigning the raw palette data to the image, any ideas?",What you did is the most space efficient way for a color palette. Because it's an image you can control it well.,True,{}
openmv/openmv,https://github.com/openmv/openmv,763,2020-04-23T09:43:25Z,2020-04-29T16:57:23Z,2020-05-10T01:54:11Z,MERGED,True,81,4,4,https://github.com/matsondawson,Add custom palettes to draw image with demo,4,[],https://github.com/openmv/openmv/pull/763,https://github.com/matsondawson,3,https://github.com/openmv/openmv/pull/763#issuecomment-619332426,"For those people who don't like rainbows.  I chose to make the custom palette an image as you could load a palette from and image file, or create a palette using image ops e.g. put some constants color in then use a blur to smooth it.
I do wish there was a better way of assigning the raw palette data to the image, any ideas?",All review changes are applied.,True,{}
openmv/openmv,https://github.com/openmv/openmv,765,2020-04-24T05:41:06Z,2020-04-25T18:11:19Z,2020-04-25T18:11:19Z,MERGED,True,53,12,1,https://github.com/kwagyeman,Fix send/sendto,1,[],https://github.com/openmv/openmv/pull/765,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/765,"Both methods can move megabytes of data now without issues.
Also, fixed an uninitialized value returning from recv_from when you poll
for data and there's nothing to get.","Both methods can move megabytes of data now without issues.
Also, fixed an uninitialized value returning from recv_from when you poll
for data and there's nothing to get.",True,{}
openmv/openmv,https://github.com/openmv/openmv,766,2020-04-24T06:21:32Z,2020-04-24T19:12:41Z,2020-05-10T01:54:35Z,MERGED,True,21,21,2,https://github.com/matsondawson,#764 fix cleanup in filters corrupting memory if y size less than k_size,1,[],https://github.com/openmv/openmv/pull/766,https://github.com/matsondawson,1,https://github.com/openmv/openmv/pull/766,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,767,2020-04-24T16:03:51Z,2020-04-24T16:04:41Z,2020-04-24T16:04:41Z,MERGED,True,3,1,2,https://github.com/kwagyeman,Fix SPI I2C DMA Deinit,1,[],https://github.com/openmv/openmv/pull/767,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/767,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,768,2020-04-24T21:41:25Z,2020-04-29T18:29:41Z,2020-04-29T18:29:41Z,MERGED,True,83,41,1,https://github.com/bitbank2,Optimized datamatrix ops,1,[],https://github.com/openmv/openmv/pull/768,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/768,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,768,2020-04-24T21:41:25Z,2020-04-29T18:29:41Z,2020-04-29T18:29:41Z,MERGED,True,83,41,1,https://github.com/bitbank2,Optimized datamatrix ops,1,[],https://github.com/openmv/openmv/pull/768,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/768#issuecomment-620301596,,"Hi, what's going on with this code. What are these changes doing? What's the performance gain if any?",True,{}
openmv/openmv,https://github.com/openmv/openmv,768,2020-04-24T21:41:25Z,2020-04-29T18:29:41Z,2020-04-29T18:29:41Z,MERGED,True,83,41,1,https://github.com/bitbank2,Optimized datamatrix ops,1,[],https://github.com/openmv/openmv/pull/768,https://github.com/bitbank2,3,https://github.com/openmv/openmv/pull/768#issuecomment-620319528,,"Reducing the de-referencing of member variables in the inner loops increased the speed. This was a measurable, but not major improvement to the perf. A change of algorithm would be needed to see big improvements in the performance.",True,{}
openmv/openmv,https://github.com/openmv/openmv,770,2020-04-28T20:45:27Z,2020-04-29T00:17:26Z,2020-04-29T00:17:26Z,MERGED,True,27,20,2,https://github.com/kwagyeman,Improve WiFi performance by 20X,1,[],https://github.com/openmv/openmv/pull/770,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/770,"Polling for the async response was ruinning WiFi and UDP performance.
This fix removes that polling while not breaking anything. It has been
stress tested while streaming over an hour of wifi video data using the
new RPC scripts.","Polling for the async response was ruinning WiFi and UDP performance.
This fix removes that polling while not breaking anything. It has been
stress tested while streaming over an hour of wifi video data using the
new RPC scripts.",True,{}
openmv/openmv,https://github.com/openmv/openmv,770,2020-04-28T20:45:27Z,2020-04-29T00:17:26Z,2020-04-29T00:17:26Z,MERGED,True,27,20,2,https://github.com/kwagyeman,Improve WiFi performance by 20X,1,[],https://github.com/openmv/openmv/pull/770,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/770#issuecomment-620846118,"Polling for the async response was ruinning WiFi and UDP performance.
This fix removes that polling while not breaking anything. It has been
stress tested while streaming over an hour of wifi video data using the
new RPC scripts.",Note that m2m_wifi_handle_events will spin about 5 times internally and then return. Performance could probably be further improved by moving m2m_wifi_handle_events() into an interrupt service routine and called only when needed @iabdalkader. We should probably do this to enable faster streaming on the H7 Plus. Right now we get about 5 Mbps. We should be able to unlock 2x more speed.,True,{}
openmv/openmv,https://github.com/openmv/openmv,771,2020-04-28T21:37:46Z,2020-05-01T12:35:22Z,2020-05-01T12:35:22Z,MERGED,True,85,56,4,https://github.com/kwagyeman,Add disable_fb.,1,[],https://github.com/openmv/openmv/pull/771,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/771,"Allow user control to disable the frame buffer. Necessary for high manual
jpeg image streaming.","Allow user control to disable the frame buffer. Necessary for high manual
jpeg image streaming.",True,{}
openmv/openmv,https://github.com/openmv/openmv,771,2020-04-28T21:37:46Z,2020-05-01T12:35:22Z,2020-05-01T12:35:22Z,MERGED,True,85,56,4,https://github.com/kwagyeman,Add disable_fb.,1,[],https://github.com/openmv/openmv/pull/771,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/771#issuecomment-621344129,"Allow user control to disable the frame buffer. Necessary for high manual
jpeg image streaming.","Do you need to disable all the streaming or just the encode_for_ide part ?
I don't see where disable_fb gets reset, if you do a soft-reset it will remain disabled.
Can you use fb_ prefix ? It's like new module now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,771,2020-04-28T21:37:46Z,2020-05-01T12:35:22Z,2020-05-01T12:35:22Z,MERGED,True,85,56,4,https://github.com/kwagyeman,Add disable_fb.,1,[],https://github.com/openmv/openmv/pull/771,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/771#issuecomment-621355310,"Allow user control to disable the frame buffer. Necessary for high manual
jpeg image streaming.","Probably should disable all streaming just to make it consistent - only need to disable the encode for IDE part however.
Good catch.
Prefix on what?",True,{}
openmv/openmv,https://github.com/openmv/openmv,771,2020-04-28T21:37:46Z,2020-05-01T12:35:22Z,2020-05-01T12:35:22Z,MERGED,True,85,56,4,https://github.com/kwagyeman,Add disable_fb.,1,[],https://github.com/openmv/openmv/pull/771,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/771#issuecomment-621385174,"Allow user control to disable the frame buffer. Necessary for high manual
jpeg image streaming.","Prefix on what?


To the new functions you just added to framebuffer.c... ex fb_disable_streaming since they're all in framebuffer.c and we may add more later.",True,{}
openmv/openmv,https://github.com/openmv/openmv,771,2020-04-28T21:37:46Z,2020-05-01T12:35:22Z,2020-05-01T12:35:22Z,MERGED,True,85,56,4,https://github.com/kwagyeman,Add disable_fb.,1,[],https://github.com/openmv/openmv/pull/771,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/771#issuecomment-622098745,"Allow user control to disable the frame buffer. Necessary for high manual
jpeg image streaming.",Updated,True,{}
openmv/openmv,https://github.com/openmv/openmv,772,2020-04-29T05:26:51Z,2020-04-29T17:03:22Z,2020-04-29T17:03:22Z,MERGED,True,4,0,1,https://github.com/kwagyeman,Fix ip_obtained bug for static IPs,1,[],https://github.com/openmv/openmv/pull/772,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/772,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,773,2020-04-29T05:57:44Z,2020-05-04T19:25:53Z,2020-05-04T19:25:53Z,MERGED,True,51,37,1,https://github.com/kwagyeman,Modify compression methods to allow jpeg images,1,[],https://github.com/openmv/openmv/pull/773,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/773,"No longer will calling compress() on a jpeg image blow up on you. Now handled intelligently.
(Need this for for the jpeg streamer I just made. So you can pass sensor.PIXFORMAT_JPEG and it works fine).","No longer will calling compress() on a jpeg image blow up on you. Now handled intelligently.
(Need this for for the jpeg streamer I just made. So you can pass sensor.PIXFORMAT_JPEG and it works fine).",True,{}
openmv/openmv,https://github.com/openmv/openmv,773,2020-04-29T05:57:44Z,2020-05-04T19:25:53Z,2020-05-04T19:25:53Z,MERGED,True,51,37,1,https://github.com/kwagyeman,Modify compression methods to allow jpeg images,1,[],https://github.com/openmv/openmv/pull/773,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/773#issuecomment-622397924,"No longer will calling compress() on a jpeg image blow up on you. Now handled intelligently.
(Need this for for the jpeg streamer I just made. So you can pass sensor.PIXFORMAT_JPEG and it works fine).","@kwagyeman Please fix the conflicts, I renamed some functions in #775",True,{}
openmv/openmv,https://github.com/openmv/openmv,774,2020-04-30T20:19:15Z,2020-05-03T22:53:45Z,2020-05-03T22:53:45Z,MERGED,True,8,0,1,https://github.com/kwagyeman,Close sockets that have errors.,1,[],https://github.com/openmv/openmv/pull/774,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/774,"Tested and works.
Yes, you can execute close during the callback. It works fine.","Tested and works.
Yes, you can execute close during the callback. It works fine.",True,{}
openmv/openmv,https://github.com/openmv/openmv,775,2020-05-01T12:41:16Z,2020-05-01T13:53:31Z,2020-05-09T17:03:21Z,MERGED,True,24,24,4,https://github.com/iabdalkader,Rename fb functions for consistency.,1,[],https://github.com/openmv/openmv/pull/775,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/775,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,776,2020-05-04T00:34:28Z,2020-05-04T01:28:10Z,2020-05-04T01:28:10Z,MERGED,True,7,7,3,https://github.com/kwagyeman,Fix disable FB,1,[],https://github.com/openmv/openmv/pull/776,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/776,Fixes renaming inversion.,Fixes renaming inversion.,True,{}
openmv/openmv,https://github.com/openmv/openmv,777,2020-05-04T03:46:02Z,2020-05-04T19:26:19Z,2020-05-04T19:26:19Z,MERGED,True,2870,5,14,https://github.com/kwagyeman,New OpenMV Cam RPC Interface Library,1,[],https://github.com/openmv/openmv/pull/777,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/777,"Might need more documentation for how to run scripts on the OpenMV Cam. However, all the code is ready. Everything has been extensively tested and should work well.","Might need more documentation for how to run scripts on the OpenMV Cam. However, all the code is ready. Everything has been extensively tested and should work well.",True,{}
openmv/openmv,https://github.com/openmv/openmv,778,2020-05-05T04:08:48Z,2020-05-05T20:01:21Z,2020-05-05T20:01:21Z,MERGED,True,139,0,2,https://github.com/kwagyeman,Kwabena/update documentation,2,[],https://github.com/openmv/openmv/pull/778,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/778,"Updated the documentation for how to build the firmware.
Once this is merged I will change the wiki page to point to the new README.","Updated the documentation for how to build the firmware.
Once this is merged I will change the wiki page to point to the new README.",True,{}
openmv/openmv,https://github.com/openmv/openmv,779,2020-05-05T04:14:51Z,2020-05-07T13:50:15Z,2020-05-07T13:50:15Z,MERGED,True,0,9,1,https://github.com/kwagyeman,Remove udev,1,[],https://github.com/openmv/openmv/pull/779,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/779,OpenMV IDE installs udev for folks currently. This isn't needed anymore.,OpenMV IDE installs udev for folks currently. This isn't needed anymore.,True,{}
openmv/openmv,https://github.com/openmv/openmv,779,2020-05-05T04:14:51Z,2020-05-07T13:50:15Z,2020-05-07T13:50:15Z,MERGED,True,0,9,1,https://github.com/kwagyeman,Remove udev,1,[],https://github.com/openmv/openmv/pull/779,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/779#issuecomment-624276148,OpenMV IDE installs udev for folks currently. This isn't needed anymore.,Might be needed if you don't use the IDE or don't want to install/use it ? @kwagyeman,True,{}
openmv/openmv,https://github.com/openmv/openmv,779,2020-05-05T04:14:51Z,2020-05-07T13:50:15Z,2020-05-07T13:50:15Z,MERGED,True,0,9,1,https://github.com/kwagyeman,Remove udev,1,[],https://github.com/openmv/openmv/pull/779,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/779#issuecomment-624342299,OpenMV IDE installs udev for folks currently. This isn't needed anymore.,"The IDE installs a bunch of other stuff. If they don't use the IDE they still should run the installer as all related setup is done there.
Just trying to cleanup things and remove old stuff.",True,{}
openmv/openmv,https://github.com/openmv/openmv,781,2020-05-06T15:17:14Z,2020-05-07T13:49:53Z,2020-05-07T13:49:53Z,MERGED,True,28,8,2,https://github.com/bitbank2,Fix for left edge Bayer to ycbcr bug,2,[],https://github.com/openmv/openmv/pull/781,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/781,The 3.6.2 firmware included a bug in the VGA JPEG capture which was due to a left edge boundary check. It only affected JPEG capture (visible in the IDE and saving to file) and not normal image use. This corrects the problem and does not affect the speed.,The 3.6.2 firmware included a bug in the VGA JPEG capture which was due to a left edge boundary check. It only affected JPEG capture (visible in the IDE and saving to file) and not normal image use. This corrects the problem and does not affect the speed.,True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/matsondawson,1,https://github.com/openmv/openmv/pull/783,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.","There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.",True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/783#issuecomment-625665991,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.","Hi, what was wrong with what you had before? There are a lot of changes in one go. Can you explain what you are changing right now in detail?",True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/783#issuecomment-625666498,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.","That said, this fixes a request for thermal image blending someone had before.",True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/matsondawson,4,https://github.com/openmv/openmv/pull/783#issuecomment-625690218,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.","Hi, what was wrong with what you had before? There are a lot of changes in one go. Can you explain what you are changing right now in detail?

The current implementation uses nearest neighbor interpolation, this adds the ability to use linear smoothing between pixels, which means you can use lower resolution images for compositing thermal images.  This change is actually for the other guy whom I'm working with.
The old code path is still used if you don't pass the interpolation hint, so if it were buggy somehow people can just not use the hint.
Interestingly if the image is scaled at least 2x then the bi-linear filtering code draws faster than the nearest neighbor code.",True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/783#issuecomment-625956158,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.","Sorry, I just looked at this after an all day coding session and was like, man, this is a lot of changes.",True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/kwagyeman,6,https://github.com/openmv/openmv/pull/783#issuecomment-625986766,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.",Supporting the negative scale stuff makes this code too complex. It's kinda at the point where you need to be too smart to debug it.,True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/matsondawson,7,https://github.com/openmv/openmv/pull/783#issuecomment-626084460,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.","Supporting the negative scale stuff makes this code too complex. It's kinda at the point where you need to be too smart to debug it.

I'll look into it, my spider sense says there may be something up with it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/matsondawson,8,https://github.com/openmv/openmv/pull/783#issuecomment-626122887,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.",I'm thinking of removing the negative scales.  I think if you want negative stuff you can use a flip command or something.,True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/kwagyeman,9,https://github.com/openmv/openmv/pull/783#issuecomment-626206048,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.",An issue failed with travis pulling data. Need to kick it again.,True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/kwagyeman,10,https://github.com/openmv/openmv/pull/783#issuecomment-626840574,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.",Can merge this now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/iabdalkader,11,https://github.com/openmv/openmv/pull/783#issuecomment-627018013,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.",I'll review and merge asap. sorry was busy with I2C and another project.,True,{}
openmv/openmv,https://github.com/openmv/openmv,783,2020-05-08T03:46:06Z,2020-05-12T17:56:37Z,2020-05-12T17:59:08Z,MERGED,True,533,139,7,https://github.com/matsondawson,"draw_image bi-linear interpolation, alpha palettes, and center_image",6,[],https://github.com/openmv/openmv/pull/783,https://github.com/iabdalkader,12,https://github.com/openmv/openmv/pull/783#issuecomment-627500225,"There's an extra parameter on draw_image called hint.
It can take the values:
image.BILINEAR_INTERPOLATION which smooths images
image.IMAGE_CENTER which makes x,y coordinates relative to the center of the image.
e.g. hint=image.BILINEAR_INTERPOLATION | image.IMAGE_CENTER
There's an extra parameter on draw_image called alpha_pallete
This works the same as color palette except it creates an alpha value based on the grayscale image.
This is very useful for combining thermal images to sensor when you want some areas to be clear with smoothed edges.","Hi, what was wrong with what you had before? There are a lot of changes in one go. Can you explain what you are changing right now in detail?

The current implementation uses nearest neighbor interpolation, this adds the ability to use linear smoothing between pixels, which means you can use lower resolution images for compositing thermal images. This change is actually for the other guy whom I'm working with.
The old code path is still used if you don't pass the interpolation hint, so if it were buggy somehow people can just not use the hint.
Interestingly if the image is scaled at least 2x then the bi-linear filtering code draws faster than the nearest neighbor code.


@matsondawson Thank you for the PR. Do you mind if we tweet this image to show the improved blending ? And if you'd like to share more details about what you're doing please let us know, we could write a blog post about it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,786,2020-05-08T17:26:35Z,2020-05-08T20:13:20Z,2020-05-09T17:03:03Z,MERGED,True,605,599,14,https://github.com/iabdalkader,Make cambus functions accept I2C handle.,1,[],https://github.com/openmv/openmv/pull/786,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/786,"Tested with the following cams/sensors:

OPENMV3/OV7725
OPENMV4 OV2640, OV5640, OV7725, MT9V034 and all FLIR sensors.
OPENMV4P/OV5640","Tested with the following cams/sensors:

OPENMV3/OV7725
OPENMV4 OV2640, OV5640, OV7725, MT9V034 and all FLIR sensors.
OPENMV4P/OV5640",True,{}
openmv/openmv,https://github.com/openmv/openmv,786,2020-05-08T17:26:35Z,2020-05-08T20:13:20Z,2020-05-09T17:03:03Z,MERGED,True,605,599,14,https://github.com/iabdalkader,Make cambus functions accept I2C handle.,1,[],https://github.com/openmv/openmv/pull/786,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/786#issuecomment-625998455,"Tested with the following cams/sensors:

OPENMV3/OV7725
OPENMV4 OV2640, OV5640, OV7725, MT9V034 and all FLIR sensors.
OPENMV4P/OV5640","Looks good expect for how timing is exported. You should add an argument to init to set the timing to some freq and pull the right timing based on that.

Okay will do that in another PR. Note the freq can be (100KHz, 400KHz or 1000KHz) standard, fast and fast plus mode.",True,{}
openmv/openmv,https://github.com/openmv/openmv,787,2020-05-09T04:25:02Z,2020-05-10T23:52:58Z,2020-05-10T23:52:58Z,MERGED,True,274,76,5,https://github.com/kwagyeman,New readout control code,1,[],https://github.com/openmv/openmv/pull/787,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/787,Makes the OV5640 go at 120 FPS.,Makes the OV5640 go at 120 FPS.,True,{}
openmv/openmv,https://github.com/openmv/openmv,787,2020-05-09T04:25:02Z,2020-05-10T23:52:58Z,2020-05-10T23:52:58Z,MERGED,True,274,76,5,https://github.com/kwagyeman,New readout control code,1,[],https://github.com/openmv/openmv/pull/787,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/787#issuecomment-626107923,Makes the OV5640 go at 120 FPS.,https://youtu.be/sGTJFywzuow,True,{'HOORAY': ['https://github.com/iabdalkader']}
openmv/openmv,https://github.com/openmv/openmv,788,2020-05-09T05:14:59Z,2020-05-09T16:20:24Z,2020-05-09T16:20:24Z,MERGED,True,18,1,2,https://github.com/kwagyeman,Cleanup vscode documentation,1,[],https://github.com/openmv/openmv/pull/788,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/788,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,789,2020-05-09T15:03:47Z,2020-05-11T14:15:42Z,2020-05-11T14:15:42Z,CLOSED,False,1,2,1,None,remove unnecessary computation in template matching,1,[],https://github.com/openmv/openmv/pull/789,None,1,https://github.com/openmv/openmv/pull/789,"According to the paper of J. P. Lewis ""Fast normalized cross-correlation"", the computation of the numerator can be simplified, avoiding the computation of the f_mean and its subtraction from f.","According to the paper of J. P. Lewis ""Fast normalized cross-correlation"", the computation of the numerator can be simplified, avoiding the computation of the f_mean and its subtraction from f.",True,{}
openmv/openmv,https://github.com/openmv/openmv,789,2020-05-09T15:03:47Z,2020-05-11T14:15:42Z,2020-05-11T14:15:42Z,CLOSED,False,1,2,1,None,remove unnecessary computation in template matching,1,[],https://github.com/openmv/openmv/pull/789,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/789#issuecomment-626205654,"According to the paper of J. P. Lewis ""Fast normalized cross-correlation"", the computation of the numerator can be simplified, avoiding the computation of the f_mean and its subtraction from f.",Have you tested this and it doesn't change anything?,True,{}
openmv/openmv,https://github.com/openmv/openmv,789,2020-05-09T15:03:47Z,2020-05-11T14:15:42Z,2020-05-11T14:15:42Z,CLOSED,False,1,2,1,None,remove unnecessary computation in template matching,1,[],https://github.com/openmv/openmv/pull/789,None,3,https://github.com/openmv/openmv/pull/789#issuecomment-626215711,"According to the paper of J. P. Lewis ""Fast normalized cross-correlation"", the computation of the numerator can be simplified, avoiding the computation of the f_mean and its subtraction from f.","@kwagyeman, I tested that in a small example that I created on my own. It shouldn't change anything, since it just removes a sum computation that would accumulate to zero.
What would be the appropriate way to test it? Through this example? Or should I write an additional unit test similar to this one but for the SEARCH_EX case?
Thanks in advance!",True,{}
openmv/openmv,https://github.com/openmv/openmv,789,2020-05-09T15:03:47Z,2020-05-11T14:15:42Z,2020-05-11T14:15:42Z,CLOSED,False,1,2,1,None,remove unnecessary computation in template matching,1,[],https://github.com/openmv/openmv/pull/789,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/789#issuecomment-626706637,"According to the paper of J. P. Lewis ""Fast normalized cross-correlation"", the computation of the numerator can be simplified, avoiding the computation of the f_mean and its subtraction from f.","Hi, I don't have time now to go through the paper again but I ran this test with SEARCH_EX (on the camera with SDRAM):
    import image
    from image import SEARCH_EX, SEARCH_DS
    img = image.Image(""unittest/data/graffiti.pgm"", copy_to_fb=True)
    temp = image.Image(""unittest/data/template.pgm"", copy_to_fb=False)
    r = img.find_template(temp, 0.70, search=SEARCH_EX)
    print(r)


print(unittest(""/unittest/data"", ""unittest/temp""))

After removing f_mean it doesn't find the template at all. Here's the location before in red (which is the correct template location) and after removing the f_mean in blue:",True,{}
openmv/openmv,https://github.com/openmv/openmv,789,2020-05-09T15:03:47Z,2020-05-11T14:15:42Z,2020-05-11T14:15:42Z,CLOSED,False,1,2,1,None,remove unnecessary computation in template matching,1,[],https://github.com/openmv/openmv/pull/789,None,5,https://github.com/openmv/openmv/pull/789#issuecomment-626728520,"According to the paper of J. P. Lewis ""Fast normalized cross-correlation"", the computation of the numerator can be simplified, avoiding the computation of the f_mean and its subtraction from f.","Thanks for testing that @iabdalkader!
Since it doesn't work for your example, I withdraw the pull request.",True,{}
openmv/openmv,https://github.com/openmv/openmv,790,2020-05-09T17:03:32Z,2020-05-09T17:14:21Z,2020-05-09T17:36:56Z,MERGED,True,22,5,6,https://github.com/iabdalkader,Add I2C timings to cambus.,1,[],https://github.com/openmv/openmv/pull/790,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/790,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/matsondawson,1,https://github.com/openmv/openmv/pull/791,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.","Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.",True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/791#issuecomment-626264586,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.","Hi, I paid Layer already to optimize this code. What's the performance change? If it's reduced then that's a problem.
From your changes I might have to reject this. The code was processing 4 pixels at a time for speed reasons.",True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/791#issuecomment-626264934,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.",I don't think you need to do all the changes you made except to change the lens center calculation.,True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/matsondawson,4,https://github.com/openmv/openmv/pull/791#issuecomment-626269886,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.","It's 6-7% slower, but there's big gain for me not double handling the image.
I could make it the about same speed but there'd be an increase in code complexity if you want me to look into it?  Essentially drawing the ranges that won't overflow first, then separately draw the ranges that might with checks for overflow.

Re: I don't think you need to do all the changes you made except to change the lens center calculation.

Yeh, I'm not a smart man, I've changed that.  I also don't need to do the global ""if ((0 <= sourceX) && (0 <= sourceY)) {""
There's some performance gain to be had from changing this to just swap the image pointer somehow when it's finished to point to data, but I realise there's no simple way to know what memory range the original image was allocated in.  e.g. frame_buffer, vs general memory
    void *data = fb_alloc(size, FB_ALLOC_NO_HINT);
    memcpy(data, img->data, size);
    memset(img->data, 0, size);",True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/matsondawson,5,https://github.com/openmv/openmv/pull/791#issuecomment-626278069,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.",I've added a look up table to this now and the performance is 50% to 80% faster depending on the pix format.,True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/matsondawson,6,https://github.com/openmv/openmv/pull/791#issuecomment-626340906,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.","Interestingly on the H7 plus the memcpy in this causes a 20% performance hit, but only for RGB565 in VGA mode.  I wonder if it causes the DRAM bandwidth to be saturated somehow?  RGB565 is already half the speed of grayscale, so I'm assuming in VGA it has bandwidth issues.",True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/kwagyeman,7,https://github.com/openmv/openmv/pull/791#issuecomment-626351873,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.","It's because the image goes off chip then. Fballoc silently moves itself into onchip SRAM if it fits versuses using dram. Basically, there are two fballoc stacks. One in dram and one in SRAM. Whenever an alloc can fit in SRAM I do the same alloc I'm SRAM along with dram and then return the SRAM pointer instead of the dram pointer. When you pop I pop both regions.",True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/kwagyeman,8,https://github.com/openmv/openmv/pull/791#issuecomment-626351990,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.",Everything would be much slower on the plus if I didn't do this. The SDRAM bandwidth is just not amazing.,True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/matsondawson,9,https://github.com/openmv/openmv/pull/791#issuecomment-626410406,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.","@320x240 the table uses sqrt(160^2+120^2)*4(float)=800bytes
@640x480 the table uses sqrt(320^2+240^2)*4(float)=1600bytes
If that's an issue we can write a table and non table version with fall back if memory allocation fails.
But if it can allocate the secondary buffer anyway which @320x240 grayscale is 75k, the extra table is unlikely to be an issue.",True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/kwagyeman,10,https://github.com/openmv/openmv/pull/791#issuecomment-626416610,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.",That byte usage amount is not an issue.,True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/matsondawson,11,https://github.com/openmv/openmv/pull/791#issuecomment-626443418,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.","Also you don't have to accept my changes, I'm cool with that.  I think I'm obligated under the license to submit them back to you though?",True,{}
openmv/openmv,https://github.com/openmv/openmv,791,2020-05-10T02:39:11Z,2020-05-13T19:10:59Z,2020-05-13T19:10:59Z,MERGED,True,141,72,4,https://github.com/matsondawson,Add correction to imlib lens corr + optimise,11,[],https://github.com/openmv/openmv/pull/791,https://github.com/kwagyeman,12,https://github.com/openmv/openmv/pull/791#issuecomment-626820709,"Most cheap lenses are not aligned to their sensors, this creates issues when overlaying two images as they don't quite align correctly.  We can fix this using a rotation_corr with a translate, or creating a new image and drawing it with offset, but this is slow.
I've added x_corr and y_corr to imlib_lens_corr.
The values represent a percentage/100 (0->1) x/y offset to apply before performing the lens correction.
As of example my H7's camera offset is over 5%.","You're not obliged. However, buy doing so you make OpenMV a better project and help it become the OpenCV library for embedded systems which was out goal. So, you're helping making that future a reality. Will check your code today.",True,{}
openmv/openmv,https://github.com/openmv/openmv,792,2020-05-10T22:03:45Z,2020-05-11T13:02:28Z,2020-05-11T13:02:59Z,MERGED,True,286,510,18,https://github.com/iabdalkader,Fix softi2c,8,[],https://github.com/openmv/openmv/pull/792,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/792,"Fix the software I2C spin delay on H7 boards.
Switch MLX90640 and AMG8833 sensors to hardware I2C.
Support MLX90640 64Hz refresh rate.
Tested AMG8833, MLX90621 and MLX90640 on OMV3, OMV4 and OMV4P
Fixes issue #785","Fix the software I2C spin delay on H7 boards.
Switch MLX90640 and AMG8833 sensors to hardware I2C.
Support MLX90640 64Hz refresh rate.
Tested AMG8833, MLX90621 and MLX90640 on OMV3, OMV4 and OMV4P
Fixes issue #785",True,{}
openmv/openmv,https://github.com/openmv/openmv,793,2020-05-11T20:43:21Z,2020-05-11T21:05:47Z,2020-05-11T21:05:47Z,MERGED,True,4,4,1,https://github.com/kwagyeman,Fix typos in readme,1,[],https://github.com/openmv/openmv/pull/793,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/793,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,794,2020-05-12T17:24:45Z,2020-05-12T23:12:39Z,2020-05-12T23:12:39Z,MERGED,True,2,2,2,https://github.com/kwagyeman,Fix get stats call order,1,[],https://github.com/openmv/openmv/pull/794,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/794,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,795,2020-05-12T19:24:48Z,2020-05-12T23:12:26Z,2020-05-12T23:12:26Z,MERGED,True,22,4,5,https://github.com/kwagyeman,Fix Python2/3 Errors,1,[],https://github.com/openmv/openmv/pull/795,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/795,Python 2/3 both work now.,Python 2/3 both work now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,796,2020-05-12T20:01:38Z,2020-05-12T20:46:35Z,2020-05-12T20:46:38Z,MERGED,True,38,21,3,https://github.com/iabdalkader,FIR I2C Improvements,4,[],https://github.com/openmv/openmv/pull/796,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/796,"Add general call support to cambus.
Enable IRQs in cambus read/write_bytes
Increase FIR I2C GPIO speed.
Enable I2C FMP on cams that support it.","Add general call support to cambus.
Enable IRQs in cambus read/write_bytes
Increase FIR I2C GPIO speed.
Enable I2C FMP on cams that support it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,797,2020-05-12T20:47:43Z,2020-05-12T21:00:16Z,2020-05-12T21:00:20Z,MERGED,True,517,113,4,https://github.com/iabdalkader,Update MLX90640 driver.,1,[],https://github.com/openmv/openmv/pull/797,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/797,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,798,2020-05-13T02:35:53Z,2020-05-13T19:11:52Z,2020-05-13T19:11:52Z,MERGED,True,141,69,1,https://github.com/kwagyeman,Fix and speedup rotation correction,1,[],https://github.com/openmv/openmv/pull/798,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/798,"Fix rotation correction failing on the H7 Plus.
Add affine speed up to reduce work.
Change homography method to INVERSE versus SVD which seems to breakdown at extreme angles.","Fix rotation correction failing on the H7 Plus.
Add affine speed up to reduce work.
Change homography method to INVERSE versus SVD which seems to breakdown at extreme angles.",True,{}
openmv/openmv,https://github.com/openmv/openmv,799,2020-05-13T05:34:07Z,2020-05-13T19:12:46Z,2020-05-13T19:12:46Z,MERGED,True,162,64,4,https://github.com/kwagyeman,Add image diff ability to get_histogram,1,[],https://github.com/openmv/openmv/pull/799,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/799,It will do an image diff without requiring another buffer now.,It will do an image diff without requiring another buffer now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,800,2020-05-15T00:30:58Z,2020-05-15T01:33:24Z,2020-05-15T01:33:24Z,MERGED,True,123,43,10,https://github.com/kwagyeman,Update TensorFlow to support uint8/int8/float32,1,[],https://github.com/openmv/openmv/pull/800,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/800,More things work now. Yeah!,More things work now. Yeah!,True,{}
openmv/openmv,https://github.com/openmv/openmv,801,2020-05-18T04:54:32Z,2020-05-20T13:51:12Z,2020-05-20T14:00:58Z,MERGED,True,129,55,2,https://github.com/kwagyeman,Fixed OV5640 Imaging Modes,1,[],https://github.com/openmv/openmv/pull/801,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/801,"Grayscale/RGB565/Bayer/JPEG works perfectly on all reses.
Increased maximum JPEG image transfer size.
Improved line buffer transfer rate.","Grayscale/RGB565/Bayer/JPEG works perfectly on all reses.
Increased maximum JPEG image transfer size.
Improved line buffer transfer rate.",True,{}
openmv/openmv,https://github.com/openmv/openmv,803,2020-05-18T15:39:48Z,2020-05-21T00:50:11Z,2020-05-21T00:50:11Z,MERGED,True,18,7,1,https://github.com/bitbank2,Fixed right edge bayer conversion error,1,[],https://github.com/openmv/openmv/pull/803,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/803,The bayer_to_ycbcr method was reading 1 pixel past the right edge when converting the rightmost pixels since the bayer to RGB algorithm averages the values of neighboring pixels. The new code re-uses the current pixel values to not read past the right edge.,The bayer_to_ycbcr method was reading 1 pixel past the right edge when converting the rightmost pixels since the bayer to RGB algorithm averages the values of neighboring pixels. The new code re-uses the current pixel values to not read past the right edge.,True,{}
openmv/openmv,https://github.com/openmv/openmv,803,2020-05-18T15:39:48Z,2020-05-21T00:50:11Z,2020-05-21T00:50:11Z,MERGED,True,18,7,1,https://github.com/bitbank2,Fixed right edge bayer conversion error,1,[],https://github.com/openmv/openmv/pull/803,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/803#issuecomment-630280411,The bayer_to_ycbcr method was reading 1 pixel past the right edge when converting the rightmost pixels since the bayer to RGB algorithm averages the values of neighboring pixels. The new code re-uses the current pixel values to not read past the right edge.,"Does this need to be done anywhere else ? Can you check all the conversion functions that may have this issue, and if so please commit to this PR.",True,{}
openmv/openmv,https://github.com/openmv/openmv,803,2020-05-18T15:39:48Z,2020-05-21T00:50:11Z,2020-05-21T00:50:11Z,MERGED,True,18,7,1,https://github.com/bitbank2,Fixed right edge bayer conversion error,1,[],https://github.com/openmv/openmv/pull/803,https://github.com/bitbank2,3,https://github.com/openmv/openmv/pull/803#issuecomment-630305435,The bayer_to_ycbcr method was reading 1 pixel past the right edge when converting the rightmost pixels since the bayer to RGB algorithm averages the values of neighboring pixels. The new code re-uses the current pixel values to not read past the right edge.,I'll double check the rest and let you know.,True,{}
openmv/openmv,https://github.com/openmv/openmv,803,2020-05-18T15:39:48Z,2020-05-21T00:50:11Z,2020-05-21T00:50:11Z,MERGED,True,18,7,1,https://github.com/bitbank2,Fixed right edge bayer conversion error,1,[],https://github.com/openmv/openmv/pull/803,https://github.com/bitbank2,4,https://github.com/openmv/openmv/pull/803#issuecomment-630504680,The bayer_to_ycbcr method was reading 1 pixel past the right edge when converting the rightmost pixels since the bayer to RGB algorithm averages the values of neighboring pixels. The new code re-uses the current pixel values to not read past the right edge.,"All code appears to manage the edges properly. The bayer_to_y and bayer_to_rgb565 are not currently used, but appear to be correct.",True,{}
openmv/openmv,https://github.com/openmv/openmv,804,2020-05-19T08:06:00Z,2020-05-20T14:21:55Z,2020-05-20T14:21:55Z,CLOSED,False,36069,1,4,https://github.com/KBacsa,Add support for April Tag TAG36H8 (#802),3,[],https://github.com/openmv/openmv/pull/804,https://github.com/KBacsa,1,https://github.com/openmv/openmv/pull/804,"As far as I know, this fails on the Sipeed MAix BiT for RISC-V.","As far as I know, this fails on the Sipeed MAix BiT for RISC-V.",True,{}
openmv/openmv,https://github.com/openmv/openmv,804,2020-05-19T08:06:00Z,2020-05-20T14:21:55Z,2020-05-20T14:21:55Z,CLOSED,False,36069,1,4,https://github.com/KBacsa,Add support for April Tag TAG36H8 (#802),3,[],https://github.com/openmv/openmv/pull/804,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/804#issuecomment-631137320,"As far as I know, this fails on the Sipeed MAix BiT for RISC-V.",There's not enough flash to merge this.,True,{}
openmv/openmv,https://github.com/openmv/openmv,804,2020-05-19T08:06:00Z,2020-05-20T14:21:55Z,2020-05-20T14:21:55Z,CLOSED,False,36069,1,4,https://github.com/KBacsa,Add support for April Tag TAG36H8 (#802),3,[],https://github.com/openmv/openmv/pull/804,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/804#issuecomment-631256962,"As far as I know, this fails on the Sipeed MAix BiT for RISC-V.","What is in AprilTag.c? How many tags did you add? 36,000+?
The algorithm will search that table linearly about 16 times in a row trying to match a tag. It's probably too large. You should reduced the number of tags in that family.",True,{}
openmv/openmv,https://github.com/openmv/openmv,804,2020-05-19T08:06:00Z,2020-05-20T14:21:55Z,2020-05-20T14:21:55Z,CLOSED,False,36069,1,4,https://github.com/KBacsa,Add support for April Tag TAG36H8 (#802),3,[],https://github.com/openmv/openmv/pull/804,https://github.com/KBacsa,4,https://github.com/openmv/openmv/pull/804#issuecomment-631267166,"As far as I know, this fails on the Sipeed MAix BiT for RISC-V.","I would like to add a family that would have at least 10,000+ tags. The choices are either adding a 7x7 tag or reducing the hamming distance for 6x6 tags. Is there a smarter way of doing this, or are AprilTags simply not designed for a higher number of IDs?",True,{}
openmv/openmv,https://github.com/openmv/openmv,804,2020-05-19T08:06:00Z,2020-05-20T14:21:55Z,2020-05-20T14:21:55Z,CLOSED,False,36069,1,4,https://github.com/KBacsa,Add support for April Tag TAG36H8 (#802),3,[],https://github.com/openmv/openmv/pull/804,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/804#issuecomment-631498866,"As far as I know, this fails on the Sipeed MAix BiT for RISC-V.","The original code allocates a O(1) lookup table by mallocing 30 MBs+ of memory and then computing each possible tag variant with 1 and 2 bit hamming code errors.
I removed that and used a linear table search instead as 30MB would not fit within the 384 KB of RAM on the M7 when I ported the code.
If you want to do a large number of tags it's possible. However, the algorithm will need to be modified to allow a tag library to be loaded into memory.
The original AprilTag code worked this way so it wouldn't be that difficult to handle. We could add a parameter that lets you pass a tag family. Then, it could internally malloc that tag family with a large lookup table.
However, the O(1) thing burns a ton of ram. A 10K tag family will require probably hundreds of Megabytes of RAM. So, the best you could do would be a linear search... But, that will be very slow.
Just to give you a RAM usage amount... The O(1) table has to make a code per possible bit error per tag for the number of but errors you want. So, with 36-bit tags that's 36 possible variants per tag. With 2 bit errors it's 36 * 36 possible tags per tag. And so on.
Tags with more than N bit errors then would never be found.",True,{}
openmv/openmv,https://github.com/openmv/openmv,807,2020-05-23T21:31:49Z,2020-05-25T20:40:39Z,2020-05-25T20:40:39Z,MERGED,True,276,124,5,https://github.com/kwagyeman,Optimized Sensor Driver for Double FPS,2,[],https://github.com/openmv/openmv/pull/807,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/807,"This PR maxes out the speed of the sensor driver and gives us the max FPS each sensor module is able to run at. In particular, the H7 with the OV7725 out of the box in daylight will hit 150 FPS at QVGA. Readout control on the OV5640 allows you to hit 170 FPS.
It's been tested on:
OpenMV Cam H7+ => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam H7+ => MT9V034 => GRAYSCALE all supported resolutions work
OpenMV Cam H7+ => LEPTON => GRAYSCALE/RGB565 all supported resolutions work
OpenMV Cam H7+ => OV5640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7+ => OV2640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7 => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam H7 => MT9V034 => GRAYSCALE all supported resolutions work
OpenMV Cam H7 => LEPTON => GRAYSCALE/RGB565 all supported resolutions work
OpenMV Cam H7 => OV5640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7 => OV2640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7 Micro => OV7690 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam M7 => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam M4 => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam M4 => OV2640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
IOCTLS:
MT9V034 Trigger mode has been tested.
OV5640 Read Out Control has been tested.
Changes:
For the M4/F7/H7 HAL the DCMI driver has been modified so that the callback correctly track how many lines have been processed and then only enable the end of frame interrupt after the last line has been transferred. This had to be fixed so that the end of frame interrupt would actually mean that all data has been transferred. Without this fix the end of frame interrupt could happen before or after the last line of the image had been transferred causing sync issues.
Second, the HAL has also been modified such that if the DMA is not aborted, it will be able to continue going and receive the next frame and generate the same end of frame interrupt at the right time again.
In the sensor driver itself the method I'm using to speed things up works by starting the DMCI bus and then leaving it running after a frame has been received. Hardware will then not miss the VSYNC start of the next frame that it needs to see in-order to read data. That said, most cameras generate VSYNC and then expose the image for a very long period of time before sending image pixels. So, data will not start immediately after VSYNC. Moving on, once data starts coming in since we have the line buffer with interrupts I can disable the DMA transfer if snapshot has not been called already and was waiting for data. However, it snapshot was called again and is waiting for data we can just receive the data.
By operating this way above we are able to receive every frame from the camera and if we can process the frame in less than the exposure time we will achieve the max FPS. If processing takes longer than the exposure time then the frame rate will default to 1/2 the max FPS and go down from there. So, for lower resolution images this change significantly increases your FPS.","This PR maxes out the speed of the sensor driver and gives us the max FPS each sensor module is able to run at. In particular, the H7 with the OV7725 out of the box in daylight will hit 150 FPS at QVGA. Readout control on the OV5640 allows you to hit 170 FPS.
It's been tested on:
OpenMV Cam H7+ => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam H7+ => MT9V034 => GRAYSCALE all supported resolutions work
OpenMV Cam H7+ => LEPTON => GRAYSCALE/RGB565 all supported resolutions work
OpenMV Cam H7+ => OV5640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7+ => OV2640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7 => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam H7 => MT9V034 => GRAYSCALE all supported resolutions work
OpenMV Cam H7 => LEPTON => GRAYSCALE/RGB565 all supported resolutions work
OpenMV Cam H7 => OV5640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7 => OV2640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7 Micro => OV7690 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam M7 => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam M4 => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam M4 => OV2640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
IOCTLS:
MT9V034 Trigger mode has been tested.
OV5640 Read Out Control has been tested.
Changes:
For the M4/F7/H7 HAL the DCMI driver has been modified so that the callback correctly track how many lines have been processed and then only enable the end of frame interrupt after the last line has been transferred. This had to be fixed so that the end of frame interrupt would actually mean that all data has been transferred. Without this fix the end of frame interrupt could happen before or after the last line of the image had been transferred causing sync issues.
Second, the HAL has also been modified such that if the DMA is not aborted, it will be able to continue going and receive the next frame and generate the same end of frame interrupt at the right time again.
In the sensor driver itself the method I'm using to speed things up works by starting the DMCI bus and then leaving it running after a frame has been received. Hardware will then not miss the VSYNC start of the next frame that it needs to see in-order to read data. That said, most cameras generate VSYNC and then expose the image for a very long period of time before sending image pixels. So, data will not start immediately after VSYNC. Moving on, once data starts coming in since we have the line buffer with interrupts I can disable the DMA transfer if snapshot has not been called already and was waiting for data. However, it snapshot was called again and is waiting for data we can just receive the data.
By operating this way above we are able to receive every frame from the camera and if we can process the frame in less than the exposure time we will achieve the max FPS. If processing takes longer than the exposure time then the frame rate will default to 1/2 the max FPS and go down from there. So, for lower resolution images this change significantly increases your FPS.",True,{}
openmv/openmv,https://github.com/openmv/openmv,807,2020-05-23T21:31:49Z,2020-05-25T20:40:39Z,2020-05-25T20:40:39Z,MERGED,True,276,124,5,https://github.com/kwagyeman,Optimized Sensor Driver for Double FPS,2,[],https://github.com/openmv/openmv/pull/807,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/807#issuecomment-633668434,"This PR maxes out the speed of the sensor driver and gives us the max FPS each sensor module is able to run at. In particular, the H7 with the OV7725 out of the box in daylight will hit 150 FPS at QVGA. Readout control on the OV5640 allows you to hit 170 FPS.
It's been tested on:
OpenMV Cam H7+ => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam H7+ => MT9V034 => GRAYSCALE all supported resolutions work
OpenMV Cam H7+ => LEPTON => GRAYSCALE/RGB565 all supported resolutions work
OpenMV Cam H7+ => OV5640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7+ => OV2640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7 => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam H7 => MT9V034 => GRAYSCALE all supported resolutions work
OpenMV Cam H7 => LEPTON => GRAYSCALE/RGB565 all supported resolutions work
OpenMV Cam H7 => OV5640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7 => OV2640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
OpenMV Cam H7 Micro => OV7690 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam M7 => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam M4 => OV7725 => GRAYSCALE/RGB565/BAYER all supported resolutions work
OpenMV Cam M4 => OV2640 => GRAYSCALE/RGB565/BAYER/JPEG all supported resolutions work
IOCTLS:
MT9V034 Trigger mode has been tested.
OV5640 Read Out Control has been tested.
Changes:
For the M4/F7/H7 HAL the DCMI driver has been modified so that the callback correctly track how many lines have been processed and then only enable the end of frame interrupt after the last line has been transferred. This had to be fixed so that the end of frame interrupt would actually mean that all data has been transferred. Without this fix the end of frame interrupt could happen before or after the last line of the image had been transferred causing sync issues.
Second, the HAL has also been modified such that if the DMA is not aborted, it will be able to continue going and receive the next frame and generate the same end of frame interrupt at the right time again.
In the sensor driver itself the method I'm using to speed things up works by starting the DMCI bus and then leaving it running after a frame has been received. Hardware will then not miss the VSYNC start of the next frame that it needs to see in-order to read data. That said, most cameras generate VSYNC and then expose the image for a very long period of time before sending image pixels. So, data will not start immediately after VSYNC. Moving on, once data starts coming in since we have the line buffer with interrupts I can disable the DMA transfer if snapshot has not been called already and was waiting for data. However, it snapshot was called again and is waiting for data we can just receive the data.
By operating this way above we are able to receive every frame from the camera and if we can process the frame in less than the exposure time we will achieve the max FPS. If processing takes longer than the exposure time then the frame rate will default to 1/2 the max FPS and go down from there. So, for lower resolution images this change significantly increases your FPS.",Pushed changes in another commit since the original commit is already 100% tested.,True,{}
openmv/openmv,https://github.com/openmv/openmv,808,2020-05-24T05:51:28Z,2020-05-25T12:27:38Z,2020-05-25T12:27:38Z,MERGED,True,15,17,1,https://github.com/kwagyeman,Fixed Floating Point Scaling in TensorFlow code,1,[],https://github.com/openmv/openmv/pull/808,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/808,"Thought this was more complex than actually.
Floating point is just 0->1. So, scaling is just 0-255. It's not more complex with -1:+1 which has issues for mapping to 8-bits.","Thought this was more complex than actually.
Floating point is just 0->1. So, scaling is just 0-255. It's not more complex with -1:+1 which has issues for mapping to 8-bits.",True,{}
openmv/openmv,https://github.com/openmv/openmv,809,2020-05-24T22:34:50Z,2020-05-25T12:24:58Z,2020-05-25T12:24:58Z,MERGED,True,4,4,1,https://github.com/bitbank2,fixed software JPEG encode of 1-bpp images,2,[],https://github.com/openmv/openmv/pull/809,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/809,"For the hardware JPEG encoder, it wants YUV input and is happy with Y values of 0x00 and 0xff to be min and max. The software JPEG encoder wants YCbCr input which wants min/max values of Y to be 0x80 and 0x7F. I fixed the output for that.","For the hardware JPEG encoder, it wants YUV input and is happy with Y values of 0x00 and 0xff to be min and max. The software JPEG encoder wants YCbCr input which wants min/max values of Y to be 0x80 and 0x7F. I fixed the output for that.",True,{}
openmv/openmv,https://github.com/openmv/openmv,809,2020-05-24T22:34:50Z,2020-05-25T12:24:58Z,2020-05-25T12:24:58Z,MERGED,True,4,4,1,https://github.com/bitbank2,fixed software JPEG encode of 1-bpp images,2,[],https://github.com/openmv/openmv/pull/809,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/809#issuecomment-633311875,"For the hardware JPEG encoder, it wants YUV input and is happy with Y values of 0x00 and 0xff to be min and max. The software JPEG encoder wants YCbCr input which wants min/max values of Y to be 0x80 and 0x7F. I fixed the output for that.",@bitbank2 Did you test this ?,True,{}
openmv/openmv,https://github.com/openmv/openmv,809,2020-05-24T22:34:50Z,2020-05-25T12:24:58Z,2020-05-25T12:24:58Z,MERGED,True,4,4,1,https://github.com/bitbank2,fixed software JPEG encode of 1-bpp images,2,[],https://github.com/openmv/openmv/pull/809,https://github.com/bitbank2,3,https://github.com/openmv/openmv/pull/809#issuecomment-633316924,"For the hardware JPEG encoder, it wants YUV input and is happy with Y values of 0x00 and 0xff to be min and max. The software JPEG encoder wants YCbCr input which wants min/max values of Y to be 0x80 and 0x7F. I fixed the output for that.",yes,True,{}
openmv/openmv,https://github.com/openmv/openmv,809,2020-05-24T22:34:50Z,2020-05-25T12:24:58Z,2020-05-25T12:24:58Z,MERGED,True,4,4,1,https://github.com/bitbank2,fixed software JPEG encode of 1-bpp images,2,[],https://github.com/openmv/openmv/pull/809,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/809#issuecomment-633318355,"For the hardware JPEG encoder, it wants YUV input and is happy with Y values of 0x00 and 0xff to be min and max. The software JPEG encoder wants YCbCr input which wants min/max values of Y to be 0x80 and 0x7F. I fixed the output for that.",It doesn't seem to have any effect.,True,{}
openmv/openmv,https://github.com/openmv/openmv,809,2020-05-24T22:34:50Z,2020-05-25T12:24:58Z,2020-05-25T12:24:58Z,MERGED,True,4,4,1,https://github.com/bitbank2,fixed software JPEG encode of 1-bpp images,2,[],https://github.com/openmv/openmv/pull/809,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/809#issuecomment-633318855,"For the hardware JPEG encoder, it wants YUV input and is happy with Y values of 0x00 and 0xff to be min and max. The software JPEG encoder wants YCbCr input which wants min/max values of Y to be 0x80 and 0x7F. I fixed the output for that.",There are two bugs. The second one is with grayscale images that have been thresholded.,True,{}
openmv/openmv,https://github.com/openmv/openmv,809,2020-05-24T22:34:50Z,2020-05-25T12:24:58Z,2020-05-25T12:24:58Z,MERGED,True,4,4,1,https://github.com/bitbank2,fixed software JPEG encode of 1-bpp images,2,[],https://github.com/openmv/openmv/pull/809,https://github.com/kwagyeman,6,https://github.com/openmv/openmv/pull/809#issuecomment-633318999,"For the hardware JPEG encoder, it wants YUV input and is happy with Y values of 0x00 and 0xff to be min and max. The software JPEG encoder wants YCbCr input which wants min/max values of Y to be 0x80 and 0x7F. I fixed the output for that.","https://github.com/bitbank2/openmv/blob/61739d6c40b3d83cbc00e3ae9a297d2c3bf6e67b/src/omv/img/jpeg.c#L923
Should be xor and not subtract. Subtract overflows into the next pixels.",True,{}
openmv/openmv,https://github.com/openmv/openmv,809,2020-05-24T22:34:50Z,2020-05-25T12:24:58Z,2020-05-25T12:24:58Z,MERGED,True,4,4,1,https://github.com/bitbank2,fixed software JPEG encode of 1-bpp images,2,[],https://github.com/openmv/openmv/pull/809,https://github.com/bitbank2,7,https://github.com/openmv/openmv/pull/809#issuecomment-633324517,"For the hardware JPEG encoder, it wants YUV input and is happy with Y values of 0x00 and 0xff to be min and max. The software JPEG encoder wants YCbCr input which wants min/max values of Y to be 0x80 and 0x7F. I fixed the output for that.","ok, I'll fix that
I ran the binary filter sketch before submitting this PR and it worked. Let me look again.
ah - the HW/SW JPEG encoder had been flipped back to hardware. Testing now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,809,2020-05-24T22:34:50Z,2020-05-25T12:24:58Z,2020-05-25T12:24:58Z,MERGED,True,4,4,1,https://github.com/bitbank2,fixed software JPEG encode of 1-bpp images,2,[],https://github.com/openmv/openmv/pull/809,https://github.com/bitbank2,8,https://github.com/openmv/openmv/pull/809#issuecomment-633326266,"For the hardware JPEG encoder, it wants YUV input and is happy with Y values of 0x00 and 0xff to be min and max. The software JPEG encoder wants YCbCr input which wants min/max values of Y to be 0x80 and 0x7F. I fixed the output for that.",try it now,True,{}
openmv/openmv,https://github.com/openmv/openmv,810,2020-05-25T01:58:02Z,2020-06-02T18:40:42Z,2020-06-02T18:41:59Z,MERGED,True,13,12,1,https://github.com/bherbruck,Update cascade_convert.py,5,[],https://github.com/openmv/openmv/pull/810,https://github.com/bherbruck,1,https://github.com/openmv/openmv/pull/810,"convert the map variable to a list to avoid ""TypeError: 'map' object is not subscriptable"" error","convert the map variable to a list to avoid ""TypeError: 'map' object is not subscriptable"" error",True,{}
openmv/openmv,https://github.com/openmv/openmv,810,2020-05-25T01:58:02Z,2020-06-02T18:40:42Z,2020-06-02T18:41:59Z,MERGED,True,13,12,1,https://github.com/bherbruck,Update cascade_convert.py,5,[],https://github.com/openmv/openmv/pull/810,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/810#issuecomment-633551319,"convert the map variable to a list to avoid ""TypeError: 'map' object is not subscriptable"" error","That's not the only change needed to make this run with Python 3. See the attached diff.
diff --git a/ml/haarcascade/cascade_convert.py b/ml/haarcascade/cascade_convert.py
index 2bf4e054..bc9be030 100755
--- a/ml/haarcascade/cascade_convert.py
+++ b/ml/haarcascade/cascade_convert.py
@@ -33,7 +33,7 @@ def cascade_info(path):
     stages_elements = xmldoc.getElementsByTagName('stages')
     stages = []
     for node in stages_elements[0].childNodes:
-        if node.nodeType is 1:
+        if node.nodeType == 1:
             stages.append(int(node.getElementsByTagName('maxWeakCount')[0].childNodes[0].nodeValue))
     stage_threshold = xmldoc.getElementsByTagName('stageThreshold')[0:n_stages]
 
@@ -118,7 +118,7 @@ def cascade_binary(path, n_stages, name):
     stages_elements = xmldoc.getElementsByTagName('stages')
     stages = []
     for node in stages_elements[0].childNodes:
-        if node.nodeType is 1:
+        if node.nodeType == 1:
             stages.append(int(node.getElementsByTagName('maxWeakCount')[0].childNodes[0].nodeValue))
     stage_threshold = xmldoc.getElementsByTagName('stageThreshold')[0:n_stages]
 
@@ -227,7 +227,7 @@ def cascade_binary_old(path, n_stages, name):
     stage_threshold = xmldoc.getElementsByTagName('stage_threshold')[0:n_stages]
 
     # total number of features
-    n_features = sum(stages)
+    n_features = int(sum(stages))
 
     # read features threshold
     threshold = xmldoc.getElementsByTagName('threshold')[0:n_features]
@@ -240,7 +240,7 @@ def cascade_binary_old(path, n_stages, name):
     feature = xmldoc.getElementsByTagName('rects')[0:n_features]
 
     # read cascade size
-    size = (map(int, xmldoc.getElementsByTagName('size')[0].childNodes[0].nodeValue.split()))
+    size = list(map(int, xmldoc.getElementsByTagName('size')[0].childNodes[0].nodeValue.split()))
 
     # open output file with the specified name or xml file name
     if not name:
@@ -261,7 +261,7 @@ def cascade_binary_old(path, n_stages, name):
 
     # write num feat in stages
     for s in stages:
-        fout.write(struct.pack('B', s)) # uint8_t
+        fout.write(struct.pack('B', int(s))) # uint8_t
 
     # write stages thresholds
     for t in stage_threshold:
@@ -288,14 +288,14 @@ def cascade_binary_old(path, n_stages, name):
     for f in feature:
         rects = f.getElementsByTagName('_')
         for r in rects:
-            l = map(int, r.childNodes[0].nodeValue[:-1].split())
+            l = list(map(int, r.childNodes[0].nodeValue[:-1].split()))
             fout.write(struct.pack('b', l[4])) #int8_t NOTE: multiply by 4096
 
     # write rects
     for f in feature:
         rects = f.getElementsByTagName('_')
         for r in rects:
-            l = map(int, r.childNodes[0].nodeValue[:-1].split())
+            l = list(map(int, r.childNodes[0].nodeValue[:-1].split()))
             fout.write(struct.pack('BBBB',l[0], l[1], l[2], l[3])) #uint8_t
 
     # print cascade info```",True,{}
openmv/openmv,https://github.com/openmv/openmv,810,2020-05-25T01:58:02Z,2020-06-02T18:40:42Z,2020-06-02T18:41:59Z,MERGED,True,13,12,1,https://github.com/bherbruck,Update cascade_convert.py,5,[],https://github.com/openmv/openmv/pull/810,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/810#issuecomment-636202023,"convert the map variable to a list to avoid ""TypeError: 'map' object is not subscriptable"" error",Thanks for the update. I'll review and merge soon.,True,{}
openmv/openmv,https://github.com/openmv/openmv,810,2020-05-25T01:58:02Z,2020-06-02T18:40:42Z,2020-06-02T18:41:59Z,MERGED,True,13,12,1,https://github.com/bherbruck,Update cascade_convert.py,5,[],https://github.com/openmv/openmv/pull/810,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/810#issuecomment-636369235,"convert the map variable to a list to avoid ""TypeError: 'map' object is not subscriptable"" error","This still doesn't run with Python3.8... The following changes are also required:
diff --git a/ml/haarcascade/cascade_convert.py b/ml/haarcascade/cascade_convert.py
index 4cca899e..63054295 100755
--- a/ml/haarcascade/cascade_convert.py
+++ b/ml/haarcascade/cascade_convert.py
@@ -33,7 +33,7 @@ def cascade_info(path):
     stages_elements = xmldoc.getElementsByTagName('stages')
     stages = []
     for node in stages_elements[0].childNodes:
-        if node.nodeType is 1:
+        if node.nodeType == 1:
             stages.append(int(node.getElementsByTagName('maxWeakCount')[0].childNodes[0].nodeValue))
     stage_threshold = xmldoc.getElementsByTagName('stageThreshold')[0:n_stages]
 
@@ -118,7 +118,7 @@ def cascade_binary(path, n_stages, name):
     stages_elements = xmldoc.getElementsByTagName('stages')
     stages = []
     for node in stages_elements[0].childNodes:
-        if node.nodeType is 1:
+        if node.nodeType == 1:
             stages.append(int(node.getElementsByTagName('maxWeakCount')[0].childNodes[0].nodeValue))
     stage_threshold = xmldoc.getElementsByTagName('stageThreshold')[0:n_stages]
 
@@ -223,7 +223,7 @@ def cascade_binary_old(path, n_stages, name):
         n_stages = max_stages
 
     # read stages
-    stages = [len(t.childNodes)/2 for t in trees][0:n_stages]
+    stages = [len(t.childNodes)//2 for t in trees][0:n_stages]
     stage_threshold = xmldoc.getElementsByTagName('stage_threshold')[0:n_stages]
 
     # total number of features",True,{}
openmv/openmv,https://github.com/openmv/openmv,810,2020-05-25T01:58:02Z,2020-06-02T18:40:42Z,2020-06-02T18:41:59Z,MERGED,True,13,12,1,https://github.com/bherbruck,Update cascade_convert.py,5,[],https://github.com/openmv/openmv/pull/810,https://github.com/iabdalkader,5,https://github.com/openmv/openmv/pull/810#issuecomment-637736105,"convert the map variable to a list to avoid ""TypeError: 'map' object is not subscriptable"" error",Thanks for the PR... There's still one place to fix (in the old cascade format function) that I'll fix.,True,{}
openmv/openmv,https://github.com/openmv/openmv,811,2020-05-25T23:14:43Z,2020-05-26T00:38:15Z,2020-05-26T00:38:15Z,MERGED,True,13,15,1,https://github.com/kwagyeman,Modified sensor.c per Ibrahim's requests,1,[],https://github.com/openmv/openmv/pull/811,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/811,"Simply the abort method.
Improve comment clarity.","Simply the abort method.
Improve comment clarity.",True,{}
openmv/openmv,https://github.com/openmv/openmv,812,2020-05-26T20:36:53Z,2020-05-26T23:33:05Z,2020-05-26T23:33:05Z,MERGED,True,90,26,1,https://github.com/kwagyeman,OV5640 readout speed doubled for high res BAYER/GRAYSCALE/JPEG,1,[],https://github.com/openmv/openmv/pull/812,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/812,"The OV5640 now achieves the maximum frame rate possible for the DCMI bus in all modes. Resolutions not supported are properly caught now too.
The basics of the OV5640 at this point are now done. There is work to be done on improving the image quality and also working on some of the sensor control methods. However, the most important features are now done.","The OV5640 now achieves the maximum frame rate possible for the DCMI bus in all modes. Resolutions not supported are properly caught now too.
The basics of the OV5640 at this point are now done. There is work to be done on improving the image quality and also working on some of the sensor control methods. However, the most important features are now done.",True,{}
openmv/openmv,https://github.com/openmv/openmv,816,2020-05-28T05:53:39Z,2020-05-29T01:39:26Z,2020-05-29T01:39:26Z,MERGED,True,4,4,1,https://github.com/kwagyeman,Get pixel now does debayering for bayer rgbtuple mode,1,[],https://github.com/openmv/openmv/pull/816,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/816,https://forums.openmv.io/viewtopic.php?p=11338&sid=71b25798a86aa1f68cc19b0b4e7c9289#p11338,https://forums.openmv.io/viewtopic.php?p=11338&sid=71b25798a86aa1f68cc19b0b4e7c9289#p11338,True,{}
openmv/openmv,https://github.com/openmv/openmv,818,2020-05-29T18:57:20Z,2020-06-02T18:37:58Z,2020-06-02T18:37:58Z,MERGED,True,199,73,10,https://github.com/kwagyeman,Fix buffer overflow issues,2,[],https://github.com/openmv/openmv/pull/818,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/818,"This commit fixes most of the frame buffer overflow issues that can cause memory corruption. In particular, this commit is needed so that when you use a camera sensor on a board not designed for it you do not get memory corruption because of various buffers being too small. The error checks will now trigger to prevent issues before hand. This is what is fixed:

Made OMV_LINE_BUF_SIZE an int so it can be used in code.
Removed sleeps on the OV2640.
Protect max resolution on the OV2640/OV7725.
Renamed the sensor timeout error to something more generic now that sensor.snapshot throws more errors.
Added mode error checks to set_pixformat/set_framesize/set_windowing.
Made it policy for the same offsets to be used for BAYER/GRAYSCALE/RGB565 so that when switching between pixformats the frame doesn't jiggle around.
Redid sensor_check_buffsize() so that it scales down the frame buffer to fit within the frame we have available for the frame buffer in a very nice way.
Catch uninitialized framesize/pixformat for snapshot.
Catch issues if the line buffer is too small to handle the DCMI data input.
Catch OV5640 JPEG buffer overflow.
Catch OV2640 JPEG buffer overflow.
Added missing deassert of the frame trigger pin on snapshot error.","This commit fixes most of the frame buffer overflow issues that can cause memory corruption. In particular, this commit is needed so that when you use a camera sensor on a board not designed for it you do not get memory corruption because of various buffers being too small. The error checks will now trigger to prevent issues before hand. This is what is fixed:

Made OMV_LINE_BUF_SIZE an int so it can be used in code.
Removed sleeps on the OV2640.
Protect max resolution on the OV2640/OV7725.
Renamed the sensor timeout error to something more generic now that sensor.snapshot throws more errors.
Added mode error checks to set_pixformat/set_framesize/set_windowing.
Made it policy for the same offsets to be used for BAYER/GRAYSCALE/RGB565 so that when switching between pixformats the frame doesn't jiggle around.
Redid sensor_check_buffsize() so that it scales down the frame buffer to fit within the frame we have available for the frame buffer in a very nice way.
Catch uninitialized framesize/pixformat for snapshot.
Catch issues if the line buffer is too small to handle the DCMI data input.
Catch OV5640 JPEG buffer overflow.
Catch OV2640 JPEG buffer overflow.
Added missing deassert of the frame trigger pin on snapshot error.",True,{}
openmv/openmv,https://github.com/openmv/openmv,819,2020-05-29T21:26:18Z,2020-05-30T19:15:59Z,2020-05-30T19:15:59Z,MERGED,True,22,4,2,https://github.com/kwagyeman,Fix bayer vflip on OV7725 and OV7690,1,[],https://github.com/openmv/openmv/pull/819,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/819,Fix the bayer issue on the OV7690 and OV7725.,Fix the bayer issue on the OV7690 and OV7725.,True,{}
openmv/openmv,https://github.com/openmv/openmv,820,2020-05-30T05:41:05Z,2020-05-30T23:27:24Z,2020-05-30T23:27:24Z,MERGED,True,41,25,1,https://github.com/kwagyeman,Update auto rotation to trigger on reset,1,[],https://github.com/openmv/openmv/pull/820,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/820,"Triggers on reset now so that the rotation is set immediately. Matters if the camera started upside down, etc.","Triggers on reset now so that the rotation is set immediately. Matters if the camera started upside down, etc.",True,{}
openmv/openmv,https://github.com/openmv/openmv,821,2020-06-03T05:06:11Z,2020-06-03T21:29:06Z,2020-06-03T21:29:06Z,MERGED,True,300,0,2,https://github.com/kwagyeman,Add rtsp support,1,[],https://github.com/openmv/openmv/pull/821,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/821,"This adds a new rtsp server library class to the firmware to allow folks to stream MJPEG video from their OpenMV Cam.
In particular, you can open rtsp streams in OpenCV to easily consume OpenMV output data. Also, VLC can open the streams too.
Note that VLC doesn't like the JPEGs produced by our STM32H7 compression hardware (it might require YUV 422 - we do YUV 444 JPEGs). It has no problem with the JPEGs produced by the OV5640. Not sure why VLC isn't able to handle this however as it can decode the same JPEGs in an MJPEG video.
Further study of what JPEG images are supported so be looked into and possibly editing out default jpeg format if necessary.","This adds a new rtsp server library class to the firmware to allow folks to stream MJPEG video from their OpenMV Cam.
In particular, you can open rtsp streams in OpenCV to easily consume OpenMV output data. Also, VLC can open the streams too.
Note that VLC doesn't like the JPEGs produced by our STM32H7 compression hardware (it might require YUV 422 - we do YUV 444 JPEGs). It has no problem with the JPEGs produced by the OV5640. Not sure why VLC isn't able to handle this however as it can decode the same JPEGs in an MJPEG video.
Further study of what JPEG images are supported so be looked into and possibly editing out default jpeg format if necessary.",True,{}
openmv/openmv,https://github.com/openmv/openmv,822,2020-06-03T06:18:22Z,2020-06-03T21:33:24Z,2020-06-03T21:33:24Z,MERGED,True,21,6,2,https://github.com/kwagyeman,Cleanup trailing data on jpeg images,1,[],https://github.com/openmv/openmv/pull/822,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/822,"Removes trailing 0 bytes from JPEG data from the internal JPEG compressor on the H7.
Removes thousands of trailing 0 bytes from JPEG data from OV5640/2640 cameras.

The software JPEG compressor was checked and does not add extra data to the jpeg file.","Removes trailing 0 bytes from JPEG data from the internal JPEG compressor on the H7.
Removes thousands of trailing 0 bytes from JPEG data from OV5640/2640 cameras.

The software JPEG compressor was checked and does not add extra data to the jpeg file.",True,{}
openmv/openmv,https://github.com/openmv/openmv,823,2020-06-07T22:03:38Z,2020-06-07T22:13:26Z,2020-06-07T22:13:29Z,MERGED,True,0,5,1,https://github.com/iabdalkader,FPS clock fix.,1,[],https://github.com/openmv/openmv/pull/823,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/823,Resetting the counter makes the FPS count jump up.,Resetting the counter makes the FPS count jump up.,True,{}
openmv/openmv,https://github.com/openmv/openmv,826,2020-06-08T19:45:03Z,2020-06-08T20:37:18Z,2020-06-08T20:37:22Z,MERGED,True,0,48,1,https://github.com/iabdalkader,Cleanup mt9v034 driver.,1,[],https://github.com/openmv/openmv/pull/826,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/826,"mt9v034 has a lot of unimplemented functions that just return 0. Some can't be implemented (get_rgb_gain), maybe they are placeholders to be implemented (or if the color sensor is supported), if so they should return -1 not 0;","mt9v034 has a lot of unimplemented functions that just return 0. Some can't be implemented (get_rgb_gain), maybe they are placeholders to be implemented (or if the color sensor is supported), if so they should return -1 not 0;",True,{}
openmv/openmv,https://github.com/openmv/openmv,827,2020-06-14T02:21:55Z,2020-06-15T19:56:48Z,2020-06-15T19:56:48Z,CLOSED,False,451,450,19,https://github.com/kwagyeman,Initial double buffering support commit,1,[],https://github.com/openmv/openmv/pull/827,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/827,"This PR adds double buffering to the OpenMV Cam. We were previously leaving a ton of performance on the table at low resolutions and this gives you a massive performance boost (2x) on algorithms that can run at the frame.
I will also add a parameter to double buffering letting you specify the number of data buffers. This will give us a video fifo allowing us to finally record smooth video without requiring threads.
Note: Double buffering requires interrupts to not be disabled so the frame callbacks can run. I spent half the day trying to figure out why the video got corrupted randomly and determined it was interrupts being disabled causing the issue. We should stop disabling interrupts unless necessary. They do not need to be disabled in cambus.c and in the wifi driver. The code works fine with interrupts. That said, I understand this is conditioned on any chain of interrupts not blocking for too long. For I2C the bus speed is quite slow so it's not an issue. For the SPI bus for WiFi it's a little more tricky. The SPI fifo buys 16 bytes (128-bits) or time at 48MHz. So, about 2us. For I2C we have a buffer time of about 80us. I ran the RTSP server on the H7P streaming 1080P video and didn't notice an issue. But, I can't say for certain it's okay.
I will modify the callback to check if the frame end flag has been set and toss the frame if this is the case. This will add robustness to the interrupt issue for other interrupt sources I did not change (like stuff in the MicroPython code). However, we should aim to not disable interrupt generally.
Changes:

OPENMV2  board config - Fixed FB_SIZE (was 1K larger than in reality).
OPENMV3  board config - Fixed FB_SIZE (was 1K larger than in reality).
OPENMV4P board config - FB only needs to be 20MB for two 2952x1944 RGB565 frames.
Cambus - removed disabling interrupts (corrupts double buffering video).
FB alloc - renamed pointers, exposed the alloc pointer externally for sensor.c.
Framebuffer - removed not needed methods. Made jpeg compression code more readable. In general, I changed things to avoid the overuse of the MAIN_FB()/JPEG_FB() macros.
IMLIB - Made image size return 0 if bbp is less than 1.
Lepton - Updated it with the most minimal changes for working with the new sensor driver code. I did not want to make a whole lot of changes here. The code will need to be re-factored in the future.
py_fir - switched to new helper methods for accessing the frame buffer.
py_helper - made new methods for accessing the frame buffer to remove over-use of MAIN_FB()
py_image - switched to new helper methods for accessing the frame buffer.
py_sensor - added double buffering code, used new helper methods, and changed some error messages.
usb_dbg - switched to new helper methods for accessing the frame buffer.
wifi_bus_driver - removed disabling interrupts (corrupts double buffering video).
sensor - bulk of changes described below:

To make things work nicely you no longer access the frame buffer directly. Instead I made some access methods that give you the size of one raw frame buffer in bytes, a method that give you the address of the current frame buffer all code should use, and a method that gives you the size of the max allocated frame buffer ram. The new code is designed to respect fb_alloc so that the frame buffer will not grow into the fb_alloc area that has been previously alloced.
Double buffering works right now by having a two buffers that are filled with data by the frame callback as images come in. Once I buffer is finished being filled up the frame call back moves to the next buffer. I should be able to modify this structure with a little more work to support any number of frame buffers for a true video fifo to enable video recording.
This PR is a work in progress pending comments by Ibrahim and video fifo support.","This PR adds double buffering to the OpenMV Cam. We were previously leaving a ton of performance on the table at low resolutions and this gives you a massive performance boost (2x) on algorithms that can run at the frame.
I will also add a parameter to double buffering letting you specify the number of data buffers. This will give us a video fifo allowing us to finally record smooth video without requiring threads.
Note: Double buffering requires interrupts to not be disabled so the frame callbacks can run. I spent half the day trying to figure out why the video got corrupted randomly and determined it was interrupts being disabled causing the issue. We should stop disabling interrupts unless necessary. They do not need to be disabled in cambus.c and in the wifi driver. The code works fine with interrupts. That said, I understand this is conditioned on any chain of interrupts not blocking for too long. For I2C the bus speed is quite slow so it's not an issue. For the SPI bus for WiFi it's a little more tricky. The SPI fifo buys 16 bytes (128-bits) or time at 48MHz. So, about 2us. For I2C we have a buffer time of about 80us. I ran the RTSP server on the H7P streaming 1080P video and didn't notice an issue. But, I can't say for certain it's okay.
I will modify the callback to check if the frame end flag has been set and toss the frame if this is the case. This will add robustness to the interrupt issue for other interrupt sources I did not change (like stuff in the MicroPython code). However, we should aim to not disable interrupt generally.
Changes:

OPENMV2  board config - Fixed FB_SIZE (was 1K larger than in reality).
OPENMV3  board config - Fixed FB_SIZE (was 1K larger than in reality).
OPENMV4P board config - FB only needs to be 20MB for two 2952x1944 RGB565 frames.
Cambus - removed disabling interrupts (corrupts double buffering video).
FB alloc - renamed pointers, exposed the alloc pointer externally for sensor.c.
Framebuffer - removed not needed methods. Made jpeg compression code more readable. In general, I changed things to avoid the overuse of the MAIN_FB()/JPEG_FB() macros.
IMLIB - Made image size return 0 if bbp is less than 1.
Lepton - Updated it with the most minimal changes for working with the new sensor driver code. I did not want to make a whole lot of changes here. The code will need to be re-factored in the future.
py_fir - switched to new helper methods for accessing the frame buffer.
py_helper - made new methods for accessing the frame buffer to remove over-use of MAIN_FB()
py_image - switched to new helper methods for accessing the frame buffer.
py_sensor - added double buffering code, used new helper methods, and changed some error messages.
usb_dbg - switched to new helper methods for accessing the frame buffer.
wifi_bus_driver - removed disabling interrupts (corrupts double buffering video).
sensor - bulk of changes described below:

To make things work nicely you no longer access the frame buffer directly. Instead I made some access methods that give you the size of one raw frame buffer in bytes, a method that give you the address of the current frame buffer all code should use, and a method that gives you the size of the max allocated frame buffer ram. The new code is designed to respect fb_alloc so that the frame buffer will not grow into the fb_alloc area that has been previously alloced.
Double buffering works right now by having a two buffers that are filled with data by the frame callback as images come in. Once I buffer is finished being filled up the frame call back moves to the next buffer. I should be able to modify this structure with a little more work to support any number of frame buffers for a true video fifo to enable video recording.
This PR is a work in progress pending comments by Ibrahim and video fifo support.",True,{}
openmv/openmv,https://github.com/openmv/openmv,828,2020-06-14T22:02:12Z,2020-06-15T14:02:22Z,2020-06-15T14:02:23Z,MERGED,True,8,4,1,https://github.com/kwagyeman,Return 0 if bbp is less than 0,1,[],https://github.com/openmv/openmv/pull/828,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/828,Return 0 if bbp is less than 0,Return 0 if bbp is less than 0,True,{}
openmv/openmv,https://github.com/openmv/openmv,829,2020-06-14T22:10:43Z,2020-06-15T14:07:56Z,2020-06-15T14:07:56Z,MERGED,True,6,34,2,https://github.com/kwagyeman,Remove disabling interrupts,1,[],https://github.com/openmv/openmv/pull/829,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/829,Don't disable interrupts anymore for this HAL code. It's not required.,Don't disable interrupts anymore for this HAL code. It's not required.,True,{}
openmv/openmv,https://github.com/openmv/openmv,830,2020-06-14T22:20:49Z,2020-06-15T18:17:08Z,2020-06-15T18:17:08Z,MERGED,True,7,7,3,https://github.com/kwagyeman,Fixed buffer size on the 2/3 and reduced the frame buffer to 20M on Plus.,1,[],https://github.com/openmv/openmv/pull/830,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/830,"Fixed buffer size on the 2/3 and reduced the frame buffer to 20M on Plus.
OMV_RAW_BUF_SIZE doesn't prevent fb alloc from running into it's area currently. With the coming double buffer commit fb alloc will not easily walk into the frame buffer area anymore and will respect the buffer size except for cases where it known it can (i.e. in single buffer mode - in double buffer mode it will not re-use frame buffer memory).","Fixed buffer size on the 2/3 and reduced the frame buffer to 20M on Plus.
OMV_RAW_BUF_SIZE doesn't prevent fb alloc from running into it's area currently. With the coming double buffer commit fb alloc will not easily walk into the frame buffer area anymore and will respect the buffer size except for cases where it known it can (i.e. in single buffer mode - in double buffer mode it will not re-use frame buffer memory).",True,{}
openmv/openmv,https://github.com/openmv/openmv,830,2020-06-14T22:20:49Z,2020-06-15T18:17:08Z,2020-06-15T18:17:08Z,MERGED,True,7,7,3,https://github.com/kwagyeman,Fixed buffer size on the 2/3 and reduced the frame buffer to 20M on Plus.,1,[],https://github.com/openmv/openmv/pull/830,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/830#issuecomment-644291022,"Fixed buffer size on the 2/3 and reduced the frame buffer to 20M on Plus.
OMV_RAW_BUF_SIZE doesn't prevent fb alloc from running into it's area currently. With the coming double buffer commit fb alloc will not easily walk into the frame buffer area anymore and will respect the buffer size except for cases where it known it can (i.e. in single buffer mode - in double buffer mode it will not re-use frame buffer memory).","Note: OMV_FB_SIZE and OMV_FB_ALLOC_SIZE are only used in the linker script script, to make sure FB + minimum FB alloc memory fit the used memory region. Changing them has No effect as long as OMV_FB_SIZE + OMV_FB_ALLOC_SIZE <= OMV_FB_MEMORY size. Wasn't really a bug, but thanks for making things more consistent.",True,{}
openmv/openmv,https://github.com/openmv/openmv,831,2020-06-14T22:35:56Z,2020-06-16T00:33:57Z,2020-06-16T00:33:57Z,CLOSED,False,65,160,4,https://github.com/kwagyeman,Simplified frame buffer access code,1,[],https://github.com/openmv/openmv/pull/831,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/831,"For the double buffer commit we shouldn't have code all over the place directly accessing the frame buffer. It needs to go through a function which returns the frame buffer you are working on out an array of frame buffers.
The wrapper methods in py_helper are applicable to the code state before the frame double buffer commit.","For the double buffer commit we shouldn't have code all over the place directly accessing the frame buffer. It needs to go through a function which returns the frame buffer you are working on out an array of frame buffers.
The wrapper methods in py_helper are applicable to the code state before the frame double buffer commit.",True,{}
openmv/openmv,https://github.com/openmv/openmv,831,2020-06-14T22:35:56Z,2020-06-16T00:33:57Z,2020-06-16T00:33:57Z,CLOSED,False,65,160,4,https://github.com/kwagyeman,Simplified frame buffer access code,1,[],https://github.com/openmv/openmv/pull/831,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/831#issuecomment-644452138,"For the double buffer commit we shouldn't have code all over the place directly accessing the frame buffer. It needs to go through a function which returns the frame buffer you are working on out an array of frame buffers.
The wrapper methods in py_helper are applicable to the code state before the frame double buffer commit.",This is not needed anymore,True,{}
openmv/openmv,https://github.com/openmv/openmv,831,2020-06-14T22:35:56Z,2020-06-16T00:33:57Z,2020-06-16T00:33:57Z,CLOSED,False,65,160,4,https://github.com/kwagyeman,Simplified frame buffer access code,1,[],https://github.com/openmv/openmv/pull/831,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/831#issuecomment-644460330,"For the double buffer commit we shouldn't have code all over the place directly accessing the frame buffer. It needs to go through a function which returns the frame buffer you are working on out an array of frame buffers.
The wrapper methods in py_helper are applicable to the code state before the frame double buffer commit.",I still want to make it more simple.,True,{}
openmv/openmv,https://github.com/openmv/openmv,831,2020-06-14T22:35:56Z,2020-06-16T00:33:57Z,2020-06-16T00:33:57Z,CLOSED,False,65,160,4,https://github.com/kwagyeman,Simplified frame buffer access code,1,[],https://github.com/openmv/openmv/pull/831,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/831#issuecomment-644460846,"For the double buffer commit we shouldn't have code all over the place directly accessing the frame buffer. It needs to go through a function which returns the frame buffer you are working on out an array of frame buffers.
The wrapper methods in py_helper are applicable to the code state before the frame double buffer commit.",Will redo this.,True,{}
openmv/openmv,https://github.com/openmv/openmv,832,2020-06-14T22:49:50Z,2020-07-20T23:31:08Z,2020-07-20T23:31:08Z,CLOSED,False,12,2,2,https://github.com/kwagyeman,Expose fb_alloc_pointer for snapshot,1,[],https://github.com/openmv/openmv/pull/832,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/832,"Renames the pointer used for fb_alloc and exposes it for use with snapshot().
fb_alloc_pointer_snapshot is a copy of the pointer which snapshot will update when it's called to adjust how double buffers are setup given user buffer allocation. It's convenient to store here.","Renames the pointer used for fb_alloc and exposes it for use with snapshot().
fb_alloc_pointer_snapshot is a copy of the pointer which snapshot will update when it's called to adjust how double buffers are setup given user buffer allocation. It's convenient to store here.",True,{}
openmv/openmv,https://github.com/openmv/openmv,832,2020-06-14T22:49:50Z,2020-07-20T23:31:08Z,2020-07-20T23:31:08Z,CLOSED,False,12,2,2,https://github.com/kwagyeman,Expose fb_alloc_pointer for snapshot,1,[],https://github.com/openmv/openmv/pull/832,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/832#issuecomment-644477191,"Renames the pointer used for fb_alloc and exposes it for use with snapshot().
fb_alloc_pointer_snapshot is a copy of the pointer which snapshot will update when it's called to adjust how double buffers are setup given user buffer allocation. It's convenient to store here.","fb_alloc_pointer_snapshot is a copy of the pointer which snapshot will update when it's called to adjust how double buffers are setup given user buffer allocation. It's convenient to store here.


Please keep this change out of this PR until it's actually needed so there's a context where it makes sense.",True,{}
openmv/openmv,https://github.com/openmv/openmv,832,2020-06-14T22:49:50Z,2020-07-20T23:31:08Z,2020-07-20T23:31:08Z,CLOSED,False,12,2,2,https://github.com/kwagyeman,Expose fb_alloc_pointer for snapshot,1,[],https://github.com/openmv/openmv/pull/832,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/832#issuecomment-644477585,"Renames the pointer used for fb_alloc and exposes it for use with snapshot().
fb_alloc_pointer_snapshot is a copy of the pointer which snapshot will update when it's called to adjust how double buffers are setup given user buffer allocation. It's convenient to store here.",Actually this whole PR is not needed right now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,833,2020-06-14T23:10:50Z,2020-06-17T17:23:43Z,2020-06-17T17:23:44Z,MERGED,True,100,109,6,https://github.com/kwagyeman,Made code that uses the framebuffer more readable,1,[],https://github.com/openmv/openmv/pull/833,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/833,"Trying to remove MAIN_FB() stuff from being everywhere. Instead, it's inside of access functions.","Trying to remove MAIN_FB() stuff from being everywhere. Instead, it's inside of access functions.",True,{}
openmv/openmv,https://github.com/openmv/openmv,833,2020-06-14T23:10:50Z,2020-06-17T17:23:43Z,2020-06-17T17:23:44Z,MERGED,True,100,109,6,https://github.com/kwagyeman,Made code that uses the framebuffer more readable,1,[],https://github.com/openmv/openmv/pull/833,https://github.com/rcroeder,2,https://github.com/openmv/openmv/pull/833#issuecomment-643840388,"Trying to remove MAIN_FB() stuff from being everywhere. Instead, it's inside of access functions.","Please remove me from this thread. I have attempted a dozen times to unsubscribe.





From: Kwabena W. Agyeman <notifications@github.com>
Sent: Sunday, June 14, 2020 4:11 PM
To: openmv/openmv <openmv@noreply.github.com>
Cc: Subscribed <subscribed@noreply.github.com>
Subject: [openmv/openmv] Made code that uses the framebuffer more readable (#833)



This PR I think depends on other PRs before it because of fb_buffer_size().
…
_____  


You can view, comment on, or merge this pull request online at:


  #833


Commit Summary


*	Made code that uses the framebuffer more readable


File Changes


*	M src/omv/fb_alloc.c <https://github.com/openmv/openmv/pull/833/files#diff-bdf566e267feb22edcc5c044d2011b6e>  (8)
*	M src/omv/framebuffer.c <https://github.com/openmv/openmv/pull/833/files#diff-e8960ffe21ec076dc21f48d0edf8d600>  (90)
*	M src/omv/framebuffer.h <https://github.com/openmv/openmv/pull/833/files#diff-2f40d95882a8429bf2164fd701bd4924>  (19)
*	M src/omv/py/py_sensor.c <https://github.com/openmv/openmv/pull/833/files#diff-bfef5fb15a40eaa0fcc2e26fd9a2b99d>  (11)
*	M src/omv/usbdbg.c <https://github.com/openmv/openmv/pull/833/files#diff-3c975fbc0069e573e23ef3f2674761bc>  (18)


Patch Links:


*	https://github.com/openmv/openmv/pull/833.patch
*	https://github.com/openmv/openmv/pull/833.diff

—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub <#833> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAS7P23HRWZNH5T6T73S7KDRWVKIRANCNFSM4N5VESYQ> .  <https://github.com/notifications/beacon/AAS7P24R4JFRF2WXMWLPZX3RWVKIRA5CNFSM4N5VESY2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4JQN6Z4A.gif>",True,{}
openmv/openmv,https://github.com/openmv/openmv,833,2020-06-14T23:10:50Z,2020-06-17T17:23:43Z,2020-06-17T17:23:44Z,MERGED,True,100,109,6,https://github.com/kwagyeman,Made code that uses the framebuffer more readable,1,[],https://github.com/openmv/openmv/pull/833,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/833#issuecomment-643840911,"Trying to remove MAIN_FB() stuff from being everywhere. Instead, it's inside of access functions.","@rcroeder We didn't add you, check your notifications settings (the watch/unwatch button in the top)",True,{}
openmv/openmv,https://github.com/openmv/openmv,833,2020-06-14T23:10:50Z,2020-06-17T17:23:43Z,2020-06-17T17:23:44Z,MERGED,True,100,109,6,https://github.com/kwagyeman,Made code that uses the framebuffer more readable,1,[],https://github.com/openmv/openmv/pull/833,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/833#issuecomment-644902809,"Trying to remove MAIN_FB() stuff from being everywhere. Instead, it's inside of access functions.","Next step, let's rename fb_framebuffer to framebuffer and jpeg_fb_framebuffer to jpegbuffer....",True,{}
openmv/openmv,https://github.com/openmv/openmv,833,2020-06-14T23:10:50Z,2020-06-17T17:23:43Z,2020-06-17T17:23:44Z,MERGED,True,100,109,6,https://github.com/kwagyeman,Made code that uses the framebuffer more readable,1,[],https://github.com/openmv/openmv/pull/833,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/833#issuecomment-645126636,"Trying to remove MAIN_FB() stuff from being everywhere. Instead, it's inside of access functions.",It's all been updated.,True,{}
openmv/openmv,https://github.com/openmv/openmv,834,2020-06-15T20:15:12Z,2020-06-15T20:24:36Z,2020-06-15T20:24:39Z,MERGED,True,20,0,2,https://github.com/iabdalkader,Add accessor functions to framebuffer.,1,[],https://github.com/openmv/openmv/pull/834,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/834,"Add functions to access the main framebuffer pointer and set w, h and bpp. I didn't make the function accept an image to decouple it from imlib.","Add functions to access the main framebuffer pointer and set w, h and bpp. I didn't make the function accept an image to decouple it from imlib.",True,{}
openmv/openmv,https://github.com/openmv/openmv,835,2020-06-15T22:14:30Z,2020-06-16T00:01:37Z,2020-07-14T19:28:46Z,MERGED,True,123,142,6,https://github.com/iabdalkader,Update fb access,2,[],https://github.com/openmv/openmv/pull/835,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/835,"This is a redo of PR #831 using the new framebuffer some more. Now nothing in omv/py/* uses MAIN_FB anymore, hopefully all the other code will be updated to use the new functions.
Additionally this code decouples framebuffer from MicroPython code (no exceptions in framebuffer.c) mostly with the exception of mpprint, and from imlib so it makes the new functions available to all the code that don't need these dependencies.","This is a redo of PR #831 using the new framebuffer some more. Now nothing in omv/py/* uses MAIN_FB anymore, hopefully all the other code will be updated to use the new functions.
Additionally this code decouples framebuffer from MicroPython code (no exceptions in framebuffer.c) mostly with the exception of mpprint, and from imlib so it makes the new functions available to all the code that don't need these dependencies.",True,{}
openmv/openmv,https://github.com/openmv/openmv,835,2020-06-15T22:14:30Z,2020-06-16T00:01:37Z,2020-07-14T19:28:46Z,MERGED,True,123,142,6,https://github.com/iabdalkader,Update fb access,2,[],https://github.com/openmv/openmv/pull/835,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/835#issuecomment-644434030,"This is a redo of PR #831 using the new framebuffer some more. Now nothing in omv/py/* uses MAIN_FB anymore, hopefully all the other code will be updated to use the new functions.
Additionally this code decouples framebuffer from MicroPython code (no exceptions in framebuffer.c) mostly with the exception of mpprint, and from imlib so it makes the new functions available to all the code that don't need these dependencies.",I will replay my simplification code onto of this. I still don't like the fact that there's so much frame buffer code in the imglib.,True,{}
openmv/openmv,https://github.com/openmv/openmv,835,2020-06-15T22:14:30Z,2020-06-16T00:01:37Z,2020-07-14T19:28:46Z,MERGED,True,123,142,6,https://github.com/iabdalkader,Update fb access,2,[],https://github.com/openmv/openmv/pull/835,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/835#issuecomment-644445786,"This is a redo of PR #831 using the new framebuffer some more. Now nothing in omv/py/* uses MAIN_FB anymore, hopefully all the other code will be updated to use the new functions.
Additionally this code decouples framebuffer from MicroPython code (no exceptions in framebuffer.c) mostly with the exception of mpprint, and from imlib so it makes the new functions available to all the code that don't need these dependencies.",@kwagyeman updated.,True,{}
openmv/openmv,https://github.com/openmv/openmv,836,2020-06-16T03:48:01Z,2020-06-16T18:07:35Z,2020-06-16T18:07:35Z,MERGED,True,62,91,4,https://github.com/kwagyeman,Cleaned up the usage of framebuffer access in py_image/py_fir,1,[],https://github.com/openmv/openmv/pull/836,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/836,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,837,2020-06-16T10:29:39Z,2020-06-16T17:13:59Z,2020-06-16T17:13:59Z,CLOSED,False,5,0,1,https://github.com/v923z,fixes ulab compilation error,1,[],https://github.com/openmv/openmv/pull/837,https://github.com/v923z,1,https://github.com/openmv/openmv/pull/837,This is a partial patch for v923z/micropython-ulab#124,This is a partial patch for v923z/micropython-ulab#124,True,{}
openmv/openmv,https://github.com/openmv/openmv,837,2020-06-16T10:29:39Z,2020-06-16T17:13:59Z,2020-06-16T17:13:59Z,CLOSED,False,5,0,1,https://github.com/v923z,fixes ulab compilation error,1,[],https://github.com/openmv/openmv/pull/837,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/837#issuecomment-644897422,This is a partial patch for v923z/micropython-ulab#124,I'll fix the Makefiles in the same PR that updates the submodule so it doesn't break.,True,{}
openmv/openmv,https://github.com/openmv/openmv,838,2020-06-16T18:51:16Z,2020-06-16T19:39:44Z,2020-06-16T19:39:47Z,MERGED,True,7,2,2,https://github.com/iabdalkader,Update ulab.,1,[],https://github.com/openmv/openmv/pull/838,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/838,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,843,2020-07-04T19:31:01Z,2020-07-04T21:13:52Z,2020-07-04T21:13:52Z,MERGED,True,151,0,1,https://github.com/kwagyeman,Add readout control for apriltag tracking,1,[],https://github.com/openmv/openmv/pull/843,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/843,Demo example script.,Demo example script.,True,{}
openmv/openmv,https://github.com/openmv/openmv,845,2020-07-13T22:01:23Z,2020-07-14T18:27:30Z,2020-07-14T18:27:30Z,MERGED,True,247,119,3,https://github.com/pnndra,update support for portenta and its camera carrier,5,[],https://github.com/openmv/openmv/pull/845,https://github.com/pnndra,1,https://github.com/openmv/openmv/pull/845,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,846,2020-07-14T01:43:04Z,2020-07-14T19:10:15Z,2020-07-14T19:10:15Z,MERGED,True,14,14,1,https://github.com/kwagyeman,Fix lens correction issue,1,[],https://github.com/openmv/openmv/pull/846,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/846,Issue was related to the lens correction algorithm onboard. It's not documented well enough to fix so I turned it off. Then fixed the Y_AVG weighting window values and then updated the AEC control zone for the brighter image. Quality seems good.,Issue was related to the lens correction algorithm onboard. It's not documented well enough to fix so I turned it off. Then fixed the Y_AVG weighting window values and then updated the AEC control zone for the brighter image. Quality seems good.,True,{}
openmv/openmv,https://github.com/openmv/openmv,847,2020-07-14T17:29:15Z,2020-07-14T17:57:30Z,2020-07-14T17:57:34Z,MERGED,True,9,1,1,https://github.com/iabdalkader,Add Portenta to CI build.,1,[],https://github.com/openmv/openmv/pull/847,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/847,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,848,2020-07-14T19:09:26Z,2020-07-14T19:59:47Z,2020-07-14T19:59:52Z,MERGED,True,35,29,12,https://github.com/iabdalkader,Fix CUBE-AI build,5,[],https://github.com/openmv/openmv/pull/848,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/848,"Disable built-in AI libraries if CUBE-AI is defined.
Remove the hard-coded crc drivers from cubeai Makefile.
Reduce the heap of all H7 targets to fix the build.
Fixes #814","Disable built-in AI libraries if CUBE-AI is defined.
Remove the hard-coded crc drivers from cubeai Makefile.
Reduce the heap of all H7 targets to fix the build.
Fixes #814",True,{}
openmv/openmv,https://github.com/openmv/openmv,849,2020-07-14T22:06:42Z,2020-07-14T23:25:06Z,2020-07-14T23:25:06Z,MERGED,True,25,14,2,https://github.com/pnndra,portenta updates for SDRAM usage and sensor compatibility,4,[],https://github.com/openmv/openmv/pull/849,https://github.com/pnndra,1,https://github.com/openmv/openmv/pull/849,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,850,2020-07-15T04:34:01Z,2020-07-15T13:33:34Z,2020-07-15T13:33:34Z,CLOSED,False,20,20,10,https://github.com/kwagyeman,New TensorFlow Lib,1,[],https://github.com/openmv/openmv/pull/850,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/850,"Wait till Daniel confirms this is fine.
Also, we should probably do another commit to remove the old CMSIS-NN stuff.","Wait till Daniel confirms this is fine.
Also, we should probably do another commit to remove the old CMSIS-NN stuff.",True,{}
openmv/openmv,https://github.com/openmv/openmv,851,2020-07-16T02:59:32Z,2020-07-16T12:50:52Z,2020-07-16T12:50:52Z,MERGED,True,20,20,10,https://github.com/kwagyeman,Update TensorFlow to latest,1,[],https://github.com/openmv/openmv/pull/851,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/851,"Old CNN support is disabled. Should remove scripts, examples, etc. in another PR.","Old CNN support is disabled. Should remove scripts, examples, etc. in another PR.",True,{}
openmv/openmv,https://github.com/openmv/openmv,853,2020-07-17T00:27:25Z,2020-07-17T16:58:31Z,2020-07-17T16:58:32Z,MERGED,True,2,0,1,https://github.com/kwagyeman,Fixes image quality at lower resolutions,1,[],https://github.com/openmv/openmv/pull/853,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/853,Gives more time for exposure.,Gives more time for exposure.,True,{}
openmv/openmv,https://github.com/openmv/openmv,854,2020-07-17T17:15:40Z,2020-07-17T17:30:36Z,2020-07-17T17:30:41Z,MERGED,True,3,3,1,https://github.com/iabdalkader,Reset sensor state in init0.,1,[],https://github.com/openmv/openmv/pull/854,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/854,Fixes #839,Fixes #839,True,{}
openmv/openmv,https://github.com/openmv/openmv,855,2020-07-17T17:47:29Z,2020-07-17T19:22:21Z,2020-07-17T19:22:27Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Use dest_fb when copying line for OV5640/JPEG4,1,[],https://github.com/openmv/openmv/pull/855,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/855,Fixes #824,Fixes #824,True,{}
openmv/openmv,https://github.com/openmv/openmv,855,2020-07-17T17:47:29Z,2020-07-17T19:22:21Z,2020-07-17T19:22:27Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Use dest_fb when copying line for OV5640/JPEG4,1,[],https://github.com/openmv/openmv/pull/855,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/855#issuecomment-660285350,Fixes #824,good,True,{}
openmv/openmv,https://github.com/openmv/openmv,856,2020-07-17T17:59:21Z,2020-07-17T18:36:09Z,2020-07-17T18:36:14Z,MERGED,True,0,2240,31,https://github.com/iabdalkader,Remove legacy CMSIS-NN code and examples.,1,[],https://github.com/openmv/openmv/pull/856,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/856,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,856,2020-07-17T17:59:21Z,2020-07-17T18:36:09Z,2020-07-17T18:36:14Z,MERGED,True,0,2240,31,https://github.com/iabdalkader,Remove legacy CMSIS-NN code and examples.,1,[],https://github.com/openmv/openmv/pull/856,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/856#issuecomment-660272626,,Looks good to me.,True,{}
openmv/openmv,https://github.com/openmv/openmv,857,2020-07-18T03:52:25Z,2020-07-18T16:08:30Z,2020-07-18T16:08:30Z,MERGED,True,72,0,2,https://github.com/kwagyeman,Add facial recog scripts,1,[],https://github.com/openmv/openmv/pull/857,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/857,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,860,2020-07-20T18:19:08Z,2020-07-20T21:54:16Z,2020-08-06T22:49:43Z,MERGED,True,36,5,4,https://github.com/iabdalkader,Fix fb_get_size.,4,[],https://github.com/openmv/openmv/pull/860,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/860,"Return the size of the available memory after the frame.
Fixes #858","Return the size of the available memory after the frame.
Fixes #858",True,{}
openmv/openmv,https://github.com/openmv/openmv,861,2020-07-20T22:58:36Z,2020-07-20T23:28:40Z,2020-07-20T23:28:40Z,MERGED,True,30,34,6,https://github.com/kwagyeman,Frame buffer respects fb alloc now,1,[],https://github.com/openmv/openmv/pull/861,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/861,"This commit makes sure that when trying to figure out how much space to give a frame in the frame buffer the amount already on the fb_alloc stack is respected versus being overrun.
As an optimization, the amount of bytes allocated for the frame buffer is capped to not be too big.","This commit makes sure that when trying to figure out how much space to give a frame in the frame buffer the amount already on the fb_alloc stack is respected versus being overrun.
As an optimization, the amount of bytes allocated for the frame buffer is capped to not be too big.",True,{}
openmv/openmv,https://github.com/openmv/openmv,863,2020-07-30T19:21:33Z,2020-07-30T19:59:00Z,2020-07-30T19:59:05Z,MERGED,True,23,14,8,https://github.com/iabdalkader,Allow stack to be placed in a separate memory.,2,[],https://github.com/openmv/openmv/pull/863,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/863,"Set estack to the end of the stack region, instead of the end of the whole memory.
Use sstack and estack variables to set stack top and calculate the stack size in main.
Allow stack memory to be configured in board files.","Set estack to the end of the stack region, instead of the end of the whole memory.
Use sstack and estack variables to set stack top and calculate the stack size in main.
Allow stack memory to be configured in board files.",True,{}
openmv/openmv,https://github.com/openmv/openmv,864,2020-07-30T20:04:50Z,2020-07-30T21:40:30Z,2020-07-30T21:40:49Z,MERGED,True,11,3,3,https://github.com/iabdalkader,Move OpenMV3 stack to ITCM.,1,[],https://github.com/openmv/openmv/pull/864,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/864,Fixes #862,Fixes #862,True,{}
openmv/openmv,https://github.com/openmv/openmv,865,2020-07-31T16:24:01Z,2020-08-05T19:47:56Z,2020-08-05T19:47:56Z,MERGED,True,4,0,1,https://github.com/pnndra,portenta specific fixes to share I2C with camera,2,[],https://github.com/openmv/openmv/pull/865,https://github.com/pnndra,1,https://github.com/openmv/openmv/pull/865,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,866,2020-07-31T16:48:14Z,2020-07-31T17:06:30Z,2020-08-01T20:59:48Z,MERGED,True,9,0,2,https://github.com/pnndra,added system reset to bootloader command for portenta,1,[],https://github.com/openmv/openmv/pull/866,https://github.com/pnndra,1,https://github.com/openmv/openmv/pull/866,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,866,2020-07-31T16:48:14Z,2020-07-31T17:06:30Z,2020-08-01T20:59:48Z,MERGED,True,9,0,2,https://github.com/pnndra,added system reset to bootloader command for portenta,1,[],https://github.com/openmv/openmv/pull/866,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/866#issuecomment-667235307,,"It's best to keep it in a new command, don't want any side effects on the other boards.",True,{}
openmv/openmv,https://github.com/openmv/openmv,866,2020-07-31T16:48:14Z,2020-07-31T17:06:30Z,2020-08-01T20:59:48Z,MERGED,True,9,0,2,https://github.com/pnndra,added system reset to bootloader command for portenta,1,[],https://github.com/openmv/openmv/pull/866,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/866#issuecomment-667239710,,"Okay, @pnndra can you please move that code to the reset command in a #ifdef ? This should make everyone happy.",True,{}
openmv/openmv,https://github.com/openmv/openmv,866,2020-07-31T16:48:14Z,2020-07-31T17:06:30Z,2020-08-01T20:59:48Z,MERGED,True,9,0,2,https://github.com/pnndra,added system reset to bootloader command for portenta,1,[],https://github.com/openmv/openmv/pull/866,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/866#issuecomment-667240251,,"I reverted the PR, please send it again.",True,{}
openmv/openmv,https://github.com/openmv/openmv,866,2020-07-31T16:48:14Z,2020-07-31T17:06:30Z,2020-08-01T20:59:48Z,MERGED,True,9,0,2,https://github.com/pnndra,added system reset to bootloader command for portenta,1,[],https://github.com/openmv/openmv/pull/866,https://github.com/pnndra,5,https://github.com/openmv/openmv/pull/866#issuecomment-667502117,,"Hi. You told me you use the reset command also for other purposes than fw upgrade. If this is the case we need to have two separate commands, one that resets the board and one that forces reboot to bootloader. The reboot to bootloader command won't have any difference other than writing a flag in a backup register to communicate BL it should not execute application.on your boards these two commands will be perfectly equal and if we have one conditionally defined then the ide as well would have to issue them based on vid/pid. I would still suggest to keep this as is but let me know and I'll resend the pr accordingly",True,{}
openmv/openmv,https://github.com/openmv/openmv,866,2020-07-31T16:48:14Z,2020-07-31T17:06:30Z,2020-08-01T20:59:48Z,MERGED,True,9,0,2,https://github.com/pnndra,added system reset to bootloader command for portenta,1,[],https://github.com/openmv/openmv/pull/866,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/866#issuecomment-667518368,,"That's right, sorry I forgot about that. @kwagyeman if we put the RTC code in the old reset command, it will always jump to the bootloader... The IDE must send a specific command to the Portenta to jump to the bootloader.",True,{}
openmv/openmv,https://github.com/openmv/openmv,866,2020-07-31T16:48:14Z,2020-07-31T17:06:30Z,2020-08-01T20:59:48Z,MERGED,True,9,0,2,https://github.com/pnndra,added system reset to bootloader command for portenta,1,[],https://github.com/openmv/openmv/pull/866,https://github.com/kwagyeman,7,https://github.com/openmv/openmv/pull/866#issuecomment-667536912,,"I see, so, with the Portenta when I am trying to get to the bootloader I will need to use this different command versus resetting the board correct?",True,{}
openmv/openmv,https://github.com/openmv/openmv,866,2020-07-31T16:48:14Z,2020-07-31T17:06:30Z,2020-08-01T20:59:48Z,MERGED,True,9,0,2,https://github.com/pnndra,added system reset to bootloader command for portenta,1,[],https://github.com/openmv/openmv/pull/866,https://github.com/iabdalkader,8,https://github.com/openmv/openmv/pull/866#issuecomment-667546070,,That's right. @pnndra Please send the PR again.,True,{}
openmv/openmv,https://github.com/openmv/openmv,867,2020-07-31T17:22:10Z,2020-07-31T17:22:17Z,2020-08-06T22:49:41Z,MERGED,True,0,9,2,https://github.com/iabdalkader,"Revert ""added system reset to bootloader command for portenta""",1,[],https://github.com/openmv/openmv/pull/867,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/867,Reverts #866,Reverts #866,True,{}
openmv/openmv,https://github.com/openmv/openmv,868,2020-07-31T17:37:36Z,2020-07-31T17:49:21Z,2020-07-31T17:49:24Z,MERGED,True,28,28,9,https://github.com/iabdalkader,Rename CCM to DTCM for consistency.,1,[],https://github.com/openmv/openmv/pull/868,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/868,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,869,2020-07-31T17:58:59Z,2020-07-31T19:12:06Z,2020-08-06T22:49:41Z,MERGED,True,10,6,2,https://github.com/iabdalkader,Move OMV4/4+ stack to ITCM.,1,[],https://github.com/openmv/openmv/pull/869,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/869,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,870,2020-08-01T18:42:54Z,2020-08-01T22:32:19Z,2020-08-01T22:32:22Z,MERGED,True,142,85,12,https://github.com/iabdalkader,Make all sensor drivers configurable.,1,[],https://github.com/openmv/openmv/pull/870,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/870,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,871,2020-08-05T18:59:33Z,2020-08-05T19:46:12Z,2020-08-05T19:46:12Z,MERGED,True,9,0,2,https://github.com/pnndra,added system reset to bootloader command for portenta,1,[],https://github.com/openmv/openmv/pull/871,https://github.com/pnndra,1,https://github.com/openmv/openmv/pull/871,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,873,2020-08-06T16:20:06Z,2020-08-12T00:25:39Z,2020-11-18T15:38:22Z,MERGED,True,2,2,2,https://github.com/iabdalkader,Fix FSYNC pin.,1,[],https://github.com/openmv/openmv/pull/873,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/873,Fixes #872,Fixes #872,True,{}
openmv/openmv,https://github.com/openmv/openmv,873,2020-08-06T16:20:06Z,2020-08-12T00:25:39Z,2020-11-18T15:38:22Z,MERGED,True,2,2,2,https://github.com/iabdalkader,Fix FSYNC pin.,1,[],https://github.com/openmv/openmv/pull/873,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/873#issuecomment-670030813,Fixes #872,Trigger mode should be tested.,True,{}
openmv/openmv,https://github.com/openmv/openmv,874,2020-08-07T16:33:28Z,2020-08-07T16:51:38Z,2020-08-07T17:56:47Z,MERGED,True,3,1,1,https://github.com/iabdalkader,WINC1500: Fix open security bug.,1,[],https://github.com/openmv/openmv/pull/874,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/874,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,876,2020-08-08T20:13:39Z,2020-08-08T20:37:58Z,2020-08-08T20:38:01Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix DAC timed write on H7.,1,[],https://github.com/openmv/openmv/pull/876,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/876,Fixes #875,Fixes #875,True,{}
openmv/openmv,https://github.com/openmv/openmv,877,2020-08-11T21:02:33Z,2020-11-12T22:31:00Z,2020-11-12T22:31:00Z,CLOSED,False,300,203,4,https://github.com/frank26080115,added non-blocking snapshot functions,2,[],https://github.com/openmv/openmv/pull/877,https://github.com/frank26080115,1,https://github.com/openmv/openmv/pull/877,"Added a non-blocking way of taking snapshots. This makes it easier to write responsive applications that require long exposure captures.
Please add the following to the omv.sensor.rst file
.. function:: sensor.snapshot_start()

   Initiates a snapshot, but returns immediately. Use `sensor.snapshot_check()` to see if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_check()

   Returns whether or not the sensor has finished the snapshot started with `sensor.snapshot_start()`. True if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_finish()

   Returns the image captured after using `sensor.snapshot_start()`. If the image is not ready, it will wait until it is (or timeout), then return the image.

I have tested this on my OpenMV H7 Plus","Added a non-blocking way of taking snapshots. This makes it easier to write responsive applications that require long exposure captures.
Please add the following to the omv.sensor.rst file
.. function:: sensor.snapshot_start()

   Initiates a snapshot, but returns immediately. Use `sensor.snapshot_check()` to see if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_check()

   Returns whether or not the sensor has finished the snapshot started with `sensor.snapshot_start()`. True if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_finish()

   Returns the image captured after using `sensor.snapshot_start()`. If the image is not ready, it will wait until it is (or timeout), then return the image.

I have tested this on my OpenMV H7 Plus",True,{}
openmv/openmv,https://github.com/openmv/openmv,877,2020-08-11T21:02:33Z,2020-11-12T22:31:00Z,2020-11-12T22:31:00Z,CLOSED,False,300,203,4,https://github.com/frank26080115,added non-blocking snapshot functions,2,[],https://github.com/openmv/openmv/pull/877,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/877#issuecomment-672320805,"Added a non-blocking way of taking snapshots. This makes it easier to write responsive applications that require long exposure captures.
Please add the following to the omv.sensor.rst file
.. function:: sensor.snapshot_start()

   Initiates a snapshot, but returns immediately. Use `sensor.snapshot_check()` to see if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_check()

   Returns whether or not the sensor has finished the snapshot started with `sensor.snapshot_start()`. True if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_finish()

   Returns the image captured after using `sensor.snapshot_start()`. If the image is not ready, it will wait until it is (or timeout), then return the image.

I have tested this on my OpenMV H7 Plus","Thanks for the PR. I have plans to make snapshot to support double buffering and N deep image buffering soon. What you've done is possible to support. However, I'd probably want the API to be worded in a particular way. I'll take a look more closely and what you've done and ask for some changes to what the double buffering API will look like.",True,{}
openmv/openmv,https://github.com/openmv/openmv,877,2020-08-11T21:02:33Z,2020-11-12T22:31:00Z,2020-11-12T22:31:00Z,CLOSED,False,300,203,4,https://github.com/frank26080115,added non-blocking snapshot functions,2,[],https://github.com/openmv/openmv/pull/877,https://github.com/frank26080115,3,https://github.com/openmv/openmv/pull/877#issuecomment-672368408,"Added a non-blocking way of taking snapshots. This makes it easier to write responsive applications that require long exposure captures.
Please add the following to the omv.sensor.rst file
.. function:: sensor.snapshot_start()

   Initiates a snapshot, but returns immediately. Use `sensor.snapshot_check()` to see if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_check()

   Returns whether or not the sensor has finished the snapshot started with `sensor.snapshot_start()`. True if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_finish()

   Returns the image captured after using `sensor.snapshot_start()`. If the image is not ready, it will wait until it is (or timeout), then return the image.

I have tested this on my OpenMV H7 Plus","All I really did is split the original snapshot function in two, and remove the streaming callback from my variation. No change was done to the original snapshot function, so this is drop in friendly with no risk to existing code.
I know this opens up a big can of worms... like what happens if the user screws around with the camera and buffers while a capture is on-going.
Looking forward to what you decide to implement. I will continue my own project with my changes for now.
By the way, I managed to build this while on Windows, the trick is to use Ubuntu for Windows and fix the problem in #743 , I posted a solution to the problem there",True,{}
openmv/openmv,https://github.com/openmv/openmv,877,2020-08-11T21:02:33Z,2020-11-12T22:31:00Z,2020-11-12T22:31:00Z,CLOSED,False,300,203,4,https://github.com/frank26080115,added non-blocking snapshot functions,2,[],https://github.com/openmv/openmv/pull/877,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/877#issuecomment-672370746,"Added a non-blocking way of taking snapshots. This makes it easier to write responsive applications that require long exposure captures.
Please add the following to the omv.sensor.rst file
.. function:: sensor.snapshot_start()

   Initiates a snapshot, but returns immediately. Use `sensor.snapshot_check()` to see if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_check()

   Returns whether or not the sensor has finished the snapshot started with `sensor.snapshot_start()`. True if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_finish()

   Returns the image captured after using `sensor.snapshot_start()`. If the image is not ready, it will wait until it is (or timeout), then return the image.

I have tested this on my OpenMV H7 Plus","Send the doc as a PR to: https://github.com/openmv/micropython/blob/c2938c32ef4c78d5c92e861db7367a3312ef6454/docs/library/omv.sensor.rst
Thanks for the good idea for a non-blocking idea!
Double buffering is my next thing to work on after getting the Arduino Interface Library out. Max FPS and video recording will then be possible.",True,{}
openmv/openmv,https://github.com/openmv/openmv,877,2020-08-11T21:02:33Z,2020-11-12T22:31:00Z,2020-11-12T22:31:00Z,CLOSED,False,300,203,4,https://github.com/frank26080115,added non-blocking snapshot functions,2,[],https://github.com/openmv/openmv/pull/877,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/877#issuecomment-672391760,"Added a non-blocking way of taking snapshots. This makes it easier to write responsive applications that require long exposure captures.
Please add the following to the omv.sensor.rst file
.. function:: sensor.snapshot_start()

   Initiates a snapshot, but returns immediately. Use `sensor.snapshot_check()` to see if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_check()

   Returns whether or not the sensor has finished the snapshot started with `sensor.snapshot_start()`. True if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_finish()

   Returns the image captured after using `sensor.snapshot_start()`. If the image is not ready, it will wait until it is (or timeout), then return the image.

I have tested this on my OpenMV H7 Plus","Okay, thanks, going to sit on this for a while given the double buffering code. But, I'll see what we can do to make a non-blocking method.",True,{}
openmv/openmv,https://github.com/openmv/openmv,877,2020-08-11T21:02:33Z,2020-11-12T22:31:00Z,2020-11-12T22:31:00Z,CLOSED,False,300,203,4,https://github.com/frank26080115,added non-blocking snapshot functions,2,[],https://github.com/openmv/openmv/pull/877,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/877#issuecomment-672394674,"Added a non-blocking way of taking snapshots. This makes it easier to write responsive applications that require long exposure captures.
Please add the following to the omv.sensor.rst file
.. function:: sensor.snapshot_start()

   Initiates a snapshot, but returns immediately. Use `sensor.snapshot_check()` to see if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_check()

   Returns whether or not the sensor has finished the snapshot started with `sensor.snapshot_start()`. True if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_finish()

   Returns the image captured after using `sensor.snapshot_start()`. If the image is not ready, it will wait until it is (or timeout), then return the image.

I have tested this on my OpenMV H7 Plus","I know this opens up a big can of worms... like what happens if the user screws around with the camera and buffers while a capture is on-going.

It does, if we merge this we have to maintain it and handle all the possible ways these functions can be used (or misused), to add to what you mentioned, we need to handle snapshot_start being called more than once, or snapshot_finish called multiple times, or before/without snapshot_start, or buffers allocated mid-snapshot. In its current state, it just doesn't handle any of that. The same concerns apply to modifying snapshot to be non-blocking, so I'm just saying we have to be very careful with this feature.",True,{}
openmv/openmv,https://github.com/openmv/openmv,877,2020-08-11T21:02:33Z,2020-11-12T22:31:00Z,2020-11-12T22:31:00Z,CLOSED,False,300,203,4,https://github.com/frank26080115,added non-blocking snapshot functions,2,[],https://github.com/openmv/openmv/pull/877,https://github.com/kwagyeman,7,https://github.com/openmv/openmv/pull/877#issuecomment-726381729,"Added a non-blocking way of taking snapshots. This makes it easier to write responsive applications that require long exposure captures.
Please add the following to the omv.sensor.rst file
.. function:: sensor.snapshot_start()

   Initiates a snapshot, but returns immediately. Use `sensor.snapshot_check()` to see if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_check()

   Returns whether or not the sensor has finished the snapshot started with `sensor.snapshot_start()`. True if the image is ready. Use `sensor.snapshot_finish()` to retrieve the image.

.. function:: sensor.snapshot_finish()

   Returns the image captured after using `sensor.snapshot_start()`. If the image is not ready, it will wait until it is (or timeout), then return the image.

I have tested this on my OpenMV H7 Plus","This is not going to be needed in the future for an updated version of our driver. I will implement triple buffering as an option you can just turn on. When you do so the driver will generate 3 frame buffers with the camera driver delivering the latest image to 1 of the two buffers you are not working on. This will make the camera interface non-blocking and deliver you the latest image always when you want it (you'll also be technically able to run at frame rates faster than the camera can deliver images).
Not sure exactly how I'm make an image fifo, but, otherwise, it will be fine.",True,{}
openmv/openmv,https://github.com/openmv/openmv,878,2020-08-12T17:49:21Z,2020-08-12T18:46:42Z,2020-08-12T18:46:48Z,MERGED,True,8,5,2,https://github.com/iabdalkader,Add inline functions declarations in header.,1,[],https://github.com/openmv/openmv/pull/878,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/878,This fixes the debug build.,This fixes the debug build.,True,{}
openmv/openmv,https://github.com/openmv/openmv,879,2020-08-12T19:46:32Z,2020-08-12T20:12:24Z,2020-08-12T20:12:32Z,MERGED,True,25,11,3,https://github.com/iabdalkader,Support loading JPEG images,2,[],https://github.com/openmv/openmv/pull/879,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/879,"Add missing JPEG read settings.
Fix the JPEG loading code.
NOTE: This only loads the image, it doesn't support decompression.","Add missing JPEG read settings.
Fix the JPEG loading code.
NOTE: This only loads the image, it doesn't support decompression.",True,{}
openmv/openmv,https://github.com/openmv/openmv,880,2020-08-13T19:49:46Z,2020-08-13T20:17:07Z,2020-08-13T20:17:11Z,MERGED,True,12,1,1,https://github.com/iabdalkader,Fix Makefile arguments passed to MicroPython.,1,[],https://github.com/openmv/openmv/pull/880,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/880,"In addition to the CFLAGS passed to control modules mpconfigport.h, the
Makefile needs its own arguments to enable/disable built-in modules.
Fix the way arguments are passed to MicroPython's Makefile, so that it's
possible to enable/disable compiling code from the top level OpenMV board Makefile.","In addition to the CFLAGS passed to control modules mpconfigport.h, the
Makefile needs its own arguments to enable/disable built-in modules.
Fix the way arguments are passed to MicroPython's Makefile, so that it's
possible to enable/disable compiling code from the top level OpenMV board Makefile.",True,{}
openmv/openmv,https://github.com/openmv/openmv,890,2020-08-29T03:45:45Z,2020-08-29T18:41:56Z,2020-11-18T15:38:27Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Update README.md,1,[],https://github.com/openmv/openmv/pull/890,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/890,Add the link for the Arduino Interface Library.,Add the link for the Arduino Interface Library.,True,{}
openmv/openmv,https://github.com/openmv/openmv,892,2020-09-01T13:29:13Z,2020-09-01T15:01:04Z,2020-09-01T15:01:04Z,MERGED,True,1,0,1,https://github.com/pnndra,added initialization for required field,1,[],https://github.com/openmv/openmv/pull/892,https://github.com/pnndra,1,https://github.com/openmv/openmv/pull/892,this added line of code is required because code in stm32f7xx_hal_tim.c uses this field and it is not initialized so it can break intended behaviour,this added line of code is required because code in stm32f7xx_hal_tim.c uses this field and it is not initialized so it can break intended behaviour,True,{}
openmv/openmv,https://github.com/openmv/openmv,893,2020-09-04T20:03:37Z,2020-09-04T20:18:18Z,2020-09-26T16:06:19Z,MERGED,True,12,0,1,https://github.com/iabdalkader,Do hard-reset in sensor.reset().,1,[],https://github.com/openmv/openmv/pull/893,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/893,"Fixes issue #883
Allow the sensor to be reset if the regulator was shutdown.","Fixes issue #883
Allow the sensor to be reset if the regulator was shutdown.",True,{}
openmv/openmv,https://github.com/openmv/openmv,894,2020-09-10T04:28:40Z,2020-09-10T13:16:32Z,2020-09-10T13:16:32Z,MERGED,True,279,5,4,https://github.com/kwagyeman,Add UART and CAN support to desktop interface library,1,[],https://github.com/openmv/openmv/pull/894,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/894,"Switch to table based CRC16 in the RPC library.
Add CAN support.
Add UART Support.
Update documentation.","Switch to table based CRC16 in the RPC library.
Add CAN support.
Add UART Support.
Update documentation.",True,{}
openmv/openmv,https://github.com/openmv/openmv,895,2020-09-12T19:43:39Z,2020-09-12T19:51:43Z,2020-09-12T19:51:44Z,MERGED,True,25,25,15,https://github.com/kwagyeman,Update TensorFlow to support cmsis-nn - 4x speed boost,1,[],https://github.com/openmv/openmv/pull/895,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/895,"TensorFlow uses CMSIS-NN now. INT8 nets from Edge Impulse are 4x faster now.
Remove shadow removal code.
Remove cartoon image filter.
Increase .data section size for new TensorFlow static RAM usage.","TensorFlow uses CMSIS-NN now. INT8 nets from Edge Impulse are 4x faster now.
Remove shadow removal code.
Remove cartoon image filter.
Increase .data section size for new TensorFlow static RAM usage.",True,{}
openmv/openmv,https://github.com/openmv/openmv,897,2020-09-17T16:11:01Z,2020-09-17T16:18:09Z,2020-09-26T16:06:18Z,MERGED,True,10,4,7,https://github.com/iabdalkader,Make DFU device address configurable in board config files.,1,[],https://github.com/openmv/openmv/pull/897,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/897,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,898,2020-09-20T00:52:32Z,2020-09-21T00:16:27Z,2020-09-21T00:16:27Z,MERGED,True,717,1,4,https://github.com/kwagyeman,Add initial board config files for the OpenMV Pure Thermal,1,[],https://github.com/openmv/openmv/pull/898,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/898,Added in the new board config files for the OpenMV Cam Pure Thermal.,Added in the new board config files for the OpenMV Cam Pure Thermal.,True,{}
openmv/openmv,https://github.com/openmv/openmv,899,2020-09-21T00:19:46Z,2020-09-21T00:20:20Z,2020-09-21T00:20:20Z,MERGED,True,6,0,1,https://github.com/kwagyeman,Update winc1500 code to support a different SPI bus,1,[],https://github.com/openmv/openmv/pull/899,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/899,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,900,2020-09-21T00:26:32Z,2020-09-21T00:28:55Z,2020-09-21T00:28:55Z,MERGED,True,16,5,3,https://github.com/kwagyeman,Fix FLIR alt config,1,[],https://github.com/openmv/openmv/pull/900,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/900,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,901,2020-09-21T00:31:35Z,2020-09-21T00:32:28Z,2020-09-21T00:32:28Z,MERGED,True,37,24,4,https://github.com/kwagyeman,Made clock sources for the SPI123/ADC adjustable,1,[],https://github.com/openmv/openmv/pull/901,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/901,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,903,2020-09-21T20:30:55Z,2020-09-21T20:42:46Z,2020-09-26T16:06:17Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Enable module init function.,1,[],https://github.com/openmv/openmv/pull/903,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/903,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,904,2020-09-21T21:00:03Z,2020-09-22T00:09:13Z,2020-09-26T16:06:15Z,MERGED,True,35,12,6,https://github.com/iabdalkader,Support boards without image sensors.,1,[],https://github.com/openmv/openmv/pull/904,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/904,"The firmware will keep running with no image sensor attached.
The self-tests will still fail to detect production issues.
If no sensor is detected, usbdbg will return 0xFF for get sensor ID.
Probably need to disable self-tests for Portenta.","The firmware will keep running with no image sensor attached.
The self-tests will still fail to detect production issues.
If no sensor is detected, usbdbg will return 0xFF for get sensor ID.
Probably need to disable self-tests for Portenta.",True,{}
openmv/openmv,https://github.com/openmv/openmv,905,2020-09-21T23:33:03Z,2020-10-06T22:48:02Z,2020-10-06T22:48:02Z,CLOSED,False,141,87,3,https://github.com/andrewleech,Interpolate pixels for lens correction and rotation_corr,2,[],https://github.com/openmv/openmv/pull/905,https://github.com/andrewleech,1,https://github.com/openmv/openmv/pull/905,"The algorithm for lens correction calculates a table to map source pixels to corrected destination.
The map is calculated in float, but then it rounds each position to an int to select the source pixel to use.
With this change I've instead kept the source coordinates as float and take four neighboring source pixels, using the decimal place to select a percentage of each.
This is done in both x and y axis so the destination pixel is basically a weighed average of 4 source pixels.
eg. if the source coordinate is x=5.2, y=90.7 for dest[3, 80] I use:
dest[x=3, y=80] = ((source[x=5, y=90] * 0.8 + source[x=6, y=90] * 0.2) * 0.3) + 
                   (source[x=5, y=91] * 0.8 + source[x=6, y=91] * 0.2) * 0.7))

Note: this does incur a significant speed hit, in my initial testing it practically reverses the speed improvement recently made with de98dfd
However, the quality improvement with some stronger curvature lenses is significant, which also improves the reliability of barcode reading dramatically.
Eg. lens_corr

The rotation_corr function works very similarly and benefits significantly from the same change.","The algorithm for lens correction calculates a table to map source pixels to corrected destination.
The map is calculated in float, but then it rounds each position to an int to select the source pixel to use.
With this change I've instead kept the source coordinates as float and take four neighboring source pixels, using the decimal place to select a percentage of each.
This is done in both x and y axis so the destination pixel is basically a weighed average of 4 source pixels.
eg. if the source coordinate is x=5.2, y=90.7 for dest[3, 80] I use:
dest[x=3, y=80] = ((source[x=5, y=90] * 0.8 + source[x=6, y=90] * 0.2) * 0.3) + 
                   (source[x=5, y=91] * 0.8 + source[x=6, y=91] * 0.2) * 0.7))

Note: this does incur a significant speed hit, in my initial testing it practically reverses the speed improvement recently made with de98dfd
However, the quality improvement with some stronger curvature lenses is significant, which also improves the reliability of barcode reading dramatically.
Eg. lens_corr

The rotation_corr function works very similarly and benefits significantly from the same change.",True,{}
openmv/openmv,https://github.com/openmv/openmv,905,2020-09-21T23:33:03Z,2020-10-06T22:48:02Z,2020-10-06T22:48:02Z,CLOSED,False,141,87,3,https://github.com/andrewleech,Interpolate pixels for lens correction and rotation_corr,2,[],https://github.com/openmv/openmv/pull/905,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/905#issuecomment-696439466,"The algorithm for lens correction calculates a table to map source pixels to corrected destination.
The map is calculated in float, but then it rounds each position to an int to select the source pixel to use.
With this change I've instead kept the source coordinates as float and take four neighboring source pixels, using the decimal place to select a percentage of each.
This is done in both x and y axis so the destination pixel is basically a weighed average of 4 source pixels.
eg. if the source coordinate is x=5.2, y=90.7 for dest[3, 80] I use:
dest[x=3, y=80] = ((source[x=5, y=90] * 0.8 + source[x=6, y=90] * 0.2) * 0.3) + 
                   (source[x=5, y=91] * 0.8 + source[x=6, y=91] * 0.2) * 0.7))

Note: this does incur a significant speed hit, in my initial testing it practically reverses the speed improvement recently made with de98dfd
However, the quality improvement with some stronger curvature lenses is significant, which also improves the reliability of barcode reading dramatically.
Eg. lens_corr

The rotation_corr function works very similarly and benefits significantly from the same change.","Hey, we have bicubic and bilinear scaling done with integers only written by our performance optimizer coming soon. It’s amazingly fast. Thanks for the changes, I’m going to hold off accepting this PR. However, whatever ideas you have that we haven’t already thought of will be integrated.",True,{}
openmv/openmv,https://github.com/openmv/openmv,905,2020-09-21T23:33:03Z,2020-10-06T22:48:02Z,2020-10-06T22:48:02Z,CLOSED,False,141,87,3,https://github.com/andrewleech,Interpolate pixels for lens correction and rotation_corr,2,[],https://github.com/openmv/openmv/pull/905,https://github.com/andrewleech,3,https://github.com/openmv/openmv/pull/905#issuecomment-696440364,"The algorithm for lens correction calculates a table to map source pixels to corrected destination.
The map is calculated in float, but then it rounds each position to an int to select the source pixel to use.
With this change I've instead kept the source coordinates as float and take four neighboring source pixels, using the decimal place to select a percentage of each.
This is done in both x and y axis so the destination pixel is basically a weighed average of 4 source pixels.
eg. if the source coordinate is x=5.2, y=90.7 for dest[3, 80] I use:
dest[x=3, y=80] = ((source[x=5, y=90] * 0.8 + source[x=6, y=90] * 0.2) * 0.3) + 
                   (source[x=5, y=91] * 0.8 + source[x=6, y=91] * 0.2) * 0.7))

Note: this does incur a significant speed hit, in my initial testing it practically reverses the speed improvement recently made with de98dfd
However, the quality improvement with some stronger curvature lenses is significant, which also improves the reliability of barcode reading dramatically.
Eg. lens_corr

The rotation_corr function works very similarly and benefits significantly from the same change.","That sounds even better :-)
I'll be glad if there's anything here that can help, feel free to take anything/nothing as suits best.
Looking forward to the new stuff when ready!",True,{}
openmv/openmv,https://github.com/openmv/openmv,905,2020-09-21T23:33:03Z,2020-10-06T22:48:02Z,2020-10-06T22:48:02Z,CLOSED,False,141,87,3,https://github.com/andrewleech,Interpolate pixels for lens correction and rotation_corr,2,[],https://github.com/openmv/openmv/pull/905,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/905#issuecomment-696440538,"The algorithm for lens correction calculates a table to map source pixels to corrected destination.
The map is calculated in float, but then it rounds each position to an int to select the source pixel to use.
With this change I've instead kept the source coordinates as float and take four neighboring source pixels, using the decimal place to select a percentage of each.
This is done in both x and y axis so the destination pixel is basically a weighed average of 4 source pixels.
eg. if the source coordinate is x=5.2, y=90.7 for dest[3, 80] I use:
dest[x=3, y=80] = ((source[x=5, y=90] * 0.8 + source[x=6, y=90] * 0.2) * 0.3) + 
                   (source[x=5, y=91] * 0.8 + source[x=6, y=91] * 0.2) * 0.7))

Note: this does incur a significant speed hit, in my initial testing it practically reverses the speed improvement recently made with de98dfd
However, the quality improvement with some stronger curvature lenses is significant, which also improves the reliability of barcode reading dramatically.
Eg. lens_corr

The rotation_corr function works very similarly and benefits significantly from the same change.","To note, we will have a new rendering pipeline being merged into our firmware soon that pushes speed to the max for all this stuff (e.g. a different tight optimized loop for all operations under one function call). We will then be using that for all image conversion operations in the future as once source code function for everything. This will improve speed and reduce code size.",True,{'THUMBS_UP': ['https://github.com/andrewleech']}
openmv/openmv,https://github.com/openmv/openmv,905,2020-09-21T23:33:03Z,2020-10-06T22:48:02Z,2020-10-06T22:48:02Z,CLOSED,False,141,87,3,https://github.com/andrewleech,Interpolate pixels for lens correction and rotation_corr,2,[],https://github.com/openmv/openmv/pull/905,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/905#issuecomment-696440807,"The algorithm for lens correction calculates a table to map source pixels to corrected destination.
The map is calculated in float, but then it rounds each position to an int to select the source pixel to use.
With this change I've instead kept the source coordinates as float and take four neighboring source pixels, using the decimal place to select a percentage of each.
This is done in both x and y axis so the destination pixel is basically a weighed average of 4 source pixels.
eg. if the source coordinate is x=5.2, y=90.7 for dest[3, 80] I use:
dest[x=3, y=80] = ((source[x=5, y=90] * 0.8 + source[x=6, y=90] * 0.2) * 0.3) + 
                   (source[x=5, y=91] * 0.8 + source[x=6, y=91] * 0.2) * 0.7))

Note: this does incur a significant speed hit, in my initial testing it practically reverses the speed improvement recently made with de98dfd
However, the quality improvement with some stronger curvature lenses is significant, which also improves the reliability of barcode reading dramatically.
Eg. lens_corr

The rotation_corr function works very similarly and benefits significantly from the same change.","Finally, bicubic, bilinear, and area scaling will be available for all functions.",True,{}
openmv/openmv,https://github.com/openmv/openmv,906,2020-09-22T20:48:20Z,2020-09-22T21:13:32Z,2020-09-22T21:13:37Z,MERGED,True,23,3,7,https://github.com/iabdalkader,Make self-test configurable.,1,[],https://github.com/openmv/openmv/pull/906,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/906,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,907,2020-09-26T14:44:22Z,2020-09-26T16:04:00Z,2020-09-26T16:06:02Z,MERGED,True,26,24,8,https://github.com/iabdalkader,Pll fixes,4,[],https://github.com/openmv/openmv/pull/907,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/907,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,908,2020-09-26T16:06:04Z,2020-09-26T16:23:46Z,2020-11-10T21:33:43Z,MERGED,True,4,3,2,https://github.com/iabdalkader,Portenta osc fixes,2,[],https://github.com/openmv/openmv/pull/908,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/908,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,909,2020-09-27T00:44:00Z,2020-09-27T17:21:12Z,2020-09-27T17:21:12Z,MERGED,True,15,1,5,https://github.com/kwagyeman,Specify address per board of swd frame buffer test address,1,[],https://github.com/openmv/openmv/pull/909,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/909,"Note, there's no check for the PORTENTA or OPENMVPURETHERMAL. These don't hit our factory, so, they don't need the check.","Note, there's no check for the PORTENTA or OPENMVPURETHERMAL. These don't hit our factory, so, they don't need the check.",True,{}
openmv/openmv,https://github.com/openmv/openmv,910,2020-09-27T21:13:21Z,2020-09-27T21:40:18Z,2020-11-10T21:33:46Z,MERGED,True,2,2,2,https://github.com/iabdalkader,Portenta sdcard,2,[],https://github.com/openmv/openmv/pull/910,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/910,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,911,2020-09-29T19:50:54Z,2020-09-29T20:16:27Z,2020-11-10T21:33:48Z,MERGED,True,34,1,2,https://github.com/iabdalkader,Networking updates,2,[],https://github.com/openmv/openmv/pull/911,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/911,"Add lwip submodule and objects to Makefile.
Add CYW43 library and driver to Makefile.
Add flags to enable LWIP and CYW43 to Portenta board config.","Add lwip submodule and objects to Makefile.
Add CYW43 library and driver to Makefile.
Add flags to enable LWIP and CYW43 to Portenta board config.",True,{}
openmv/openmv,https://github.com/openmv/openmv,913,2020-09-30T19:36:21Z,2020-09-30T19:58:22Z,2020-09-30T19:58:26Z,MERGED,True,30,1,2,https://github.com/iabdalkader,Portenta wifi fixes,2,[],https://github.com/openmv/openmv/pull/913,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/913,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,914,2020-09-30T21:12:00Z,2020-09-30T21:36:49Z,2020-09-30T21:36:53Z,MERGED,True,2,0,1,https://github.com/iabdalkader,Add missing include paths to Makefile,1,[],https://github.com/openmv/openmv/pull/914,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/914,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,915,2020-10-06T20:08:32Z,2020-10-06T20:31:52Z,2020-10-06T20:31:57Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix SDIO DMA transfers.,1,[],https://github.com/openmv/openmv/pull/915,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/915,Make sure DMA buffers are accessible by SDMMC1 IDMA.,Make sure DMA buffers are accessible by SDMMC1 IDMA.,True,{}
openmv/openmv,https://github.com/openmv/openmv,916,2020-10-06T20:15:41Z,2020-10-06T20:50:22Z,2020-10-06T20:50:25Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Portenta: Fix PLL1.,1,[],https://github.com/openmv/openmv/pull/916,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/916,Generate 50MHz for SDMMC1 and SDMMC2.,Generate 50MHz for SDMMC1 and SDMMC2.,True,{}
openmv/openmv,https://github.com/openmv/openmv,917,2020-10-06T21:35:42Z,2020-10-06T21:43:57Z,2020-10-06T21:44:11Z,MERGED,True,1,0,1,https://github.com/iabdalkader,Deinit I2C bus before re-initializing.,1,[],https://github.com/openmv/openmv/pull/917,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/917,Fixes occasional failure when sensor I2C is shared with micropython.,Fixes occasional failure when sensor I2C is shared with micropython.,True,{}
openmv/openmv,https://github.com/openmv/openmv,918,2020-10-06T21:43:59Z,2020-10-06T21:57:42Z,2020-10-06T21:57:45Z,MERGED,True,8,2,1,https://github.com/iabdalkader,Fix USBDBG IRQn bug.,1,[],https://github.com/openmv/openmv/pull/918,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/918,Use the right IRQ number for USB HS.,Use the right IRQ number for USB HS.,True,{}
openmv/openmv,https://github.com/openmv/openmv,919,2020-10-08T22:02:36Z,2020-10-08T23:40:03Z,2020-10-08T23:40:08Z,MERGED,True,37,2,6,https://github.com/iabdalkader,Cyw43 qspi,5,[],https://github.com/openmv/openmv/pull/919,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/919,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,921,2020-10-09T17:14:07Z,2020-10-09T17:32:08Z,2020-10-09T17:32:12Z,MERGED,True,6,8,3,https://github.com/iabdalkader,PORTENTA: Enable WiFi.,1,[],https://github.com/openmv/openmv/pull/921,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/921,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,922,2020-10-10T22:57:58Z,2020-10-10T23:21:50Z,2020-10-10T23:21:53Z,MERGED,True,5,5,1,https://github.com/iabdalkader,Fix WiFi initialization functions in main.,1,[],https://github.com/openmv/openmv/pull/922,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/922,LWIP and CYW43 init functions should be called only once at startup.,LWIP and CYW43 init functions should be called only once at startup.,True,{}
openmv/openmv,https://github.com/openmv/openmv,923,2020-10-10T23:38:09Z,2020-10-10T23:50:16Z,2020-10-10T23:50:20Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Use highest priority MPU region for DMA buffers.,1,[],https://github.com/openmv/openmv/pull/923,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/923,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,926,2020-10-12T17:26:13Z,2020-10-12T17:38:25Z,2020-10-12T17:42:47Z,MERGED,True,3,3,2,https://github.com/iabdalkader,PORTENTA: Update FMC/SDRAM and QSPI PLL settings.,1,[],https://github.com/openmv/openmv/pull/926,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/926,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,927,2020-10-17T21:45:07Z,2020-10-19T01:37:20Z,2020-10-19T01:37:21Z,MERGED,True,3934,545,16,https://github.com/kwagyeman,Add new image scaling pipeline,1,[],https://github.com/openmv/openmv/pull/927,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/927,"This new image scaling pipeline provides the foundation for future OpenMV code by giving us a way to scale, crop, vflip, hmirror, recolor, alpha blend, and etc. images with one function call. With the new draw image we can now centralize all our our image copying code into one place.","This new image scaling pipeline provides the foundation for future OpenMV code by giving us a way to scale, crop, vflip, hmirror, recolor, alpha blend, and etc. images with one function call. With the new draw image we can now centralize all our our image copying code into one place.",True,{}
openmv/openmv,https://github.com/openmv/openmv,928,2020-10-20T04:49:47Z,2020-10-21T11:23:07Z,2020-10-21T11:23:07Z,MERGED,True,8,37,1,https://github.com/kwagyeman,Fix find_rects,1,[],https://github.com/openmv/openmv/pull/928,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/928,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,930,2020-10-21T12:27:33Z,2020-10-21T22:44:55Z,2020-10-21T22:45:47Z,MERGED,True,22,3,5,https://github.com/iabdalkader,PLL Fixes,4,[],https://github.com/openmv/openmv/pull/930,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/930,"Enable HSI48 for RNG clock source.
Make RNG clock source configurable.
Override H7 frequency for rev Y devices.","Enable HSI48 for RNG clock source.
Make RNG clock source configurable.
Override H7 frequency for rev Y devices.",True,{}
openmv/openmv,https://github.com/openmv/openmv,931,2020-10-21T14:31:45Z,2020-10-23T05:21:33Z,2020-10-23T05:21:33Z,CLOSED,False,33180,33563,37,https://github.com/kwagyeman,Kwabena/fix rgb565 inversion,10,[],https://github.com/openmv/openmv/pull/931,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/931,"Removes the legacy RGB565 inversion in our code base. This is now finally fixed.

This speeds up a lot of RGB565 methods since undoing the inversion doesn't have to be done anymore.
This means we can finally use STM32 hardware like DMA2D and the LCD driver.

This PR is made of 4 commits.
1st commit -> Fixes RGB565 byte reversed data coming from the cameras.
2nd commit -> Removes the old rgb2rgb table as its not the best idea...
3rd commit -> Fixes RGB565 inversion in our lookup tables.
4th commit ->Cleans up the imglib by removing all the old RGB565 methods and then fixes functions that used them.","Removes the legacy RGB565 inversion in our code base. This is now finally fixed.

This speeds up a lot of RGB565 methods since undoing the inversion doesn't have to be done anymore.
This means we can finally use STM32 hardware like DMA2D and the LCD driver.

This PR is made of 4 commits.
1st commit -> Fixes RGB565 byte reversed data coming from the cameras.
2nd commit -> Removes the old rgb2rgb table as its not the best idea...
3rd commit -> Fixes RGB565 inversion in our lookup tables.
4th commit ->Cleans up the imglib by removing all the old RGB565 methods and then fixes functions that used them.",True,{}
openmv/openmv,https://github.com/openmv/openmv,932,2020-10-23T05:21:56Z,2020-10-24T20:09:28Z,2020-10-24T20:09:28Z,MERGED,True,33170,33542,39,https://github.com/kwagyeman,Kwabena/fix rgb565 inversion 2,6,[],https://github.com/openmv/openmv/pull/932,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/932,"Removes the legacy RGB565 inversion in our code base. This is now finally fixed.
This speeds up a lot of RGB565 methods since undoing the inversion doesn't have to be done anymore.
This means we can finally use STM32 hardware like DMA2D and the LCD driver.
This PR is made of 4 commits.
1st commit -> Fixes RGB565 byte reversed data coming from the cameras.
2nd commit -> Removes the old rgb2rgb table as its not the best idea...
3rd commit -> Fixes RGB565 inversion in our lookup tables.
4th commit ->Cleans up the imglib by removing all the old RGB565 methods and then fixes functions that used them.","Removes the legacy RGB565 inversion in our code base. This is now finally fixed.
This speeds up a lot of RGB565 methods since undoing the inversion doesn't have to be done anymore.
This means we can finally use STM32 hardware like DMA2D and the LCD driver.
This PR is made of 4 commits.
1st commit -> Fixes RGB565 byte reversed data coming from the cameras.
2nd commit -> Removes the old rgb2rgb table as its not the best idea...
3rd commit -> Fixes RGB565 inversion in our lookup tables.
4th commit ->Cleans up the imglib by removing all the old RGB565 methods and then fixes functions that used them.",True,{}
openmv/openmv,https://github.com/openmv/openmv,935,2020-10-26T23:56:10Z,2020-10-27T00:07:06Z,2020-10-27T00:14:07Z,CLOSED,False,19,19,7,https://github.com/iabdalkader,Make D3/SRAM4 (VOSPI) memory reusable.,1,[],https://github.com/openmv/openmv/pull/935,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/935,You can reuse the memory if FLIR LEPTON is not enabled.,You can reuse the memory if FLIR LEPTON is not enabled.,True,{}
openmv/openmv,https://github.com/openmv/openmv,936,2020-10-27T00:08:39Z,2020-10-27T11:58:40Z,2020-10-27T11:58:44Z,MERGED,True,9,0,1,https://github.com/iabdalkader,Add linker script section for D3SRAM4.,1,[],https://github.com/openmv/openmv/pull/936,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/936,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,937,2020-10-28T15:34:41Z,2020-10-29T18:00:14Z,2020-10-29T18:00:14Z,MERGED,True,1132,456,6,https://github.com/kwagyeman,Modify draw row for LCD screen use,1,[],https://github.com/openmv/openmv/pull/937,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/937,"In an effort to make sure new code is as fast as possible I am not taking any shortcuts anymore and wasting processor time...
As such, I've added a new mode to draw_row for drawing on a canvas with a black background. If the black_background flag is set draw row switches to faster versions of it's drawing methods that have alpha blending support which will assume the background pixels are black by default.
This saves having to do a memset per frame buffer update before drawing an image on the frame buffer. Additionally, for the LCD interface it's possible to tell the display driver which areas were actually drawn causing anything outside that area to be black. This means you can draw on a 1080p canvas without having to suffer the cost of a memset on 4MB of pixels per frame draw.
Second, this commit also adds a callback parameter to draw row and replacing the destination pointer with a custom pointer. This allows you to draw on a virtual image that has no data buffer allocated and have the row draws sent to a private row buffer which you can then flush to a screen. This is useful for SPI LCD output without having to have a buffer for the whole LCD image.
...
Had to disable things to make this fit. Will re-enable later. Need to get the OpenMV Pure Thermal working quickly.","In an effort to make sure new code is as fast as possible I am not taking any shortcuts anymore and wasting processor time...
As such, I've added a new mode to draw_row for drawing on a canvas with a black background. If the black_background flag is set draw row switches to faster versions of it's drawing methods that have alpha blending support which will assume the background pixels are black by default.
This saves having to do a memset per frame buffer update before drawing an image on the frame buffer. Additionally, for the LCD interface it's possible to tell the display driver which areas were actually drawn causing anything outside that area to be black. This means you can draw on a 1080p canvas without having to suffer the cost of a memset on 4MB of pixels per frame draw.
Second, this commit also adds a callback parameter to draw row and replacing the destination pointer with a custom pointer. This allows you to draw on a virtual image that has no data buffer allocated and have the row draws sent to a private row buffer which you can then flush to a screen. This is useful for SPI LCD output without having to have a buffer for the whole LCD image.
...
Had to disable things to make this fit. Will re-enable later. Need to get the OpenMV Pure Thermal working quickly.",True,{}
openmv/openmv,https://github.com/openmv/openmv,938,2020-10-28T18:19:24Z,2020-10-29T12:57:41Z,2020-10-29T12:57:41Z,CLOSED,False,0,4936,15,https://github.com/kwagyeman,Remove shadow removal code,1,[],https://github.com/openmv/openmv/pull/938,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/938,Removing useless code. Shadow removal only works well if you have a shadow free image to start with... which is not easy to produce in practice in a real application.,Removing useless code. Shadow removal only works well if you have a shadow free image to start with... which is not easy to produce in practice in a real application.,True,{}
openmv/openmv,https://github.com/openmv/openmv,938,2020-10-28T18:19:24Z,2020-10-29T12:57:41Z,2020-10-29T12:57:41Z,CLOSED,False,0,4936,15,https://github.com/kwagyeman,Remove shadow removal code,1,[],https://github.com/openmv/openmv/pull/938,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/938#issuecomment-718735092,Removing useless code. Shadow removal only works well if you have a shadow free image to start with... which is not easy to produce in practice in a real application.,"Build fails on all cams, please fix and reopen.",True,{}
openmv/openmv,https://github.com/openmv/openmv,939,2020-10-29T06:07:15Z,2020-10-29T19:10:21Z,2020-10-29T19:10:21Z,MERGED,True,101,12,5,https://github.com/kwagyeman,Fix fballoc for complex allocations,1,[],https://github.com/openmv/openmv/pull/939,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/939,"I noticed a bug with load_to_fb=True for tesnorflow where exceptions not in our code path caused the allocated buffers to be popped. This commit fixes that issue. The previous marks semaphore was not strong enough to handle how I'd like to allocate buffers in different situations. This new method is superior.
Other ways this is helpful... imagine if you want to allocate 3 buffers for triple buffering the LCD output. Each is a huge fb_alloc(). One may fail in the alloc loop. If a failure happens you want all previous ones freed. Sure, our code does that now. After all succeed you want to lock them all to prevent them from being popped by any exceptions. This code makes that happen now.
But, in particular, TensorFlow has a rather complex multi-alloc and then pop usage case before it wants to lock a buffer. This method helps for it too.
The semaphore method was only helpful for the extra_fb method where I was just allocing an fb not inside of a mark region.","I noticed a bug with load_to_fb=True for tesnorflow where exceptions not in our code path caused the allocated buffers to be popped. This commit fixes that issue. The previous marks semaphore was not strong enough to handle how I'd like to allocate buffers in different situations. This new method is superior.
Other ways this is helpful... imagine if you want to allocate 3 buffers for triple buffering the LCD output. Each is a huge fb_alloc(). One may fail in the alloc loop. If a failure happens you want all previous ones freed. Sure, our code does that now. After all succeed you want to lock them all to prevent them from being popped by any exceptions. This code makes that happen now.
But, in particular, TensorFlow has a rather complex multi-alloc and then pop usage case before it wants to lock a buffer. This method helps for it too.
The semaphore method was only helpful for the extra_fb method where I was just allocing an fb not inside of a mark region.",True,{}
openmv/openmv,https://github.com/openmv/openmv,940,2020-10-29T16:45:30Z,2020-10-30T00:03:18Z,2020-10-30T00:03:18Z,MERGED,True,0,4937,15,https://github.com/kwagyeman,Remove shadow removal code,1,[],https://github.com/openmv/openmv/pull/940,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/940,No plan to support this anymore. Not useful unless you can generate a shadow free image first.,No plan to support this anymore. Not useful unless you can generate a shadow free image first.,True,{}
openmv/openmv,https://github.com/openmv/openmv,941,2020-10-29T18:58:49Z,2020-10-30T00:05:36Z,2020-11-10T21:33:49Z,MERGED,True,533,2,12,https://github.com/iabdalkader,Add SAI/PDM Audio recording support to Portenta board,7,[],https://github.com/openmv/openmv/pull/941,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/941,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,942,2020-10-30T11:20:49Z,2020-10-31T20:04:03Z,2021-04-21T22:09:35Z,MERGED,True,12,6,3,https://github.com/StuartBox,Added pause parameter to Image_Reader,1,[],https://github.com/openmv/openmv/pull/942,https://github.com/StuartBox,1,https://github.com/openmv/openmv/pull/942,In order to speed up access to the SD card when reading back video for other non vision purposes like network playback.,In order to speed up access to the SD card when reading back video for other non vision purposes like network playback.,True,{}
openmv/openmv,https://github.com/openmv/openmv,942,2020-10-30T11:20:49Z,2020-10-31T20:04:03Z,2021-04-21T22:09:35Z,MERGED,True,12,6,3,https://github.com/StuartBox,Added pause parameter to Image_Reader,1,[],https://github.com/openmv/openmv/pull/942,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/942#issuecomment-719980094,In order to speed up access to the SD card when reading back video for other non vision purposes like network playback.,Cool,True,{}
openmv/openmv,https://github.com/openmv/openmv,942,2020-10-30T11:20:49Z,2020-10-31T20:04:03Z,2021-04-21T22:09:35Z,MERGED,True,12,6,3,https://github.com/StuartBox,Added pause parameter to Image_Reader,1,[],https://github.com/openmv/openmv/pull/942,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/942#issuecomment-824390246,In order to speed up access to the SD card when reading back video for other non vision purposes like network playback.,"@StuartBox For what it's worth, you inverted the pause arg  (False will pause), I fixed it in #1272. This revealed a deeper issue though that causes a lockup when big frames are read too fast.",True,{}
openmv/openmv,https://github.com/openmv/openmv,943,2020-10-30T11:46:12Z,2020-10-30T11:56:55Z,2020-10-30T11:57:00Z,CLOSED,False,1,1,1,https://github.com/iabdalkader,Test PR.,1,[],https://github.com/openmv/openmv/pull/943,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/943,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,944,2020-10-30T18:47:14Z,2020-10-30T19:00:42Z,2020-10-30T19:01:19Z,MERGED,True,93,6,2,https://github.com/iabdalkader,Add audio streaming function with callback.,1,[],https://github.com/openmv/openmv/pull/944,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/944,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,945,2020-11-01T22:14:52Z,2020-11-01T22:22:34Z,2020-11-01T22:22:38Z,MERGED,True,37,25,2,https://github.com/iabdalkader,Fix audio 1 channel mode.,1,[],https://github.com/openmv/openmv/pull/945,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/945,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,946,2020-11-03T22:11:16Z,2020-11-04T00:26:35Z,2020-11-04T00:26:39Z,MERGED,True,74,2,3,https://github.com/iabdalkader,"Update License for FAST, AGAST and ORB.",1,[],https://github.com/openmv/openmv/pull/946,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/946,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,947,2020-11-06T19:05:45Z,2020-11-10T19:38:08Z,2020-11-10T19:38:08Z,MERGED,True,1548,325,4,https://github.com/kwagyeman,Kwabena/lcd controller 2,1,[],https://github.com/openmv/openmv/pull/947,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/947,"New LCD controller code. Brings all performance to the max.
SPI LCD Support:

We support any SPI LCD display resolution now. You can pass the w/h in the init method.
We support increasing the SPI clock freq now via a refresh rate value.
We support triple buffering for the SPI LCD display. This de-couples the drawing thread from the display process. (Uses DMA).
We support proper backlight dimming now using the DAC on PA5. Note the code is written in a way to avoid initializing the pin unless the user tries to use the backlight dimming.

24-bit Parallel LCD Support:

We support 18 different resolutions of 24-bit parallel LCD displays now. (All resolutions on BuyDisplay.com)
Default LCD controller does triple buffering so the drawing thread is never blocked.
Proper LCD dimming via timer module.

In addition to these things...
Display now supports all the same features as draw_image. So, you can scale the image and do all the fun color/alpha table tricks you want. Additionally, the lcd driver is smart about utilizing the fact that you might not be zeroing the whole frame to avoid doing work when there are hardware features that allow us to skip having to memset the image to zero always. This works for when triple buffering is enabled or not.
Clear now can just turn off the LCD for lowering the power consumption. (Backlight has to be turned off by the user too).
...
Careful attention was paid to saving CPU cycles in the new code. Everything is written with an eye for performance and not wasting the CPUs time.","New LCD controller code. Brings all performance to the max.
SPI LCD Support:

We support any SPI LCD display resolution now. You can pass the w/h in the init method.
We support increasing the SPI clock freq now via a refresh rate value.
We support triple buffering for the SPI LCD display. This de-couples the drawing thread from the display process. (Uses DMA).
We support proper backlight dimming now using the DAC on PA5. Note the code is written in a way to avoid initializing the pin unless the user tries to use the backlight dimming.

24-bit Parallel LCD Support:

We support 18 different resolutions of 24-bit parallel LCD displays now. (All resolutions on BuyDisplay.com)
Default LCD controller does triple buffering so the drawing thread is never blocked.
Proper LCD dimming via timer module.

In addition to these things...
Display now supports all the same features as draw_image. So, you can scale the image and do all the fun color/alpha table tricks you want. Additionally, the lcd driver is smart about utilizing the fact that you might not be zeroing the whole frame to avoid doing work when there are hardware features that allow us to skip having to memset the image to zero always. This works for when triple buffering is enabled or not.
Clear now can just turn off the LCD for lowering the power consumption. (Backlight has to be turned off by the user too).
...
Careful attention was paid to saving CPU cycles in the new code. Everything is written with an eye for performance and not wasting the CPUs time.",True,{}
openmv/openmv,https://github.com/openmv/openmv,948,2020-11-08T05:37:51Z,2020-11-08T14:54:30Z,2020-11-08T14:54:30Z,MERGED,True,0,1957,16,https://github.com/kwagyeman,Remove external libraries ulab replaces,3,[],https://github.com/openmv/openmv/pull/948,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/948,"ULAB replaces all this stuff.
Need to save space internally.","ULAB replaces all this stuff.
Need to save space internally.",True,{}
openmv/openmv,https://github.com/openmv/openmv,949,2020-11-08T05:39:43Z,2020-11-08T14:19:15Z,2020-11-08T14:19:15Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Reduce heap to fit more static driver vars,1,[],https://github.com/openmv/openmv/pull/949,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/949,LCD controller needs more space for static vars.,LCD controller needs more space for static vars.,True,{}
openmv/openmv,https://github.com/openmv/openmv,950,2020-11-08T05:45:42Z,2020-11-08T14:19:45Z,2020-11-08T14:19:45Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix rounding for dma2d to match other code,1,[],https://github.com/openmv/openmv/pull/950,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/950,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,951,2020-11-08T05:48:30Z,2020-11-08T14:24:35Z,2020-11-08T14:24:35Z,MERGED,True,2,0,1,https://github.com/kwagyeman,Add ltdc to compile,1,[],https://github.com/openmv/openmv/pull/951,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/951,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,952,2020-11-08T05:52:27Z,2020-11-08T14:26:11Z,2020-11-08T14:26:11Z,MERGED,True,295,28,6,https://github.com/kwagyeman,Add spi and ltdc board config settings,1,[],https://github.com/openmv/openmv/pull/952,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/952,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,953,2020-11-08T18:58:29Z,2020-11-08T19:15:36Z,2020-11-08T19:28:43Z,MERGED,True,79,0,2,https://github.com/kwagyeman,Add draw_image extent calculator,1,[],https://github.com/openmv/openmv/pull/953,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/953,Allows code to figure out the area being draw on or not. Useful for optimizing lcd display output.,Allows code to figure out the area being draw on or not. Useful for optimizing lcd display output.,True,{}
openmv/openmv,https://github.com/openmv/openmv,954,2020-11-08T19:46:44Z,2020-11-08T19:56:16Z,2020-11-08T19:56:19Z,MERGED,True,16,14,4,https://github.com/iabdalkader,Add default value to py_helper_keyword_object,1,[],https://github.com/openmv/openmv/pull/954,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/954,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,955,2020-11-08T20:27:09Z,2020-11-08T20:40:36Z,2020-11-08T20:40:40Z,MERGED,True,150,178,5,https://github.com/iabdalkader,Make audio module non-blocking.,1,[],https://github.com/openmv/openmv/pull/955,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/955,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,956,2020-11-10T20:46:57Z,2020-11-10T21:03:45Z,2020-11-10T21:03:49Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Increase audio buffer size.,1,[],https://github.com/openmv/openmv/pull/956,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/956,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,957,2020-11-10T21:08:17Z,2020-11-10T21:42:23Z,2020-11-10T21:42:50Z,MERGED,True,141,1,6,https://github.com/iabdalkader,Add micro speech module.,1,[],https://github.com/openmv/openmv/pull/957,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/957,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,958,2020-11-10T21:19:53Z,2020-11-10T21:27:55Z,2020-11-10T21:28:00Z,MERGED,True,32,4,8,https://github.com/iabdalkader,Update libtf.,1,[],https://github.com/openmv/openmv/pull/958,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/958,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,959,2020-11-12T21:34:06Z,2020-11-12T21:45:28Z,2020-11-12T22:24:38Z,MERGED,True,3,0,1,https://github.com/iabdalkader,Fix build error if no DCMI GPIOs are defined.,1,[],https://github.com/openmv/openmv/pull/959,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/959,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,960,2020-11-12T22:26:15Z,2020-11-12T22:34:14Z,2020-11-12T22:35:48Z,MERGED,True,0,3,1,https://github.com/iabdalkader,Update Portenta board config.,1,[],https://github.com/openmv/openmv/pull/960,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/960,Remove DCMI_PWDN pin define.,Remove DCMI_PWDN pin define.,True,{}
openmv/openmv,https://github.com/openmv/openmv,961,2020-11-13T14:35:32Z,2020-11-13T14:45:53Z,2020-11-13T14:46:14Z,MERGED,True,16,15,3,https://github.com/iabdalkader,Move DCMI IRQ handlers to sensor.c,1,[],https://github.com/openmv/openmv/pull/961,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/961,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,962,2020-11-13T14:50:33Z,2020-11-13T15:06:50Z,2020-11-13T15:08:22Z,MERGED,True,9,1,2,https://github.com/iabdalkader,Disable threading.,1,[],https://github.com/openmv/openmv/pull/962,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/962,Will be replaced by co-routines soon.,Will be replaced by co-routines soon.,True,{}
openmv/openmv,https://github.com/openmv/openmv,963,2020-11-13T19:04:10Z,2020-11-13T19:13:02Z,2020-11-13T19:13:05Z,CLOSED,False,1,1,1,https://github.com/iabdalkader,Update sdram test.,1,[],https://github.com/openmv/openmv/pull/963,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/963,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,964,2020-11-13T19:22:35Z,2020-11-13T19:30:00Z,2020-11-13T19:30:06Z,MERGED,True,1,14,2,https://github.com/iabdalkader,Update SDRAM test.,1,[],https://github.com/openmv/openmv/pull/964,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/964,"Make test more useful if cache is enabled.
Make test call __fatal_error with more verbose messages.","Make test more useful if cache is enabled.
Make test call __fatal_error with more verbose messages.",True,{}
openmv/openmv,https://github.com/openmv/openmv,965,2020-11-13T20:12:23Z,2020-11-13T20:56:08Z,2020-11-13T21:01:11Z,MERGED,True,16,13,1,https://github.com/iabdalkader,Make sure storage is initialized before logging error.,1,[],https://github.com/openmv/openmv/pull/965,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/965,"Early __fatal_error calls may try to log an error to file,
before any storage is initialized which may cause a hardfault.","Early __fatal_error calls may try to log an error to file,
before any storage is initialized which may cause a hardfault.",True,{}
openmv/openmv,https://github.com/openmv/openmv,966,2020-11-13T22:22:26Z,2020-11-13T22:38:28Z,2020-11-13T22:38:32Z,MERGED,True,13,32,3,https://github.com/iabdalkader,Cleanup linker scripts.,1,[],https://github.com/openmv/openmv/pull/966,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/966,"Remove legacy bss symbols.
Make sure _sidata is where it should be.","Remove legacy bss symbols.
Make sure _sidata is where it should be.",True,{}
openmv/openmv,https://github.com/openmv/openmv,967,2020-11-13T22:49:14Z,2020-11-13T22:56:59Z,2020-11-13T22:57:02Z,MERGED,True,0,8,4,https://github.com/iabdalkader,Remove unused SDRAM test flag.,1,[],https://github.com/openmv/openmv/pull/967,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/967,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,968,2020-11-13T22:58:08Z,2020-11-13T23:17:25Z,2020-11-13T23:17:28Z,MERGED,True,1,1,1,https://github.com/iabdalkader,PORTENTA: Fix SDRAM timing config.,1,[],https://github.com/openmv/openmv/pull/968,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/968,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,969,2020-11-14T18:09:55Z,2020-11-14T18:40:04Z,2020-11-14T18:41:26Z,MERGED,True,49,47,7,https://github.com/iabdalkader,Update common macros.,1,[],https://github.com/openmv/openmv/pull/969,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/969,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,970,2020-11-14T18:41:22Z,2020-11-14T18:50:20Z,2020-11-14T19:01:35Z,MERGED,True,2,1,1,https://github.com/iabdalkader,Make sure FB pixels is always aligned.,1,[],https://github.com/openmv/openmv/pull/970,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/970,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,971,2020-11-14T18:51:55Z,2020-11-14T19:01:25Z,2020-11-14T19:01:29Z,MERGED,True,3,3,1,https://github.com/iabdalkader,Update audio to use common macros.,1,[],https://github.com/openmv/openmv/pull/971,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/971,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,972,2020-11-14T19:23:36Z,2020-11-15T15:59:34Z,2020-11-15T15:59:39Z,MERGED,True,15,0,1,https://github.com/iabdalkader,Add function to update the framebuffer from an image.,1,[],https://github.com/openmv/openmv/pull/972,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/972,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,973,2020-11-15T16:03:08Z,2020-11-15T18:13:07Z,2020-11-15T18:13:10Z,MERGED,True,3,0,1,https://github.com/iabdalkader,Initialize all I2C handle unused fields.,1,[],https://github.com/openmv/openmv/pull/973,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/973,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,974,2020-11-15T16:30:08Z,2020-11-15T17:15:18Z,2020-11-15T17:15:22Z,MERGED,True,16,12,1,https://github.com/iabdalkader,Add flag to disable the cache for testing.,1,[],https://github.com/openmv/openmv/pull/974,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/974,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,975,2020-11-15T16:39:35Z,2020-11-15T17:36:24Z,2020-11-15T17:36:27Z,MERGED,True,13,1,5,https://github.com/iabdalkader,Add power supply board configuration.,1,[],https://github.com/openmv/openmv/pull/975,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/975,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,976,2020-11-15T21:32:56Z,2020-11-15T21:56:01Z,2020-11-15T21:56:04Z,CLOSED,False,1,1,1,https://github.com/iabdalkader,Disable SDRAM test by default.,1,[],https://github.com/openmv/openmv/pull/976,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/976,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,977,2020-11-15T22:45:30Z,2020-11-16T11:54:38Z,2020-11-16T11:54:41Z,MERGED,True,5,1,2,https://github.com/iabdalkader,SDRAM test updates.,1,[],https://github.com/openmv/openmv/pull/977,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/977,"Make SDRAM test cache-aware.
Add flag to control SDRAM test.
Re-enable test for all boards.","Make SDRAM test cache-aware.
Add flag to control SDRAM test.
Re-enable test for all boards.",True,{}
openmv/openmv,https://github.com/openmv/openmv,978,2020-11-15T22:54:49Z,2020-11-16T11:54:56Z,2020-11-16T11:55:01Z,MERGED,True,6,12,2,https://github.com/iabdalkader,Update JPEG frame buffer after loading/creating images.,1,[],https://github.com/openmv/openmv/pull/978,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/978,"With this fix the frame buffer will be updated instantly after loading or creating
new images with the copy_to_fb flag set to true.
There's no need to flush the framebuffer after loading or creating images anymore,
however the sensor (or image) flush() still needs to be called after drawing to see the updates.","With this fix the frame buffer will be updated instantly after loading or creating
new images with the copy_to_fb flag set to true.
There's no need to flush the framebuffer after loading or creating images anymore,
however the sensor (or image) flush() still needs to be called after drawing to see the updates.",True,{}
openmv/openmv,https://github.com/openmv/openmv,979,2020-11-16T21:03:44Z,2020-11-16T21:17:52Z,2020-11-16T21:18:42Z,MERGED,True,10071,0,427,https://github.com/iabdalkader,Update Examples.,1,[],https://github.com/openmv/openmv/pull/979,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/979,"Move examples to sub dirs.
Add Arduino examples dir.","Move examples to sub dirs.
Add Arduino examples dir.",True,{}
openmv/openmv,https://github.com/openmv/openmv,981,2020-11-17T22:04:14Z,2020-11-17T22:56:42Z,2020-11-18T01:07:42Z,MERGED,True,33,17,2,https://github.com/iabdalkader,Export part of py_tf API to the rest of the modules.,1,[],https://github.com/openmv/openmv/pull/981,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/981,"Allow reusing models loaded with py_tf.
Allow calling libtf_invoke without implementing the log buffer code.","Allow reusing models loaded with py_tf.
Allow calling libtf_invoke without implementing the log buffer code.",True,{}
openmv/openmv,https://github.com/openmv/openmv,982,2020-11-18T14:31:38Z,2020-11-18T15:34:13Z,2020-11-18T15:34:13Z,MERGED,True,1,1,1,https://github.com/mzaian,Update dist to a supported version,2,[],https://github.com/openmv/openmv/pull/982,https://github.com/mzaian,1,https://github.com/openmv/openmv/pull/982,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,983,2020-11-18T14:48:52Z,2020-11-18T14:50:28Z,2020-11-18T16:11:34Z,CLOSED,False,0,0,1,https://github.com/iabdalkader,Testing Travis,1,[],https://github.com/openmv/openmv/pull/983,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/983,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,984,2020-11-18T15:39:42Z,2020-11-18T16:11:30Z,2020-11-18T16:11:33Z,CLOSED,False,0,0,1,https://github.com/iabdalkader,Testing Travis,1,[],https://github.com/openmv/openmv/pull/984,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/984,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,985,2020-11-20T07:28:44Z,2020-11-20T13:25:41Z,2020-11-20T13:25:41Z,MERGED,True,104,84,1,https://github.com/kwagyeman,Update the cmsis cm7 header,1,[],https://github.com/openmv/openmv/pull/985,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/985,Primarily fixes the cache maintenance macros.,Primarily fixes the cache maintenance macros.,True,{}
openmv/openmv,https://github.com/openmv/openmv,986,2020-11-20T07:47:46Z,2020-11-20T22:03:03Z,2020-11-20T22:03:03Z,MERGED,True,197,109,11,https://github.com/kwagyeman,Enable DMA2D for draw row,2,[],https://github.com/openmv/openmv/pull/986,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/986,"Enables DMA2D for GRAYSCALE drawing on RGB565 images.
Enables DMA2D for RGB565 alpha blending on RGB565 images.
Adds hooks for using DMA2D in future drawing operations.
For BICUBIC GRAYSCALE draw on RGB565 it's about 20% faster than the processor for small images. The speed gain will grow as it offloads the processor from the alpha blending work.","Enables DMA2D for GRAYSCALE drawing on RGB565 images.
Enables DMA2D for RGB565 alpha blending on RGB565 images.
Adds hooks for using DMA2D in future drawing operations.
For BICUBIC GRAYSCALE draw on RGB565 it's about 20% faster than the processor for small images. The speed gain will grow as it offloads the processor from the alpha blending work.",True,{}
openmv/openmv,https://github.com/openmv/openmv,987,2020-11-20T16:18:30Z,2020-11-20T17:17:28Z,2020-11-20T17:17:31Z,MERGED,True,22,0,2,https://github.com/iabdalkader,Add py_helper function to lookup an iterable.,1,[],https://github.com/openmv/openmv/pull/987,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/987,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,988,2020-11-20T17:26:32Z,2020-11-20T18:12:15Z,2020-11-20T18:12:18Z,MERGED,True,144,5,2,https://github.com/iabdalkader,Micro speech update,3,[],https://github.com/openmv/openmv/pull/988,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/988,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,989,2020-11-20T17:44:30Z,2020-11-20T17:44:50Z,2020-11-20T17:44:59Z,MERGED,True,68,0,2,https://github.com/iabdalkader,Add Portenta audio examples.,1,[],https://github.com/openmv/openmv/pull/989,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/989,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,990,2020-11-21T20:42:22Z,2020-11-22T18:09:10Z,2020-11-22T18:09:10Z,MERGED,True,412,196,3,https://github.com/kwagyeman,Add HDMI support via the TFP410,1,[],https://github.com/openmv/openmv/pull/990,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/990,Adds support for outputting to an HDMI display via the TFP410AP.,Adds support for outputting to an HDMI display via the TFP410AP.,True,{}
openmv/openmv,https://github.com/openmv/openmv,992,2020-11-22T19:13:16Z,2020-11-22T23:59:48Z,2020-11-22T23:59:48Z,MERGED,True,331,0,6,https://github.com/kwagyeman,Add ft5x06 touch screen lcd support,2,[],https://github.com/openmv/openmv/pull/992,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/992,"This is a great driver for the ft5x06. Supports:
Gestures
Up to 5 touch points at the same time
Getting touch point IDs for tracking them
X/Y position
And a high update rate via interrupts.
Note: I designed the driver around the interrupt callback system. Touch results are cached in static vars so that inside of an interrupt callback you can access them and then feed them to drawing code or make decisions based on the touch points. I.e. I designed the driver not to use the heap.","This is a great driver for the ft5x06. Supports:
Gestures
Up to 5 touch points at the same time
Getting touch point IDs for tracking them
X/Y position
And a high update rate via interrupts.
Note: I designed the driver around the interrupt callback system. Touch results are cached in static vars so that inside of an interrupt callback you can access them and then feed them to drawing code or make decisions based on the touch points. I.e. I designed the driver not to use the heap.",True,{}
openmv/openmv,https://github.com/openmv/openmv,993,2020-11-22T21:48:07Z,2020-11-22T23:59:56Z,2020-11-23T00:00:00Z,MERGED,True,48,115,9,https://github.com/iabdalkader,Fix imlib deps,4,[],https://github.com/openmv/openmv/pull/993,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/993,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,995,2020-11-24T21:35:45Z,2020-11-25T12:02:07Z,2020-11-25T12:02:10Z,MERGED,True,68,71,16,https://github.com/iabdalkader,Update to MicroPython 1.13,2,[],https://github.com/openmv/openmv/pull/995,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/995,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,996,2020-11-25T17:20:32Z,2020-11-25T17:49:46Z,2020-11-25T17:50:44Z,MERGED,True,4,1,1,https://github.com/iabdalkader,Return error on WINC SPI bus init fail.,1,[],https://github.com/openmv/openmv/pull/996,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/996,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,997,2020-11-25T17:52:24Z,2020-11-25T18:40:25Z,2020-11-25T18:40:25Z,MERGED,True,44,41,2,https://github.com/kwagyeman,Move SPI pin init,1,[],https://github.com/openmv/openmv/pull/997,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/997,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,998,2020-11-25T17:53:23Z,2020-11-25T18:58:50Z,2020-11-25T18:58:55Z,MERGED,True,1,9,2,https://github.com/iabdalkader,WINC: Use static SPI handle to avoid conflicts.,1,[],https://github.com/openmv/openmv/pull/998,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/998,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,999,2020-11-25T17:54:31Z,2020-11-25T18:42:56Z,2020-11-25T18:43:02Z,MERGED,True,1,1,1,https://github.com/iabdalkader,OPENMV2: Enable OV2640 driver,1,[],https://github.com/openmv/openmv/pull/999,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/999,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1000,2020-11-25T17:55:40Z,2020-11-25T18:56:34Z,2020-11-25T18:56:39Z,MERGED,True,5,5,1,https://github.com/iabdalkader,Update unittest to ignore disabled functions.,1,[],https://github.com/openmv/openmv/pull/1000,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1000,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1001,2020-11-25T18:45:06Z,2021-01-02T00:26:17Z,2021-01-02T00:26:17Z,CLOSED,False,22,0,1,https://github.com/kwagyeman,Remove the LCD code when there's no output defined,1,[],https://github.com/openmv/openmv/pull/1001,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1001,Probably should disable the module via MicroPython versus here.,Probably should disable the module via MicroPython versus here.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1001,2020-11-25T18:45:06Z,2021-01-02T00:26:17Z,2021-01-02T00:26:17Z,CLOSED,False,22,0,1,https://github.com/kwagyeman,Remove the LCD code when there's no output defined,1,[],https://github.com/openmv/openmv/pull/1001,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1001#issuecomment-753409017,Probably should disable the module via MicroPython versus here.,Will add a flag to enable/disable py_lcd,True,{}
openmv/openmv,https://github.com/openmv/openmv,1002,2020-11-25T19:25:07Z,2020-11-25T19:42:02Z,2020-11-25T19:42:28Z,MERGED,True,2,2,1,https://github.com/iabdalkader,Make py_func_unavailable handle no args.,1,[],https://github.com/openmv/openmv/pull/1002,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1002,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1003,2020-11-25T22:04:51Z,2020-11-25T22:45:48Z,2020-11-25T22:45:51Z,MERGED,True,54,9,2,https://github.com/iabdalkader,Update cpufreq,1,[],https://github.com/openmv/openmv/pull/1003,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1003,"Add more frequencies.
Support REV X/Y and V frequencies.
Allow boards to override the max frequency.","Add more frequencies.
Support REV X/Y and V frequencies.
Allow boards to override the max frequency.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1004,2020-11-26T04:48:44Z,2020-11-27T14:06:53Z,2020-11-27T14:06:53Z,MERGED,True,706,16,7,https://github.com/kwagyeman,Add hdmi cec support,1,[],https://github.com/openmv/openmv/pull/1004,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1004,"Adds support for bit banged HDMI CEC.
Cleanup the DVI macros to save flash when disabled.

On the OpenMV Cam Pure Thermal we were not able to hookup the HDMI CEC peripheral on the H7. This is because the peripheral only routes to 2 pins on the H7. So, this PR adds the MicroPython code wrapper layer and bit-bang support. Timing is good enough to receive some messages from the TV on interrupt. My TV doesn't seem to ack any commands. Not sure if this is just the TV being locked down. Receive doesn't always work so it needs to be called in a loop if the interrupt version if not used.
Anyway, on future boards we will figure out how to route the HDMI CEC hardware peripheral pin out and I'll ifdef out the bit-banging code. For now, this verifies that the interface works on the OpenMV Cam Pure Thermal. The software interface will remain the same.
HDMI CEC BTW allows you to execute commands here: https://www.cec-o-matic.com/
Like, you can turn the TV off and on using these commands and etc.","Adds support for bit banged HDMI CEC.
Cleanup the DVI macros to save flash when disabled.

On the OpenMV Cam Pure Thermal we were not able to hookup the HDMI CEC peripheral on the H7. This is because the peripheral only routes to 2 pins on the H7. So, this PR adds the MicroPython code wrapper layer and bit-bang support. Timing is good enough to receive some messages from the TV on interrupt. My TV doesn't seem to ack any commands. Not sure if this is just the TV being locked down. Receive doesn't always work so it needs to be called in a loop if the interrupt version if not used.
Anyway, on future boards we will figure out how to route the HDMI CEC hardware peripheral pin out and I'll ifdef out the bit-banging code. For now, this verifies that the interface works on the OpenMV Cam Pure Thermal. The software interface will remain the same.
HDMI CEC BTW allows you to execute commands here: https://www.cec-o-matic.com/
Like, you can turn the TV off and on using these commands and etc.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1005,2020-11-26T22:52:20Z,2020-11-26T23:11:16Z,2020-11-26T23:12:16Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix gc-collect bug.,1,[],https://github.com/openmv/openmv/pull/1005,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1005,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1006,2020-11-27T13:58:47Z,2020-11-27T16:46:35Z,2020-11-27T16:48:26Z,MERGED,True,188,222,60,https://github.com/iabdalkader,Merge time and utime modules.,1,[],https://github.com/openmv/openmv/pull/1006,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1006,"Move clock class to utime module.
Update all examples to be compatible with utime.","Move clock class to utime module.
Update all examples to be compatible with utime.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1007,2020-11-27T17:51:53Z,2020-11-27T18:15:10Z,2020-11-27T18:15:14Z,MERGED,True,89,3,6,https://github.com/iabdalkader,PORTENTA: Enable Ethernet.,1,[],https://github.com/openmv/openmv/pull/1007,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1007,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1008,2020-11-28T17:41:52Z,2020-11-28T18:04:00Z,2020-11-28T18:04:08Z,MERGED,True,162488,162488,294,https://github.com/iabdalkader,Fix CMSIS files CRLF.,1,[],https://github.com/openmv/openmv/pull/1008,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1008,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1009,2020-11-28T20:50:34Z,2020-11-28T21:14:34Z,2020-11-28T21:14:39Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix ep0_mps on the M4.,1,[],https://github.com/openmv/openmv/pull/1009,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1009,"Note ep0_mps is not used anywhere, but we keep it for now.","Note ep0_mps is not used anywhere, but we keep it for now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1010,2020-11-28T21:27:10Z,2020-11-28T22:07:52Z,2020-11-28T22:07:52Z,MERGED,True,4,4,1,https://github.com/kwagyeman,Fix defines,1,[],https://github.com/openmv/openmv/pull/1010,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1010,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1011,2020-11-28T22:06:34Z,2020-11-28T22:30:50Z,2020-11-28T22:30:53Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add HAL version to REPL prompt,1,[],https://github.com/openmv/openmv/pull/1011,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1011,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1012,2020-11-28T22:07:20Z,2020-11-28T22:38:13Z,2020-11-28T22:38:16Z,MERGED,True,2,2,1,https://github.com/iabdalkader,Link libgcc to bootloader and UVC.,1,[],https://github.com/openmv/openmv/pull/1012,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1012,Fixes link error in newer HALs.,Fixes link error in newer HALs.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1013,2020-11-29T19:23:57Z,2020-11-29T19:50:57Z,2020-11-30T20:37:20Z,MERGED,True,219640,133994,586,https://github.com/iabdalkader,Sthal update,2,[],https://github.com/openmv/openmv/pull/1013,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1013,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1014,2020-11-29T22:13:35Z,2020-11-29T22:34:04Z,2020-11-29T22:34:08Z,MERGED,True,0,6977,8,https://github.com/iabdalkader,Remove old fatfs library.,1,[],https://github.com/openmv/openmv/pull/1014,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1014,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1015,2020-11-30T20:36:56Z,2020-11-30T21:48:56Z,2020-11-30T21:49:00Z,MERGED,True,8,8,3,https://github.com/iabdalkader,Cambus updates,2,[],https://github.com/openmv/openmv/pull/1015,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1015,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1016,2020-11-30T23:16:02Z,2020-11-30T23:44:20Z,2020-11-30T23:44:24Z,MERGED,True,9,1,1,https://github.com/iabdalkader,Retry AMG8833 init a few times.,1,[],https://github.com/openmv/openmv/pull/1016,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1016,Fixes occasional failure on F7 on soft-reset.,Fixes occasional failure on F7 on soft-reset.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1017,2020-12-01T01:55:50Z,2020-12-01T14:00:59Z,2020-12-01T14:01:04Z,MERGED,True,42,11,1,https://github.com/iabdalkader,Fix FIR I2C bus arbitration lost error.,1,[],https://github.com/openmv/openmv/pull/1017,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1017,"If the FIR I2C bus is interrupted during a read/write the I2C device misbehaves and gets stuck pulling SDA low and the next time the device is re-initialized the I2C controller detects an arbitration lost condition.
The most affected sensor seems to be the AMG8833 on the F4, F7 and H7 micros and the MLX90640 on the F4 mirco.
Add a function to switch SCL to GPIO and pulse SCL 10000 times to attempt to unstuck the I2C device, it will attempt this 1 time before giving up.
This seems to work very well on all the tested micro-controllers.","If the FIR I2C bus is interrupted during a read/write the I2C device misbehaves and gets stuck pulling SDA low and the next time the device is re-initialized the I2C controller detects an arbitration lost condition.
The most affected sensor seems to be the AMG8833 on the F4, F7 and H7 micros and the MLX90640 on the F4 mirco.
Add a function to switch SCL to GPIO and pulse SCL 10000 times to attempt to unstuck the I2C device, it will attempt this 1 time before giving up.
This seems to work very well on all the tested micro-controllers.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1018,2020-12-02T20:57:24Z,2020-12-02T22:17:46Z,2020-12-02T22:18:24Z,MERGED,True,1,1,1,https://github.com/iabdalkader,H7 low power mode fixes.,1,[],https://github.com/openmv/openmv/pull/1018,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1018,"Fix stop mode voltage scaling for H7 rev V devices.
Re-enable disabled OSCs and PLLs after exiting stop mode.
Add functions to enter/exit SDRAM low power mode.
Fix DRAM retention in stop mode.","Fix stop mode voltage scaling for H7 rev V devices.
Re-enable disabled OSCs and PLLs after exiting stop mode.
Add functions to enter/exit SDRAM low power mode.
Fix DRAM retention in stop mode.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1019,2020-12-04T23:22:16Z,2020-12-04T23:50:46Z,2020-12-04T23:50:46Z,MERGED,True,15,1,5,https://github.com/kwagyeman,Kwabena/fix ov5640 ov2640 on rev y,2,[],https://github.com/openmv/openmv/pull/1019,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1019,"Fixes the OV5640 sensor clock.
Fixes the OV2640 sensor clock.","Fixes the OV5640 sensor clock.
Fixes the OV2640 sensor clock.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1020,2020-12-05T00:52:36Z,2020-12-05T02:23:50Z,2020-12-05T02:23:50Z,MERGED,True,3,3,5,https://github.com/kwagyeman,Rename OpenMV Pure Thermal,1,[],https://github.com/openmv/openmv/pull/1020,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1020,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1021,2020-12-05T18:48:50Z,2020-12-06T02:22:25Z,2020-12-06T02:23:02Z,MERGED,True,1,1,1,https://github.com/iabdalkader,F4: Disable DAC functions that require DMA.,1,[],https://github.com/openmv/openmv/pull/1021,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1021,It's not possible to use DAC with heap buffers on the F4 because the heap is located in CCM which is not accessible by DMA.,It's not possible to use DAC with heap buffers on the F4 because the heap is located in CCM which is not accessible by DMA.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1022,2020-12-06T18:40:09Z,2020-12-06T19:11:33Z,2020-12-06T19:15:39Z,MERGED,True,7,19,3,https://github.com/iabdalkader,Can update,2,[],https://github.com/openmv/openmv/pull/1022,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1022,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1023,2020-12-06T20:30:39Z,2020-12-06T21:27:43Z,2020-12-06T21:27:43Z,CLOSED,False,369,0,11,https://github.com/kwagyeman,Kwabena/ov5640 af,2,[],https://github.com/openmv/openmv/pull/1023,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1023,Adds auto focus support for the OV5640.,Adds auto focus support for the OV5640.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1024,2020-12-06T21:28:43Z,2020-12-07T01:00:11Z,2020-12-07T01:00:11Z,MERGED,True,369,0,11,https://github.com/kwagyeman,Kwabena/ov5640 af,8,[],https://github.com/openmv/openmv/pull/1024,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1024,Add auto focus support for the OV5640.,Add auto focus support for the OV5640.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1026,2020-12-09T06:44:06Z,2020-12-09T20:31:33Z,2020-12-09T21:21:00Z,CLOSED,False,120,120,98,https://github.com/hpssjellis,Changed RGB565 to GRAYSCALE for the Arduino examples,103,[],https://github.com/openmv/openmv/pull/1026,https://github.com/hpssjellis,1,https://github.com/openmv/openmv/pull/1026,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1026,2020-12-09T06:44:06Z,2020-12-09T20:31:33Z,2020-12-09T21:21:00Z,CLOSED,False,120,120,98,https://github.com/hpssjellis,Changed RGB565 to GRAYSCALE for the Arduino examples,103,[],https://github.com/openmv/openmv/pull/1026,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1026#issuecomment-742030822,,Fixed in the IDE.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1026,2020-12-09T06:44:06Z,2020-12-09T20:31:33Z,2020-12-09T21:21:00Z,CLOSED,False,120,120,98,https://github.com/hpssjellis,Changed RGB565 to GRAYSCALE for the Arduino examples,103,[],https://github.com/openmv/openmv/pull/1026,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1026#issuecomment-742068469,,"Hi, the new IDE automatically forces the pixformat to grayscale for the an boards that have grayscale only examples. We're working on a color camera for the Portenta which will give you much better features (the ov5640).",True,{}
openmv/openmv,https://github.com/openmv/openmv,1029,2020-12-13T23:46:55Z,2020-12-14T00:31:15Z,2020-12-14T00:32:22Z,MERGED,True,29,30,1131,https://github.com/iabdalkader,Restructure the repository.,1,[],https://github.com/openmv/openmv/pull/1029,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1029,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1030,2020-12-14T21:03:00Z,2020-12-14T21:21:07Z,2020-12-14T21:22:15Z,MERGED,True,0,706,2,https://github.com/iabdalkader,Remove outdated drivers.,1,[],https://github.com/openmv/openmv/pull/1030,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1030,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1031,2020-12-15T19:22:34Z,2020-12-15T19:56:22Z,2020-12-15T19:56:25Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add tinyusb submodule.,1,[],https://github.com/openmv/openmv/pull/1031,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1031,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1033,2020-12-16T16:43:55Z,2020-12-16T17:27:57Z,2020-12-16T17:28:02Z,MERGED,True,0,7,7,https://github.com/iabdalkader,Remove HAL include from sensor drivers.,1,[],https://github.com/openmv/openmv/pull/1033,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1033,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1034,2020-12-16T16:48:51Z,2020-12-16T17:25:03Z,2020-12-16T17:25:07Z,MERGED,True,49,38,9,https://github.com/iabdalkader,Build updates2,2,[],https://github.com/openmv/openmv/pull/1034,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1034,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1035,2020-12-16T20:07:32Z,2020-12-16T20:33:05Z,2020-12-16T20:33:09Z,MERGED,True,1,1198,6,https://github.com/iabdalkader,Remove outdated CMSIS-NN code.,1,[],https://github.com/openmv/openmv/pull/1035,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1035,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1037,2020-12-17T22:40:44Z,2020-12-17T22:59:06Z,2020-12-17T22:59:09Z,MERGED,True,7,0,7,https://github.com/iabdalkader,Add port flag to board makefiles.,1,[],https://github.com/openmv/openmv/pull/1037,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1037,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1039,2020-12-18T19:55:36Z,2020-12-18T20:16:41Z,2020-12-18T20:16:49Z,MERGED,True,447,451,149,https://github.com/iabdalkader,Build updates,5,[],https://github.com/openmv/openmv/pull/1039,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1039,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1040,2020-12-18T21:17:28Z,2020-12-18T22:06:19Z,2020-12-18T22:06:22Z,MERGED,True,131,93,31,https://github.com/iabdalkader,Remove code dependency on mp.h header.,1,[],https://github.com/openmv/openmv/pull/1040,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1040,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1041,2020-12-18T22:42:23Z,2020-12-18T23:25:32Z,2020-12-18T23:25:36Z,MERGED,True,50,43,20,https://github.com/iabdalkader,Update sensors drivers headers.,1,[],https://github.com/openmv/openmv/pull/1041,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1041,"Fix possible build issues if a driver is disabled.
Make sure no extra files are included if a driver is disabled.","Fix possible build issues if a driver is disabled.
Make sure no extra files are included if a driver is disabled.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1042,2020-12-19T18:09:45Z,2020-12-19T18:44:58Z,2020-12-19T18:45:01Z,MERGED,True,2,1,2,https://github.com/iabdalkader,Move HAL header define to port Makefile,1,[],https://github.com/openmv/openmv/pull/1042,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1042,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1043,2020-12-19T18:45:58Z,2020-12-19T19:36:02Z,2020-12-19T19:36:06Z,MERGED,True,74,62,13,https://github.com/iabdalkader,Use MP HAL delay/ticks instead of systick.,1,[],https://github.com/openmv/openmv/pull/1043,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1043,Allow building sensor drivers with different ports.,Allow building sensor drivers with different ports.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1044,2020-12-19T18:52:44Z,2020-12-19T19:17:38Z,2020-12-19T19:17:41Z,MERGED,True,8,5,3,https://github.com/iabdalkader,Remove STM32_HAL_H from common code.,1,[],https://github.com/openmv/openmv/pull/1044,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1044,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1045,2020-12-19T19:31:06Z,2020-12-19T19:53:43Z,2020-12-19T19:53:46Z,MERGED,True,11,13,5,https://github.com/iabdalkader,Move pixel format to imlib.,1,[],https://github.com/openmv/openmv/pull/1045,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1045,Remove dependency on sensor.h,Remove dependency on sensor.h,True,{}
openmv/openmv,https://github.com/openmv/openmv,1046,2020-12-19T19:55:55Z,2020-12-19T20:16:24Z,2020-12-19T20:16:27Z,MERGED,True,1,0,1,https://github.com/iabdalkader,Update qstrs.,1,[],https://github.com/openmv/openmv/pull/1046,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1046,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1047,2020-12-19T22:12:04Z,2020-12-19T22:31:20Z,2020-12-19T22:33:19Z,MERGED,True,11,11,2,https://github.com/iabdalkader,Move oofatfs and drivers objects to port Makefile,1,[],https://github.com/openmv/openmv/pull/1047,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1047,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1048,2020-12-23T20:32:44Z,2020-12-24T22:22:12Z,2020-12-24T22:22:12Z,CLOSED,False,7,4,3,https://github.com/kwagyeman,Fix missing header file issues,1,[],https://github.com/openmv/openmv/pull/1048,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1048,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1048,2020-12-23T20:32:44Z,2020-12-24T22:22:12Z,2020-12-24T22:22:12Z,CLOSED,False,7,4,3,https://github.com/kwagyeman,Fix missing header file issues,1,[],https://github.com/openmv/openmv/pull/1048,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1048#issuecomment-751124923,,Fix in #1053,True,{}
openmv/openmv,https://github.com/openmv/openmv,1049,2020-12-23T21:21:05Z,2020-12-23T21:50:12Z,2020-12-23T21:50:35Z,MERGED,True,3,4,3,https://github.com/iabdalkader,Update USB debugging.,1,[],https://github.com/openmv/openmv/pull/1049,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1049,"Move usbdbg.h to common headers.
Update text buffer functions.","Move usbdbg.h to common headers.
Update text buffer functions.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1050,2020-12-24T20:13:10Z,2020-12-24T20:35:26Z,2020-12-24T20:35:30Z,MERGED,True,634,639,3,https://github.com/iabdalkader,Move main Makefile to port Makefile(s),1,[],https://github.com/openmv/openmv/pull/1050,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1050,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1051,2020-12-24T21:22:52Z,2020-12-24T21:54:46Z,2020-12-24T21:57:00Z,MERGED,True,31,1,11,https://github.com/iabdalkader,Make py sensor module configurable.,1,[],https://github.com/openmv/openmv/pull/1051,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1051,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1052,2020-12-24T22:03:40Z,2020-12-24T22:26:34Z,2020-12-24T22:26:37Z,MERGED,True,46,39,2,https://github.com/iabdalkader,Move common flags/options to top Makefile.,1,[],https://github.com/openmv/openmv/pull/1052,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1052,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1053,2020-12-24T22:13:54Z,2020-12-24T23:05:42Z,2020-12-24T23:05:46Z,MERGED,True,13,3,3,https://github.com/iabdalkader,Fix OPENMVPT build.,1,[],https://github.com/openmv/openmv/pull/1053,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1053,Include missing headers.,Include missing headers.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1054,2020-12-25T18:28:07Z,2020-12-25T18:50:44Z,2020-12-25T18:50:46Z,MERGED,True,1,1,2,https://github.com/iabdalkader,Rename port Makefile for consistency,1,[],https://github.com/openmv/openmv/pull/1054,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1054,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1055,2020-12-25T20:21:46Z,2020-12-25T21:00:50Z,2020-12-25T21:00:53Z,MERGED,True,33,7,4,https://github.com/iabdalkader,Fix imlib descriptors build dependencies.,1,[],https://github.com/openmv/openmv/pull/1055,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1055,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1056,2020-12-26T19:08:36Z,2020-12-26T20:17:24Z,2020-12-26T20:17:30Z,MERGED,True,187,53,23,https://github.com/iabdalkader,Allow building the image library and modules without a filesystem.,1,[],https://github.com/openmv/openmv/pull/1056,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1056,"Images, models and descriptors I/O can be disabled with imlib flag.
Image creation in memory still works if image I/O is disabled.
TF and Haar can still load built-in models/cascades if image I/O is disabled.","Images, models and descriptors I/O can be disabled with imlib flag.
Image creation in memory still works if image I/O is disabled.
TF and Haar can still load built-in models/cascades if image I/O is disabled.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1057,2020-12-26T21:05:07Z,2020-12-26T21:38:27Z,2020-12-26T21:38:30Z,MERGED,True,41,12,10,https://github.com/iabdalkader,Make USB debug configurable to work with different ports.,1,[],https://github.com/openmv/openmv/pull/1057,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1057,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1058,2020-12-26T21:40:46Z,2020-12-26T22:07:25Z,2020-12-26T22:07:29Z,MERGED,True,263830,1,267,https://github.com/iabdalkader,Add nRF port and Nano 33 BLE board files.,2,[],https://github.com/openmv/openmv/pull/1058,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1058,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1059,2020-12-27T02:58:37Z,2020-12-27T14:19:16Z,2020-12-27T14:19:16Z,MERGED,True,213,203,13,https://github.com/kwagyeman,Kwabena/draw ir update,2,[],https://github.com/openmv/openmv/pull/1059,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1059,"Deletes old scaling script for the MLX.
Removes the draw_ta function which was not useful.
Updates draw_ir to support the new draw_image pipeline and all it's features.
Updates thermal scripts to use the new scaling features and improve robustness.","Deletes old scaling script for the MLX.
Removes the draw_ta function which was not useful.
Updates draw_ir to support the new draw_image pipeline and all it's features.
Updates thermal scripts to use the new scaling features and improve robustness.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1060,2020-12-27T15:14:17Z,2020-12-27T15:46:18Z,2020-12-27T15:46:24Z,MERGED,True,212,11,8,https://github.com/iabdalkader,MLX updates,2,[],https://github.com/openmv/openmv/pull/1060,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1060,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1061,2020-12-28T03:10:54Z,2020-12-30T19:37:37Z,2020-12-30T19:37:37Z,MERGED,True,629,309,8,https://github.com/kwagyeman,Modernize the FIR module to support optimized smooth scaling.,10,[],https://github.com/openmv/openmv/pull/1061,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1061,"Adds hmirror, vflip, and transpose to read_ir.
Improves memory allocation of read_ir such that it's not trashing the heap anymore.
Peak memory usage reduced.
Refactored code to improve things.
Made snapshot() support all the same args as read_ir/draw_ir with the ability to set custom output resolutions.

This PR significantly improves the performance of the FIR module by using tight'ish loops for all operations and it avoids copying IR arrays into the heap to MP land and then back into C land again.
All sensors are tested and working.","Adds hmirror, vflip, and transpose to read_ir.
Improves memory allocation of read_ir such that it's not trashing the heap anymore.
Peak memory usage reduced.
Refactored code to improve things.
Made snapshot() support all the same args as read_ir/draw_ir with the ability to set custom output resolutions.

This PR significantly improves the performance of the FIR module by using tight'ish loops for all operations and it avoids copying IR arrays into the heap to MP land and then back into C land again.
All sensors are tested and working.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1062,2020-12-28T17:59:36Z,2020-12-28T18:21:47Z,2020-12-28T18:21:50Z,MERGED,True,1014,289,11,https://github.com/iabdalkader,Update MLX and FIR drivers.,3,[],https://github.com/openmv/openmv/pull/1062,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1062,"Remove all the old MLX90621 code and use the official MLX90621 driver.
Add I2C functions to handle no stop and repeated start.
Switch all FIR sensors to use HW I2C.
Note1: May need to handle POR/brown-out conditions.
Note2: There's a temporary workaround to FIR I2C handles and hard-coded I2C IRQs that will be fixed later.","Remove all the old MLX90621 code and use the official MLX90621 driver.
Add I2C functions to handle no stop and repeated start.
Switch all FIR sensors to use HW I2C.
Note1: May need to handle POR/brown-out conditions.
Note2: There's a temporary workaround to FIR I2C handles and hard-coded I2C IRQs that will be fixed later.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1063,2020-12-28T22:57:13Z,2020-12-29T13:20:43Z,2020-12-29T13:21:11Z,MERGED,True,1033,863,35,https://github.com/iabdalkader,Make sensor cambus/I2C driver portable.,1,[],https://github.com/openmv/openmv/pull/1063,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1063,"Use I2C IDs to initialize the cambus/I2C driver instead of handles.
Move the abstract cambus.h API to omv/common.
Different ports need to implement omv/ports//cambus.c and omv/ports//cambus_struct.h to support cambus.","Use I2C IDs to initialize the cambus/I2C driver instead of handles.
Move the abstract cambus.h API to omv/common.
Different ports need to implement omv/ports//cambus.c and omv/ports//cambus_struct.h to support cambus.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1064,2020-12-29T22:58:55Z,2020-12-29T23:21:47Z,2020-12-29T23:21:53Z,MERGED,True,98,76,8,https://github.com/iabdalkader,Move unaligned memory to separate file.,1,[],https://github.com/openmv/openmv/pull/1064,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1064,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1065,2020-12-29T23:29:38Z,2020-12-29T23:58:36Z,2020-12-29T23:58:39Z,MERGED,True,30,18,6,https://github.com/iabdalkader,Move framebuffer initialization to framebuffer.c,1,[],https://github.com/openmv/openmv/pull/1065,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1065,This decouples the framebuffer from the sensor.,This decouples the framebuffer from the sensor.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1066,2020-12-29T23:49:21Z,2020-12-30T00:28:33Z,2020-12-30T00:28:37Z,MERGED,True,216,3,4,https://github.com/iabdalkader,Enable FIR drivers in NRF port.,2,[],https://github.com/openmv/openmv/pull/1066,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1066,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1067,2020-12-29T23:51:47Z,2020-12-30T00:39:56Z,2020-12-30T00:39:59Z,MERGED,True,4,3,6,https://github.com/iabdalkader,Move py_fir module to generic modules.,1,[],https://github.com/openmv/openmv/pull/1067,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1067,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1068,2020-12-30T06:53:55Z,2021-01-03T14:04:45Z,2021-01-03T14:04:45Z,MERGED,True,19,13,1,https://github.com/kidswong999,faster hough x3,4,[],https://github.com/openmv/openmv/pull/1068,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/1068,"1, change sqrt(a*a + b*b) to (abs(a)+abs(b))/2
2, only calculate edge (drop small mag)
performance:
before:
QVGA RGB565: 34fps
QVGA GRAYSCALE: 26fps
VGA GRAYSCALE: 7fps
after:
QVGA RGB565: 41fps
QVGA GRAYSCALE:75fps
VGA GRAYSCALE: 21fps","1, change sqrt(a*a + b*b) to (abs(a)+abs(b))/2
2, only calculate edge (drop small mag)
performance:
before:
QVGA RGB565: 34fps
QVGA GRAYSCALE: 26fps
VGA GRAYSCALE: 7fps
after:
QVGA RGB565: 41fps
QVGA GRAYSCALE:75fps
VGA GRAYSCALE: 21fps",True,{}
openmv/openmv,https://github.com/openmv/openmv,1068,2020-12-30T06:53:55Z,2021-01-03T14:04:45Z,2021-01-03T14:04:45Z,MERGED,True,19,13,1,https://github.com/kidswong999,faster hough x3,4,[],https://github.com/openmv/openmv/pull/1068,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1068#issuecomment-752823810,"1, change sqrt(a*a + b*b) to (abs(a)+abs(b))/2
2, only calculate edge (drop small mag)
performance:
before:
QVGA RGB565: 34fps
QVGA GRAYSCALE: 26fps
VGA GRAYSCALE: 7fps
after:
QVGA RGB565: 41fps
QVGA GRAYSCALE:75fps
VGA GRAYSCALE: 21fps",@kidswong999 How did you think of these changes and why are they correct?,True,{}
openmv/openmv,https://github.com/openmv/openmv,1068,2020-12-30T06:53:55Z,2021-01-03T14:04:45Z,2021-01-03T14:04:45Z,MERGED,True,19,13,1,https://github.com/kidswong999,faster hough x3,4,[],https://github.com/openmv/openmv/pull/1068,https://github.com/kidswong999,3,https://github.com/openmv/openmv/pull/1068#issuecomment-752859286,"1, change sqrt(a*a + b*b) to (abs(a)+abs(b))/2
2, only calculate edge (drop small mag)
performance:
before:
QVGA RGB565: 34fps
QVGA GRAYSCALE: 26fps
VGA GRAYSCALE: 7fps
after:
QVGA RGB565: 41fps
QVGA GRAYSCALE:75fps
VGA GRAYSCALE: 21fps","The final result is the counting of accumulators, which does not require high precision, we just need to know which are higher in accumulators array.
The non-edge point's mag is small and has little effect on the overall accumulators, but requires a lot of calculation, so I skiped it.Intuitively, the edge points are not calculated.
As for sqrt(a*a + b*b) to (abs(a) + abs(b))/2, this is a rough approximation that generally does not affect the relative number of accumulators. The reason is the same, we just need to know which are relatively high.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1070,2020-12-30T20:27:08Z,2020-12-30T20:59:06Z,2020-12-30T20:59:06Z,MERGED,True,79,144,5,https://github.com/kwagyeman,Move color palette code to helper methods,1,[],https://github.com/openmv/openmv/pull/1070,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1070,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1072,2020-12-31T01:40:44Z,2020-12-31T16:17:23Z,2020-12-31T16:17:23Z,MERGED,True,30,21,3,https://github.com/kwagyeman,Enable the lepton bus to be used on external pins,1,[],https://github.com/openmv/openmv/pull/1072,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1072,"For support of this module per user requests.
https://learn.sparkfun.com/tutorials/flir-lepton-hookup-guide/all
Tested and works with the FLIR Lepton.","For support of this module per user requests.
https://learn.sparkfun.com/tutorials/flir-lepton-hookup-guide/all
Tested and works with the FLIR Lepton.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1073,2020-12-31T17:06:06Z,2020-12-31T17:41:51Z,2020-12-31T17:42:11Z,MERGED,True,5,3,2,https://github.com/iabdalkader,Update Makefile.,1,[],https://github.com/openmv/openmv/pull/1073,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1073,"Fix possible build dependency issue.
Detect number of cores instead of hard coded value.","Fix possible build dependency issue.
Detect number of cores instead of hard coded value.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1074,2020-12-31T21:28:54Z,2020-12-31T21:45:18Z,2020-12-31T21:45:23Z,MERGED,True,12,1,2,https://github.com/iabdalkader,Enable NRF ulab module.,1,[],https://github.com/openmv/openmv/pull/1074,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1074,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1075,2020-12-31T22:00:13Z,2020-12-31T22:49:38Z,2020-12-31T22:58:00Z,MERGED,True,9856,3,9,https://github.com/iabdalkader,Nrf audio,2,[],https://github.com/openmv/openmv/pull/1075,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1075,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1076,2020-12-31T23:08:36Z,2020-12-31T23:30:32Z,2020-12-31T23:30:36Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix nrf gc_collect,1,[],https://github.com/openmv/openmv/pull/1076,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1076,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1077,2021-01-01T14:05:13Z,2021-01-01T14:22:40Z,2021-01-01T14:22:44Z,MERGED,True,59,26,4,https://github.com/iabdalkader,Remove hard-coded cambus pins used for bus recovery.,1,[],https://github.com/openmv/openmv/pull/1077,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1077,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1078,2021-01-01T19:55:24Z,2021-01-01T20:21:27Z,2021-01-01T20:21:31Z,MERGED,True,104,152,6,https://github.com/iabdalkader,Add new and updated read/write bytes functions.,1,[],https://github.com/openmv/openmv/pull/1078,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1078,"Remove all the older functions
New functions can be used to support any I2C sensor.
Support controlling stop condition, repeated start and combining transfers.
Tested MLX and AMG on stm32 and nrf ports.","Remove all the older functions
New functions can be used to support any I2C sensor.
Support controlling stop condition, repeated start and combining transfers.
Tested MLX and AMG on stm32 and nrf ports.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1079,2021-01-01T20:41:07Z,2021-01-02T22:26:05Z,2021-01-02T22:26:06Z,MERGED,True,8,23,5,https://github.com/kwagyeman,Use SPI Callbacks,1,[],https://github.com/openmv/openmv/pull/1079,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1079,"Enabled USE_HAL_SPI_REGISTER_CALLBACKS for the F4/F7/H7.
Switch to using callbacks with the LCD module.
Remove stm32xx code for the callback.","Enabled USE_HAL_SPI_REGISTER_CALLBACKS for the F4/F7/H7.
Switch to using callbacks with the LCD module.
Remove stm32xx code for the callback.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1080,2021-01-01T22:17:15Z,2021-01-01T23:57:16Z,2021-01-01T23:57:19Z,MERGED,True,2,0,1,https://github.com/kwagyeman,Update README.md,1,[],https://github.com/openmv/openmv/pull/1080,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1080,Add new build targets.,Add new build targets.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1081,2021-01-01T22:18:36Z,2021-01-02T00:57:58Z,2021-01-02T00:58:12Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Remove selective search to save flash,1,[],https://github.com/openmv/openmv/pull/1081,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1081,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1082,2021-01-01T23:50:11Z,2021-01-02T00:09:47Z,2021-01-02T00:09:52Z,MERGED,True,13,3,2,https://github.com/iabdalkader,Add missing I2C IRQ handlers.,1,[],https://github.com/openmv/openmv/pull/1082,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1082,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1083,2021-01-02T18:00:17Z,2021-01-02T18:40:42Z,2021-01-02T19:02:23Z,MERGED,True,62,62,22,https://github.com/iabdalkader,Rename flag.,1,[],https://github.com/openmv/openmv/pull/1083,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1083,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1084,2021-01-02T21:13:54Z,2021-01-02T22:38:45Z,2021-01-02T22:38:48Z,MERGED,True,419,244,15,https://github.com/iabdalkader,Add new ImageIO Type.,6,[],https://github.com/openmv/openmv/pull/1084,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1084,"This new module replaces the old ImageWriter and ImageReader and adds support for memory stream I/O.
The API is more or less the same, with some minor changes.

Usage with file I/O:
stream = image.ImageIO(""/stream.bin"", ""w"") # Specify stream mode r or w
stream.read/write(image)   # checks for stream mode
stream.close()

Usage with memory I/O:
stream = image.ImageIO((width, height, bpp), n_frames) # Must specify the number of frames to pre-alloc.
stream.write(image)
stream.seek(0)
img = stream.read()
stream.close() # does nothing for now.","This new module replaces the old ImageWriter and ImageReader and adds support for memory stream I/O.
The API is more or less the same, with some minor changes.

Usage with file I/O:
stream = image.ImageIO(""/stream.bin"", ""w"") # Specify stream mode r or w
stream.read/write(image)   # checks for stream mode
stream.close()

Usage with memory I/O:
stream = image.ImageIO((width, height, bpp), n_frames) # Must specify the number of frames to pre-alloc.
stream.write(image)
stream.seek(0)
img = stream.read()
stream.close() # does nothing for now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1085,2021-01-02T22:20:52Z,2021-01-02T22:39:03Z,2021-01-02T22:39:08Z,MERGED,True,94,32,6,https://github.com/iabdalkader,Update ImageIO examples,1,[],https://github.com/openmv/openmv/pull/1085,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1085,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1086,2021-01-03T00:24:43Z,2021-01-03T00:39:26Z,2021-01-03T00:39:29Z,MERGED,True,4,2,3,https://github.com/iabdalkader,NRF: enable MBFS.,1,[],https://github.com/openmv/openmv/pull/1086,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1086,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1087,2021-01-03T03:00:29Z,2021-01-03T03:19:59Z,2021-01-03T03:22:49Z,MERGED,True,2,2,2,https://github.com/kwagyeman,"Fix the use of FLT_MIN which is not the actual min, -FLT_MAX is",1,[],https://github.com/openmv/openmv/pull/1087,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1087,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1088,2021-01-03T03:24:36Z,2021-01-03T03:29:04Z,2021-01-03T03:29:05Z,CLOSED,False,172,78,1,https://github.com/kwagyeman,Formatting cleanup per repo rules,1,[],https://github.com/openmv/openmv/pull/1088,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1088,Redid how the file is laid out to follow new code guidelines.,Redid how the file is laid out to follow new code guidelines.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1088,2021-01-03T03:24:36Z,2021-01-03T03:29:04Z,2021-01-03T03:29:05Z,CLOSED,False,172,78,1,https://github.com/kwagyeman,Formatting cleanup per repo rules,1,[],https://github.com/openmv/openmv/pull/1088,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1088#issuecomment-753562340,Redid how the file is laid out to follow new code guidelines.,"The current formatting is fine, thanks.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1089,2021-01-03T03:31:31Z,2021-01-03T03:58:01Z,2021-01-03T03:58:01Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Update to the new obj repr,1,[],https://github.com/openmv/openmv/pull/1089,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1089,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1090,2021-01-03T03:38:25Z,2021-01-03T13:17:30Z,2021-01-03T13:17:31Z,CLOSED,False,170,76,1,https://github.com/kwagyeman,Formatting cleanup,1,[],https://github.com/openmv/openmv/pull/1090,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1090,"Removed FLT_MAX stuff. It's clean with no side affects.
I'd prefer if you can merge this as I have other edits to this file that I made which I removed from this commit that result in merge conflicts without all these changes.","Removed FLT_MAX stuff. It's clean with no side affects.
I'd prefer if you can merge this as I have other edits to this file that I made which I removed from this commit that result in merge conflicts without all these changes.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1090,2021-01-03T03:38:25Z,2021-01-03T13:17:30Z,2021-01-03T13:17:31Z,CLOSED,False,170,76,1,https://github.com/kwagyeman,Formatting cleanup,1,[],https://github.com/openmv/openmv/pull/1090,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1090#issuecomment-753615689,"Removed FLT_MAX stuff. It's clean with no side affects.
I'd prefer if you can merge this as I have other edits to this file that I made which I removed from this commit that result in merge conflicts without all these changes.",,True,{}
openmv/openmv,https://github.com/openmv/openmv,1091,2021-01-03T14:40:58Z,2021-01-03T14:57:31Z,2021-01-03T14:57:34Z,MERGED,True,8,0,1,https://github.com/iabdalkader,Add Arduino fixes.,1,[],https://github.com/openmv/openmv/pull/1091,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1091,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1092,2021-01-03T18:13:34Z,2021-01-03T18:29:24Z,2021-01-03T18:29:24Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Fix float max code in py_fir.c,1,[],https://github.com/openmv/openmv/pull/1092,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1092,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1093,2021-01-03T18:22:23Z,2021-01-03T23:01:35Z,2021-01-03T23:01:35Z,MERGED,True,1038,42,11,https://github.com/kwagyeman,Add flir lepton support to the fir module,1,[],https://github.com/openmv/openmv/pull/1093,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1093,"Adds support for an external flir lepton module to all OpenMV Cams.
This will allow SignTown to make a flir lepton shield for cameras.
Also, this give the OpenMV Pure Thermal support for the FLIR Lepton.
...
I'll send a PR next for automatic support for detecting the attached sensor and then update the examples with this to avoid copying the thermal examples again.","Adds support for an external flir lepton module to all OpenMV Cams.
This will allow SignTown to make a flir lepton shield for cameras.
Also, this give the OpenMV Pure Thermal support for the FLIR Lepton.
...
I'll send a PR next for automatic support for detecting the attached sensor and then update the examples with this to avoid copying the thermal examples again.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1094,2021-01-03T21:29:19Z,2021-01-03T21:45:07Z,2021-01-03T21:45:53Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Disable get similarity on omv4,1,[],https://github.com/openmv/openmv/pull/1094,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1094,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1095,2021-01-03T22:24:25Z,2021-01-03T23:02:04Z,2021-01-03T23:02:04Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Disable overlapping detection print,1,[],https://github.com/openmv/openmv/pull/1095,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1095,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1096,2021-01-03T23:39:22Z,2021-01-04T00:14:30Z,2021-01-04T00:14:30Z,MERGED,True,56,84,9,https://github.com/kwagyeman,Make lepton driver take cambus_t,1,[],https://github.com/openmv/openmv/pull/1096,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1096,"Tested on an OpenMV Cam H7 with both a Lepton on the camera bus and another on the external pins. Both work at the same time.
The previous code could not support both at the same time. This code can do that and saves a var.","Tested on an OpenMV Cam H7 with both a Lepton on the camera bus and another on the external pins. Both work at the same time.
The previous code could not support both at the same time. This code can do that and saves a var.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1097,2021-01-04T01:14:15Z,2021-01-04T12:35:38Z,2021-01-04T12:35:38Z,MERGED,True,125,23,10,https://github.com/kwagyeman,Make fir module programmable,1,[],https://github.com/openmv/openmv/pull/1097,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1097,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1098,2021-01-04T02:06:15Z,2021-01-04T02:30:53Z,2021-01-04T02:31:26Z,MERGED,True,9,24,4,https://github.com/iabdalkader,Disable unused CMSIS DSP functions.,1,[],https://github.com/openmv/openmv/pull/1098,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1098,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1099,2021-01-04T02:11:09Z,2021-01-04T02:42:42Z,2021-01-04T02:42:46Z,MERGED,True,5,2,1,https://github.com/iabdalkader,Update stm32cubeai module.,1,[],https://github.com/openmv/openmv/pull/1099,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1099,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1100,2021-01-04T06:35:02Z,2021-01-04T20:33:25Z,2021-01-04T20:33:25Z,MERGED,True,39,42,3,https://github.com/kwagyeman,Move vars into static namespace,3,[],https://github.com/openmv/openmv/pull/1100,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1100,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1101,2021-01-04T22:15:01Z,2021-01-04T22:32:06Z,2021-01-04T22:32:12Z,MERGED,True,131,112,7,https://github.com/iabdalkader,Port fixes,2,[],https://github.com/openmv/openmv/pull/1101,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1101,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1102,2021-01-05T18:02:08Z,2021-01-05T18:16:36Z,2021-01-05T18:16:40Z,MERGED,True,13,0,1,https://github.com/iabdalkader,Implement NRF cambus scan and gencall.,1,[],https://github.com/openmv/openmv/pull/1102,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1102,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1103,2021-01-05T20:04:18Z,2021-01-05T20:18:53Z,2021-01-05T20:18:57Z,MERGED,True,1,1,1,https://github.com/iabdalkader,MicroPython updates.,1,[],https://github.com/openmv/openmv/pull/1103,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1103,"NRF fix I2C priority.
NRF enable line source.
machine i2c: scan with read instead of write.","NRF fix I2C priority.
NRF enable line source.
machine i2c: scan with read instead of write.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1104,2021-01-05T21:41:39Z,2021-01-05T22:02:27Z,2021-01-05T22:02:31Z,MERGED,True,2,1,2,https://github.com/iabdalkader,NRF: Switch to frozen manifest.,1,[],https://github.com/openmv/openmv/pull/1104,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1104,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1105,2021-01-05T21:48:05Z,2021-01-05T22:06:32Z,2021-01-05T22:06:59Z,MERGED,True,59,1,2,https://github.com/iabdalkader,Add frozen hts221 driver.,1,[],https://github.com/openmv/openmv/pull/1105,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1105,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1106,2021-01-06T18:16:22Z,2021-01-06T18:30:44Z,2021-01-06T18:30:50Z,MERGED,True,12,26,3,https://github.com/iabdalkader,NRF: Fix early board init/deinit.,1,[],https://github.com/openmv/openmv/pull/1106,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1106,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1107,2021-01-06T22:45:35Z,2021-01-06T23:05:10Z,2021-01-06T23:05:29Z,MERGED,True,301,0,206,https://github.com/iabdalkader,Move Arduino examples to separate dirs.,1,[],https://github.com/openmv/openmv/pull/1107,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1107,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1108,2021-01-06T22:45:52Z,2021-01-06T23:08:15Z,2021-01-06T23:08:18Z,MERGED,True,2272,0,10,https://github.com/iabdalkader,NRF: Add sensor drivers to frozen modules.,1,[],https://github.com/openmv/openmv/pull/1108,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1108,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1109,2021-01-07T00:48:47Z,2021-01-07T01:19:23Z,2021-01-07T01:19:23Z,MERGED,True,70,291,10,https://github.com/kwagyeman,Add auto scanning and update examples,1,[],https://github.com/openmv/openmv/pull/1109,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1109,"Add auto scanning for the FIR module.
Update examples.","Add auto scanning for the FIR module.
Update examples.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1110,2021-01-07T13:46:27Z,2021-01-07T14:02:46Z,2021-01-07T14:02:50Z,MERGED,True,2,2,2,https://github.com/iabdalkader,NRF Twi fixes.,1,[],https://github.com/openmv/openmv/pull/1110,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1110,"Deinit once before recovery.
Reduce TWI timeout.","Deinit once before recovery.
Reduce TWI timeout.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1111,2021-01-07T13:47:53Z,2021-01-07T14:09:32Z,2021-01-07T14:09:36Z,MERGED,True,13,1,1,https://github.com/iabdalkader,Fix cambus scan.,1,[],https://github.com/openmv/openmv/pull/1111,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1111,Retry scan at least once before giving up. The bus can be stuck from the last run.,Retry scan at least once before giving up. The bus can be stuck from the last run.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1112,2021-01-07T18:30:04Z,2021-01-07T18:46:05Z,2021-01-07T18:48:44Z,MERGED,True,17,4,8,https://github.com/iabdalkader,Define UID size in board config.,1,[],https://github.com/openmv/openmv/pull/1112,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1112,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1113,2021-01-07T21:32:52Z,2021-01-07T21:54:30Z,2021-01-07T21:54:34Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix H7 timer state with new HAL.,1,[],https://github.com/openmv/openmv/pull/1113,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1113,Fixes #1036,Fixes #1036,True,{}
openmv/openmv,https://github.com/openmv/openmv,1114,2021-01-08T18:01:50Z,2021-01-08T18:19:02Z,2021-01-08T18:19:05Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Enable UART 8 for Portenta.,1,[],https://github.com/openmv/openmv/pull/1114,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1114,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1115,2021-01-09T21:58:23Z,2021-01-10T13:37:34Z,2021-01-10T13:37:34Z,MERGED,True,7,58,4,https://github.com/kwagyeman,Kwabena/get openmvpt lepton working,4,[],https://github.com/openmv/openmv/pull/1115,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1115,"FLIR Lepton support in our firmware uses SPI2, the same as the LCD module. I choose to build support based off of the PYB SPI module so that DMA would continue to work and to reuse all their handlers.
However, for the OpenMV PT the FLIR Lepton is on SPI3... which is used by the OpenMV4/OpenMV4P for the camera lepton module. I spent quite a bit of time trying to figure out how I could integrate these two things together without having a bunch of code changes. Then I realized that I could just disable OMV_ENABLE_LEPTON to disable the camera module which turns off the custom SPI bus interrupt and DMA handler. This then frees me to simply use SPI3 from the PYB module and have no code changes. SPI3 is enabled here: openmv/micropython#87
Thus the SPI bus resource sharing issue is solved.
...
As for the OpenMV PT, the FIR onboard shares the I2C bus with the main camera sensor. However, the LEPTON module is always in reset on turn on so it won't respond to I2C scanning. However, the I2C bus must be reinited on soft reset. The other code changes handle this.
...
I examined creating a single interrupt handler location in stm32fxxx_hal_msp.c per Ibrahim's request. However, as I wrote more code for this it became clear I was just duplicating things and using more precious .data space without any benefit. Just disabling OMV_ENABLE_LEPTON on the OPENMVPT is the best solution.","FLIR Lepton support in our firmware uses SPI2, the same as the LCD module. I choose to build support based off of the PYB SPI module so that DMA would continue to work and to reuse all their handlers.
However, for the OpenMV PT the FLIR Lepton is on SPI3... which is used by the OpenMV4/OpenMV4P for the camera lepton module. I spent quite a bit of time trying to figure out how I could integrate these two things together without having a bunch of code changes. Then I realized that I could just disable OMV_ENABLE_LEPTON to disable the camera module which turns off the custom SPI bus interrupt and DMA handler. This then frees me to simply use SPI3 from the PYB module and have no code changes. SPI3 is enabled here: openmv/micropython#87
Thus the SPI bus resource sharing issue is solved.
...
As for the OpenMV PT, the FIR onboard shares the I2C bus with the main camera sensor. However, the LEPTON module is always in reset on turn on so it won't respond to I2C scanning. However, the I2C bus must be reinited on soft reset. The other code changes handle this.
...
I examined creating a single interrupt handler location in stm32fxxx_hal_msp.c per Ibrahim's request. However, as I wrote more code for this it became clear I was just duplicating things and using more precious .data space without any benefit. Just disabling OMV_ENABLE_LEPTON on the OPENMVPT is the best solution.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1116,2021-01-10T04:02:16Z,2021-01-10T17:58:07Z,2021-01-10T17:58:07Z,MERGED,True,206,207,24,https://github.com/kwagyeman,Use new MP error messages,1,[],https://github.com/openmv/openmv/pull/1116,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1116,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1117,2021-01-10T20:13:55Z,2021-01-13T00:36:00Z,2021-01-13T00:36:00Z,MERGED,True,1899,25,22,https://github.com/kwagyeman,Add mlx90641 driver,1,[],https://github.com/openmv/openmv/pull/1117,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1117,Tested MLX90641. It works. The MLX90640 still works too.,Tested MLX90641. It works. The MLX90640 still works too.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1118,2021-01-11T17:06:08Z,2021-01-11T17:41:06Z,2021-01-11T17:41:10Z,MERGED,True,6,6,1,https://github.com/iabdalkader,Make xalloc exception more useful.,1,[],https://github.com/openmv/openmv/pull/1118,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1118,"Add the number of bytes to the exception message, could be very helpful to the user in debugging stuff.","Add the number of bytes to the exception message, could be very helpful to the user in debugging stuff.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1119,2021-01-11T19:04:31Z,2021-01-11T19:20:51Z,2021-01-11T19:20:54Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Patch spi.c from upstream.,1,[],https://github.com/openmv/openmv/pull/1119,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1119,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1120,2021-01-13T08:14:39Z,2021-01-13T17:43:14Z,2021-01-13T17:43:14Z,MERGED,True,47,16,2,https://github.com/frank26080115,ov5640 pclk calculation now uses current register values,2,[],https://github.com/openmv/openmv/pull/1120,https://github.com/frank26080115,1,https://github.com/openmv/openmv/pull/1120,"I realized why setting long exposure settings was only sort-of working, and had weird timings, and also failed frequently.
The PCLK calculations were simply not taking into account the changes I wrote into all the PLL registers via the hack you've suggested.
I added some additional register retrievals and calculated PCLK properly and now it's working soooo much better","I realized why setting long exposure settings was only sort-of working, and had weird timings, and also failed frequently.
The PCLK calculations were simply not taking into account the changes I wrote into all the PLL registers via the hack you've suggested.
I added some additional register retrievals and calculated PCLK properly and now it's working soooo much better",True,{}
openmv/openmv,https://github.com/openmv/openmv,1120,2021-01-13T08:14:39Z,2021-01-13T17:43:14Z,2021-01-13T17:43:14Z,MERGED,True,47,16,2,https://github.com/frank26080115,ov5640 pclk calculation now uses current register values,2,[],https://github.com/openmv/openmv/pull/1120,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1120#issuecomment-759597075,"I realized why setting long exposure settings was only sort-of working, and had weird timings, and also failed frequently.
The PCLK calculations were simply not taking into account the changes I wrote into all the PLL registers via the hack you've suggested.
I added some additional register retrievals and calculated PCLK properly and now it's working soooo much better",Thanks for doing this. I was just hard coding it before.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1122,2021-01-15T18:39:49Z,2021-01-16T18:44:34Z,2021-01-16T18:44:34Z,MERGED,True,299,585,2,https://github.com/kwagyeman,Kwabena/cleanup to ops,2,[],https://github.com/openmv/openmv/pull/1122,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1122,"1st Commit Make draw image handle drawing in-place on an image.
2nd Commit simplifies the py_image to_x()/copy()/crop() methods and uses the draw image pipeline to power them.","1st Commit Make draw image handle drawing in-place on an image.
2nd Commit simplifies the py_image to_x()/copy()/crop() methods and uses the draw image pipeline to power them.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1123,2021-01-15T18:42:21Z,2021-01-15T21:03:38Z,2021-01-15T21:03:38Z,MERGED,True,3,1,1,https://github.com/kwagyeman,Make copy_to_fb smarter about resources,1,[],https://github.com/openmv/openmv/pull/1123,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1123,Improve size calculation to account for extra space in the frame buffer.,Improve size calculation to account for extra space in the frame buffer.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1124,2021-01-16T00:05:58Z,2021-01-16T00:37:23Z,2021-01-16T03:40:00Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix pixel clock polarity for the HM01B0,1,[],https://github.com/openmv/openmv/pull/1124,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1124,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1125,2021-01-16T22:38:24Z,2021-01-18T13:23:57Z,2021-01-18T13:24:01Z,MERGED,True,104,22,1,https://github.com/iabdalkader,Update HM01B0 driver.,3,[],https://github.com/openmv/openmv/pull/1125,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1125,"Fix framerate for QVGA and QQVGA.
Fix set_exposure calculations.
Implement set_framerate","Fix framerate for QVGA and QQVGA.
Fix set_exposure calculations.
Implement set_framerate",True,{}
openmv/openmv,https://github.com/openmv/openmv,1126,2021-01-17T19:24:54Z,2021-01-17T19:40:49Z,2021-01-17T19:43:25Z,MERGED,True,43,0,4,https://github.com/iabdalkader,Add set/get_framerate().,1,[],https://github.com/openmv/openmv/pull/1126,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1126,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1127,2021-01-19T18:30:24Z,2021-01-19T19:27:26Z,2021-01-19T20:46:31Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update build scripts from upstream.,1,[],https://github.com/openmv/openmv/pull/1127,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1127,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1128,2021-01-19T20:46:04Z,2021-01-19T21:13:04Z,2021-01-19T21:13:22Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Remove gdb flag for normal builds.,1,[],https://github.com/openmv/openmv/pull/1128,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1128,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1129,2021-01-19T22:53:37Z,2021-01-19T23:21:14Z,2021-01-19T23:21:22Z,MERGED,True,10,1330,5,https://github.com/iabdalkader,Add top python modules to qstr sources.,1,[],https://github.com/openmv/openmv/pull/1129,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1129,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1130,2021-01-19T23:08:05Z,2021-01-19T23:21:39Z,2021-01-19T23:21:42Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix stm32cube ai build.,1,[],https://github.com/openmv/openmv/pull/1130,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1130,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1131,2021-01-20T15:40:40Z,2021-01-20T15:55:22Z,2021-01-20T15:55:27Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Enable exFAT for Portenta.,1,[],https://github.com/openmv/openmv/pull/1131,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1131,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1132,2021-01-21T00:32:09Z,2021-01-21T00:44:16Z,2021-01-21T00:44:20Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Low power fixes.,1,[],https://github.com/openmv/openmv/pull/1132,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1132,"Disable QSPI in stop and standby modes.
Power down SDRAM in standby mode.","Disable QSPI in stop and standby modes.
Power down SDRAM in standby mode.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1133,2021-01-21T20:54:04Z,2021-01-22T18:48:52Z,2021-01-22T18:49:02Z,MERGED,True,8214,16397,3,https://github.com/iabdalkader,Use interpolated LAB table.,1,[],https://github.com/openmv/openmv/pull/1133,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1133,Saves about 100KBs.,Saves about 100KBs.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1134,2021-01-22T19:20:41Z,2021-01-22T19:41:40Z,2021-01-22T19:41:44Z,MERGED,True,87,45,7,https://github.com/iabdalkader,Update ulab to 2.1.3,1,[],https://github.com/openmv/openmv/pull/1134,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1134,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1135,2021-01-22T19:47:39Z,2021-01-22T19:59:16Z,2021-01-22T19:59:18Z,MERGED,True,372,0,3,https://github.com/iabdalkader,Add LoRa library for Arduino Portenta.,1,[],https://github.com/openmv/openmv/pull/1135,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1135,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1136,2021-01-23T04:48:42Z,2021-01-23T21:13:47Z,2021-01-23T21:13:47Z,MERGED,True,1015,559,11,https://github.com/kwagyeman,Kwabena/update tv driver,4,[],https://github.com/openmv/openmv/pull/1136,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1136,"Updates the TV driver to support 352x240 (SIF) resolution. Runs at 15 FPS on all our OpenMV Cams without triple_buffering enabled. On the H7+ or any OpenMV Cam with SDRAM you can enable triple buffering to improve system FPS.
Also, includes all the new draw_image pipeline features.
...
Note: The YUV LUT and generator code is not needed anymore. I did not remove that in this PR, but, it should be removed.","Updates the TV driver to support 352x240 (SIF) resolution. Runs at 15 FPS on all our OpenMV Cams without triple_buffering enabled. On the H7+ or any OpenMV Cam with SDRAM you can enable triple buffering to improve system FPS.
Also, includes all the new draw_image pipeline features.
...
Note: The YUV LUT and generator code is not needed anymore. I did not remove that in this PR, but, it should be removed.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1137,2021-01-24T20:33:43Z,2021-01-25T00:56:59Z,2021-01-25T00:56:59Z,MERGED,True,24,18,1,https://github.com/kwagyeman,Fix issues with F7 LCD triple buffering,1,[],https://github.com/openmv/openmv/pull/1137,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1137,"SPI CS was triggering too close to data movement.
Transmit IT is not safe to use on data in a byte struct that is not statically allocated.

The LCD driver with triple buffering is now stable on the F7.","SPI CS was triggering too close to data movement.
Transmit IT is not safe to use on data in a byte struct that is not statically allocated.

The LCD driver with triple buffering is now stable on the F7.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1138,2021-01-25T03:43:58Z,2021-01-25T17:38:19Z,2021-01-25T17:38:19Z,MERGED,True,22,0,1,https://github.com/kwagyeman,Fix lepton driver on m4 and m7,2,[],https://github.com/openmv/openmv/pull/1138,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1138,"Can't do 32-bit transfers to the SPI bus with the M4/M7. The SPI bus for them has only a 16-bit read/write register. So, this switches to 16-bit mode for DMA for them. I have confirmed the FLIR Lepton 1 works on the M4 and M7. The FLIR Lepton 3 didn't work on the M4 because of RAM issues. The Lepton 3 works on the M7.
Regarding the transfer length changing. On the H7 I have the SPI FIFO enabled in 2 data element mode which seems to halve the DMA transaction size. While this doesn't make that much sense on why that happens... I can confirm trying sizes *2 and /2 both don't work and cause issues. This is why the DMA length is unchanged. Only the transfer sizes.
Finally, M4/M7 have a higher target SPI clock speed to ensure they hit a clock divider that can read the image out fast enough (ends up being 11.25 MHz for the M4 and 13.5 MHz on the M7).","Can't do 32-bit transfers to the SPI bus with the M4/M7. The SPI bus for them has only a 16-bit read/write register. So, this switches to 16-bit mode for DMA for them. I have confirmed the FLIR Lepton 1 works on the M4 and M7. The FLIR Lepton 3 didn't work on the M4 because of RAM issues. The Lepton 3 works on the M7.
Regarding the transfer length changing. On the H7 I have the SPI FIFO enabled in 2 data element mode which seems to halve the DMA transaction size. While this doesn't make that much sense on why that happens... I can confirm trying sizes *2 and /2 both don't work and cause issues. This is why the DMA length is unchanged. Only the transfer sizes.
Finally, M4/M7 have a higher target SPI clock speed to ensure they hit a clock divider that can read the image out fast enough (ends up being 11.25 MHz for the M4 and 13.5 MHz on the M7).",True,{}
openmv/openmv,https://github.com/openmv/openmv,1139,2021-01-25T04:14:15Z,2021-01-25T17:34:52Z,2021-01-25T17:34:52Z,MERGED,True,2,2,2,https://github.com/kwagyeman,Re-enable support for these now that the extra code fits,1,[],https://github.com/openmv/openmv/pull/1139,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1139,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1141,2021-01-25T20:09:02Z,2021-01-25T20:37:06Z,2021-01-25T20:37:12Z,MERGED,True,35,11,2,https://github.com/iabdalkader,Sensor shutdown fixes.,2,[],https://github.com/openmv/openmv/pull/1141,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1141,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1142,2021-01-27T15:54:45Z,2021-01-27T16:23:19Z,2021-01-27T16:23:23Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Enable SD HW flow control.,1,[],https://github.com/openmv/openmv/pull/1142,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1142,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1143,2021-01-27T16:39:01Z,2021-01-27T16:55:48Z,2021-01-27T16:55:48Z,MERGED,True,2,2,1,https://github.com/sebromero,Use 2 stop bits for LoRa UART,1,[],https://github.com/openmv/openmv/pull/1143,https://github.com/sebromero,1,https://github.com/openmv/openmv/pull/1143,This enables compatibility with the MKRWAN firmware 1.2.1,This enables compatibility with the MKRWAN firmware 1.2.1,True,{}
openmv/openmv,https://github.com/openmv/openmv,1144,2021-01-28T17:18:11Z,2021-01-28T17:28:13Z,2021-01-28T17:28:13Z,MERGED,True,1,1,1,https://github.com/sebromero,Remove join timeout from example,1,[],https://github.com/openmv/openmv/pull/1144,https://github.com/sebromero,1,https://github.com/openmv/openmv/pull/1144,Leaving it with the default timeout provides a more stable setup.,Leaving it with the default timeout provides a more stable setup.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1146,2021-01-29T04:58:21Z,2021-01-29T18:56:43Z,2021-01-29T18:56:44Z,MERGED,True,29,3,1,https://github.com/kwagyeman,Update ImageIO version,1,[],https://github.com/openmv/openmv/pull/1146,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1146,New files created don't have rgb565 byte reversal. Can read old files with this issue.,New files created don't have rgb565 byte reversal. Can read old files with this issue.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1147,2021-01-29T05:29:16Z,2021-01-29T18:59:47Z,2021-01-29T18:59:47Z,MERGED,True,8,2,2,https://github.com/kwagyeman,Fix issue with an old version of pygame,1,[],https://github.com/openmv/openmv/pull/1147,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1147,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1149,2021-01-31T17:40:11Z,2021-01-31T17:57:44Z,2021-01-31T17:57:44Z,MERGED,True,9,9,3,https://github.com/kwagyeman,Renable IMLIB parts,1,[],https://github.com/openmv/openmv/pull/1149,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1149,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1150,2021-01-31T21:07:29Z,2021-02-02T19:20:02Z,2021-02-02T19:20:02Z,MERGED,True,93,29,3,https://github.com/kwagyeman,Kwabena/flir lepton updates,6,[],https://github.com/openmv/openmv/pull/1150,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1150,"Add a methods to get when new frames are ready from the FLIR Lepton.
Fix the FFC timeout code.","Add a methods to get when new frames are ready from the FLIR Lepton.
Fix the FFC timeout code.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1153,2021-02-05T05:23:12Z,2021-02-05T18:25:49Z,2021-02-05T18:25:49Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix rgb_channel_extraction grayscale selection for TV,1,[],https://github.com/openmv/openmv/pull/1153,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1153,If the user wants rgb channel extraction prefer grayscale.,If the user wants rgb channel extraction prefer grayscale.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1154,2021-02-05T06:36:22Z,2021-02-05T18:26:10Z,2021-02-05T18:26:10Z,MERGED,True,1,0,1,https://github.com/kwagyeman,Fix JPEG Binary Image Compression,1,[],https://github.com/openmv/openmv/pull/1154,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1154,"Fix JPEG Binary Image Compression, handles issues when the image width is not a multiple of 8.","Fix JPEG Binary Image Compression, handles issues when the image width is not a multiple of 8.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1154,2021-02-05T06:36:22Z,2021-02-05T18:26:10Z,2021-02-05T18:26:10Z,MERGED,True,1,0,1,https://github.com/kwagyeman,Fix JPEG Binary Image Compression,1,[],https://github.com/openmv/openmv/pull/1154,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1154#issuecomment-774202661,"Fix JPEG Binary Image Compression, handles issues when the image width is not a multiple of 8.",Is this a bug fix ? Which one @kwagyeman,True,{}
openmv/openmv,https://github.com/openmv/openmv,1158,2021-02-10T21:00:35Z,2021-02-10T21:25:09Z,2021-02-10T21:25:12Z,MERGED,True,3,0,1,https://github.com/iabdalkader,Call gc_sweep_all on soft-reset.,1,[],https://github.com/openmv/openmv/pull/1158,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1158,"Make sure to collect open lwip sockets otherwise it runs out of memory.
This should be okay to add in general but will only enable for LWIP for now.","Make sure to collect open lwip sockets otherwise it runs out of memory.
This should be okay to add in general but will only enable for LWIP for now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1159,2021-02-11T22:08:40Z,2021-02-11T22:21:09Z,2021-02-11T22:21:46Z,MERGED,True,24,7,8,https://github.com/iabdalkader,Make PLL clock source configurable.,1,[],https://github.com/openmv/openmv/pull/1159,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1159,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1161,2021-02-12T01:14:46Z,2021-02-12T01:26:33Z,2021-02-12T01:26:36Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add flags to reserve DMA streams.,1,[],https://github.com/openmv/openmv/pull/1161,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1161,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1162,2021-02-12T22:11:36Z,2021-02-12T22:26:47Z,2021-02-12T22:26:51Z,MERGED,True,2,2,2,https://github.com/iabdalkader,Update LWIP to latest.,1,[],https://github.com/openmv/openmv/pull/1162,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1162,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1163,2021-02-12T22:40:40Z,2021-02-12T23:01:37Z,2021-02-12T23:01:40Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add timeout to cy43 connect.,1,[],https://github.com/openmv/openmv/pull/1163,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1163,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1164,2021-02-12T23:13:05Z,2021-02-12T23:34:32Z,2021-02-12T23:34:36Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Use temporary DMA buffers for SDIO transfers.,1,[],https://github.com/openmv/openmv/pull/1164,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1164,Force SDIO to use DMA transfers to avoid FIFO under/overruns,Force SDIO to use DMA transfers to avoid FIFO under/overruns,True,{}
openmv/openmv,https://github.com/openmv/openmv,1165,2021-02-12T23:20:13Z,2021-02-12T23:34:43Z,2021-02-12T23:34:46Z,MERGED,True,8,0,1,https://github.com/iabdalkader,Make sure pendsv is not masked before stop/exec script.,1,[],https://github.com/openmv/openmv/pull/1165,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1165,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1166,2021-02-12T23:34:52Z,2021-02-13T00:04:21Z,2021-02-13T00:04:24Z,MERGED,True,7,4,1,https://github.com/iabdalkader,Fix CYW43/LWIP and soft-reset bugs.,1,[],https://github.com/openmv/openmv/pull/1166,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1166,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1168,2021-02-14T14:48:55Z,2021-02-14T15:03:25Z,2021-02-14T15:03:28Z,MERGED,True,391,391,197,https://github.com/iabdalkader,Update license date.,1,[],https://github.com/openmv/openmv/pull/1168,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1168,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1169,2021-02-14T19:20:28Z,2021-02-14T19:33:17Z,2021-02-14T19:35:54Z,MERGED,True,123,75,5,https://github.com/iabdalkader,Vsync callback,2,[],https://github.com/openmv/openmv/pull/1169,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1169,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1170,2021-02-14T19:38:54Z,2021-02-14T19:52:45Z,2021-02-14T19:52:49Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix swapped G/B named pins.,1,[],https://github.com/openmv/openmv/pull/1170,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1170,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1171,2021-02-14T21:27:17Z,2021-03-02T17:50:18Z,2021-03-02T17:50:19Z,MERGED,True,377,173,2,https://github.com/kwagyeman,Kwabena/jpeg speedup,1,[],https://github.com/openmv/openmv/pull/1171,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1171,"This PR uses MDMA with the JPEG core along with SIMD code to speed up jpeg compression by a huge amount.
Original Speed
QQVGA RGB (2-3ms) - GS (0-1ms)
QVGA RGB (10-11ms) - GS (2-3ms)
VGA RGB (40-41ms) - GS (10-11ms)
New Speed (2.5X faster generally)
VGA Grayscale: 3-4ms
QVGA Grayscale: 0-1ms
QQVGA Grayscale: 0-1ms
VGA RGB565: 15-16ms
QVGA RGB565: 3-4ms
QQVGA RGB565: 1ms
Tested on the H7 and H7 plus and working fine without issues.","This PR uses MDMA with the JPEG core along with SIMD code to speed up jpeg compression by a huge amount.
Original Speed
QQVGA RGB (2-3ms) - GS (0-1ms)
QVGA RGB (10-11ms) - GS (2-3ms)
VGA RGB (40-41ms) - GS (10-11ms)
New Speed (2.5X faster generally)
VGA Grayscale: 3-4ms
QVGA Grayscale: 0-1ms
QQVGA Grayscale: 0-1ms
VGA RGB565: 15-16ms
QVGA RGB565: 3-4ms
QQVGA RGB565: 1ms
Tested on the H7 and H7 plus and working fine without issues.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1172,2021-02-14T22:08:29Z,2021-02-15T01:23:47Z,2021-02-15T01:23:47Z,MERGED,True,43,1,14,https://github.com/kwagyeman,Make lcd and tv module configurable,1,[],https://github.com/openmv/openmv/pull/1172,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1172,"Requires: openmv/micropython#91
Note sure what's the order of operations for this.","Requires: openmv/micropython#91
Note sure what's the order of operations for this.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1172,2021-02-14T22:08:29Z,2021-02-15T01:23:47Z,2021-02-15T01:23:47Z,MERGED,True,43,1,14,https://github.com/kwagyeman,Make lcd and tv module configurable,1,[],https://github.com/openmv/openmv/pull/1172,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1172#issuecomment-778869203,"Requires: openmv/micropython#91
Note sure what's the order of operations for this.","MP PR merged, need to update the submodule too in this PR then push --force",True,{}
openmv/openmv,https://github.com/openmv/openmv,1173,2021-02-14T23:53:47Z,2021-02-15T18:08:02Z,2021-02-15T18:15:41Z,MERGED,True,58,20,4,https://github.com/kwagyeman,Kwabena/cache alignment,6,[],https://github.com/openmv/openmv/pull/1173,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1173,Add cache alignment support for fb_alloc(). This will let us use fb_alloc for DMA buffers without issues. Also fixed the alignment of the frame buffer and jpeg buffer to be aligned to 32-byte cache lines.,Add cache alignment support for fb_alloc(). This will let us use fb_alloc for DMA buffers without issues. Also fixed the alignment of the frame buffer and jpeg buffer to be aligned to 32-byte cache lines.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1173,2021-02-14T23:53:47Z,2021-02-15T18:08:02Z,2021-02-15T18:15:41Z,MERGED,True,58,20,4,https://github.com/kwagyeman,Kwabena/cache alignment,6,[],https://github.com/openmv/openmv/pull/1173,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1173#issuecomment-778893693,Add cache alignment support for fb_alloc(). This will let us use fb_alloc for DMA buffers without issues. Also fixed the alignment of the frame buffer and jpeg buffer to be aligned to 32-byte cache lines.,"I think you also need to make sure _fballoc and _fballoc_overlay are aligned to 32 bytes in the linker script.
diff --git a/src/omv/ports/stm32/stm32fxxx.ld.S b/src/omv/ports/stm32/stm32fxxx.ld.S
index 8ef281f5..ee8ad163 100755
--- a/src/omv/ports/stm32/stm32fxxx.ld.S
+++ b/src/omv/ports/stm32/stm32fxxx.ld.S
@@ -115,16 +115,18 @@ SECTIONS
     _fb_base = .;
     . = . + OMV_FB_SIZE + OMV_FB_ALLOC_SIZE;
 
-    . = ALIGN(4);
+    . = ALIGN(32);
     _fballoc = .;
-    . = ALIGN(4);
   } >OMV_FB_MEMORY
 
   /* Misc DMA buffers kept in uncachable region */
   .dma_memory (NOLOAD) :
   {
     #if defined(OMV_FB_OVERLAY_MEMORY)
-    . = ALIGN(4) + OMV_FB_OVERLAY_MEMORY_OFFSET;
+    . = ALIGN(4);
+    . = . + OMV_FB_OVERLAY_MEMORY_OFFSET;
+
+    . = ALIGN(32);
     _fballoc_overlay = .;
     #endif",True,{}
openmv/openmv,https://github.com/openmv/openmv,1173,2021-02-14T23:53:47Z,2021-02-15T18:08:02Z,2021-02-15T18:15:41Z,MERGED,True,58,20,4,https://github.com/kwagyeman,Kwabena/cache alignment,6,[],https://github.com/openmv/openmv/pull/1173,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1173#issuecomment-778911735,Add cache alignment support for fb_alloc(). This will let us use fb_alloc for DMA buffers without issues. Also fixed the alignment of the frame buffer and jpeg buffer to be aligned to 32-byte cache lines.,"@iabdalkader  You don't need to do that. The alignment in the code takes care of it. Remember that there are like 4 byte pointers and etc on the stack. So, each alloced region has to be made bigger than necessary and then a pointer returned to an aligned area inside of it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1174,2021-02-15T19:02:36Z,2021-02-15T19:26:44Z,2021-02-15T19:31:42Z,MERGED,True,44,0,1,https://github.com/iabdalkader,Add nrf cambus read/write byte functions.,1,[],https://github.com/openmv/openmv/pull/1174,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1174,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1176,2021-02-18T00:03:44Z,2021-02-18T00:15:29Z,2021-02-18T00:15:31Z,MERGED,True,2,0,1,https://github.com/iabdalkader,Fix py_imu include in py_sensor.,1,[],https://github.com/openmv/openmv/pull/1176,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1176,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1177,2021-02-20T21:55:29Z,2021-02-20T22:44:56Z,2021-02-20T22:44:58Z,MERGED,True,794,1,9,https://github.com/iabdalkader,Add basic OV7670 driver.,1,[],https://github.com/openmv/openmv/pull/1177,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1177,Still needs a lot work.,Still needs a lot work.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1178,2021-02-20T22:48:18Z,2021-02-20T23:00:09Z,2021-02-20T23:00:11Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add MDMA priority.,1,[],https://github.com/openmv/openmv/pull/1178,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1178,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1179,2021-02-20T23:01:56Z,2021-02-20T23:17:03Z,2021-02-20T23:17:08Z,MERGED,True,1110,6,6,https://github.com/iabdalkader,Implement sensor driver for nrf/Nano 33,1,[],https://github.com/openmv/openmv/pull/1179,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1179,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1180,2021-02-21T21:11:54Z,2021-02-21T21:25:03Z,2021-02-21T21:25:06Z,MERGED,True,128,4,4,https://github.com/iabdalkader,Implement Himax motion detection with ioctls.,1,[],https://github.com/openmv/openmv/pull/1180,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1180,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1181,2021-02-22T01:18:01Z,2021-02-22T02:00:03Z,2021-02-22T02:00:07Z,MERGED,True,49,1,5,https://github.com/iabdalkader,Add Himax ioctl to control internal osc.,1,[],https://github.com/openmv/openmv/pull/1181,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1181,"Add ioctl to switch to internal OSC for MD.
Add example to show how to wake up from low-power on MD events.","Add ioctl to switch to internal OSC for MD.
Add example to show how to wake up from low-power on MD events.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1182,2021-02-22T19:48:40Z,2021-02-22T20:04:15Z,2021-02-22T20:05:43Z,MERGED,True,2,1,2,https://github.com/iabdalkader,Enable PORT K for Portenta and Bormio.,1,[],https://github.com/openmv/openmv/pull/1182,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1182,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1183,2021-02-23T17:36:37Z,2021-02-23T18:05:58Z,2021-02-23T18:06:01Z,MERGED,True,2,2,1,https://github.com/iabdalkader,Fix linker script stack alignment for boards with SRAM stack.,1,[],https://github.com/openmv/openmv/pull/1183,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1183,"The stack pointer needs to be aligned to 8 bytes to conform with EABI, most of the boards are configured
to use ITCM for stack, which starts at 0 and are Not affected by the linker script alignment. This patch
fixes the issue with boards that use SRAM for stack which can get misaligned.","The stack pointer needs to be aligned to 8 bytes to conform with EABI, most of the boards are configured
to use ITCM for stack, which starts at 0 and are Not affected by the linker script alignment. This patch
fixes the issue with boards that use SRAM for stack which can get misaligned.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1184,2021-02-24T19:08:02Z,2021-02-24T21:38:44Z,2021-02-24T21:38:44Z,MERGED,True,17,3,3,https://github.com/kwagyeman,Add stubs for init/deinit of the imlib,1,[],https://github.com/openmv/openmv/pull/1184,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1184,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1185,2021-02-24T19:14:41Z,2021-02-24T22:51:18Z,2021-02-24T22:51:18Z,MERGED,True,17,15,3,https://github.com/kwagyeman,Speed up clearing trailing jpeg data,1,[],https://github.com/openmv/openmv/pull/1185,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1185,Puts bpp in a register versus a Read/Write/Modify per byte.,Puts bpp in a register versus a Read/Write/Modify per byte.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1186,2021-02-24T23:28:35Z,2021-02-24T23:33:43Z,2021-02-24T23:33:43Z,MERGED,True,10,0,2,https://github.com/kwagyeman,Update RTSP server and examples to work with FFPLAY,1,[],https://github.com/openmv/openmv/pull/1186,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1186,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1187,2021-02-25T00:00:27Z,2021-02-25T00:37:24Z,2021-02-25T00:37:24Z,MERGED,True,47,26,4,https://github.com/kwagyeman,Keep JPEG core on during script execution,1,[],https://github.com/openmv/openmv/pull/1187,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1187,Speeds up JPEG in a minor way by keeping the core on between compresses.,Speeds up JPEG in a minor way by keeping the core on between compresses.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1188,2021-02-25T00:05:12Z,2021-02-25T01:28:34Z,2021-02-25T01:31:49Z,MERGED,True,16,20,3,https://github.com/kwagyeman,Move fb_alloc_all into jpeg_compress,1,[],https://github.com/openmv/openmv/pull/1188,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1188,Moves fb_alloc_all() into jpeg compress so it has a chance to alloc memory itself before all RAM is used up for the output buffer.,Moves fb_alloc_all() into jpeg compress so it has a chance to alloc memory itself before all RAM is used up for the output buffer.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1189,2021-02-25T01:57:50Z,2021-02-25T02:39:52Z,2021-02-25T02:39:53Z,MERGED,True,53,11,1,https://github.com/kwagyeman,Massively reduces bus usage for SPI LCD,1,[],https://github.com/openmv/openmv/pull/1189,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1189,"Tested on:
M4
M7
H7
All work.
This PR uses a 4 beat AHB burst for reading 4 words of data to output to the LCD in 1 beat of a halfword write on the M4/M7.
For the H7 this uses a 4 beat AHB burst for reading 4 words of data to output to the SPI TX FIFO which will accept 16-bytes of data in a 4 beat AHB word write and then output that data to the LCD in 1 halfword chunks.","Tested on:
M4
M7
H7
All work.
This PR uses a 4 beat AHB burst for reading 4 words of data to output to the LCD in 1 beat of a halfword write on the M4/M7.
For the H7 this uses a 4 beat AHB burst for reading 4 words of data to output to the SPI TX FIFO which will accept 16-bytes of data in a 4 beat AHB word write and then output that data to the LCD in 1 halfword chunks.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1190,2021-02-25T05:40:42Z,2021-02-26T14:09:41Z,2021-02-26T14:09:41Z,MERGED,True,47,3,1,https://github.com/kwagyeman,Use the most efficient data transfers for TV DMA,1,[],https://github.com/openmv/openmv/pull/1190,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1190,"Uses WORD AHB 4 beat bursts for memory access with DMA and:
For the H7 -> 4 Beat WORD Peripheral Writes
For the F7/F4 -> Single Byte Peripheral Writes","Uses WORD AHB 4 beat bursts for memory access with DMA and:
For the H7 -> 4 Beat WORD Peripheral Writes
For the F7/F4 -> Single Byte Peripheral Writes",True,{}
openmv/openmv,https://github.com/openmv/openmv,1191,2021-02-25T05:44:54Z,2021-02-26T16:45:40Z,2021-02-26T16:45:40Z,MERGED,True,13,13,1,https://github.com/kwagyeman,Add alignment for the M4,1,[],https://github.com/openmv/openmv/pull/1191,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1191,Makes fb_alloc() provide 32-byte alignment on the M4 without a cache to ensure DMA memory access alignment rules for not crossing 1KB boundaries. The number could be 16 below but I wanted it to match the F7/H7.,Makes fb_alloc() provide 32-byte alignment on the M4 without a cache to ensure DMA memory access alignment rules for not crossing 1KB boundaries. The number could be 16 below but I wanted it to match the F7/H7.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1192,2021-02-25T05:54:09Z,2021-02-26T14:20:05Z,2021-02-26T14:20:05Z,MERGED,True,4,4,1,https://github.com/kwagyeman,Kwabena/lcd fixes,2,[],https://github.com/openmv/openmv/pull/1192,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1192,"Remove No hint flag when there a hint.
DMA is limited to the largest 16B multiple value under 64K.","Remove No hint flag when there a hint.
DMA is limited to the largest 16B multiple value under 64K.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1193,2021-02-25T21:51:09Z,2021-02-25T22:19:16Z,2021-02-25T22:19:23Z,MERGED,True,12,10,3,https://github.com/iabdalkader,Nano updates,4,[],https://github.com/openmv/openmv/pull/1193,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1193,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1194,2021-02-26T16:54:29Z,2021-02-27T00:40:03Z,2021-02-27T00:40:03Z,MERGED,True,41,11,2,https://github.com/kwagyeman,TV driver SIMD update,1,[],https://github.com/openmv/openmv/pull/1194,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1194,I discovered a faster way of doing this with JPEG and just want to make sure it's used in this code too.,I discovered a faster way of doing this with JPEG and just want to make sure it's used in this code too.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1194,2021-02-26T16:54:29Z,2021-02-27T00:40:03Z,2021-02-27T00:40:03Z,MERGED,True,41,11,2,https://github.com/kwagyeman,TV driver SIMD update,1,[],https://github.com/openmv/openmv/pull/1194,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1194#issuecomment-786920021,I discovered a faster way of doing this with JPEG and just want to make sure it's used in this code too.,"Can you test this first, make sure it's still working ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,1194,2021-02-26T16:54:29Z,2021-02-27T00:40:03Z,2021-02-27T00:40:03Z,MERGED,True,41,11,2,https://github.com/kwagyeman,TV driver SIMD update,1,[],https://github.com/openmv/openmv/pull/1194,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1194#issuecomment-786943442,I discovered a faster way of doing this with JPEG and just want to make sure it's used in this code too.,"Yes, I already did that.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1195,2021-02-28T18:03:31Z,2022-01-22T20:57:56Z,2022-01-22T20:57:56Z,MERGED,True,68,17,7,https://github.com/kwagyeman,Add support for the OV5640 to the Arduino Portenta,1,[],https://github.com/openmv/openmv/pull/1195,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1195,Sets the PCLK to 70 MHz and gets it working.,Sets the PCLK to 70 MHz and gets it working.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1195,2021-02-28T18:03:31Z,2022-01-22T20:57:56Z,2022-01-22T20:57:56Z,MERGED,True,68,17,7,https://github.com/kwagyeman,Add support for the OV5640 to the Arduino Portenta,1,[],https://github.com/openmv/openmv/pull/1195,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1195#issuecomment-851124057,Sets the PCLK to 70 MHz and gets it working.,"Work in progress commit. Restructured code to meet previous comments. Everything is defined in headers now.
That said, OV5640 camera appears to pass probe and the clock is set to the right freq... however, all I2C accesses after the probe fail. Not sure what's wrong. Was hoping it would just work and not take a lot of time to fix. Will need to debug later after reviewing new designs.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1195,2021-02-28T18:03:31Z,2022-01-22T20:57:56Z,2022-01-22T20:57:56Z,MERGED,True,68,17,7,https://github.com/kwagyeman,Add support for the OV5640 to the Arduino Portenta,1,[],https://github.com/openmv/openmv/pull/1195,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1195#issuecomment-1013977196,Sets the PCLK to 70 MHz and gets it working.,This is mergeable now. Portena OV5640 works at 30 FPS.,True,{'HOORAY': ['https://github.com/sebromero']}
openmv/openmv,https://github.com/openmv/openmv,1195,2021-02-28T18:03:31Z,2022-01-22T20:57:56Z,2022-01-22T20:57:56Z,MERGED,True,68,17,7,https://github.com/kwagyeman,Add support for the OV5640 to the Arduino Portenta,1,[],https://github.com/openmv/openmv/pull/1195,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1195#issuecomment-1018173952,Sets the PCLK to 70 MHz and gets it working.,Merge please.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1196,2021-03-01T02:29:24Z,2021-03-01T02:30:42Z,2021-03-01T02:30:42Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix autofocus logic,1,[],https://github.com/openmv/openmv/pull/1196,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1196,Fix address byte reversal.,Fix address byte reversal.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1197,2021-03-01T04:01:37Z,2021-03-02T01:57:30Z,2021-03-02T01:57:30Z,MERGED,True,2,0,1,https://github.com/kdarras,Update and rename tf_mobilenet_serach_just_center.py to tf_mobilenet_…,1,[],https://github.com/openmv/openmv/pull/1197,https://github.com/kdarras,1,https://github.com/openmv/openmv/pull/1197,"…search_just_center.py
added instructions to make the script work without errors","…search_just_center.py
added instructions to make the script work without errors",True,{}
openmv/openmv,https://github.com/openmv/openmv,1197,2021-03-01T04:01:37Z,2021-03-02T01:57:30Z,2021-03-02T01:57:30Z,MERGED,True,2,0,1,https://github.com/kdarras,Update and rename tf_mobilenet_serach_just_center.py to tf_mobilenet_…,1,[],https://github.com/openmv/openmv/pull/1197,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1197#issuecomment-788102607,"…search_just_center.py
added instructions to make the script work without errors","@kdarras Hello, thank you for these fixes...Can you please also update/fix the same two examples in scripts/examples/Arduino/Portenta-H7/25-Machine-Learning ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,1197,2021-03-01T04:01:37Z,2021-03-02T01:57:30Z,2021-03-02T01:57:30Z,MERGED,True,2,0,1,https://github.com/kdarras,Update and rename tf_mobilenet_serach_just_center.py to tf_mobilenet_…,1,[],https://github.com/openmv/openmv/pull/1197,https://github.com/kdarras,3,https://github.com/openmv/openmv/pull/1197#issuecomment-788514708,"…search_just_center.py
added instructions to make the script work without errors","sure thing, done. I wasn't sure whether this applies to the other board as well",True,{}
openmv/openmv,https://github.com/openmv/openmv,1198,2021-03-01T04:03:20Z,2021-03-02T01:58:48Z,2021-03-02T01:58:48Z,MERGED,True,2,0,1,https://github.com/kdarras,Update tf_mobilenet_search_whole_window.py,1,[],https://github.com/openmv/openmv/pull/1198,https://github.com/kdarras,1,https://github.com/openmv/openmv/pull/1198,added instructions to make the script work without errors,added instructions to make the script work without errors,True,{}
openmv/openmv,https://github.com/openmv/openmv,1199,2021-03-02T01:52:04Z,2021-03-02T01:59:20Z,2021-03-02T01:59:20Z,MERGED,True,2,0,1,https://github.com/kdarras,Update tf_mobilenet_search_just_center.py,2,[],https://github.com/openmv/openmv/pull/1199,https://github.com/kdarras,1,https://github.com/openmv/openmv/pull/1199,added instructions to run script without errors,added instructions to run script without errors,True,{}
openmv/openmv,https://github.com/openmv/openmv,1200,2021-03-02T01:52:53Z,2021-03-02T01:59:51Z,2021-03-02T01:59:51Z,MERGED,True,2,0,1,https://github.com/kdarras,Update tf_mobilenet_search_whole_window.py,1,[],https://github.com/openmv/openmv/pull/1200,https://github.com/kdarras,1,https://github.com/openmv/openmv/pull/1200,added instructions to run script without errors,added instructions to run script without errors,True,{}
openmv/openmv,https://github.com/openmv/openmv,1201,2021-03-03T06:25:02Z,2021-03-03T23:29:39Z,2021-03-03T23:29:39Z,MERGED,True,20,12,1,https://github.com/kwagyeman,Improve FLIR module DMA efficiency,1,[],https://github.com/openmv/openmv/pull/1201,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1201,"Were are transferring 328 bytes which is not a multiple of 16 so we cannot use INC4 modes with WORDS. So, this just tries to be a little bit more efficient with DMA FIFOs. But, doesn't have any burst size improvements.
Also fixes to the clock being too slow on the H7 for the FLIR LEPTON 3.","Were are transferring 328 bytes which is not a multiple of 16 so we cannot use INC4 modes with WORDS. So, this just tries to be a little bit more efficient with DMA FIFOs. But, doesn't have any burst size improvements.
Also fixes to the clock being too slow on the H7 for the FLIR LEPTON 3.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1202,2021-03-03T06:25:55Z,2021-03-04T13:34:43Z,2021-03-04T13:34:43Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Subtle max limit improvement for SPI LCD DMA.,1,[],https://github.com/openmv/openmv/pull/1202,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1202,Since the DMA system is talking in halfwords and not bytes this is 16/2=8.,Since the DMA system is talking in halfwords and not bytes this is 16/2=8.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1202,2021-03-03T06:25:55Z,2021-03-04T13:34:43Z,2021-03-04T13:34:43Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Subtle max limit improvement for SPI LCD DMA.,1,[],https://github.com/openmv/openmv/pull/1202,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1202#issuecomment-790304867,Since the DMA system is talking in halfwords and not bytes this is 16/2=8.,It works. Tested.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1203,2021-03-03T19:34:38Z,2021-03-03T19:56:24Z,2021-03-03T19:56:30Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Allow boards to define SDMMC instance for SD card and WiFi explicitly.,1,[],https://github.com/openmv/openmv/pull/1203,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1203,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1204,2021-03-03T19:41:16Z,2021-03-03T20:10:48Z,2021-03-03T20:14:01Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add Ethernet low power functions.,1,[],https://github.com/openmv/openmv/pull/1204,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1204,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1205,2021-03-04T21:50:57Z,2021-03-04T22:04:27Z,2021-03-04T22:04:30Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix the SDMMC used in CYW43 driver.,1,[],https://github.com/openmv/openmv/pull/1205,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1205,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1206,2021-03-05T18:26:28Z,2021-03-07T23:32:55Z,2021-03-07T23:32:55Z,CLOSED,False,24,21,5,https://github.com/kwagyeman,Move all DMA buffers to SRAM3,1,[],https://github.com/openmv/openmv/pull/1206,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1206,"This PR moves all the DMA buffers for H7 based OpenMV Cam's to SRAM3. This must be done to get the camera DMA off the D2-to-D1 AHB bus which can get busy and bottlenecked when another DMA stream is reading data from SDRAM/AXI_RAM over the D2-to-D1 AHB bus.

From this diagram above you can see that if any DMA master in the D2 domain wants to access SDRAM/AXI_RAM there's only one bus to the D1 domain to do so. This means that if the camera DMA needs to write to D1 domain and another DMA master is reading/writing SDRAM/AXI_RAM then the camera DMA has to wait. Note that there's no QoS for the AHB matrix in domain D2. So, there's no priority fix you can do here if multiple DMA masters need to use the same resource.
Because of the shallow depth of the camera DMA fifos you can't really delay that long without the loss of data. So, by moving the DMA buffer much closer to the DMA engine we remove it being blocked for a long time when trying to write data.
...
I tested the changes on the H7 Plus. Using the TV shield with the OV5640 with triple buffering used to crash. It does not anymore.
I tested the changes on the OpenMV Pure Thermal. Using the LCD Output, plus reading the FLIR, plus running the OV5640 used to crash. It does not anymore.
I tested the changes on the Portenta. It continues to work as normal.","This PR moves all the DMA buffers for H7 based OpenMV Cam's to SRAM3. This must be done to get the camera DMA off the D2-to-D1 AHB bus which can get busy and bottlenecked when another DMA stream is reading data from SDRAM/AXI_RAM over the D2-to-D1 AHB bus.

From this diagram above you can see that if any DMA master in the D2 domain wants to access SDRAM/AXI_RAM there's only one bus to the D1 domain to do so. This means that if the camera DMA needs to write to D1 domain and another DMA master is reading/writing SDRAM/AXI_RAM then the camera DMA has to wait. Note that there's no QoS for the AHB matrix in domain D2. So, there's no priority fix you can do here if multiple DMA masters need to use the same resource.
Because of the shallow depth of the camera DMA fifos you can't really delay that long without the loss of data. So, by moving the DMA buffer much closer to the DMA engine we remove it being blocked for a long time when trying to write data.
...
I tested the changes on the H7 Plus. Using the TV shield with the OV5640 with triple buffering used to crash. It does not anymore.
I tested the changes on the OpenMV Pure Thermal. Using the LCD Output, plus reading the FLIR, plus running the OV5640 used to crash. It does not anymore.
I tested the changes on the Portenta. It continues to work as normal.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1206,2021-03-05T18:26:28Z,2021-03-07T23:32:55Z,2021-03-07T23:32:55Z,CLOSED,False,24,21,5,https://github.com/kwagyeman,Move all DMA buffers to SRAM3,1,[],https://github.com/openmv/openmv/pull/1206,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1206#issuecomment-792303553,"This PR moves all the DMA buffers for H7 based OpenMV Cam's to SRAM3. This must be done to get the camera DMA off the D2-to-D1 AHB bus which can get busy and bottlenecked when another DMA stream is reading data from SDRAM/AXI_RAM over the D2-to-D1 AHB bus.

From this diagram above you can see that if any DMA master in the D2 domain wants to access SDRAM/AXI_RAM there's only one bus to the D1 domain to do so. This means that if the camera DMA needs to write to D1 domain and another DMA master is reading/writing SDRAM/AXI_RAM then the camera DMA has to wait. Note that there's no QoS for the AHB matrix in domain D2. So, there's no priority fix you can do here if multiple DMA masters need to use the same resource.
Because of the shallow depth of the camera DMA fifos you can't really delay that long without the loss of data. So, by moving the DMA buffer much closer to the DMA engine we remove it being blocked for a long time when trying to write data.
...
I tested the changes on the H7 Plus. Using the TV shield with the OV5640 with triple buffering used to crash. It does not anymore.
I tested the changes on the OpenMV Pure Thermal. Using the LCD Output, plus reading the FLIR, plus running the OV5640 used to crash. It does not anymore.
I tested the changes on the Portenta. It continues to work as normal.","Keep this open, will send a PR to add a DMA region in each domain, then you can rebase and change the misc DMA buffers memory, and be able to reserve DMA buffers in a specific domain.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1207,2021-03-06T17:55:32Z,2021-03-06T18:08:22Z,2021-03-06T18:08:22Z,MERGED,True,79,44,1,https://github.com/iabdalkader,Update HM01B0 driver.,1,[],https://github.com/openmv/openmv/pull/1207,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1207,"Fix set_auto_exposure.
Implement get_exposure_us.
Implement set_gainceiling.
Implement set_colorbar.
Implement set_auto_gain.
Implement get_gain_db.
Remove unimplemented functions.","Fix set_auto_exposure.
Implement get_exposure_us.
Implement set_gainceiling.
Implement set_colorbar.
Implement set_auto_gain.
Implement get_gain_db.
Remove unimplemented functions.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1208,2021-03-07T04:42:34Z,2021-03-07T16:15:49Z,2021-03-07T16:15:49Z,MERGED,True,18,18,1,https://github.com/kwagyeman,Fix LCD output polarity,1,[],https://github.com/openmv/openmv/pull/1208,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1208,Some monitors don't care. Some do. This complies with the VESA CVT-RB Version 2 Standard.,Some monitors don't care. Some do. This complies with the VESA CVT-RB Version 2 Standard.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1209,2021-03-07T20:09:01Z,2021-03-07T21:27:20Z,2021-03-07T21:27:23Z,MERGED,True,199,67,9,https://github.com/iabdalkader,Add DMA regions in each domain.,1,[],https://github.com/openmv/openmv/pull/1209,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1209,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1210,2021-03-07T23:33:18Z,2021-03-08T00:12:33Z,2021-03-08T00:12:33Z,MERGED,True,44,40,6,https://github.com/kwagyeman,Move DMA buffers around to fix bus contention and save RAM,1,[],https://github.com/openmv/openmv/pull/1210,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1210,"This PR moves all the DMA buffers for H7 based OpenMV Cam's to SRAM3. This must be done to get the camera DMA off the D2-to-D1 AHB bus which can get busy and bottlenecked when another DMA stream is reading data from SDRAM/AXI_RAM over the D2-to-D1 AHB bus.

From this diagram above you can see that if any DMA master in the D2 domain wants to access SDRAM/AXI_RAM there's only one bus to the D1 domain to do so. This means that if the camera DMA needs to write to D1 domain and another DMA master is reading/writing SDRAM/AXI_RAM then the camera DMA has to wait. Note that there's no QoS for the AHB matrix in domain D2. So, there's no priority fix you can do here if multiple DMA masters need to use the same resource.
Because of the shallow depth of the camera DMA fifos you can't really delay that long without the loss of data. So, by moving the DMA buffer much closer to the DMA engine we remove it being blocked for a long time when trying to write data.
...
I tested the changes on the H7 Plus. Using the TV shield with the OV5640 with triple buffering used to crash. It does not anymore.
I tested the changes on the OpenMV Pure Thermal. Using the LCD Output, plus reading the FLIR, plus running the OV5640 used to crash. It does not anymore.
I tested the changes on the Portenta. It continues to work as normal. WIFI was tested and works.
I also tested on the H7 regular and that works fine too.
...
Future todos. The SD card DMA buffer is placed in D1. Both SDMMC masters can access it there. However, it should be split into 2 buffers in both DMA regions per SDMMC channel.
Additionally, other DMA masters should have their buffers placed in the right domains.","This PR moves all the DMA buffers for H7 based OpenMV Cam's to SRAM3. This must be done to get the camera DMA off the D2-to-D1 AHB bus which can get busy and bottlenecked when another DMA stream is reading data from SDRAM/AXI_RAM over the D2-to-D1 AHB bus.

From this diagram above you can see that if any DMA master in the D2 domain wants to access SDRAM/AXI_RAM there's only one bus to the D1 domain to do so. This means that if the camera DMA needs to write to D1 domain and another DMA master is reading/writing SDRAM/AXI_RAM then the camera DMA has to wait. Note that there's no QoS for the AHB matrix in domain D2. So, there's no priority fix you can do here if multiple DMA masters need to use the same resource.
Because of the shallow depth of the camera DMA fifos you can't really delay that long without the loss of data. So, by moving the DMA buffer much closer to the DMA engine we remove it being blocked for a long time when trying to write data.
...
I tested the changes on the H7 Plus. Using the TV shield with the OV5640 with triple buffering used to crash. It does not anymore.
I tested the changes on the OpenMV Pure Thermal. Using the LCD Output, plus reading the FLIR, plus running the OV5640 used to crash. It does not anymore.
I tested the changes on the Portenta. It continues to work as normal. WIFI was tested and works.
I also tested on the H7 regular and that works fine too.
...
Future todos. The SD card DMA buffer is placed in D1. Both SDMMC masters can access it there. However, it should be split into 2 buffers in both DMA regions per SDMMC channel.
Additionally, other DMA masters should have their buffers placed in the right domains.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1211,2021-03-07T23:48:32Z,2021-03-08T00:41:06Z,2021-03-08T00:41:06Z,MERGED,True,5,10,6,https://github.com/kwagyeman,Cleanup FB_ALLOC_OVERLAY pointers,1,[],https://github.com/openmv/openmv/pull/1211,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1211,Per Ibrahim's request.,Per Ibrahim's request.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1212,2021-03-08T00:59:40Z,2021-03-08T01:37:49Z,2021-03-08T01:37:51Z,MERGED,True,2,2,2,https://github.com/iabdalkader,Cleanup QSPI flash config.,1,[],https://github.com/openmv/openmv/pull/1212,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1212,"Remove unused softqspi protocol.
Move QSPI flash to data memory, to free the DTCM.","Remove unused softqspi protocol.
Move QSPI flash to data memory, to free the DTCM.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1213,2021-03-08T03:37:55Z,2021-03-09T15:45:53Z,2021-03-09T15:45:53Z,MERGED,True,100,0,4,https://github.com/kwagyeman,Add AXI QOS to make LCD output stable,1,[],https://github.com/openmv/openmv/pull/1213,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1213,"This PR lets you set the AXI priority on the H7 per read/write channel.
For the OpenMV Pure Thermal and Portenta which have the ability to drive external displays this PR gives the LTDC the maximum priority ensuring that the display stays stable even when other masters are using it.
MDMA is give the next highest priority for future continuous camera image data capture reading from DMA2's line buffer and write back to the main frame buffer.
...
Note, while this PR helps with giving the LTDC controller better SDRAM bandwidth when other masters are using the bus it does not prevent other masters from switching SDRAM banks between LTDC access which lowers the SDRAM performance. So, you still can't actually display image data from the camera and have the processor manipulate it at 1080p@60Hz or UXGA@60Hz. However, SDRAM has enough bandwidth for everything at 1280x720@60Hz - this resolution looks crisp and clean.","This PR lets you set the AXI priority on the H7 per read/write channel.
For the OpenMV Pure Thermal and Portenta which have the ability to drive external displays this PR gives the LTDC the maximum priority ensuring that the display stays stable even when other masters are using it.
MDMA is give the next highest priority for future continuous camera image data capture reading from DMA2's line buffer and write back to the main frame buffer.
...
Note, while this PR helps with giving the LTDC controller better SDRAM bandwidth when other masters are using the bus it does not prevent other masters from switching SDRAM banks between LTDC access which lowers the SDRAM performance. So, you still can't actually display image data from the camera and have the processor manipulate it at 1080p@60Hz or UXGA@60Hz. However, SDRAM has enough bandwidth for everything at 1280x720@60Hz - this resolution looks crisp and clean.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1214,2021-03-08T20:22:23Z,2021-03-08T20:43:26Z,2021-03-08T20:43:29Z,MERGED,True,2,2,2,https://github.com/iabdalkader,Allow FFS cache to not be defined.,1,[],https://github.com/openmv/openmv/pull/1214,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1214,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1215,2021-03-08T20:44:44Z,2021-03-08T20:46:10Z,2021-03-08T20:46:14Z,CLOSED,False,3,4,1,https://github.com/iabdalkader,PORTENTA: Move stack to DTCM.,1,[],https://github.com/openmv/openmv/pull/1215,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1215,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1216,2021-03-08T20:49:39Z,2021-03-08T21:39:11Z,2021-03-08T21:39:20Z,MERGED,True,6,10,4,https://github.com/iabdalkader,Move stack to DTCM/ITCM on QSPI boards.,1,[],https://github.com/openmv/openmv/pull/1216,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1216,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1217,2021-03-09T06:11:07Z,2021-03-09T23:43:19Z,2021-03-09T23:43:19Z,MERGED,True,24,16,10,https://github.com/kwagyeman,Use DMA buffer for FIR Lepton,1,[],https://github.com/openmv/openmv/pull/1217,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1217,"Moves the FIR Lepton DMA buffer from fb_alloc to the DMA buffer area.
...
On the STM32H7 this moves the DMA buffer into region D2 getting bus traffic off of the D2->D1 AHB bus.
...
We should change the DMA buffer defines to the necessary byte size. It will save RAM. Right now they are bigger than needed.","Moves the FIR Lepton DMA buffer from fb_alloc to the DMA buffer area.
...
On the STM32H7 this moves the DMA buffer into region D2 getting bus traffic off of the D2->D1 AHB bus.
...
We should change the DMA buffer defines to the necessary byte size. It will save RAM. Right now they are bigger than needed.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1218,2021-03-09T18:32:25Z,2021-03-09T23:30:49Z,2021-03-30T17:17:43Z,MERGED,True,271,23,11,https://github.com/iabdalkader,Add DMA buffer allocator,2,[],https://github.com/openmv/openmv/pull/1218,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1218,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1218,2021-03-09T18:32:25Z,2021-03-09T23:30:49Z,2021-03-30T17:17:43Z,MERGED,True,271,23,11,https://github.com/iabdalkader,Add DMA buffer allocator,2,[],https://github.com/openmv/openmv/pull/1218,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1218#issuecomment-794495448,,I'd make the min block size like 128 bytes. This allows the size to more tightly fit dma regions.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1219,2021-03-14T04:17:53Z,2021-03-15T18:46:52Z,2021-03-15T18:46:52Z,MERGED,True,393,178,3,https://github.com/kwagyeman,Kwabena/mt9v034 refactor,3,[],https://github.com/openmv/openmv/pull/1219,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1219,"Add support for readout control
Fix issues with the aec/agc logic

Fixes this bug: #1160","Add support for readout control
Fix issues with the aec/agc logic

Fixes this bug: #1160",True,{}
openmv/openmv,https://github.com/openmv/openmv,1220,2021-03-14T20:27:49Z,2021-03-14T20:40:48Z,2021-03-14T20:40:48Z,MERGED,True,2,2,2,https://github.com/kwagyeman,Reduce DMA buffer size,1,[],https://github.com/openmv/openmv/pull/1220,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1220,Fixes the compile.,Fixes the compile.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1221,2021-03-14T22:46:18Z,2021-03-16T00:44:13Z,2021-03-16T00:44:14Z,MERGED,True,130,77,1,https://github.com/bitbank2,Sped up jpeg bayer_to_ycbcr for encode,1,[],https://github.com/openmv/openmv/pull/1221,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/1221,I changed the bayer_to_ycbcr code for jpeg encode to separate the boundary checking part into a separate path and made use of unaligned reads to speed up the data gathering.,I changed the bayer_to_ycbcr code for jpeg encode to separate the boundary checking part into a separate path and made use of unaligned reads to speed up the data gathering.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1221,2021-03-14T22:46:18Z,2021-03-16T00:44:13Z,2021-03-16T00:44:14Z,MERGED,True,130,77,1,https://github.com/bitbank2,Sped up jpeg bayer_to_ycbcr for encode,1,[],https://github.com/openmv/openmv/pull/1221,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1221#issuecomment-798994855,I changed the bayer_to_ycbcr code for jpeg encode to separate the boundary checking part into a separate path and made use of unaligned reads to speed up the data gathering.,"Nice, this reduced the latency from 40ms to 28/29ms",True,{}
openmv/openmv,https://github.com/openmv/openmv,1222,2021-03-14T22:49:42Z,2021-03-15T18:47:43Z,2021-03-15T18:47:43Z,MERGED,True,2,4,1,https://github.com/kwagyeman,Make cambus reinit standard for all boards,1,[],https://github.com/openmv/openmv/pull/1222,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1222,If you kill a script in the middle of an I2C access to the camera you get a cambus lockup and have to reset the board.,If you kill a script in the middle of an I2C access to the camera you get a cambus lockup and have to reset the board.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1223,2021-03-15T01:44:05Z,2021-03-15T18:01:50Z,2021-03-15T18:01:50Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix missing 0,1,[],https://github.com/openmv/openmv/pull/1223,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1223,Missing zero was causing everything to use VCO wide.,Missing zero was causing everything to use VCO wide.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1224,2021-03-15T05:27:48Z,2021-03-15T18:38:31Z,2021-03-15T18:38:31Z,MERGED,True,172,1,15,https://github.com/kwagyeman,Add support for the new buzzer module,1,[],https://github.com/openmv/openmv/pull/1224,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1224,This is on the OpenMV PT and new Portenta Shield.,This is on the OpenMV PT and new Portenta Shield.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1225,2021-03-15T05:35:05Z,2021-03-16T00:43:48Z,2021-03-16T00:43:48Z,MERGED,True,12,4,2,https://github.com/kwagyeman,Filled out PWM TIMER init for FLIR/LCD,1,[],https://github.com/openmv/openmv/pull/1225,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1225,"TIM_ETRPRESCALER_DIV1 is not a valid prescaler value. It happens to be 0 which is what we want but it's not the right define.
Also, filled in other fields with defaults.","TIM_ETRPRESCALER_DIV1 is not a valid prescaler value. It happens to be 0 which is what we want but it's not the right define.
Also, filled in other fields with defaults.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1225,2021-03-15T05:35:05Z,2021-03-16T00:43:48Z,2021-03-16T00:43:48Z,MERGED,True,12,4,2,https://github.com/kwagyeman,Filled out PWM TIMER init for FLIR/LCD,1,[],https://github.com/openmv/openmv/pull/1225,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1225#issuecomment-799665999,"TIM_ETRPRESCALER_DIV1 is not a valid prescaler value. It happens to be 0 which is what we want but it's not the right define.
Also, filled in other fields with defaults.",Please edit commit message/title to something meaningful for the change log.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1225,2021-03-15T05:35:05Z,2021-03-16T00:43:48Z,2021-03-16T00:43:48Z,MERGED,True,12,4,2,https://github.com/kwagyeman,Filled out PWM TIMER init for FLIR/LCD,1,[],https://github.com/openmv/openmv/pull/1225,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1225#issuecomment-799667297,"TIM_ETRPRESCALER_DIV1 is not a valid prescaler value. It happens to be 0 which is what we want but it's not the right define.
Also, filled in other fields with defaults.",Done,True,{}
openmv/openmv,https://github.com/openmv/openmv,1227,2021-03-15T19:18:49Z,2021-03-15T19:39:35Z,2021-03-15T19:39:39Z,MERGED,True,390,15,9,https://github.com/iabdalkader,Add support for generating Cortex-M4 firmware.,1,[],https://github.com/openmv/openmv/pull/1227,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1227,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1228,2021-03-15T22:34:21Z,2021-03-15T23:18:28Z,2021-03-15T23:19:59Z,MERGED,True,204,0,3,https://github.com/iabdalkader,Add USB3320 ULPI driver.,1,[],https://github.com/openmv/openmv/pull/1228,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1228,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1229,2021-03-16T00:25:02Z,2021-03-16T00:37:01Z,2021-03-16T00:37:04Z,MERGED,True,1,1,1,https://github.com/iabdalkader,PORTENTA: low-power mode fixes.,1,[],https://github.com/openmv/openmv/pull/1229,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1229,"Fix PMIC SW1 current limit.
Fix Ethernet low power functions.
Switch ULPI to low power mode.","Fix PMIC SW1 current limit.
Fix Ethernet low power functions.
Switch ULPI to low power mode.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1231,2021-03-17T03:53:58Z,2021-03-17T21:19:28Z,2021-03-17T21:19:28Z,MERGED,True,364,183,1,https://github.com/kwagyeman,Speed debayering to 19.5ms for VGA,1,[],https://github.com/openmv/openmv/pull/1231,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1231,"Brings JPEG debayering down to:
VGA -> 19-20ms
QVGA -> 5-6ms
QQVGA -> 0-1ms
So, this is above 50 Hz FPS. Woot!
...
The code also implements quite correct boundary checking. I tested with different resolutions of bayer using set_windowing() down to 8x8 from 640x480 and it has no problems.
The fast speed is achieved by two loops for the inner parts of the image and the outer parts of the image.
...
Larry's improved code works for the M4/M7 still. The H7 is maxed out with my new code.","Brings JPEG debayering down to:
VGA -> 19-20ms
QVGA -> 5-6ms
QQVGA -> 0-1ms
So, this is above 50 Hz FPS. Woot!
...
The code also implements quite correct boundary checking. I tested with different resolutions of bayer using set_windowing() down to 8x8 from 640x480 and it has no problems.
The fast speed is achieved by two loops for the inner parts of the image and the outer parts of the image.
...
Larry's improved code works for the M4/M7 still. The H7 is maxed out with my new code.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1232,2021-03-17T17:00:01Z,2021-03-25T18:06:20Z,2021-03-27T22:26:47Z,MERGED,True,133,179,115,https://github.com/sebromero,Portenta example fixes,3,[],https://github.com/openmv/openmv/pull/1232,https://github.com/sebromero,1,https://github.com/openmv/openmv/pull/1232,"This PR removes the incompatible function calls to sensor.set_auto_whitebal.
It also replaces all occurrences of sensor.RGB565 with sensor.GRAYSCALE
There is already some magic replacement happening for the pixel format in the IDE but it doesn't work for all occurrences. alloc_extra_fb calls contain a reference to the pixel format too which doesn't get replaced.","This PR removes the incompatible function calls to sensor.set_auto_whitebal.
It also replaces all occurrences of sensor.RGB565 with sensor.GRAYSCALE
There is already some magic replacement happening for the pixel format in the IDE but it doesn't work for all occurrences. alloc_extra_fb calls contain a reference to the pixel format too which doesn't get replaced.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1232,2021-03-17T17:00:01Z,2021-03-25T18:06:20Z,2021-03-27T22:26:47Z,MERGED,True,133,179,115,https://github.com/sebromero,Portenta example fixes,3,[],https://github.com/openmv/openmv/pull/1232,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1232#issuecomment-801269806,"This PR removes the incompatible function calls to sensor.set_auto_whitebal.
It also replaces all occurrences of sensor.RGB565 with sensor.GRAYSCALE
There is already some magic replacement happening for the pixel format in the IDE but it doesn't work for all occurrences. alloc_extra_fb calls contain a reference to the pixel format too which doesn't get replaced.","This should be removed from the deep sleep example:
# Enable sensor softsleep
sensor.sleep(True)

# Optionally bypass the regulator on OV7725
# for the lowest possible power consumption.
if (sensor.get_id() == sensor.OV7725):
    # Bypass internal regulator
    sensor.__write_reg(0x4F, 0x18)",True,{'EYES': ['https://github.com/sebromero']}
openmv/openmv,https://github.com/openmv/openmv,1232,2021-03-17T17:00:01Z,2021-03-25T18:06:20Z,2021-03-27T22:26:47Z,MERGED,True,133,179,115,https://github.com/sebromero,Portenta example fixes,3,[],https://github.com/openmv/openmv/pull/1232,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1232#issuecomment-803656812,"This PR removes the incompatible function calls to sensor.set_auto_whitebal.
It also replaces all occurrences of sensor.RGB565 with sensor.GRAYSCALE
There is already some magic replacement happening for the pixel format in the IDE but it doesn't work for all occurrences. alloc_extra_fb calls contain a reference to the pixel format too which doesn't get replaced.",@sebromero want me to merge this and fix the deepsleep example or are you going to fix it ?,True,{}
openmv/openmv,https://github.com/openmv/openmv,1232,2021-03-17T17:00:01Z,2021-03-25T18:06:20Z,2021-03-27T22:26:47Z,MERGED,True,133,179,115,https://github.com/sebromero,Portenta example fixes,3,[],https://github.com/openmv/openmv/pull/1232,https://github.com/sebromero,4,https://github.com/openmv/openmv/pull/1232#issuecomment-803670105,"This PR removes the incompatible function calls to sensor.set_auto_whitebal.
It also replaces all occurrences of sensor.RGB565 with sensor.GRAYSCALE
There is already some magic replacement happening for the pixel format in the IDE but it doesn't work for all occurrences. alloc_extra_fb calls contain a reference to the pixel format too which doesn't get replaced.",@iabdalkader Done,True,{}
openmv/openmv,https://github.com/openmv/openmv,1232,2021-03-17T17:00:01Z,2021-03-25T18:06:20Z,2021-03-27T22:26:47Z,MERGED,True,133,179,115,https://github.com/sebromero,Portenta example fixes,3,[],https://github.com/openmv/openmv/pull/1232,https://github.com/iabdalkader,5,https://github.com/openmv/openmv/pull/1232#issuecomment-803681984,"This PR removes the incompatible function calls to sensor.set_auto_whitebal.
It also replaces all occurrences of sensor.RGB565 with sensor.GRAYSCALE
There is already some magic replacement happening for the pixel format in the IDE but it doesn't work for all occurrences. alloc_extra_fb calls contain a reference to the pixel format too which doesn't get replaced.","@sebromero  I just noticed that a few examples actually assume RGB more than just setting the format, for example in a few scripts there's drawing with color triplets.. The code should be able to handle that, meaning it will probably just read the first value, but the colors will be wrong. Would you like to fix this now or merge as is ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,1232,2021-03-17T17:00:01Z,2021-03-25T18:06:20Z,2021-03-27T22:26:47Z,MERGED,True,133,179,115,https://github.com/sebromero,Portenta example fixes,3,[],https://github.com/openmv/openmv/pull/1232,https://github.com/sebromero,6,https://github.com/openmv/openmv/pull/1232#issuecomment-803835709,"This PR removes the incompatible function calls to sensor.set_auto_whitebal.
It also replaces all occurrences of sensor.RGB565 with sensor.GRAYSCALE
There is already some magic replacement happening for the pixel format in the IDE but it doesn't work for all occurrences. alloc_extra_fb calls contain a reference to the pixel format too which doesn't get replaced.","@iabdalkader Oh, sorry I didn't see that. Would probably be good to fix it before we merge. Or if you'd like to help with this, you could merge and fix it in a separate branch. Up to you.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1232,2021-03-17T17:00:01Z,2021-03-25T18:06:20Z,2021-03-27T22:26:47Z,MERGED,True,133,179,115,https://github.com/sebromero,Portenta example fixes,3,[],https://github.com/openmv/openmv/pull/1232,https://github.com/iabdalkader,7,https://github.com/openmv/openmv/pull/1232#issuecomment-804115728,"This PR removes the incompatible function calls to sensor.set_auto_whitebal.
It also replaces all occurrences of sensor.RGB565 with sensor.GRAYSCALE
There is already some magic replacement happening for the pixel format in the IDE but it doesn't work for all occurrences. alloc_extra_fb calls contain a reference to the pixel format too which doesn't get replaced.",@sebromero Let me take a look and see what needs to be fixed.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1232,2021-03-17T17:00:01Z,2021-03-25T18:06:20Z,2021-03-27T22:26:47Z,MERGED,True,133,179,115,https://github.com/sebromero,Portenta example fixes,3,[],https://github.com/openmv/openmv/pull/1232,https://github.com/iabdalkader,8,https://github.com/openmv/openmv/pull/1232#issuecomment-807204294,"This PR removes the incompatible function calls to sensor.set_auto_whitebal.
It also replaces all occurrences of sensor.RGB565 with sensor.GRAYSCALE
There is already some magic replacement happening for the pixel format in the IDE but it doesn't work for all occurrences. alloc_extra_fb calls contain a reference to the pixel format too which doesn't get replaced.",Let's do another round of updates later.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1233,2021-03-17T17:44:58Z,2021-03-17T18:01:04Z,2021-03-17T18:01:07Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add enable/disable external OSC callback functions.,1,[],https://github.com/openmv/openmv/pull/1233,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1233,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1234,2021-03-17T20:25:24Z,2021-03-17T20:39:01Z,2021-03-17T20:39:12Z,MERGED,True,1,1,1,https://github.com/iabdalkader,PORTENTA: Cleanup low power function,1,[],https://github.com/openmv/openmv/pull/1234,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1234,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1235,2021-03-19T04:30:11Z,2021-03-23T18:06:04Z,2021-03-23T18:06:04Z,MERGED,True,706,837,2,https://github.com/kwagyeman,Move software jpeg encoder front end to new SIMD MCU code,1,[],https://github.com/openmv/openmv/pull/1235,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1235,"This PR updates the JPEG code to use the new and tested get MCU front end developed for the H7 hardware JPEG compressor. The code is now shared between both software and hardware JPEG.
To ensure speed... I have ifdefs that switch things around in the output generated depending on if we are in software versus hardware mode.
I have tested this code on the H7/H7P/M7/M4.
I tested the hardware code for BINARY/GRAYSCALE/RGB565/BAYER.
I tested the software code for BINRARY/GRAYSCALE/RGB565/BAYER with 1x1, 2x1, and 2x2 sampling for each.
To support the NANO33 (Cortex-M3) I also added in intrinsics for non-m4/m7 processors. The code was tested and continued to work when using these.
Additionally, I spent time trying to optimize the DCT methods in the software JPEG code. However, this did not yield any good results. It's not possible to improve the speed of the column-wise DCT with cortex-simd instructions. I could only get the inner loop down to 51 instructions from 59. As for the row wise DCT I was able to get that down to 40 instructions from 59. However, neither of these will produce much speedup. For example, debayering is noticeably faster because I reduced the instruction count to like 24 from 50.
I also tried to optimize the software UV 2x1/2x2 averaging. However, the cortex-m4/m7 SIMD instruction set can't help easily in this case given the layout of MCUs in RAM. The U/V MCUs would need to be interleaved to enable the use the __SHADD8() instruction. __USAD8 is not usable given the absolute value op it does.","This PR updates the JPEG code to use the new and tested get MCU front end developed for the H7 hardware JPEG compressor. The code is now shared between both software and hardware JPEG.
To ensure speed... I have ifdefs that switch things around in the output generated depending on if we are in software versus hardware mode.
I have tested this code on the H7/H7P/M7/M4.
I tested the hardware code for BINARY/GRAYSCALE/RGB565/BAYER.
I tested the software code for BINRARY/GRAYSCALE/RGB565/BAYER with 1x1, 2x1, and 2x2 sampling for each.
To support the NANO33 (Cortex-M3) I also added in intrinsics for non-m4/m7 processors. The code was tested and continued to work when using these.
Additionally, I spent time trying to optimize the DCT methods in the software JPEG code. However, this did not yield any good results. It's not possible to improve the speed of the column-wise DCT with cortex-simd instructions. I could only get the inner loop down to 51 instructions from 59. As for the row wise DCT I was able to get that down to 40 instructions from 59. However, neither of these will produce much speedup. For example, debayering is noticeably faster because I reduced the instruction count to like 24 from 50.
I also tried to optimize the software UV 2x1/2x2 averaging. However, the cortex-m4/m7 SIMD instruction set can't help easily in this case given the layout of MCUs in RAM. The U/V MCUs would need to be interleaved to enable the use the __SHADD8() instruction. __USAD8 is not usable given the absolute value op it does.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1235,2021-03-19T04:30:11Z,2021-03-23T18:06:04Z,2021-03-23T18:06:04Z,MERGED,True,706,837,2,https://github.com/kwagyeman,Move software jpeg encoder front end to new SIMD MCU code,1,[],https://github.com/openmv/openmv/pull/1235,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1235#issuecomment-802548925,"This PR updates the JPEG code to use the new and tested get MCU front end developed for the H7 hardware JPEG compressor. The code is now shared between both software and hardware JPEG.
To ensure speed... I have ifdefs that switch things around in the output generated depending on if we are in software versus hardware mode.
I have tested this code on the H7/H7P/M7/M4.
I tested the hardware code for BINARY/GRAYSCALE/RGB565/BAYER.
I tested the software code for BINRARY/GRAYSCALE/RGB565/BAYER with 1x1, 2x1, and 2x2 sampling for each.
To support the NANO33 (Cortex-M3) I also added in intrinsics for non-m4/m7 processors. The code was tested and continued to work when using these.
Additionally, I spent time trying to optimize the DCT methods in the software JPEG code. However, this did not yield any good results. It's not possible to improve the speed of the column-wise DCT with cortex-simd instructions. I could only get the inner loop down to 51 instructions from 59. As for the row wise DCT I was able to get that down to 40 instructions from 59. However, neither of these will produce much speedup. For example, debayering is noticeably faster because I reduced the instruction count to like 24 from 50.
I also tried to optimize the software UV 2x1/2x2 averaging. However, the cortex-m4/m7 SIMD instruction set can't help easily in this case given the layout of MCUs in RAM. The U/V MCUs would need to be interleaved to enable the use the __SHADD8() instruction. __USAD8 is not usable given the absolute value op it does.","This is the code I came up with the the DCT row loop. It doesn't work though because of the __QADD8/__QSUB8 which clamp too early causing bad image quality. The final image has very low contrast. But, the rest of the SIMD logic is sensible. However, there are too many packing and unpacking instructions in the code which don't actually do work.
Posting this so I can search for it later if I need it...
     for (int i = 8, *p = DU; i > 0; i--, p += 8, CDU += 8) {
            int t30 = *((uint32_t *) CDU);
            int t47 = __REV(*((uint32_t *) (CDU + 4)));
            int tadd = __QADD8(t30, t47);
            int tsub = __QSUB8(t30, t47);
    
            int t2_t0 = __SXTB16(tadd);
            int t3_t1 = __SXTB16_RORn(tadd, 8);
            int t10_t12 = __SASX(t3_t1, t2_t0);
            int t11_t13 = __SASX(t2_t0, t3_t1);
            int t11_t10 = __PKHTB(t11_t13, t10_t12, 16);
            int t12_t13 = __PKHBT(t11_t13, t10_t12, 16);
    
            p[0] = __SMUAD(t11_t10, 0x10001);
            p[4] = __SMUSD(t11_t10, 0x10001);
            p[2] = ((int) __SMUAD(t12_t13, (FIX_0_707106781 << 16) | (256 + FIX_0_707106781))) >> 8;
            p[6] = ((int) __SMUSD(t12_t13, (FIX_0_707106781 << 16) | (256 - FIX_0_707106781))) >> 8;
    
            int t5_t7 = __SXTB16(tsub);
            int t4_t6 = __SXTB16_RORn(tsub, 8);
            t10_t12 = __SADD16(t4_t6, t5_t7);
            int t11_t7 = __SASX(t5_t7, t4_t6 & 0xffff);
            int z2 = __SMUSDX((FIX_0_382683433 << 16) | (FIX_0_541196100 + FIX_0_382683433), t10_t12);
            int z4 = __SMUADX(((FIX_1_306562965 - FIX_0_382683433) << 16) | FIX_0_382683433, t10_t12);
            int z11 = __SMUAD(t11_t7, (FIX_0_707106781 << 16) | 256);
            int z13 = __SMUSD(t11_t7, (FIX_0_707106781 << 16) | 256);
    
            p[5] = (z13 + z2) >> 8;
            p[3] = (z13 - z2) >> 8;
            p[1] = (z11 + z4) >> 8;
            p[7] = (z11 - z4) >> 8;
        }",True,{}
openmv/openmv,https://github.com/openmv/openmv,1235,2021-03-19T04:30:11Z,2021-03-23T18:06:04Z,2021-03-23T18:06:04Z,MERGED,True,706,837,2,https://github.com/kwagyeman,Move software jpeg encoder front end to new SIMD MCU code,1,[],https://github.com/openmv/openmv/pull/1235,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1235#issuecomment-802551073,"This PR updates the JPEG code to use the new and tested get MCU front end developed for the H7 hardware JPEG compressor. The code is now shared between both software and hardware JPEG.
To ensure speed... I have ifdefs that switch things around in the output generated depending on if we are in software versus hardware mode.
I have tested this code on the H7/H7P/M7/M4.
I tested the hardware code for BINARY/GRAYSCALE/RGB565/BAYER.
I tested the software code for BINRARY/GRAYSCALE/RGB565/BAYER with 1x1, 2x1, and 2x2 sampling for each.
To support the NANO33 (Cortex-M3) I also added in intrinsics for non-m4/m7 processors. The code was tested and continued to work when using these.
Additionally, I spent time trying to optimize the DCT methods in the software JPEG code. However, this did not yield any good results. It's not possible to improve the speed of the column-wise DCT with cortex-simd instructions. I could only get the inner loop down to 51 instructions from 59. As for the row wise DCT I was able to get that down to 40 instructions from 59. However, neither of these will produce much speedup. For example, debayering is noticeably faster because I reduced the instruction count to like 24 from 50.
I also tried to optimize the software UV 2x1/2x2 averaging. However, the cortex-m4/m7 SIMD instruction set can't help easily in this case given the layout of MCUs in RAM. The U/V MCUs would need to be interleaved to enable the use the __SHADD8() instruction. __USAD8 is not usable given the absolute value op it does.","Anyway, software JPEG is about as fast as it will get on the M4/M7. Will need the M55 to optimize the DCT loops.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1235,2021-03-19T04:30:11Z,2021-03-23T18:06:04Z,2021-03-23T18:06:04Z,MERGED,True,706,837,2,https://github.com/kwagyeman,Move software jpeg encoder front end to new SIMD MCU code,1,[],https://github.com/openmv/openmv/pull/1235,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1235#issuecomment-803435693,"This PR updates the JPEG code to use the new and tested get MCU front end developed for the H7 hardware JPEG compressor. The code is now shared between both software and hardware JPEG.
To ensure speed... I have ifdefs that switch things around in the output generated depending on if we are in software versus hardware mode.
I have tested this code on the H7/H7P/M7/M4.
I tested the hardware code for BINARY/GRAYSCALE/RGB565/BAYER.
I tested the software code for BINRARY/GRAYSCALE/RGB565/BAYER with 1x1, 2x1, and 2x2 sampling for each.
To support the NANO33 (Cortex-M3) I also added in intrinsics for non-m4/m7 processors. The code was tested and continued to work when using these.
Additionally, I spent time trying to optimize the DCT methods in the software JPEG code. However, this did not yield any good results. It's not possible to improve the speed of the column-wise DCT with cortex-simd instructions. I could only get the inner loop down to 51 instructions from 59. As for the row wise DCT I was able to get that down to 40 instructions from 59. However, neither of these will produce much speedup. For example, debayering is noticeably faster because I reduced the instruction count to like 24 from 50.
I also tried to optimize the software UV 2x1/2x2 averaging. However, the cortex-m4/m7 SIMD instruction set can't help easily in this case given the layout of MCUs in RAM. The U/V MCUs would need to be interleaved to enable the use the __SHADD8() instruction. __USAD8 is not usable given the absolute value op it does.","U/V Averaging for JPEG 2x1/2x2 cannot be speed up with SIMD. But, the loop for that is tight.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1235,2021-03-19T04:30:11Z,2021-03-23T18:06:04Z,2021-03-23T18:06:04Z,MERGED,True,706,837,2,https://github.com/kwagyeman,Move software jpeg encoder front end to new SIMD MCU code,1,[],https://github.com/openmv/openmv/pull/1235,https://github.com/iabdalkader,5,https://github.com/openmv/openmv/pull/1235#issuecomment-803685735,"This PR updates the JPEG code to use the new and tested get MCU front end developed for the H7 hardware JPEG compressor. The code is now shared between both software and hardware JPEG.
To ensure speed... I have ifdefs that switch things around in the output generated depending on if we are in software versus hardware mode.
I have tested this code on the H7/H7P/M7/M4.
I tested the hardware code for BINARY/GRAYSCALE/RGB565/BAYER.
I tested the software code for BINRARY/GRAYSCALE/RGB565/BAYER with 1x1, 2x1, and 2x2 sampling for each.
To support the NANO33 (Cortex-M3) I also added in intrinsics for non-m4/m7 processors. The code was tested and continued to work when using these.
Additionally, I spent time trying to optimize the DCT methods in the software JPEG code. However, this did not yield any good results. It's not possible to improve the speed of the column-wise DCT with cortex-simd instructions. I could only get the inner loop down to 51 instructions from 59. As for the row wise DCT I was able to get that down to 40 instructions from 59. However, neither of these will produce much speedup. For example, debayering is noticeably faster because I reduced the instruction count to like 24 from 50.
I also tried to optimize the software UV 2x1/2x2 averaging. However, the cortex-m4/m7 SIMD instruction set can't help easily in this case given the layout of MCUs in RAM. The U/V MCUs would need to be interleaved to enable the use the __SHADD8() instruction. __USAD8 is not usable given the absolute value op it does.",Is this ready ?,True,{}
openmv/openmv,https://github.com/openmv/openmv,1235,2021-03-19T04:30:11Z,2021-03-23T18:06:04Z,2021-03-23T18:06:04Z,MERGED,True,706,837,2,https://github.com/kwagyeman,Move software jpeg encoder front end to new SIMD MCU code,1,[],https://github.com/openmv/openmv/pull/1235,https://github.com/kwagyeman,6,https://github.com/openmv/openmv/pull/1235#issuecomment-803690232,"This PR updates the JPEG code to use the new and tested get MCU front end developed for the H7 hardware JPEG compressor. The code is now shared between both software and hardware JPEG.
To ensure speed... I have ifdefs that switch things around in the output generated depending on if we are in software versus hardware mode.
I have tested this code on the H7/H7P/M7/M4.
I tested the hardware code for BINARY/GRAYSCALE/RGB565/BAYER.
I tested the software code for BINRARY/GRAYSCALE/RGB565/BAYER with 1x1, 2x1, and 2x2 sampling for each.
To support the NANO33 (Cortex-M3) I also added in intrinsics for non-m4/m7 processors. The code was tested and continued to work when using these.
Additionally, I spent time trying to optimize the DCT methods in the software JPEG code. However, this did not yield any good results. It's not possible to improve the speed of the column-wise DCT with cortex-simd instructions. I could only get the inner loop down to 51 instructions from 59. As for the row wise DCT I was able to get that down to 40 instructions from 59. However, neither of these will produce much speedup. For example, debayering is noticeably faster because I reduced the instruction count to like 24 from 50.
I also tried to optimize the software UV 2x1/2x2 averaging. However, the cortex-m4/m7 SIMD instruction set can't help easily in this case given the layout of MCUs in RAM. The U/V MCUs would need to be interleaved to enable the use the __SHADD8() instruction. __USAD8 is not usable given the absolute value op it does.","Yes, it's all done and tested.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1236,2021-03-20T18:04:50Z,2021-03-21T16:20:02Z,2021-03-21T16:20:02Z,MERGED,True,4,0,1,https://github.com/kwagyeman,Ifdef out lcd/tv init0,1,[],https://github.com/openmv/openmv/pull/1236,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1236,Causes compile error if disabled.,Causes compile error if disabled.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1237,2021-03-21T20:48:31Z,2021-03-21T21:39:27Z,2021-03-21T21:39:30Z,MERGED,True,65,4,5,https://github.com/iabdalkader,Update CM4 firmware.,1,[],https://github.com/openmv/openmv/pull/1237,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1237,"Enable HSEM driver.
Use HSEM to sync standby mode.","Enable HSEM driver.
Use HSEM to sync standby mode.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1238,2021-03-21T23:39:05Z,2021-03-22T00:04:24Z,2021-03-22T00:04:42Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Portenta: Fix standby mode.,1,[],https://github.com/openmv/openmv/pull/1238,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1238,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1239,2021-03-23T05:52:37Z,2021-03-28T15:16:24Z,2021-03-28T15:16:25Z,MERGED,True,1258,472,11,https://github.com/kwagyeman,Add debayering support to draw image,1,[],https://github.com/openmv/openmv/pull/1239,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1239,"Adds debayering support to draw_image which then adds bayer support effectively all over the firmware.
Converting bayer images to binary/grayscale/rgb565 is supported along with all draw_image operations as long as the destination is not a bayer image.
If the destination is a bayer image only copying/cropping bayer is supported.
Conversion is smart and only allocs a secondary image to hold the converted binary/grayscale/rgb565 from the bayer image if a complex operation like scaling is called for. Otherwise, draw_image will debayer the image line by line to save memory if possible.
...
With this PR you effectively can now display bayer images on the LCD screen, TV, and etc. Also, you can now call find_aprilt_tags() on a bayer image.
...
As we update more functions to use draw_image as their front-end bayer support will be enabled for more code paths. E.g. in the future all find_* methods.","Adds debayering support to draw_image which then adds bayer support effectively all over the firmware.
Converting bayer images to binary/grayscale/rgb565 is supported along with all draw_image operations as long as the destination is not a bayer image.
If the destination is a bayer image only copying/cropping bayer is supported.
Conversion is smart and only allocs a secondary image to hold the converted binary/grayscale/rgb565 from the bayer image if a complex operation like scaling is called for. Otherwise, draw_image will debayer the image line by line to save memory if possible.
...
With this PR you effectively can now display bayer images on the LCD screen, TV, and etc. Also, you can now call find_aprilt_tags() on a bayer image.
...
As we update more functions to use draw_image as their front-end bayer support will be enabled for more code paths. E.g. in the future all find_* methods.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1240,2021-03-25T00:49:05Z,2021-03-25T01:04:22Z,2021-03-25T01:04:24Z,MERGED,True,8,1,1,https://github.com/iabdalkader,Disable all MPU regions in msp_init.,1,[],https://github.com/openmv/openmv/pull/1240,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1240,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1241,2021-03-25T21:09:27Z,2021-03-25T21:46:30Z,2021-03-30T17:17:42Z,MERGED,True,56,14,4,https://github.com/iabdalkader,Add 320x320 resolution for HM01B0,1,[],https://github.com/openmv/openmv/pull/1241,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1241,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1241,2021-03-25T21:09:27Z,2021-03-25T21:46:30Z,2021-03-30T17:17:42Z,MERGED,True,56,14,4,https://github.com/iabdalkader,Add 320x320 resolution for HM01B0,1,[],https://github.com/openmv/openmv/pull/1241,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1241#issuecomment-807492990,,"@sebromero
sensor.set_framesize(sensor.B320X320)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1241,2021-03-25T21:09:27Z,2021-03-25T21:46:30Z,2021-03-30T17:17:42Z,MERGED,True,56,14,4,https://github.com/iabdalkader,Add 320x320 resolution for HM01B0,1,[],https://github.com/openmv/openmv/pull/1241,https://github.com/sebromero,3,https://github.com/openmv/openmv/pull/1241#issuecomment-807500862,,@iabdalkader like a boss 😎,True,{}
openmv/openmv,https://github.com/openmv/openmv,1242,2021-03-26T17:27:36Z,2021-03-28T19:55:56Z,2021-03-28T19:55:56Z,CLOSED,False,16,2,1,https://github.com/kwagyeman,Ensure lepton is off,1,[],https://github.com/openmv/openmv/pull/1242,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1242,For any boards with a FLIR Lepton onboard this ensures the device is forced into reset and power down on init. Hardware pull-ups are not enough.,For any boards with a FLIR Lepton onboard this ensures the device is forced into reset and power down on init. Hardware pull-ups are not enough.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1243,2021-03-26T19:35:36Z,2021-03-26T19:48:16Z,2021-03-26T19:48:19Z,MERGED,True,4,0,1,https://github.com/iabdalkader,Re-enable combined fw image for factory programming.,1,[],https://github.com/openmv/openmv/pull/1243,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1243,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1244,2021-03-27T09:39:56Z,2021-03-28T13:40:24Z,2021-03-28T13:40:24Z,MERGED,True,1,1,1,https://github.com/jiskra,Update omv_boardconfig.h,1,[],https://github.com/openmv/openmv/pull/1244,https://github.com/jiskra,1,https://github.com/openmv/openmv/pull/1244,change openmv4p usb clock source,change openmv4p usb clock source,True,{}
openmv/openmv,https://github.com/openmv/openmv,1245,2021-03-29T05:09:18Z,2021-03-30T16:20:14Z,2021-04-13T05:57:40Z,MERGED,True,9,0,1,https://github.com/kwagyeman,Make sure dedicated analog pads are isolated,1,[],https://github.com/openmv/openmv/pull/1245,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1245,This makes sure the dedicated ADC channels that go to pads are not connected to their respective GPIO pin.,This makes sure the dedicated ADC channels that go to pads are not connected to their respective GPIO pin.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1245,2021-03-29T05:09:18Z,2021-03-30T16:20:14Z,2021-04-13T05:57:40Z,MERGED,True,9,0,1,https://github.com/kwagyeman,Make sure dedicated analog pads are isolated,1,[],https://github.com/openmv/openmv/pull/1245,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1245#issuecomment-809070167,This makes sure the dedicated ADC channels that go to pads are not connected to their respective GPIO pin.,"You can read PA0_C/PA1_C via ADC(0/1).read().
PC2/3 _C are on ADC3. They are not easy to read using the MP HAL.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1245,2021-03-29T05:09:18Z,2021-03-30T16:20:14Z,2021-04-13T05:57:40Z,MERGED,True,9,0,1,https://github.com/kwagyeman,Make sure dedicated analog pads are isolated,1,[],https://github.com/openmv/openmv/pull/1245,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1245#issuecomment-818460451,This makes sure the dedicated ADC channels that go to pads are not connected to their respective GPIO pin.,"I checked this. It appears PC2 on the 100-LFQP is actually PC2_C. Same for PC3.
So, we don't actually have the proper PC2/PC3 pins on the LFQP package but instead just the analog connected switch pin. So, these should be disabled.
The Pure Thermal doesn't need them too. Only PA0_C and PA1_C.
So, I'll remove the extra lines.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1247,2021-03-29T17:37:07Z,2021-03-30T17:36:22Z,2021-03-30T17:36:22Z,MERGED,True,6,16546,7,https://github.com/kwagyeman,Cleanup imlib unused methods,1,[],https://github.com/openmv/openmv/pull/1247,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1247,Removed old bayer and yuv code totally.,Removed old bayer and yuv code totally.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1248,2021-03-30T01:07:56Z,2021-03-30T01:31:52Z,2021-03-30T01:31:56Z,MERGED,True,280,1,8,https://github.com/iabdalkader,Add initial MT9M114 driver.,1,[],https://github.com/openmv/openmv/pull/1248,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1248,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1249,2021-03-30T17:18:10Z,2021-03-30T17:25:27Z,2021-03-30T17:25:31Z,MERGED,True,2,0,1,https://github.com/iabdalkader,Fix HM01B0 vflip/hmirror settings.,1,[],https://github.com/openmv/openmv/pull/1249,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1249,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1250,2021-03-30T22:22:56Z,2021-03-30T22:23:06Z,2021-03-30T22:23:06Z,CLOSED,False,171,34,10,https://github.com/kwagyeman,Kwabena/jpeg decoding,2,[],https://github.com/openmv/openmv/pull/1250,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1250,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1251,2021-03-30T22:23:25Z,2021-04-16T05:53:10Z,2021-04-16T05:53:10Z,CLOSED,False,171,34,10,https://github.com/kwagyeman,Kwabena/jpeg decoding,2,[],https://github.com/openmv/openmv/pull/1251,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1251,Add hooks for jpeg_decoding.,Add hooks for jpeg_decoding.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1252,2021-03-31T17:29:55Z,2021-03-31T17:49:48Z,2021-03-31T17:49:48Z,MERGED,True,51,6,4,https://github.com/kwagyeman,Add jpeg copying support,1,[],https://github.com/openmv/openmv/pull/1252,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1252,You can now use .copy() to copy jpegs.,You can now use .copy() to copy jpegs.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1253,2021-04-02T16:50:29Z,2021-04-16T05:53:18Z,2021-04-16T05:53:18Z,CLOSED,False,136,2,2,https://github.com/kwagyeman,Non-cropped/transposed MDMA is working,1,[],https://github.com/openmv/openmv/pull/1253,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1253,MDMA for non-cropped/transposed resolutions is working.,MDMA for non-cropped/transposed resolutions is working.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1254,2021-04-02T19:33:26Z,2021-04-02T20:00:44Z,2021-04-02T20:00:52Z,MERGED,True,291,351,7,https://github.com/iabdalkader,Remove streaming mode.,1,[],https://github.com/openmv/openmv/pull/1254,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1254,Will be replaced by double buffering soon.,Will be replaced by double buffering soon.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1254,2021-04-02T19:33:26Z,2021-04-02T20:00:44Z,2021-04-02T20:00:52Z,MERGED,True,291,351,7,https://github.com/iabdalkader,Remove streaming mode.,1,[],https://github.com/openmv/openmv/pull/1254,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1254#issuecomment-812681550,Will be replaced by double buffering soon.,"@kwagyeman It doubled the FPS for UVC streaming, but it's not needed anymore since double buffering can achieve the same.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1255,2021-04-03T18:39:58Z,2021-04-03T19:24:42Z,2021-04-03T19:43:48Z,MERGED,True,33,28,9,https://github.com/iabdalkader,Make JPEG buffer update use image source arg.,1,[],https://github.com/openmv/openmv/pull/1255,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1255,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1256,2021-04-04T00:23:00Z,2021-04-04T21:25:53Z,2021-04-04T21:25:57Z,CLOSED,False,155,160,5,https://github.com/iabdalkader,Initial double buffering support.,1,[],https://github.com/openmv/openmv/pull/1256,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1256,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1257,2021-04-05T00:00:17Z,2021-04-05T00:23:48Z,2021-04-05T00:23:50Z,MERGED,True,13,15,8,https://github.com/iabdalkader,Change update_jpeg_buffer arg to bool.,1,[],https://github.com/openmv/openmv/pull/1257,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1257,Will be used to swap buffers later.,Will be used to swap buffers later.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1258,2021-04-05T00:25:54Z,2021-04-16T01:34:03Z,2021-04-16T01:34:07Z,CLOSED,False,254,215,7,https://github.com/iabdalkader,Initial double buffering support (Take 2),1,[],https://github.com/openmv/openmv/pull/1258,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1258,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1259,2021-04-05T01:01:09Z,2021-04-05T01:14:00Z,2021-04-05T01:14:03Z,MERGED,True,11,12,9,https://github.com/iabdalkader,Remove update_jpeg_buffer arg.,1,[],https://github.com/openmv/openmv/pull/1259,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1259,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1260,2021-04-05T19:23:46Z,2021-04-05T19:43:47Z,2021-04-05T19:43:49Z,MERGED,True,4,3,2,https://github.com/iabdalkader,Fix init order.,1,[],https://github.com/openmv/openmv/pull/1260,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1260,make sure framebuffer and fb_alloc are initialized before sensor_init0,make sure framebuffer and fb_alloc are initialized before sensor_init0,True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1261,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1261#issuecomment-815014001,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","I have so many comments on this PR and I started reviewing it thoroughly, but I there's one major issue here:
    if (vbuffer_count == 1) {
        // Allow fb_alloc to use frame buffer space up until the image size.
        size = VBUFFER_STATE_SIZE + (((framebuffer_get_frame_size() + 31) / 32) * 32);
    } else {
        // fb_alloc may only use up to the size of all the virtual buffers...
        size = (VBUFFER_STATE_SIZE + framebuffer_get_buffer_size()) * vbuffer_count;  /// <-------- FB gone
    }

This just takes all the extra memory in the framebuffer and limits fb_alloc to the min size: OMV_FB_ALLOC_SIZE , even if the buffers were only 40x30 buffer, this just wastes all the memory.
Side Note: It would simplify things a lot if you just use an aligned flex array member just like framebuffer_t:
typedef struct vbuffer {
    int offset;
    bool jpeg_buffer_overflow;
    bool waiting_for_data;
    OMV_ATTR_ALIGNED(uint8_t pixels[], 32); // <--- forces alignment
} vbuffer_t;",True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1261#issuecomment-815015417,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","It doesn’t. Because it’s based on frame size. It does give the extra memory back. In framebuffer_get_buffer_size() for a vbuffer_count > 1 the code:
    // Do we have an estimate on the frame size with mutliple buffers? If so, we can reduce the
    // RAM each buffer takes up giving some space back to fb_alloc().
    if ((vbuffer_count != 1) && framebuffer->u && framebuffer->v) {
        // Shrink the size down to 2-bytes per pixel guesstimate.
        size = IM_MIN(size, (framebuffer->u * framebuffer->v * 2) + 31);
    }",True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1261#issuecomment-815039810,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","Regarding the VBUFFER flex member. That's a great idea. That definitely makes things more simple.
Um... but, if I do that now I need to update the nano33 code...",True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/iabdalkader,5,https://github.com/openmv/openmv/pull/1261#issuecomment-815113697,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","Double buffering must be enabled/disable seamlessly by default, I will Not change all of the scripts for this, it should only be disabled if there's Not enough space for double buffering or doublebuf=False is passed explicitly.
Please remove all references to producer, consumer, threads and locks, they just don't apply, and while you're at it if you could also shorten the comments in sensor.c snapshot to 2->3 lines max per comment, there's just way too much details in there.
This needs a lot of work, framebuffer.c and head/tail management is too messy. Why does it need to be like a linked list ? you should only need 1 index of the current buffer + count of buffers + use FLAGS to set the buffer ready/dirty/used etc...",True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/kwagyeman,6,https://github.com/openmv/openmv/pull/1261#issuecomment-817040748,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","Code picks the best buffer that fits in RAM. It tries to make sure it's using less than 1/2 of what's available. User can change at any time to something else. But, in general speedup is automatic.
Changed it to reader/writer.
It's not a linked list. It's a circular queue. The frame buffer is a big array with an head/tail pointer indexing it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/iabdalkader,7,https://github.com/openmv/openmv/pull/1261#issuecomment-818357179,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","Note this function is no longer needed:
uint8_t *framebuffer_get_buffer();
// called in framebuffer.c and py_helper.c
image->pixels = framebuffer_get_buffer();

Should be replaced by this which will be used by other code too.
vbuffer_t *framebuffer_get_buffer(int index);
// calling code
image->pixels = framebuffer_get_buffer()->data;",True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/kwagyeman,8,https://github.com/openmv/openmv/pull/1261#issuecomment-818425246,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.",Did the above.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/iabdalkader,9,https://github.com/openmv/openmv/pull/1261#issuecomment-819030902,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","Hi I have a few more suggestions so far:


Please use size, head, tail ex: framebuffer->head vs framebuffer->vbuffer_head also count should be n_buffers.


This is equivalent to both framebuffer_get_next_buffer and framebuffer_set_next_buffer:


vbuffer_t *framebuffer_get_next_buffer(bool peek)
{
    int32_t new_vbuffer_tail = 0;
    vbuffer_t *buffer = framebuffer_get_new_vbuffer_tail(&new_vbuffer_tail);

    if (buffer && peek == false) {
        // Move tail
        if (framebuffer->vbuffer_count == 1) {
            buffer->waiting_for_data = false;
        }
        // Reset the frame buffer state.
        buffer->offset = 0;
        buffer->jpeg_buffer_overflow = false;
        framebuffer->vbuffer_tail = new_vbuffer_tail;
    }

    // Setup to check head again.
    framebuffer->check_vbuffer_head = true;

    return buffer;
}
Note:  Tested with OV5640, OV2640, OV7725 with 1->3 buffers.

I propose instead of the current API, the switch/get/set next_buffer can be wrapped in a single function that's easy to use:

typedef enum {
    FB_NOFLAGS  =  (0<<0),
    FB_READ     =  (1<<0),  // Get buffer for reading.
    FB_WRITE    =  (1<<2),  // Get buffer for writing.
    FB_PEEK     =  (1<<1),  // Combined with read/write will Not move head/tail.
} framebuffer_flags_t;

// Just an example implementation
vbuffer_t *framebuffer_get_next_buffer(uint32_t flags, uint32_t timeout)
{
    vbuffer_t *buffer = NULL;
    if (flags & FB_READ) {
        // check for PEEK there.
        return framebuffer_get_next_buffer_for_read(flags); 
    } else if (flags & FB_WRITE) {
        // check for PEEK there.
        return framebuffer_get_next_buffer_for_write(flags); 
    }
    return buffer;
}
Usage:
//In snapshot()
// Note timeout should be in sensor.c
framebuffer_get_next_buffer(FB_READ);    // == framebuffer_switch_to_next_buffer (moves head)

// In DCMI line callback, or in snapshot for JPEG
framebuffer_get_next_buffer(FB_WRITE|FB_PEEK);    // == framebuffer_get_next_buffer (doesn't move tail)

// In frame end IRQ:
framebuffer_get_next_buffer(FB_WRITE);    // == framebuffer_set_next_buffer ( moves tail)

Alternative API:

typedef enum {
    FB_NOFLAGS  =  (0<<0),
    FB_PEEK     =  (1<<0),  // If set, will Not move the head/tail.
} framebuffer_flags_t;

vbuffer_t *framebuffer_get_head(unit32_t flags);
vbuffer_t *framebuffer_get_tail(unit32_t flags);",True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/kwagyeman,10,https://github.com/openmv/openmv/pull/1261#issuecomment-819207007,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","Okay, I did something like the above. It's now two methods with flags.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1261,2021-04-07T06:25:04Z,2021-04-16T01:33:47Z,2021-04-16T01:33:47Z,MERGED,True,490,128,12,https://github.com/kwagyeman,Double buffer mode working for all imaging modes,1,[],https://github.com/openmv/openmv/pull/1261,https://github.com/kwagyeman,11,https://github.com/openmv/openmv/pull/1261#issuecomment-820677508,"Adds support for allocating multiple frame buffers in the sensor driver to increase performance. To avoid changing all our scripts the firmware automatically chooses the highest performance buffering size given set_framesize() that fits in RAM that uses less than 1/2 of the framebuffer+fb_alloc space.
Users may increase or decrease the automatically allocated buffer count to suit their application. But, for most users they should automatically see a massive performance boost.
Finally, if a user wants to record video they can do sensor.set_framebuffers(sensor.VIDEO_FIFO + N) where N is the number of extra frame buffers to allocate.
On the H7 Plus you can set this to 100 with QVGA easily and if you add a pyb.delay(100) to the main script you get cool slow mo effects.
Note: To avoid stale frames filling up the image fifos the queue is cleared when main thread cannot keep up. This keeps snapshot() from returning may milliseconds old frames.
...
Tested by:
GRAYSCALE - OV2640/OV5640/OV7725/MT9V034/HM01B0/LEPTON
RGB565 - OV2640/OV5640/OV7725/LEPTON
BAYER - OV2640/OV5640/OV7725/LEPTON
JPEG  - OV2640/OV5640
On the OpenMV Cam M4, M7, H7 (all sensors supported), H7 Plus (all sensors supported), and Arduino Portenta. Non-transposed and transposed was tested for all supported modes.
Frame buffer sizes of 1, 2, 3, 4, and 5 were tried for all cameras and for each mode. Finally, random delays in calling snapshot were simulated by adding pyb.delay(100) in the main loop to cause frame drops.
...
The code is robust and works. I tested it for hours on all our hardware. I feel good about it. However, because the DCMI_DMA interrupt has a higher priority than the USB interrupt when you enable anything other than single buffering on cameras you will notice the IDE display get choppy.
With the H7/H7+/Portenta once MDMA is added this will no longer be an issue. However, on the M4/M7... there's no hardware offload for the CPU when copying pixels.
Not sure what the solution if any there is for these boards. USB would need to be a higher priority than DCMI_DMA. Not sure if this is doable.
...
Slow MO Fun Stuff (on the OpenMV Cam H7 Plus with the OV7725):
import sensor, image, time, pyb

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)
sensor.set_framebuffers(200) // 30,720,000 B
print(sensor.get_framebuffers())
sensor.skip_frames(time = 2000)

clock = time.clock()

while(True):
    clock.tick()
    img = sensor.snapshot()
    pyb.delay(30)
    print(clock.fps())

You will see jumps with the code when the frame buffer fills up. This is on purpose to keep frames from getting too old.","Okay, changes addressed.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1262,2021-04-13T06:04:33Z,2021-04-13T17:22:20Z,2021-04-13T17:22:20Z,MERGED,True,8,4,1,https://github.com/kwagyeman,Remove PC2/3_C as we only have PC2/3_C on the original H7,1,[],https://github.com/openmv/openmv/pull/1262,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1262,Fixes the blue LED working.,Fixes the blue LED working.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1263,2021-04-14T04:26:36Z,2021-04-14T22:10:06Z,2021-04-14T22:10:06Z,MERGED,True,88,88,2,https://github.com/kwagyeman,Rename head/tail per convention,2,[],https://github.com/openmv/openmv/pull/1263,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1263,Tail is the front of the queue. Head is back.,Tail is the front of the queue. Head is back.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1263,2021-04-14T04:26:36Z,2021-04-14T22:10:06Z,2021-04-14T22:10:06Z,MERGED,True,88,88,2,https://github.com/kwagyeman,Rename head/tail per convention,2,[],https://github.com/openmv/openmv/pull/1263,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1263#issuecomment-819872632,Tail is the front of the queue. Head is back.,Committed the suggestion.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1264,2021-04-15T12:30:42Z,2021-04-15T13:42:37Z,2021-04-15T13:42:38Z,MERGED,True,23,12,1,https://github.com/sebromero,Create LED objects only once,1,[],https://github.com/openmv/openmv/pull/1264,https://github.com/sebromero,1,https://github.com/openmv/openmv/pull/1264,This PR changes the Nano 33 BLE blink example so that it creates the LED objects only once.,This PR changes the Nano 33 BLE blink example so that it creates the LED objects only once.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1265,2021-04-16T05:51:30Z,2021-04-18T17:38:20Z,2021-04-18T17:38:20Z,MERGED,True,22,2,2,https://github.com/kwagyeman,Make FLIR Lepton init reliably on Pure Thermal,1,[],https://github.com/openmv/openmv/pull/1265,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1265,"SPI bus needs pull ups to soften edges.
Need to force rst and pwdn low on startup to ensure that lepton is off in order to not disturb sensor_init() (OV5640 and lepton share an I2C bus).","SPI bus needs pull ups to soften edges.
Need to force rst and pwdn low on startup to ensure that lepton is off in order to not disturb sensor_init() (OV5640 and lepton share an I2C bus).",True,{}
openmv/openmv,https://github.com/openmv/openmv,1266,2021-04-16T05:52:35Z,2021-04-17T19:57:41Z,2021-04-17T19:57:41Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Fix mp_const_none comparison,1,[],https://github.com/openmv/openmv/pull/1266,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1266,Type checking was wrong.,Type checking was wrong.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1266,2021-04-16T05:52:35Z,2021-04-17T19:57:41Z,2021-04-17T19:57:41Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Fix mp_const_none comparison,1,[],https://github.com/openmv/openmv/pull/1266,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1266#issuecomment-821857388,Type checking was wrong.,@iabdalkader - Fixed.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1267,2021-04-16T22:44:14Z,2021-04-16T23:01:52Z,2021-04-16T23:01:56Z,MERGED,True,6,0,3,https://github.com/iabdalkader,"Include ADC, RTC ll files",1,[],https://github.com/openmv/openmv/pull/1267,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1267,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1268,2021-04-18T09:54:03Z,2021-04-18T16:56:42Z,2021-04-18T16:56:42Z,MERGED,True,4,3,1,https://github.com/kidswong999,Update ulab.py example,1,[],https://github.com/openmv/openmv/pull/1268,https://github.com/kidswong999,1,https://github.com/openmv/openmv/pull/1268,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1269,2021-04-19T19:36:33Z,2021-04-19T19:58:27Z,2021-04-19T19:58:30Z,MERGED,True,11,0,1,https://github.com/iabdalkader,Enable basic built-in modules for OPENMV2.,1,[],https://github.com/openmv/openmv/pull/1269,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1269,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1270,2021-04-20T22:32:56Z,2021-04-21T17:58:11Z,2021-04-21T17:58:14Z,CLOSED,False,3,2,1,https://github.com/iabdalkader,Make sure the frame is set invalid when the fifo is flushed.,1,[],https://github.com/openmv/openmv/pull/1270,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1270,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1271,2021-04-21T17:36:55Z,2021-05-01T18:53:47Z,2021-05-01T18:53:47Z,MERGED,True,375,196,6,https://github.com/kwagyeman,MDMA Offload for camera data capture.,5,[],https://github.com/openmv/openmv/pull/1271,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1271,Adds support for MDMA data movement of lines from the DMA line buffer to the image buffer for CPU offload.,Adds support for MDMA data movement of lines from the DMA line buffer to the image buffer for CPU offload.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1271,2021-04-21T17:36:55Z,2021-05-01T18:53:47Z,2021-05-01T18:53:47Z,MERGED,True,375,196,6,https://github.com/kwagyeman,MDMA Offload for camera data capture.,5,[],https://github.com/openmv/openmv/pull/1271,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1271#issuecomment-826371308,Adds support for MDMA data movement of lines from the DMA line buffer to the image buffer for CPU offload.,"Have a few improvements:

We can merge the two paths in  void DCMI_DMAConvCpltUser(uint32_t addr) and replace with this:
If you'd like to avoid branches in unaligned_memcpy, we can add new set of functions unaligned_memcpy_colwise_xx

switch (sensor.pixformat) {
    case PIXFORMAT_BAYER:
        dst += buffer->offset * (sensor.transpose) ? 1 : MAIN_FB()->u;
        src += MAIN_FB()->x;
        #if (OMV_ENABLE_SENSOR_MDMA == 1)
        mdma_memcpy(buffer, dst, src, sizeof(uint8_t), sensor.transpose);
        #else
        unaligned_memcpy(dst, src, MAIN_FB()->u, MAIN_FB()->v, sensor.transpose);
        #endif
        break;
    case PIXFORMAT_GRAYSCALE:
        dst += buffer->offset * (sensor.transpose) ? 1 : MAIN_FB()->u;
        if (sensor.gs_bpp == sizeof(uint8_t)) {
            // 1BPP GRAYSCALE.
            src += MAIN_FB()->x;
            #if (OMV_ENABLE_SENSOR_MDMA == 1)
            mdma_memcpy(buffer, dst, src, sizeof(uint8_t), sensor.transpose);
            #else
            unaligned_memcpy(dst, src, MAIN_FB()->u, MAIN_FB()->v, sensor.transpose);
            #endif
        } else {
            // Extract Y channel from YUV.
            src16 += MAIN_FB()->x;
            #if (OMV_ENABLE_SENSOR_MDMA == 1)
            mdma_memcpy(buffer, dst, src16, sizeof(uint8_t), sensor.transpose);
            #else
            unaligned_2_to_1_memcpy(dst, src16, MAIN_FB()->u, MAIN_FB()->v, sensor.transpose);
            #endif
        }
        break;
    case PIXFORMAT_RGB565:
    case PIXFORMAT_YUV422:
        dst16 += buffer->offset * (sensor.transpose) ? 1 : MAIN_FB()->u;
        src16 += MAIN_FB()->x;
        #if (OMV_ENABLE_SENSOR_MDMA == 1)
        mdma_memcpy(buffer, dst16, src16, sizeof(uint16_t), sensor.transpose);
        #else
        if (SENSOR_HW_FLAGS_GET(&sensor, SWNSOR_HW_FLAGS_RGB565_REV)) {
            unaligned_memcpy_rev16(dst16, src16, MAIN_FB()->u, MAIN_FB()->v, sensor.transpose);
        } else {
            unaligned_memcpy(dst16, src16, MAIN_FB()->u * sizeof(uint16_t), MAIN_FB()->v, sensor.transpose);
        }
        #endif
        break;
    default:
        break;
}


In snapshot that's really a lot to do in one function, all the MDMA setup should be moved to a new function.

#if (OMV_ENABLE_SENSOR_MDMA == 1)
int mdma_config(sensor_t *sensor, uint32_t line_width_bytes, bytes_per_pixel, etc...)
{
}
#endif


The long if else chains (for source/dest inc, size burst etc..) should be replaced by either this (note the size is just bits from 0->n shifted by Pos):

DCMI_MDMA_Handle0.Init.SourceBurst  = MDMA_SOURCE_BURST_SINGLE;
DCMI_MDMA_Handle0.Init.DestBurst    = MDMA_DEST_BURST_SINGLE;
for (uint32_t i=7; i>0; i--) {
    if ((buffer_transfer_burst_size % (2<<(i-1))) == 0) {
        DCMI_MDMA_Handle0.Init.SourceBurst  = i << MDMA_CTCR_SBURST_Pos;
        DCMI_MDMA_Handle0.Init.DestBurst    = i << MDMA_CTCR_DBURST_Pos;
        break;
    }
}

Or just const lookup tables:
static const uint32_t MDMA_BURST_SIZE[][2] = {
         {MDMA_SOURCE_BURST_SINGLE, MDMA_DEST_BURST_SINGLE},
         {MDMA_SOURCE_BURST_2BEATS, MDMA_DEST_BURST_2BEATS},
         .....
};

DCMI_MDMA_Handle0.Init.SourceBurst  = MDMA_BURST_SIZE[0][0];
DCMI_MDMA_Handle0.Init.DestBurst      = MDMA_BURST_SIZE[0][1];
for (uint32_t i=7; i>0; i--) {
    if ((buffer_transfer_burst_size % (2<<(i-1))) == 0) {
        DCMI_MDMA_Handle0.Init.SourceBurst  = MDMA_BURST_SIZE[i][0];
        DCMI_MDMA_Handle0.Init.DestBurst      = MDMA_BURST_SIZE[i][1];
        break;
    }
}",True,{}
openmv/openmv,https://github.com/openmv/openmv,1271,2021-04-21T17:36:55Z,2021-05-01T18:53:47Z,2021-05-01T18:53:47Z,MERGED,True,375,196,6,https://github.com/kwagyeman,MDMA Offload for camera data capture.,5,[],https://github.com/openmv/openmv/pull/1271,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1271#issuecomment-828156722,Adds support for MDMA data movement of lines from the DMA line buffer to the image buffer for CPU offload.,"Okay, I've done 2 and 3. Just need to redo 1.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1271,2021-04-21T17:36:55Z,2021-05-01T18:53:47Z,2021-05-01T18:53:47Z,MERGED,True,375,196,6,https://github.com/kwagyeman,MDMA Offload for camera data capture.,5,[],https://github.com/openmv/openmv/pull/1271,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1271#issuecomment-829853585,Adds support for MDMA data movement of lines from the DMA line buffer to the image buffer for CPU offload.,Done with everything. Just need to test on all cameras with all camera sensors.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1271,2021-04-21T17:36:55Z,2021-05-01T18:53:47Z,2021-05-01T18:53:47Z,MERGED,True,375,196,6,https://github.com/kwagyeman,MDMA Offload for camera data capture.,5,[],https://github.com/openmv/openmv/pull/1271,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/1271#issuecomment-830217375,Adds support for MDMA data movement of lines from the DMA line buffer to the image buffer for CPU offload.,Checked all cameras. This is ready to be merged.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1272,2021-04-21T22:00:49Z,2021-04-21T22:19:27Z,2021-04-21T22:19:30Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix ImageIO pause arg.,1,[],https://github.com/openmv/openmv/pull/1272,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1272,Pause was inverted.,Pause was inverted.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1273,2021-04-25T17:31:04Z,2021-04-25T18:25:13Z,2021-04-25T18:26:25Z,MERGED,True,16,2,2,https://github.com/iabdalkader,Add mutex lock_timeout,1,[],https://github.com/openmv/openmv/pull/1273,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1273,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1274,2021-04-25T19:19:57Z,2021-04-25T20:21:59Z,2021-05-21T21:58:44Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update to MicroPython 1.14,1,[],https://github.com/openmv/openmv/pull/1274,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1274,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1275,2021-04-25T20:54:29Z,2021-04-25T21:14:03Z,2021-04-25T21:14:05Z,MERGED,True,3,0,3,https://github.com/iabdalkader,Add missing ll headers to HAL conf.,1,[],https://github.com/openmv/openmv/pull/1275,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1275,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1276,2021-04-25T20:57:29Z,2021-04-25T21:20:44Z,2021-04-25T21:20:47Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix FAST build.,1,[],https://github.com/openmv/openmv/pull/1276,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1276,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1277,2021-04-25T21:21:28Z,2021-04-25T21:43:01Z,2021-04-25T21:43:04Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update to MicroPython 1.15,1,[],https://github.com/openmv/openmv/pull/1277,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1277,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1278,2021-04-26T18:07:12Z,2021-04-26T18:34:29Z,2021-04-26T18:34:32Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Add nimble submodule.,1,[],https://github.com/openmv/openmv/pull/1278,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1278,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1279,2021-04-26T22:52:12Z,2021-04-26T23:14:24Z,2021-04-26T23:14:27Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix UART clock source.,1,[],https://github.com/openmv/openmv/pull/1279,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1279,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1280,2021-04-26T23:38:02Z,2021-04-27T00:14:50Z,2021-04-27T00:14:52Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update CYW-BT driver.,1,[],https://github.com/openmv/openmv/pull/1280,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1280,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1281,2021-04-26T23:52:12Z,2021-04-27T00:14:41Z,2021-04-27T00:14:43Z,MERGED,True,42,0,3,https://github.com/iabdalkader,Add support for enabling bluetooth module (nimble stack).,1,[],https://github.com/openmv/openmv/pull/1281,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1281,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1283,2021-04-27T19:52:52Z,2021-04-27T20:43:12Z,2021-04-27T20:43:15Z,MERGED,True,73,1,8,https://github.com/iabdalkader,Add ulab config file per board.,1,[],https://github.com/openmv/openmv/pull/1283,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1283,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1284,2021-04-27T20:48:17Z,2021-04-27T21:00:35Z,2021-04-27T21:00:38Z,MERGED,True,106,5,6,https://github.com/iabdalkader,Portenta ble,2,[],https://github.com/openmv/openmv/pull/1284,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1284,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/jepler,1,https://github.com/openmv/openmv/pull/1285,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.","This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1285#issuecomment-828729948,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.",Thank you that's something I've been wanting to do for a while... Will review this and get back to you.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1285#issuecomment-828738585,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.","I think declaring the linker scripts variables as arrays should fix most of these warnings. For example: extern char _vfs_buf[];. I prefer not to hard-code the sizes as they differ from board to board and may change in the future, but if we must the sizes are probably defined in omv_boardconfig.h files.
EDIT: I think you should also change the gcc toolchain in travis.yml to make sure the firmware builds with the new gcc for all targets.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/jepler,4,https://github.com/openmv/openmv/pull/1285#issuecomment-829590997,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.",Thanks for the advice. I've rebased the branch to implement the ...[] notation as suggested.  This passes locally with gcc10.  This also resolves a merge conflict in py_winc.c.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/jepler,5,https://github.com/openmv/openmv/pull/1285#issuecomment-829609950,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.","Looks like there are problems in the portenta build with gcc10.  I don't plan to pursue them to completion at this time (fixes in submodules will be needed, in fact apparently way down in https://github.com/apache/mynewt-nimble.git).  Shall I revert (or rebase out) the commit that changes the toolchain so that it's possible to merge this, or what would you like?",True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/1285#issuecomment-829745045,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.","Hi,

This also resolves a merge conflict in py_winc.c.

Yes I forgot to mention, I pushed that change to fix the build if WINC is disabled it failed with gcc10.

Looks like there are problems in the portenta build with gcc10. I don't plan to pursue them to completion at this time (fixes in submodules will be needed, in fact apparently way down in https://github.com/apache/mynewt-nimble.git).

I fixed that issue by adding a flag for the nimble submodule, if you rebase now it should be fixed. That said, the Portenta build now adds an extra 20K for some reason, which overflows the flash... I will need some more time to figure out why this is happening. So you can either remove the Travis change commit, or wait for me to debug this issue (may end up reducing the fw size).
Finally, can you please revert all the WINC string related changes ? I found much easier ways to fix this, a) you can just increase WINC_MAX_SSID_LEN to 34 which means (WINC_MAX_SSID_LEN-1) is bigger than the src and will be null terminated. Or use WINC_MAX_SSID_LEN (not WINC_MAX_SSID_LEN-1) and then null terminate it, like so:
diff --git a/src/drivers/winc1500/src/winc.c b/src/drivers/winc1500/src/winc.c
index f643b5c1..1ffd323c 100644
--- a/src/drivers/winc1500/src/winc.c
+++ b/src/drivers/winc1500/src/winc.c
@@ -353,7 +353,8 @@ static void wifi_callback_sta(uint8_t msg_type, void *msg)
             memcpy(netinfo->mac_addr, con_info->au8MACAddress, WINC_MAC_ADDR_LEN);
 
             // Copy SSID.
-            strncpy(netinfo->ssid, con_info->acSSID, WINC_MAX_SSID_LEN-1);
+            strncpy(netinfo->ssid, con_info->acSSID, WINC_MAX_SSID_LEN);
+            netinfo->ssid[WINC_MAX_SSID_LEN-1] = 0;
 
             async_request_done = true;
                        break;
@@ -389,7 +390,8 @@ static void wifi_callback_sta(uint8_t msg_type, void *msg)
 
             // Copy BSSID and SSID.
             memcpy(wscan_result.bssid, scan_result->au8BSSID, WINC_MAC_ADDR_LEN);
-            strncpy((char*) wscan_result.ssid, (const char *) scan_result->au8SSID, WINC_MAX_SSID_LEN-1);
+            strncpy((char*) wscan_result.ssid, (const char *) scan_result->au8SSID, WINC_MAX_SSID_LEN);
+            wscan_result.ssid[WINC_MAX_SSID_LEN-1] = 0;
 
             // Call scan result callback
             scan_arg->cb(&wscan_result, scan_arg->arg);",True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/jepler,7,https://github.com/openmv/openmv/pull/1285#issuecomment-830075867,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.","I have rebased the branch and dropped the two commits
ff26ab7d travis.yml: Use 10-2020q4, presently the newest arm toolchain
f40e66e2 winc1500: Fix possible string truncation of 32-byte SSIDs.

The remaining fixes feel safe, while the string manipulation changes feel tricky and I don't have HW to test them on.
In CircuitPython, we see firmware sizes go up and down as we change toolchain versions; it seems to be just one of those things.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/iabdalkader,8,https://github.com/openmv/openmv/pull/1285#issuecomment-830327966,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.","while the string manipulation changes feel tricky and I don't have HW to test them on.

Hi, the patch above is perfectly fine I tested it with OMV+WINC, it will copy the whole 33 bytes from src and make sure dst is null terminated, so please include it in this PR too.
Also I fixed all code size issues, if you rebase on master now everything should build fine with gcc10, so it would be great to also add the Travis change while we're at it, just to make sure that it doesn't get broken again soon by new code.
EDIT:

In CircuitPython, we see firmware sizes go up and down as we change toolchain versions

Yes I was interested in knowing the specific files that cause this 20K jump and why, turns out it's mainly in nimble and some other library that have so many inlined functions (and seems this gcc version default threshold for inlined functions has maybe changed), anyway I just added -fno-inline-small-functions to all CFLAGS. Note we use -O2 instead of -Os to build everything, which explains why MicroPython builds with gcc9 and newer.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/jepler,9,https://github.com/openmv/openmv/pull/1285#issuecomment-830487944,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.",Thanks for doing that testing!  Let's see what CI says.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/iabdalkader,10,https://github.com/openmv/openmv/pull/1285#issuecomment-830664477,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.","Thanks for doing that testing! Let's see what CI says.

It's all good as expected, I made some changes to winc.c I realized that it won't help to null terminate after the strncpy, now I terminate the src string coming from the driver before the strncpy, will merge after the CI is done.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1285,2021-04-28T15:06:52Z,2021-05-01T17:40:00Z,2021-05-01T20:49:05Z,MERGED,True,13,11,7,https://github.com/jepler,Fix build errors encountered with GNU Arm Embedded Toolchain 10-2020-q4-major,10,['enhancement'],https://github.com/openmv/openmv/pull/1285,https://github.com/iabdalkader,11,https://github.com/openmv/openmv/pull/1285#issuecomment-830667441,"This series of fixes allows the firmware to be built using gcc10, rather than gcc7 as used in your CI process.
I'm investigating using gcc10, as this is what CircuitPython uses (it appears that micropython uses 9-2019-q4-0ubuntu1 at the moment).
I have NOT tested this on hardware, and one change does modify behavior.
Please let me know if you'd prefer this be broken into multiple PRs, as it touches multiple parts of the project.","Merged, thanks!",True,{}
openmv/openmv,https://github.com/openmv/openmv,1286,2021-04-28T20:39:00Z,2021-04-28T21:00:23Z,2021-04-28T21:00:26Z,MERGED,True,4,4,2,https://github.com/iabdalkader,WINC1500: don't include winc headers if the module is disabled.,1,[],https://github.com/openmv/openmv/pull/1286,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1286,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1287,2021-04-30T01:01:52Z,2021-04-30T01:30:33Z,2021-04-30T01:36:40Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix nimble build with gcc10 and -O2,1,[],https://github.com/openmv/openmv/pull/1287,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1287,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1288,2021-04-30T16:44:42Z,2021-05-01T18:14:12Z,2021-05-01T18:14:12Z,MERGED,True,20,0,2,https://github.com/kwagyeman,Add no change checks,1,[],https://github.com/openmv/openmv/pull/1288,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1288,These were missing.,These were missing.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1289,2021-04-30T17:06:44Z,2021-04-30T17:41:16Z,2021-04-30T17:41:16Z,MERGED,True,12,12,2,https://github.com/kwagyeman,Use new software I2C,1,[],https://github.com/openmv/openmv/pull/1289,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1289,MP API changed. Functionality is the same though.,MP API changed. Functionality is the same though.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1290,2021-04-30T17:43:16Z,2021-04-30T18:07:13Z,2021-04-30T18:07:16Z,MERGED,True,9,1,1,https://github.com/iabdalkader,"Revert ""Disable OPENMVPT Travis target""",1,[],https://github.com/openmv/openmv/pull/1290,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1290,This reverts commit c0261ee.,This reverts commit c0261ee.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1291,2021-04-30T18:38:12Z,2021-04-30T19:00:38Z,2021-04-30T19:00:41Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Disable inline for small functions.,1,[],https://github.com/openmv/openmv/pull/1291,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1291,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1292,2021-04-30T19:03:11Z,2021-04-30T19:25:31Z,2021-04-30T19:25:34Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Disable inline for small functions,1,[],https://github.com/openmv/openmv/pull/1292,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1292,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1293,2021-04-30T19:55:04Z,2021-04-30T20:16:24Z,2021-04-30T20:16:27Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix Nano33 PID.,1,[],https://github.com/openmv/openmv/pull/1293,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1293,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1294,2021-04-30T20:20:38Z,2021-04-30T20:44:39Z,2021-04-30T20:47:02Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Align with MicroPython upstream.,1,[],https://github.com/openmv/openmv/pull/1294,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1294,Pull SDIO/SDCARD/UART changes.,Pull SDIO/SDCARD/UART changes.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1296,2021-05-03T20:29:17Z,2021-05-03T20:52:15Z,2021-05-03T20:52:18Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Small fix to CDC buffer pointers.,1,[],https://github.com/openmv/openmv/pull/1296,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1296,Need to set out pointer when checking buffer length for WIFI debugging.,Need to set out pointer when checking buffer length for WIFI debugging.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1297,2021-05-03T23:57:42Z,2021-05-04T00:18:53Z,2021-05-04T00:19:33Z,MERGED,True,1,1,1,https://github.com/iabdalkader,"Add Systick, PendSV dispatch slots for WINC.",1,[],https://github.com/openmv/openmv/pull/1297,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1297,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1298,2021-05-04T00:19:39Z,2021-05-10T00:16:28Z,2021-05-10T00:16:32Z,MERGED,True,212,183,4,https://github.com/iabdalkader,Improved WiFi debugging.,2,[],https://github.com/openmv/openmv/pull/1298,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1298,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1298,2021-05-04T00:19:39Z,2021-05-10T00:16:28Z,2021-05-10T00:16:32Z,MERGED,True,212,183,4,https://github.com/iabdalkader,Improved WiFi debugging.,2,[],https://github.com/openmv/openmv/pull/1298,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1298#issuecomment-833205879,,Please lower the UDP broadcast rate to 1 Hz.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1298,2021-05-04T00:19:39Z,2021-05-10T00:16:28Z,2021-05-10T00:16:32Z,MERGED,True,212,183,4,https://github.com/iabdalkader,Improved WiFi debugging.,2,[],https://github.com/openmv/openmv/pull/1298,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1298#issuecomment-833206021,,Bug: sometimes a command goes missing from the IDE. Needs to be fixed before it's ready.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1298,2021-05-04T00:19:39Z,2021-05-10T00:16:28Z,2021-05-10T00:16:32Z,MERGED,True,212,183,4,https://github.com/iabdalkader,Improved WiFi debugging.,2,[],https://github.com/openmv/openmv/pull/1298,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/1298#issuecomment-834891452,,"Please lower the UDP broadcast rate to 1 Hz.
Bug: sometimes a command goes missing from the IDE. Needs to be fixed before it's ready.

Done and fixed.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1299,2021-05-04T04:42:31Z,2021-05-06T00:19:29Z,2021-05-06T00:19:29Z,MERGED,True,64,46,3,https://github.com/kwagyeman,Make set_windowing much more flexible,1,[],https://github.com/openmv/openmv/pull/1299,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1299,"Handles no change situations
Improves ability to pass the window
Auto handles intersections.
Generally much more friendly.","Handles no change situations
Improves ability to pass the window
Auto handles intersections.
Generally much more friendly.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1300,2021-05-04T17:15:31Z,2021-05-12T00:22:56Z,2021-05-12T00:26:45Z,MERGED,True,23,0,2,https://github.com/kwagyeman,Flush jpeg buffer when image is invalidated,2,[],https://github.com/openmv/openmv/pull/1300,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1300,When testing cropping performance I realized that too many functions invalidate the frame buffer but don't send it to the PC first before that happens. This fixes these functions so you can call them in a loop with snapshot and still get display output.,When testing cropping performance I realized that too many functions invalidate the frame buffer but don't send it to the PC first before that happens. This fixes these functions so you can call them in a loop with snapshot and still get display output.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1300,2021-05-04T17:15:31Z,2021-05-12T00:22:56Z,2021-05-12T00:26:45Z,MERGED,True,23,0,2,https://github.com/kwagyeman,Flush jpeg buffer when image is invalidated,2,[],https://github.com/openmv/openmv/pull/1300,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1300#issuecomment-839322533,When testing cropping performance I realized that too many functions invalidate the frame buffer but don't send it to the PC first before that happens. This fixes these functions so you can call them in a loop with snapshot and still get display output.,"So image.flush() does that exactly, do we still need this ?
For example:
w = 320
h = 240
while(w>10):
    sensor.set_windowing((w, h))
    sensor.snapshot().flush()
    w -= 10",True,{}
openmv/openmv,https://github.com/openmv/openmv,1300,2021-05-04T17:15:31Z,2021-05-12T00:22:56Z,2021-05-12T00:26:45Z,MERGED,True,23,0,2,https://github.com/kwagyeman,Flush jpeg buffer when image is invalidated,2,[],https://github.com/openmv/openmv/pull/1300,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1300#issuecomment-839323009,When testing cropping performance I realized that too many functions invalidate the frame buffer but don't send it to the PC first before that happens. This fixes these functions so you can call them in a loop with snapshot and still get display output.,"Actually, I guess it doesn't hurt to have it done implicitly.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1301,2021-05-04T18:23:16Z,2021-05-04T18:49:55Z,2021-05-04T18:49:58Z,MERGED,True,8,0,1,https://github.com/iabdalkader,Implement missing USBDBG function to return IRQ status.,1,[],https://github.com/openmv/openmv/pull/1301,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1301,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1302,2021-05-05T05:08:55Z,2021-05-08T00:02:56Z,2021-05-08T00:02:56Z,MERGED,True,20,4,4,https://github.com/kwagyeman,Make frame buffer readout locking more fair,1,[],https://github.com/openmv/openmv/pull/1302,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1302,"This fixes the frame buffer stutters with the new framebuffer speedup code by making readout locking more fair.
I examined priority locking and all sorts of other methods... and found myself writing race conditions. This method below is simple, effective, does the job, and doesn't have race conditions.
It works fine for fixing the issue of the IDE polling the frame buffer and nothing more. Note that IDE poll rate is 200 Hz. Faster than a screen refresh. So, this should always result in a smooth result on screen.","This fixes the frame buffer stutters with the new framebuffer speedup code by making readout locking more fair.
I examined priority locking and all sorts of other methods... and found myself writing race conditions. This method below is simple, effective, does the job, and doesn't have race conditions.
It works fine for fixing the issue of the IDE polling the frame buffer and nothing more. Note that IDE poll rate is 200 Hz. Faster than a screen refresh. So, this should always result in a smooth result on screen.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1303,2021-05-05T23:39:06Z,2021-05-06T23:54:52Z,2021-05-06T23:54:52Z,MERGED,True,4,0,1,https://github.com/kwagyeman,Cropped not True if framesize is invalid,1,[],https://github.com/openmv/openmv/pull/1303,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1303,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1304,2021-05-07T04:18:08Z,2021-05-10T00:19:53Z,2021-05-10T00:19:53Z,MERGED,True,52,0,4,https://github.com/kwagyeman,Add frame complete callback support,1,[],https://github.com/openmv/openmv/pull/1304,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1304,"This completes non-blocking snapshot support. The user has two methods to determine if a new frame is available.

They can poll the frame_available() method until it is True.
They can use set_frame_callback() to do something when a new frame is ready. Like schedule via micropython.schedule() a function that calls snapshot() to grab the frame and process it while keeping the main loop working on something else.

The user may choose whichever one is better for their application.","This completes non-blocking snapshot support. The user has two methods to determine if a new frame is available.

They can poll the frame_available() method until it is True.
They can use set_frame_callback() to do something when a new frame is ready. Like schedule via micropython.schedule() a function that calls snapshot() to grab the frame and process it while keeping the main loop working on something else.

The user may choose whichever one is better for their application.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1305,2021-05-07T23:07:07Z,2021-05-08T00:00:18Z,2021-05-08T00:01:02Z,MERGED,True,24,6,1,https://github.com/iabdalkader,WINC1500: Handle out of band ACKs.,1,[],https://github.com/openmv/openmv/pull/1305,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1305,Allow functions to continue to wait for async event if send ACK is received.,Allow functions to continue to wait for async event if send ACK is received.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1306,2021-05-08T04:00:17Z,2021-05-09T22:11:21Z,2021-05-09T22:11:21Z,MERGED,True,8,248,3,https://github.com/allenerd,"Updated README.md: deleted detailed steps, added link to ST wiki for …",1,[],https://github.com/openmv/openmv/pull/1306,https://github.com/allenerd,1,https://github.com/openmv/openmv/pull/1306,Replaced detailed steps by the link to ST wiki in README.md. Updated the process image.,Replaced detailed steps by the link to ST wiki in README.md. Updated the process image.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1307,2021-05-09T20:22:27Z,2021-05-09T20:50:08Z,2021-05-09T20:50:11Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix FatFS code page define.,1,[],https://github.com/openmv/openmv/pull/1307,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1307,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1308,2021-05-10T21:54:11Z,2021-05-10T21:54:40Z,2021-05-10T21:55:32Z,CLOSED,False,1,1,1,https://github.com/mkchu,Use proper forked sub repos,1,[],https://github.com/openmv/openmv/pull/1308,https://github.com/mkchu,1,https://github.com/openmv/openmv/pull/1308,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1309,2021-05-12T21:19:28Z,2021-05-12T21:41:04Z,2021-05-12T21:41:07Z,MERGED,True,33,28,2,https://github.com/iabdalkader,Make mutex support Cortex-M0/M0+,1,[],https://github.com/openmv/openmv/pull/1309,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1309,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1310,2021-05-12T23:18:09Z,2021-05-13T04:58:39Z,2021-05-13T04:58:39Z,MERGED,True,0,0,1,https://github.com/allenerd,St/update cubeai,2,[],https://github.com/openmv/openmv/pull/1310,https://github.com/allenerd,1,https://github.com/openmv/openmv/pull/1310,Fixed imgs folder issue,Fixed imgs folder issue,True,{}
openmv/openmv,https://github.com/openmv/openmv,1311,2021-05-13T14:32:56Z,2021-05-13T20:24:25Z,2021-05-13T20:24:26Z,MERGED,True,13,0,4,https://github.com/kwagyeman,Fix usbdbg flushing before script end,1,[],https://github.com/openmv/openmv/pull/1311,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1311,Gives the IDE time to drain the jpeg frame buffer and text buffer after script stop.,Gives the IDE time to drain the jpeg frame buffer and text buffer after script stop.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1312,2021-05-13T14:33:15Z,2021-05-13T19:01:51Z,2021-05-13T19:01:51Z,MERGED,True,2,0,1,https://github.com/kwagyeman,Fix mutex init,1,[],https://github.com/openmv/openmv/pull/1312,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1312,Was missing.,Was missing.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1313,2021-05-13T19:34:56Z,2021-05-13T19:54:54Z,2021-05-13T19:54:57Z,MERGED,True,5,9,2,https://github.com/iabdalkader,Fix reset to bootloader command.,1,[],https://github.com/openmv/openmv/pull/1313,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1313,Set RTC magic only for boards that need it.,Set RTC magic only for boards that need it.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1314,2021-05-13T19:56:59Z,2021-05-13T20:33:47Z,2021-05-13T20:33:50Z,MERGED,True,5,0,1,https://github.com/iabdalkader,Add missing CMSIS GCC macros.,1,[],https://github.com/openmv/openmv/pull/1314,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1314,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1315,2021-05-13T20:04:32Z,2021-05-13T20:57:10Z,2021-05-13T20:57:11Z,MERGED,True,2,0,1,https://github.com/kwagyeman,Disable servo when not used,1,[],https://github.com/openmv/openmv/pull/1315,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1315,This should be fixed if you disable all servos for a custom board.,This should be fixed if you disable all servos for a custom board.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1316,2021-05-13T23:31:06Z,2021-05-14T00:24:00Z,2021-05-14T00:24:11Z,MERGED,True,901,1,9,https://github.com/iabdalkader,Add basic GC2145 driver,1,[],https://github.com/openmv/openmv/pull/1316,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1316,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1317,2021-05-14T20:40:19Z,2021-05-14T21:05:44Z,2021-05-14T21:25:32Z,MERGED,True,15,15,3,https://github.com/iabdalkader,Rename mutex_t to avoid conflict with other SDKs.,1,[],https://github.com/openmv/openmv/pull/1317,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1317,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1318,2021-05-14T21:17:36Z,2021-05-14T21:51:20Z,2021-05-14T21:51:23Z,MERGED,True,1,0,1,https://github.com/iabdalkader,Fix build error if assert is defined in apriltag.c,1,[],https://github.com/openmv/openmv/pull/1318,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1318,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1319,2021-05-14T21:23:03Z,2021-05-14T22:07:19Z,2021-05-14T22:07:22Z,MERGED,True,0,1,1,https://github.com/iabdalkader,Remove extra include.,1,[],https://github.com/openmv/openmv/pull/1319,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1319,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1320,2021-05-16T20:16:35Z,2021-05-16T21:20:44Z,2021-05-16T21:20:47Z,MERGED,True,42,14,3,https://github.com/iabdalkader,Use pre-defined GCC macro to test for the architecture.,1,[],https://github.com/openmv/openmv/pull/1320,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1320,"CPU macro was not actually defined, which made the test pass on all MCUs.","CPU macro was not actually defined, which made the test pass on all MCUs.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1321,2021-05-16T20:25:29Z,2021-05-16T21:36:21Z,2021-05-16T21:36:24Z,MERGED,True,2,2,1,https://github.com/iabdalkader,py_tf: fix headers when module is disabled.,1,[],https://github.com/openmv/openmv/pull/1321,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1321,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1322,2021-05-16T21:23:25Z,2021-05-16T22:28:49Z,2021-05-16T22:28:51Z,MERGED,True,186,135,2,https://github.com/iabdalkader,Update OV767x driver.,1,[],https://github.com/openmv/openmv/pull/1322,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1322,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1323,2021-05-17T14:02:11Z,2021-05-19T17:49:14Z,2021-05-21T21:58:29Z,MERGED,True,6,2,3,https://github.com/iabdalkader,GC2145 driver fixes.,1,[],https://github.com/openmv/openmv/pull/1323,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1323,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1324,2021-05-17T18:15:58Z,2021-05-17T18:58:36Z,2021-05-17T18:58:36Z,MERGED,True,55,0,1,https://github.com/kwagyeman,Add signed and unsigned saturate,1,[],https://github.com/openmv/openmv/pull/1324,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1324,Add missing macros for hardware that doesn't have them.,Add missing macros for hardware that doesn't have them.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1326,2021-05-21T17:06:21Z,2021-05-23T18:32:09Z,2021-05-23T18:32:09Z,CLOSED,False,3,1,1,https://github.com/kwagyeman,Add support for -1 to disable a color table,1,[],https://github.com/openmv/openmv/pull/1326,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1326,Necessary to support the python script I gave to GroupGets. MicroPython still does not support passing None.,Necessary to support the python script I gave to GroupGets. MicroPython still does not support passing None.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1326,2021-05-21T17:06:21Z,2021-05-23T18:32:09Z,2021-05-23T18:32:09Z,CLOSED,False,3,1,1,https://github.com/kwagyeman,Add support for -1 to disable a color table,1,[],https://github.com/openmv/openmv/pull/1326,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1326#issuecomment-846605640,Necessary to support the python script I gave to GroupGets. MicroPython still does not support passing None.,"That's not true, here a simple test:
diff --git a/src/omv/modules/py_helper.c b/src/omv/modules/py_helper.c
index 737d48f5..05f80cd8 100644
--- a/src/omv/modules/py_helper.c
+++ b/src/omv/modules/py_helper.c
@@ -424,6 +424,7 @@ const uint16_t *py_helper_keyword_color_palette(uint n_args, const mp_obj_t *arg
         mp_map_lookup(kw_args, MP_OBJ_NEW_QSTR(MP_QSTR_color_palette), MP_MAP_LOOKUP);
 
     if (kw_arg && (kw_arg->value == mp_const_none)) {
+        printf(""kw_arg->value == mp_const_none\n"");
         default_color_palette = NULL;
     } else if ((n_args > arg_index) && (args[arg_index] == mp_const_none)) {
         default_color_palette = NULL;
And
img = sensor.snapshot()
copy =img.copy(color_palette = None)
Output:
MicroPython: v1.15-r14-1-g2a58dc79c-dirty OpenMV: v4.0.0-32-gd1d035ba-dirty HAL: v1.9.0 BOARD: OPENMV4-STM32H743
Type ""help()"" for more information.
>>> kw_arg->value == mp_const_none",True,{}
openmv/openmv,https://github.com/openmv/openmv,1328,2021-05-21T21:18:54Z,2021-05-21T21:57:59Z,2021-05-21T21:58:03Z,MERGED,True,6,7,1,https://github.com/iabdalkader,Fix mutex locking.,1,[],https://github.com/openmv/openmv/pull/1328,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1328,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1329,2021-05-21T21:21:37Z,2021-05-21T21:57:48Z,2021-05-21T21:57:50Z,MERGED,True,4,7,3,https://github.com/iabdalkader,GC2145 updates.,1,[],https://github.com/openmv/openmv/pull/1329,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1329,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1330,2021-05-22T18:56:10Z,2021-05-22T20:19:53Z,2021-05-22T20:19:55Z,MERGED,True,8,0,2,https://github.com/iabdalkader,Add special Makefile rule for string functions.,1,[],https://github.com/openmv/openmv/pull/1330,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1330,Fixes issue with built-in string functions after gcc update.,Fixes issue with built-in string functions after gcc update.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1332,2021-05-23T17:02:43Z,2021-05-23T18:03:46Z,2021-05-23T18:03:48Z,MERGED,True,1,1,1,https://github.com/iabdalkader,LWIP: Revert to stable release.,1,[],https://github.com/openmv/openmv/pull/1332,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1332,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1333,2021-05-23T17:06:38Z,2021-05-23T17:32:17Z,2021-05-23T17:32:21Z,MERGED,True,5,1,1,https://github.com/iabdalkader,Update Travis build script.,1,[],https://github.com/openmv/openmv/pull/1333,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1333,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1334,2021-05-23T17:43:42Z,2021-05-23T18:18:38Z,2021-05-23T18:18:40Z,MERGED,True,1,0,1,https://github.com/iabdalkader,Disable Travis default submodules clone.,1,[],https://github.com/openmv/openmv/pull/1334,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1334,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1335,2021-05-23T18:34:37Z,2021-05-23T18:43:46Z,2021-05-23T18:44:19Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Leave eth low power mode on init.,1,[],https://github.com/openmv/openmv/pull/1335,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1335,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1336,2021-05-23T20:39:47Z,2021-05-23T21:20:42Z,2021-05-23T21:20:45Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Portenta: Enable SPI2.,1,[],https://github.com/openmv/openmv/pull/1336,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1336,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1337,2021-05-23T21:06:37Z,2021-05-23T21:17:08Z,2021-05-23T21:17:12Z,CLOSED,False,1,1,1,https://github.com/iabdalkader,Fix servo timer.,1,[],https://github.com/openmv/openmv/pull/1337,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1337,Fixes #1325,Fixes #1325,True,{}
openmv/openmv,https://github.com/openmv/openmv,1338,2021-05-23T21:22:02Z,2021-05-23T21:47:08Z,2021-06-19T20:25:54Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix servo timer.,1,[],https://github.com/openmv/openmv/pull/1338,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1338,Fixes #1325,Fixes #1325,True,{}
openmv/openmv,https://github.com/openmv/openmv,1339,2021-05-24T01:40:03Z,2021-05-26T18:44:24Z,2021-05-26T18:44:24Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix name typo,1,[],https://github.com/openmv/openmv/pull/1339,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1339,Found error when writing docs.,Found error when writing docs.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1340,2021-05-24T19:24:13Z,2021-05-24T20:07:44Z,2021-05-24T20:07:47Z,MERGED,True,5,5,2,https://github.com/iabdalkader,Update IRQ priorities.,1,[],https://github.com/openmv/openmv/pull/1340,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1340,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1341,2021-05-26T19:24:39Z,2021-05-26T19:33:55Z,2021-05-26T19:33:57Z,MERGED,True,4,1,2,https://github.com/iabdalkader,Make OV7670 CLKRC configurable.,1,[],https://github.com/openmv/openmv/pull/1341,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1341,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1342,2021-05-26T22:29:13Z,2021-05-26T23:00:53Z,2021-05-26T23:00:56Z,MERGED,True,20,3,1,https://github.com/iabdalkader,ULPI low power mode fixes.,1,[],https://github.com/openmv/openmv/pull/1342,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1342,Wait for DIR pin to go low.,Wait for DIR pin to go low.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1343,2021-05-27T18:13:24Z,2021-05-27T18:22:53Z,2021-05-27T18:22:57Z,MERGED,True,2,3,1,https://github.com/iabdalkader,AMG init fix.,1,[],https://github.com/openmv/openmv/pull/1343,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1343,Allow AMG to work if CAMBUS_XFER_SUSPEND is not supported.,Allow AMG to work if CAMBUS_XFER_SUSPEND is not supported.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1344,2021-05-28T19:38:51Z,2021-05-28T19:48:04Z,2021-05-28T19:48:07Z,MERGED,True,3,3,1,https://github.com/iabdalkader,Update Travis CI build.,1,[],https://github.com/openmv/openmv/pull/1344,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1344,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1345,2021-05-29T16:10:46Z,2021-06-07T18:54:26Z,2021-06-07T18:54:26Z,CLOSED,False,93,3,5,https://github.com/kwagyeman,Kwabena/special sensor stuff,2,[],https://github.com/openmv/openmv/pull/1345,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1345,"This code allows users to drop frames in the sensor driver and use the image fifo for long term storage of images. Please see this thread: https://forums.openmv.io/t/image-capture-interrupt-handler-registration/5924/16?u=kwagyeman
Basically, if you want frame capture running in the background now always capturing frames while your main code goes and does something else for a very long time this is now possible... and you will not drop any frames and have unstable video.","This code allows users to drop frames in the sensor driver and use the image fifo for long term storage of images. Please see this thread: https://forums.openmv.io/t/image-capture-interrupt-handler-registration/5924/16?u=kwagyeman
Basically, if you want frame capture running in the background now always capturing frames while your main code goes and does something else for a very long time this is now possible... and you will not drop any frames and have unstable video.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1346,2021-06-03T18:29:47Z,2021-06-07T01:59:10Z,2021-06-07T01:59:11Z,MERGED,True,136,65,1,https://github.com/kwagyeman,Enable 100% MDMA offload for all sensors,1,[],https://github.com/openmv/openmv/pull/1346,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1346,"Enables 100% MDMA offload where the processor only receives 2 interrupts per image (DMA Complete User and DCMI Frame Interrupt). With this feature you completely unload the processor from being interrupted per line of the image significantly reducing system loading and leading to big FPS improvements across the board for all algorithms (the memory bandwidth load of the capture data capture remains of-course).
Code works with all cameras. With this PR there is no more performance to pick from the tree of MDMA. Things are now maxed out.
...
I tested this code on all cameras with different resolutions, pixformats, and transpose. The new code works on all systems.","Enables 100% MDMA offload where the processor only receives 2 interrupts per image (DMA Complete User and DCMI Frame Interrupt). With this feature you completely unload the processor from being interrupted per line of the image significantly reducing system loading and leading to big FPS improvements across the board for all algorithms (the memory bandwidth load of the capture data capture remains of-course).
Code works with all cameras. With this PR there is no more performance to pick from the tree of MDMA. Things are now maxed out.
...
I tested this code on all cameras with different resolutions, pixformats, and transpose. The new code works on all systems.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1346,2021-06-03T18:29:47Z,2021-06-07T01:59:10Z,2021-06-07T01:59:11Z,MERGED,True,136,65,1,https://github.com/kwagyeman,Enable 100% MDMA offload for all sensors,1,[],https://github.com/openmv/openmv/pull/1346,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1346#issuecomment-855438611,"Enables 100% MDMA offload where the processor only receives 2 interrupts per image (DMA Complete User and DCMI Frame Interrupt). With this feature you completely unload the processor from being interrupted per line of the image significantly reducing system loading and leading to big FPS improvements across the board for all algorithms (the memory bandwidth load of the capture data capture remains of-course).
Code works with all cameras. With this PR there is no more performance to pick from the tree of MDMA. Things are now maxed out.
...
I tested this code on all cameras with different resolutions, pixformats, and transpose. The new code works on all systems.",Updated code. All cameras are working.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1348,2021-06-06T20:23:38Z,2021-06-06T20:35:42Z,2021-06-06T20:35:44Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Eth updates.,1,[],https://github.com/openmv/openmv/pull/1348,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1348,"Fix link_status()
Update low-power mode.","Fix link_status()
Update low-power mode.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1349,2021-06-06T20:40:23Z,2021-06-06T20:56:11Z,2021-06-06T20:56:14Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix servo timer channel state.,1,[],https://github.com/openmv/openmv/pull/1349,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1349,Fixes #1325,Fixes #1325,True,{}
openmv/openmv,https://github.com/openmv/openmv,1351,2021-06-07T15:06:02Z,2021-06-07T16:10:02Z,2021-06-07T16:10:06Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update pico-sdk and tinyusb.,1,[],https://github.com/openmv/openmv/pull/1351,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1351,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1352,2021-06-07T17:46:53Z,2021-06-07T23:06:11Z,2021-06-07T23:07:47Z,MERGED,True,13,2,1,https://github.com/kwagyeman,Improve snapshot error messages,2,[],https://github.com/openmv/openmv/pull/1352,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1352,Make error messages for snapshot more human readable.,Make error messages for snapshot more human readable.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1352,2021-06-07T17:46:53Z,2021-06-07T23:06:11Z,2021-06-07T23:07:47Z,MERGED,True,13,2,1,https://github.com/kwagyeman,Improve snapshot error messages,2,[],https://github.com/openmv/openmv/pull/1352,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1352#issuecomment-856309729,Make error messages for snapshot more human readable.,"Okay but might as well use full words (like Pixel format and Frame size etc..)... Also this will not stop questions like #1350 if it just says ""Framebuffer Error"" still doesn't explain what's wrong, best to add some more sanity checks in py_sensor_set_windowing().",True,{}
openmv/openmv,https://github.com/openmv/openmv,1352,2021-06-07T17:46:53Z,2021-06-07T23:06:11Z,2021-06-07T23:07:47Z,MERGED,True,13,2,1,https://github.com/kwagyeman,Improve snapshot error messages,2,[],https://github.com/openmv/openmv/pull/1352,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1352#issuecomment-856310310,Make error messages for snapshot more human readable.,Error number -3 shouldn't happen ever. I don't know how to make the message more useful given that. The other errors will happen and are pretty descriptive.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1352,2021-06-07T17:46:53Z,2021-06-07T23:06:11Z,2021-06-07T23:07:47Z,MERGED,True,13,2,1,https://github.com/kwagyeman,Improve snapshot error messages,2,[],https://github.com/openmv/openmv/pull/1352,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/1352#issuecomment-856312217,Make error messages for snapshot more human readable.,"Sorry was looking at another error number, the message is okay, if it's not possible to detect the error in py_set_windowing then I guess it's fine.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1352,2021-06-07T17:46:53Z,2021-06-07T23:06:11Z,2021-06-07T23:07:47Z,MERGED,True,13,2,1,https://github.com/kwagyeman,Improve snapshot error messages,2,[],https://github.com/openmv/openmv/pull/1352,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/1352#issuecomment-856312798,Make error messages for snapshot more human readable.,"I don't have all the information until snapshot is called. User could set the pixelformat after set_windowing. So, my check wouldn't be correct.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1353,2021-06-07T18:43:00Z,2021-06-09T17:04:02Z,2021-06-09T17:04:02Z,MERGED,True,21,2,4,https://github.com/kwagyeman,Add disable full flush logic,1,[],https://github.com/openmv/openmv/pull/1353,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1353,Adds the ability for the user to turn off automatic flushing of the frame buffer when it overflows. This allows the user to use the frame buffer as a long term storage fifo.,Adds the ability for the user to turn off automatic flushing of the frame buffer when it overflows. This allows the user to use the frame buffer as a long term storage fifo.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1353,2021-06-07T18:43:00Z,2021-06-09T17:04:02Z,2021-06-09T17:04:02Z,MERGED,True,21,2,4,https://github.com/kwagyeman,Add disable full flush logic,1,[],https://github.com/openmv/openmv/pull/1353,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1353#issuecomment-857369736,Adds the ability for the user to turn off automatic flushing of the frame buffer when it overflows. This allows the user to use the frame buffer as a long term storage fifo.,Updated,True,{}
openmv/openmv,https://github.com/openmv/openmv,1354,2021-06-07T18:58:15Z,2021-06-07T22:44:58Z,2021-06-07T22:52:47Z,MERGED,True,23,23,12,https://github.com/kwagyeman,Fix RGB565 byte reversal flag name,1,[],https://github.com/openmv/openmv/pull/1354,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1354,This has been badly misspelled for a while.,This has been badly misspelled for a while.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1354,2021-06-07T18:58:15Z,2021-06-07T22:44:58Z,2021-06-07T22:52:47Z,MERGED,True,23,23,12,https://github.com/kwagyeman,Fix RGB565 byte reversal flag name,1,[],https://github.com/openmv/openmv/pull/1354,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1354#issuecomment-856310116,This has been badly misspelled for a while.,"Ah yes was on my todo list, was waiting to merge the PRs that changes sensor stuff.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1355,2021-06-07T19:14:22Z,2021-06-08T19:20:12Z,2021-06-08T19:20:13Z,MERGED,True,18,1,4,https://github.com/kwagyeman,Add missing resolutions to sensor driver,1,[],https://github.com/openmv/openmv/pull/1355,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1355,"Fix typo in B320x320 comment.
Add 160x160 resolution for himax.
Add HVGA and HQQQQVGA reses to complete the VGA res table.","Fix typo in B320x320 comment.
Add 160x160 resolution for himax.
Add HVGA and HQQQQVGA reses to complete the VGA res table.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1356,2021-06-08T03:25:54Z,2021-06-09T17:41:00Z,2021-06-09T17:41:00Z,MERGED,True,136,65,4,https://github.com/kwagyeman,Add working frame rate control for all sensors to STM32,1,[],https://github.com/openmv/openmv/pull/1356,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1356,"You just need to do set_framerate(fps) and the camera will run at a frame rate that's below or equal to the number passed. If you pass 0 then the camera goes back to the maximum fps. The code does a fairly good job of going exactly at the fps you want.
Only an implementation is available for the STM32. The code is smart and doesn't do work after it decides to drop a frame. Processor time/MDMA time is not wasted moving an image that will be tossed. Power is still wasted however transferring the image from the DCMI hardware through DMA2 to SRAM. But, this should be minimal.
Finally, this code works in conjunction with lowering the sensor frame rate. So, for each sensor you can run it slower too and you will get the correct result. Tested this on the Portenta.","You just need to do set_framerate(fps) and the camera will run at a frame rate that's below or equal to the number passed. If you pass 0 then the camera goes back to the maximum fps. The code does a fairly good job of going exactly at the fps you want.
Only an implementation is available for the STM32. The code is smart and doesn't do work after it decides to drop a frame. Processor time/MDMA time is not wasted moving an image that will be tossed. Power is still wasted however transferring the image from the DCMI hardware through DMA2 to SRAM. But, this should be minimal.
Finally, this code works in conjunction with lowering the sensor frame rate. So, for each sensor you can run it slower too and you will get the correct result. Tested this on the Portenta.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1356,2021-06-08T03:25:54Z,2021-06-09T17:41:00Z,2021-06-09T17:41:00Z,MERGED,True,136,65,4,https://github.com/kwagyeman,Add working frame rate control for all sensors to STM32,1,[],https://github.com/openmv/openmv/pull/1356,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1356#issuecomment-857359439,"You just need to do set_framerate(fps) and the camera will run at a frame rate that's below or equal to the number passed. If you pass 0 then the camera goes back to the maximum fps. The code does a fairly good job of going exactly at the fps you want.
Only an implementation is available for the STM32. The code is smart and doesn't do work after it decides to drop a frame. Processor time/MDMA time is not wasted moving an image that will be tossed. Power is still wasted however transferring the image from the DCMI hardware through DMA2 to SRAM. But, this should be minimal.
Finally, this code works in conjunction with lowering the sensor frame rate. So, for each sensor you can run it slower too and you will get the correct result. Tested this on the Portenta.",Updated,True,{}
openmv/openmv,https://github.com/openmv/openmv,1358,2021-06-08T22:39:13Z,2021-06-08T23:27:18Z,2021-06-08T23:28:11Z,MERGED,True,11,10,3,https://github.com/iabdalkader,Keep JPEG MDMA handles local.,1,[],https://github.com/openmv/openmv/pull/1358,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1358,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1359,2021-06-09T04:51:27Z,2021-06-09T12:42:47Z,2021-06-09T12:42:47Z,MERGED,True,4,0,1,https://github.com/kwagyeman,Add missing framesize init check,1,[],https://github.com/openmv/openmv/pull/1359,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1359,Check if framesize is invalid first here.,Check if framesize is invalid first here.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1360,2021-06-11T06:33:14Z,2021-06-12T13:56:09Z,2021-06-12T16:37:13Z,MERGED,True,115,108,5,https://github.com/Lak4CYUT,Reorganize the ISC SPI related handles/macros.,3,[],https://github.com/openmv/openmv/pull/1360,https://github.com/Lak4CYUT,1,https://github.com/openmv/openmv/pull/1360,"The SPI bus on image sensor connector is not design for Lepton sensor only.
Thereforce, change the related functions and macros name from LEPTON_SPI_*
to ISC_SPI_* and move interrupt callback to sensor.c.","The SPI bus on image sensor connector is not design for Lepton sensor only.
Thereforce, change the related functions and macros name from LEPTON_SPI_*
to ISC_SPI_* and move interrupt callback to sensor.c.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1360,2021-06-11T06:33:14Z,2021-06-12T13:56:09Z,2021-06-12T16:37:13Z,MERGED,True,115,108,5,https://github.com/Lak4CYUT,Reorganize the ISC SPI related handles/macros.,3,[],https://github.com/openmv/openmv/pull/1360,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1360#issuecomment-859916809,"The SPI bus on image sensor connector is not design for Lepton sensor only.
Thereforce, change the related functions and macros name from LEPTON_SPI_*
to ISC_SPI_* and move interrupt callback to sensor.c.","@Lak4CYUT Looks good! Just need the above small change, the handle shouldn't be declared if nothing is using it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1360,2021-06-11T06:33:14Z,2021-06-12T13:56:09Z,2021-06-12T16:37:13Z,MERGED,True,115,108,5,https://github.com/Lak4CYUT,Reorganize the ISC SPI related handles/macros.,3,[],https://github.com/openmv/openmv/pull/1360,https://github.com/Lak4CYUT,3,https://github.com/openmv/openmv/pull/1360#issuecomment-859975021,"The SPI bus on image sensor connector is not design for Lepton sensor only.
Thereforce, change the related functions and macros name from LEPTON_SPI_*
to ISC_SPI_* and move interrupt callback to sensor.c.","@Lak4CYUT Looks good! Just need the above small change, the handle shouldn't be declared if nothing is using it.

Ya, it is. But if we do so, every driver which rely on ISC_SPI must be check both #ifdef ISC_SPI and OMV_ENABLE_XXX.
Because it may cause a compiler time error, are you sure u want to do it?",True,{}
openmv/openmv,https://github.com/openmv/openmv,1360,2021-06-11T06:33:14Z,2021-06-12T13:56:09Z,2021-06-12T16:37:13Z,MERGED,True,115,108,5,https://github.com/Lak4CYUT,Reorganize the ISC SPI related handles/macros.,3,[],https://github.com/openmv/openmv/pull/1360,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/1360#issuecomment-860043929,"The SPI bus on image sensor connector is not design for Lepton sensor only.
Thereforce, change the related functions and macros name from LEPTON_SPI_*
to ISC_SPI_* and move interrupt callback to sensor.c.","Ya, it is. But if we do so, every driver which rely on ISC_SPI must be check both #ifdef ISC_SPI and OMV_ENABLE_XXX.
Because it may cause a compiler time error, are you sure u want to do it?

Yes it's okay, and you don't need to check for ISC_SPI anywhere else, if you enable an SPI sensor without defining ISC_SPI it should cause an error so you know that something is wrong. Currently it will define an empty handle (with a NULL instance) and no IRQ/DMA handlers which will cause faults if you run it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1360,2021-06-11T06:33:14Z,2021-06-12T13:56:09Z,2021-06-12T16:37:13Z,MERGED,True,115,108,5,https://github.com/Lak4CYUT,Reorganize the ISC SPI related handles/macros.,3,[],https://github.com/openmv/openmv/pull/1360,https://github.com/iabdalkader,5,https://github.com/openmv/openmv/pull/1360#issuecomment-860059800,"The SPI bus on image sensor connector is not design for Lepton sensor only.
Thereforce, change the related functions and macros name from LEPTON_SPI_*
to ISC_SPI_* and move interrupt callback to sensor.c.","@Lak4CYUT merged, thanks! You should send the PR that adds the driver next (all the Makefiles changes, all omv/drivers/pixart/* and omv/sensors/paj6100*), followed by a PR with changes to sensor.h and sensor.c. Finally a PR to enable it in omv_boardconfig.h",True,{'THUMBS_UP': ['https://github.com/Lak4CYUT']}
openmv/openmv,https://github.com/openmv/openmv,1360,2021-06-11T06:33:14Z,2021-06-12T13:56:09Z,2021-06-12T16:37:13Z,MERGED,True,115,108,5,https://github.com/Lak4CYUT,Reorganize the ISC SPI related handles/macros.,3,[],https://github.com/openmv/openmv/pull/1360,https://github.com/Lak4CYUT,6,https://github.com/openmv/openmv/pull/1360#issuecomment-860077532,"The SPI bus on image sensor connector is not design for Lepton sensor only.
Thereforce, change the related functions and macros name from LEPTON_SPI_*
to ISC_SPI_* and move interrupt callback to sensor.c.","Yes it's okay, and you don't need to check for ISC_SPI anywhere else, if you enable an SPI sensor without defining ISC_SPI it should cause an error so you know that something is wrong. Currently it will define an empty handle (with a NULL instance) and no IRQ/DMA handlers which will cause faults if you run it.

Wow, agree that. It is a good point.
I will send the next PR later, see you soon.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1361,2021-06-11T21:13:06Z,2021-06-11T21:23:05Z,2021-06-11T21:23:08Z,MERGED,True,1,0,1,https://github.com/iabdalkader,Add missing nimble flag.,1,[],https://github.com/openmv/openmv/pull/1361,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1361,Must be set in the top level to fix pendsv table.,Must be set in the top level to fix pendsv table.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1362,2021-06-12T21:01:31Z,2021-06-12T21:12:39Z,2021-06-12T21:12:43Z,MERGED,True,21,1,2,https://github.com/iabdalkader,Eth low power,2,[],https://github.com/openmv/openmv/pull/1362,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1362,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1363,2021-06-14T02:31:48Z,2021-06-14T12:22:16Z,2021-06-14T12:22:16Z,MERGED,True,948,142,13,https://github.com/kwagyeman,Update MT9M114 driver to work,1,[],https://github.com/openmv/openmv/pull/1363,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1363,"Initial commit of a working MT9M114 driver.
Board design and lens choice need work. Then any register settings after this can be tuned to improve image quality. This driver has all the recommended OnSemi errata fixes and etc.","Initial commit of a working MT9M114 driver.
Board design and lens choice need work. Then any register settings after this can be tuned to improve image quality. This driver has all the recommended OnSemi errata fixes and etc.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1364,2021-06-15T07:14:19Z,2021-06-15T14:28:45Z,2022-01-27T07:39:08Z,CLOSED,False,1194,3,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,6,[],https://github.com/openmv/openmv/pull/1364,https://github.com/Lak4CYUT,1,https://github.com/openmv/openmv/pull/1364,"As title, please refer to comments of commits for more details.","As title, please refer to comments of commits for more details.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1364,2021-06-15T07:14:19Z,2021-06-15T14:28:45Z,2022-01-27T07:39:08Z,CLOSED,False,1194,3,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,6,[],https://github.com/openmv/openmv/pull/1364,https://github.com/Lak4CYUT,2,https://github.com/openmv/openmv/pull/1364#issuecomment-861548076,"As title, please refer to comments of commits for more details.","This PR is too many errors, cancel and re-submit a clear one.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,1,https://github.com/openmv/openmv/pull/1365,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,2,https://github.com/openmv/openmv/pull/1365#issuecomment-862636943,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","In My timezone, 3:00 AM now... so sad... XDXD",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1365#issuecomment-862643446,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","In My timezone, 3:00 AM now... so sad... XDXD

I understand but this is taking so long because you don't want to apply the suggestions, also keep in mind I have to review again after every change. Please just apply the requested changes.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,4,https://github.com/openmv/openmv/pull/1365#issuecomment-862648831,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","That is fine. Ok, it should be done.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,5,https://github.com/openmv/openmv/pull/1365#issuecomment-862662969,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","#1365 (comment)
Ok, there is final time I try to .. discuss about this.
We should try to decoupling as much as possible in Header file.
I can remove #include <stdbool.h> form paj6100.h but it make the user of paj6100.h to know that MUST include stdbool.h before include paj6100.h, WE SHOULD AVOID THAT.
I don't understand why we put us in danger, if one day this project grows up like Android or Linux lite-kernel, it is hard to debug a ""header order issues"".
Ok, above is my suggestion.
It is your project, I will do what you want me to do.
But, think about it. It is good for this project.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/1365#issuecomment-862670783,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","I can remove #include <stdbool.h> form paj6100.h but it make the user of paj6100.h to know that MUST include stdbool.h before include paj6100.h, WE SHOULD AVOID THAT.

@Lak4CYUT It is bad practice in general to include header files in other header files, we try to fix that when possible. It's not just for this sensor, see all the other sensor headers no includes :)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,7,https://github.com/openmv/openmv/pull/1365#issuecomment-862673670,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","I can remove #include <stdbool.h> form paj6100.h but it make the user of paj6100.h to know that MUST include stdbool.h before include paj6100.h, WE SHOULD AVOID THAT.

@Lak4CYUT It is bad practice in general to include header files in other header files, we try to fix that when possible. It's not just for this sensor, see all the other sensor headers no includes :)

The header should ""independent"", that is why we need below coding style in header.
Because it will avoid the order problem (re-include), not rely on human check..
#ifndef XX_H_
#define XX_H_
....
#endif //xx

Engineer is not always know a header need a special include order, it is bad coding style.
You can reference to Linux kernel headers, it is always try to design the decoupling header.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,8,https://github.com/openmv/openmv/pull/1365#issuecomment-862676690,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","@iabdalkader just talking about the technical, I didn't mean any offense. Peace :)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/iabdalkader,9,https://github.com/openmv/openmv/pull/1365#issuecomment-862676695,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","Engineer is not always know a header need a special include order, it is bad coding style.

It is true, it has advantages and disadvantages... The important thing is we follow this style in this repo (for important reasons) so PRs must try to do the same.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,10,https://github.com/openmv/openmv/pull/1365#issuecomment-862677237,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","Engineer is not always know a header need a special include order, it is bad coding style.

It is true, it has advantages and disadvantages... The important thing is we follow this style in this repo (for important reasons) so PRs must try to do the same.

Understood.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/iabdalkader,11,https://github.com/openmv/openmv/pull/1365#issuecomment-862684474,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","I'm sorry but I keep trying to explain with suggestions how the header should be, but maybe it's not clear... This is how the header should look like:
/*
 * This file is part of the OpenMV project.
 * Copyright (c) 2019 Lake Fu <lake_fu@pixart.com>
 * This work is licensed under the MIT license, see the file LICENSE for details.
 *
 * PAJ6100 driver.
 *
 */
#ifndef __PAJ6100_H__
#define __PAJ6100_H__
#define PAJ6100_XCLK_FREQ 6000000

bool paj6100_detect(sensor_t *sensor);
int paj6100_init(sensor_t *sensor);
#endif  // __PAJ6100_H__

You can finish this up later if you like. This is the last change, so if you fix that I'll merge it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,12,https://github.com/openmv/openmv/pull/1365#issuecomment-862690133,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","I'm sorry but I keep trying to explain with suggestions how the header should be, but maybe it's not clear... This is how the header should look like:

No, I don't want to add it back, but it cause a build failed....
CC sensors/lepton.c
CC sensors/hm01b0.c
CC sensors/gc2145.c
CC sensors/paj6100.c
In file included from sensors/paj6100.c:39:
sensors/paj6100.h:14:21: error: unknown type name 'sensor_t'
   14 | bool paj6100_detect(sensor_t *sensor);
      |                     ^~~~~~~~
sensors/paj6100.h:15:18: error: unknown type name 'sensor_t'
   15 | int paj6100_init(sensor_t *sensor);
      |                  ^~~~~~~~
CC modules/py_clock.c
Makefile:119: recipe for target '/home/travis/build/openmv/openmv/src/build/omv/sensors/paj6100.o' failed
make[1]: *** [/home/travis/build/openmv/openmv/src/build/omv/sensors/paj6100.o] Error 1
make[1]: *** Waiting for unfinished jobs....
make[1]: Leaving directory '/home/travis/build/openmv/openmv/src/omv'
omv/ports/stm32/omv_portconfig.mk:595: recipe for target 'FIRMWARE_OBJS' failed
make: *** [FIRMWARE_OBJS] Error 2
make: Leaving directory '/home/travis/build/openmv/openmv/src'
The command ""make -j$(nproc) TARGET=$TARGET -C src"" exited with 2.
0.00s$ mkdir ~/build/$TARGET
The command ""mkdir ~/build/$TARGET"" exited with 0.
0.00s$ cp -r src/build/bin/* ~/build/$TARGET",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,13,https://github.com/openmv/openmv/pull/1365#issuecomment-862696980,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","I cannot copy the link, please reference to last build failed, tap the ""x"" you can see what I see...",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,14,https://github.com/openmv/openmv/pull/1365#issuecomment-862697844,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","Ok, I know.
You will want me include sensor.h from paj6100.c, right? I do it, wait....",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/iabdalkader,15,https://github.com/openmv/openmv/pull/1365#issuecomment-862698592,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","Ok, I know.
You will want me include sensor.h from paj6100.c, right? I do it, wait....

Yes the includes should be like this:
#include ""omv_boardconfig.h""
#if (OMV_ENABLE_PAJ6100 == 1)
#include <stdio.h>
#include <stdbool.h>

#include ""systick.h""
#include ""sensor.h""
#include ""framebuffer.h""

#include ""paj6100.h""
#include ""paj6100_reg.h""
#include ""pixspi.h""",True,{'THUMBS_UP': ['https://github.com/Lak4CYUT']}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/iabdalkader,16,https://github.com/openmv/openmv/pull/1365#issuecomment-862705184,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","Looks good, waiting for the build then will merge it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,17,https://github.com/openmv/openmv/pull/1365#issuecomment-862705691,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","You know what cause this build error? The order of include .. I .. I don't ... sigh
We can avoid this, why we don't do it.... I don't understand...
For the edit format to give up a good coding style...",True,{}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/iabdalkader,18,https://github.com/openmv/openmv/pull/1365#issuecomment-862716983,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","You know what cause this build error? The order of include .. I .. I don't ... sigh
We can avoid this, why we don't do it.... I don't understand...

We do this for the following reasons:

Including headers in headers pulls in dependencies which may not exist for a certain ports or files that are not portable (I've had to fix a lot of issues because of this and still fixing)
It forces a certain include order which I prefer in drivers:


system headers like <stdio.h> <stdint.h>
micropython includes
abstract and major components like sensor.h and framebuffer.h
Finally file specific include like paj6100.h and paj6100_regs.h",True,{'THUMBS_UP': ['https://github.com/Lak4CYUT']}
openmv/openmv,https://github.com/openmv/openmv,1365,2021-06-15T14:34:43Z,2021-06-16T20:45:14Z,2021-06-16T20:57:03Z,MERGED,True,1193,4,17,https://github.com/Lak4CYUT,Support PixArt image sensor PAJ6100,20,[],https://github.com/openmv/openmv/pull/1365,https://github.com/Lak4CYUT,19,https://github.com/openmv/openmv/pull/1365#issuecomment-862720967,"Add a sensor implementation for PAJ6100.
Add a PixArt driver to manage SPI operations.
Improve sensor.c to fully support wide chip ID.","ok, i will follow your rules in future work.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1366,2021-06-15T21:36:10Z,2021-06-15T21:52:43Z,2021-06-15T21:52:46Z,MERGED,True,4512,1,28,https://github.com/iabdalkader,Add RP2040 port and Pico and Nano board files.,1,[],https://github.com/openmv/openmv/pull/1366,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1366,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1367,2021-06-16T04:52:11Z,2021-06-16T20:53:55Z,2021-06-16T20:53:55Z,MERGED,True,23,11,2,https://github.com/kwagyeman,Add method to get actual xclk freq,1,[],https://github.com/openmv/openmv/pull/1367,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1367,It's been an issue that we don't know the real xclk freq on boards. This allows you to get that so that the exposure time calculations in camera sensor driver code are actually correct.,It's been an issue that we don't know the real xclk freq on boards. This allows you to get that so that the exposure time calculations in camera sensor driver code are actually correct.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1367,2021-06-16T04:52:11Z,2021-06-16T20:53:55Z,2021-06-16T20:53:55Z,MERGED,True,23,11,2,https://github.com/kwagyeman,Add method to get actual xclk freq,1,[],https://github.com/openmv/openmv/pull/1367,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1367#issuecomment-862600106,It's been an issue that we don't know the real xclk freq on boards. This allows you to get that so that the exposure time calculations in camera sensor driver code are actually correct.,Merge?,True,{}
openmv/openmv,https://github.com/openmv/openmv,1368,2021-06-16T22:20:49Z,2021-06-16T22:39:39Z,2021-06-16T22:39:43Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update docs.,1,[],https://github.com/openmv/openmv/pull/1368,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1368,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1369,2021-06-17T13:39:30Z,2021-06-17T18:30:28Z,2021-06-19T20:25:51Z,MERGED,True,49,34,4,https://github.com/iabdalkader,Add Nano 2040 to release build.,1,[],https://github.com/openmv/openmv/pull/1369,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1369,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1370,2021-06-19T03:50:24Z,2021-06-19T20:01:15Z,2021-06-19T20:01:15Z,MERGED,True,151,19,4,https://github.com/kwagyeman,Finish MT9M114 driver,1,[],https://github.com/openmv/openmv/pull/1370,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1370,"Everything works except:

Need to update bayer image processing code to handle all possible pattern options versus 1.
Set_contrast appears to do nothing. Verified it's setting the right register however per the datasheet.
Set_windowing doesn't really work. You can get cropping and a frame rate boost if you shrink the vertical res only. Need to work on the code more.
Bigger issue with the above... changing the resolution/windowing wipes exposure settings making the 100 FPS example not work. Not really sure if this can be fixed given the way the sensor works.","Everything works except:

Need to update bayer image processing code to handle all possible pattern options versus 1.
Set_contrast appears to do nothing. Verified it's setting the right register however per the datasheet.
Set_windowing doesn't really work. You can get cropping and a frame rate boost if you shrink the vertical res only. Need to work on the code more.
Bigger issue with the above... changing the resolution/windowing wipes exposure settings making the 100 FPS example not work. Not really sure if this can be fixed given the way the sensor works.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1370,2021-06-19T03:50:24Z,2021-06-19T20:01:15Z,2021-06-19T20:01:15Z,MERGED,True,151,19,4,https://github.com/kwagyeman,Finish MT9M114 driver,1,[],https://github.com/openmv/openmv/pull/1370,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1370#issuecomment-864395506,"Everything works except:

Need to update bayer image processing code to handle all possible pattern options versus 1.
Set_contrast appears to do nothing. Verified it's setting the right register however per the datasheet.
Set_windowing doesn't really work. You can get cropping and a frame rate boost if you shrink the vertical res only. Need to work on the code more.
Bigger issue with the above... changing the resolution/windowing wipes exposure settings making the 100 FPS example not work. Not really sure if this can be fixed given the way the sensor works.","Need to update bayer image processing code to handle all possible pattern options versus 1.

Some sensors support switching bayer pattern, probably worth looking into.

Bigger issue with the above... changing the resolution/windowing wipes exposure settings making the 100 FPS example not work. Not really sure if this can be fixed given the way the sensor works.

That's easy we can maintain the reg values in some structure, and write again after res changes or whenever it's needed.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1370,2021-06-19T03:50:24Z,2021-06-19T20:01:15Z,2021-06-19T20:01:15Z,MERGED,True,151,19,4,https://github.com/kwagyeman,Finish MT9M114 driver,1,[],https://github.com/openmv/openmv/pull/1370,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1370#issuecomment-864451255,"Everything works except:

Need to update bayer image processing code to handle all possible pattern options versus 1.
Set_contrast appears to do nothing. Verified it's setting the right register however per the datasheet.
Set_windowing doesn't really work. You can get cropping and a frame rate boost if you shrink the vertical res only. Need to work on the code more.
Bigger issue with the above... changing the resolution/windowing wipes exposure settings making the 100 FPS example not work. Not really sure if this can be fixed given the way the sensor works.",It's ready,True,{}
openmv/openmv,https://github.com/openmv/openmv,1371,2021-06-19T04:23:00Z,2021-06-28T23:49:53Z,2021-06-28T23:49:53Z,MERGED,True,3316,31,11,https://github.com/kwagyeman,Add jpeg decoding support,3,[],https://github.com/openmv/openmv/pull/1371,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1371,Add preliminary software jpeg decoding support. Grayscale/Binary -> RGB565 conversion doesn't work yet. Everything else does. Larry will fix.,Add preliminary software jpeg decoding support. Grayscale/Binary -> RGB565 conversion doesn't work yet. Everything else does. Larry will fix.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1371,2021-06-19T04:23:00Z,2021-06-28T23:49:53Z,2021-06-28T23:49:53Z,MERGED,True,3316,31,11,https://github.com/kwagyeman,Add jpeg decoding support,3,[],https://github.com/openmv/openmv/pull/1371,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1371#issuecomment-867868645,Add preliminary software jpeg decoding support. Grayscale/Binary -> RGB565 conversion doesn't work yet. Everything else does. Larry will fix.,Please format jpeg_dec.c with ../tools/codeformat.sh jpeg_dec.c might as well rename it to jpegd.c,True,{}
openmv/openmv,https://github.com/openmv/openmv,1371,2021-06-19T04:23:00Z,2021-06-28T23:49:53Z,2021-06-28T23:49:53Z,MERGED,True,3316,31,11,https://github.com/kwagyeman,Add jpeg decoding support,3,[],https://github.com/openmv/openmv/pull/1371,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1371#issuecomment-869228893,Add preliminary software jpeg decoding support. Grayscale/Binary -> RGB565 conversion doesn't work yet. Everything else does. Larry will fix.,Did updates as requested.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1372,2021-06-19T13:24:27Z,2021-06-19T13:41:49Z,2021-06-19T13:41:52Z,MERGED,True,1,1,1,https://github.com/iabdalkader,stm32: Align ADC driver with upstream.,1,[],https://github.com/openmv/openmv/pull/1372,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1372,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1373,2021-06-19T20:04:08Z,2021-06-19T20:18:39Z,2021-06-19T20:25:37Z,MERGED,True,1,1,1,https://github.com/iabdalkader,stm32: Fix dma_nohal_init for H7.,1,[],https://github.com/openmv/openmv/pull/1373,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1373,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1374,2021-06-21T21:11:26Z,2021-06-21T21:35:33Z,2021-06-21T21:35:36Z,MERGED,True,153,41,6,https://github.com/iabdalkader,Rp2 dcmi pio updates,3,[],https://github.com/openmv/openmv/pull/1374,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1374,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1375,2021-06-22T17:07:15Z,2021-06-23T15:01:37Z,2021-06-23T15:01:37Z,MERGED,True,61,0,5,https://github.com/galal-hussein,Add docker build,7,[],https://github.com/openmv/openmv/pull/1375,https://github.com/galal-hussein,1,https://github.com/openmv/openmv/pull/1375,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1376,2021-06-24T22:06:03Z,2021-06-24T22:48:28Z,2021-06-24T22:48:41Z,MERGED,True,67,61,3,https://github.com/iabdalkader,Rename dcmi_abort to sensor_abort.,1,[],https://github.com/openmv/openmv/pull/1376,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1376,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1377,2021-06-25T17:18:29Z,2021-06-25T17:51:48Z,2021-06-25T17:51:52Z,MERGED,True,5,1,2,https://github.com/iabdalkader,RP2: Update MSC mode.,1,[],https://github.com/openmv/openmv/pull/1377,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1377,"Fix inquiry_cb bug.
Align with upstream PR.","Fix inquiry_cb bug.
Align with upstream PR.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1378,2021-06-26T18:14:34Z,2021-06-26T18:24:40Z,2021-06-26T21:27:41Z,MERGED,True,226,0,6,https://github.com/iabdalkader,Add urequests module to frozen modules.,1,[],https://github.com/openmv/openmv/pull/1378,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1378,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1379,2021-06-27T13:52:40Z,2021-06-27T14:54:21Z,2021-06-27T14:54:21Z,MERGED,True,48,0,1,https://github.com/galal-hussein,Add docker README,1,[],https://github.com/openmv/openmv/pull/1379,https://github.com/galal-hussein,1,https://github.com/openmv/openmv/pull/1379,"README includes:

Section about how to use docker build to build the firmware with various TARGETs
Section about testing post/get requests using a nginx web server via docker","README includes:

Section about how to use docker build to build the firmware with various TARGETs
Section about testing post/get requests using a nginx web server via docker",True,{}
openmv/openmv,https://github.com/openmv/openmv,1380,2021-06-29T12:36:51Z,2021-06-29T12:49:18Z,2021-06-29T12:49:23Z,MERGED,True,219,210,7,https://github.com/iabdalkader,Rename sensor functions for consistency across ports.,1,[],https://github.com/openmv/openmv/pull/1380,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1380,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1381,2021-06-29T14:19:54Z,2021-06-29T14:48:01Z,2021-06-29T14:48:04Z,MERGED,True,14,14,6,https://github.com/iabdalkader,Rename dcmi/dma config functions.,1,[],https://github.com/openmv/openmv/pull/1381,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1381,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1382,2021-06-29T15:05:49Z,2021-06-29T15:19:48Z,2021-06-29T15:19:51Z,MERGED,True,36,37,3,https://github.com/iabdalkader,Use mp_hal_delay_ms instead of systick_sleep.,1,[],https://github.com/openmv/openmv/pull/1382,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1382,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1383,2021-06-29T19:29:40Z,2021-06-29T20:28:18Z,2021-06-29T20:28:21Z,MERGED,True,1184,2734,9,https://github.com/iabdalkader,Move common image sensor driver code to a common file.,1,[],https://github.com/openmv/openmv/pull/1383,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1383,"Provide image sensor driver utility functions that can be used by all ports.
Provide default (weak) functions that can be replaced by port-specific drivers.","Provide image sensor driver utility functions that can be used by all ports.
Provide default (weak) functions that can be replaced by port-specific drivers.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1383,2021-06-29T19:29:40Z,2021-06-29T20:28:18Z,2021-06-29T20:28:21Z,MERGED,True,1184,2734,9,https://github.com/iabdalkader,Move common image sensor driver code to a common file.,1,[],https://github.com/openmv/openmv/pull/1383,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1383#issuecomment-870866933,"Provide image sensor driver utility functions that can be used by all ports.
Provide default (weak) functions that can be replaced by port-specific drivers.","I think you can move the set xclk stuff into the sensor common folder too.

No this one is too hw/port-specific.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1383,2021-06-29T19:29:40Z,2021-06-29T20:28:18Z,2021-06-29T20:28:21Z,MERGED,True,1184,2734,9,https://github.com/iabdalkader,Move common image sensor driver code to a common file.,1,[],https://github.com/openmv/openmv/pull/1383,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1383#issuecomment-870867200,"Provide image sensor driver utility functions that can be used by all ports.
Provide default (weak) functions that can be replaced by port-specific drivers.","Tested on OMV4, PICO, NANO33",True,{}
openmv/openmv,https://github.com/openmv/openmv,1385,2021-06-30T12:29:15Z,2021-06-30T13:06:16Z,2021-06-30T13:06:18Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix ADC pins.,1,[],https://github.com/openmv/openmv/pull/1385,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1385,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1386,2021-07-01T15:51:09Z,2021-07-01T18:52:08Z,2021-07-01T18:52:11Z,MERGED,True,364,173,5,https://github.com/iabdalkader,Add sensor error codes.,1,[],https://github.com/openmv/openmv/pull/1386,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1386,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1387,2021-07-01T21:04:48Z,2021-07-02T11:26:41Z,2021-07-02T11:26:44Z,MERGED,True,167,179,1,https://github.com/iabdalkader,Use sensor error codes in py_sensor.,1,[],https://github.com/openmv/openmv/pull/1387,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1387,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1388,2021-07-04T22:10:57Z,2021-07-04T22:25:56Z,2021-07-04T22:25:59Z,MERGED,True,1602,18,11,https://github.com/iabdalkader,Enable RP2 networking and add NINA-W10 driver and modules.,1,[],https://github.com/openmv/openmv/pull/1388,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1388,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1390,2021-07-06T18:44:21Z,2021-07-06T18:58:19Z,2021-07-06T18:58:22Z,MERGED,True,18,0,4,https://github.com/iabdalkader,RP2: Support jump to bootloader command.,1,[],https://github.com/openmv/openmv/pull/1390,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1390,"Add picotool binary.
Support jump to bootloader command.
MSC interface is disabled on jump to boot.","Add picotool binary.
Support jump to bootloader command.
MSC interface is disabled on jump to boot.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1391,2021-07-09T20:15:25Z,2021-07-09T20:27:19Z,2021-07-09T20:27:21Z,MERGED,True,2,2,2,https://github.com/iabdalkader,STM32: Update SDRAM test.,1,[],https://github.com/openmv/openmv/pull/1391,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1391,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1392,2021-07-10T17:54:49Z,2021-07-10T18:12:43Z,2021-07-10T18:12:47Z,MERGED,True,15,3,3,https://github.com/iabdalkader,RP2: Add bluetooth and nimble support.,1,[],https://github.com/openmv/openmv/pull/1392,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1392,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1394,2021-07-14T21:40:49Z,2021-07-14T22:25:42Z,2021-07-14T22:25:54Z,MERGED,True,7,1,1,https://github.com/iabdalkader,Fix cambus getting stuck sometimes after failed scan.,1,[],https://github.com/openmv/openmv/pull/1394,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1394,"This seems to only affect the H7.
After a failed scan the bus can get stuck. Re-initializing the bus fixes it, but it seems disabling and re-enabling the bus is all that's needed.","This seems to only affect the H7.
After a failed scan the bus can get stuck. Re-initializing the bus fixes it, but it seems disabling and re-enabling the bus is all that's needed.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1395,2021-07-15T18:11:06Z,2021-07-15T18:22:22Z,2021-07-15T18:22:24Z,MERGED,True,28,4,1,https://github.com/iabdalkader,PORTENTA: Update pinout,1,[],https://github.com/openmv/openmv/pull/1395,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1395,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1396,2021-07-15T18:42:03Z,2021-07-15T20:12:25Z,2021-07-15T20:12:28Z,MERGED,True,6,6,5,https://github.com/iabdalkader,Allow sensor_utils probe_init to take bus id/speed args.,1,[],https://github.com/openmv/openmv/pull/1396,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1396,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1397,2021-07-15T21:51:45Z,2021-07-15T22:16:51Z,2021-07-15T22:16:54Z,MERGED,True,59,10,3,https://github.com/iabdalkader,Allow boards to define an alternate cambus to scan.,1,[],https://github.com/openmv/openmv/pull/1397,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1397,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1398,2021-07-16T19:45:42Z,2021-07-16T20:43:19Z,2021-07-16T20:43:22Z,MERGED,True,7,1,1,https://github.com/iabdalkader,Allow boards to define an extra cam timer pin.,1,[],https://github.com/openmv/openmv/pull/1398,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1398,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1399,2021-07-16T19:53:38Z,2021-07-16T20:43:28Z,2021-07-16T20:43:31Z,MERGED,True,18,2,1,https://github.com/iabdalkader,Portenta: Add alternate I2C and PWM for breakout board.,1,[],https://github.com/openmv/openmv/pull/1399,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1399,"Add support for the breakout board.
Enable extra sensor drivers.","Add support for the breakout board.
Enable extra sensor drivers.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1400,2021-07-19T22:43:16Z,2021-07-19T22:55:30Z,2021-07-19T22:59:41Z,MERGED,True,118,1,3,https://github.com/iabdalkader,RP2: Nina BT fixes and updates.,1,[],https://github.com/openmv/openmv/pull/1400,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1400,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1401,2021-07-19T22:58:54Z,2021-07-19T23:13:08Z,2021-07-19T23:13:23Z,MERGED,True,2,2,1,https://github.com/iabdalkader,RP2: Optimize bus scanning.,1,[],https://github.com/openmv/openmv/pull/1401,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1401,"For sensor-less boards, lower the scan address space.","For sensor-less boards, lower the scan address space.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1402,2021-07-20T21:03:33Z,2021-07-20T21:21:26Z,2021-07-20T21:21:29Z,MERGED,True,1,1,1,https://github.com/iabdalkader,RP2: Fix command prompt repo tag.,1,[],https://github.com/openmv/openmv/pull/1402,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1402,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1404,2021-07-21T04:59:57Z,2021-07-25T17:27:08Z,2021-07-25T17:27:08Z,MERGED,True,8,0,2,https://github.com/elmagnificogi,OpenMV4 support OV7670,3,[],https://github.com/openmv/openmv/pull/1404,https://github.com/elmagnificogi,1,https://github.com/openmv/openmv/pull/1404,"OpenMV4 support OV7670
i also make a issue about it","OpenMV4 support OV7670
i also make a issue about it",True,{}
openmv/openmv,https://github.com/openmv/openmv,1405,2021-07-22T13:41:55Z,2021-07-22T13:54:54Z,2021-07-22T13:54:57Z,MERGED,True,1,1,1,https://github.com/iabdalkader,RP2: Fix BT HCI uart timeout.,1,[],https://github.com/openmv/openmv/pull/1405,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1405,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1406,2021-07-24T20:02:30Z,2021-07-24T21:12:15Z,2021-07-24T21:12:18Z,MERGED,True,176,70,6,https://github.com/iabdalkader,RP2: Nina WiFi fixes.,1,[],https://github.com/openmv/openmv/pull/1406,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1406,"Fix BSP.
Fix rp2 networking modules.
Fix network module init.
Fix timeouts.
Fix TCP sockets.
Fix UDP sockets.
Add auto-binding for UDP sockets.","Fix BSP.
Fix rp2 networking modules.
Fix network module init.
Fix timeouts.
Fix TCP sockets.
Fix UDP sockets.
Add auto-binding for UDP sockets.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1409,2021-07-27T16:30:08Z,2021-07-27T16:42:29Z,2021-07-27T16:42:34Z,MERGED,True,1,1,1,https://github.com/iabdalkader,RP2: Fix USB PID/VID,1,[],https://github.com/openmv/openmv/pull/1409,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1409,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1410,2021-07-27T16:43:23Z,2021-07-27T17:24:46Z,2021-07-27T17:24:50Z,MERGED,True,1,1,1,https://github.com/iabdalkader,RP2: Bluetooth port updates.,1,[],https://github.com/openmv/openmv/pull/1410,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1410,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1411,2021-07-28T11:34:05Z,2021-07-28T12:09:28Z,2021-07-28T20:44:31Z,MERGED,True,72,22,4,https://github.com/iabdalkader,RP2: WiFi Nina fixes.,1,[],https://github.com/openmv/openmv/pull/1411,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1411,"Fix accept and close.
Check socket status before send/recv/accept etc..
Fix auto-bind.
Add BSP read_irq.","Fix accept and close.
Check socket status before send/recv/accept etc..
Fix auto-bind.
Add BSP read_irq.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1412,2021-07-28T20:44:18Z,2021-07-28T21:00:44Z,2021-07-28T21:02:12Z,MERGED,True,2,6,2,https://github.com/iabdalkader,RP2: Nina WiFi timeout fixes.,1,[],https://github.com/openmv/openmv/pull/1412,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1412,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1413,2021-07-28T21:02:00Z,2021-07-28T21:25:41Z,2021-07-28T21:25:43Z,MERGED,True,1,1,1,https://github.com/iabdalkader,RP2: Fix debugging text buffer race.,1,[],https://github.com/openmv/openmv/pull/1413,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1413,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1414,2021-07-29T19:24:29Z,2021-07-29T20:22:20Z,2021-07-29T20:26:00Z,MERGED,True,171,94,6,https://github.com/iabdalkader,RP2: Nina WiFi updates,5,[],https://github.com/openmv/openmv/pull/1414,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1414,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1415,2021-07-30T11:13:00Z,2021-07-30T11:23:56Z,2021-07-30T11:23:59Z,MERGED,True,1,1,1,https://github.com/iabdalkader,NRF: Add jump to bootloader.,1,[],https://github.com/openmv/openmv/pull/1415,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1415,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1416,2021-07-31T12:54:14Z,2021-07-31T13:13:50Z,2021-07-31T13:13:53Z,MERGED,True,2,3,1,https://github.com/iabdalkader,Make Nina firmware check less strict.,1,[],https://github.com/openmv/openmv/pull/1416,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1416,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1417,2021-07-31T19:39:06Z,2021-07-31T19:52:13Z,2021-07-31T19:52:16Z,MERGED,True,11,5,1,https://github.com/iabdalkader,Fix HM01B0 reset function.,1,[],https://github.com/openmv/openmv/pull/1417,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1417,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1418,2021-07-31T19:55:15Z,2021-07-31T20:23:03Z,2021-07-31T20:23:06Z,MERGED,True,36,0,5,https://github.com/iabdalkader,Add cambus_enable function.,1,[],https://github.com/openmv/openmv/pull/1418,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1418,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1419,2021-07-31T19:57:04Z,2021-07-31T20:22:53Z,2021-07-31T20:22:57Z,MERGED,True,4,2,1,https://github.com/iabdalkader,Fix ULPI low power mode entry with USB disconnected.,1,[],https://github.com/openmv/openmv/pull/1419,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1419,fixes #1408,fixes #1408,True,{}
openmv/openmv,https://github.com/openmv/openmv,1420,2021-07-31T19:57:43Z,2021-07-31T20:22:40Z,2021-07-31T20:22:43Z,MERGED,True,4,1,1,https://github.com/iabdalkader,Use sensor_strerror for sensor_reset error.,1,[],https://github.com/openmv/openmv/pull/1420,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1420,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1421,2021-08-01T16:25:40Z,2021-08-01T16:42:18Z,2021-08-01T16:42:21Z,MERGED,True,2,2,2,https://github.com/iabdalkader,RP2: Updates.,1,[],https://github.com/openmv/openmv/pull/1421,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1421,"Update USB config macros.
Increase Flash FS size.
Add missing openmv_disk file.
Enable MSC in bootloader.","Update USB config macros.
Increase Flash FS size.
Add missing openmv_disk file.
Enable MSC in bootloader.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1422,2021-08-04T10:07:42Z,2021-08-04T19:53:15Z,2021-08-04T19:53:16Z,CLOSED,False,13,0,1,https://github.com/sebromero,Add IMU example,1,[],https://github.com/openmv/openmv/pull/1422,https://github.com/sebromero,1,https://github.com/openmv/openmv/pull/1422,This PR adds an example to use the IMU on the RP2040,This PR adds an example to use the IMU on the RP2040,True,{}
openmv/openmv,https://github.com/openmv/openmv,1422,2021-08-04T10:07:42Z,2021-08-04T19:53:15Z,2021-08-04T19:53:16Z,CLOSED,False,13,0,1,https://github.com/sebromero,Add IMU example,1,[],https://github.com/openmv/openmv/pull/1422,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1422#issuecomment-892930586,This PR adds an example to use the IMU on the RP2040,Thanks but this one is already included in  #1423,True,{}
openmv/openmv,https://github.com/openmv/openmv,1423,2021-08-04T19:51:38Z,2021-08-04T20:18:15Z,2021-08-04T20:18:18Z,MERGED,True,442,0,11,https://github.com/iabdalkader,Add Nano-RP2040 examples.,1,[],https://github.com/openmv/openmv/pull/1423,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1423,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1424,2021-08-04T22:53:22Z,2021-08-05T01:24:50Z,2021-08-05T01:24:54Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Fix machine i2c scan.,1,[],https://github.com/openmv/openmv/pull/1424,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1424,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1425,2021-08-06T15:46:39Z,2021-08-06T16:05:52Z,2021-08-06T16:05:55Z,MERGED,True,4,2,1,https://github.com/iabdalkader,Fix sensor.read_reg,1,[],https://github.com/openmv/openmv/pull/1425,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1425,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1426,2021-08-06T16:06:54Z,2021-08-06T16:27:46Z,2021-08-06T16:27:52Z,MERGED,True,14,14,2,https://github.com/iabdalkader,Update RP2 boards I2C pinout.,1,[],https://github.com/openmv/openmv/pull/1426,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1426,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1428,2021-08-08T17:32:07Z,2021-08-08T17:42:54Z,2021-08-08T17:42:57Z,MERGED,True,193,103,2,https://github.com/iabdalkader,GC2145 driver updates.,1,[],https://github.com/openmv/openmv/pull/1428,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1428,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1429,2021-08-11T12:45:18Z,2021-08-11T16:01:29Z,2021-08-11T16:01:33Z,MERGED,True,222,192,14,https://github.com/iabdalkader,Enable text compression and fix all exception issues.,1,[],https://github.com/openmv/openmv/pull/1429,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1429,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1430,2021-08-11T12:46:08Z,2021-08-11T14:23:21Z,2021-08-11T14:23:24Z,MERGED,True,1,0,1,https://github.com/iabdalkader,Portenta: add ble_advertising.py to manifest.,1,[],https://github.com/openmv/openmv/pull/1430,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1430,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1431,2021-08-11T19:53:14Z,2021-08-11T21:36:14Z,2021-08-31T18:57:15Z,MERGED,True,117,63,30,https://github.com/iabdalkader,User c modules,5,[],https://github.com/openmv/openmv/pull/1431,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1431,"Switch to using USER_C_MODULES to add OpenMV Python modules.
It's no longer necessary to edit mpconfigport.h files to add a modules, or provide qstrs.
To add a new module just place in omv/modules/example.c and rebuild, it will be picked up and included in the firmware.
Similarly, port-specific modules can be add to  omv/ports//modules/example.c
See example module: omv/modules/examplemodule.c
NOTE: Took some extra time to fix stm32cubeai module, and test on stm32, nrf and rp2.","Switch to using USER_C_MODULES to add OpenMV Python modules.
It's no longer necessary to edit mpconfigport.h files to add a modules, or provide qstrs.
To add a new module just place in omv/modules/example.c and rebuild, it will be picked up and included in the firmware.
Similarly, port-specific modules can be add to  omv/ports//modules/example.c
See example module: omv/modules/examplemodule.c
NOTE: Took some extra time to fix stm32cubeai module, and test on stm32, nrf and rp2.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1431,2021-08-11T19:53:14Z,2021-08-11T21:36:14Z,2021-08-31T18:57:15Z,MERGED,True,117,63,30,https://github.com/iabdalkader,User c modules,5,[],https://github.com/openmv/openmv/pull/1431,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1431#issuecomment-897164236,"Switch to using USER_C_MODULES to add OpenMV Python modules.
It's no longer necessary to edit mpconfigport.h files to add a modules, or provide qstrs.
To add a new module just place in omv/modules/example.c and rebuild, it will be picked up and included in the firmware.
Similarly, port-specific modules can be add to  omv/ports//modules/example.c
See example module: omv/modules/examplemodule.c
NOTE: Took some extra time to fix stm32cubeai module, and test on stm32, nrf and rp2.",Very nice!,True,{}
openmv/openmv,https://github.com/openmv/openmv,1431,2021-08-11T19:53:14Z,2021-08-11T21:36:14Z,2021-08-31T18:57:15Z,MERGED,True,117,63,30,https://github.com/iabdalkader,User c modules,5,[],https://github.com/openmv/openmv/pull/1431,https://github.com/etonenamek,3,https://github.com/openmv/openmv/pull/1431#issuecomment-909450623,"Switch to using USER_C_MODULES to add OpenMV Python modules.
It's no longer necessary to edit mpconfigport.h files to add a modules, or provide qstrs.
To add a new module just place in omv/modules/example.c and rebuild, it will be picked up and included in the firmware.
Similarly, port-specific modules can be add to  omv/ports//modules/example.c
See example module: omv/modules/examplemodule.c
NOTE: Took some extra time to fix stm32cubeai module, and test on stm32, nrf and rp2.","Thank you so much guys! It much eaiser now to understand how to add C modules there.
QR2Py2inAu",True,{}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/1432,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1432#issuecomment-902938373,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,"@bitbank2 I'm sorry I completely missed this PR, will review and merge soon.",True,{'THUMBS_UP': ['https://github.com/bitbank2']}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1432#issuecomment-907175742,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,"@bitbank2 What would happen if jpeg_buf->realloc == false, jpeg_check_highwater will just set the overflow flag and return, wouldn't the code in jpeg_processDU continue to write to the buffer ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/bitbank2,4,https://github.com/openmv/openmv/pull/1432#issuecomment-907253059,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,I suppose it would. Does your code ever use it in that mode?,True,{}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/iabdalkader,5,https://github.com/openmv/openmv/pull/1432#issuecomment-907260946,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,"I suppose it would. Does your code ever use it in that mode?

Actually it only allows realloc once in all the calls for jpeg_compress, try:
grep -r jpeg_compress * | grep true",True,{}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/1432#issuecomment-907262765,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,"realloc is only used for MicroPython heap buffers, it's mostly false because JPEG buffers are preallocated or allocated on the frame buffer, or compressed in place etc...",True,{}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/iabdalkader,7,https://github.com/openmv/openmv/pull/1432#issuecomment-907265242,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,"Note the software jpeg encoder is now used on two newly supported boards, the both have very limited memory so it's very likely to overflow.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/bitbank2,8,https://github.com/openmv/openmv/pull/1432#issuecomment-907404882,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,How would you like it to handle the error case of running out of memory? Just return without finishing?,True,{}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/iabdalkader,9,https://github.com/openmv/openmv/pull/1432#issuecomment-908817180,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,"How would you like it to handle the error case of running out of memory? Just return without finishing?

Hi, it should set the flag and stop writing to the buffer, just like the current code, when it returns the overflow will be detected.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1432,2021-08-16T19:53:08Z,2021-09-04T12:26:46Z,2021-09-04T12:26:46Z,MERGED,True,71,9,1,https://github.com/bitbank2,speed up software JPEG encoding by about 10% with improved bit handling,3,[],https://github.com/openmv/openmv/pull/1432,https://github.com/bitbank2,10,https://github.com/openmv/openmv/pull/1432#issuecomment-909339986,The software JPEG encoder now has more efficient code to write the variable length codes to the output file.,"ok, I just pushed a fix which will allow the encode to finish successfully.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1433,2021-08-17T12:20:36Z,2021-08-17T13:09:20Z,2021-08-17T13:10:05Z,MERGED,True,25,21,1,https://github.com/iabdalkader,Fix ioctls args checking.,1,[],https://github.com/openmv/openmv/pull/1433,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1433,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1434,2021-08-20T22:23:08Z,2021-08-20T23:43:27Z,2021-08-20T23:43:31Z,MERGED,True,1018,153,7,https://github.com/iabdalkader,RP2: Update Audio module.,1,[],https://github.com/openmv/openmv/pull/1434,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1434,"Use a configurable number of PCM buffers in a queue to avoid overflows.
Add option to configure whether to use pendsv or mp_scheduler for Python callbacks.
Streaming can be started without a callback and get_buffer() returns a single buffer from the queue.
Add precomputed LUT for lib OpenPDM stored in flash (saves about 500uS per conversion).
Overflow detection and configurable abort on overflow.
Remove fixed DMA channel.","Use a configurable number of PCM buffers in a queue to avoid overflows.
Add option to configure whether to use pendsv or mp_scheduler for Python callbacks.
Streaming can be started without a callback and get_buffer() returns a single buffer from the queue.
Add precomputed LUT for lib OpenPDM stored in flash (saves about 500uS per conversion).
Overflow detection and configurable abort on overflow.
Remove fixed DMA channel.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1435,2021-08-22T18:26:07Z,2021-08-22T18:45:07Z,2021-08-22T18:45:10Z,MERGED,True,41,30,1,https://github.com/iabdalkader,RP2: Fix audio deinit.,1,[],https://github.com/openmv/openmv/pull/1435,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1435,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1436,2021-08-24T21:01:09Z,2021-08-24T21:22:59Z,2021-08-24T21:23:02Z,MERGED,True,6,9,1,https://github.com/iabdalkader,Fix set_framerate.,1,[],https://github.com/openmv/openmv/pull/1436,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1436,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1436,2021-08-24T21:01:09Z,2021-08-24T21:22:59Z,2021-08-24T21:23:02Z,MERGED,True,6,9,1,https://github.com/iabdalkader,Fix set_framerate.,1,[],https://github.com/openmv/openmv/pull/1436,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1436#issuecomment-904982826,,"Wait, I see. Um, just don't call set frame rate part if null.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1436,2021-08-24T21:01:09Z,2021-08-24T21:22:59Z,2021-08-24T21:23:02Z,MERGED,True,6,9,1,https://github.com/iabdalkader,Fix set_framerate.,1,[],https://github.com/openmv/openmv/pull/1436,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1436#issuecomment-904983284,,if (sensor.set_framerate != NULL) { -> if (sensor.set_framerate == NULL) {,True,{}
openmv/openmv,https://github.com/openmv/openmv,1436,2021-08-24T21:01:09Z,2021-08-24T21:22:59Z,2021-08-24T21:23:02Z,MERGED,True,6,9,1,https://github.com/iabdalkader,Fix set_framerate.,1,[],https://github.com/openmv/openmv/pull/1436,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1436#issuecomment-904986344,,It's correct.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1439,2021-08-26T14:25:51Z,2021-08-26T14:37:11Z,2021-08-26T14:44:18Z,MERGED,True,88,89,4,https://github.com/iabdalkader,Make WINC API compatible with other WiFi modules.,1,[],https://github.com/openmv/openmv/pull/1439,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1439,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1440,2021-08-26T14:56:16Z,2021-08-26T15:49:06Z,2021-08-26T15:49:08Z,MERGED,True,1,1,1,https://github.com/iabdalkader,stm32: Register WINC as default WLAN module when used.,1,[],https://github.com/openmv/openmv/pull/1440,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1440,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1441,2021-08-26T15:02:21Z,2021-08-26T15:28:32Z,2021-08-26T15:28:35Z,MERGED,True,2,2,1,https://github.com/iabdalkader,Nina-w10: Fix ifconfig args order.,1,[],https://github.com/openmv/openmv/pull/1441,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1441,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1442,2021-08-26T18:26:24Z,2021-08-26T20:20:46Z,2021-08-26T20:20:49Z,MERGED,True,29,1,2,https://github.com/iabdalkader,NANO-RP2040: Add patch to fix flash issue.,1,[],https://github.com/openmv/openmv/pull/1442,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1442,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1445,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1445#issuecomment-912071256,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","Actually I think maybe it's time to start fixing the bpp/format issues. We should add a format field to image_t and use bpp exclusively for bytes per pixel, and fix any code that uses BPP to check the image format.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1445#issuecomment-912081521,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","I'm fine with that. But, it should be in another PR.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/1445#issuecomment-912101492,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","I'm fine with that. But, it should be in another PR.

I agree, but I think it should be done first then this PR rebased accordingly...I'm looking at it and I realized we already have the PIXFORMAT_X enum it's used for sensors but we could reuse it for image formats too. Let's discuss... could reuse it like this:
diff --git a/src/omv/imlib/imlib.h b/src/omv/imlib/imlib.h
index 52f14501..bef2cccc 100644
--- a/src/omv/imlib/imlib.h
+++ b/src/omv/imlib/imlib.h
@@ -351,15 +351,24 @@ typedef enum image_bpp
     IMAGE_BPP_BINARY,       // BPP = 0
     IMAGE_BPP_GRAYSCALE,    // BPP = 1
     IMAGE_BPP_RGB565,       // BPP = 2
-    IMAGE_BPP_BAYER,        // BPP = 3
+    IMAGE_BPP_BAYER,        // BPP = 3 // TODO: define as 1 bpp later.
     IMAGE_BPP_JPEG          // BPP > 3
 }
 image_bpp_t;
 
+// Use image format high byte for format flags:
+ // Could expand in the future, for example PIXFORMAT_GRAYSCALE_16BITS.
+#define PIXFORMAT_MASK          (0x00FFFFFF)
+#define PIXFORMAT_BAYER_BGGR    ((1<<0) << 24)
+#define PIXFORMAT_BAYER_GBRG    ((1<<1) << 24)
+#define PIXFORMAT_BAYER_GRBG    ((1<<2) << 24)
+#define PIXFORMAT_BAYER_RGGB    ((1<<3) << 24)
+
 typedef struct image {
     int w;
     int h;
     int bpp;
+    uint32_t fmt;
     union {
         uint8_t *pixels;
         uint8_t *data;
@@ -593,7 +602,7 @@ extern const int kernel_high_pass_3[9];
 
 #define IM_IS_BAYER(img) \
     ({ __typeof__ (img) _img = (img); \
-       _img->bpp == 3; })
+       (_img->fmt & PIXFORMAT_MASK) == PIXFORMAT_BAYER; })
 
 #define IM_IS_JPEG(img) \
     ({ __typeof__ (img) _img = (img); \
In snapshot:
    image->bpp    = MAIN_FB()->bpp;
    image->fmt    = sensor->pixformat | sensor->pixformat_flags;
In switch statements:
switch (img->fmt) {
    case PIXFORMAT_GRAYSCALE:
        break;
    case (PIXFORMAT_GRAYSCALE | PIXFORMAT_GRAYSCALE_16BITS ):
        break;
    case (PIXFORMAT_BAYER | PIXFORMAT_BAYER_BGGR):
        break;
    case (PIXFORMAT_BAYER | PIXFORMAT_BAYER_GBRG):
        break;
    ....
}
Thoughts ?
Alternatively, we could keep pixformat_t for sensors, and add an image_fmt_t with as many new formats as needed,  but I think additional code will be needed to map pixformat_t to image_fmt_t.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/1445#issuecomment-912107249,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.",I kind like how bpp does multiple things though. What if bpp was split into 24-bits for the jpeg image and 8-bits for the format?,True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/1445#issuecomment-912122039,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","I kind like how bpp does multiple things though. What if bpp was split into 24-bits for the jpeg image and 8-bits for the format?

I thought about this initially, but I was trying to avoid mixing things again, plus what's the point ? We'll need the same amount of code changes, plus macros to set/extract the format and bpp, for example:
switch (IMLIB_GET_PIXFORMAT(img)) {
....
img->bpp = IMLIB_GET_BPP(src);
Vs just using fmt and bpp which is much cleaner:
switch(img->fmt) {
...
img->bpp = src->bpp;
It's possible though, but either way we still need BAYER flags for ""subformats"" because sensors expect PIXFORMAT_BAYER so image->bpp can't be set to sensor.pixformat directly...
Alternatively to save some space (which is insignificant but still) we could use bitfields:
typedef struct image {
    uint32_t w;
    uint32_t h;
    uint32_t fmt:8;
    uint32_t bpp:24;
    union {
        uint8_t *pixels;
        uint8_t *data;
    };
} image_t;",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/kwagyeman,7,https://github.com/openmv/openmv/pull/1445#issuecomment-912124851,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","Mainly I just want to keep the ImageWriter format samish. So, I'd like to avoid too many changes.
Note, I have plans for:
YUYV (16-bits per pixel)
YVYU (16-bits per pixel - you need this additional one to handle crops of 1 pixel)
ARGB (32-bits) - for PNG support for loading graphics like logo overlays",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,8,https://github.com/openmv/openmv/pull/1445#issuecomment-912136329,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","Mainly I just want to keep the ImageWriter format samish.

This shouldn't change at all (the imageio format is w, h, bpp, size followed by image data) it should be the same regardless of how bpp is stored internally.

Mainly I just want to keep the ImageWriter format samish. So, I'd like to avoid too many changes.

Either way will require a lot of changes, but if bpp is shared (fmt + bpp) it will need even more changes because wherever bpp is used will need to be updated to extract/set the bpp/size 24-bit part, but if fmt is introduced, bpp will be the same.

ARGB (32-bits) - for PNG support for loading graphics like logo overlays

All the more reason to fix this, because JPEG is tested with bpp >= 4",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,9,https://github.com/openmv/openmv/pull/1445#issuecomment-912714430,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","How about this, we can encode everything in one field (fmt), but we need to fix all the code that uses the current bpp for bytes per pixel and pixel format ID:
#define PIXFORMAT_FLAGS_MF      (1 << 31) // Mutable format.
#define PIXFORMAT_FLAGS_CF      (1 << 30) // Color format.
#define PIXFORMAT_FLAGS_CM      (1 << 29) // Compressed image.
#define PIXFORMAT_FLAGS_RF      (1 << 28) // Raw format.
// Each pixel format encodes flags pixel format, and bpp/size in 32-bits.
// 31 30 29 28  27......24 23..........0
// MF CF CM RF <PIXFORMAT> <BPP or size>
typedef enum {
    PIXFORMAT_INVALID       = (                                                                         0),
    PIXFORMAT_BINARY        = (PIXFORMAT_FLAGS_MF                                           | (1 << 24) | 1),   // 1BPP/BINARY
    PIXFORMAT_GRAYSCALE     = (PIXFORMAT_FLAGS_MF                                           | (2 << 24) | 1),   // 1BPP/GRAYSCALE
    PIXFORMAT_RGB565        = (PIXFORMAT_FLAGS_MF | PIXFORMAT_FLAGS_CF                      | (3 << 24) | 2),   // 2BPP/RGB565
    PIXFORMAT_YUV422,       = (PIXFORMAT_FLAGS_MF | PIXFORMAT_FLAGS_CF                      | (4 << 24) | 2),   // 2BPP/YUV422
    PIXFORMAT_BAYER_BGGR,   = (PIXFORMAT_FLAGS_MF | PIXFORMAT_FLAGS_CF | PIXFORMAT_FLAGS_RF | (5 << 24) | 1),   // 1BPP/RAW
    PIXFORMAT_BAYER_GBRG,   = (PIXFORMAT_FLAGS_MF | PIXFORMAT_FLAGS_CF | PIXFORMAT_FLAGS_RF | (6 << 24) | 1),   // 1BPP/RAW
    PIXFORMAT_BAYER_GRBG,   = (PIXFORMAT_FLAGS_MF | PIXFORMAT_FLAGS_CF | PIXFORMAT_FLAGS_RF | (7 << 24) | 1),   // 1BPP/RAW
    PIXFORMAT_BAYER_RGGB,   = (PIXFORMAT_FLAGS_MF | PIXFORMAT_FLAGS_CF | PIXFORMAT_FLAGS_RF | (8 << 24) | 1),   // 1BPP/RAW
    PIXFORMAT_JPEG          = (PIXFORMAT_FLAGS_CM                                           | (9 << 24) | 0),   // JPEG/COMPRESSED
} pixformat_t;

From left to right: (color, mutable, compressed, raw flags in 4 bits), unique ID for the format (4 or 5 bits) followed by BPP (or JPEG size) in 24 bits.
Note the flags are there to replace these ever expanding macros and to make tests simpler:
#define IMAGE_IS_MUTABLE(image) \
({ \
    __typeof__ (image) _image = (image); \
    IMAGE_PIXFORMAT_EQUAL(_image->fmt, PIXFORMAT_BINARY) || \
    IMAGE_PIXFORMAT_EQUAL(_image->fmt, PIXFORMAT_GRAYSCALE) || \
    IMAGE_PIXFORMAT_EQUAL(_image->fmt, PIXFORMAT_RGB565); \
})
With
#define IMAGE_IS_MUTABLE(image) (image->fmt & PIXFORMAT_FLAGS_MF)
#define IMAGE_IS_BAYER(image) (image->fmt & PIXFORMAT_FLAGS_RF)
#define IMAGE_IS_MUTABLE_BAYER(image)  (image->fmt & (PIXFORMAT_FLAGS_MF | PIXFORMAT_FLAGS_RF) )",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/kwagyeman,10,https://github.com/openmv/openmv/pull/1445#issuecomment-912847318,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","That's pretty sensible actually. If you think about it these macros take up a lot of flash. An & with a bitmask is a very cheap operation on ARM.
Anyway, what fixes do you want to unblock merging this? We can do the pixformat update after this PR is merged. The ones above where you asked me to change the code? Can do very soon.
...
Regarding the RAW/Compressed format. Not sure if that's exactly needed. But, okay.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,11,https://github.com/openmv/openmv/pull/1445#issuecomment-912876510,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","Anyway, what fixes do you want to unblock merging this? We can do the pixformat update after this PR is merged. The ones above where you asked me to change the code? Can do very soon.

Actually I'd like to send a couple of PRs first then get this PR rebased after, because a lot of the changes won't be needed.

Regarding the RAW/Compressed format. Not sure if that's exactly needed. But, okay.

Not likely, it's still a work in progress I just sent a draft still thinking about some details. The Compressed flag was meant to be a quick check to see if the image is JPEG (or PNG if it's ever supported), but the Mutable flag can be used for the same purpose, so I will probably remove it. I'd still like to reserve at least 4 bits for flags for future proofing.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/kwagyeman,12,https://github.com/openmv/openmv/pull/1445#issuecomment-912879308,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","Larry will be adding PNG support soon. So, that's coming (PNG files are what makes the ARGB output).
Okay, I'll do IDE stuff then next. Let me know when this needs to be rebased.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,13,https://github.com/openmv/openmv/pull/1445#issuecomment-913028824,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","@kwagyeman one more PR to go, but I noticed that bpp is used sometimes for things like:
        uint32_t avail = fb_avail();
        uint32_t space = src_w_mcus_bytes_2 + FB_ALLOC_PADDING;
        dst->bpp = avail - space;
        dst->data = fb_alloc(dst->bpp, FB_ALLOC_PREFER_SIZE | FB_ALLOC_CACHE_ALIGN);
24 bits bpp might cause issues for code like that, I will still encode bpp in the pixformat, but I think there should a separate uint32_t size field for JPEG.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/kwagyeman,14,https://github.com/openmv/openmv/pull/1445#issuecomment-913030115,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","Ah, you are right...
Mmm, well, the jpeg is not going to be larger than 16MB. But, that would break instantly on this PR as it would 24-bit mod the value and roll over causing problems. So, we'd need to fix all places like that to limit the max available to the 2^24-1.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,15,https://github.com/openmv/openmv/pull/1445#issuecomment-913032322,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","So, we'd need to fix all places like that to limit the max available to the 2^24-1.

We could just add a 32 bit size field to image_t for JPEG/PNG size in general,  and for places like the example above to be safe. If I'm going through the all the code that does that to fix it, might as well replace bpp/size.... Plus I have a really cool idea for those extra 24-bits in the format which works with everything else.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/kwagyeman,16,https://github.com/openmv/openmv/pull/1445#issuecomment-913032702,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","Okay, sounds good.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,17,https://github.com/openmv/openmv/pull/1445#issuecomment-913051696,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","This is going to be a big change, so I figured I should share the basic idea first, so it's clear: 577fced
Note the change in image_t, the union of bit-field and int in image_t allow setting all the encoded info using the PIXFORMAT_ constants like this:
// All format bits, bpp etc.. are encoded in the constant PIXFORMAT_JPEG
image->pixfmt = PIXFORMAT_JPEG;

// Now all the bits are set, test compression/mutable:
if (image->is_compressed) {
} else if (image->is_mutable) {
}
printf(""bpp %u\n"", image->bpp);
//etc...
The following macros now look like this (they won't be needed but anyway):
#define IMAGE_IS_MUTABLE(image)             (image->is_mutable && !image->is_bayer)
#define IMAGE_IS_COLOR(image)               (image->is_color)
#define IMAGE_IS_MUTABLE_BAYER(image)       (image->is_mutable)
#define IMAGE_IS_MUTABLE_BAYER_JPEG(image)  (image->is_mutable || image->is_compressed)
You can also simply just set a sub-format when needed, like for example in the bayer case in snapshot:
image->pixfmt = sensor->pixformat; // assume it's bayer any sub format
image->subfmt_id = sensor->bayer; // sets the bayer sub-format that was set in sensor drivers.
Now you can just switch on (or test for) that format like this:
switch (image->pixfmt):
       case PIXFORMAT_BAYER_GBRG:
       case PIXFORMAT_BAYER_RGB565:
       ....
Or if you only care that it's a bayer format (or any RGB format) you can do this:
switch (image->pixfmt_id):
     case PIXFORMAT_ID_BAYER:
     case PIXFORMAT_ID_RGB:
     case PIXFORMAT_ID_YUV:
}
🧙",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/iabdalkader,18,https://github.com/openmv/openmv/pull/1445#issuecomment-913234433,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.","On second thought I'll leave the 24-bits bpp for now to reduce the change set and size can be added later... The main issue that will be fixed is making sure bpp is not used to test for pixel formats, and I'll also make sure it doesn't overflow when used for jpeg size.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1445,2021-09-01T13:13:48Z,2021-09-09T21:43:57Z,2021-09-09T21:45:09Z,MERGED,True,1079,927,7,https://github.com/kwagyeman,Add full debayering support,1,[],https://github.com/openmv/openmv/pull/1445,https://github.com/kwagyeman,19,https://github.com/openmv/openmv/pull/1445#issuecomment-913315684,"Adds support to debayer all possible bayer patterns (with SIMD support).
Bayer pattern output by cameras can now be specified. Defaults to BGGR.
Sets the MT9M114 bayer pattern default to match the camera sensor output.
Crop will automatically adjust the bayer pattern as it moves.

Notes:
It's now possible to cleanup some of the older image sensor set_framesize code which adjusts the bayer pattern readout pixel start to align to bggr. This is no longer needed. These fixes can be done in another PR.
In the future if we want to support sensors with clear bayer patterns this can be done easily by just extending the possible bayer pattern enums.",Cool,True,{}
openmv/openmv,https://github.com/openmv/openmv,1446,2021-09-03T12:51:20Z,2021-09-03T14:15:29Z,2021-09-03T14:15:32Z,CLOSED,False,7,3,4,https://github.com/iabdalkader,Add JPEG mode sensor flags.,1,[],https://github.com/openmv/openmv/pull/1446,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1446,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1447,2021-09-04T13:37:41Z,2021-09-04T20:19:27Z,2021-09-04T20:21:08Z,MERGED,True,122,113,17,https://github.com/iabdalkader,Replace sensor flags with bit fields.,1,[],https://github.com/openmv/openmv/pull/1447,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1447,"Much easier to manipulate and saves some memory.
Add field for bayer, set bayer format for mt9m.","Much easier to manipulate and saves some memory.
Add field for bayer, set bayer format for mt9m.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1448,2021-09-06T23:07:46Z,2021-09-09T11:34:32Z,2021-09-09T11:34:35Z,MERGED,True,1019,1041,46,https://github.com/iabdalkader,Advanced pixel formats.,2,[],https://github.com/openmv/openmv/pull/1448,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1448,"Use a new pixel format that encodes flags, id and bpp in the pixel format itself.

Start with imlib.h to understand what's going on.","Use a new pixel format that encodes flags, id and bpp in the pixel format itself.

Start with imlib.h to understand what's going on.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1448,2021-09-06T23:07:46Z,2021-09-09T11:34:32Z,2021-09-09T11:34:35Z,MERGED,True,1019,1041,46,https://github.com/iabdalkader,Advanced pixel formats.,2,[],https://github.com/openmv/openmv/pull/1448,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1448#issuecomment-913923650,"Use a new pixel format that encodes flags, id and bpp in the pixel format itself.

Start with imlib.h to understand what's going on.","Per your own comments about big PRs I can't review this. It's just too much.

That's true, but this has to be done all at once because it changes the pixel format, on the other hand I'd argue that #1445 (which also edits 15 files) can easily be reduced to more reviewable PRs.

However, the only thing I would check is all code dealing with jpegs since pixformat is not a static value anymore.

You're right, the bpp can be different for images and fb but not the sensor->pixformat. That's why I wanted to use the format id thing but not enough bits to implement it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1448,2021-09-06T23:07:46Z,2021-09-09T11:34:32Z,2021-09-09T11:34:35Z,MERGED,True,1019,1041,46,https://github.com/iabdalkader,Advanced pixel formats.,2,[],https://github.com/openmv/openmv/pull/1448,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1448#issuecomment-915245071,"Use a new pixel format that encodes flags, id and bpp in the pixel format itself.

Start with imlib.h to understand what's going on.","See e223762 for updates.
ImageIO can be fixed separately, but it needs to use a pixel format in both memory and file streams. I could try to maintain backwards compatibility by incrementing the version. Note without a pixformat in the header it's not possible to support formats other than GS or RGB565 anyway (for example, for 1bpp can't know if it's bayer or grayscale).",True,{}
openmv/openmv,https://github.com/openmv/openmv,1448,2021-09-06T23:07:46Z,2021-09-09T11:34:32Z,2021-09-09T11:34:35Z,MERGED,True,1019,1041,46,https://github.com/iabdalkader,Advanced pixel formats.,2,[],https://github.com/openmv/openmv/pull/1448,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1448#issuecomment-915711903,"Use a new pixel format that encodes flags, id and bpp in the pixel format itself.

Start with imlib.h to understand what's going on.","Okay, it's fine to merge.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1450,2021-09-17T16:33:57Z,2021-09-19T17:36:05Z,2021-09-19T17:36:05Z,MERGED,True,530,134,27,https://github.com/kwagyeman,Add yuv image processing support,1,[],https://github.com/openmv/openmv/pull/1450,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1450,"Adds full support for YUV422 image processing like the current full support for bayer image processing. This means you can crop the YUV image, draw it (or a crop of it) on any other RGB565/GRAYSCALE/BINARY image, send it (or a crop of it) to the TV/LCD, and JPEG compress it (or a crop of it). Pixel get/set methods are provided too. Scaling it or a crop of it also works when drawing on an image, display, or jpeg compression.
Tested hardware/software JPEG.
Tested on the OV7725, MT9M114, OV5640, OV2640 YUV422 mode.
Tested on OMV2/3/4/4P.","Adds full support for YUV422 image processing like the current full support for bayer image processing. This means you can crop the YUV image, draw it (or a crop of it) on any other RGB565/GRAYSCALE/BINARY image, send it (or a crop of it) to the TV/LCD, and JPEG compress it (or a crop of it). Pixel get/set methods are provided too. Scaling it or a crop of it also works when drawing on an image, display, or jpeg compression.
Tested hardware/software JPEG.
Tested on the OV7725, MT9M114, OV5640, OV2640 YUV422 mode.
Tested on OMV2/3/4/4P.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1451,2021-09-17T22:21:08Z,2021-09-20T12:35:17Z,2021-09-20T12:35:20Z,MERGED,True,144,103,12,https://github.com/iabdalkader,Bormio support,4,[],https://github.com/openmv/openmv/pull/1451,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1451,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1453,2021-09-21T13:15:09Z,2021-09-21T13:29:16Z,2021-09-21T13:29:19Z,MERGED,True,1,1,1,https://github.com/iabdalkader,stm32/machine_i2c: Enable HW I2C for H7.,1,[],https://github.com/openmv/openmv/pull/1453,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1453,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1454,2021-09-22T22:58:11Z,2021-09-23T20:45:41Z,2021-09-23T20:45:42Z,MERGED,True,162,291,7,https://github.com/kwagyeman,Kwabena/use draw image more,4,[],https://github.com/openmv/openmv/pull/1454,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1454,"Uses draw_image as the front end for AprilTags/Find_rect/barcode/datamatrix/qrcode - these methods now work on any image type
Use draw_image as the front end for tensorflow - scaling is better using bilinear interpolation now along with faster code. Works on any image type. However, tensorflow arena memory allocation prevents bayer/jpeg/yuv422 from working due to using up all RAM currently. Once memory allocation is optimized then bayer/jpeg/yuv422 will work too.
Fixes an issue with compress() and friends.","Uses draw_image as the front end for AprilTags/Find_rect/barcode/datamatrix/qrcode - these methods now work on any image type
Use draw_image as the front end for tensorflow - scaling is better using bilinear interpolation now along with faster code. Works on any image type. However, tensorflow arena memory allocation prevents bayer/jpeg/yuv422 from working due to using up all RAM currently. Once memory allocation is optimized then bayer/jpeg/yuv422 will work too.
Fixes an issue with compress() and friends.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1455,2021-09-23T04:38:17Z,2021-10-16T20:47:14Z,2021-10-16T20:47:14Z,MERGED,True,197,38,15,https://github.com/kwagyeman,Add basic frogeye2020 driver,3,[],https://github.com/openmv/openmv/pull/1455,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1455,Adds an event sensor driver for the frogeye2020 with examples.,Adds an event sensor driver for the frogeye2020 with examples.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1455,2021-09-23T04:38:17Z,2021-10-16T20:47:14Z,2021-10-16T20:47:14Z,MERGED,True,197,38,15,https://github.com/kwagyeman,Add basic frogeye2020 driver,3,[],https://github.com/openmv/openmv/pull/1455,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1455#issuecomment-944994705,Adds an event sensor driver for the frogeye2020 with examples.,@iabdalkader It's ready.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1455,2021-09-23T04:38:17Z,2021-10-16T20:47:14Z,2021-10-16T20:47:14Z,MERGED,True,197,38,15,https://github.com/kwagyeman,Add basic frogeye2020 driver,3,[],https://github.com/openmv/openmv/pull/1455,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1455#issuecomment-944994771,Adds an event sensor driver for the frogeye2020 with examples.,"# This example shows off using the frogeye2020 event camera with tracking.
#
# The frogeye2020 is a 320x240 event camera. There are two bits per pixel which show no motion,
# motion in one direction, or motion in another direction. The sensor runs at 50 FPS.

import sensor, image, time

sensor.reset()
sensor.set_pixformat(sensor.GRAYSCALE)
sensor.set_framesize(sensor.QVGA)

palette = image.Image(1, 256, sensor.RGB565)

for i in range(64):
    palette.set_pixel(0, i, (0, 0, 0))

for i in range(64, 128):
    palette.set_pixel(0, i, (255, 0, 0))

for i in range(128, 192):
    palette.set_pixel(0, i, (0, 0, 255))

for i in range(192, 256):
    palette.set_pixel(0, i, (0, 255, 0))

clock = time.clock()

while(True):
    clock.tick()

    img = sensor.snapshot()
    # Handle sensor rotation.
    img.assign(hmirror=True, vflip=True)
    # Make pretty.
    img.to_rainbow(color_palette=palette)
    # Cleanup noise.
    img.erode(1)

    blobs = img.find_blobs([(0, 0)], invert=True,
        pixels_threshold=10, area_threshold=10, merge=False)

    for blob in blobs:
        img.draw_rectangle(blob.rect(), color=(0, 255, 0))

    print(clock.fps())",True,{}
openmv/openmv,https://github.com/openmv/openmv,1456,2021-10-04T18:03:03Z,2021-10-05T17:29:45Z,2022-01-03T20:23:29Z,MERGED,True,19489,36,12,https://github.com/iabdalkader,IMU updates,3,[],https://github.com/openmv/openmv/pull/1456,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1456,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1457,2021-10-08T04:12:17Z,2021-10-08T19:01:09Z,2021-10-08T19:20:05Z,MERGED,True,52,6,2,https://github.com/kwagyeman,Make IMU orientation params,5,[],https://github.com/openmv/openmv/pull/1457,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1457,You can now program the IMU PCB side it's mounted on and it's rotation in board config.,You can now program the IMU PCB side it's mounted on and it's rotation in board config.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1457,2021-10-08T04:12:17Z,2021-10-08T19:01:09Z,2021-10-08T19:20:05Z,MERGED,True,52,6,2,https://github.com/kwagyeman,Make IMU orientation params,5,[],https://github.com/openmv/openmv/pull/1457,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1457#issuecomment-938616720,You can now program the IMU PCB side it's mounted on and it's rotation in board config.,Because of this typo the rotation is always 0,True,{}
openmv/openmv,https://github.com/openmv/openmv,1457,2021-10-08T04:12:17Z,2021-10-08T19:01:09Z,2021-10-08T19:20:05Z,MERGED,True,52,6,2,https://github.com/kwagyeman,Make IMU orientation params,5,[],https://github.com/openmv/openmv/pull/1457,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1457#issuecomment-938967105,You can now program the IMU PCB side it's mounted on and it's rotation in board config.,Good find.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1457,2021-10-08T04:12:17Z,2021-10-08T19:01:09Z,2021-10-08T19:20:05Z,MERGED,True,52,6,2,https://github.com/kwagyeman,Make IMU orientation params,5,[],https://github.com/openmv/openmv/pull/1457,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1457#issuecomment-938969259,You can now program the IMU PCB side it's mounted on and it's rotation in board config.,Need to fix comments still.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1458,2021-10-08T04:14:26Z,2021-10-08T16:22:59Z,2021-10-08T16:22:59Z,MERGED,True,12,39,2,https://github.com/kwagyeman,Move find_line_segments to draw image,1,[],https://github.com/openmv/openmv/pull/1458,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1458,Now accepts any image type too.,Now accepts any image type too.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1459,2021-10-09T20:04:48Z,2021-10-15T14:05:12Z,2021-10-15T14:05:19Z,MERGED,True,354,108,8,https://github.com/iabdalkader,Add DFSDM support to audio module.,3,[],https://github.com/openmv/openmv/pull/1459,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1459,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1460,2021-10-17T04:53:45Z,2021-10-18T19:05:04Z,2021-10-18T19:05:04Z,MERGED,True,294,160,22,https://github.com/kwagyeman,Kwabena/fix network usage in scripts,3,[],https://github.com/openmv/openmv/pull/1460,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1460,"Updates all the streaming scripts to use any network interface instead of just WINC.
Renames interfaces too.
Fixes a bug with IS_JPEG using the wrong value to compare with.","Updates all the streaming scripts to use any network interface instead of just WINC.
Renames interfaces too.
Fixes a bug with IS_JPEG using the wrong value to compare with.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1460,2021-10-17T04:53:45Z,2021-10-18T19:05:04Z,2021-10-18T19:05:04Z,MERGED,True,294,160,22,https://github.com/kwagyeman,Kwabena/fix network usage in scripts,3,[],https://github.com/openmv/openmv/pull/1460,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1460#issuecomment-946076691,"Updates all the streaming scripts to use any network interface instead of just WINC.
Renames interfaces too.
Fixes a bug with IS_JPEG using the wrong value to compare with.","Fixes a bug with IS_JPEG using the wrong value to compare with

Please don't mix fixes in one PR again.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1462,2021-10-25T05:55:48Z,2021-12-30T16:30:28Z,2021-12-30T16:30:28Z,MERGED,True,860,285,23,https://github.com/kwagyeman,Add Objection Detection Support,7,[],https://github.com/openmv/openmv/pull/1462,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1462,"Support for segmentation networks has been added. You can now segment images using tensorflow into grayscale images that show a heatmap per class you are looking for. The segment() method will return a list of images of these grayscale heat maps.
detect() will then do all the above but internally run find_blobs() on the heat maps to return instead a list of lists, where each sub list is the blobs detected per class.
EdgeImpulse will have support for running segmentation networks thus enabling object detection and localization on Cortex-M processors.

PYTF now uses the optimal amount of memory for buffers versus all - buffers are placed in SRAM if they fit producing a massive speed boost.
Custom scaled/offset outputs now work.
Updated to the latest tensorflow library.
You have access to all input/output model parameters.
Person detection is now int8 and blazing fast - 20 FPS on the Arduino Portena.
Added m55 libs (m0plus libs coming soon once EdgeImpulse adds support for them in the tensorflow make file)
Classify/Segment/Detect work on all image types directly (JPG/BAYER/YUV/RGB565/GRAYSCALE/BINARY)","Support for segmentation networks has been added. You can now segment images using tensorflow into grayscale images that show a heatmap per class you are looking for. The segment() method will return a list of images of these grayscale heat maps.
detect() will then do all the above but internally run find_blobs() on the heat maps to return instead a list of lists, where each sub list is the blobs detected per class.
EdgeImpulse will have support for running segmentation networks thus enabling object detection and localization on Cortex-M processors.

PYTF now uses the optimal amount of memory for buffers versus all - buffers are placed in SRAM if they fit producing a massive speed boost.
Custom scaled/offset outputs now work.
Updated to the latest tensorflow library.
You have access to all input/output model parameters.
Person detection is now int8 and blazing fast - 20 FPS on the Arduino Portena.
Added m55 libs (m0plus libs coming soon once EdgeImpulse adds support for them in the tensorflow make file)
Classify/Segment/Detect work on all image types directly (JPG/BAYER/YUV/RGB565/GRAYSCALE/BINARY)",True,"{'HOORAY': ['https://github.com/iabdalkader', 'https://github.com/kwagyeman']}"
openmv/openmv,https://github.com/openmv/openmv,1462,2021-10-25T05:55:48Z,2021-12-30T16:30:28Z,2021-12-30T16:30:28Z,MERGED,True,860,285,23,https://github.com/kwagyeman,Add Objection Detection Support,7,[],https://github.com/openmv/openmv/pull/1462,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1462#issuecomment-1002845503,"Support for segmentation networks has been added. You can now segment images using tensorflow into grayscale images that show a heatmap per class you are looking for. The segment() method will return a list of images of these grayscale heat maps.
detect() will then do all the above but internally run find_blobs() on the heat maps to return instead a list of lists, where each sub list is the blobs detected per class.
EdgeImpulse will have support for running segmentation networks thus enabling object detection and localization on Cortex-M processors.

PYTF now uses the optimal amount of memory for buffers versus all - buffers are placed in SRAM if they fit producing a massive speed boost.
Custom scaled/offset outputs now work.
Updated to the latest tensorflow library.
You have access to all input/output model parameters.
Person detection is now int8 and blazing fast - 20 FPS on the Arduino Portena.
Added m55 libs (m0plus libs coming soon once EdgeImpulse adds support for them in the tensorflow make file)
Classify/Segment/Detect work on all image types directly (JPG/BAYER/YUV/RGB565/GRAYSCALE/BINARY)","Ibrahim, please feel free to merge squash all these commits into one.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1464,2021-10-28T18:39:56Z,2021-10-28T19:03:30Z,2021-10-28T19:03:50Z,MERGED,True,5,1,3,https://github.com/iabdalkader,Portenta: Set default sensor clock to 12MHz.,1,[],https://github.com/openmv/openmv/pull/1464,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1464,"Support detecting MT9V034.
Add Himax specific clock.","Support detecting MT9V034.
Add Himax specific clock.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1466,2021-11-17T16:32:08Z,2021-11-17T16:43:33Z,2021-11-17T16:43:37Z,MERGED,True,351,360,5,https://github.com/iabdalkader,"Nina driver updates, bug fixes.",1,[],https://github.com/openmv/openmv/pull/1466,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1466,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1467,2021-11-21T19:00:39Z,2021-11-21T19:15:05Z,2021-11-21T19:15:08Z,MERGED,True,1,29,3,https://github.com/iabdalkader,Update pico-sdk to 1.3.0 and tinyusb 0.12.0,1,[],https://github.com/openmv/openmv/pull/1467,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1467,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1469,2021-12-10T00:24:55Z,2021-12-10T17:24:11Z,2021-12-10T17:24:15Z,MERGED,True,132,56,14,https://github.com/iabdalkader,Update to MicroPython 1.17,1,[],https://github.com/openmv/openmv/pull/1469,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1469,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1471,2021-12-11T21:04:07Z,2021-12-11T21:20:06Z,2021-12-11T21:20:15Z,MERGED,True,1,0,1,https://github.com/iabdalkader,Add missing MT9M114 ID.,1,[],https://github.com/openmv/openmv/pull/1471,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1471,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1472,2021-12-12T02:44:30Z,2021-12-12T12:48:14Z,2021-12-12T12:48:37Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Unsigned var in count down loop fixed,1,[],https://github.com/openmv/openmv/pull/1472,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1472,"GCC doesn't feature a warning for this... maybe we should just change all loops to like this blog?
https://nachtimwald.com/2019/06/02/unsigned-count-down/
Anyway, this is not the issue that's crashing TensorFlow in the later release. I found this issue already.","GCC doesn't feature a warning for this... maybe we should just change all loops to like this blog?
https://nachtimwald.com/2019/06/02/unsigned-count-down/
Anyway, this is not the issue that's crashing TensorFlow in the later release. I found this issue already.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1472,2021-12-12T02:44:30Z,2021-12-12T12:48:14Z,2021-12-12T12:48:37Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Unsigned var in count down loop fixed,1,[],https://github.com/openmv/openmv/pull/1472,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1472#issuecomment-991892492,"GCC doesn't feature a warning for this... maybe we should just change all loops to like this blog?
https://nachtimwald.com/2019/06/02/unsigned-count-down/
Anyway, this is not the issue that's crashing TensorFlow in the later release. I found this issue already.","maybe we should just change all loops to like this blog?

Most loops already use int and count up to < INT_MAX.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1472,2021-12-12T02:44:30Z,2021-12-12T12:48:14Z,2021-12-12T12:48:37Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Unsigned var in count down loop fixed,1,[],https://github.com/openmv/openmv/pull/1472,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1472#issuecomment-991892566,"GCC doesn't feature a warning for this... maybe we should just change all loops to like this blog?
https://nachtimwald.com/2019/06/02/unsigned-count-down/
Anyway, this is not the issue that's crashing TensorFlow in the later release. I found this issue already.",I just noticed something else just doesn't look right will send a PR.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1473,2021-12-12T03:01:29Z,2021-12-13T17:39:20Z,2021-12-13T17:40:08Z,CLOSED,False,16,16,1,https://github.com/kwagyeman,Allow RPC bus ports arguments.,1,[],https://github.com/openmv/openmv/pull/1473,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1473,Now you can select which bus to use besides the default one.,Now you can select which bus to use besides the default one.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1473,2021-12-12T03:01:29Z,2021-12-13T17:39:20Z,2021-12-13T17:40:08Z,CLOSED,False,16,16,1,https://github.com/kwagyeman,Allow RPC bus ports arguments.,1,[],https://github.com/openmv/openmv/pull/1473,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1473#issuecomment-991902336,Now you can select which bus to use besides the default one.,Can you please rephrase the commit message to Add/Remove/Fix/Allow etc...?,True,{}
openmv/openmv,https://github.com/openmv/openmv,1473,2021-12-12T03:01:29Z,2021-12-13T17:39:20Z,2021-12-13T17:40:08Z,CLOSED,False,16,16,1,https://github.com/kwagyeman,Allow RPC bus ports arguments.,1,[],https://github.com/openmv/openmv/pull/1473,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1473#issuecomment-992118642,Now you can select which bus to use besides the default one.,Done,True,{}
openmv/openmv,https://github.com/openmv/openmv,1473,2021-12-12T03:01:29Z,2021-12-13T17:39:20Z,2021-12-13T17:40:08Z,CLOSED,False,16,16,1,https://github.com/kwagyeman,Allow RPC bus ports arguments.,1,[],https://github.com/openmv/openmv/pull/1473,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/1473#issuecomment-992714039,Now you can select which bus to use besides the default one.,Merged in 52b0c45 to fix the commit message.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1474,2021-12-12T13:04:56Z,2021-12-13T05:15:57Z,2021-12-13T12:15:15Z,CLOSED,False,2,3,1,https://github.com/iabdalkader,Fix TF U8 to S8 conversion.,1,[],https://github.com/openmv/openmv/pull/1474,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1474,"Both fast (words) and slow (bytes) paths are executed, effectively undoing the conversion.","Both fast (words) and slow (bytes) paths are executed, effectively undoing the conversion.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1474,2021-12-12T13:04:56Z,2021-12-13T05:15:57Z,2021-12-13T12:15:15Z,CLOSED,False,2,3,1,https://github.com/iabdalkader,Fix TF U8 to S8 conversion.,1,[],https://github.com/openmv/openmv/pull/1474,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1474#issuecomment-992119024,"Both fast (words) and slow (bytes) paths are executed, effectively undoing the conversion.","for (; size >= 0; size -= 1) {
    model_input_8[size] ^= 0x80;
}

At the end cleans up the tail. It's not run on all the bytes.
The fast code is used on systems that support unaligned loads. Then this cleans up the remaining bytes.
On systems that do not support unaligned loads it does all bytes.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1475,2021-12-13T17:38:24Z,2021-12-13T17:38:49Z,2021-12-13T17:38:52Z,MERGED,True,16,16,1,https://github.com/iabdalkader,Allow RPC bus ports arguments.,1,[],https://github.com/openmv/openmv/pull/1475,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1475,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1476,2021-12-27T18:03:40Z,2021-12-27T18:54:14Z,2021-12-27T18:58:43Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Update micropython.,1,[],https://github.com/openmv/openmv/pull/1476,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1476,"Enable bitstream for RP2.
Enable machine.bootloader() for NRF.
Update make-pins.py to match upstream.","Enable bitstream for RP2.
Enable machine.bootloader() for NRF.
Update make-pins.py to match upstream.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1478,2021-12-29T03:05:38Z,2021-12-29T03:20:49Z,2021-12-29T03:20:49Z,MERGED,True,9,5,2,https://github.com/kwagyeman,Fix jpeg loading,1,[],https://github.com/openmv/openmv/pull/1478,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1478,Fixes user bug on forums: https://forums.openmv.io/t/run-tflite-models-on-jpegs-in-post/6672/7,Fixes user bug on forums: https://forums.openmv.io/t/run-tflite-models-on-jpegs-in-post/6672/7,True,{}
openmv/openmv,https://github.com/openmv/openmv,1479,2021-12-29T14:21:22Z,2021-12-29T15:16:04Z,2021-12-29T15:16:08Z,MERGED,True,2,2,2,https://github.com/iabdalkader,Fix ULPI DIR pin definition.,1,[],https://github.com/openmv/openmv/pull/1479,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1479,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1480,2021-12-29T17:38:51Z,2021-12-29T18:07:12Z,2021-12-29T18:07:15Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Nano RP2040: Set default I2C pins.,1,[],https://github.com/openmv/openmv/pull/1480,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1480,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1481,2021-12-31T05:18:54Z,2022-01-01T01:26:07Z,2022-01-01T01:26:07Z,CLOSED,False,959,113,36,https://github.com/kwagyeman,Make default disk files different per camera,1,[],https://github.com/openmv/openmv/pull/1481,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1481,"Files created by main.c on the first disk boot are not specific per board and are actually editable as files now.
I've wanted to add this for a while so that the OpenMV Pure Thermal's main.py boots the board with all it's glory bey default. You'll notice the main.py for it is quite a bit more complex.","Files created by main.c on the first disk boot are not specific per board and are actually editable as files now.
I've wanted to add this for a while so that the OpenMV Pure Thermal's main.py boots the board with all it's glory bey default. You'll notice the main.py for it is quite a bit more complex.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1481,2021-12-31T05:18:54Z,2022-01-01T01:26:07Z,2022-01-01T01:26:07Z,CLOSED,False,959,113,36,https://github.com/kwagyeman,Make default disk files different per camera,1,[],https://github.com/openmv/openmv/pull/1481,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1481#issuecomment-1003398859,"Files created by main.c on the first disk boot are not specific per board and are actually editable as files now.
I've wanted to add this for a while so that the OpenMV Pure Thermal's main.py boots the board with all it's glory bey default. You'll notice the main.py for it is quite a bit more complex.","Hi, this won't work because if there's an SD card, the internal filesystem will Not be mounted and main.py will Not be executed so for PureThermal the boot code will not run (besides, it should be in boot.py).
There's already an infrastructure for what you're trying to do: we can freeze main.py, boot.py per board with board-specific files, however this wasn't supported in stm32 port, now I fixed it in #1482
Now you can override main.py or freeze a boot.py in omv/boards/OPENMVPT/boot.py, enable it in the manifest like this: freeze (""./"", ""boot.py"") and it will run from there regardless of the filesystem state.
EDIT: You can now, if you like, move main.py to libraries and freeze it for all boards. As for the selftest it can't be frozen, but it can be moved to a C header in board files omv/boards/*/selftest_py.h.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1481,2021-12-31T05:18:54Z,2022-01-01T01:26:07Z,2022-01-01T01:26:07Z,CLOSED,False,959,113,36,https://github.com/kwagyeman,Make default disk files different per camera,1,[],https://github.com/openmv/openmv/pull/1481,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1481#issuecomment-1003444447,"Files created by main.c on the first disk boot are not specific per board and are actually editable as files now.
I've wanted to add this for a while so that the OpenMV Pure Thermal's main.py boots the board with all it's glory bey default. You'll notice the main.py for it is quite a bit more complex.","Another issue with this, it generates the following:
import sensor, time, pyb

def test_int_adc():
    adc  = pyb.ADCAll(12)
    # Test VBAT
    vbat = adc.read_core_vbat()
    vbat_diff = abs(vbat-""OMV_CORE_VBAT"")   # <------
OMV_CORE_VBAT is defined in board config files.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1482,2021-12-31T15:15:03Z,2021-12-31T18:31:15Z,2021-12-31T18:31:31Z,MERGED,True,37,29,4,https://github.com/iabdalkader,Execute frozen boot scripts first before filesystem.,1,[],https://github.com/openmv/openmv/pull/1482,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1482,"Run frozen _boot.py if it exists (for early boot stuff).
Allow freezing main.py and boot.py boot scripts.
Give frozen boot scripts priority over filesystem boot scripts.
Add frozen early boot script for OpenMV-PT.","Run frozen _boot.py if it exists (for early boot stuff).
Allow freezing main.py and boot.py boot scripts.
Give frozen boot scripts priority over filesystem boot scripts.
Add frozen early boot script for OpenMV-PT.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1482,2021-12-31T15:15:03Z,2021-12-31T18:31:15Z,2021-12-31T18:31:31Z,MERGED,True,37,29,4,https://github.com/iabdalkader,Execute frozen boot scripts first before filesystem.,1,[],https://github.com/openmv/openmv/pull/1482,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1482#issuecomment-1003428224,"Run frozen _boot.py if it exists (for early boot stuff).
Allow freezing main.py and boot.py boot scripts.
Give frozen boot scripts priority over filesystem boot scripts.
Add frozen early boot script for OpenMV-PT.",@kwagyeman updated.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1483,2021-12-31T22:27:33Z,2021-12-31T22:48:21Z,2021-12-31T22:48:27Z,MERGED,True,201,106,6,https://github.com/iabdalkader,Move fresh filesystem contents to template files.,1,[],https://github.com/openmv/openmv/pull/1483,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1483,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1484,2022-01-01T23:14:05Z,2022-01-01T23:14:55Z,2022-01-01T23:15:47Z,MERGED,True,2,2,2,https://github.com/kwagyeman,Fix person detector model labels,1,[],https://github.com/openmv/openmv/pull/1484,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1484,Removes the unsure label.,Removes the unsure label.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1484,2022-01-01T23:14:05Z,2022-01-01T23:14:55Z,2022-01-01T23:15:47Z,MERGED,True,2,2,2,https://github.com/kwagyeman,Fix person detector model labels,1,[],https://github.com/openmv/openmv/pull/1484,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1484#issuecomment-1003634468,Removes the unsure label.,Too bad it didn't make it in time for the release.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1484,2022-01-01T23:14:05Z,2022-01-01T23:14:55Z,2022-01-01T23:15:47Z,MERGED,True,2,2,2,https://github.com/kwagyeman,Fix person detector model labels,1,[],https://github.com/openmv/openmv/pull/1484,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1484#issuecomment-1003634535,Removes the unsure label.,I just locally fixed in in the IDE resources.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1485,2022-01-02T13:48:40Z,2022-01-02T14:00:34Z,2022-01-02T14:04:38Z,MERGED,True,2,1,2,https://github.com/iabdalkader,NANO-RP2040: Add support for DHT11 and DHT22 sensors.,1,[],https://github.com/openmv/openmv/pull/1485,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1485,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1486,2022-01-02T21:57:19Z,2022-01-03T20:23:14Z,2022-01-03T20:23:14Z,MERGED,True,411,344,22,https://github.com/kwagyeman,Update MT driver to support the 22/24/32/34,1,[],https://github.com/openmv/openmv/pull/1486,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1486,"The MT9V034 driver now supports all variants of the chip.

The MT9V032 which is like the 34 except without the ping-pong bank feature.
The MT9V024 which is the BGA version of the 34 (technically was already supported).
The MT9V022 which is the BGA version of the 32.","The MT9V034 driver now supports all variants of the chip.

The MT9V032 which is like the 34 except without the ping-pong bank feature.
The MT9V024 which is the BGA version of the 34 (technically was already supported).
The MT9V022 which is the BGA version of the 32.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1488,2022-01-03T16:46:44Z,2022-01-03T20:19:38Z,2022-01-03T20:23:26Z,MERGED,True,123,58,9,https://github.com/iabdalkader,Factory fs,3,[],https://github.com/openmv/openmv/pull/1488,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1488,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1489,2022-01-03T23:27:10Z,2022-01-04T01:05:16Z,2022-01-04T01:05:19Z,MERGED,True,1,1,1,https://github.com/iabdalkader,RP2: Disable rx_wanted_cb in debug mode.,1,[],https://github.com/openmv/openmv/pull/1489,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1489,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1490,2022-01-04T20:03:45Z,2022-01-04T20:14:16Z,2022-01-04T20:14:18Z,MERGED,True,1,1,1,https://github.com/iabdalkader,pyexec: Disable message printed when frozen module is not found.,1,[],https://github.com/openmv/openmv/pull/1490,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1490,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1491,2022-01-05T05:40:59Z,2022-01-09T19:36:11Z,2022-01-09T19:36:11Z,MERGED,True,468,199,6,https://github.com/kwagyeman,Kwabena/image io,1,[],https://github.com/openmv/openmv/pull/1491,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1491,"This is massive re-write of the ImageIO module with a lot of new features:

In memory more or less works the same, however, you can now use different image types per frame as long as they fit within the byte size of the frame first allocated.
On disk works the same, but, now seeking is supported, additionally, you are in read/write mode now always so you can move seek around and read/write frames (that said, this only makes sense with fixed buffer sizes).
Add methods to get a lot more information about the module.
Previous versions of ImageIO are now handled correctly. If you open an older file version you can append to it without issue. You can also read from older file versions without issue.","This is massive re-write of the ImageIO module with a lot of new features:

In memory more or less works the same, however, you can now use different image types per frame as long as they fit within the byte size of the frame first allocated.
On disk works the same, but, now seeking is supported, additionally, you are in read/write mode now always so you can move seek around and read/write frames (that said, this only makes sense with fixed buffer sizes).
Add methods to get a lot more information about the module.
Previous versions of ImageIO are now handled correctly. If you open an older file version you can append to it without issue. You can also read from older file versions without issue.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1492,2022-01-05T16:46:17Z,2022-01-05T16:56:39Z,2022-01-05T16:56:42Z,MERGED,True,12,6,2,https://github.com/iabdalkader,Nina WiFi driver fixes.,1,[],https://github.com/openmv/openmv/pull/1492,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1492,"Return -1 on timeout error from recv(), recvfrom(), send() and sendto().
Disable active connections before connecting/reconnecting.
Fix manual DNS bug.
Set secondary DNS server","Return -1 on timeout error from recv(), recvfrom(), send() and sendto().
Disable active connections before connecting/reconnecting.
Fix manual DNS bug.
Set secondary DNS server",True,{}
openmv/openmv,https://github.com/openmv/openmv,1493,2022-01-07T06:55:03Z,2022-01-07T13:02:27Z,2022-01-07T13:02:27Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix flag spec on timer,1,[],https://github.com/openmv/openmv/pull/1493,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1493,"Processor crashes without this. It tries to call the python object as if it were a C method.
And expiry is set in the insert call. No need to set it.","Processor crashes without this. It tries to call the python object as if it were a C method.
And expiry is set in the insert call. No need to set it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1493,2022-01-07T06:55:03Z,2022-01-07T13:02:27Z,2022-01-07T13:02:27Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix flag spec on timer,1,[],https://github.com/openmv/openmv/pull/1493,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1493#issuecomment-1007389529,"Processor crashes without this. It tries to call the python object as if it were a C method.
And expiry is set in the insert call. No need to set it.","Thanks, the API changed and I can't test this.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1494,2022-01-08T03:27:50Z,2022-01-09T14:27:50Z,2022-01-09T14:27:50Z,CLOSED,False,1,1,1,https://github.com/kwagyeman,Disable full mdma offload for now,1,[],https://github.com/openmv/openmv/pull/1494,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1494,"See #1407. It will take a lot of playing around with camera drivers to fix this. I have to change the clock settings and find safe modes with this feature on.
In the mean-time. Folks will notice load on the system being higher.","See #1407. It will take a lot of playing around with camera drivers to fix this. I have to change the clock settings and find safe modes with this feature on.
In the mean-time. Folks will notice load on the system being higher.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1495,2022-01-08T18:16:32Z,2022-01-09T14:22:23Z,2022-01-09T14:22:25Z,CLOSED,False,56,12,2,https://github.com/iabdalkader,Add MDMA linked list node config.,1,['discussion'],https://github.com/openmv/openmv/pull/1495,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1495,This is just a PoC for using MDMA linked list nodes to transfer 1 full frame. Note set resolution height < 120 and don't transpose.,This is just a PoC for using MDMA linked list nodes to transfer 1 full frame. Note set resolution height < 120 and don't transpose.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1496,2022-01-08T22:22:15Z,2022-01-09T13:42:58Z,2022-01-09T13:42:58Z,MERGED,True,2,2,1,https://github.com/kwagyeman,Comment out distance sensor initially,1,[],https://github.com/openmv/openmv/pull/1496,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1496,VL53L1X driver needs work. Fails to init frequently on startup.,VL53L1X driver needs work. Fails to init frequently on startup.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1497,2022-01-09T06:08:49Z,2022-01-09T17:53:01Z,2022-01-09T17:53:01Z,CLOSED,False,80,10,6,https://github.com/kwagyeman,Low resolution linked list mode working,1,[],https://github.com/openmv/openmv/pull/1497,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1497,"This uses linked list mode for MDMA for lower resolutions. It works in all modes, etc.
However, it doesn't actually appear to fix the issue we were having. So, not sure if this makes sense to merge. But, definitely nice to have the PR lying around.","This uses linked list mode for MDMA for lower resolutions. It works in all modes, etc.
However, it doesn't actually appear to fix the issue we were having. So, not sure if this makes sense to merge. But, definitely nice to have the PR lying around.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1497,2022-01-09T06:08:49Z,2022-01-09T17:53:01Z,2022-01-09T17:53:01Z,CLOSED,False,80,10,6,https://github.com/kwagyeman,Low resolution linked list mode working,1,[],https://github.com/openmv/openmv/pull/1497,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1497#issuecomment-1008307029,"This uses linked list mode for MDMA for lower resolutions. It works in all modes, etc.
However, it doesn't actually appear to fix the issue we were having. So, not sure if this makes sense to merge. But, definitely nice to have the PR lying around.",Maybe turn it into a semi-general purpose MDMA driver in mdma.c ? Move mdma_config/mdma_memcpy  and this to mdma.c.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1498,2022-01-09T14:25:19Z,2022-01-09T20:01:22Z,2022-01-09T20:01:33Z,MERGED,True,12,37,2,https://github.com/iabdalkader,Make sure cached CPU writes are flushed before returning the buffer,2,[],https://github.com/openmv/openmv/pull/1498,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1498,"@kwagyeman

Should fix #1407","@kwagyeman

Should fix #1407",True,{}
openmv/openmv,https://github.com/openmv/openmv,1498,2022-01-09T14:25:19Z,2022-01-09T20:01:22Z,2022-01-09T20:01:33Z,MERGED,True,12,37,2,https://github.com/iabdalkader,Make sure cached CPU writes are flushed before returning the buffer,2,[],https://github.com/openmv/openmv/pull/1498,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1498#issuecomment-1008315875,"@kwagyeman

Should fix #1407",This fix is fine but could be faster. The invalidate call could take a very long amount of time. We should put this in sensor.c and make it a little smarter so it does the least amount of work,True,{}
openmv/openmv,https://github.com/openmv/openmv,1498,2022-01-09T14:25:19Z,2022-01-09T20:01:22Z,2022-01-09T20:01:33Z,MERGED,True,12,37,2,https://github.com/iabdalkader,Make sure cached CPU writes are flushed before returning the buffer,2,[],https://github.com/openmv/openmv/pull/1498,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1498#issuecomment-1008317412,"@kwagyeman

Should fix #1407","I didn't notice any performance drop, note this is invalidate by addr it doesn't invalidate the whole cache. You can move it to sensor.c and optimize, but if in the future a sensor driver for a port with cache uses the framebuffer it will have to do the same. Edit: since framebuffer is already cache-aware I thought it should handle it internally, but I don't mind moving it to sensor.c.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1498,2022-01-09T14:25:19Z,2022-01-09T20:01:22Z,2022-01-09T20:01:33Z,MERGED,True,12,37,2,https://github.com/iabdalkader,Make sure cached CPU writes are flushed before returning the buffer,2,[],https://github.com/openmv/openmv/pull/1498,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1498#issuecomment-1008325350,"@kwagyeman

Should fix #1407","Yes, but, if you read that function it invalidates 32 bytes at a time in a loop. So, it's going to run for hundreds of thousands of iterations for a larger image.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1498,2022-01-09T14:25:19Z,2022-01-09T20:01:22Z,2022-01-09T20:01:33Z,MERGED,True,12,37,2,https://github.com/iabdalkader,Make sure cached CPU writes are flushed before returning the buffer,2,[],https://github.com/openmv/openmv/pull/1498,https://github.com/iabdalkader,5,https://github.com/openmv/openmv/pull/1498#issuecomment-1008331464,"@kwagyeman

Should fix #1407","Yes, but, if you read that function it invalidates 32 bytes at a time in a loop. So, it's going to run for hundreds of thousands of iterations for a larger image

It's unavoidable, but maybe it should be moved to framebuffer_free_current_buffer(), get_tail is called multiple times.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1498,2022-01-09T14:25:19Z,2022-01-09T20:01:22Z,2022-01-09T20:01:33Z,MERGED,True,12,37,2,https://github.com/iabdalkader,Make sure cached CPU writes are flushed before returning the buffer,2,[],https://github.com/openmv/openmv/pull/1498,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/1498#issuecomment-1008357781,"@kwagyeman

Should fix #1407",@kwagyeman Updated.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1498,2022-01-09T14:25:19Z,2022-01-09T20:01:22Z,2022-01-09T20:01:33Z,MERGED,True,12,37,2,https://github.com/iabdalkader,Make sure cached CPU writes are flushed before returning the buffer,2,[],https://github.com/openmv/openmv/pull/1498,https://github.com/kwagyeman,7,https://github.com/openmv/openmv/pull/1498#issuecomment-1008362662,"@kwagyeman

Should fix #1407",Fee free to merge,True,{}
openmv/openmv,https://github.com/openmv/openmv,1499,2022-01-09T17:59:24Z,2022-01-09T18:21:41Z,2022-01-09T18:21:42Z,MERGED,True,21,21,2,https://github.com/kwagyeman,Fix copy_to_fb when targeting an image,1,[],https://github.com/openmv/openmv/pull/1499,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1499,"Fixes the breaking changes to copy_to_fb when targeting another image as the buffer because of the previous pixformat updates and the addition of ""size"" which wasn't captured previously.","Fixes the breaking changes to copy_to_fb when targeting another image as the buffer because of the previous pixformat updates and the addition of ""size"" which wasn't captured previously.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1503,2022-01-15T21:28:28Z,2022-01-15T22:10:47Z,2022-01-15T22:10:51Z,MERGED,True,39,0,2,https://github.com/iabdalkader,NANO-RP2040: Add fresh filesystem custom templates.,1,[],https://github.com/openmv/openmv/pull/1503,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1503,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1504,2022-01-15T21:30:26Z,2022-01-16T23:03:43Z,2022-01-16T23:03:46Z,MERGED,True,25,25,11,https://github.com/iabdalkader,Fix CAN keyword arg.,1,[],https://github.com/openmv/openmv/pull/1504,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1504,sampling_point was renamed to sample_point in upstream.,sampling_point was renamed to sample_point in upstream.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1506,2022-01-19T04:50:40Z,2022-01-19T20:17:40Z,2022-01-19T20:21:23Z,CLOSED,False,2,2,1,https://github.com/kwagyeman,Fix fb alloc underflow,1,[],https://github.com/openmv/openmv/pull/1506,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1506,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1506,2022-01-19T04:50:40Z,2022-01-19T20:17:40Z,2022-01-19T20:21:23Z,CLOSED,False,2,2,1,https://github.com/kwagyeman,Fix fb alloc underflow,1,[],https://github.com/openmv/openmv/pull/1506,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1506#issuecomment-1016341654,,"Will test it later today, but looks promising.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1506,2022-01-19T04:50:40Z,2022-01-19T20:17:40Z,2022-01-19T20:21:23Z,CLOSED,False,2,2,1,https://github.com/kwagyeman,Fix fb alloc underflow,1,[],https://github.com/openmv/openmv/pull/1506,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1506#issuecomment-1016833962,,"There's no bug, I forgot to update OMV_RAW_BUF_SIZE. This macro is defined at the top of the file, I always forget to update it.. Would be good to define it right after linker script FB buffer size, example:
#define OMV_FB_SIZE       (100K) // FB memory
#define OMV_FB_SIZE_BYTES (100*1024)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1506,2022-01-19T04:50:40Z,2022-01-19T20:17:40Z,2022-01-19T20:21:23Z,CLOSED,False,2,2,1,https://github.com/kwagyeman,Fix fb alloc underflow,1,[],https://github.com/openmv/openmv/pull/1506,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/1506#issuecomment-1016837164,,"Or maybe use linker script symbols, _fballoc - _fb_base",True,{}
openmv/openmv,https://github.com/openmv/openmv,1507,2022-01-19T20:19:35Z,2022-01-19T20:34:51Z,2022-01-19T20:34:54Z,MERGED,True,1,1,1,https://github.com/iabdalkader,NANO-RP2040: Fix raw buffer size.,1,[],https://github.com/openmv/openmv/pull/1507,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1507,Fixes #1505,Fixes #1505,True,{}
openmv/openmv,https://github.com/openmv/openmv,1509,2022-01-24T17:23:36Z,2022-01-27T00:59:13Z,2022-01-27T01:40:44Z,CLOSED,False,13232,183,37,https://github.com/kwagyeman,Add PNG Support,1,[],https://github.com/openmv/openmv/pull/1509,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1509,"Decoder working, encoder still broken.","Decoder working, encoder still broken.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1509,2022-01-24T17:23:36Z,2022-01-27T00:59:13Z,2022-01-27T01:40:44Z,CLOSED,False,13232,183,37,https://github.com/kwagyeman,Add PNG Support,1,[],https://github.com/openmv/openmv/pull/1509,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1509#issuecomment-1022745411,"Decoder working, encoder still broken.",Fix and resend if you want to compare the performance.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1509,2022-01-24T17:23:36Z,2022-01-27T00:59:13Z,2022-01-27T01:40:44Z,CLOSED,False,13232,183,37,https://github.com/kwagyeman,Add PNG Support,1,[],https://github.com/openmv/openmv/pull/1509,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1509#issuecomment-1022765083,"Decoder working, encoder still broken.",I can own doing more upgrades when I have time.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1510,2022-01-25T02:15:07Z,2022-01-27T01:16:49Z,2022-01-27T01:16:52Z,MERGED,True,9087,163,19,https://github.com/iabdalkader,Add png support,3,[],https://github.com/openmv/openmv/pull/1510,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1510,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1511,2022-01-25T13:55:31Z,2022-01-25T14:12:11Z,2022-01-25T14:12:15Z,MERGED,True,2,1,2,https://github.com/iabdalkader,RP2: Add UART init/deinit and softreboot message.,1,[],https://github.com/openmv/openmv/pull/1511,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1511,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1512,2022-01-26T06:15:25Z,2022-01-26T13:49:13Z,2022-01-26T13:49:13Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix strncpy issue with new GCC,1,[],https://github.com/openmv/openmv/pull/1512,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1512,Fixes warning preventing compile on GCC 9.2.1,Fixes warning preventing compile on GCC 9.2.1,True,{}
openmv/openmv,https://github.com/openmv/openmv,1512,2022-01-26T06:15:25Z,2022-01-26T13:49:13Z,2022-01-26T13:49:13Z,MERGED,True,1,1,1,https://github.com/kwagyeman,Fix strncpy issue with new GCC,1,[],https://github.com/openmv/openmv/pull/1512,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1512#issuecomment-1022214168,Fixes warning preventing compile on GCC 9.2.1,FYI you should be using gcc version 10.2.1,True,{}
openmv/openmv,https://github.com/openmv/openmv,1513,2022-01-26T06:25:02Z,2022-02-06T04:05:53Z,2022-02-06T04:05:53Z,CLOSED,False,99,3,9,https://github.com/kwagyeman,Make built-in person detection changable,1,[],https://github.com/openmv/openmv/pull/1513,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1513,"Allows EdgeImpulse to compile our firmware and inject their own model files without needing to modify our firmware. Here are the steps:

Convert the tensorflow lite file to a C array using xxd.
Compile and turn the C file into a library archive file (see here for example flags) https://github.com/openmv/tensorflow-lib/blob/master/make.py#L176
Drop the library file into here: https://github.com/openmv/openmv/tree/master/src/lib/libtf/ for the target architecture being built (or drop into all)
Inject new CFLAGS into the make file build by doing something like: CFLAGS=-DIMLIB_TF_BUILT_IN_NETWORK_DATA=name make TARGET=OPENMV4

This will then build the firmware with the new network in place of the old one.
@iabdalkader - If you have a better cleaner way for all of this please add it. We just want to make it easy for Edge Impulse to patch a new network .tflite file into our firmware as a binary object. Maybe objcopy might be better for doing this.","Allows EdgeImpulse to compile our firmware and inject their own model files without needing to modify our firmware. Here are the steps:

Convert the tensorflow lite file to a C array using xxd.
Compile and turn the C file into a library archive file (see here for example flags) https://github.com/openmv/tensorflow-lib/blob/master/make.py#L176
Drop the library file into here: https://github.com/openmv/openmv/tree/master/src/lib/libtf/ for the target architecture being built (or drop into all)
Inject new CFLAGS into the make file build by doing something like: CFLAGS=-DIMLIB_TF_BUILT_IN_NETWORK_DATA=name make TARGET=OPENMV4

This will then build the firmware with the new network in place of the old one.
@iabdalkader - If you have a better cleaner way for all of this please add it. We just want to make it easy for Edge Impulse to patch a new network .tflite file into our firmware as a binary object. Maybe objcopy might be better for doing this.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1513,2022-01-26T06:25:02Z,2022-02-06T04:05:53Z,2022-02-06T04:05:53Z,CLOSED,False,99,3,9,https://github.com/kwagyeman,Make built-in person detection changable,1,[],https://github.com/openmv/openmv/pull/1513,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1513#issuecomment-1022220513,"Allows EdgeImpulse to compile our firmware and inject their own model files without needing to modify our firmware. Here are the steps:

Convert the tensorflow lite file to a C array using xxd.
Compile and turn the C file into a library archive file (see here for example flags) https://github.com/openmv/tensorflow-lib/blob/master/make.py#L176
Drop the library file into here: https://github.com/openmv/openmv/tree/master/src/lib/libtf/ for the target architecture being built (or drop into all)
Inject new CFLAGS into the make file build by doing something like: CFLAGS=-DIMLIB_TF_BUILT_IN_NETWORK_DATA=name make TARGET=OPENMV4

This will then build the firmware with the new network in place of the old one.
@iabdalkader - If you have a better cleaner way for all of this please add it. We just want to make it easy for Edge Impulse to patch a new network .tflite file into our firmware as a binary object. Maybe objcopy might be better for doing this.","Note, you should just rename the network to something generic like tf_builtin_model, tf_builtin_model_data, tf_builtin_model_data_len (or tf_default_model etc..). Then just overwrite the model and rebuild the firmware. But this change should be kept anyway because it allows us to disable/enable the builtin model. One more thing, we could then change all the scripts to be generic and run the builtin model whatever it is:
net = tf.load('builtin_model')
# or
net = tf.load_default_model()
The labels could also be hard-coded static C array of strings, and read back with the py_tf module... Example:
labels, net = tf.load_default_model()
Where labels is a Python list.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1514,2022-01-27T15:29:02Z,2022-01-27T15:54:21Z,2022-01-27T16:06:13Z,MERGED,True,12,4,7,https://github.com/iabdalkader,Nicla: Rename board files.,1,[],https://github.com/openmv/openmv/pull/1514,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1514,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1515,2022-01-27T16:05:52Z,2022-01-27T16:17:05Z,2022-01-27T16:17:09Z,MERGED,True,1,1,1,https://github.com/iabdalkader,RP2: Disable LFS2.,1,[],https://github.com/openmv/openmv/pull/1515,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1515,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1516,2022-01-27T16:10:34Z,2022-01-27T16:32:47Z,2022-01-30T14:10:19Z,MERGED,True,19,0,1,https://github.com/iabdalkader,NICLAV: Add readme txt.,1,[],https://github.com/openmv/openmv/pull/1516,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1516,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1518,2022-01-31T19:15:50Z,2022-01-31T19:23:34Z,2022-01-31T19:23:37Z,MERGED,True,2,13,1,https://github.com/iabdalkader,RPC: Remove CAN bit timing function.,1,[],https://github.com/openmv/openmv/pull/1518,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1518,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1519,2022-02-04T14:29:29Z,2022-02-04T15:52:56Z,2022-02-04T15:52:59Z,MERGED,True,173,158,3,https://github.com/iabdalkader,Add GitHub workflows.,1,[],https://github.com/openmv/openmv/pull/1519,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1519,"Tests every pull request without generating artifacts.
Creates/Updates development releases on every commit/push to master.
Creates new release drafts with artifacts attached on pushed tags.","Tests every pull request without generating artifacts.
Creates/Updates development releases on every commit/push to master.
Creates new release drafts with artifacts attached on pushed tags.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1520,2022-02-04T14:59:39Z,2022-02-04T15:04:16Z,2022-02-04T15:04:16Z,CLOSED,False,171,0,2,https://github.com/iabdalkader,Add github workflows.,1,[],https://github.com/openmv/openmv/pull/1520,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1520,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1522,2022-02-05T23:22:42Z,2022-02-05T23:52:37Z,2022-02-05T23:52:40Z,MERGED,True,1,1,1,https://github.com/iabdalkader,Implement Arduino 1200BPS touch to bootloader.,1,[],https://github.com/openmv/openmv/pull/1522,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1522,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1523,2022-02-06T02:43:43Z,2022-02-06T02:48:20Z,2022-02-06T02:48:24Z,MERGED,True,22,17,1,https://github.com/iabdalkader,github: Update workflow.,1,[],https://github.com/openmv/openmv/pull/1523,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1523,"Add action to update development release tag before re-releasing.
Update actions messages.","Add action to update development release tag before re-releasing.
Update actions messages.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1524,2022-02-06T04:07:09Z,2022-02-07T23:56:40Z,2022-02-07T23:56:41Z,CLOSED,False,481,6,23,https://github.com/kwagyeman,Add support for building customs nets into the firmware,2,[],https://github.com/openmv/openmv/pull/1524,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1524,"(From Updated README)
The build system automatically supports changing the built-in TensorFlow model from the person detection
TensorFlow Lite Model to another model of your choice. Just drop your .tflite file into the src/omv/modules
folder and the build system will automatically detect the file and build your model into the firmware. Note
that you need to make clean between switching from the built-in model to your custom model. Modifying the
file does not require a rebuild. Call tf.load_builtin_model() to load your built-in model.
You can also build your model labels into the firmware. Just drop a .txt file into the src/omv/modules
folder. The text file should have a single line of labels in a C define like below:
#define IMLIB_TF_BUILT_IN_NETWORK_LABELS ""a"", ""b"", ""c""

Call tf.load_builtin_labels() then to return the list of strings. Note you need to make clean between
adding/removing the custom labels file to the firmware. Modifying the file does not require a rebuild.
Finally, your network/labels may not fit inside the firmware. If you encounter a flash overflow you either
need to shrink your network/labels or turn off features in src/omv/boards/<TARGET>/imlib_config.h","(From Updated README)
The build system automatically supports changing the built-in TensorFlow model from the person detection
TensorFlow Lite Model to another model of your choice. Just drop your .tflite file into the src/omv/modules
folder and the build system will automatically detect the file and build your model into the firmware. Note
that you need to make clean between switching from the built-in model to your custom model. Modifying the
file does not require a rebuild. Call tf.load_builtin_model() to load your built-in model.
You can also build your model labels into the firmware. Just drop a .txt file into the src/omv/modules
folder. The text file should have a single line of labels in a C define like below:
#define IMLIB_TF_BUILT_IN_NETWORK_LABELS ""a"", ""b"", ""c""

Call tf.load_builtin_labels() then to return the list of strings. Note you need to make clean between
adding/removing the custom labels file to the firmware. Modifying the file does not require a rebuild.
Finally, your network/labels may not fit inside the firmware. If you encounter a flash overflow you either
need to shrink your network/labels or turn off features in src/omv/boards/<TARGET>/imlib_config.h",True,{}
openmv/openmv,https://github.com/openmv/openmv,1524,2022-02-06T04:07:09Z,2022-02-07T23:56:40Z,2022-02-07T23:56:41Z,CLOSED,False,481,6,23,https://github.com/kwagyeman,Add support for building customs nets into the firmware,2,[],https://github.com/openmv/openmv/pull/1524,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1524#issuecomment-1030891974,"(From Updated README)
The build system automatically supports changing the built-in TensorFlow model from the person detection
TensorFlow Lite Model to another model of your choice. Just drop your .tflite file into the src/omv/modules
folder and the build system will automatically detect the file and build your model into the firmware. Note
that you need to make clean between switching from the built-in model to your custom model. Modifying the
file does not require a rebuild. Call tf.load_builtin_model() to load your built-in model.
You can also build your model labels into the firmware. Just drop a .txt file into the src/omv/modules
folder. The text file should have a single line of labels in a C define like below:
#define IMLIB_TF_BUILT_IN_NETWORK_LABELS ""a"", ""b"", ""c""

Call tf.load_builtin_labels() then to return the list of strings. Note you need to make clean between
adding/removing the custom labels file to the firmware. Modifying the file does not require a rebuild.
Finally, your network/labels may not fit inside the firmware. If you encounter a flash overflow you either
need to shrink your network/labels or turn off features in src/omv/boards/<TARGET>/imlib_config.h","Hi...

tf.load_builtin_model() should return a tuple (labels, net):

labels, net = tf.load_builtin_model()
It's less typing in scripts, saves some flash, and fewer functions to document. Note labels can be an empty list if there isn't any labels.


Please make the person detection model itself the builtin model and process it unconditionally. i.e. remove the model data from the lib, replace it with builtin_model.tflite and builtin_labels.txt, process with xxd when building unconditionally. To replace the model and labels, you can just overwrite it and rebuild the firmware.
Note: omv/modules/ is for Python external user C modules. The model and labels should be in libtf or better in openmv/ml/tflite/


Please don't disable image features unless the flash overflows.


Would be nice if it can be just a csv, ex: person, not_person, unkown



The text file should have a single line of labels in a C define like below:
#define IMLIB_TF_BUILT_IN_NETWORK_LABELS ""a"", ""b"", ""c""",True,{}
openmv/openmv,https://github.com/openmv/openmv,1524,2022-02-06T04:07:09Z,2022-02-07T23:56:40Z,2022-02-07T23:56:41Z,CLOSED,False,481,6,23,https://github.com/kwagyeman,Add support for building customs nets into the firmware,2,[],https://github.com/openmv/openmv/pull/1524,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1524#issuecomment-1032062312,"(From Updated README)
The build system automatically supports changing the built-in TensorFlow model from the person detection
TensorFlow Lite Model to another model of your choice. Just drop your .tflite file into the src/omv/modules
folder and the build system will automatically detect the file and build your model into the firmware. Note
that you need to make clean between switching from the built-in model to your custom model. Modifying the
file does not require a rebuild. Call tf.load_builtin_model() to load your built-in model.
You can also build your model labels into the firmware. Just drop a .txt file into the src/omv/modules
folder. The text file should have a single line of labels in a C define like below:
#define IMLIB_TF_BUILT_IN_NETWORK_LABELS ""a"", ""b"", ""c""

Call tf.load_builtin_labels() then to return the list of strings. Note you need to make clean between
adding/removing the custom labels file to the firmware. Modifying the file does not require a rebuild.
Finally, your network/labels may not fit inside the firmware. If you encounter a flash overflow you either
need to shrink your network/labels or turn off features in src/omv/boards/<TARGET>/imlib_config.h",Superseded by #1526,True,{}
openmv/openmv,https://github.com/openmv/openmv,1525,2022-02-06T18:21:36Z,2022-02-06T18:26:12Z,2022-02-06T18:26:15Z,MERGED,True,3,2,1,https://github.com/iabdalkader,github: Update workflows.,1,[],https://github.com/openmv/openmv/pull/1525,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1525,Fix non-release tag creating release draft.,Fix non-release tag creating release draft.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1526,2022-02-07T23:46:19Z,2022-02-08T00:27:22Z,2022-02-08T00:27:27Z,MERGED,True,573,212,21,https://github.com/iabdalkader,Libtf: Add support for replacing/adding built-in models.,3,[],https://github.com/openmv/openmv/pull/1526,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1526,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1526,2022-02-07T23:46:19Z,2022-02-08T00:27:22Z,2022-02-08T00:27:27Z,MERGED,True,573,212,21,https://github.com/iabdalkader,Libtf: Add support for replacing/adding built-in models.,3,[],https://github.com/openmv/openmv/pull/1526,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1526#issuecomment-1032075788,,I'll update the examples and the tf library in a PR. Once that's done my next todo is the docs.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1527,2022-02-08T04:43:10Z,2022-02-08T19:21:06Z,2022-02-08T19:21:07Z,MERGED,True,12,759,18,https://github.com/kwagyeman,Update TF to ei-V2.5.0,2,[],https://github.com/openmv/openmv/pull/1527,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1527,We are in sync with the latest edge impulse code now.,We are in sync with the latest edge impulse code now.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1528,2022-02-09T19:56:40Z,2022-02-09T20:13:25Z,2022-02-09T20:13:28Z,MERGED,True,10,10,3,https://github.com/iabdalkader,WINC1500: Update firmware.,1,[],https://github.com/openmv/openmv/pull/1528,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1528,"Update firmware to 19.7.6.
Update firmware update script.
Fix reported host driver version.","Update firmware to 19.7.6.
Update firmware update script.
Fix reported host driver version.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1529,2022-02-09T21:24:52Z,2022-02-09T21:31:39Z,2022-02-09T21:31:46Z,MERGED,True,3,7,1,https://github.com/iabdalkader,github: Update workflows.,1,[],https://github.com/openmv/openmv/pull/1529,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1529,Fix build trigger on create branch.,Fix build trigger on create branch.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1530,2022-02-09T21:43:32Z,2022-02-09T21:43:54Z,2022-02-09T21:44:49Z,MERGED,True,0,17,3,https://github.com/iabdalkader,Update mjpeg scripts.,1,[],https://github.com/openmv/openmv/pull/1530,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1530,Remove old sensor settings.,Remove old sensor settings.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1531,2022-02-11T19:05:55Z,2022-02-12T18:24:36Z,2022-02-12T18:24:36Z,MERGED,True,0,0,4,https://github.com/kwagyeman,Add missing tf operators for edge impulse,1,[],https://github.com/openmv/openmv/pull/1531,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1531,This fixes the edge impulse problems. Verified it.,This fixes the edge impulse problems. Verified it.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1532,2022-02-12T15:37:56Z,2022-02-12T16:38:03Z,2022-02-12T16:38:06Z,MERGED,True,76,50,6,https://github.com/iabdalkader,ulab: Update to v4.0.0,1,[],https://github.com/openmv/openmv/pull/1532,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1532,Fixes #1521,Fixes #1521,True,{}
openmv/openmv,https://github.com/openmv/openmv,1533,2022-02-12T16:12:03Z,2022-02-12T16:16:02Z,2022-02-12T16:16:08Z,MERGED,True,9,0,2,https://github.com/iabdalkader,github: Update workflows.,1,[],https://github.com/openmv/openmv/pull/1533,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1533,"Disable fast fail.
Add dependabot config.","Disable fast fail.
Add dependabot config.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/linknum23,1,https://github.com/openmv/openmv/pull/1535,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1535#issuecomment-1040676241,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Any ideas as to why the lepton SDK is unstable here?

I have no idea why it becomes unstable, but maybe @kwagyeman can help, he's the expert on Lepton SDK..
I do have other comments on your PR though...

Can you please rebase your fork on our master ? The CI is failing to build your PR, it seems there's an issue with one of the submodules which was updated recently. Assuming you have a remote to our repo called upstream, if not add an upstream remote first:

git remote add upstream https://github.com/openmv/openmv.git
Then:
git checkout master
git fetch upstream
git rebase upstream/master
git push origin master
git checkout lepton_high_temp
git rebase master
git push --force origin lepton_high_temp


Also can you please remove the doc update for now ? It's in micropython submodule, I think it should be merged there first, then the submodule updated. You can send it in a PR to our micropython fork openmv/micropython.


More importantly, I would just add a 2nd argument to IOCTL_LEPTON_SET_MEASUREMENT_MODE  Note the ioctl function is flexible enough to support adding args, without breaking backwards compatibility. For example you can do this:


case IOCTL_LEPTON_SET_MEASUREMENT_MODE:
    if (n_args >= 2) {
        bool high_temp = (n_args == 2) ? false : mp_obj_get_int(args[2]);
        error = sensor_ioctl(request, mp_obj_get_int(args[1]), &high_temp);
    }
    break;
Now you don't need a new command. As for IOCTL_LEPTON_GET_MEASUREMENT_MODE you can return a tuple, like this:
case IOCTL_LEPTON_GET_MEASUREMENT_MODE: {
    int enabled, high_temp;
    error = sensor_ioctl(request, &enabled, &high_temp);
    if (error == 0) {
        ret_obj = mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_bool(enabled), mp_obj_new_bool(high_temp)});
    }
    break;
}

The IOCTL_LEPTON_SET_MEASUREMENT_RANGE the min/max temp range should be conditional on high_temp_mode, it should be:

case IOCTL_LEPTON_SET_MEASUREMENT_RANGE: {
    float *arg_min_temp = va_arg(ap, float *);
    float *arg_max_temp = va_arg(ap, float *);
    float min_temp_range = (high_temp_mode) ? LEPTON_MIN_HIGH_TEMP : LEPTON_MIN_TEMP;
    float max_temp_range = (high_temp_mode) ? LEPTON_MAX_HIGH_TEMP : LEPTON_MAX_TEMP;
    min_temp = IM_MAX(IM_MIN(*arg_min_temp, *arg_max_temp), min_temp_range);
    max_temp = IM_MIN(IM_MAX(*arg_max_temp, *arg_min_temp), max_temp_range);
    break;
}",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/linknum23,3,https://github.com/openmv/openmv/pull/1535#issuecomment-1040696649,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Oops I was wondering what happened after I rebased onto develop. Looks like I didn't handle ulab properly.
Updated the branch to only have my openmv changes. Thanks so much for the interface suggestions, those make way more sense.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/1535#issuecomment-1040707029,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534",Yes it looks aligned now. Let me know when you're done with all the changes and I'll rerun the workflows.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/linknum23,5,https://github.com/openmv/openmv/pull/1535#issuecomment-1040726046,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Hmm something is broken on my setup I can't seem to build off the master branch even:
This is whatmake -j4 -C src TARGET=OPENMV4 returns:
GEN openmv/src/build/lib/libtf/libtf_builtin_models.h
  File ""  File ""openmv/src/../tools/tflite2c.py/openmv/src/../tools/tflite2c.py"", line "", line 5757

        print('  ', end='')
print('  ', end='')
                                      ^
^
SyntaxErrorSyntaxError: : invalid syntaxinvalid syntax

Any ideas?",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/linknum23,6,https://github.com/openmv/openmv/pull/1535#issuecomment-1040729053,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Also just a heads up I added the changes but won't be able to test on real hardware for a couple of days. I'll push the changes here, just realize I can't even compile them right now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,7,https://github.com/openmv/openmv/pull/1535#issuecomment-1040731584,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","I'm not sure, looks like tflite2c.py has somehow been changed.. Try git checkout tools/tflite2c.py ?

Also just a heads up I added the changes but won't be able to test on real hardware for a couple of days

I can help test the change, by that I mean call the ioctl with the extra arg etc...
EDIT: make clean in src might help.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/linknum23,8,https://github.com/openmv/openmv/pull/1535#issuecomment-1040758588,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Yeah I'm still having issues, even on a clean checkout. I will get back into this when I can test on real hardware.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,9,https://github.com/openmv/openmv/pull/1535#issuecomment-1040782189,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Yeah I'm still having issues, even on a clean checkout. I will get back into this when I can test on real hardware.

Sure, take your time.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/linknum23,10,https://github.com/openmv/openmv/pull/1535#issuecomment-1040812555,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","The original changes worked but the interface was unstable. It often needed an additional reset command to start outputting images.
New/suggested changes to the interface are untested until I get the hardware again in a couple days. Feel free to convert this to a draft pr until then.
I can also add an example script for using the camera in high temp mode.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,11,https://github.com/openmv/openmv/pull/1535#issuecomment-1042536903,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","My suggested changes were meant to go into py_sensor.c, but also lepton.c needs to changes to accept/handle 2 args for measurement mode. Also IOCTL_LEPTON_GET_HIGH_TEMP_MODE IOCTL_LEPTON_SET_HIGH_TEMP_MODE are no longer needed/used.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,12,https://github.com/openmv/openmv/pull/1535#issuecomment-1042541038,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","@linknum23  I left a full review, hopefully it clears out any confusion.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/linknum23,13,https://github.com/openmv/openmv/pull/1535#issuecomment-1043577451,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Sure, take your time.

Getting back into this and I had time to figure out my issues. Mostly just missed this line:
git -C src/micropython/ submodule update --init --depth=1",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,14,https://github.com/openmv/openmv/pull/1535#issuecomment-1043647051,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Hi, there were still some issues with the changes, some formatting issues, and issues with passing args etc... all minor fixes, so I just reworked the PR here, keeping your commits: #1542
I also tested it, and I don't see any instability. In fact it seems more sensitive, or scales better, with high temp is enabled. With high temp disabled it looks like all temps are flattened.
With high-temp disabled:

With high-temp enabled:",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,15,https://github.com/openmv/openmv/pull/1535#issuecomment-1043661864,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534",Maybe this should be the default mode.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,16,https://github.com/openmv/openmv/pull/1535#issuecomment-1043670438,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","It's now merged in master, but I'm leaving this open for discussion,",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,17,https://github.com/openmv/openmv/pull/1535#issuecomment-1043756040,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","@linknum23 Hi, I already squashed and merged your commits with some fixes and cleanup here: 6b2cd10
If you have more fixes please send them in new PRs.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/linknum23,18,https://github.com/openmv/openmv/pull/1535#issuecomment-1043757087,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Oops didn't notice this. Had my head down...
Thanks for all of the help on this!
I moved some things around to make sure radiometry mode was set correctly all of the time. Let me play with the changes to master and see how they work.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1535,2022-02-15T17:47:37Z,2022-02-18T02:41:57Z,2022-02-18T02:41:57Z,CLOSED,False,44,18,2,https://github.com/linknum23,Add lepton high temp mode,7,[],https://github.com/openmv/openmv/pull/1535,https://github.com/iabdalkader,19,https://github.com/openmv/openmv/pull/1535#issuecomment-1043766796,"The FLIR Lepton 3.5 sensor has a high temperature output mode that supports temperature readings up to 600C.
To support this goal the following was added:

Add min and max temperature setting firmware
Add flag for enabling high temperature mode

With these additions the firmware interface here seems a little flaky. Many times after setting these modes the sensor needs to be reset again for image acquisition to work. This probably shouldn't be merged until this instability is addressed. Any ideas as to why the lepton SDK is unstable here?
Fixes #1534","Let me play with the changes to master and see how they work.

Sure, when ready send new PRs.. Also might want to fix the default min temp.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1537,2022-02-17T03:24:47Z,2022-02-17T03:45:56Z,2022-02-17T03:46:00Z,MERGED,True,1,1,1,https://github.com/iabdalkader,OPENMVPT: Enable RTC LSE.,1,[],https://github.com/openmv/openmv/pull/1537,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1537,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1540,2022-02-17T19:17:34Z,2022-02-17T19:41:01Z,2022-02-17T19:41:04Z,MERGED,True,7,3,2,https://github.com/iabdalkader,py_tf.c: Fix output scaling for uint8/int8.,1,[],https://github.com/openmv/openmv/pull/1540,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1540,Fixes  #1502,Fixes  #1502,True,{}
openmv/openmv,https://github.com/openmv/openmv,1542,2022-02-17T23:54:03Z,2022-02-18T00:21:43Z,2022-02-19T14:59:35Z,MERGED,True,36,16,2,https://github.com/iabdalkader,Lepton: Add high temperature measurement mode support.,1,[],https://github.com/openmv/openmv/pull/1542,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1542,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1544,2022-02-18T03:27:55Z,2022-02-18T18:02:20Z,2022-02-18T18:02:26Z,MERGED,True,63,2,2,https://github.com/linknum23,High temp cleanup,2,[],https://github.com/openmv/openmv/pull/1544,https://github.com/linknum23,1,https://github.com/openmv/openmv/pull/1544,Add a high temp example and use reasonable default temps in C.,Add a high temp example and use reasonable default temps in C.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1544,2022-02-18T03:27:55Z,2022-02-18T18:02:20Z,2022-02-18T18:02:26Z,MERGED,True,63,2,2,https://github.com/linknum23,High temp cleanup,2,[],https://github.com/openmv/openmv/pull/1544,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1544#issuecomment-1044861086,Add a high temp example and use reasonable default temps in C.,"Hi, thanks for the PR. I have a small request, can you please change the commit titles to match this:
Examples: Add Lepton high temp example.
Lepton: Fix default temperature range.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1544,2022-02-18T03:27:55Z,2022-02-18T18:02:20Z,2022-02-18T18:02:26Z,MERGED,True,63,2,2,https://github.com/linknum23,High temp cleanup,2,[],https://github.com/openmv/openmv/pull/1544,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1544#issuecomment-1044934787,Add a high temp example and use reasonable default temps in C.,Thanks!,True,{}
openmv/openmv,https://github.com/openmv/openmv,1545,2022-02-18T16:35:02Z,2022-02-18T17:11:55Z,2022-02-18T17:11:58Z,MERGED,True,37,7,2,https://github.com/iabdalkader,github: Update workflows.,1,[],https://github.com/openmv/openmv/pull/1545,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1545,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1546,2022-02-19T02:43:54Z,2022-02-19T02:46:32Z,2022-02-19T03:00:33Z,CLOSED,False,11,2,1,https://github.com/iabdalkader,github: Update workflows.,1,[],https://github.com/openmv/openmv/pull/1546,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1546,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1547,2022-02-19T14:22:47Z,2022-02-19T14:27:29Z,2022-02-19T14:59:33Z,MERGED,True,33,816,3,https://github.com/iabdalkader,github: Generate release change log.,1,[],https://github.com/openmv/openmv/pull/1547,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1547,"Generate stable and development releases changelog.
Remove manual changelog file.","Generate stable and development releases changelog.
Remove manual changelog file.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1548,2022-02-19T14:54:19Z,2022-02-19T14:59:15Z,2022-02-19T14:59:19Z,MERGED,True,7,2,1,https://github.com/iabdalkader,github: Check pull request title in workflows.,1,[],https://github.com/openmv/openmv/pull/1548,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1548,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1549,2022-02-19T22:11:09Z,2022-02-19T22:19:00Z,2022-02-19T22:19:03Z,MERGED,True,15,5,2,https://github.com/iabdalkader,github: Enable caching workflow dependencies.,1,[],https://github.com/openmv/openmv/pull/1549,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1549,Use cache for GNU Arm Embedded Toolchain.,Use cache for GNU Arm Embedded Toolchain.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1551,2022-02-22T01:30:41Z,2022-02-22T01:51:02Z,2022-02-22T01:51:04Z,MERGED,True,11,2,3,https://github.com/iabdalkader,OPENMVPT: Fix RTC clock source.,1,[],https://github.com/openmv/openmv/pull/1551,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1551,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1552,2022-02-23T09:11:52Z,2022-02-24T05:43:41Z,2022-02-24T05:43:41Z,CLOSED,False,3,3,1,https://github.com/dianjixz,Algorithm output value error,1,[],https://github.com/openmv/openmv/pull/1552,https://github.com/dianjixz,1,https://github.com/openmv/openmv/pull/1552,"When imlib_rgb565_to_l function input is zero, the output is a negative, but it should not be a negative value.,116 * 0.137931 = 15.999996.","When imlib_rgb565_to_l function input is zero, the output is a negative, but it should not be a negative value.,116 * 0.137931 = 15.999996.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1552,2022-02-23T09:11:52Z,2022-02-24T05:43:41Z,2022-02-24T05:43:41Z,CLOSED,False,3,3,1,https://github.com/dianjixz,Algorithm output value error,1,[],https://github.com/openmv/openmv/pull/1552,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1552#issuecomment-1049026239,"When imlib_rgb565_to_l function input is zero, the output is a negative, but it should not be a negative value.,116 * 0.137931 = 15.999996.","Hi, please fix the commit subject line and pull request title, see: https://github.com/openmv/openmv#contribution-guidelines
For example imlib: Fix imlib_rgb565_to_l output.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1552,2022-02-23T09:11:52Z,2022-02-24T05:43:41Z,2022-02-24T05:43:41Z,CLOSED,False,3,3,1,https://github.com/dianjixz,Algorithm output value error,1,[],https://github.com/openmv/openmv/pull/1552,https://github.com/dianjixz,3,https://github.com/openmv/openmv/pull/1552#issuecomment-1049430243,"When imlib_rgb565_to_l function input is zero, the output is a negative, but it should not be a negative value.,116 * 0.137931 = 15.999996.","Yes, thank you for reminding me, this is my first time to submit, so it is not so perfect.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1553,2022-02-24T05:57:58Z,2022-02-24T12:51:30Z,2022-02-24T12:51:41Z,MERGED,True,3,3,1,https://github.com/dianjixz,imlib: Fix imlib_rgb565_to_l output.,1,[],https://github.com/openmv/openmv/pull/1553,https://github.com/dianjixz,1,https://github.com/openmv/openmv/pull/1553,"It should not be negative when the imlib_rgb565_to_l function input is zero, e.g. y=0.137931f, fast_floorf(116 * 0.137931f) = 15.999996,  15.999996 - 16 < 0.","It should not be negative when the imlib_rgb565_to_l function input is zero, e.g. y=0.137931f, fast_floorf(116 * 0.137931f) = 15.999996,  15.999996 - 16 < 0.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1553,2022-02-24T05:57:58Z,2022-02-24T12:51:30Z,2022-02-24T12:51:41Z,MERGED,True,3,3,1,https://github.com/dianjixz,imlib: Fix imlib_rgb565_to_l output.,1,[],https://github.com/openmv/openmv/pull/1553,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1553#issuecomment-1049828220,"It should not be negative when the imlib_rgb565_to_l function input is zero, e.g. y=0.137931f, fast_floorf(116 * 0.137931f) = 15.999996,  15.999996 - 16 < 0.","Merged, thank you!",True,{}
openmv/openmv,https://github.com/openmv/openmv,1554,2022-02-26T01:00:29Z,2022-02-26T01:04:48Z,2022-02-26T01:04:51Z,MERGED,True,8,4,3,https://github.com/iabdalkader,imlib: Enable hardware JPEG callbacks.,1,[],https://github.com/openmv/openmv/pull/1554,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1554,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1555,2022-02-26T01:06:14Z,2022-02-26T01:16:40Z,2022-02-26T01:16:43Z,MERGED,True,1,1,1,https://github.com/iabdalkader,OPENMVPT: Fixe LSE oscillator mode.,1,[],https://github.com/openmv/openmv/pull/1555,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1555,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1556,2022-02-27T14:12:47Z,2022-02-27T14:55:59Z,2022-02-27T14:56:02Z,MERGED,True,321,663,3,https://github.com/iabdalkader,imlib: Update JPEG decoder and fix memory issues.,1,[],https://github.com/openmv/openmv/pull/1556,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1556,"Fix MemManage fault on decoding odd images.
Support decoding YCBCR to Grayscale.
Support decoding Grayscale to RGB565.
Minor formatting fixes.
Use a single decompress function for all formats.
Fixes #1550","Fix MemManage fault on decoding odd images.
Support decoding YCBCR to Grayscale.
Support decoding Grayscale to RGB565.
Minor formatting fixes.
Use a single decompress function for all formats.
Fixes #1550",True,{}
openmv/openmv,https://github.com/openmv/openmv,1557,2022-02-27T17:29:48Z,2022-02-27T18:29:50Z,2022-02-27T18:30:00Z,MERGED,True,276,3,2,https://github.com/iabdalkader,imlib: Add hardware JPEG decoder support.,2,[],https://github.com/openmv/openmv/pull/1557,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1557,"Add initial hardware JPEG decoder support.
Detect and fail on progressive JPEGs for both SW/HW decoders.
No support for decoding/conversion to a different colorspace.
Decoder is disabled by default pending further testing.

Some numbers:



Image Size
Format
Software
Hardware
Diff %




640x480
GRAY
11  ms
14  ms
+27%


320x240
GRAY
4   ms
3   ms
-25%


320x240
GRAY
4   ms
4   ms
0%


800x600
GRAY
11  ms
21  ms
+90%


1280x960
GRAY
67  ms
57  ms
-14%


320x240
RGB565
12  ms
9   ms
-25%


698x500
RGB565
47  ms
19  ms
-59%


692x500
RGB565
41  ms
16  ms
-60%


752x500
RGB565
47  ms
18  ms
-61%


1280x960
RGB565
155 ms
61  ms
-60%


1280x960
RGB565
175 ms
86  ms
-50%


1280x960
RGB565
231 ms
132 ms
-42%


320x240
RGB565
10  ms
9   ms
-10%


751x500
RGB565
51  ms
20  ms
-60%","Add initial hardware JPEG decoder support.
Detect and fail on progressive JPEGs for both SW/HW decoders.
No support for decoding/conversion to a different colorspace.
Decoder is disabled by default pending further testing.

Some numbers:



Image Size
Format
Software
Hardware
Diff %




640x480
GRAY
11  ms
14  ms
+27%


320x240
GRAY
4   ms
3   ms
-25%


320x240
GRAY
4   ms
4   ms
0%


800x600
GRAY
11  ms
21  ms
+90%


1280x960
GRAY
67  ms
57  ms
-14%


320x240
RGB565
12  ms
9   ms
-25%


698x500
RGB565
47  ms
19  ms
-59%


692x500
RGB565
41  ms
16  ms
-60%


752x500
RGB565
47  ms
18  ms
-61%


1280x960
RGB565
155 ms
61  ms
-60%


1280x960
RGB565
175 ms
86  ms
-50%


1280x960
RGB565
231 ms
132 ms
-42%


320x240
RGB565
10  ms
9   ms
-10%


751x500
RGB565
51  ms
20  ms
-60%",True,{}
openmv/openmv,https://github.com/openmv/openmv,1558,2022-02-28T01:07:45Z,2022-02-28T01:11:33Z,2022-03-06T16:28:48Z,MERGED,True,8,0,2,https://github.com/iabdalkader,stm32: Add LSE driver strength config option.,1,[],https://github.com/openmv/openmv/pull/1558,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1558,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1559,2022-02-28T03:11:51Z,2022-02-28T03:19:06Z,2022-02-28T03:22:36Z,MERGED,True,7,5,1,https://github.com/iabdalkader,github: Update development release timestamp.,1,[],https://github.com/openmv/openmv/pull/1559,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1559,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1560,2022-02-28T03:36:04Z,2022-02-28T03:39:27Z,2022-02-28T03:39:36Z,MERGED,True,4,1,2,https://github.com/iabdalkader,github: Ignore github PRs in change log.,1,[],https://github.com/openmv/openmv/pull/1560,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1560,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1561,2022-02-28T14:14:38Z,2022-02-28T14:20:51Z,2022-02-28T14:20:55Z,MERGED,True,4,3,1,https://github.com/iabdalkader,OPENMVPT: Disable RTC LSE clock source.,1,[],https://github.com/openmv/openmv/pull/1561,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1561,"Due to an issue with the crystal oscillator, the LSE can't be enabled without reworking the board, otherwise it will never start.","Due to an issue with the crystal oscillator, the LSE can't be enabled without reworking the board, otherwise it will never start.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1562,2022-02-28T18:43:12Z,2022-02-28T18:43:34Z,2022-02-28T18:43:37Z,MERGED,True,11,0,1,https://github.com/iabdalkader,github: Remove github fixes from changelog.,1,[],https://github.com/openmv/openmv/pull/1562,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1562,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1563,2022-02-28T19:27:45Z,2022-02-28T19:32:57Z,2022-02-28T19:33:00Z,MERGED,True,4,0,1,https://github.com/iabdalkader,stm32: Add LSI config option.,1,[],https://github.com/openmv/openmv/pull/1563,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1563,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1564,2022-03-02T14:01:17Z,2022-03-02T14:04:56Z,2022-03-02T14:04:59Z,MERGED,True,1,0,1,https://github.com/iabdalkader,OPENMVPT: Set RTC clock source back to LSE on startup.,1,[],https://github.com/openmv/openmv/pull/1564,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1564,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1567,2022-03-03T12:21:29Z,2022-03-03T12:26:20Z,2022-03-03T12:26:23Z,MERGED,True,1,2,2,https://github.com/iabdalkader,stm32: Fix RTC clock source for 4P and PT.,1,[],https://github.com/openmv/openmv/pull/1567,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1567,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1568,2022-03-03T12:49:13Z,2022-03-03T15:21:51Z,2022-03-03T15:21:54Z,MERGED,True,3,3,1,https://github.com/apps/dependabot,build(deps): bump actions/checkout from 2 to 3.,1,['dependencies'],https://github.com/openmv/openmv/pull/1568,https://github.com/apps/dependabot,1,https://github.com/openmv/openmv/pull/1568,"Bumps actions/checkout from 2 to 3.

Release notes
Sourced from actions/checkout's releases.

v3.0.0

Update default runtime to node16

v2.4.0

Convert SSH URLs like org-<ORG_ID>@github.com: to https://github.com/ - pr

v2.3.5
Update dependencies
v2.3.4

Add missing awaits
Swap to Environment Files

v2.3.3

Remove Unneeded commit information from build logs
Add Licensed to verify third party dependencies

v2.3.2
Add Third Party License Information to Dist Files
v2.3.1
Fix default branch resolution for .wiki and when using SSH
v2.3.0
Fallback to the default branch
v2.2.0
Fetch all history for all tags and branches when fetch-depth=0
v2.1.1
Changes to support GHES (here and here)
v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22




Changelog
Sourced from actions/checkout's changelog.

Changelog
v2.3.1

Fix default branch resolution for .wiki and when using SSH

v2.3.0

Fallback to the default branch

v2.2.0

Fetch all history for all tags and branches when fetch-depth=0

v2.1.1

Changes to support GHES (here and here)

v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22

v2.0.0

Do not pass cred on command line
Add input persist-credentials
Fallback to REST API to download repo




Commits

a12a394 update readme for v3 (#708)
8f9e05e Update to node 16 (#689)
230611d Change secret name for PAT to not start with GITHUB_ (#623)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/checkout from 2 to 3.

Release notes
Sourced from actions/checkout's releases.

v3.0.0

Update default runtime to node16

v2.4.0

Convert SSH URLs like org-<ORG_ID>@github.com: to https://github.com/ - pr

v2.3.5
Update dependencies
v2.3.4

Add missing awaits
Swap to Environment Files

v2.3.3

Remove Unneeded commit information from build logs
Add Licensed to verify third party dependencies

v2.3.2
Add Third Party License Information to Dist Files
v2.3.1
Fix default branch resolution for .wiki and when using SSH
v2.3.0
Fallback to the default branch
v2.2.0
Fetch all history for all tags and branches when fetch-depth=0
v2.1.1
Changes to support GHES (here and here)
v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22




Changelog
Sourced from actions/checkout's changelog.

Changelog
v2.3.1

Fix default branch resolution for .wiki and when using SSH

v2.3.0

Fallback to the default branch

v2.2.0

Fetch all history for all tags and branches when fetch-depth=0

v2.1.1

Changes to support GHES (here and here)

v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22

v2.0.0

Do not pass cred on command line
Add input persist-credentials
Fallback to REST API to download repo




Commits

a12a394 update readme for v3 (#708)
8f9e05e Update to node 16 (#689)
230611d Change secret name for PAT to not start with GITHUB_ (#623)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1569,2022-03-03T13:06:15Z,2022-03-03T13:12:59Z,2022-03-03T13:13:30Z,MERGED,True,5,5,1,https://github.com/iabdalkader,OPENMV2: Update memory config to fix self-test issues.,1,[],https://github.com/openmv/openmv/pull/1569,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1569,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1571,2022-03-03T18:55:50Z,2022-03-03T18:56:28Z,2022-03-03T18:56:31Z,MERGED,True,0,0,1,https://github.com/iabdalkader,scripts: Rename lsm6dsox example script.,1,[],https://github.com/openmv/openmv/pull/1571,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1571,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1572,2022-03-03T23:57:14Z,2022-03-04T00:22:08Z,2022-03-04T00:22:10Z,MERGED,True,19,35,15,https://github.com/iabdalkader,boards: Remove raw FB size macro.,1,[],https://github.com/openmv/openmv/pull/1572,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1572,"This old macro is very easy to miss when updating OMV_FB_SIZE.
Use a linker script variable to get the raw framebuffer size.","This old macro is very easy to miss when updating OMV_FB_SIZE.
Use a linker script variable to get the raw framebuffer size.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1573,2022-03-06T03:08:30Z,2022-03-06T03:14:31Z,2022-03-06T03:14:34Z,MERGED,True,11,6,1,https://github.com/iabdalkader,sensors: Fix GC2145 window subsampling ratio.,1,[],https://github.com/openmv/openmv/pull/1573,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1573,Fixes #1570,Fixes #1570,True,{}
openmv/openmv,https://github.com/openmv/openmv,1575,2022-03-06T03:22:59Z,2022-03-06T03:26:27Z,2022-03-06T03:26:29Z,MERGED,True,3,3,1,https://github.com/iabdalkader,stm32: Fix openmv disk file.,1,[],https://github.com/openmv/openmv/pull/1575,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1575,Fixes #1574,Fixes #1574,True,{}
openmv/openmv,https://github.com/openmv/openmv,1576,2022-03-06T15:54:48Z,2022-03-06T15:58:54Z,2022-03-06T15:58:57Z,MERGED,True,2,2,2,https://github.com/iabdalkader,github: Update workflow.,1,[],https://github.com/openmv/openmv/pull/1576,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1576,"Fix typo.
Rename changelog config file.","Fix typo.
Rename changelog config file.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1577,2022-03-06T19:32:48Z,2022-03-06T19:38:26Z,2022-03-06T19:38:28Z,MERGED,True,78,7,2,https://github.com/iabdalkader,github: Update workflow.,1,[],https://github.com/openmv/openmv/pull/1577,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1577,Sort changelog.,Sort changelog.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1578,2022-03-07T20:52:11Z,2022-03-09T22:03:01Z,2022-03-09T22:03:04Z,CLOSED,False,30,5,3,https://github.com/iabdalkader,boards/OPENMVPT: Fix RTC errata.,1,[],https://github.com/openmv/openmv/pull/1578,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1578,Fixes  #1536,Fixes  #1536,True,{}
openmv/openmv,https://github.com/openmv/openmv,1579,2022-03-08T23:20:12Z,2022-03-09T22:02:49Z,2022-03-09T22:02:52Z,MERGED,True,9,3,3,https://github.com/iabdalkader,boards/OPENMVPT: Fix RTC errata.,1,[],https://github.com/openmv/openmv/pull/1579,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1579,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1581,2022-03-09T23:31:11Z,2022-03-09T23:36:16Z,2022-03-09T23:36:19Z,MERGED,True,3,1,1,https://github.com/iabdalkader,boards/NANO-RP2040: Update manifest.,1,[],https://github.com/openmv/openmv/pull/1581,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1581,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1582,2022-03-09T23:57:28Z,2022-03-10T00:13:12Z,2022-03-10T00:13:15Z,MERGED,True,34,54,7,https://github.com/iabdalkader,micropython: Update to 1.18.,1,[],https://github.com/openmv/openmv/pull/1582,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1582,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1583,2022-03-10T16:23:48Z,2022-03-10T16:56:10Z,2022-03-10T16:56:11Z,MERGED,True,27,1,2,https://github.com/kwagyeman,sensors/Lepton: Update to support version number in IDE.,1,[],https://github.com/openmv/openmv/pull/1583,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1583,IDE already has these new versions in it's sensor.txt file.,IDE already has these new versions in it's sensor.txt file.,True,{'HOORAY': ['https://github.com/iabdalkader']}
openmv/openmv,https://github.com/openmv/openmv,1585,2022-03-10T18:38:15Z,2022-03-10T18:46:00Z,2022-03-10T18:46:03Z,MERGED,True,79,65,2,https://github.com/iabdalkader,drivers/winc1500: Fix timeout handling.,1,[],https://github.com/openmv/openmv/pull/1585,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1585,Change timeout meaning to match modusocket timeout.,Change timeout meaning to match modusocket timeout.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1586,2022-03-11T22:04:29Z,2022-03-11T22:12:05Z,2022-03-11T22:12:08Z,MERGED,True,42,19,6,https://github.com/iabdalkader,sensors/cambus: Support returning multiple devices from scan.,1,[],https://github.com/openmv/openmv/pull/1586,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1586,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1587,2022-03-11T22:28:19Z,2022-03-11T22:31:40Z,2022-03-11T22:31:42Z,MERGED,True,27,22,1,https://github.com/iabdalkader,sensors/FIR: Support buses with multiple devices.,1,[],https://github.com/openmv/openmv/pull/1587,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1587,Fixes #1584,Fixes #1584,True,{}
openmv/openmv,https://github.com/openmv/openmv,1588,2022-03-12T21:35:18Z,2022-03-12T21:40:47Z,2022-03-12T21:40:51Z,MERGED,True,1,1,1,https://github.com/iabdalkader,ports/stm32: Fix USB HS endpoint descriptor offset.,1,[],https://github.com/openmv/openmv/pull/1588,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1588,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1589,2022-03-14T14:32:51Z,2022-03-14T14:37:52Z,2022-03-14T14:37:56Z,MERGED,True,2,1,1,https://github.com/iabdalkader,imlib: Add ImageIO finaliser to close the stream when deleted.,1,[],https://github.com/openmv/openmv/pull/1589,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1589,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1591,2022-03-15T20:35:57Z,2022-03-15T20:40:11Z,2022-03-15T20:40:40Z,MERGED,True,6,0,1,https://github.com/iabdalkader,sensors/MLX9064x: Sync frame reading.,1,[],https://github.com/openmv/openmv/pull/1591,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1591,Fix frame glitches when reading speed is slower than framerate.,Fix frame glitches when reading speed is slower than framerate.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1591,2022-03-15T20:35:57Z,2022-03-15T20:40:11Z,2022-03-15T20:40:40Z,MERGED,True,6,0,1,https://github.com/iabdalkader,sensors/MLX9064x: Sync frame reading.,1,[],https://github.com/openmv/openmv/pull/1591,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1591#issuecomment-1068447713,Fix frame glitches when reading speed is slower than framerate.,FYI @kwagyeman fixes the frame glitches at 64Hz.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1592,2022-03-15T20:37:17Z,2022-03-15T20:40:53Z,2022-03-15T20:40:56Z,MERGED,True,1,1,1,https://github.com/iabdalkader,micropython: Code formatting.,1,[],https://github.com/openmv/openmv/pull/1592,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1592,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1593,2022-03-15T20:50:55Z,2022-03-15T20:54:11Z,2022-03-15T20:54:14Z,MERGED,True,7,0,1,https://github.com/iabdalkader,ports/rp2: Add cambus gencall.,1,[],https://github.com/openmv/openmv/pull/1593,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1593,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1594,2022-03-15T20:56:36Z,2022-03-15T21:05:09Z,2022-03-15T21:05:12Z,MERGED,True,3,3,1,https://github.com/iabdalkader,ports/rp2: Fix cambus fast mode plus frequency.,1,[],https://github.com/openmv/openmv/pull/1594,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1594,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1595,2022-03-21T15:36:37Z,2022-03-30T15:49:52Z,2022-03-30T15:49:54Z,CLOSED,False,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/cache from 2 to 3,1,['dependencies'],https://github.com/openmv/openmv/pull/1595,https://github.com/apps/dependabot,1,https://github.com/openmv/openmv/pull/1595,"Bumps actions/cache from 2 to 3.

Release notes
Sourced from actions/cache's releases.

v3.0.0


This change adds a minimum runner version(node12 -> node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via github connect or manually copying the repo to their GHES instance.


Few dependencies and cache action usage examples have also been updated.


v2.1.7
Support 10GB cache upload using the latest version 1.0.8 of @actions/cache 
v2.1.6

Catch unhandled ""bad file descriptor"" errors that sometimes occurs when the cache server returns non-successful response (actions/cache#596)

v2.1.5

Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (actions/cache#527)

v2.1.4

Make caching more verbose #650
Use GNU tar on macOS if available #701

v2.1.3

Upgrades @actions/core to v1.2.6 for CVE-2020-15228. This action was not using the affected methods.
Fix error handling in uploadChunk where 400-level errors were not being detected and handled correctly

v2.1.2

Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds
No-op when executing on GHES

v2.1.1

Update @actions/cache package to v1.0.2 which allows cache action to use posix format when taring files.

v2.1.0

Replaces the http-client with the Azure Storage SDK for NodeJS when downloading cache content from Azure.  This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently
Display download progress and speed




Commits

4b0cf6c Merge pull request #769 from actions/users/ashwinsangem/bump_major_version
60c606a Update licensed files
b6e9a91 Revert ""Updated to the latest version.""
c842503 Updated to the latest version.
2b7da2a Bumped up to a major version.
deae296 Merge pull request #651 from magnetikonline/fix-golang-windows-example
c7c46bc Merge pull request #707 from duxtland/main
6535c5f Regenerated examples.md TOC
3fdafa4 Update GitHub Actions status badge markdown in README.md
341e6d7 Merge branch 'actions:main' into fix-golang-windows-example
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/cache from 2 to 3.

Release notes
Sourced from actions/cache's releases.

v3.0.0


This change adds a minimum runner version(node12 -> node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via github connect or manually copying the repo to their GHES instance.


Few dependencies and cache action usage examples have also been updated.


v2.1.7
Support 10GB cache upload using the latest version 1.0.8 of @actions/cache 
v2.1.6

Catch unhandled ""bad file descriptor"" errors that sometimes occurs when the cache server returns non-successful response (actions/cache#596)

v2.1.5

Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (actions/cache#527)

v2.1.4

Make caching more verbose #650
Use GNU tar on macOS if available #701

v2.1.3

Upgrades @actions/core to v1.2.6 for CVE-2020-15228. This action was not using the affected methods.
Fix error handling in uploadChunk where 400-level errors were not being detected and handled correctly

v2.1.2

Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds
No-op when executing on GHES

v2.1.1

Update @actions/cache package to v1.0.2 which allows cache action to use posix format when taring files.

v2.1.0

Replaces the http-client with the Azure Storage SDK for NodeJS when downloading cache content from Azure.  This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently
Display download progress and speed




Commits

4b0cf6c Merge pull request #769 from actions/users/ashwinsangem/bump_major_version
60c606a Update licensed files
b6e9a91 Revert ""Updated to the latest version.""
c842503 Updated to the latest version.
2b7da2a Bumped up to a major version.
deae296 Merge pull request #651 from magnetikonline/fix-golang-windows-example
c7c46bc Merge pull request #707 from duxtland/main
6535c5f Regenerated examples.md TOC
3fdafa4 Update GitHub Actions status badge markdown in README.md
341e6d7 Merge branch 'actions:main' into fix-golang-windows-example
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1595,2022-03-21T15:36:37Z,2022-03-30T15:49:52Z,2022-03-30T15:49:54Z,CLOSED,False,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/cache from 2 to 3,1,['dependencies'],https://github.com/openmv/openmv/pull/1595,https://github.com/apps/dependabot,2,https://github.com/openmv/openmv/pull/1595#issuecomment-1083314825,"Bumps actions/cache from 2 to 3.

Release notes
Sourced from actions/cache's releases.

v3.0.0


This change adds a minimum runner version(node12 -> node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via github connect or manually copying the repo to their GHES instance.


Few dependencies and cache action usage examples have also been updated.


v2.1.7
Support 10GB cache upload using the latest version 1.0.8 of @actions/cache 
v2.1.6

Catch unhandled ""bad file descriptor"" errors that sometimes occurs when the cache server returns non-successful response (actions/cache#596)

v2.1.5

Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (actions/cache#527)

v2.1.4

Make caching more verbose #650
Use GNU tar on macOS if available #701

v2.1.3

Upgrades @actions/core to v1.2.6 for CVE-2020-15228. This action was not using the affected methods.
Fix error handling in uploadChunk where 400-level errors were not being detected and handled correctly

v2.1.2

Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds
No-op when executing on GHES

v2.1.1

Update @actions/cache package to v1.0.2 which allows cache action to use posix format when taring files.

v2.1.0

Replaces the http-client with the Azure Storage SDK for NodeJS when downloading cache content from Azure.  This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently
Display download progress and speed




Commits

4b0cf6c Merge pull request #769 from actions/users/ashwinsangem/bump_major_version
60c606a Update licensed files
b6e9a91 Revert ""Updated to the latest version.""
c842503 Updated to the latest version.
2b7da2a Bumped up to a major version.
deae296 Merge pull request #651 from magnetikonline/fix-golang-windows-example
c7c46bc Merge pull request #707 from duxtland/main
6535c5f Regenerated examples.md TOC
3fdafa4 Update GitHub Actions status badge markdown in README.md
341e6d7 Merge branch 'actions:main' into fix-golang-windows-example
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",Superseded by #1602.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1601,2022-03-30T08:22:29Z,2022-03-30T17:13:13Z,2022-03-30T17:13:22Z,MERGED,True,6,2,1,https://github.com/dianjixz,imlib: Fix quad_segment_maxima memory leak.,1,[],https://github.com/openmv/openmv/pull/1601,https://github.com/dianjixz,1,https://github.com/openmv/openmv/pull/1601,Memory forgot to free when nmaxima is least 4 maxima.,Memory forgot to free when nmaxima is least 4 maxima.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1601,2022-03-30T08:22:29Z,2022-03-30T17:13:13Z,2022-03-30T17:13:22Z,MERGED,True,6,2,1,https://github.com/dianjixz,imlib: Fix quad_segment_maxima memory leak.,1,[],https://github.com/openmv/openmv/pull/1601,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1601#issuecomment-1083406095,Memory forgot to free when nmaxima is least 4 maxima.,Thanks!,True,{}
openmv/openmv,https://github.com/openmv/openmv,1602,2022-03-30T15:49:48Z,2022-03-30T16:58:19Z,2022-03-30T16:58:26Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/cache from 2 to 3.0.1,1,['dependencies'],https://github.com/openmv/openmv/pull/1602,https://github.com/apps/dependabot,1,https://github.com/openmv/openmv/pull/1602,"Bumps actions/cache from 2 to 3.0.1.

Release notes
Sourced from actions/cache's releases.

v3.0.1

Added support for caching from GHES 3.5.
Fixed download issue for files > 2GB during restore.

v3.0.0


This change adds a minimum runner version(node12 -> node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via github connect or manually copying the repo to their GHES instance.


Few dependencies and cache action usage examples have also been updated.


v2.1.7
Support 10GB cache upload using the latest version 1.0.8 of @actions/cache 
v2.1.6

Catch unhandled ""bad file descriptor"" errors that sometimes occurs when the cache server returns non-successful response (actions/cache#596)

v2.1.5

Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (actions/cache#527)

v2.1.4

Make caching more verbose #650
Use GNU tar on macOS if available #701

v2.1.3

Upgrades @actions/core to v1.2.6 for CVE-2020-15228. This action was not using the affected methods.
Fix error handling in uploadChunk where 400-level errors were not being detected and handled correctly

v2.1.2

Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds
No-op when executing on GHES

v2.1.1

Update @actions/cache package to v1.0.2 which allows cache action to use posix format when taring files.

v2.1.0

Replaces the http-client with the Azure Storage SDK for NodeJS when downloading cache content from Azure.  This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently
Display download progress and speed




Changelog
Sourced from actions/cache's changelog.

3.0.1

Added support for caching from GHES 3.5.
Fixed download issue for files > 2GB during restore.




Commits

136d96b Enabling actions/cache for GHES based on presence of AC service (#774)
7d4f40b Bumping up the version to fix download issue for files > 2 GB. (#775)
2d8d0d1 Updated what's new. (#771)
7799d86 Updated the usage and docs to the major version release. (#770)
4b0cf6c Merge pull request #769 from actions/users/ashwinsangem/bump_major_version
60c606a Update licensed files
b6e9a91 Revert ""Updated to the latest version.""
c842503 Updated to the latest version.
2b7da2a Bumped up to a major version.
deae296 Merge pull request #651 from magnetikonline/fix-golang-windows-example
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/cache from 2 to 3.0.1.

Release notes
Sourced from actions/cache's releases.

v3.0.1

Added support for caching from GHES 3.5.
Fixed download issue for files > 2GB during restore.

v3.0.0


This change adds a minimum runner version(node12 -> node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via github connect or manually copying the repo to their GHES instance.


Few dependencies and cache action usage examples have also been updated.


v2.1.7
Support 10GB cache upload using the latest version 1.0.8 of @actions/cache 
v2.1.6

Catch unhandled ""bad file descriptor"" errors that sometimes occurs when the cache server returns non-successful response (actions/cache#596)

v2.1.5

Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (actions/cache#527)

v2.1.4

Make caching more verbose #650
Use GNU tar on macOS if available #701

v2.1.3

Upgrades @actions/core to v1.2.6 for CVE-2020-15228. This action was not using the affected methods.
Fix error handling in uploadChunk where 400-level errors were not being detected and handled correctly

v2.1.2

Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds
No-op when executing on GHES

v2.1.1

Update @actions/cache package to v1.0.2 which allows cache action to use posix format when taring files.

v2.1.0

Replaces the http-client with the Azure Storage SDK for NodeJS when downloading cache content from Azure.  This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently
Display download progress and speed




Changelog
Sourced from actions/cache's changelog.

3.0.1

Added support for caching from GHES 3.5.
Fixed download issue for files > 2GB during restore.




Commits

136d96b Enabling actions/cache for GHES based on presence of AC service (#774)
7d4f40b Bumping up the version to fix download issue for files > 2 GB. (#775)
2d8d0d1 Updated what's new. (#771)
7799d86 Updated the usage and docs to the major version release. (#770)
4b0cf6c Merge pull request #769 from actions/users/ashwinsangem/bump_major_version
60c606a Update licensed files
b6e9a91 Revert ""Updated to the latest version.""
c842503 Updated to the latest version.
2b7da2a Bumped up to a major version.
deae296 Merge pull request #651 from magnetikonline/fix-golang-windows-example
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1603,2022-04-02T15:10:23Z,2022-04-02T15:16:30Z,2022-04-02T15:16:33Z,MERGED,True,1,1,1,https://github.com/iabdalkader,ports/stm32: Improved CAN FD support.,1,[],https://github.com/openmv/openmv/pull/1603,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1603,"Add support for CAN FD frames.
Add support for Bitrate Switching (BRS) for data phase.
Add support for extended (29-bit) frame identifiers.
Add support for a bus with mixed Classic/FD nodes.
Return the matching filter ID and type of received messages.
Fix the maximum range for the nominal and data bit timing parameters.
Optimize the Message RAM usage per FDCAN instance.
Document the usage and different sections of the Message RAM.
Update CAN docs.
Fixes #1071","Add support for CAN FD frames.
Add support for Bitrate Switching (BRS) for data phase.
Add support for extended (29-bit) frame identifiers.
Add support for a bus with mixed Classic/FD nodes.
Return the matching filter ID and type of received messages.
Fix the maximum range for the nominal and data bit timing parameters.
Optimize the Message RAM usage per FDCAN instance.
Document the usage and different sections of the Message RAM.
Update CAN docs.
Fixes #1071",True,{}
openmv/openmv,https://github.com/openmv/openmv,1604,2022-04-02T19:11:05Z,,2022-04-04T06:49:46Z,OPEN,False,515,291,5,https://github.com/kwagyeman,imlib: Enable hardware JPEG decoder.,1,[],https://github.com/openmv/openmv/pull/1604,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1604,"Per @kdarras asking us to fix jpeg support constantly I got on this and finished the implementation of the hardware jpeg decoder using Ibrahim's code. All modes work. It can decode grayscale jpegs to binary/grayscale/rgb565. It can decode color 444/420/422 jpegs to binary/grayscale/rgb565. It uses DMA2D when it can. And it handles jpegs that aren't a multiple of 8x8, 16x8, 16x16 depending on the MCU size.
JPEG support issues should be closed now.","Per @kdarras asking us to fix jpeg support constantly I got on this and finished the implementation of the hardware jpeg decoder using Ibrahim's code. All modes work. It can decode grayscale jpegs to binary/grayscale/rgb565. It can decode color 444/420/422 jpegs to binary/grayscale/rgb565. It uses DMA2D when it can. And it handles jpegs that aren't a multiple of 8x8, 16x8, 16x16 depending on the MCU size.
JPEG support issues should be closed now.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1604,2022-04-02T19:11:05Z,,2022-04-04T06:49:46Z,OPEN,False,515,291,5,https://github.com/kwagyeman,imlib: Enable hardware JPEG decoder.,1,[],https://github.com/openmv/openmv/pull/1604,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1604#issuecomment-1086705882,"Per @kdarras asking us to fix jpeg support constantly I got on this and finished the implementation of the hardware jpeg decoder using Ibrahim's code. All modes work. It can decode grayscale jpegs to binary/grayscale/rgb565. It can decode color 444/420/422 jpegs to binary/grayscale/rgb565. It uses DMA2D when it can. And it handles jpegs that aren't a multiple of 8x8, 16x8, 16x16 depending on the MCU size.
JPEG support issues should be closed now.","Also, cropping and scaling jpeg images now work as seamlessly as non-jpeg images.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1604,2022-04-02T19:11:05Z,,2022-04-04T06:49:46Z,OPEN,False,515,291,5,https://github.com/kwagyeman,imlib: Enable hardware JPEG decoder.,1,[],https://github.com/openmv/openmv/pull/1604,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1604#issuecomment-1086708140,"Per @kdarras asking us to fix jpeg support constantly I got on this and finished the implementation of the hardware jpeg decoder using Ibrahim's code. All modes work. It can decode grayscale jpegs to binary/grayscale/rgb565. It can decode color 444/420/422 jpegs to binary/grayscale/rgb565. It uses DMA2D when it can. And it handles jpegs that aren't a multiple of 8x8, 16x8, 16x16 depending on the MCU size.
JPEG support issues should be closed now.","Why move the code from jpegd.c which is the sw/hw decoder file ? I prefer if encoder/decoder are kept separate. Any good reason for that ? Alternatively, the software encoder/decoder can be in a file and the hardware encoder/decoder can be in another file (ex jpeg_sw.c and jpeg_hw.c) although some code is shared between encoders and decoders.
You dropped the progressive JPEG sanity check. The SW/HW decoder only supports baseline JPEG.
Are you using software for GS to GS ? Because DMA2D can be used for GS->GS if set in DMA2D_M2M mode, in which it basically just copies 2D blocks of pixels.
SW decoder still needs to work for other MCUs.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1604,2022-04-02T19:11:05Z,,2022-04-04T06:49:46Z,OPEN,False,515,291,5,https://github.com/kwagyeman,imlib: Enable hardware JPEG decoder.,1,[],https://github.com/openmv/openmv/pull/1604,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1604#issuecomment-1086712332,"Per @kdarras asking us to fix jpeg support constantly I got on this and finished the implementation of the hardware jpeg decoder using Ibrahim's code. All modes work. It can decode grayscale jpegs to binary/grayscale/rgb565. It can decode color 444/420/422 jpegs to binary/grayscale/rgb565. It uses DMA2D when it can. And it handles jpegs that aren't a multiple of 8x8, 16x8, 16x16 depending on the MCU size.
JPEG support issues should be closed now.","Why move the code from jpegd.c which is the sw/hw decoder file ? I prefer if encoder/decoder are kept separate. Any good reason for that ? Alternatively, the software encoder/decoder can be in a file and the hardware encoder/decoder can be in another file (ex jpeg_sw.c and jpeg_hw.c) although some code is shared between encoders and decoders.

I re-use the same handles and constants from the jpeg encoder. I'd have to extern a bunch of stuff and duplicate defines otherwise.

You dropped the progressive JPEG sanity check. The SW/HW decoder only supports baseline JPEG.

It's still there. However, I made it more through. See the start of the decode method.

Are you using software for GS to GS ? Because DMA2D can be used for GS->GS if set in DMA2D_M2M mode, in which it basically just copies 2D blocks of pixels.

Yes, I didn't think of this. Yes, you could improve the jpeg transfer speed here by using DMA2D_M2M.

SW decoder still needs to work for other MCUs.

It's still enabled for other MCUs. Larry will have to fix any problems with it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1604,2022-04-02T19:11:05Z,,2022-04-04T06:49:46Z,OPEN,False,515,291,5,https://github.com/kwagyeman,imlib: Enable hardware JPEG decoder.,1,[],https://github.com/openmv/openmv/pull/1604,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/1604#issuecomment-1086977087,"Per @kdarras asking us to fix jpeg support constantly I got on this and finished the implementation of the hardware jpeg decoder using Ibrahim's code. All modes work. It can decode grayscale jpegs to binary/grayscale/rgb565. It can decode color 444/420/422 jpegs to binary/grayscale/rgb565. It uses DMA2D when it can. And it handles jpegs that aren't a multiple of 8x8, 16x8, 16x16 depending on the MCU size.
JPEG support issues should be closed now.","That's fine, encoder and decoder should be in separate files. Alternatively you can move all the hardware jpeg to jpeg_hw.c and the software jpeg to jpeg_sw.c your choice, this is probably cleaner, but the sw encoder here and the sw decoder there is Not okay.

Maybe you should move around in another PR since you are particular about this? I didn't like the jpegd.c file in the first place. But, since the jpeg decoder was so much code it made since to put it into it's own file.

I saw it now, you should move these checks to jpeg_is_progressive and improve it, which is also used by the software decoder, and rename it if you want to jpeg_is_valid or something.

I guess it needs to be shared between the both hardware and software decoders.

It does Not. The JPEG decoder outputs padded MCUs lines/columns. For example, a 300x240 Grayscale image will output 38x30 MCUs, see the manual and appnotes...This is probably an issue with the output chunk size you set, or something else.

No, you don't understand, the hardware jpeg decoder is literally bugged. If you give it an image that's not a multiple of 8 in width/height it doesn't do what you expect. My comment explains the behavior exactly. E.g. 300x240 will produce exactly 1,125 MCUs out of output versus 1140.
Without this fix it's not possible to handle non-MCU widths/heights. The decoder will just stall on you and fail to produce the expected number of MCUs.
When I was testing the code I got stuck with the MDMA not finishing and then by dumping some registers in the JPEG decoder I noticed it was calculating the number of MCUs it should output wrong.
Regarding the text you posted... that's about not sampling parts of the MCU output. You still need said MCUs to exist as output.

Anyway, what do you want fixed?",True,{}
openmv/openmv,https://github.com/openmv/openmv,1604,2022-04-02T19:11:05Z,,2022-04-04T06:49:46Z,OPEN,False,515,291,5,https://github.com/kwagyeman,imlib: Enable hardware JPEG decoder.,1,[],https://github.com/openmv/openmv/pull/1604,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/1604#issuecomment-1087179138,"Per @kdarras asking us to fix jpeg support constantly I got on this and finished the implementation of the hardware jpeg decoder using Ibrahim's code. All modes work. It can decode grayscale jpegs to binary/grayscale/rgb565. It can decode color 444/420/422 jpegs to binary/grayscale/rgb565. It uses DMA2D when it can. And it handles jpegs that aren't a multiple of 8x8, 16x8, 16x16 depending on the MCU size.
JPEG support issues should be closed now.","Maybe you should move around in another PR since you are particular about this? I

It's your PR you fix it.

the hardware jpeg decoder is literally bugged. If you give it an image that's not a multiple of 8 in width/height it doesn't do what you expect

The text literally says if the image is Not a multiple of 8 or 16 last MCUs will be padded. Also how do you explain the old decoder working on images not a multiple of 8/16 ? You can test it btw just enable it in master and then you can figure out what's wrong with yours.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1605,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580","All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1605#issuecomment-1087188612,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580","Regarding the code comment I was just pointing out that both comments wording is wrong, which can be misleading, thanks for fixing. That said, I still need to test this because I don't understand why we need to invalidate all buffers before every snapshot, the CPU does Not access the buffer at this point. You did not explain what was the issue and why this fix works, it seems like it just works. So please leave this open for a while until I can test it.
I think the invalidate should happen once in framebuffer_get_head you can test that or wait for me to get the hw and test it.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1605#issuecomment-1093023381,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580",See #1610,True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1605#issuecomment-1093075769,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580","You have 3 buffers.
Only the first gets invalidated. The other two aren't. The writing thread always writes to another buffer than the one you invalidated.l when you call snapshot to return a frame buffer.
So, when MDMA writes to them they aren't invalidated.
Note to that the call to set_windowing() resets the buffer count to 3 after you set it to 1.
I explained this in my comment with the PR.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/1605#issuecomment-1093078429,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580",You can't invalidate in get tail because it will take too long and it's too late in get head. The cpu might have flushed something via a write back then.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/1605#issuecomment-1093261138,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580","So, when MDMA writes to them they aren't invalidated.

You seem to be confusing invalidate and clean. Invalidate will drop cached lines, clean will write back dirty lines (cleaninvalidate will do both).
When MDMA writes to the vbuffer they don't need to be invalidated first, the vbuffer needs to be invalidated just before handing it back to the CPU and the CPU is not using reading/writing the vbuffer while MDMA is writing to it.
Finally, this fix works too it's been tested.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/kwagyeman,7,https://github.com/openmv/openmv/pull/1605#issuecomment-1093293778,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580","I'm not confusing the terminology. If you don't invalidate the image buffer before starting MDMA then the processor will write back lines to any region it was working on before when it needs to free up space. This is what has been causing the issue.
Maybe me using the word flush was confusing. I'm sometimes liberal with the usage of that to mean clean/invalidate.
Sounds good that this works. Seems cleaner.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/iabdalkader,8,https://github.com/openmv/openmv/pull/1605#issuecomment-1093294702,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580","The cpu might have flushed something via a write back then.

Okay that's very unlikely also I'm not sure if the memory isn't write-through, but anyway in that case we just need to invalidate in both free_buffer and in get_head. In free_buffer any cached writes will be dropped before relinquishing the buffer to MDMA and in get_head any cached reads will be dropped before handing the buffer back to the CPU. Does this fix the issue ? Am I missing anything else ?",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/kwagyeman,9,https://github.com/openmv/openmv/pull/1605#issuecomment-1093297478,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580","I think you kinda have it. The problem is just you have to invalidate the next buffer MDMA will write too.
However, remember there are N buffers. This only ensures 1 is cleared. The other two aren't.
Given MDMA automatically will switch to the next buffer... this fix isn't likely to totally fix the issue.
Like, let's say you allocate 10 buffers. MDMA is going to write to 9 of them one after another. Some cached writes may be pending them and could get flushed.
This is why I was invalidating all the buffers except the one that you freed and invalidated via another call.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/kwagyeman,10,https://github.com/openmv/openmv/pull/1605#issuecomment-1093298159,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580",If you noticed in my PR I invalidated all the buffers if the MDMA needed to be restarted. And only in this condition.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/kwagyeman,11,https://github.com/openmv/openmv/pull/1605#issuecomment-1093299465,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580","Yeah... so, my PR remains the fix for this. Maybe it could be done cleaner. But, you still essentially need to invalidate all buffers if MDMA is being restarted to ensure the CPU doesn't have any dirty lines it needs to write back.
I guess there's a performance optimization here though because the  CPU always only controls 1 buffer and it invalidates it when it gives back...
I can think about this when I get home more carefully.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/iabdalkader,12,https://github.com/openmv/openmv/pull/1605#issuecomment-1093316812,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580","let's say you allocate 10 buffers. MDMA is going to write to 9 of them one after another. Some cached writes may be pending them and could get flushed.

Initially on first run there won't be any cached writes, and on following snapshots MDMA will Not write a buffer unless it was previously free'd with free_buffer and consequently invalidated.

you still essentially need to invalidate all buffers if MDMA is being restarted to ensure the CPU doesn't have any dirty lines it needs to write back.

For this special case you could invalidate all the framebuffer memory or all the buffers yes.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1605,2022-04-02T23:51:26Z,2022-05-06T17:39:09Z,2022-05-06T17:39:09Z,MERGED,True,22,1,5,https://github.com/kwagyeman,imlib: Fix black lines on first frame.,1,[],https://github.com/openmv/openmv/pull/1605,https://github.com/kwagyeman,13,https://github.com/openmv/openmv/pull/1605#issuecomment-1101629877,"All frame buffers need to be invalidated before starting MDMA frame capture. The invalidation is done as late as possible so that it does not get repeatedly done over and over again in the sensor_set_*() calls.
I added the method to all MCUs so that if we find we need to do anything else in the future it can be put inside this same method.
Fixes  #1580",This PR is needed along with: #1610,True,{}
openmv/openmv,https://github.com/openmv/openmv,1606,2022-04-03T00:50:51Z,2022-04-03T07:10:18Z,2022-04-03T07:10:18Z,MERGED,True,4,4,2,https://github.com/kwagyeman,imlib: Fix py_lcd cache alignment and handling.,1,[],https://github.com/openmv/openmv/pull/1606,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1606,"Minor fixes for the LCD output on the OpenMV PT. These fixes don't appear to help any bugs. However, the previous code was not the best.","Minor fixes for the LCD output on the OpenMV PT. These fixes don't appear to help any bugs. However, the previous code was not the best.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1606,2022-04-03T00:50:51Z,2022-04-03T07:10:18Z,2022-04-03T07:10:18Z,MERGED,True,4,4,2,https://github.com/kwagyeman,imlib: Fix py_lcd cache alignment and handling.,1,[],https://github.com/openmv/openmv/pull/1606,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1606#issuecomment-1086789451,"Minor fixes for the LCD output on the OpenMV PT. These fixes don't appear to help any bugs. However, the previous code was not the best.",I made similar fixes to draw.c to get the hardware decoder working.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1607,2022-04-03T01:31:36Z,2022-04-19T16:03:13Z,2022-04-19T16:03:13Z,MERGED,True,48,48,1,https://github.com/kwagyeman,stm32: Fix module deinit between main.py to USBDBG.,1,[],https://github.com/openmv/openmv/pull/1607,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1607,"The change below looks complex but I just moved everything under ""else"".
When you stop main, it doesn't run all the deinit methods before USBDBG starts. This puts the camera into a weird state. We never saw any issues with this before because our main.py was simple. However, for the OpenMVPT main.py this results in the driver state being off as quite alot more stuff was going on than blinking an LED.","The change below looks complex but I just moved everything under ""else"".
When you stop main, it doesn't run all the deinit methods before USBDBG starts. This puts the camera into a weird state. We never saw any issues with this before because our main.py was simple. However, for the OpenMVPT main.py this results in the driver state being off as quite alot more stuff was going on than blinking an LED.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1607,2022-04-03T01:31:36Z,2022-04-19T16:03:13Z,2022-04-19T16:03:13Z,MERGED,True,48,48,1,https://github.com/kwagyeman,stm32: Fix module deinit between main.py to USBDBG.,1,[],https://github.com/openmv/openmv/pull/1607,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1607#issuecomment-1086797914,"The change below looks complex but I just moved everything under ""else"".
When you stop main, it doesn't run all the deinit methods before USBDBG starts. This puts the camera into a weird state. We never saw any issues with this before because our main.py was simple. However, for the OpenMVPT main.py this results in the driver state being off as quite alot more stuff was going on than blinking an LED.","When you stop main, it doesn't run all the deinit methods before USBDBG starts

Yeah it's not supposed to, this will introduce a delay (deinit, reinit, soft-reboot) for all cams when the IDE connects and stops the running script (main.py). This is not a good fix, I'd debug and find out what's causing the actual issue. Note the delay will be very noticeable.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1607,2022-04-03T01:31:36Z,2022-04-19T16:03:13Z,2022-04-19T16:03:13Z,MERGED,True,48,48,1,https://github.com/kwagyeman,stm32: Fix module deinit between main.py to USBDBG.,1,[],https://github.com/openmv/openmv/pull/1607,https://github.com/kwagyeman,3,https://github.com/openmv/openmv/pull/1607#issuecomment-1086907452,"The change below looks complex but I just moved everything under ""else"".
When you stop main, it doesn't run all the deinit methods before USBDBG starts. This puts the camera into a weird state. We never saw any issues with this before because our main.py was simple. However, for the OpenMVPT main.py this results in the driver state being off as quite alot more stuff was going on than blinking an LED.","The issue is that hardware is not deinited.
It's straight forward. Init0 calls need to be executed and such.
The above is the correct fix. It also doesn't introduce much of a delay. It's really quite fine.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1607,2022-04-03T01:31:36Z,2022-04-19T16:03:13Z,2022-04-19T16:03:13Z,MERGED,True,48,48,1,https://github.com/kwagyeman,stm32: Fix module deinit between main.py to USBDBG.,1,[],https://github.com/openmv/openmv/pull/1607,https://github.com/iabdalkader,4,https://github.com/openmv/openmv/pull/1607#issuecomment-1086911920,"The change below looks complex but I just moved everything under ""else"".
When you stop main, it doesn't run all the deinit methods before USBDBG starts. This puts the camera into a weird state. We never saw any issues with this before because our main.py was simple. However, for the OpenMVPT main.py this results in the driver state being off as quite alot more stuff was going on than blinking an LED.","The issue is that hardware is not deinited.

Something needs to be deinitialized/reinitialized properly before being used.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1607,2022-04-03T01:31:36Z,2022-04-19T16:03:13Z,2022-04-19T16:03:13Z,MERGED,True,48,48,1,https://github.com/kwagyeman,stm32: Fix module deinit between main.py to USBDBG.,1,[],https://github.com/openmv/openmv/pull/1607,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/1607#issuecomment-1086977577,"The change below looks complex but I just moved everything under ""else"".
When you stop main, it doesn't run all the deinit methods before USBDBG starts. This puts the camera into a weird state. We never saw any issues with this before because our main.py was simple. However, for the OpenMVPT main.py this results in the driver state being off as quite alot more stuff was going on than blinking an LED.","Yes, the above fix is the easiest way to do this by just causing a soft reset when main.py is stopped.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1607,2022-04-03T01:31:36Z,2022-04-19T16:03:13Z,2022-04-19T16:03:13Z,MERGED,True,48,48,1,https://github.com/kwagyeman,stm32: Fix module deinit between main.py to USBDBG.,1,[],https://github.com/openmv/openmv/pull/1607,https://github.com/iabdalkader,6,https://github.com/openmv/openmv/pull/1607#issuecomment-1087181268,"The change below looks complex but I just moved everything under ""else"".
When you stop main, it doesn't run all the deinit methods before USBDBG starts. This puts the camera into a weird state. We never saw any issues with this before because our main.py was simple. However, for the OpenMVPT main.py this results in the driver state being off as quite alot more stuff was going on than blinking an LED.","Yes, the above fix is the easiest way to do this by just causing a soft reset when main.py is stopped

I'm not slowing down every single stm32 board because it's easier to fix it this way, come on.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1608,2022-04-08T15:30:41Z,2022-04-09T09:11:38Z,2022-04-09T09:11:42Z,MERGED,True,2,2,1,https://github.com/apps/dependabot,build(deps): bump actions/download-artifact from 2 to 3,1,['dependencies'],https://github.com/openmv/openmv/pull/1608,https://github.com/apps/dependabot,1,https://github.com/openmv/openmv/pull/1608,"Bumps actions/download-artifact from 2 to 3.

Release notes
Sourced from actions/download-artifact's releases.

v3.0.0
What's Changed

Update default runtime to node16 (actions/download-artifact#134)
Update package-lock.json file version to 2 (actions/download-artifact#136)

Breaking Changes
With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.
v2.1.0 Download Artifact

Improved output & logging
Fixed issue where downloading all artifacts could cause display percentages to be over 100%
Various small bug fixes & improvements

v2.0.10

Retry on HTTP 500 responses from the service

v2.0.9

Fixes to proxy related issues

v2.0.8

Improvements to retryability if an error is encountered during artifact download

v2.0.7 download-artifact

Improved download retry-ability if a partial download is encountered

v2.0.6
Update actions/core NPM package that is used internally
v2.0.5

Add Third Party License Information

v2.0.4

Use the latest version of the @actions/artifact NPM package

v2.0.3

Misc improvements

v2.0.2

Support for tilde expansion

v2.0.1

Download path output
Improved logging




Commits

fb598a6 Merge pull request #136 from actions/jtamsut/update-lockfile-version
a4a09c5 regenerate index.js
9acf51d regenerate package lock
8821072 upgrade artifact version
b8bbd3b regenerate lockfile
6ee3d96 revert artifact version
d4793f4 update docs for v3
2d338d2 upgrade package to v3
360d083 update dependency on artifact lib
d9b73cc update lock file
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/download-artifact from 2 to 3.

Release notes
Sourced from actions/download-artifact's releases.

v3.0.0
What's Changed

Update default runtime to node16 (actions/download-artifact#134)
Update package-lock.json file version to 2 (actions/download-artifact#136)

Breaking Changes
With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.
v2.1.0 Download Artifact

Improved output & logging
Fixed issue where downloading all artifacts could cause display percentages to be over 100%
Various small bug fixes & improvements

v2.0.10

Retry on HTTP 500 responses from the service

v2.0.9

Fixes to proxy related issues

v2.0.8

Improvements to retryability if an error is encountered during artifact download

v2.0.7 download-artifact

Improved download retry-ability if a partial download is encountered

v2.0.6
Update actions/core NPM package that is used internally
v2.0.5

Add Third Party License Information

v2.0.4

Use the latest version of the @actions/artifact NPM package

v2.0.3

Misc improvements

v2.0.2

Support for tilde expansion

v2.0.1

Download path output
Improved logging




Commits

fb598a6 Merge pull request #136 from actions/jtamsut/update-lockfile-version
a4a09c5 regenerate index.js
9acf51d regenerate package lock
8821072 upgrade artifact version
b8bbd3b regenerate lockfile
6ee3d96 revert artifact version
d4793f4 update docs for v3
2d338d2 upgrade package to v3
360d083 update dependency on artifact lib
d9b73cc update lock file
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1609,2022-04-08T15:30:43Z,2022-04-09T09:11:54Z,2022-04-09T09:11:57Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/upload-artifact from 2 to 3,1,['dependencies'],https://github.com/openmv/openmv/pull/1609,https://github.com/apps/dependabot,1,https://github.com/openmv/openmv/pull/1609,"Bumps actions/upload-artifact from 2 to 3.

Release notes
Sourced from actions/upload-artifact's releases.

v3.0.0
What's Changed

Update default runtime to node16 (#293)
Update package-lock.json file version to 2 (#302)

Breaking Changes
With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.
v2.3.1
Fix for empty fails on Windows failing on upload #281
v2.3.0 Upload Artifact

Optimizations for faster uploads of larger files that are already compressed
Significantly improved logging when there are chunked uploads
Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files
Various other small bugfixes & optimizations

v2.2.4

Retry on HTTP 500 responses from the service

v2.2.3

Fixes for proxy related issues

v2.2.2

Improved retryability and error handling

v2.2.1

Update used actions/core package to the latest version

v2.2.0

Support for artifact retention

v2.1.4

Add Third Party License Information

v2.1.3

Use updated version of the @action/artifact NPM package

v2.1.2

Increase upload chunk size from 4MB to 8MB
Detect case insensitive file uploads

v2.1.1

Fix for certain symlinks not correctly being identified as directories before starting uploads

v2.1.0

Support for uploading artifacts with multiple paths
Support for using exclude paths
Updates to dependencies



... (truncated)


Commits

6673cd0 Update lockfileVersion in package-lock.json (#302)
2244c82 Update to node16 (#293)
87348ce Add 503 warning when uploading to the same artifact
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/upload-artifact from 2 to 3.

Release notes
Sourced from actions/upload-artifact's releases.

v3.0.0
What's Changed

Update default runtime to node16 (#293)
Update package-lock.json file version to 2 (#302)

Breaking Changes
With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.
v2.3.1
Fix for empty fails on Windows failing on upload #281
v2.3.0 Upload Artifact

Optimizations for faster uploads of larger files that are already compressed
Significantly improved logging when there are chunked uploads
Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files
Various other small bugfixes & optimizations

v2.2.4

Retry on HTTP 500 responses from the service

v2.2.3

Fixes for proxy related issues

v2.2.2

Improved retryability and error handling

v2.2.1

Update used actions/core package to the latest version

v2.2.0

Support for artifact retention

v2.1.4

Add Third Party License Information

v2.1.3

Use updated version of the @action/artifact NPM package

v2.1.2

Increase upload chunk size from 4MB to 8MB
Detect case insensitive file uploads

v2.1.1

Fix for certain symlinks not correctly being identified as directories before starting uploads

v2.1.0

Support for uploading artifacts with multiple paths
Support for using exclude paths
Updates to dependencies



... (truncated)


Commits

6673cd0 Update lockfileVersion in package-lock.json (#302)
2244c82 Update to node16 (#293)
87348ce Add 503 warning when uploading to the same artifact
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1610,2022-04-08T15:45:15Z,,2022-04-18T18:21:26Z,OPEN,False,10,2,1,https://github.com/iabdalkader,imlib: Invalidate vbuffers before returning them.,1,[],https://github.com/openmv/openmv/pull/1610,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1610,Fixes #1580,Fixes #1580,True,{}
openmv/openmv,https://github.com/openmv/openmv,1610,2022-04-08T15:45:15Z,,2022-04-18T18:21:26Z,OPEN,False,10,2,1,https://github.com/iabdalkader,imlib: Invalidate vbuffers before returning them.,1,[],https://github.com/openmv/openmv/pull/1610,https://github.com/iabdalkader,2,https://github.com/openmv/openmv/pull/1610#issuecomment-1093025902,Fixes #1580,"Note we should probably add a flag to indicate that the vbuffer is invalidated already, if framebuffer_get_head is used FB_PEEK to avoid invalidating the buffer multiple times, that said currently nothing uses FB_PEEK with framebuffer_get_head.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1610,2022-04-08T15:45:15Z,,2022-04-18T18:21:26Z,OPEN,False,10,2,1,https://github.com/iabdalkader,imlib: Invalidate vbuffers before returning them.,1,[],https://github.com/openmv/openmv/pull/1610,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1610#issuecomment-1093297491,Fixes #1580,@kwagyeman updated.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1610,2022-04-08T15:45:15Z,,2022-04-18T18:21:26Z,OPEN,False,10,2,1,https://github.com/iabdalkader,imlib: Invalidate vbuffers before returning them.,1,[],https://github.com/openmv/openmv/pull/1610,https://github.com/kwagyeman,4,https://github.com/openmv/openmv/pull/1610#issuecomment-1100915666,Fixes #1580,"This doesn't fix the issue. framebuffer_get_head() returns a buffer after it's been written to by MDMA. So, any writes from the CPU could have been written back by the cache when it makes space for more things while MDMA is updating the buffer.
You have to invalidate before MDMA starts writing to the buffer.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1610,2022-04-08T15:45:15Z,,2022-04-18T18:21:26Z,OPEN,False,10,2,1,https://github.com/iabdalkader,imlib: Invalidate vbuffers before returning them.,1,[],https://github.com/openmv/openmv/pull/1610,https://github.com/kwagyeman,5,https://github.com/openmv/openmv/pull/1610#issuecomment-1101629370,Fixes #1580,Do invalidates here: https://github.com/openmv/openmv/blob/master/src/omv/ports/stm32/sensor.c#L950,True,{}
openmv/openmv,https://github.com/openmv/openmv,1611,2022-04-09T09:03:21Z,2022-04-09T10:09:17Z,2022-04-09T10:09:17Z,CLOSED,False,6,2,1,https://github.com/bitbank2,imlib: Fix SIMD YCbCr to RGB conversion.,1,[],https://github.com/openmv/openmv/pull/1611,https://github.com/bitbank2,1,https://github.com/openmv/openmv/pull/1611,"Masking top half of negative constant for SIMD 16/16 multiply fixes incorrect color values.
Fixes #1597","Masking top half of negative constant for SIMD 16/16 multiply fixes incorrect color values.
Fixes #1597",True,{}
openmv/openmv,https://github.com/openmv/openmv,1612,2022-04-09T10:08:55Z,2022-04-09T10:20:39Z,2022-04-09T10:20:41Z,MERGED,True,6,2,1,https://github.com/iabdalkader,imlib: Fix SIMD YCbCr to RGB conversion.,1,[],https://github.com/openmv/openmv/pull/1612,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1612,Fixes #1597,Fixes #1597,True,{}
openmv/openmv,https://github.com/openmv/openmv,1613,2022-04-10T18:34:46Z,2022-04-10T18:38:11Z,2022-04-10T18:38:15Z,MERGED,True,26116,0,15,https://github.com/iabdalkader,drivers/vl53l5cx: Add VL53L5CX ST driver.,1,[],https://github.com/openmv/openmv/pull/1613,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1613,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1614,2022-04-10T18:41:20Z,2022-04-10T18:47:02Z,2022-04-10T18:47:04Z,MERGED,True,703,0,1,https://github.com/iabdalkader,sensors/vl53l5cx: Add vl53l5cx Python module.,1,[],https://github.com/openmv/openmv/pull/1614,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1614,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1615,2022-04-10T18:47:08Z,2022-04-10T18:47:25Z,2022-04-10T18:47:28Z,MERGED,True,72,0,2,https://github.com/iabdalkader,examples: Add ToF examples.,1,[],https://github.com/openmv/openmv/pull/1615,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1615,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1617,2022-04-11T15:58:19Z,2022-04-11T18:38:47Z,2022-04-11T18:38:51Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/cache from 3.0.1 to 3.0.2,1,['dependencies'],https://github.com/openmv/openmv/pull/1617,https://github.com/apps/dependabot,1,https://github.com/openmv/openmv/pull/1617,"Bumps actions/cache from 3.0.1 to 3.0.2.

Release notes
Sourced from actions/cache's releases.

v3.0.2
This release adds the support for dynamic cache size cap on GHES.



Changelog
Sourced from actions/cache's changelog.

Releases
3.0.0

Updated minimum runner version support from node 12 -> node 16




Commits

48af2dc Update actions/cache version (#786)
f63a711 Merge pull request #781 from actions/t-dedah/cacheSize
770a27c Update licenses
c2131ab New build
5751604 Updated @​actions/cache to 2.0.1
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/cache from 3.0.1 to 3.0.2.

Release notes
Sourced from actions/cache's releases.

v3.0.2
This release adds the support for dynamic cache size cap on GHES.



Changelog
Sourced from actions/cache's changelog.

Releases
3.0.0

Updated minimum runner version support from node 12 -> node 16




Commits

48af2dc Update actions/cache version (#786)
f63a711 Merge pull request #781 from actions/t-dedah/cacheSize
770a27c Update licenses
c2131ab New build
5751604 Updated @​actions/cache to 2.0.1
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1619,2022-04-15T15:33:39Z,2022-04-17T20:27:44Z,2022-04-17T20:27:49Z,MERGED,True,2,2,1,https://github.com/apps/dependabot,build(deps): bump mikepenz/release-changelog-builder-action from 2 to 3,1,['dependencies'],https://github.com/openmv/openmv/pull/1619,https://github.com/apps/dependabot,1,https://github.com/openmv/openmv/pull/1619,"Bumps mikepenz/release-changelog-builder-action from 2 to 3.

Release notes
Sourced from mikepenz/release-changelog-builder-action's releases.

v3

no changes

v3.0.0-rc01
🚀 Features

Expand debug logs by PRs in specific categories

PR: #706


Upgrade action to use node16 | Dependency upgrades

PR: #708


Introduce new API to include open PRs within the generated changelog

PR: #726


Introduce new API offering the ability to fetch reviewers who approved PRs

PR: #728
Thanks for highlighting this @​thedmeyer



📦 Dependencies

build(deps): bump minimist from 1.2.5 to 1.2.6

PR: #718


build(deps-dev): bump eslint-plugin-jest from 26.1.1 to 26.1.3

PR: #716


build(deps-dev): bump eslint-plugin-github from 4.3.5 to 4.3.6

PR: #712


Upgrade npm dependencies 2022.04.08

PR: #727


Dependency upgrades

PR: #734



v2.9.0
🚀 Features

Expand new configuration option exclude_labels to Category

PR: #685
Thanks for the feature request @​mcbridesedai



📦 Dependencies

Dependency updates 2022.02.11

PR: #684



v2.8.2
🚀 Features

Introduce new RELEASE_DIFF placeholder

PR: #669
Thanks @​maxisam for the suggestion





... (truncated)


Commits

d1b2107 Merge pull request #735 from mikepenz/develop
a375494 Merge pull request #734 from mikepenz/feature/dependency_upgrades_20220415
3554469 - dependency upgrades
a86b1b7 - format the main.ts class
fe2fbf9 Merge pull request #728 from mikepenz/feature/720
4d2ba0e Merge pull request #726 from mikepenz/feature/725
d0b0f4a - expand README with new configuration options
1e867df - introduce new flag allowing to fetch reviewers who approved PRs
df9a355 - include open is disabled by default
485266b - expand README with new additional placeholders
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps mikepenz/release-changelog-builder-action from 2 to 3.

Release notes
Sourced from mikepenz/release-changelog-builder-action's releases.

v3

no changes

v3.0.0-rc01
🚀 Features

Expand debug logs by PRs in specific categories

PR: #706


Upgrade action to use node16 | Dependency upgrades

PR: #708


Introduce new API to include open PRs within the generated changelog

PR: #726


Introduce new API offering the ability to fetch reviewers who approved PRs

PR: #728
Thanks for highlighting this @​thedmeyer



📦 Dependencies

build(deps): bump minimist from 1.2.5 to 1.2.6

PR: #718


build(deps-dev): bump eslint-plugin-jest from 26.1.1 to 26.1.3

PR: #716


build(deps-dev): bump eslint-plugin-github from 4.3.5 to 4.3.6

PR: #712


Upgrade npm dependencies 2022.04.08

PR: #727


Dependency upgrades

PR: #734



v2.9.0
🚀 Features

Expand new configuration option exclude_labels to Category

PR: #685
Thanks for the feature request @​mcbridesedai



📦 Dependencies

Dependency updates 2022.02.11

PR: #684



v2.8.2
🚀 Features

Introduce new RELEASE_DIFF placeholder

PR: #669
Thanks @​maxisam for the suggestion





... (truncated)


Commits

d1b2107 Merge pull request #735 from mikepenz/develop
a375494 Merge pull request #734 from mikepenz/feature/dependency_upgrades_20220415
3554469 - dependency upgrades
a86b1b7 - format the main.ts class
fe2fbf9 Merge pull request #728 from mikepenz/feature/720
4d2ba0e Merge pull request #726 from mikepenz/feature/725
d0b0f4a - expand README with new configuration options
1e867df - introduce new flag allowing to fetch reviewers who approved PRs
df9a355 - include open is disabled by default
485266b - expand README with new additional placeholders
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1620,2022-04-18T21:24:59Z,2022-04-18T21:28:02Z,2022-04-18T21:28:05Z,MERGED,True,0,4,1,https://github.com/iabdalkader,ports/nrf: Fix mp_init sys_path.,1,[],https://github.com/openmv/openmv/pull/1620,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1620,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1622,2022-04-19T14:14:59Z,2022-04-19T14:19:10Z,2022-04-19T14:22:56Z,MERGED,True,1,1,1,https://github.com/iabdalkader,boards/NICLAV: Fix power supply mode.,1,[],https://github.com/openmv/openmv/pull/1622,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1622,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1623,2022-04-19T19:13:57Z,2022-04-19T19:17:45Z,2022-04-19T19:17:47Z,MERGED,True,1,1,1,https://github.com/iabdalkader,boards/NICLAV: Fix HSE_VALUE.,1,[],https://github.com/openmv/openmv/pull/1623,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1623,This board initially used HSI (64MHz) and now it uses HSE (25MHz).,This board initially used HSI (64MHz) and now it uses HSE (25MHz).,True,{}
openmv/openmv,https://github.com/openmv/openmv,1628,2022-05-02T18:49:14Z,2022-05-02T19:00:15Z,2022-05-02T19:00:19Z,MERGED,True,7,7,1,https://github.com/iabdalkader,boards/OPENMV4: Increase frame line buffer size.,1,[],https://github.com/openmv/openmv/pull/1628,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1628,This allows R2 to support a windowed frame at full resolution.,This allows R2 to support a windowed frame at full resolution.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1629,2022-05-05T19:29:02Z,2022-05-05T19:44:27Z,2022-05-05T19:44:30Z,MERGED,True,1,1,1,https://github.com/iabdalkader,boards/PORTENTA: Fix VSYNC EXTI number.,1,[],https://github.com/openmv/openmv/pull/1629,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1629,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1630,2022-05-05T19:41:15Z,2022-05-05T19:44:37Z,2022-05-05T19:44:41Z,MERGED,True,6,4,2,https://github.com/iabdalkader,ports/stm32: Fix VSYNC EXTI handling.,1,[],https://github.com/openmv/openmv/pull/1630,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1630,"Check if EXTI line is VSYNC line before clearing the
EXTI flag, to allow extint.c to handler other IRQS.","Check if EXTI line is VSYNC line before clearing the
EXTI flag, to allow extint.c to handler other IRQS.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1633,2022-05-11T14:59:57Z,2022-05-11T15:03:43Z,2022-05-11T15:03:43Z,MERGED,True,2,0,1,https://github.com/iabdalkader,github: Fix firmware workflow permissions.,1,[],https://github.com/openmv/openmv/pull/1633,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1633,Fixes #1632,Fixes #1632,True,{}
openmv/openmv,https://github.com/openmv/openmv,1638,2022-05-15T16:35:33Z,2022-05-15T16:45:24Z,2022-05-16T05:52:11Z,MERGED,True,8,1,2,https://github.com/iabdalkader,ports/stm32: Reset CDC buffers after disabling IRQs.,1,[],https://github.com/openmv/openmv/pull/1638,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1638,"Fixes #1637 for good.
Reset USB CDC buffers after disabling IRQs, when stopping scripts, to avoid overflows or blocking when printing IDE exception traceback, without losing the exception message.

@kwagyeman Please undo any IDE changes (unnecessary delays) related to that issue.
Also note, it's very likely that this function is useless, because USB IRQs are disabled when this is called:
void usbdbg_wait_for_command(uint32_t timeout)
{
    for (mp_uint_t ticks = mp_hal_ticks_ms(); ((mp_hal_ticks_ms() - ticks) < timeout) && (cmd != USBDBG_NONE); );
}","Fixes #1637 for good.
Reset USB CDC buffers after disabling IRQs, when stopping scripts, to avoid overflows or blocking when printing IDE exception traceback, without losing the exception message.

@kwagyeman Please undo any IDE changes (unnecessary delays) related to that issue.
Also note, it's very likely that this function is useless, because USB IRQs are disabled when this is called:
void usbdbg_wait_for_command(uint32_t timeout)
{
    for (mp_uint_t ticks = mp_hal_ticks_ms(); ((mp_hal_ticks_ms() - ticks) < timeout) && (cmd != USBDBG_NONE); );
}",True,{}
openmv/openmv,https://github.com/openmv/openmv,1638,2022-05-15T16:35:33Z,2022-05-15T16:45:24Z,2022-05-16T05:52:11Z,MERGED,True,8,1,2,https://github.com/iabdalkader,ports/stm32: Reset CDC buffers after disabling IRQs.,1,[],https://github.com/openmv/openmv/pull/1638,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1638#issuecomment-1127148640,"Fixes #1637 for good.
Reset USB CDC buffers after disabling IRQs, when stopping scripts, to avoid overflows or blocking when printing IDE exception traceback, without losing the exception message.

@kwagyeman Please undo any IDE changes (unnecessary delays) related to that issue.
Also note, it's very likely that this function is useless, because USB IRQs are disabled when this is called:
void usbdbg_wait_for_command(uint32_t timeout)
{
    for (mp_uint_t ticks = mp_hal_ticks_ms(); ((mp_hal_ticks_ms() - ticks) < timeout) && (cmd != USBDBG_NONE); );
}","Where is that?
Anyway, I made the delays lower already. The IDE is very strict about feeding commands around stop and start as you previously wanted.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1638,2022-05-15T16:35:33Z,2022-05-15T16:45:24Z,2022-05-16T05:52:11Z,MERGED,True,8,1,2,https://github.com/iabdalkader,ports/stm32: Reset CDC buffers after disabling IRQs.,1,[],https://github.com/openmv/openmv/pull/1638,https://github.com/iabdalkader,3,https://github.com/openmv/openmv/pull/1638#issuecomment-1127247325,"Fixes #1637 for good.
Reset USB CDC buffers after disabling IRQs, when stopping scripts, to avoid overflows or blocking when printing IDE exception traceback, without losing the exception message.

@kwagyeman Please undo any IDE changes (unnecessary delays) related to that issue.
Also note, it's very likely that this function is useless, because USB IRQs are disabled when this is called:
void usbdbg_wait_for_command(uint32_t timeout)
{
    for (mp_uint_t ticks = mp_hal_ticks_ms(); ((mp_hal_ticks_ms() - ticks) < timeout) && (cmd != USBDBG_NONE); );
}","Where is that?

d1b6202",True,{}
openmv/openmv,https://github.com/openmv/openmv,1639,2022-05-15T16:40:53Z,2022-05-15T16:45:48Z,2022-05-15T16:45:50Z,MERGED,True,7,6,1,https://github.com/iabdalkader,ports/stm32: Call mp_deinit() before soft reboot.,1,[],https://github.com/openmv/openmv/pull/1639,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1639,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1640,2022-05-15T16:50:50Z,2022-05-15T17:06:04Z,2022-05-15T17:06:08Z,MERGED,True,1,1,1,https://github.com/iabdalkader,ports/stm32: Enable STDIO buffer.,1,[],https://github.com/openmv/openmv/pull/1640,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1640,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1641,2022-05-15T17:08:01Z,2022-05-15T17:11:07Z,2022-05-15T17:11:21Z,MERGED,True,39,1,2,https://github.com/iabdalkader,ports/all: Add placeholders for new USBDBG commands.,1,[],https://github.com/openmv/openmv/pull/1641,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1641,"Fixes  #1634.
Fixes  #1635.","Fixes  #1634.
Fixes  #1635.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1643,2022-05-20T13:32:28Z,2022-05-20T13:46:10Z,2022-05-20T13:46:12Z,MERGED,True,5,2,4,https://github.com/iabdalkader,boards/NICLAV: Enable Bluetooth.,1,[],https://github.com/openmv/openmv/pull/1643,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1643,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1644,2022-05-24T10:56:09Z,2022-06-02T19:34:21Z,2022-06-02T19:34:26Z,MERGED,True,981,4,8,https://github.com/iabdalkader,sensors: Add support for HIMAX HM0360.,1,[],https://github.com/openmv/openmv/pull/1644,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1644,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1645,2022-05-25T09:40:53Z,2022-05-25T09:51:01Z,2022-05-25T09:51:06Z,MERGED,True,1,1,1,https://github.com/iabdalkader,usbdbg: Check USB IRQs when blocking on commands.,1,[],https://github.com/openmv/openmv/pull/1645,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1645,If USB IRQs are disabled the command will never finish.,If USB IRQs are disabled the command will never finish.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1647,2022-05-26T06:41:35Z,2022-05-26T06:50:16Z,2022-05-26T06:50:19Z,MERGED,True,46,0,1,https://github.com/iabdalkader,hal/H7: Add SPI45 to HAL_RCCEx_GetPeriphCLKFreq.,1,[],https://github.com/openmv/openmv/pull/1647,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1647,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1648,2022-05-26T07:37:03Z,2022-05-26T07:56:39Z,2022-05-26T07:56:42Z,MERGED,True,1,1,1,https://github.com/iabdalkader,boards/NICLAV: Enable SPI5.,1,[],https://github.com/openmv/openmv/pull/1648,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1648,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1649,2022-05-26T08:16:01Z,2022-05-26T08:25:51Z,2022-05-26T08:25:53Z,MERGED,True,49,10,1,https://github.com/iabdalkader,scripts/lsm6dsox: Add support for SPI mode.,1,[],https://github.com/openmv/openmv/pull/1649,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1649,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1650,2022-05-26T08:16:04Z,2022-05-26T08:26:04Z,2022-05-26T08:26:04Z,MERGED,True,1,0,1,https://github.com/iabdalkader,boards/NICLAV: Add lsm6dsox driver to manifest.,1,[],https://github.com/openmv/openmv/pull/1650,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1650,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1651,2022-05-26T08:57:15Z,2022-05-26T10:38:51Z,2022-05-26T10:39:38Z,MERGED,True,14,14,1,https://github.com/iabdalkader,scripts/lsm6dsox: Update driver.,1,[],https://github.com/openmv/openmv/pull/1651,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1651,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1652,2022-05-30T01:31:01Z,2022-05-30T19:12:58Z,2022-05-30T19:12:58Z,MERGED,True,96,34,4,https://github.com/kwagyeman,sensors/MT9V0xx: Add support for color MT9V0xx sensors.,1,[],https://github.com/openmv/openmv/pull/1652,https://github.com/kwagyeman,1,https://github.com/openmv/openmv/pull/1652,"MT9V0XX sensors with a bayer pattern now work. RCCC sensors are not supported (we can easily support them however by adding the necessary debayring code and etc. RCCC sensors are really only used for automotive applications though).
Note that there's no scaling support with bayer pattern sensors.","MT9V0XX sensors with a bayer pattern now work. RCCC sensors are not supported (we can easily support them however by adding the necessary debayring code and etc. RCCC sensors are really only used for automotive applications though).
Note that there's no scaling support with bayer pattern sensors.",True,{}
openmv/openmv,https://github.com/openmv/openmv,1652,2022-05-30T01:31:01Z,2022-05-30T19:12:58Z,2022-05-30T19:12:58Z,MERGED,True,96,34,4,https://github.com/kwagyeman,sensors/MT9V0xx: Add support for color MT9V0xx sensors.,1,[],https://github.com/openmv/openmv/pull/1652,https://github.com/kwagyeman,2,https://github.com/openmv/openmv/pull/1652#issuecomment-1140587545,"MT9V0XX sensors with a bayer pattern now work. RCCC sensors are not supported (we can easily support them however by adding the necessary debayring code and etc. RCCC sensors are really only used for automotive applications though).
Note that there's no scaling support with bayer pattern sensors.",@iabdalkader - This PR unblocks us selling MT9V034 sensors with the bayer pattern on them.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1654,2022-05-31T15:28:04Z,2022-06-02T19:35:56Z,2022-06-02T19:35:59Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/cache from 3.0.2 to 3.0.3,1,['dependencies'],https://github.com/openmv/openmv/pull/1654,https://github.com/apps/dependabot,1,https://github.com/openmv/openmv/pull/1654,"Bumps actions/cache from 3.0.2 to 3.0.3.

Release notes
Sourced from actions/cache's releases.

v3.0.3
Fixed avoiding empty cache save when no files are available for caching. (actions/cache#624)



Changelog
Sourced from actions/cache's changelog.

3.0.2

Added support for dynamic cache size cap on GHES.

3.0.3

Fixed avoiding empty cache save when no files are available for caching. (issue)




Commits

30f413b Merge pull request #808 from actions/users/kotewar/update-actions-cache-version
f2ea0f2 Updated Readme with what's new and removed v2 info
d5956bb Updated release and package versions
a686c72 Revert ""Updated package version to 3.0.3 and dependencies""
8e680ea Revert ""Added release information for 3.0.2 in RELEASES.md""
c376fc8 Added release information for 3.0.2 in RELEASES.md
4ce1a96 Updated package version to 3.0.3 and dependencies
a2bd439 Updated license version and dist
35ef551 Upgraded @​actions/cache to 2.0.5
14c4fd4 Merge pull request #690 from pimterry/patch-1
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/cache from 3.0.2 to 3.0.3.

Release notes
Sourced from actions/cache's releases.

v3.0.3
Fixed avoiding empty cache save when no files are available for caching. (actions/cache#624)



Changelog
Sourced from actions/cache's changelog.

3.0.2

Added support for dynamic cache size cap on GHES.

3.0.3

Fixed avoiding empty cache save when no files are available for caching. (issue)




Commits

30f413b Merge pull request #808 from actions/users/kotewar/update-actions-cache-version
f2ea0f2 Updated Readme with what's new and removed v2 info
d5956bb Updated release and package versions
a686c72 Revert ""Updated package version to 3.0.3 and dependencies""
8e680ea Revert ""Added release information for 3.0.2 in RELEASES.md""
c376fc8 Added release information for 3.0.2 in RELEASES.md
4ce1a96 Updated package version to 3.0.3 and dependencies
a2bd439 Updated license version and dist
35ef551 Upgraded @​actions/cache to 2.0.5
14c4fd4 Merge pull request #690 from pimterry/patch-1
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
openmv/openmv,https://github.com/openmv/openmv,1656,2022-06-02T10:14:36Z,2022-06-02T10:39:18Z,2022-06-02T10:39:21Z,MERGED,True,4,1,1,https://github.com/iabdalkader,ports/stm32: Fix unhandled exception in main.c.,1,[],https://github.com/openmv/openmv/pull/1656,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1656,usbdbg_wait_for_command could raise exception when scripts end uninterrupted.,usbdbg_wait_for_command could raise exception when scripts end uninterrupted.,True,{}
openmv/openmv,https://github.com/openmv/openmv,1657,2022-06-02T10:44:49Z,2022-06-02T10:52:15Z,2022-06-02T10:52:18Z,MERGED,True,35,19,8,https://github.com/iabdalkader,boards/ALL: Rename VSYNC EXTI config.,1,[],https://github.com/openmv/openmv/pull/1657,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1657,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1658,2022-06-02T10:58:59Z,2022-06-02T11:02:59Z,2022-06-02T11:03:15Z,MERGED,True,18,5,2,https://github.com/iabdalkader,ports/stm32: Check EXTI GPIO source before clearing VSYNC IRQ.,1,[],https://github.com/openmv/openmv/pull/1658,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1658,,,True,{}
openmv/openmv,https://github.com/openmv/openmv,1659,2022-06-02T19:47:04Z,2022-06-02T19:47:10Z,2022-06-02T19:47:14Z,MERGED,True,1,1,1,https://github.com/iabdalkader,scripts/examples: Fix VSYNC GPIO LED pin name.,1,[],https://github.com/openmv/openmv/pull/1659,https://github.com/iabdalkader,1,https://github.com/openmv/openmv/pull/1659,,,True,{}
