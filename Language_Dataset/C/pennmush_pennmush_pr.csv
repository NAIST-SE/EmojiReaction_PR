pennmush/pennmush,https://github.com/pennmush/pennmush,1064,2016-01-06T14:42:17Z,2016-01-06T17:47:16Z,2016-01-06T17:47:16Z,MERGED,True,5,4,3,https://github.com/mike347,Add email to PLAYER`CREATE event,5,[],https://github.com/pennmush/pennmush/pull/1064,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1064,"If using register at the login screen, pass the email to the event.","If using register at the login screen, pass the email to the event.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1064,2016-01-06T14:42:17Z,2016-01-06T17:47:16Z,2016-01-06T17:47:16Z,MERGED,True,5,4,3,https://github.com/mike347,Add email to PLAYER`CREATE event,5,[],https://github.com/pennmush/pennmush/pull/1064,https://github.com/tkrajcar,2,https://github.com/pennmush/pennmush/pull/1064#issuecomment-169398241,"If using register at the login screen, pass the email to the event.",LGTM other than the minor formatting issue! Nice addition.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1073,2016-04-01T02:10:46Z,2016-04-01T02:14:24Z,2016-04-01T18:07:15Z,MERGED,True,2,1,2,https://github.com/captdeaf,"Fix do_second, crashing in socket`connect event",1,[],https://github.com/pennmush/pennmush/pull/1073,https://github.com/captdeaf,1,https://github.com/pennmush/pennmush/pull/1073,Enactor on a socket`connect event is -1. This confuses cque.c. So this PR fixes it.,Enactor on a socket`connect event is -1. This confuses cque.c. So this PR fixes it.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1073,2016-04-01T02:10:46Z,2016-04-01T02:14:24Z,2016-04-01T18:07:15Z,MERGED,True,2,1,2,https://github.com/captdeaf,"Fix do_second, crashing in socket`connect event",1,[],https://github.com/pennmush/pennmush/pull/1073,https://github.com/tkrajcar,2,https://github.com/pennmush/pennmush/pull/1073#issuecomment-204497960,Enactor on a socket`connect event is -1. This confuses cque.c. So this PR fixes it.,:baps for using 'Fix' as your commit message ðŸ˜›,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1074,2016-04-04T20:54:39Z,2016-04-04T21:33:46Z,2016-04-04T21:33:46Z,MERGED,True,5,0,1,https://github.com/tkrajcar,CI: Install IO::Socket::IP prior to running tests.,1,[],https://github.com/pennmush/pennmush/pull/1074,https://github.com/tkrajcar,1,https://github.com/pennmush/pennmush/pull/1074,"7359b25 introduced a dependency in the tests on the Perl IO::Socket::IP module, so that needs to be explicitly installed prior to running tests.","7359b25 introduced a dependency in the tests on the Perl IO::Socket::IP module, so that needs to be explicitly installed prior to running tests.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1075,2016-04-04T22:05:43Z,2016-04-04T22:05:52Z,2016-04-04T22:05:54Z,MERGED,True,4,3,2,https://github.com/tkrajcar,CI: More perl dependency fixage,2,[],https://github.com/pennmush/pennmush/pull/1075,https://github.com/tkrajcar,1,https://github.com/pennmush/pennmush/pull/1075,Includes a small tweak to the test suite to not break on Perls older than 5.18.,Includes a small tweak to the test suite to not break on Perls older than 5.18.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1078,2016-05-01T18:38:44Z,2016-05-01T18:39:30Z,2016-05-01T18:39:30Z,CLOSED,False,1,1,1,https://github.com/gilmarion,@mail attribute update,1,[],https://github.com/pennmush/pennmush/pull/1078,https://github.com/gilmarion,1,https://github.com/pennmush/pennmush/pull/1078,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1082,2016-06-30T06:34:07Z,2016-07-06T21:20:52Z,2016-07-06T21:20:52Z,MERGED,True,1,0,1,https://github.com/ray73864,"Add missing ""open_ok"" flag to flag list.",1,[],https://github.com/pennmush/pennmush/pull/1082,https://github.com/ray73864,1,https://github.com/pennmush/pennmush/pull/1082,Doing Mike's job for him since he is too lazy to do it :P,Doing Mike's job for him since he is too lazy to do it :P,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1082,2016-06-30T06:34:07Z,2016-07-06T21:20:52Z,2016-07-06T21:20:52Z,MERGED,True,1,0,1,https://github.com/ray73864,"Add missing ""open_ok"" flag to flag list.",1,[],https://github.com/pennmush/pennmush/pull/1082,https://github.com/tkrajcar,2,https://github.com/pennmush/pennmush/pull/1082#issuecomment-230910585,Doing Mike's job for him since he is too lazy to do it :P,"The bizarre mishmash of capitalization in this table bugs me, but not enough to block this PR. ;p",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1087,2016-07-28T05:01:18Z,2016-08-19T03:42:59Z,2018-05-02T23:21:43Z,MERGED,True,334,17,7,https://github.com/talvo,"Add MUX comsys aliases. You can all stop asking for it, now.",2,[],https://github.com/pennmush/pennmush/pull/1087,https://github.com/talvo,1,https://github.com/pennmush/pennmush/pull/1087,"Adds aliases for the MUX channel system, including the commands:
addcom
delcom
comlist
comtitle
@clist

See help muxcomsys for details.","Adds aliases for the MUX channel system, including the commands:
addcom
delcom
comlist
comtitle
@clist

See help muxcomsys for details.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1091,2016-09-16T10:05:14Z,2016-09-17T06:51:00Z,2016-09-17T08:46:41Z,CLOSED,False,35,0,1,https://github.com/talvo,Add softcode file with compatability code for some Rhost functions.,1,[],https://github.com/pennmush/pennmush/pull/1091,https://github.com/talvo,1,https://github.com/pennmush/pennmush/pull/1091,"Add a new pennmush/softcode directory containing, initially, a file with some compatability @functions for Rhost (stuff that would be good to have, but that is too easily softcoded to be worth hardcoding), from the list on #1023. Though I haven't included mask() yet because it's very late and math makes my brain hurt.","Add a new pennmush/softcode directory containing, initially, a file with some compatability @functions for Rhost (stuff that would be good to have, but that is too easily softcoded to be worth hardcoding), from the list on #1023. Though I haven't included mask() yet because it's very late and math makes my brain hurt.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1091,2016-09-16T10:05:14Z,2016-09-17T06:51:00Z,2016-09-17T08:46:41Z,CLOSED,False,35,0,1,https://github.com/talvo,Add softcode file with compatability code for some Rhost functions.,1,[],https://github.com/pennmush/pennmush/pull/1091,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1091#issuecomment-247565875,"Add a new pennmush/softcode directory containing, initially, a file with some compatability @functions for Rhost (stuff that would be good to have, but that is too easily softcoded to be worth hardcoding), from the list on #1023. Though I haven't included mask() yet because it's very late and math makes my brain hurt.","(We could, potentially, include other code or even various pre-loaded dbs in here in the future, should we wish, though maintainence is always an issue there. But basic compatability stuff for common Rhost and MUX functions which aren't worth hardcoding are worth including softcoded, IMHO.)",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1091,2016-09-16T10:05:14Z,2016-09-17T06:51:00Z,2016-09-17T08:46:41Z,CLOSED,False,35,0,1,https://github.com/talvo,Add softcode file with compatability code for some Rhost functions.,1,[],https://github.com/pennmush/pennmush/pull/1091,https://github.com/tkrajcar,3,https://github.com/pennmush/pennmush/pull/1091#issuecomment-247646100,"Add a new pennmush/softcode directory containing, initially, a file with some compatability @functions for Rhost (stuff that would be good to have, but that is too easily softcoded to be worth hardcoding), from the list on #1023. Though I haven't included mask() yet because it's very late and math makes my brain hurt.","I'm a definite ðŸ‘Ž  on including anything other than compatibility functions in the main distro, for a number of reasons, and actually would probably prefer that these not be here either, but I don't feel strongly enough about these particularly to block it :)",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1091,2016-09-16T10:05:14Z,2016-09-17T06:51:00Z,2016-09-17T08:46:41Z,CLOSED,False,35,0,1,https://github.com/talvo,Add softcode file with compatability code for some Rhost functions.,1,[],https://github.com/pennmush/pennmush/pull/1091,https://github.com/talvo,4,https://github.com/pennmush/pennmush/pull/1091#issuecomment-247753668,"Add a new pennmush/softcode directory containing, initially, a file with some compatability @functions for Rhost (stuff that would be good to have, but that is too easily softcoded to be worth hardcoding), from the list on #1023. Though I haven't included mask() yet because it's very late and math makes my brain hurt.","Let's put 'em somewhere else, then.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1094,2016-10-06T02:03:04Z,2018-10-31T03:34:53Z,2018-10-31T03:34:53Z,CLOSED,False,729,47,5,https://github.com/talvo,Add handling of GET requests for MUSH info via JSON. Issue #1093.,1,[],https://github.com/pennmush/pennmush/pull/1094,https://github.com/talvo,1,https://github.com/pennmush/pennmush/pull/1094,"Allows browsers to send GET requests for /REST/something.json to poll the MUSH for information. The request is sent to an object defined in mush.cnf, which returns a response in JSON format. If the object isn't defined or returns nothing, it checks for a hardcoded handler; currently only one exists, for /REST/who.json, which returns an array of online players.
Also makes a few small improvements to the JSON code, and tweaks the existing responses for GET/POST being sent (HTTP redirect instead of  tag, HTML5 instead of HTML4.01, etc).
Issue #1093","Allows browsers to send GET requests for /REST/something.json to poll the MUSH for information. The request is sent to an object defined in mush.cnf, which returns a response in JSON format. If the object isn't defined or returns nothing, it checks for a hardcoded handler; currently only one exists, for /REST/who.json, which returns an array of online players.
Also makes a few small improvements to the JSON code, and tweaks the existing responses for GET/POST being sent (HTTP redirect instead of  tag, HTML5 instead of HTML4.01, etc).
Issue #1093",True,{'THUMBS_UP': ['https://github.com/HarryCordewener']}
pennmush/pennmush,https://github.com/pennmush/pennmush,1094,2016-10-06T02:03:04Z,2018-10-31T03:34:53Z,2018-10-31T03:34:53Z,CLOSED,False,729,47,5,https://github.com/talvo,Add handling of GET requests for MUSH info via JSON. Issue #1093.,1,[],https://github.com/pennmush/pennmush/pull/1094,https://github.com/HarryCordewener,2,https://github.com/pennmush/pennmush/pull/1094#issuecomment-252074869,"Allows browsers to send GET requests for /REST/something.json to poll the MUSH for information. The request is sent to an object defined in mush.cnf, which returns a response in JSON format. If the object isn't defined or returns nothing, it checks for a hardcoded handler; currently only one exists, for /REST/who.json, which returns an array of online players.
Also makes a few small improvements to the JSON code, and tweaks the existing responses for GET/POST being sent (HTTP redirect instead of  tag, HTML5 instead of HTML4.01, etc).
Issue #1093",This needs some extensive documentation / help files to go along with this commit. But it looks good.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1094,2016-10-06T02:03:04Z,2018-10-31T03:34:53Z,2018-10-31T03:34:53Z,CLOSED,False,729,47,5,https://github.com/talvo,Add handling of GET requests for MUSH info via JSON. Issue #1093.,1,[],https://github.com/pennmush/pennmush/pull/1094,https://github.com/mike347,3,https://github.com/pennmush/pennmush/pull/1094#issuecomment-252517989,"Allows browsers to send GET requests for /REST/something.json to poll the MUSH for information. The request is sent to an object defined in mush.cnf, which returns a response in JSON format. If the object isn't defined or returns nothing, it checks for a hardcoded handler; currently only one exists, for /REST/who.json, which returns an array of online players.
Also makes a few small improvements to the JSON code, and tweaks the existing responses for GET/POST being sent (HTTP redirect instead of  tag, HTML5 instead of HTML4.01, etc).
Issue #1093","I would like to see this support (as an option) having this respond on a different port than the game port.
Why?
 Qon says, ""Because you can isolate it behind apache+mod_proxy, protect it with mod_security2, lock it down by IP or password with Apache ACLs, and so on, and so on, and so on, like any other application whose HTTP port you want to protect.""
This is a great addition to the game, IMO, and will be put to good use by at least a few of us.
Thanks.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1094,2016-10-06T02:03:04Z,2018-10-31T03:34:53Z,2018-10-31T03:34:53Z,CLOSED,False,729,47,5,https://github.com/talvo,Add handling of GET requests for MUSH info via JSON. Issue #1093.,1,[],https://github.com/pennmush/pennmush/pull/1094,https://github.com/HarryCordewener,4,https://github.com/pennmush/pennmush/pull/1094#issuecomment-385983064,"Allows browsers to send GET requests for /REST/something.json to poll the MUSH for information. The request is sent to an object defined in mush.cnf, which returns a response in JSON format. If the object isn't defined or returns nothing, it checks for a hardcoded handler; currently only one exists, for /REST/who.json, which returns an array of online players.
Also makes a few small improvements to the JSON code, and tweaks the existing responses for GET/POST being sent (HTTP redirect instead of  tag, HTML5 instead of HTML4.01, etc).
Issue #1093","I love this, but I'd love it more if there was documentation in this commit.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1094,2016-10-06T02:03:04Z,2018-10-31T03:34:53Z,2018-10-31T03:34:53Z,CLOSED,False,729,47,5,https://github.com/talvo,Add handling of GET requests for MUSH info via JSON. Issue #1093.,1,[],https://github.com/pennmush/pennmush/pull/1094,https://github.com/talvo,5,https://github.com/pennmush/pennmush/pull/1094#issuecomment-386116100,"Allows browsers to send GET requests for /REST/something.json to poll the MUSH for information. The request is sent to an object defined in mush.cnf, which returns a response in JSON format. If the object isn't defined or returns nothing, it checks for a hardcoded handler; currently only one exists, for /REST/who.json, which returns an array of online players.
Also makes a few small improvements to the JSON code, and tweaks the existing responses for GET/POST being sent (HTTP redirect instead of  tag, HTML5 instead of HTML4.01, etc).
Issue #1093",Not much point in adding thorough documentation until the way to actually handle it has been agreed.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1094,2016-10-06T02:03:04Z,2018-10-31T03:34:53Z,2018-10-31T03:34:53Z,CLOSED,False,729,47,5,https://github.com/talvo,Add handling of GET requests for MUSH info via JSON. Issue #1093.,1,[],https://github.com/pennmush/pennmush/pull/1094,https://github.com/shawnw,6,https://github.com/pennmush/pennmush/pull/1094#issuecomment-434549612,"Allows browsers to send GET requests for /REST/something.json to poll the MUSH for information. The request is sent to an object defined in mush.cnf, which returns a response in JSON format. If the object isn't defined or returns nothing, it checks for a hardcoded handler; currently only one exists, for /REST/who.json, which returns an array of online players.
Also makes a few small improvements to the JSON code, and tweaks the existing responses for GET/POST being sent (HTTP redirect instead of  tag, HTML5 instead of HTML4.01, etc).
Issue #1093",I think the current more general http server code makes this PR no longer applicable.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1096,2016-10-08T23:41:59Z,2016-10-09T01:06:37Z,2016-10-09T01:06:38Z,MERGED,True,47,25,4,https://github.com/mike347,Qon extchat hidden fixes,8,[],https://github.com/pennmush/pennmush/pull/1096,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1096,"This change removes dark-connect/disconnect/reconnect messages, as well as removing Dark from being used in channel messages at all.
If you connect hidden (ch from login screen), only see_all, roy or wizard players will see your hidden-connect message on ANY channel you are on.
If you are channel hidden (via @chan/hide), only see_all, roy, or wizard players will see your connect/disconnect messages on any channel you are on. (It will -not- be prefixed with HIDDEN- though).
Same rules apply for @chan/recall and crecall().  Except you can always see your own connect/disconnect messages.
This PR finalizes the disconnection (pun intended) of DARK and HIDDEN.","This change removes dark-connect/disconnect/reconnect messages, as well as removing Dark from being used in channel messages at all.
If you connect hidden (ch from login screen), only see_all, roy or wizard players will see your hidden-connect message on ANY channel you are on.
If you are channel hidden (via @chan/hide), only see_all, roy, or wizard players will see your connect/disconnect messages on any channel you are on. (It will -not- be prefixed with HIDDEN- though).
Same rules apply for @chan/recall and crecall().  Except you can always see your own connect/disconnect messages.
This PR finalizes the disconnection (pun intended) of DARK and HIDDEN.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1101,2016-11-18T15:22:45Z,2017-04-10T19:23:58Z,2017-04-10T23:00:55Z,MERGED,True,13,1,1,https://github.com/HarryCordewener,Fix for issue #1100: MySQL Commmands out of Sync,1,[],https://github.com/pennmush/pennmush/pull/1101,https://github.com/HarryCordewener,1,https://github.com/pennmush/pennmush/pull/1101,"Do a proper cleanup to prevent commands from getting out of sync.
See Issue #1100","Do a proper cleanup to prevent commands from getting out of sync.
See Issue #1100",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1105,2016-12-17T12:01:23Z,2017-12-29T00:55:39Z,2017-12-29T00:55:39Z,MERGED,True,3,3,1,https://github.com/mdziczkowski,Fix in the install section,1,[],https://github.com/pennmush/pennmush/pull/1105,https://github.com/mdziczkowski,1,https://github.com/pennmush/pennmush/pull/1105,Changes in the lines 73-75 : Added condition with would remove the files only if they exist instead of bailing out an error that the files don't exist,Changes in the lines 73-75 : Added condition with would remove the files only if they exist instead of bailing out an error that the files don't exist,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1105,2016-12-17T12:01:23Z,2017-12-29T00:55:39Z,2017-12-29T00:55:39Z,MERGED,True,3,3,1,https://github.com/mdziczkowski,Fix in the install section,1,[],https://github.com/pennmush/pennmush/pull/1105,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1105#issuecomment-279187581,Changes in the lines 73-75 : Added condition with would remove the files only if they exist instead of bailing out an error that the files don't exist,"Out of curiousity, which system did you run into an issue with this on?",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1105,2016-12-17T12:01:23Z,2017-12-29T00:55:39Z,2017-12-29T00:55:39Z,MERGED,True,3,3,1,https://github.com/mdziczkowski,Fix in the install section,1,[],https://github.com/pennmush/pennmush/pull/1105,https://github.com/mdziczkowski,3,https://github.com/pennmush/pennmush/pull/1105#issuecomment-281201981,Changes in the lines 73-75 : Added condition with would remove the files only if they exist instead of bailing out an error that the files don't exist,"Out of curiousity, which system did you run into an issue with this
on?

I had found it accidentally on ubuntu 16.10
â€¦
---
Michal",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1105,2016-12-17T12:01:23Z,2017-12-29T00:55:39Z,2017-12-29T00:55:39Z,MERGED,True,3,3,1,https://github.com/mdziczkowski,Fix in the install section,1,[],https://github.com/pennmush/pennmush/pull/1105,https://github.com/shawnw,4,https://github.com/pennmush/pennmush/pull/1105#issuecomment-354381965,Changes in the lines 73-75 : Added condition with would remove the files only if they exist instead of bailing out an error that the files don't exist,"The -f option should suppress any errors, but whatever.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1115,2017-02-11T23:47:42Z,2017-02-12T00:06:41Z,2017-02-12T00:11:06Z,CLOSED,False,26,10,3,https://github.com/CLDawes,Add a() function for efficiently setting attributes on the enactor.,1,[],https://github.com/pennmush/pennmush/pull/1115,https://github.com/CLDawes,1,https://github.com/pennmush/pennmush/pull/1115,"This adds an efficient-to-use and efficient-to-run attribute-setting function a(), and updates pennfunc.hlp to reflect the addition.","This adds an efficient-to-use and efficient-to-run attribute-setting function a(), and updates pennfunc.hlp to reflect the addition.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1115,2017-02-11T23:47:42Z,2017-02-12T00:06:41Z,2017-02-12T00:11:06Z,CLOSED,False,26,10,3,https://github.com/CLDawes,Add a() function for efficiently setting attributes on the enactor.,1,[],https://github.com/pennmush/pennmush/pull/1115,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1115#issuecomment-279185014,"This adds an efficient-to-use and efficient-to-run attribute-setting function a(), and updates pennfunc.hlp to reflect the addition.","I don't really think this is worthwhile, personally (the only things it removes are a single object lookup - and those are pretty efficient, especially for dbrefs or ""me"" - and a command permission check, which should really be present here anyway). The name A() is also very vague (and, to nitpick, it sets on the caller/executor (%@/%!), not the enactor (%#)). So, unless @captdeaf or @shawnw are overwhelmingly for this, I'm gonna say no. (It could be rolled into attrib_set(), making the object optional, but.. like I said, including ""me/"" is not a big deal, and doesn't exactly slow things down a lot, so better kept for clarity, IMHO.)",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1115,2017-02-11T23:47:42Z,2017-02-12T00:06:41Z,2017-02-12T00:11:06Z,CLOSED,False,26,10,3,https://github.com/CLDawes,Add a() function for efficiently setting attributes on the enactor.,1,[],https://github.com/pennmush/pennmush/pull/1115,https://github.com/CLDawes,3,https://github.com/pennmush/pennmush/pull/1115#issuecomment-279185546,"This adds an efficient-to-use and efficient-to-run attribute-setting function a(), and updates pennfunc.hlp to reflect the addition.","Thanks for pointing the caller/executor terminology business out; my head is doing funny things to me right now. What you're saying makes perfect sense, from the perspective of not adding unnecessary clutter to the codebase. While I think it would be a convenience from the perspective of MUSHcoders, I'll head off and work on a patch for the object-less attrib_set alternative you've suggested here as a potential time-saving alternative.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1115,2017-02-11T23:47:42Z,2017-02-12T00:06:41Z,2017-02-12T00:11:06Z,CLOSED,False,26,10,3,https://github.com/CLDawes,Add a() function for efficiently setting attributes on the enactor.,1,[],https://github.com/pennmush/pennmush/pull/1115,https://github.com/talvo,4,https://github.com/pennmush/pennmush/pull/1115#issuecomment-279185801,"This adds an efficient-to-use and efficient-to-run attribute-setting function a(), and updates pennfunc.hlp to reflect the addition.","No worries; they were used pretty much randomly and interchangably for a long time, even in the helpfiles and comments/variable names in the code, and it took me weeks to tidy it all up, so I'm a bit anal about keeping them straight now ;) FWIW, making the object optional in attrib_set() isn't something I would really support or merge myself, but wouldn't be against heavily enough to instantly say no to, either (though I think the other devs feel the same way - ticket #873 has been sitting literally for years because of it - so I'm not sure it's really worth the time to do, if I'm honest).",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1128,2017-06-14T02:50:45Z,2017-06-15T19:30:48Z,2017-06-16T00:37:23Z,MERGED,True,2,0,1,https://github.com/CLDawes,Make 'buy' pay the vendor (suggested by moniker).,1,[],https://github.com/pennmush/pennmush/pull/1128,https://github.com/CLDawes,1,https://github.com/pennmush/pennmush/pull/1128,"Also, fixes a buffer over-read (noticed during testing).
I don't know whether or not people are supposed to get paid when they create a store based on the @pricelist/buy mechanic, but this is the patch to apply if they are.","Also, fixes a buffer over-read (noticed during testing).
I don't know whether or not people are supposed to get paid when they create a store based on the @pricelist/buy mechanic, but this is the patch to apply if they are.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1130,2017-06-18T03:48:37Z,2018-01-09T05:50:25Z,2019-11-06T22:38:41Z,CLOSED,False,24,2,3,https://github.com/CLDawes,Added @nuke/list (suggested by Kitai).,1,[],https://github.com/pennmush/pennmush/pull/1130,https://github.com/CLDawes,1,https://github.com/pennmush/pennmush/pull/1130,"This is probably a horrible implementation of a silly idea. The job of selling it... now falls to Kitai!
(and, if it doesn't get in, @dolist/inline <object-list>=@nuke %i0 still works!)","This is probably a horrible implementation of a silly idea. The job of selling it... now falls to Kitai!
(and, if it doesn't get in, @dolist/inline <object-list>=@nuke %i0 still works!)",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1130,2017-06-18T03:48:37Z,2018-01-09T05:50:25Z,2019-11-06T22:38:41Z,CLOSED,False,24,2,3,https://github.com/CLDawes,Added @nuke/list (suggested by Kitai).,1,[],https://github.com/pennmush/pennmush/pull/1130,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1130#issuecomment-356187440,"This is probably a horrible implementation of a silly idea. The job of selling it... now falls to Kitai!
(and, if it doesn't get in, @dolist/inline <object-list>=@nuke %i0 still works!)",I think sticking with @dolist for multiple nuking is good enough.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1131,2017-06-19T23:39:26Z,2017-12-29T00:51:10Z,2019-11-06T22:38:41Z,MERGED,True,1,1,1,https://github.com/CLDawes,Make @mail pay attention to MAILCURF when passed a player or dbref.,1,[],https://github.com/pennmush/pennmush/pull/1131,https://github.com/CLDawes,1,https://github.com/pennmush/pennmush/pull/1131,"If do_mail_list is passed a msglist in #<dbref> or *<player-name> format, ms.flags is not set M_FOLDER by parse_msglist, so AllInFolder(ms) returns false and the player's MAILCURF goes unqueried. However, if (and only if) either of those types of msglist (or 'me') are passed to parse_msglist, ms.player is set to a nonzero value. Thus, if that nonzero value is detected here, folder should be set according to the player's MAILCURF.
Plus, this fixes the bug portion of issue #77.","If do_mail_list is passed a msglist in #<dbref> or *<player-name> format, ms.flags is not set M_FOLDER by parse_msglist, so AllInFolder(ms) returns false and the player's MAILCURF goes unqueried. However, if (and only if) either of those types of msglist (or 'me') are passed to parse_msglist, ms.player is set to a nonzero value. Thus, if that nonzero value is detected here, folder should be set according to the player's MAILCURF.
Plus, this fixes the bug portion of issue #77.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1132,2017-06-29T00:07:31Z,2017-07-01T12:50:38Z,2017-07-01T12:50:38Z,CLOSED,False,5,2,2,https://github.com/mike347,Strip markup from u()'s first argument,2,[],https://github.com/pennmush/pennmush/pull/1132,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1132,"Fixes an issue caused by passing ansified text to u().
This cropped up when using a channel mogrifier and passing a colored channel name directly to a u() call.
Maybe do the same for objeval(), etc. type functions?","Fixes an issue caused by passing ansified text to u().
This cropped up when using a channel mogrifier and passing a colored channel name directly to a u() call.
Maybe do the same for objeval(), etc. type functions?",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1132,2017-06-29T00:07:31Z,2017-07-01T12:50:38Z,2017-07-01T12:50:38Z,CLOSED,False,5,2,2,https://github.com/mike347,Strip markup from u()'s first argument,2,[],https://github.com/pennmush/pennmush/pull/1132,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1132#issuecomment-312367540,"Fixes an issue caused by passing ansified text to u().
This cropped up when using a channel mogrifier and passing a colored channel name directly to a u() call.
Maybe do the same for objeval(), etc. type functions?","The issue is going to arise in any u()-like function, so it's probably better to handle this in fetch_ufun_attrib() rather than directly in fun_ufun().",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1134,2017-08-06T13:48:45Z,2018-07-14T13:05:40Z,2018-07-14T13:05:40Z,CLOSED,False,4,2,2,https://github.com/mike347,Strip markup from fetch_ufun_attrib() argument,3,[],https://github.com/pennmush/pennmush/pull/1134,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1134,"Reported by a few, including me. Passing an argument with markup to a ufun() silently fails, because it can't find the object/attribute due to the markup.
E.g.

&TEST Me=Success!
th u(me/test)
Success!
th u(me/[ansi(hw,test)]

This fixes that issue by stripping markup before looking for the object/attribute.","Reported by a few, including me. Passing an argument with markup to a ufun() silently fails, because it can't find the object/attribute due to the markup.
E.g.

&TEST Me=Success!
th u(me/test)
Success!
th u(me/[ansi(hw,test)]

This fixes that issue by stripping markup before looking for the object/attribute.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1138,2017-10-30T19:58:32Z,2017-10-30T22:29:51Z,2017-10-30T22:30:02Z,MERGED,True,1,1,1,https://github.com/buslov,Fix V614 warning from PVS-Studio Static Analyzer,1,[],https://github.com/pennmush/pennmush/pull/1138,https://github.com/buslov,1,https://github.com/pennmush/pennmush/pull/1138,"I'm a member of the Pinguem.ru competition on finding errors in open source projects. A bug, found using PVS-Studio.
Warning:
Uninitialized variable 'numblanks' used.","I'm a member of the Pinguem.ru competition on finding errors in open source projects. A bug, found using PVS-Studio.
Warning:
Uninitialized variable 'numblanks' used.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1138,2017-10-30T19:58:32Z,2017-10-30T22:29:51Z,2017-10-30T22:30:02Z,MERGED,True,1,1,1,https://github.com/buslov,Fix V614 warning from PVS-Studio Static Analyzer,1,[],https://github.com/pennmush/pennmush/pull/1138,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1138#issuecomment-340604337,"I'm a member of the Pinguem.ru competition on finding errors in open source projects. A bug, found using PVS-Studio.
Warning:
Uninitialized variable 'numblanks' used.",Good catch. :),True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1139,2017-11-04T12:33:26Z,2017-11-06T19:48:36Z,2017-11-06T19:48:36Z,MERGED,True,6,1,3,https://github.com/mike347,Disallow '=' in passwords,3,[],https://github.com/pennmush/pennmush/pull/1139,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1139,"Using '=' in passwords causes problems with changing the password later using '@password', this change makes '=' an unacceptable character in passwords going forward.
Players with a '=' in the current password should be @newpassword'd by a Wizard.
As reported by Volund.","Using '=' in passwords causes problems with changing the password later using '@password', this change makes '=' an unacceptable character in passwords going forward.
Players with a '=' in the current password should be @newpassword'd by a Wizard.
As reported by Volund.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1142,2017-12-22T01:22:54Z,2017-12-22T10:07:33Z,2017-12-22T13:41:38Z,MERGED,True,1,1,1,https://github.com/unixorn,Fix a spelling error,1,[],https://github.com/pennmush/pennmush/pull/1142,https://github.com/unixorn,1,https://github.com/pennmush/pennmush/pull/1142,s/leave a programming/leave a program/,s/leave a programming/leave a program/,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1150,2018-01-08T10:16:16Z,2018-01-09T05:17:49Z,2018-01-09T05:17:49Z,MERGED,True,47,251,4,https://github.com/grapenut,Update websock functions and help files,4,[],https://github.com/pennmush/pennmush/pull/1150,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1150,"This pull request adds help files for websockets and the 2 helpers functions, which have been renamed from wsh() to wshtml() and from wsj() to wsjson(). It also removes the binary websocket channel and the associated binary encoding functions, including the wsb() softcode function. This was never implemented on the client side. Using JSON is far easier and more versatile.","This pull request adds help files for websockets and the 2 helpers functions, which have been renamed from wsh() to wshtml() and from wsj() to wsjson(). It also removes the binary websocket channel and the associated binary encoding functions, including the wsb() softcode function. This was never implemented on the client side. Using JSON is far easier and more versatile.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1152,2018-01-09T01:55:29Z,2018-01-09T05:18:19Z,2018-01-09T05:18:19Z,MERGED,True,28,21,7,https://github.com/grapenut,Allow HTML tag markup with either pueblo or websockets enabled  and fix the blank input error at connect,3,[],https://github.com/pennmush/pennmush/pull/1152,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1152,"This pull request adds a SUPPORT_WEBSOCKETS macro for the use_ws config option, similar to the SUPPORT_PUEBLO macro. It also adds a macro SUPPORT_HTML which is either (SUPPORT_PUEBLO || SUPPORT_WEBSOCKETS). SUPPORT_HTML is used in several places instead of SUPPORT_PUEBLO to allow HTML tags to be marked up if either Websockets or Pueblo are enabled. This enables HTML markup for Websockets, without having to turn on Pueblo for all clients.
There is also a fix to the error messages on blank input at the connect screen problem that @talvo  noticed, and that is responsible for noticing the error referenced in #1151 . This fix simply returns quietly if the command is an empty string, before proceeding with the connect command in bsd.c:check_connect().
Cheers,
-grapenut","This pull request adds a SUPPORT_WEBSOCKETS macro for the use_ws config option, similar to the SUPPORT_PUEBLO macro. It also adds a macro SUPPORT_HTML which is either (SUPPORT_PUEBLO || SUPPORT_WEBSOCKETS). SUPPORT_HTML is used in several places instead of SUPPORT_PUEBLO to allow HTML tags to be marked up if either Websockets or Pueblo are enabled. This enables HTML markup for Websockets, without having to turn on Pueblo for all clients.
There is also a fix to the error messages on blank input at the connect screen problem that @talvo  noticed, and that is responsible for noticing the error referenced in #1151 . This fix simply returns quietly if the command is an empty string, before proceeding with the connect command in bsd.c:check_connect().
Cheers,
-grapenut",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1152,2018-01-09T01:55:29Z,2018-01-09T05:18:19Z,2018-01-09T05:18:19Z,MERGED,True,28,21,7,https://github.com/grapenut,Allow HTML tag markup with either pueblo or websockets enabled  and fix the blank input error at connect,3,[],https://github.com/pennmush/pennmush/pull/1152,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1152#issuecomment-356176511,"This pull request adds a SUPPORT_WEBSOCKETS macro for the use_ws config option, similar to the SUPPORT_PUEBLO macro. It also adds a macro SUPPORT_HTML which is either (SUPPORT_PUEBLO || SUPPORT_WEBSOCKETS). SUPPORT_HTML is used in several places instead of SUPPORT_PUEBLO to allow HTML tags to be marked up if either Websockets or Pueblo are enabled. This enables HTML markup for Websockets, without having to turn on Pueblo for all clients.
There is also a fix to the error messages on blank input at the connect screen problem that @talvo  noticed, and that is responsible for noticing the error referenced in #1151 . This fix simply returns quietly if the command is an empty string, before proceeding with the connect command in bsd.c:check_connect().
Cheers,
-grapenut",Does sending the pueblo-specific tags cause problems in your websocket client? Or does it understand them?,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1152,2018-01-09T01:55:29Z,2018-01-09T05:18:19Z,2018-01-09T05:18:19Z,MERGED,True,28,21,7,https://github.com/grapenut,Allow HTML tag markup with either pueblo or websockets enabled  and fix the blank input error at connect,3,[],https://github.com/pennmush/pennmush/pull/1152,https://github.com/grapenut,3,https://github.com/pennmush/pennmush/pull/1152#issuecomment-356179696,"This pull request adds a SUPPORT_WEBSOCKETS macro for the use_ws config option, similar to the SUPPORT_PUEBLO macro. It also adds a macro SUPPORT_HTML which is either (SUPPORT_PUEBLO || SUPPORT_WEBSOCKETS). SUPPORT_HTML is used in several places instead of SUPPORT_PUEBLO to allow HTML tags to be marked up if either Websockets or Pueblo are enabled. This enables HTML markup for Websockets, without having to turn on Pueblo for all clients.
There is also a fix to the error messages on blank input at the connect screen problem that @talvo  noticed, and that is responsible for noticing the error referenced in #1151 . This fix simply returns quietly if the command is an empty string, before proceeding with the connect command in bsd.c:check_connect().
Cheers,
-grapenut","The websocket client can handle pueblo-specific tags, at least the ones that PennMUSH generates. It ignores <XCH_PAGE> and the VRML stuff. The ""pueblo support"" comes when link tags with an xch_cmd attribute are given an onclick callback that sends the value of xch_cmd as a command. Tags with an xch_hint attribute are given a popup tooltip text. It is sufficient to just enable pueblo and let the client ignore those tags, although this pull request stops a few unnecessary tags from being sent if you don't intend to do anything with them.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1156,2018-01-10T04:27:35Z,2018-01-11T01:25:31Z,2018-01-11T01:25:32Z,MERGED,True,1,1,1,https://github.com/grapenut,changed SSL_VERIFY_PEER to SSL_VERIFY_NONE whenever client certificatâ€¦,1,[],https://github.com/pennmush/pennmush/pull/1156,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1156,A fix for issue #1155 . Changes SSL_VERIFY_PEER to SSL_VERIFY_NONE whenever the config option ssl_require_client_cert is turned off. This prevents the server from requesting client certificates that is doesn't intend to verify.,A fix for issue #1155 . Changes SSL_VERIFY_PEER to SSL_VERIFY_NONE whenever the config option ssl_require_client_cert is turned off. This prevents the server from requesting client certificates that is doesn't intend to verify.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1188,2018-05-02T00:27:47Z,2018-05-19T15:57:26Z,2018-05-19T15:57:26Z,CLOSED,False,68,17,4,https://github.com/mike347,fun_owner sideffect upgrade,4,[],https://github.com/pennmush/pennmush/pull/1188,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1188,"These changes allow owner() to change ownership as in @chown and @atrchown Fixes issue #1186
The new syntax is
owner(<object>[,<newowner>[,preserve]])
-- View or change ownership of , if the third argument is 'preserve', the flags will be preserved as if @chown/preserve was used.
owner(<object>/<attrib>[,<newowner>])
-- View or change ownership of an attribute
It will return a '1' if successful in changing ownership.
The same restrictions that apply to @chown apply to the side-effect format of this function, it also respects if side effect functions are disabled or if @chown is disabled using @command. etc.","These changes allow owner() to change ownership as in @chown and @atrchown Fixes issue #1186
The new syntax is
owner(<object>[,<newowner>[,preserve]])
-- View or change ownership of , if the third argument is 'preserve', the flags will be preserved as if @chown/preserve was used.
owner(<object>/<attrib>[,<newowner>])
-- View or change ownership of an attribute
It will return a '1' if successful in changing ownership.
The same restrictions that apply to @chown apply to the side-effect format of this function, it also respects if side effect functions are disabled or if @chown is disabled using @command. etc.",True,{'THUMBS_DOWN': ['https://github.com/HarryCordewener']}
pennmush/pennmush,https://github.com/pennmush/pennmush,1188,2018-05-02T00:27:47Z,2018-05-19T15:57:26Z,2018-05-19T15:57:26Z,CLOSED,False,68,17,4,https://github.com/mike347,fun_owner sideffect upgrade,4,[],https://github.com/pennmush/pennmush/pull/1188,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1188#issuecomment-385831872,"These changes allow owner() to change ownership as in @chown and @atrchown Fixes issue #1186
The new syntax is
owner(<object>[,<newowner>[,preserve]])
-- View or change ownership of , if the third argument is 'preserve', the flags will be preserved as if @chown/preserve was used.
owner(<object>/<attrib>[,<newowner>])
-- View or change ownership of an attribute
It will return a '1' if successful in changing ownership.
The same restrictions that apply to @chown apply to the side-effect format of this function, it also respects if side effect functions are disabled or if @chown is disabled using @command. etc.","Coincidentally, using the string 'preserve' instead of just a boolean flag ties in nicely with issue #797 that I was just looking at, and the related #1006 that never got any discussion to speak of.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1191,2018-05-02T02:40:55Z,2018-05-04T22:59:37Z,2018-05-04T22:59:37Z,MERGED,True,5,4,2,https://github.com/mike347,Mike347 chown preserve wizbit,4,[],https://github.com/pennmush/pennmush/pull/1191,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1191,"Don't reset wizbit on the object using @chown/preserve,  if the newowner is also a wizard. Fixes issue #1187.
This sends a warning instead.","Don't reset wizbit on the object using @chown/preserve,  if the newowner is also a wizard. Fixes issue #1187.
This sends a warning instead.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1194,2018-05-12T21:57:37Z,2018-05-12T22:02:37Z,2018-05-12T22:02:37Z,MERGED,True,1,1,1,https://github.com/mike347,Fix typo in help ipaddr(),1,[],https://github.com/pennmush/pennmush/pull/1194,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1194,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1198,2018-07-05T01:56:44Z,2018-08-08T00:58:36Z,2018-08-08T00:58:36Z,MERGED,True,5,5,1,https://github.com/grapenut,Remove <FONT> tags from player and object names,2,[],https://github.com/pennmush/pennmush/pull/1198,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1198,"Remove  tags from player and object names, unless explicit pueblo support is enabled. This prevents them from showing up on websockets when Pueblo is disabled, which is the default configuration.","Remove  tags from player and object names, unless explicit pueblo support is enabled. This prevents them from showing up on websockets when Pueblo is disabled, which is the default configuration.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1198,2018-07-05T01:56:44Z,2018-08-08T00:58:36Z,2018-08-08T00:58:36Z,MERGED,True,5,5,1,https://github.com/grapenut,Remove <FONT> tags from player and object names,2,[],https://github.com/pennmush/pennmush/pull/1198,https://github.com/grapenut,2,https://github.com/pennmush/pennmush/pull/1198#issuecomment-402585639,"Remove  tags from player and object names, unless explicit pueblo support is enabled. This prevents them from showing up on websockets when Pueblo is disabled, which is the default configuration.",There is some weird mess happening with the build check. It's failing on libcurl stuff that I didn't touch.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1198,2018-07-05T01:56:44Z,2018-08-08T00:58:36Z,2018-08-08T00:58:36Z,MERGED,True,5,5,1,https://github.com/grapenut,Remove <FONT> tags from player and object names,2,[],https://github.com/pennmush/pennmush/pull/1198,https://github.com/talvo,3,https://github.com/pennmush/pennmush/pull/1198#issuecomment-402637593,"Remove  tags from player and object names, unless explicit pueblo support is enabled. This prevents them from showing up on websockets when Pueblo is disabled, which is the default configuration.","If this should never be sent to websockets, then this isn't really sufficient, since it will still have the same issue on any place with Pueblo enabled.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1198,2018-07-05T01:56:44Z,2018-08-08T00:58:36Z,2018-08-08T00:58:36Z,MERGED,True,5,5,1,https://github.com/grapenut,Remove <FONT> tags from player and object names,2,[],https://github.com/pennmush/pennmush/pull/1198,https://github.com/grapenut,4,https://github.com/pennmush/pennmush/pull/1198#issuecomment-402777343,"Remove  tags from player and object names, unless explicit pueblo support is enabled. This prevents them from showing up on websockets when Pueblo is disabled, which is the default configuration.","I think the  tags are completely unnecessary, even for Pueblo. It's very offputting to have this larger text embedded inline with everything else. I just didn't want to alter the existing experience for Pueblo-enabled places. I already removed a bunch of superfluous Pueblo tags from Websocket connections, things like the horizontal line before a room description and tags after newlines. Those will come back if you enable Pueblo. This was another one of those things that I meant to strip from websockets and leave as Pueblo only. My preferred solution would be to just use safe_str() and not have them wrapped in  tags at all, but I don't know who actually uses Pueblo and would be upset by that.
Here's what the difference looks like on a web client with and without pueblo enabled:",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1198,2018-07-05T01:56:44Z,2018-08-08T00:58:36Z,2018-08-08T00:58:36Z,MERGED,True,5,5,1,https://github.com/grapenut,Remove <FONT> tags from player and object names,2,[],https://github.com/pennmush/pennmush/pull/1198,https://github.com/shawnw,5,https://github.com/pennmush/pennmush/pull/1198#issuecomment-402835291,"Remove  tags from player and object names, unless explicit pueblo support is enabled. This prevents them from showing up on websockets when Pueblo is disabled, which is the default configuration.",I'm fine with removing the larger font stuff from Pueblo mode too.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1198,2018-07-05T01:56:44Z,2018-08-08T00:58:36Z,2018-08-08T00:58:36Z,MERGED,True,5,5,1,https://github.com/grapenut,Remove <FONT> tags from player and object names,2,[],https://github.com/pennmush/pennmush/pull/1198,https://github.com/grapenut,6,https://github.com/pennmush/pennmush/pull/1198#issuecomment-402847897,"Remove  tags from player and object names, unless explicit pueblo support is enabled. This prevents them from showing up on websockets when Pueblo is disabled, which is the default configuration.","The pull request was updated to just use safe_str() for the object names in look.c, removing the  tags entirely.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1200,2018-07-05T04:58:06Z,2018-07-05T22:23:03Z,2018-07-05T22:23:03Z,CLOSED,False,5,5,2,https://github.com/grapenut,Update version requirement for libcurl to 7.43.0,1,[],https://github.com/pennmush/pennmush/pull/1200,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1200,Updates the version requirement for libcurl to 7.43.0 required for the CURLPIPE_MULTIPLEX and CURLPIPE_HTTP1 options. See also #1198 and #1199.,Updates the version requirement for libcurl to 7.43.0 required for the CURLPIPE_MULTIPLEX and CURLPIPE_HTTP1 options. See also #1198 and #1199.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1205,2018-07-14T13:05:09Z,2018-07-14T13:05:28Z,2018-07-14T13:05:28Z,MERGED,True,10,5,2,https://github.com/mike347,Qon fetch ufun patch,2,[],https://github.com/pennmush/pennmush/pull/1205,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1205,"ufun(), ulocal() would fail if you passed it an attribute name with markup / ansi. This patch removes the markup (if any) first.","ufun(), ulocal() would fail if you passed it an attribute name with markup / ansi. This patch removes the markup (if any) first.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1207,2018-07-15T23:17:26Z,2018-08-08T00:56:33Z,2018-08-08T00:56:33Z,MERGED,True,39,3,3,https://github.com/grapenut,Out-of-band updates for websocket clients,1,[],https://github.com/pennmush/pennmush/pull/1207,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1207,"This PR includes the following 3 changes.


Added the send_websocket_object(DESC *d, JSON *data) function in websock.c that can be used as an interface to send a JSON object directly to a descriptor. Can be used in a function like OOB() that bypasses the need for @pemit and wsjson() when only sending out-of-band JSON. It is necessary because @pemit will send unwanted blank newlines along with the embedded JSON.


Updated the OOB() function to also send JSON to websocket clients. You can send the same payload to both GMCP and websocket clients allowing you to communicate with both types of clients using the same JSON API. While I think it fits perfectly to be able to send the same exact JSON payload out-of-band to either kind of client, it could also be packaged into its own websocket-only function.


Removed the CONN_PROMPT_NEWLINES bit by default after the websocket handshake. Should have been done already since prompts are sent on their own channel and newlines are not needed.


Cheers,
-grapenut","This PR includes the following 3 changes.


Added the send_websocket_object(DESC *d, JSON *data) function in websock.c that can be used as an interface to send a JSON object directly to a descriptor. Can be used in a function like OOB() that bypasses the need for @pemit and wsjson() when only sending out-of-band JSON. It is necessary because @pemit will send unwanted blank newlines along with the embedded JSON.


Updated the OOB() function to also send JSON to websocket clients. You can send the same payload to both GMCP and websocket clients allowing you to communicate with both types of clients using the same JSON API. While I think it fits perfectly to be able to send the same exact JSON payload out-of-band to either kind of client, it could also be packaged into its own websocket-only function.


Removed the CONN_PROMPT_NEWLINES bit by default after the websocket handshake. Should have been done already since prompts are sent on their own channel and newlines are not needed.


Cheers,
-grapenut",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1214,2018-08-07T20:03:22Z,2018-08-11T05:09:14Z,2018-08-11T05:09:34Z,MERGED,True,1125,199,20,https://github.com/captdeaf,Httpd,13,[],https://github.com/pennmush/pennmush/pull/1214,https://github.com/captdeaf,1,https://github.com/pennmush/pennmush/pull/1214,"(From ""help http""):
PennMUSH now supports HTTP requests reaching its mush port. It is very low level,
and a little tricky to understand.
When an HTTP request hits the PennMUSH port, PennMUSH invisibly logs in to
the HTTP Handler player (@config http_handler), and executes an
@include me/<method>. e.g: @include me/get.
%0 will be the pathname, e.g: ""/"", ""/path/to"", ""/foo?bar=baz"", etc.
 %1 will be the body of the request. If it's json, use json_query to deal with it.
If it's form-encoded, look at help formdecode()
Anything sent to the HTTP Handler player during evaluation of this code is
included in the body sent to the HTTP Client. There is a maximum size of
BUFFER_LEN for the body of the response.","(From ""help http""):
PennMUSH now supports HTTP requests reaching its mush port. It is very low level,
and a little tricky to understand.
When an HTTP request hits the PennMUSH port, PennMUSH invisibly logs in to
the HTTP Handler player (@config http_handler), and executes an
@include me/<method>. e.g: @include me/get.
%0 will be the pathname, e.g: ""/"", ""/path/to"", ""/foo?bar=baz"", etc.
 %1 will be the body of the request. If it's json, use json_query to deal with it.
If it's form-encoded, look at help formdecode()
Anything sent to the HTTP Handler player during evaluation of this code is
included in the body sent to the HTTP Client. There is a maximum size of
BUFFER_LEN for the body of the response.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1215,2018-08-09T01:31:44Z,2018-08-09T01:49:12Z,2018-08-09T01:49:12Z,MERGED,True,43,8,3,https://github.com/grapenut,Update oob() to also send the GMCP headers to websockets,2,[],https://github.com/pennmush/pennmush/pull/1215,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1215,"This is a continuation of my last PR with websocket OOB updates. Using the new cJSON utilities we add the GMCP header string to the data object. If the data is not an object we create a temporary object and add a reference to the data, using the header string as the key or ""data"" if it is not provided. I make sure to delete the temporary object if it was needed.
This should allow websocket clients to read and respond to any GMCP payload. Examples of the repackaged payload received by a websocket client:
th oob(%#,,null) -> {}
th oob(%#,,json(string,blah)) -> {""data"":""blah""}
th oob(%#,header,null) -> {""gmcp"":""header""}
th oob(%#,header,json(string,blah)) -> {""gmcp"":""header"", ""header"":""blah""}
th oob(%#,header,json(object,key,0)) -> {""gmcp"":""header"", ""key"":0}","This is a continuation of my last PR with websocket OOB updates. Using the new cJSON utilities we add the GMCP header string to the data object. If the data is not an object we create a temporary object and add a reference to the data, using the header string as the key or ""data"" if it is not provided. I make sure to delete the temporary object if it was needed.
This should allow websocket clients to read and respond to any GMCP payload. Examples of the repackaged payload received by a websocket client:
th oob(%#,,null) -> {}
th oob(%#,,json(string,blah)) -> {""data"":""blah""}
th oob(%#,header,null) -> {""gmcp"":""header""}
th oob(%#,header,json(string,blah)) -> {""gmcp"":""header"", ""header"":""blah""}
th oob(%#,header,json(object,key,0)) -> {""gmcp"":""header"", ""key"":0}",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1218,2018-08-11T05:57:51Z,2018-10-31T03:35:59Z,2018-10-31T03:35:59Z,CLOSED,False,1375,217,15,https://github.com/grapenut,HTTP Event Routing,16,[],https://github.com/pennmush/pennmush/pull/1218,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1218,"This provides HTTP request handling by routing the requests through the Event Handler. You can create an HTTP route /path/to/resource by adding an attribute HTTPPATHTORESOURCE to the Event Handler. The default route / heads to HTTPINDEX.
Responses can be done manually with @pemit/port and @boot/port, or you can use the new @respond helper command (requires Wizard or Send_OOB).
The following arguments are passed to the event handler attribute:
%0	Socket descriptor making the request
%1	IP address of the requestor
%2	HTTP request method (e.g. GET/POST/etc.)
%3	URI path (e.g. /public/forums)
%4	Query string attached to the URI (e.g. /index?query_string)
%5	HTTP request headers, separated by newlines
%6	Content of the request (e.g. for POST/PUT)
Here are some example routes:
&HTTP`INDEX Event Handler=@respond %0=Hello World!
&HTTP`LWHO Event Handler=@respond/json %0=json(object,lwho,\[[iter(lwho(),json(string,name(%i0)),,\,)]\])
&HTTP`FILE.HTML Event Handler=@respond/html %0=<html><head><title>Hello World!</title></head><body><p>Hello World!</p></body></html></pre>

See help @respond and help event http for more information. This conflicts with Walker's HTTP implementation which was just merged a few minutes ago...","This provides HTTP request handling by routing the requests through the Event Handler. You can create an HTTP route /path/to/resource by adding an attribute HTTPPATHTORESOURCE to the Event Handler. The default route / heads to HTTPINDEX.
Responses can be done manually with @pemit/port and @boot/port, or you can use the new @respond helper command (requires Wizard or Send_OOB).
The following arguments are passed to the event handler attribute:
%0	Socket descriptor making the request
%1	IP address of the requestor
%2	HTTP request method (e.g. GET/POST/etc.)
%3	URI path (e.g. /public/forums)
%4	Query string attached to the URI (e.g. /index?query_string)
%5	HTTP request headers, separated by newlines
%6	Content of the request (e.g. for POST/PUT)
Here are some example routes:
&HTTP`INDEX Event Handler=@respond %0=Hello World!
&HTTP`LWHO Event Handler=@respond/json %0=json(object,lwho,\[[iter(lwho(),json(string,name(%i0)),,\,)]\])
&HTTP`FILE.HTML Event Handler=@respond/html %0=<html><head><title>Hello World!</title></head><body><p>Hello World!</p></body></html></pre>

See help @respond and help event http for more information. This conflicts with Walker's HTTP implementation which was just merged a few minutes ago...",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1218,2018-08-11T05:57:51Z,2018-10-31T03:35:59Z,2018-10-31T03:35:59Z,CLOSED,False,1375,217,15,https://github.com/grapenut,HTTP Event Routing,16,[],https://github.com/pennmush/pennmush/pull/1218,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1218#issuecomment-434549782,"This provides HTTP request handling by routing the requests through the Event Handler. You can create an HTTP route /path/to/resource by adding an attribute HTTPPATHTORESOURCE to the Event Handler. The default route / heads to HTTPINDEX.
Responses can be done manually with @pemit/port and @boot/port, or you can use the new @respond helper command (requires Wizard or Send_OOB).
The following arguments are passed to the event handler attribute:
%0	Socket descriptor making the request
%1	IP address of the requestor
%2	HTTP request method (e.g. GET/POST/etc.)
%3	URI path (e.g. /public/forums)
%4	Query string attached to the URI (e.g. /index?query_string)
%5	HTTP request headers, separated by newlines
%6	Content of the request (e.g. for POST/PUT)
Here are some example routes:
&HTTP`INDEX Event Handler=@respond %0=Hello World!
&HTTP`LWHO Event Handler=@respond/json %0=json(object,lwho,\[[iter(lwho(),json(string,name(%i0)),,\,)]\])
&HTTP`FILE.HTML Event Handler=@respond/html %0=<html><head><title>Hello World!</title></head><body><p>Hello World!</p></body></html></pre>

See help @respond and help event http for more information. This conflicts with Walker's HTTP implementation which was just merged a few minutes ago...",We're stuck with Walker's version now.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1219,2018-08-12T00:28:21Z,2018-08-12T23:12:39Z,2018-08-12T23:12:50Z,MERGED,True,370,236,16,https://github.com/captdeaf,Trigger inline (WIP),2,[],https://github.com/pennmush/pennmush/pull/1219,https://github.com/captdeaf,1,https://github.com/pennmush/pennmush/pull/1219,@trigger/inline - work in progress.,@trigger/inline - work in progress.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1220,2018-08-14T07:45:08Z,2018-08-14T16:06:09Z,2018-08-23T19:39:09Z,MERGED,True,319,275,10,https://github.com/captdeaf,Millisecond timing in bsd.c,2,[],https://github.com/pennmush/pennmush/pull/1220,https://github.com/captdeaf,1,https://github.com/pennmush/pennmush/pull/1220,"Millisecond timing in bsd.c for poll() and family.
Descriptor quota fixes and improvements
Adjust timer.c to use milliseconds.
Fixed msec_diff to actually return millisecond count.
Rearranging do_second(), every_second(), etc from cque and timer since they're not run every second.
Fixing queue_load_record to be aware it probably won't run every second.
Cleanup of timeval, slice timeout, and related math in bsd.c
Moved error and signal result checking in bsd.c into its own function for cleaner shovechars()
moved gettimeofday into utils.c and made generally available as penn_gettimeofday()
Add now_msecs(), only used by timer.c now but will be used by @wait/etc.","Millisecond timing in bsd.c for poll() and family.
Descriptor quota fixes and improvements
Adjust timer.c to use milliseconds.
Fixed msec_diff to actually return millisecond count.
Rearranging do_second(), every_second(), etc from cque and timer since they're not run every second.
Fixing queue_load_record to be aware it probably won't run every second.
Cleanup of timeval, slice timeout, and related math in bsd.c
Moved error and signal result checking in bsd.c into its own function for cleaner shovechars()
moved gettimeofday into utils.c and made generally available as penn_gettimeofday()
Add now_msecs(), only used by timer.c now but will be used by @wait/etc.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1224,2018-08-15T12:09:27Z,2018-08-16T23:52:47Z,2018-08-23T19:39:10Z,MERGED,True,540,537,20,https://github.com/captdeaf,"Single queue, and massive bsd.c rewrite",10,[],https://github.com/pennmush/pennmush/pull/1224,https://github.com/captdeaf,1,https://github.com/pennmush/pennmush/pull/1224,"WARNING! With the removal of the object queue, please be careful when upgrading that you do
not have any infinitely looping triggers without an @wait.
As an example, this used to be a common way to ensure something was executed once per second:

&everysecond object=do some ; updates ; @trigger me/everysecond

This will now happen, up to several thousand times per second! Make it @wait 1, and it'll run once/second!

A single command queue for players and objects. No more @trigger waits. [GM]
A restructuring of bsd.c, to make it easier to reason about Penn's queue cycle. [GM]

On the way to doing this:

cpu_timer_hit checks in atr_iter* and regexp loops (Ashen-Shugar can hang Penn for a full second w/ regrab on a single attr. Never mind max_attrs!)
Removal of active_q_chunk - I don't think it makes much sense to have it. Instead we just run queue_chunk every loop.","WARNING! With the removal of the object queue, please be careful when upgrading that you do
not have any infinitely looping triggers without an @wait.
As an example, this used to be a common way to ensure something was executed once per second:

&everysecond object=do some ; updates ; @trigger me/everysecond

This will now happen, up to several thousand times per second! Make it @wait 1, and it'll run once/second!

A single command queue for players and objects. No more @trigger waits. [GM]
A restructuring of bsd.c, to make it easier to reason about Penn's queue cycle. [GM]

On the way to doing this:

cpu_timer_hit checks in atr_iter* and regexp loops (Ashen-Shugar can hang Penn for a full second w/ regrab on a single attr. Never mind max_attrs!)
Removal of active_q_chunk - I don't think it makes much sense to have it. Instead we just run queue_chunk every loop.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1227,2018-08-19T00:52:00Z,2018-08-19T01:32:15Z,2018-08-23T19:39:11Z,MERGED,True,146,105,5,https://github.com/captdeaf,Fix 'help' command ,3,[],https://github.com/pennmush/pennmush/pull/1227,https://github.com/captdeaf,1,https://github.com/pennmush/pennmush/pull/1227,"Moving the new help/search feature to help/query, and making textsearch() and help/search easier and cross-mu* compatible.
Also added ""help helpfiles"", with details on help searching/etc.","Moving the new help/search feature to help/query, and making textsearch() and help/search easier and cross-mu* compatible.
Also added ""help helpfiles"", with details on help searching/etc.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1227,2018-08-19T00:52:00Z,2018-08-19T01:32:15Z,2018-08-23T19:39:11Z,MERGED,True,146,105,5,https://github.com/captdeaf,Fix 'help' command ,3,[],https://github.com/pennmush/pennmush/pull/1227,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1227#issuecomment-414095721,"Moving the new help/search feature to help/query, and making textsearch() and help/search easier and cross-mu* compatible.
Also added ""help helpfiles"", with details on help searching/etc.","Big +1 for patch. Though the line about 'Use help <pattern>' wants removing from 'help help' now, too).  I'd like to see some other minor help tweaks at some point, too (mainly putting the line stating it applies to news, etc, at the top of the file, and maybe expand to reference how to add help-like commands - or at least where to look in the server-side readmes to find that info, since it's rather in-depth in parts). Oh, also 'see also' for textentries(), etc. Other than that, go ahead and push.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1230,2018-08-22T23:04:06Z,2018-10-12T00:25:41Z,2018-10-12T00:25:41Z,MERGED,True,941,999,37,https://github.com/shawnw,PCRE1 to PCRE2,14,[],https://github.com/pennmush/pennmush/pull/1230,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1230,"Background: In 2015 or so, PCRE 8.X (AKA PCRE1) was put into bug-fix only mode, with all new PCRE development in 10.X and up (AKA PCRE2). Now, I've updated Penn to use the new version.
The good: The Unicode work is my biggest motivator, since PCRE is used in it to get information about characters if ICU isn't installed - PCRE1 only has character tables for Unicode 7, while PCRE2 is up to 10. The new version also has performance and match efficiency improvements, which would be nice to have. Among new features, the only one actually being used is that it has a way to compile wildcard patterns into regular expressions (Which can then be JIT compiled for really fast matching). This is something I've had in the back of my mind for ages, so it's nice to get that without actually having to do any work.
The bad & ugly: Since this version of the library is nowhere near as ubiquitous as PCRE1, and because some LTS OSes only have versions that are too old to provide that wildcard thing, and because people hate hate hate the idea of installing a new package in their OS anyways, it's bundled with Penn. And since I don't want to be responsible for maintaining a pruned down version (That didn't go well the last time due to the amount of work needed to update it), it's all there - documentation, tests, utility programs, etc. Unfortunately there's no easy to embed single file version like with sqlite. The size of the patch and the benefits being nice but not overwhelmingly so is why I'm holding off just merging it until I get a second opinion on if people think it's worth it.","Background: In 2015 or so, PCRE 8.X (AKA PCRE1) was put into bug-fix only mode, with all new PCRE development in 10.X and up (AKA PCRE2). Now, I've updated Penn to use the new version.
The good: The Unicode work is my biggest motivator, since PCRE is used in it to get information about characters if ICU isn't installed - PCRE1 only has character tables for Unicode 7, while PCRE2 is up to 10. The new version also has performance and match efficiency improvements, which would be nice to have. Among new features, the only one actually being used is that it has a way to compile wildcard patterns into regular expressions (Which can then be JIT compiled for really fast matching). This is something I've had in the back of my mind for ages, so it's nice to get that without actually having to do any work.
The bad & ugly: Since this version of the library is nowhere near as ubiquitous as PCRE1, and because some LTS OSes only have versions that are too old to provide that wildcard thing, and because people hate hate hate the idea of installing a new package in their OS anyways, it's bundled with Penn. And since I don't want to be responsible for maintaining a pruned down version (That didn't go well the last time due to the amount of work needed to update it), it's all there - documentation, tests, utility programs, etc. Unfortunately there's no easy to embed single file version like with sqlite. The size of the patch and the benefits being nice but not overwhelmingly so is why I'm holding off just merging it until I get a second opinion on if people think it's worth it.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1230,2018-08-22T23:04:06Z,2018-10-12T00:25:41Z,2018-10-12T00:25:41Z,MERGED,True,941,999,37,https://github.com/shawnw,PCRE1 to PCRE2,14,[],https://github.com/pennmush/pennmush/pull/1230,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1230#issuecomment-415546382,"Background: In 2015 or so, PCRE 8.X (AKA PCRE1) was put into bug-fix only mode, with all new PCRE development in 10.X and up (AKA PCRE2). Now, I've updated Penn to use the new version.
The good: The Unicode work is my biggest motivator, since PCRE is used in it to get information about characters if ICU isn't installed - PCRE1 only has character tables for Unicode 7, while PCRE2 is up to 10. The new version also has performance and match efficiency improvements, which would be nice to have. Among new features, the only one actually being used is that it has a way to compile wildcard patterns into regular expressions (Which can then be JIT compiled for really fast matching). This is something I've had in the back of my mind for ages, so it's nice to get that without actually having to do any work.
The bad & ugly: Since this version of the library is nowhere near as ubiquitous as PCRE1, and because some LTS OSes only have versions that are too old to provide that wildcard thing, and because people hate hate hate the idea of installing a new package in their OS anyways, it's bundled with Penn. And since I don't want to be responsible for maintaining a pruned down version (That didn't go well the last time due to the amount of work needed to update it), it's all there - documentation, tests, utility programs, etc. Unfortunately there's no easy to embed single file version like with sqlite. The size of the patch and the benefits being nice but not overwhelmingly so is why I'm holding off just merging it until I get a second opinion on if people think it's worth it.","Would it not be worth putting more work into unicode support first before bundling the lib for that purpose? While I can appreciate that bundling it complete, with all the docs, tests, utilities, etc, is a time-saver.. ergh.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1230,2018-08-22T23:04:06Z,2018-10-12T00:25:41Z,2018-10-12T00:25:41Z,MERGED,True,941,999,37,https://github.com/shawnw,PCRE1 to PCRE2,14,[],https://github.com/pennmush/pennmush/pull/1230,https://github.com/captdeaf,3,https://github.com/pennmush/pennmush/pull/1230#issuecomment-415547321,"Background: In 2015 or so, PCRE 8.X (AKA PCRE1) was put into bug-fix only mode, with all new PCRE development in 10.X and up (AKA PCRE2). Now, I've updated Penn to use the new version.
The good: The Unicode work is my biggest motivator, since PCRE is used in it to get information about characters if ICU isn't installed - PCRE1 only has character tables for Unicode 7, while PCRE2 is up to 10. The new version also has performance and match efficiency improvements, which would be nice to have. Among new features, the only one actually being used is that it has a way to compile wildcard patterns into regular expressions (Which can then be JIT compiled for really fast matching). This is something I've had in the back of my mind for ages, so it's nice to get that without actually having to do any work.
The bad & ugly: Since this version of the library is nowhere near as ubiquitous as PCRE1, and because some LTS OSes only have versions that are too old to provide that wildcard thing, and because people hate hate hate the idea of installing a new package in their OS anyways, it's bundled with Penn. And since I don't want to be responsible for maintaining a pruned down version (That didn't go well the last time due to the amount of work needed to update it), it's all there - documentation, tests, utility programs, etc. Unfortunately there's no easy to embed single file version like with sqlite. The size of the patch and the benefits being nice but not overwhelmingly so is why I'm holding off just merging it until I get a second opinion on if people think it's worth it.","Maybe include this in the unicode branch first, then 'release' it with unicode?
Is there any other benefit to including PCRE2 before we have real unicode support?",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1230,2018-08-22T23:04:06Z,2018-10-12T00:25:41Z,2018-10-12T00:25:41Z,MERGED,True,941,999,37,https://github.com/shawnw,PCRE1 to PCRE2,14,[],https://github.com/pennmush/pennmush/pull/1230,https://github.com/talvo,4,https://github.com/pennmush/pennmush/pull/1230#issuecomment-415555247,"Background: In 2015 or so, PCRE 8.X (AKA PCRE1) was put into bug-fix only mode, with all new PCRE development in 10.X and up (AKA PCRE2). Now, I've updated Penn to use the new version.
The good: The Unicode work is my biggest motivator, since PCRE is used in it to get information about characters if ICU isn't installed - PCRE1 only has character tables for Unicode 7, while PCRE2 is up to 10. The new version also has performance and match efficiency improvements, which would be nice to have. Among new features, the only one actually being used is that it has a way to compile wildcard patterns into regular expressions (Which can then be JIT compiled for really fast matching). This is something I've had in the back of my mind for ages, so it's nice to get that without actually having to do any work.
The bad & ugly: Since this version of the library is nowhere near as ubiquitous as PCRE1, and because some LTS OSes only have versions that are too old to provide that wildcard thing, and because people hate hate hate the idea of installing a new package in their OS anyways, it's bundled with Penn. And since I don't want to be responsible for maintaining a pruned down version (That didn't go well the last time due to the amount of work needed to update it), it's all there - documentation, tests, utility programs, etc. Unfortunately there's no easy to embed single file version like with sqlite. The size of the patch and the benefits being nice but not overwhelmingly so is why I'm holding off just merging it until I get a second opinion on if people think it's worth it.","If this should go in, we really need a slightly more detailed changelog entry to explain why a Penn install is now 20 times the size and 400 files larger; ""Updated PCRE version"" doesn't quite do it justice.
That being said, is bundling this really necessary? Why not add a pennmush/lib directory, stick instructions in for how to download the PCRE2 source into it (if it's not available on your system already), and have the build script check for and compile it there, if present? That way, Penn itself isn't ginormous from the bundling, keeping it up to date isn't our responsibility, and people running an OS that does provide it don't need to do anything extra anyway.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1230,2018-08-22T23:04:06Z,2018-10-12T00:25:41Z,2018-10-12T00:25:41Z,MERGED,True,941,999,37,https://github.com/shawnw,PCRE1 to PCRE2,14,[],https://github.com/pennmush/pennmush/pull/1230,https://github.com/shawnw,5,https://github.com/pennmush/pennmush/pull/1230#issuecomment-415562005,"Background: In 2015 or so, PCRE 8.X (AKA PCRE1) was put into bug-fix only mode, with all new PCRE development in 10.X and up (AKA PCRE2). Now, I've updated Penn to use the new version.
The good: The Unicode work is my biggest motivator, since PCRE is used in it to get information about characters if ICU isn't installed - PCRE1 only has character tables for Unicode 7, while PCRE2 is up to 10. The new version also has performance and match efficiency improvements, which would be nice to have. Among new features, the only one actually being used is that it has a way to compile wildcard patterns into regular expressions (Which can then be JIT compiled for really fast matching). This is something I've had in the back of my mind for ages, so it's nice to get that without actually having to do any work.
The bad & ugly: Since this version of the library is nowhere near as ubiquitous as PCRE1, and because some LTS OSes only have versions that are too old to provide that wildcard thing, and because people hate hate hate the idea of installing a new package in their OS anyways, it's bundled with Penn. And since I don't want to be responsible for maintaining a pruned down version (That didn't go well the last time due to the amount of work needed to update it), it's all there - documentation, tests, utility programs, etc. Unfortunately there's no easy to embed single file version like with sqlite. The size of the patch and the benefits being nice but not overwhelmingly so is why I'm holding off just merging it until I get a second opinion on if people think it's worth it.","The unicode branch uses the ICU library for most stuff, falling back on PCRE when possible if ICU isn't present (People hate having more mandatory dependencies, and it is way way way too big to directly include...). PCRE2 has support for more things than PCRE1 - for example, a big improvement is that it can do unicode-aware case mapping of strings, so it expands the fallback capabilities of the unicode version. Also with regards to ""more work into unicode support"" first, you can't build a house without a foundation. This falls into the foundation category - implementation of the core functionality everything else uses. This makes for a better foundation.


Asking people to download and install it themselves will be as popular as saying 'you need to install X library' ever is. Plus already mentioned problems with relying on potentially older system versions that don't support useful features.


I'd be good with merging it into the unicode-icu branch first instead of incrementally, but I think it's easier to do it as a standalone first.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1230,2018-08-22T23:04:06Z,2018-10-12T00:25:41Z,2018-10-12T00:25:41Z,MERGED,True,941,999,37,https://github.com/shawnw,PCRE1 to PCRE2,14,[],https://github.com/pennmush/pennmush/pull/1230,https://github.com/captdeaf,6,https://github.com/pennmush/pennmush/pull/1230#issuecomment-415563876,"Background: In 2015 or so, PCRE 8.X (AKA PCRE1) was put into bug-fix only mode, with all new PCRE development in 10.X and up (AKA PCRE2). Now, I've updated Penn to use the new version.
The good: The Unicode work is my biggest motivator, since PCRE is used in it to get information about characters if ICU isn't installed - PCRE1 only has character tables for Unicode 7, while PCRE2 is up to 10. The new version also has performance and match efficiency improvements, which would be nice to have. Among new features, the only one actually being used is that it has a way to compile wildcard patterns into regular expressions (Which can then be JIT compiled for really fast matching). This is something I've had in the back of my mind for ages, so it's nice to get that without actually having to do any work.
The bad & ugly: Since this version of the library is nowhere near as ubiquitous as PCRE1, and because some LTS OSes only have versions that are too old to provide that wildcard thing, and because people hate hate hate the idea of installing a new package in their OS anyways, it's bundled with Penn. And since I don't want to be responsible for maintaining a pruned down version (That didn't go well the last time due to the amount of work needed to update it), it's all there - documentation, tests, utility programs, etc. Unfortunately there's no easy to embed single file version like with sqlite. The size of the patch and the benefits being nice but not overwhelmingly so is why I'm holding off just merging it until I get a second opinion on if people think it's worth it.","What about making it a git submodule ?
Configure can detect if a workable version of pcre2 is installed system-wide. If it's not, then pull the git submodule, compile in-place, and go from there.
Also, I have no problems with people who complain that we may have external dependencies - so does every other package out there. Will there be grumbling? Probably, yes. But I care less about those grumbles than about ""We just quadrupled the size of our repo"" grumbling.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1230,2018-08-22T23:04:06Z,2018-10-12T00:25:41Z,2018-10-12T00:25:41Z,MERGED,True,941,999,37,https://github.com/shawnw,PCRE1 to PCRE2,14,[],https://github.com/pennmush/pennmush/pull/1230,https://github.com/shawnw,7,https://github.com/pennmush/pennmush/pull/1230#issuecomment-415565881,"Background: In 2015 or so, PCRE 8.X (AKA PCRE1) was put into bug-fix only mode, with all new PCRE development in 10.X and up (AKA PCRE2). Now, I've updated Penn to use the new version.
The good: The Unicode work is my biggest motivator, since PCRE is used in it to get information about characters if ICU isn't installed - PCRE1 only has character tables for Unicode 7, while PCRE2 is up to 10. The new version also has performance and match efficiency improvements, which would be nice to have. Among new features, the only one actually being used is that it has a way to compile wildcard patterns into regular expressions (Which can then be JIT compiled for really fast matching). This is something I've had in the back of my mind for ages, so it's nice to get that without actually having to do any work.
The bad & ugly: Since this version of the library is nowhere near as ubiquitous as PCRE1, and because some LTS OSes only have versions that are too old to provide that wildcard thing, and because people hate hate hate the idea of installing a new package in their OS anyways, it's bundled with Penn. And since I don't want to be responsible for maintaining a pruned down version (That didn't go well the last time due to the amount of work needed to update it), it's all there - documentation, tests, utility programs, etc. Unfortunately there's no easy to embed single file version like with sqlite. The size of the patch and the benefits being nice but not overwhelmingly so is why I'm holding off just merging it until I get a second opinion on if people think it's worth it.","pcre is hosted in a SVN repository, so unless git can work with that, no joy on submodules. And no, I don't want to set up and maintain a mirror of it.
Hmm. I wonder if I can just delete the documentation directories or files without the installer failing...",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1230,2018-08-22T23:04:06Z,2018-10-12T00:25:41Z,2018-10-12T00:25:41Z,MERGED,True,941,999,37,https://github.com/shawnw,PCRE1 to PCRE2,14,[],https://github.com/pennmush/pennmush/pull/1230,https://github.com/shawnw,8,https://github.com/pennmush/pennmush/pull/1230#issuecomment-415945232,"Background: In 2015 or so, PCRE 8.X (AKA PCRE1) was put into bug-fix only mode, with all new PCRE development in 10.X and up (AKA PCRE2). Now, I've updated Penn to use the new version.
The good: The Unicode work is my biggest motivator, since PCRE is used in it to get information about characters if ICU isn't installed - PCRE1 only has character tables for Unicode 7, while PCRE2 is up to 10. The new version also has performance and match efficiency improvements, which would be nice to have. Among new features, the only one actually being used is that it has a way to compile wildcard patterns into regular expressions (Which can then be JIT compiled for really fast matching). This is something I've had in the back of my mind for ages, so it's nice to get that without actually having to do any work.
The bad & ugly: Since this version of the library is nowhere near as ubiquitous as PCRE1, and because some LTS OSes only have versions that are too old to provide that wildcard thing, and because people hate hate hate the idea of installing a new package in their OS anyways, it's bundled with Penn. And since I don't want to be responsible for maintaining a pruned down version (That didn't go well the last time due to the amount of work needed to update it), it's all there - documentation, tests, utility programs, etc. Unfortunately there's no easy to embed single file version like with sqlite. The size of the patch and the benefits being nice but not overwhelmingly so is why I'm holding off just merging it until I get a second opinion on if people think it's worth it.","New version has configure downloads pcre2 source tarball as needed and unpack it, instead of being included in the Penn repository.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1231,2018-08-22T23:58:42Z,2018-08-23T19:28:38Z,2018-08-23T19:37:30Z,MERGED,True,23,3,5,https://github.com/captdeaf,Add --disable-socket-quota for unit tests,1,[],https://github.com/pennmush/pennmush/pull/1231,https://github.com/captdeaf,1,https://github.com/pennmush/pennmush/pull/1231,"For more details on socket quota, check GitHub issue #1221
Unit tests now run netmush with --disable-socket-quota, reducing 'make test'
run time from 6m22s to 42s","For more details on socket quota, check GitHub issue #1221
Unit tests now run netmush with --disable-socket-quota, reducing 'make test'
run time from 6m22s to 42s",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1231,2018-08-22T23:58:42Z,2018-08-23T19:28:38Z,2018-08-23T19:37:30Z,MERGED,True,23,3,5,https://github.com/captdeaf,Add --disable-socket-quota for unit tests,1,[],https://github.com/pennmush/pennmush/pull/1231,https://github.com/mike347,2,https://github.com/pennmush/pennmush/pull/1231#issuecomment-415230804,"For more details on socket quota, check GitHub issue #1221
Unit tests now run netmush with --disable-socket-quota, reducing 'make test'
run time from 6m22s to 42s",Looks good to me.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1234,2018-08-31T03:03:18Z,2018-09-13T00:48:40Z,2018-09-13T00:48:40Z,MERGED,True,18,4,3,https://github.com/shawnw,Improve handling of libcurl requests,2,[],https://github.com/pennmush/pennmush/pull/1234,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1234,"See discussion on issue #1232
Uses 60 second timeouts.","See discussion on issue #1232
Uses 60 second timeouts.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1236,2018-09-02T19:30:15Z,,2018-10-17T01:28:54Z,OPEN,False,57,0,4,https://github.com/captdeaf,Add deprecation warning to bad uses of lit(),1,[],https://github.com/pennmush/pennmush/pull/1236,https://github.com/captdeaf,1,https://github.com/pennmush/pennmush/pull/1236,"I'd really like to rewrite the parser and make its uses cleaner. FN_LITERAL, which is only used by lit(), is a big pain in my posterior because of how it alters the parser.
I'd like to switch lit() from FN_LITERAL to FN_NOPARSE. This PR is a first step - if lit() is called with mismatched, unescaped {}s or []s, this will simply warn executor and enactor.","I'd really like to rewrite the parser and make its uses cleaner. FN_LITERAL, which is only used by lit(), is a big pain in my posterior because of how it alters the parser.
I'd like to switch lit() from FN_LITERAL to FN_NOPARSE. This PR is a first step - if lit() is called with mismatched, unescaped {}s or []s, this will simply warn executor and enactor.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1236,2018-09-02T19:30:15Z,,2018-10-17T01:28:54Z,OPEN,False,57,0,4,https://github.com/captdeaf,Add deprecation warning to bad uses of lit(),1,[],https://github.com/pennmush/pennmush/pull/1236,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1236#issuecomment-417954343,"I'd really like to rewrite the parser and make its uses cleaner. FN_LITERAL, which is only used by lit(), is a big pain in my posterior because of how it alters the parser.
I'd like to switch lit() from FN_LITERAL to FN_NOPARSE. This PR is a first step - if lit() is called with mismatched, unescaped {}s or []s, this will simply warn executor and enactor.","This is still a no from me, even if you write it as a PR instead of a ticket :P",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1237,2018-09-03T05:21:22Z,2018-09-13T00:48:02Z,2018-09-13T00:48:02Z,MERGED,True,5909,248,13,https://github.com/shawnw,Externalizing the list of named colors,6,[],https://github.com/pennmush/pennmush/pull/1237,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1237,"Previously, the list of known colors was kept in an array of a bunch of overly long and unreadable JSON strings in hdrs/rgb.h and loaded into a database on startup. With this patch, the list is kept in an external nicely-formatted JSON file and still loaded at startup.
This makes it easier for anybody who wants to customize colors for their game do so, and shrinks the executable size a bit.
A side effect is a new function to map a file into memory. I have some vague ideas about further uses for that (chunkswap file improvements, cached text files, etc.)...","Previously, the list of known colors was kept in an array of a bunch of overly long and unreadable JSON strings in hdrs/rgb.h and loaded into a database on startup. With this patch, the list is kept in an external nicely-formatted JSON file and still loaded at startup.
This makes it easier for anybody who wants to customize colors for their game do so, and shrinks the executable size a bit.
A side effect is a new function to map a file into memory. I have some vague ideas about further uses for that (chunkswap file improvements, cached text files, etc.)...",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1237,2018-09-03T05:21:22Z,2018-09-13T00:48:02Z,2018-09-13T00:48:02Z,MERGED,True,5909,248,13,https://github.com/shawnw,Externalizing the list of named colors,6,[],https://github.com/pennmush/pennmush/pull/1237,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1237#issuecomment-418019904,"Previously, the list of known colors was kept in an array of a bunch of overly long and unreadable JSON strings in hdrs/rgb.h and loaded into a database on startup. With this patch, the list is kept in an external nicely-formatted JSON file and still loaded at startup.
This makes it easier for anybody who wants to customize colors for their game do so, and shrinks the executable size a bit.
A side effect is a new function to map a file into memory. I have some vague ideas about further uses for that (chunkswap file improvements, cached text files, etc.)...","Changes since original:

RGB color codes are stored as hex strings in the json file instead of base-10 integers, making them more readable.
Rewrote fcache_read() to use the new map_file() function, shrinking and simplifying it considerably.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1239,2018-09-10T07:43:31Z,2018-09-12T01:27:02Z,2018-09-12T01:30:11Z,MERGED,True,3,3,1,https://github.com/Powerthegreat,Update README-Windows10.txt,1,[],https://github.com/pennmush/pennmush/pull/1239,https://github.com/Powerthegreat,1,https://github.com/pennmush/pennmush/pull/1239,"There's been an update to PennMUSH, 1.8.7p0.
Also the numbering on the steps was interesting.","There's been an update to PennMUSH, 1.8.7p0.
Also the numbering on the steps was interesting.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1240,2018-09-13T01:20:08Z,2018-09-16T06:45:53Z,2018-09-16T06:45:53Z,MERGED,True,4,69,7,https://github.com/shawnw,Remove WITHOUT_WEBSOCKETS tests. Closes #1235,1,[],https://github.com/pennmush/pennmush/pull/1240,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1240,See title and #1235 discussion.,See title and #1235 discussion.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1242,2018-09-13T01:45:56Z,2018-09-16T22:03:56Z,2018-09-16T22:03:56Z,MERGED,True,14,13,1,https://github.com/shawnw,Rewrite penn_mysql_free_sql_query to avoid a possible infinite loop.,1,[],https://github.com/pennmush/pennmush/pull/1242,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1242,"I'm still not sure if it'll actually fix the issue in #1177 but the existing code is dumb and this fixes that.
(Need to test on M*U*S*H before actually merging)","I'm still not sure if it'll actually fix the issue in #1177 but the existing code is dumb and this fixes that.
(Need to test on M*U*S*H before actually merging)",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1243,2018-09-14T03:50:50Z,2018-09-16T22:10:12Z,2018-09-16T22:10:12Z,MERGED,True,927,97,44,https://github.com/shawnw,Hardcode Tests,9,[],https://github.com/pennmush/pennmush/pull/1243,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1243,"Adds a basic hardcode test suite per #1238 and cleans up the softcode test suite a bit.
See test/README.md for details about the new stuff, and examples in src/parse.c.","Adds a basic hardcode test suite per #1238 and cleans up the softcode test suite a bit.
See test/README.md for details about the new stuff, and examples in src/parse.c.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1244,2018-09-16T01:02:25Z,2018-09-23T01:11:56Z,2018-11-09T05:11:20Z,MERGED,True,28872,21334,10,https://github.com/shawnw,Sqlite 3.25 Update,6,[],https://github.com/pennmush/pennmush/pull/1244,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1244,"Upgrade from 3.24 to 3.25. Changes include bug fixes, optimization improvements, and sql window functions.
The code for generating help entries pages has been updated to use the new window functions, which makes it much more clean and elegant (Not to mention shorter).","Upgrade from 3.24 to 3.25. Changes include bug fixes, optimization improvements, and sql window functions.
The code for generating help entries pages has been updated to use the new window functions, which makes it much more clean and elegant (Not to mention shorter).",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1244,2018-09-16T01:02:25Z,2018-09-23T01:11:56Z,2018-11-09T05:11:20Z,MERGED,True,28872,21334,10,https://github.com/shawnw,Sqlite 3.25 Update,6,[],https://github.com/pennmush/pennmush/pull/1244,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1244#issuecomment-422183841,"Upgrade from 3.24 to 3.25. Changes include bug fixes, optimization improvements, and sql window functions.
The code for generating help entries pages has been updated to use the new window functions, which makes it much more clean and elegant (Not to mention shorter).",On hold for a few days. A few critical bugs in 3.25 were found (Including one by yours truly) so now waiting for sqlite 3.25.1 to drop. Plus there's a few minor portability/stability enhancements I want to roll into the pr.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1247,2018-09-21T00:48:37Z,2018-09-23T00:53:22Z,2018-09-23T00:53:22Z,MERGED,True,32,27,5,https://github.com/shawnw,Add function to set close-on-exec flag on descriptors.,2,[],https://github.com/pennmush/pennmush/pull/1247,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1247,"Use it in a few places instead of current inlined setting code, and now
in @http requests. Closes #1246
Tested on MUSH.","Use it in a few places instead of current inlined setting code, and now
in @http requests. Closes #1246
Tested on MUSH.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1248,2018-09-23T01:01:25Z,2018-09-27T16:40:55Z,2018-09-27T16:40:55Z,MERGED,True,26,6,3,https://github.com/shawnw,Make lattrp() behave like 1.8.6 again.,3,[],https://github.com/pennmush/pennmush/pull/1248,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1248,Fixes #1233,Fixes #1233,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1249,2018-09-24T23:21:24Z,2018-09-30T19:59:34Z,2018-09-30T19:59:34Z,MERGED,True,231,153,12,https://github.com/shawnw,Log fixups,7,[],https://github.com/pennmush/pennmush/pull/1249,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1249,"Improves logging a bit -- changes the timestamps to be less US-centric, and adds timestamps/etc. to a lot more logged messages.","Improves logging a bit -- changes the timestamps to be less US-centric, and adds timestamps/etc. to a lot more logged messages.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1251,2018-09-29T04:58:51Z,2018-09-30T19:59:18Z,2018-09-30T19:59:18Z,MERGED,True,24,5,4,https://github.com/shawnw,Fix a bug passing an invalid pointer to sqlite3_exec,1,[],https://github.com/pennmush/pennmush/pull/1251,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1251,(Introduced in sqlite-325 branch) Fixes #1250,(Introduced in sqlite-325 branch) Fixes #1250,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1253,2018-10-01T05:20:40Z,2018-10-03T23:07:34Z,2018-10-03T23:07:34Z,MERGED,True,11,6,3,https://github.com/shawnw,Fix recursive calls to json_map(). Closes #1252,1,[],https://github.com/pennmush/pennmush/pull/1253,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1253,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1258,2018-10-17T07:02:12Z,2018-10-21T05:05:29Z,2018-10-21T05:05:29Z,MERGED,True,22,21,6,https://github.com/shawnw,Fd leaks,2,['bug'],https://github.com/pennmush/pennmush/pull/1258,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1258,"Every reboot was leaking 3 open file descriptors the new image was unaware of. One our fault, 2 OpenSSL's fault.","Every reboot was leaking 3 open file descriptors the new image was unaware of. One our fault, 2 OpenSSL's fault.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1259,2018-10-20T16:56:17Z,2018-10-31T03:33:46Z,2018-10-31T03:33:46Z,MERGED,True,5,1,1,https://github.com/grapenut,Add loginfail event for connection attempts with no name given,3,[],https://github.com/pennmush/pennmush/pull/1259,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1259,"Adds a SOCKET`LOGINFAIL event for connection attempts that don't include a name/password, e.g. just typing connect. The use case for this is a login form on the web client. If your login attempt fails, it pops the login form back up and says try again. It does this just fine when you submit the incorrect username or password, but there was an early exit condition with no event queued when the name was blank.
Uses the same event queue arguments as the ""invalid player"" loginfail event, with a blank string in place of the last argument for name.","Adds a SOCKET`LOGINFAIL event for connection attempts that don't include a name/password, e.g. just typing connect. The use case for this is a login form on the web client. If your login attempt fails, it pops the login form back up and says try again. It does this just fine when you submit the incorrect username or password, but there was an early exit condition with no event queued when the name was blank.
Uses the same event queue arguments as the ""invalid player"" loginfail event, with a blank string in place of the last argument for name.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1259,2018-10-20T16:56:17Z,2018-10-31T03:33:46Z,2018-10-31T03:33:46Z,MERGED,True,5,1,1,https://github.com/grapenut,Add loginfail event for connection attempts with no name given,3,[],https://github.com/pennmush/pennmush/pull/1259,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1259#issuecomment-431604464,"Adds a SOCKET`LOGINFAIL event for connection attempts that don't include a name/password, e.g. just typing connect. The use case for this is a login form on the web client. If your login attempt fails, it pops the login form back up and says try again. It does this just fine when you submit the incorrect username or password, but there was an early exit condition with no event queued when the name was blank.
Uses the same event queue arguments as the ""invalid player"" loginfail event, with a blank string in place of the last argument for name.","I don't think this should mark_failed, personally.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1259,2018-10-20T16:56:17Z,2018-10-31T03:33:46Z,2018-10-31T03:33:46Z,MERGED,True,5,1,1,https://github.com/grapenut,Add loginfail event for connection attempts with no name given,3,[],https://github.com/pennmush/pennmush/pull/1259,https://github.com/grapenut,3,https://github.com/pennmush/pennmush/pull/1259#issuecomment-431606048,"Adds a SOCKET`LOGINFAIL event for connection attempts that don't include a name/password, e.g. just typing connect. The use case for this is a login form on the web client. If your login attempt fails, it pops the login form back up and says try again. It does this just fine when you submit the incorrect username or password, but there was an early exit condition with no event queued when the name was blank.
Uses the same event queue arguments as the ""invalid player"" loginfail event, with a blank string in place of the last argument for name.",I agree. Locked myself out for 10 minutes while testing. Fixed it to just report the current count_failed(ip).,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1260,2018-10-21T03:43:39Z,2018-10-31T03:31:42Z,2018-10-31T03:31:42Z,MERGED,True,3,25,2,https://github.com/grapenut,Modify real_unparse() to pueblo wrap the look command instead of examine,4,[],https://github.com/pennmush/pennmush/pull/1260,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1260,"This changes real_unparse() in unparse.c to use the look command instead of the examine command for wrapping pueblo links around object names, e.g. in your inventory or the contents of a room.
It's silly to have so many links on the screen to examine objects that you probably don't have permission to examine anyway. You can always look at anything, and that's far more likely the action you'd want to take when clicking the name from a list anyway.
This lets us remove the extra double link in look_contents() from look.c as well. Previously it was wrapped in both a look and examine command.","This changes real_unparse() in unparse.c to use the look command instead of the examine command for wrapping pueblo links around object names, e.g. in your inventory or the contents of a room.
It's silly to have so many links on the screen to examine objects that you probably don't have permission to examine anyway. You can always look at anything, and that's far more likely the action you'd want to take when clicking the name from a list anyway.
This lets us remove the extra double link in look_contents() from look.c as well. Previously it was wrapped in both a look and examine command.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1260,2018-10-21T03:43:39Z,2018-10-31T03:31:42Z,2018-10-31T03:31:42Z,MERGED,True,3,25,2,https://github.com/grapenut,Modify real_unparse() to pueblo wrap the look command instead of examine,4,[],https://github.com/pennmush/pennmush/pull/1260,https://github.com/grapenut,2,https://github.com/pennmush/pennmush/pull/1260#issuecomment-431637175,"This changes real_unparse() in unparse.c to use the look command instead of the examine command for wrapping pueblo links around object names, e.g. in your inventory or the contents of a room.
It's silly to have so many links on the screen to examine objects that you probably don't have permission to examine anyway. You can always look at anything, and that's far more likely the action you'd want to take when clicking the name from a list anyway.
This lets us remove the extra double link in look_contents() from look.c as well. Previously it was wrapped in both a look and examine command.","While we're at it, I would like to remove all of the UL/LI tags. They are hideous and make things look awkward.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1261,2018-10-22T22:17:30Z,2018-10-23T22:08:12Z,2018-10-23T22:08:12Z,MERGED,True,147,16,4,https://github.com/shawnw,Misc windows fixes,4,[],https://github.com/pennmush/pennmush/pull/1261,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1261,Fixes a bunch of small Windows things and improvements for pcre2 jit stuff.,Fixes a bunch of small Windows things and improvements for pcre2 jit stuff.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1263,2018-10-27T05:23:18Z,2018-11-12T05:13:33Z,2018-11-12T05:13:33Z,MERGED,True,15,2,2,https://github.com/grapenut,Safely encode ANSI in JSON strings.,2,[],https://github.com/pennmush/pennmush/pull/1263,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1263,"EDIT: This does not enable you to embed ANSI escape sequences. It encodes the ANSI escape character into a printable Unicode backslash-encoding. These encodings are not interpreted by the MUSH in anyway, they are just normal strings of URL-safe printable characters. The encodings are only converted back to ANSI escape if the client parses them and chooses to do that.
This PR enables ANSI encoded strings in JSON objects.  The changes are enumerated below:

Remove FN_STRIPANSI from the softcode declaration for json().
Manually strip ANSI from all args unless we're making a JSON string.
Render the internal markup to ANSI and immediately pass to json_escape_string() which re-encodes the escape sequences as printable characters.

With this change the code json(string,ansi(r,red)) returns ""\u001b[31mred\u001b[0m"" where ""\u001b"" is a string, not a literal \x1b escape character. Using other JSON types still strips ANSI, so something like json(number,ansi(r,1)) returns 1 as expected.
A particular use case of this is passing the contents of an @mail through JSON to the web client. It would also be useful for passing any other pre-rendered ANSI strings (bbposts, channels, $-commands). Tested and confirmed working under Chrome's JSON.parse() implementation.","EDIT: This does not enable you to embed ANSI escape sequences. It encodes the ANSI escape character into a printable Unicode backslash-encoding. These encodings are not interpreted by the MUSH in anyway, they are just normal strings of URL-safe printable characters. The encodings are only converted back to ANSI escape if the client parses them and chooses to do that.
This PR enables ANSI encoded strings in JSON objects.  The changes are enumerated below:

Remove FN_STRIPANSI from the softcode declaration for json().
Manually strip ANSI from all args unless we're making a JSON string.
Render the internal markup to ANSI and immediately pass to json_escape_string() which re-encodes the escape sequences as printable characters.

With this change the code json(string,ansi(r,red)) returns ""\u001b[31mred\u001b[0m"" where ""\u001b"" is a string, not a literal \x1b escape character. Using other JSON types still strips ANSI, so something like json(number,ansi(r,1)) returns 1 as expected.
A particular use case of this is passing the contents of an @mail through JSON to the web client. It would also be useful for passing any other pre-rendered ANSI strings (bbposts, channels, $-commands). Tested and confirmed working under Chrome's JSON.parse() implementation.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1263,2018-10-27T05:23:18Z,2018-11-12T05:13:33Z,2018-11-12T05:13:33Z,MERGED,True,15,2,2,https://github.com/grapenut,Safely encode ANSI in JSON strings.,2,[],https://github.com/pennmush/pennmush/pull/1263,https://github.com/grapenut,2,https://github.com/pennmush/pennmush/pull/1263#issuecomment-434554637,"EDIT: This does not enable you to embed ANSI escape sequences. It encodes the ANSI escape character into a printable Unicode backslash-encoding. These encodings are not interpreted by the MUSH in anyway, they are just normal strings of URL-safe printable characters. The encodings are only converted back to ANSI escape if the client parses them and chooses to do that.
This PR enables ANSI encoded strings in JSON objects.  The changes are enumerated below:

Remove FN_STRIPANSI from the softcode declaration for json().
Manually strip ANSI from all args unless we're making a JSON string.
Render the internal markup to ANSI and immediately pass to json_escape_string() which re-encodes the escape sequences as printable characters.

With this change the code json(string,ansi(r,red)) returns ""\u001b[31mred\u001b[0m"" where ""\u001b"" is a string, not a literal \x1b escape character. Using other JSON types still strips ANSI, so something like json(number,ansi(r,1)) returns 1 as expected.
A particular use case of this is passing the contents of an @mail through JSON to the web client. It would also be useful for passing any other pre-rendered ANSI strings (bbposts, channels, $-commands). Tested and confirmed working under Chrome's JSON.parse() implementation.","In case it was not clear in the original post, this does not embed ANSI escape sequences in the JSON strings. It embeds a string that represents the escape character encoding. So instead of inserting a single character with value 0x1B, it inserts a string ""\u001b"". It is NOT possible to use this as a method for accessing ANSI sequences directly, e.g. by splicing the string, because it only embeds printable characters.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1264,2018-10-28T12:17:11Z,2018-10-31T03:37:11Z,2018-10-31T03:37:11Z,MERGED,True,34,20,1,https://github.com/grapenut,Allow oob() to send to multiple players.,1,[],https://github.com/pennmush/pennmush/pull/1264,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1264,"This PR modifies FUNCTION(fun_oob) to allow it to send it's package to multiple players. It uses the same logic from FUNCTION(fun_pemit) and do_pemit() to parse the player list, and keeps the existing OOB logic for looking up players and determining permissions.
The error return messages were slightly modified. Instead of having separate #-1 errors for player not found and permission denied, there is one combined error for #-1 NO VALID PLAYERS. This error occurs at the end if there is both a failure (invalid player, invalid permissions), and the number of successes is 0. If there are 0 failures or more than 0 successes, then it returns the number of successes (even if that number is 0).","This PR modifies FUNCTION(fun_oob) to allow it to send it's package to multiple players. It uses the same logic from FUNCTION(fun_pemit) and do_pemit() to parse the player list, and keeps the existing OOB logic for looking up players and determining permissions.
The error return messages were slightly modified. Instead of having separate #-1 errors for player not found and permission denied, there is one combined error for #-1 NO VALID PLAYERS. This error occurs at the end if there is both a failure (invalid player, invalid permissions), and the number of successes is 0. If there are 0 failures or more than 0 successes, then it returns the number of successes (even if that number is 0).",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1265,2018-10-29T03:12:02Z,2018-10-31T03:30:23Z,2018-10-31T03:30:23Z,MERGED,True,33,21,3,https://github.com/grapenut,Add JSON to HELP FUNCTION LIST and add HELP JSON FUNCTIONS,1,[],https://github.com/pennmush/pennmush/pull/1265,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1265,"This PR adds JSON functions to HELP FUNCTION LIST, and the HELP JSON FUNCTIONS entry that lists all JSON functions together. It also fixes a few minor capitalization style inconsistencies in the same files and for WebSockets.","This PR adds JSON functions to HELP FUNCTION LIST, and the HELP JSON FUNCTIONS entry that lists all JSON functions together. It also fixes a few minor capitalization style inconsistencies in the same files and for WebSockets.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1266,2018-10-31T03:28:28Z,2018-11-12T05:09:25Z,2018-11-12T05:09:25Z,MERGED,True,381,209,4,https://github.com/shawnw,Autoconf fixes,6,[],https://github.com/pennmush/pennmush/pull/1266,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1266,"Assorted fixes and portability tweaks, mostly thanks to Oleo testing a bit on an AIX system.","Assorted fixes and portability tweaks, mostly thanks to Oleo testing a bit on an AIX system.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1268,2018-11-12T04:48:25Z,2018-11-22T23:24:26Z,2020-06-02T07:42:56Z,MERGED,True,211,137,12,https://github.com/shawnw,Sqlite 325,3,[],https://github.com/pennmush/pennmush/pull/1268,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1268,"Updates bundled sqlite to 3.25.3, plus some minor bug fixes and better error messages on sqlite errors.","Updates bundled sqlite to 3.25.3, plus some minor bug fixes and better error messages on sqlite errors.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1269,2018-11-12T07:23:13Z,2018-11-22T23:24:57Z,2018-11-22T23:24:57Z,MERGED,True,44,16,3,https://github.com/shawnw,Allow chatformat/mogrifiers to detect a noisy/silent cemit,2,[],https://github.com/pennmush/pennmush/pull/1269,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1269,"As suggested in #1267, uses %7 for this in chatformat and channel mogrifiers- it's silent if used with a quiet @cemit, otherwise noisy. Also sets %6 to the say string for all mogrifiers, not just format because why not.","As suggested in #1267, uses %7 for this in chatformat and channel mogrifiers- it's silent if used with a quiet @cemit, otherwise noisy. Also sets %6 to the say string for all mogrifiers, not just format because why not.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1269,2018-11-12T07:23:13Z,2018-11-22T23:24:57Z,2018-11-22T23:24:57Z,MERGED,True,44,16,3,https://github.com/shawnw,Allow chatformat/mogrifiers to detect a noisy/silent cemit,2,[],https://github.com/pennmush/pennmush/pull/1269,https://github.com/talvo,2,https://github.com/pennmush/pennmush/pull/1269#issuecomment-437788830,"As suggested in #1267, uses %7 for this in chatformat and channel mogrifiers- it's silent if used with a quiet @cemit, otherwise noisy. Also sets %6 to the say string for all mogrifiers, not just format because why not.","The help for this should specify that %7 is a list containing silent or noisy, so we can expand it in future if we wish without having everyone complain they're using strmatch(%7,noisy) on it.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1269,2018-11-12T07:23:13Z,2018-11-22T23:24:57Z,2018-11-22T23:24:57Z,MERGED,True,44,16,3,https://github.com/shawnw,Allow chatformat/mogrifiers to detect a noisy/silent cemit,2,[],https://github.com/pennmush/pennmush/pull/1269,https://github.com/shawnw,3,https://github.com/pennmush/pennmush/pull/1269#issuecomment-437791111,"As suggested in #1267, uses %7 for this in chatformat and channel mogrifiers- it's silent if used with a quiet @cemit, otherwise noisy. Also sets %6 to the say string for all mogrifiers, not just format because why not.",Done.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1272,2018-12-02T09:07:01Z,,2020-04-16T20:12:38Z,OPEN,False,88,4,5,https://github.com/shawnw,Add strdistance() function.,1,[],https://github.com/pennmush/pennmush/pull/1272,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1272,"Returns the edit distance between two strings.
Function name, syntax, and most of the help file stolen shamelessly from Rhost.","Returns the edit distance between two strings.
Function name, syntax, and most of the help file stolen shamelessly from Rhost.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1273,2018-12-03T01:02:25Z,2019-04-03T01:38:01Z,2019-04-03T01:38:01Z,MERGED,True,48,5,4,https://github.com/grapenut,Option to use a static HTML file instead of the hardcoded MUDURL redirect.,1,[],https://github.com/pennmush/pennmush/pull/1273,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1273,"This PR adds a configuration option 'index_html_file' which is commented out by default in mushcnf.dst. Setting the option to the path name of a static HTML file (game/txt/index.html by default) allows the game to use it as the default response for HTTP requests instead of the hardcoded redirect to MUDURL. If the option is blank or the file does not exist, we fall back to the original hardcoded redirect page. This uses the existing fcache_*() functions that are already used to load and serve up files like connect.txt/connect.html. This allows a game administrator to use a nicer redirect page or serve a small index.html for a web client that loads additional assets from the main website.","This PR adds a configuration option 'index_html_file' which is commented out by default in mushcnf.dst. Setting the option to the path name of a static HTML file (game/txt/index.html by default) allows the game to use it as the default response for HTTP requests instead of the hardcoded redirect to MUDURL. If the option is blank or the file does not exist, we fall back to the original hardcoded redirect page. This uses the existing fcache_*() functions that are already used to load and serve up files like connect.txt/connect.html. This allows a game administrator to use a nicer redirect page or serve a small index.html for a web client that loads additional assets from the main website.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1273,2018-12-03T01:02:25Z,2019-04-03T01:38:01Z,2019-04-03T01:38:01Z,MERGED,True,48,5,4,https://github.com/grapenut,Option to use a static HTML file instead of the hardcoded MUDURL redirect.,1,[],https://github.com/pennmush/pennmush/pull/1273,https://github.com/grapenut,2,https://github.com/pennmush/pennmush/pull/1273#issuecomment-443583026,"This PR adds a configuration option 'index_html_file' which is commented out by default in mushcnf.dst. Setting the option to the path name of a static HTML file (game/txt/index.html by default) allows the game to use it as the default response for HTTP requests instead of the hardcoded redirect to MUDURL. If the option is blank or the file does not exist, we fall back to the original hardcoded redirect page. This uses the existing fcache_*() functions that are already used to load and serve up files like connect.txt/connect.html. This allows a game administrator to use a nicer redirect page or serve a small index.html for a web client that loads additional assets from the main website.","Here is an example in action with a custom index.html that loads the MUSH Portal web client. You can either point your favorite MUSH client to node.grapenut.org:8000 like normal, or point your browser to http://node.grapenut.org:8000 to the get custom index.html that loads all of the web client assets from the public mushportal.com server.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1277,2019-01-16T11:48:19Z,2019-01-17T08:52:53Z,2020-06-02T07:42:53Z,MERGED,True,74,60,3,https://github.com/shawnw,Update cJSON source to 1.7.10,1,[],https://github.com/pennmush/pennmush/pull/1277,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1277,Minor updates.,Minor updates.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1280,2019-01-27T14:26:21Z,2019-03-15T23:31:05Z,2019-03-15T23:31:05Z,MERGED,True,0,944,12,https://github.com/shawnw,Remove long non-functional VS2010 project files.,1,[],https://github.com/pennmush/pennmush/pull/1280,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1280,Gets rid of some bitrot.,Gets rid of some bitrot.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1284,2019-02-10T12:43:02Z,2019-02-10T17:40:23Z,2019-02-10T19:54:01Z,CLOSED,False,513,488,4,https://github.com/mike347,Add NOQUOTA sockset option.,1,[],https://github.com/pennmush/pennmush/pull/1284,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1284,"Adds NOQUOTA @sockset command.
Persists --disable-socket-quota command line option through reboots.
Closes #1275
I'm 50/50 on the whole NOQUOTA versus refreshing max quota every refresh. I feel like this is the safer way, but open to changing it to just ignore the quota entirely.
Mike/Raev?","Adds NOQUOTA @sockset command.
Persists --disable-socket-quota command line option through reboots.
Closes #1275
I'm 50/50 on the whole NOQUOTA versus refreshing max quota every refresh. I feel like this is the safer way, but open to changing it to just ignore the quota entirely.
Mike/Raev?",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1284,2019-02-10T12:43:02Z,2019-02-10T17:40:23Z,2019-02-10T19:54:01Z,CLOSED,False,513,488,4,https://github.com/mike347,Add NOQUOTA sockset option.,1,[],https://github.com/pennmush/pennmush/pull/1284,https://github.com/grapenut,2,https://github.com/pennmush/pennmush/pull/1284#issuecomment-462152698,"Adds NOQUOTA @sockset command.
Persists --disable-socket-quota command line option through reboots.
Closes #1275
I'm 50/50 on the whole NOQUOTA versus refreshing max quota every refresh. I feel like this is the safer way, but open to changing it to just ignore the quota entirely.
Mike/Raev?","Looks good to me, though there are a bunch of changes to whitespace in the help file diff.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1284,2019-02-10T12:43:02Z,2019-02-10T17:40:23Z,2019-02-10T19:54:01Z,CLOSED,False,513,488,4,https://github.com/mike347,Add NOQUOTA sockset option.,1,[],https://github.com/pennmush/pennmush/pull/1284,https://github.com/mrsenile,3,https://github.com/pennmush/pennmush/pull/1284#issuecomment-462166131,"Adds NOQUOTA @sockset command.
Persists --disable-socket-quota command line option through reboots.
Closes #1275
I'm 50/50 on the whole NOQUOTA versus refreshing max quota every refresh. I feel like this is the safer way, but open to changing it to just ignore the quota entirely.
Mike/Raev?","What I did was this.
Allow upping the quota on a socket and not refreshing/incrementing the quota as long as the set quota was greater than the MAX quota on the socket.
Then once it dropped below the MAX quota it regenerated as normal.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1286,2019-02-19T21:56:47Z,2019-02-20T00:39:42Z,2020-06-02T07:42:49Z,MERGED,True,6704,3908,4,https://github.com/shawnw,Update sqlite to 3.27.1,1,[],https://github.com/pennmush/pennmush/pull/1286,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1286,See title.,See title.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1288,2019-03-03T12:55:40Z,2019-03-15T23:30:16Z,2019-03-15T23:30:16Z,MERGED,True,26,2,4,https://github.com/mike347,Noquota PR ,2,[],https://github.com/pennmush/pennmush/pull/1288,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1288,"Same as before, with a proper flag bit.. and without the whitespace changes.
Closes #1275","Same as before, with a proper flag bit.. and without the whitespace changes.
Closes #1275",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1290,2019-03-07T21:52:40Z,2019-03-07T23:04:06Z,2019-03-07T23:04:06Z,MERGED,True,1,1,1,https://github.com/grapenut,Change fixed width format for names in dump_users(),1,[],https://github.com/pennmush/pennmush/pull/1290,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1290,The printf format for names in bsd.c: dump_users() was using a fixed width '%16.16s' format even though monikers with ansi may have more than 16 characters with unprintable ansi codes. Changed the format to '%s' since we are manually padding with spaces up to 16.,The printf format for names in bsd.c: dump_users() was using a fixed width '%16.16s' format even though monikers with ansi may have more than 16 characters with unprintable ansi codes. Changed the format to '%s' since we are manually padding with spaces up to 16.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1290,2019-03-07T21:52:40Z,2019-03-07T23:04:06Z,2019-03-07T23:04:06Z,MERGED,True,1,1,1,https://github.com/grapenut,Change fixed width format for names in dump_users(),1,[],https://github.com/pennmush/pennmush/pull/1290,https://github.com/grapenut,2,https://github.com/pennmush/pennmush/pull/1290#issuecomment-470709536,The printf format for names in bsd.c: dump_users() was using a fixed width '%16.16s' format even though monikers with ansi may have more than 16 characters with unprintable ansi codes. Changed the format to '%s' since we are manually padding with spaces up to 16.,Fixes issue #1289,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1291,2019-03-08T21:47:41Z,2019-03-22T02:52:45Z,2019-03-22T02:52:45Z,MERGED,True,94,27,11,https://github.com/grapenut,Add optional config ssl_certificate_file,3,[],https://github.com/pennmush/pennmush/pull/1291,https://github.com/grapenut,1,https://github.com/pennmush/pennmush/pull/1291,"This adds a new configuration file option called ssl_certificate_file which should be set to the SSL certificate file. This allows the user to split their private key and certificates into separate files so that they can be easily symlinked back to the master certificate files (e.g. in /etc/). For backwards compatibility you can still concatenate them together and reference the combined file with ssl_private_key_file as before. For robustness (in case users are confused, etc.), you can use both ssl_certificate_file and ssl_private_key_file interchangeably, e.g. concat and put everything in ssl_certificate_file (instead of ssl_private_key_file), or put your key in ssl_certificate_file and your certificate in ssl_private_key_file. Essentially it will try to load both the key and the cert from both files (if the option is set). I tested exhaustively with multiple different arrangements of key and certificate either split or concatenated. As long as there is a valid key and a valid certificate present in one or the other (or both) it will find them.","This adds a new configuration file option called ssl_certificate_file which should be set to the SSL certificate file. This allows the user to split their private key and certificates into separate files so that they can be easily symlinked back to the master certificate files (e.g. in /etc/). For backwards compatibility you can still concatenate them together and reference the combined file with ssl_private_key_file as before. For robustness (in case users are confused, etc.), you can use both ssl_certificate_file and ssl_private_key_file interchangeably, e.g. concat and put everything in ssl_certificate_file (instead of ssl_private_key_file), or put your key in ssl_certificate_file and your certificate in ssl_private_key_file. Essentially it will try to load both the key and the cert from both files (if the option is set). I tested exhaustively with multiple different arrangements of key and certificate either split or concatenated. As long as there is a valid key and a valid certificate present in one or the other (or both) it will find them.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1291,2019-03-08T21:47:41Z,2019-03-22T02:52:45Z,2019-03-22T02:52:45Z,MERGED,True,94,27,11,https://github.com/grapenut,Add optional config ssl_certificate_file,3,[],https://github.com/pennmush/pennmush/pull/1291,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1291#issuecomment-473471896,"This adds a new configuration file option called ssl_certificate_file which should be set to the SSL certificate file. This allows the user to split their private key and certificates into separate files so that they can be easily symlinked back to the master certificate files (e.g. in /etc/). For backwards compatibility you can still concatenate them together and reference the combined file with ssl_private_key_file as before. For robustness (in case users are confused, etc.), you can use both ssl_certificate_file and ssl_private_key_file interchangeably, e.g. concat and put everything in ssl_certificate_file (instead of ssl_private_key_file), or put your key in ssl_certificate_file and your certificate in ssl_private_key_file. Essentially it will try to load both the key and the cert from both files (if the option is set). I tested exhaustively with multiple different arrangements of key and certificate either split or concatenated. As long as there is a valid key and a valid certificate present in one or the other (or both) it will find them.","Cool. This is something I've thought about but never got around. It'll make automatically resetting Let's Encrypt certs easier for example.
Looks like it prints out error messages if it tries and fails to load a key/cert from a file that doesn't have one when you're using separate files for both? I think that if the private key is loaded it shouldn't then try to read it again from the certificate file and vis versa.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1291,2019-03-08T21:47:41Z,2019-03-22T02:52:45Z,2019-03-22T02:52:45Z,MERGED,True,94,27,11,https://github.com/grapenut,Add optional config ssl_certificate_file,3,[],https://github.com/pennmush/pennmush/pull/1291,https://github.com/grapenut,3,https://github.com/pennmush/pennmush/pull/1291#issuecomment-473474867,"This adds a new configuration file option called ssl_certificate_file which should be set to the SSL certificate file. This allows the user to split their private key and certificates into separate files so that they can be easily symlinked back to the master certificate files (e.g. in /etc/). For backwards compatibility you can still concatenate them together and reference the combined file with ssl_private_key_file as before. For robustness (in case users are confused, etc.), you can use both ssl_certificate_file and ssl_private_key_file interchangeably, e.g. concat and put everything in ssl_certificate_file (instead of ssl_private_key_file), or put your key in ssl_certificate_file and your certificate in ssl_private_key_file. Essentially it will try to load both the key and the cert from both files (if the option is set). I tested exhaustively with multiple different arrangements of key and certificate either split or concatenated. As long as there is a valid key and a valid certificate present in one or the other (or both) it will find them.",Updated to only load the certificate and/or key from the ssl_certificate_file if they haven't been loaded already from ssl_private_key_file. Only logs when either certificate or key fails to load from either file.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1291,2019-03-08T21:47:41Z,2019-03-22T02:52:45Z,2019-03-22T02:52:45Z,MERGED,True,94,27,11,https://github.com/grapenut,Add optional config ssl_certificate_file,3,[],https://github.com/pennmush/pennmush/pull/1291,https://github.com/shawnw,4,https://github.com/pennmush/pennmush/pull/1291#issuecomment-474679830,"This adds a new configuration file option called ssl_certificate_file which should be set to the SSL certificate file. This allows the user to split their private key and certificates into separate files so that they can be easily symlinked back to the master certificate files (e.g. in /etc/). For backwards compatibility you can still concatenate them together and reference the combined file with ssl_private_key_file as before. For robustness (in case users are confused, etc.), you can use both ssl_certificate_file and ssl_private_key_file interchangeably, e.g. concat and put everything in ssl_certificate_file (instead of ssl_private_key_file), or put your key in ssl_certificate_file and your certificate in ssl_private_key_file. Essentially it will try to load both the key and the cert from both files (if the option is set). I tested exhaustively with multiple different arrangements of key and certificate either split or concatenated. As long as there is a valid key and a valid certificate present in one or the other (or both) it will find them.","That looks good, thanks. Don't suppose you're up for updating the instructions in README.SSL.md too to have them use separate files?",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1291,2019-03-08T21:47:41Z,2019-03-22T02:52:45Z,2019-03-22T02:52:45Z,MERGED,True,94,27,11,https://github.com/grapenut,Add optional config ssl_certificate_file,3,[],https://github.com/pennmush/pennmush/pull/1291,https://github.com/grapenut,5,https://github.com/pennmush/pennmush/pull/1291#issuecomment-474905751,"This adds a new configuration file option called ssl_certificate_file which should be set to the SSL certificate file. This allows the user to split their private key and certificates into separate files so that they can be easily symlinked back to the master certificate files (e.g. in /etc/). For backwards compatibility you can still concatenate them together and reference the combined file with ssl_private_key_file as before. For robustness (in case users are confused, etc.), you can use both ssl_certificate_file and ssl_private_key_file interchangeably, e.g. concat and put everything in ssl_certificate_file (instead of ssl_private_key_file), or put your key in ssl_certificate_file and your certificate in ssl_private_key_file. Essentially it will try to load both the key and the cert from both files (if the option is set). I tested exhaustively with multiple different arrangements of key and certificate either split or concatenated. As long as there is a valid key and a valid certificate present in one or the other (or both) it will find them.","I updated the README.SSL.md to reflect the new configuration option (with a note for backwards compatibility). I also added roman numerals to section headers, since section IV was being referenced without being identified. I also put in a small paragraph about Let's Encrypt with links to certbot.
Added a note to help changes in pennv188.hlp.
Added a default file name to the ssl_certificate_file option in mushcnf.dst, in the same style as the default file name in ssl_private_key_file.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1294,2019-03-26T04:41:47Z,2019-04-03T01:36:46Z,2019-04-03T01:36:46Z,MERGED,True,121,22,6,https://github.com/shawnw,Better pidfile,2,[],https://github.com/pennmush/pennmush/pull/1294,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1294,"Currently, we try to prevent multiple copies of a game from running by having the mush process create a file with its process id, and the restart script checking to see if a process with that pid is running. This has a bunch of race conditions and other issues.
This patch tries to address the worst of them by having the mush, after creating the pid file, acquire a lock on it, and exiting with a helpful failure message if it can't. That way even if two restart's are run at the same time, only one copy of the game will actually start up no matter what.
It also tweaks restart to use flock(1) to check to see if a game is running, when available. (Linux, possibly other OSes), which fixes an issue where the mush isn't running but something else is using the pid recorded in the file.
(Ultimately I think it's probably desirable to remove the restart script completely but that's another project)","Currently, we try to prevent multiple copies of a game from running by having the mush process create a file with its process id, and the restart script checking to see if a process with that pid is running. This has a bunch of race conditions and other issues.
This patch tries to address the worst of them by having the mush, after creating the pid file, acquire a lock on it, and exiting with a helpful failure message if it can't. That way even if two restart's are run at the same time, only one copy of the game will actually start up no matter what.
It also tweaks restart to use flock(1) to check to see if a game is running, when available. (Linux, possibly other OSes), which fixes an issue where the mush isn't running but something else is using the pid recorded in the file.
(Ultimately I think it's probably desirable to remove the restart script completely but that's another project)",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1296,2019-04-03T01:34:25Z,2021-11-28T00:29:40Z,2021-11-28T00:29:41Z,CLOSED,False,202,3246,19,https://github.com/shawnw,Remove the chunkswap subsystem.,3,[],https://github.com/pennmush/pennmush/pull/1296,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1296,Chunk storage always uses malloc now. Closes #1278,Chunk storage always uses malloc now. Closes #1278,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1296,2019-04-03T01:34:25Z,2021-11-28T00:29:40Z,2021-11-28T00:29:41Z,CLOSED,False,202,3246,19,https://github.com/shawnw,Remove the chunkswap subsystem.,3,[],https://github.com/pennmush/pennmush/pull/1296,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1296#issuecomment-980812682,Chunk storage always uses malloc now. Closes #1278,Closing this because the attempt to test it on MUSH caused all sorts of bad stuff to happen to the database. Might revisit later.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1298,2019-04-17T03:27:19Z,2019-05-03T07:06:02Z,2020-06-02T07:42:46Z,MERGED,True,5152,3862,16,https://github.com/shawnw,Sqlite 328,13,[],https://github.com/pennmush/pennmush/pull/1298,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1298,"Updates SQLite, plus some related bugfixes and improvements.","Updates SQLite, plus some related bugfixes and improvements.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1299,2019-04-17T07:51:13Z,2019-05-03T07:13:50Z,2019-05-03T07:13:50Z,MERGED,True,6,6,4,https://github.com/shawnw,Update PCRE2 to 10.33,4,[],https://github.com/pennmush/pennmush/pull/1299,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1299,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1309,2019-07-01T20:51:15Z,2019-07-30T21:31:42Z,2019-07-30T21:31:42Z,MERGED,True,329,181,12,https://github.com/shawnw,Use syslog for logging,3,[],https://github.com/pennmush/pennmush/pull/1309,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1309,"Logs messages through syslog() as well as the usual log files.
Syslog supports logging messages at different priority levels; new function do_rawlog_lvl() includes that level. Used in a few places as a proof of concept.","Logs messages through syslog() as well as the usual log files.
Syslog supports logging messages at different priority levels; new function do_rawlog_lvl() includes that level. Used in a few places as a proof of concept.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1311,2019-07-17T08:03:18Z,2019-07-30T21:31:59Z,2020-06-02T07:42:30Z,MERGED,True,4123,3165,4,https://github.com/shawnw,Update to Sqlite 3.29.0,1,[],https://github.com/pennmush/pennmush/pull/1311,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1311,Mostly bug fixes in this release.,Mostly bug fixes in this release.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1314,2019-10-10T03:20:57Z,,2019-10-10T03:23:43Z,OPEN,False,12,0,1,https://github.com/nrawling,Added Dockerfile for build,1,[],https://github.com/pennmush/pennmush/pull/1314,https://github.com/nrawling,1,https://github.com/pennmush/pennmush/pull/1314,"Pretty straightforward Dockerfile. I picked Debian because it is pretty lightweight compared to other distros, but not prone to libc challenges like Alpine. I managed most dependencies except icu-config, which now appears to be deprecated.
A multi-stage build that does user configuration, etc. is certainly possible. However, I don't know if it is worthwhile to remove the build infrastructure, which isn't terribly large as it is. I think a lot could be done with using environment variables to configure external state for DB, etc.
It is failing two tests:
Running tests for json:
TEST FAILURE: json.string.5
command: think json(string, accent(foo, f:o))
result:  ""foo""
pattern: ^""f\u00F6o""
TEST FAILURE: json.string.6
command: think json_query(json(string,accent(foo,f:o)), unescape)
result:  foo
pattern: ^f\xF6o
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
81 tests, 79 succeeded, 2 failed (0 expected failures)
failed tests:
json.string.5, json.string.6","Pretty straightforward Dockerfile. I picked Debian because it is pretty lightweight compared to other distros, but not prone to libc challenges like Alpine. I managed most dependencies except icu-config, which now appears to be deprecated.
A multi-stage build that does user configuration, etc. is certainly possible. However, I don't know if it is worthwhile to remove the build infrastructure, which isn't terribly large as it is. I think a lot could be done with using environment variables to configure external state for DB, etc.
It is failing two tests:
Running tests for json:
TEST FAILURE: json.string.5
command: think json(string, accent(foo, f:o))
result:  ""foo""
pattern: ^""f\u00F6o""
TEST FAILURE: json.string.6
command: think json_query(json(string,accent(foo,f:o)), unescape)
result:  foo
pattern: ^f\xF6o
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
81 tests, 79 succeeded, 2 failed (0 expected failures)
failed tests:
json.string.5, json.string.6",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1314,2019-10-10T03:20:57Z,,2019-10-10T03:23:43Z,OPEN,False,12,0,1,https://github.com/nrawling,Added Dockerfile for build,1,[],https://github.com/pennmush/pennmush/pull/1314,https://github.com/nrawling,2,https://github.com/pennmush/pennmush/pull/1314#issuecomment-540323842,"Pretty straightforward Dockerfile. I picked Debian because it is pretty lightweight compared to other distros, but not prone to libc challenges like Alpine. I managed most dependencies except icu-config, which now appears to be deprecated.
A multi-stage build that does user configuration, etc. is certainly possible. However, I don't know if it is worthwhile to remove the build infrastructure, which isn't terribly large as it is. I think a lot could be done with using environment variables to configure external state for DB, etc.
It is failing two tests:
Running tests for json:
TEST FAILURE: json.string.5
command: think json(string, accent(foo, f:o))
result:  ""foo""
pattern: ^""f\u00F6o""
TEST FAILURE: json.string.6
command: think json_query(json(string,accent(foo,f:o)), unescape)
result:  foo
pattern: ^f\xF6o
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
81 tests, 79 succeeded, 2 failed (0 expected failures)
failed tests:
json.string.5, json.string.6",This PR begins work on #1304,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1317,2019-11-11T14:24:50Z,,2019-11-11T15:33:13Z,OPEN,False,68,5,4,https://github.com/shawnw,Color difference tweaks,2,[],https://github.com/pennmush/pennmush/pull/1317,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1317,"Minor improvements to the code for finding the difference between two RGB colors; no user-visible behavioral or functional changes.

Change the hex_difference() macro to a function.
Provide a optimized SSE version of same.","Minor improvements to the code for finding the difference between two RGB colors; no user-visible behavioral or functional changes.

Change the hex_difference() macro to a function.
Provide a optimized SSE version of same.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1321,2020-01-24T22:11:41Z,2020-01-25T01:16:21Z,2020-01-25T01:16:21Z,MERGED,True,31,24,3,https://github.com/captdeaf,Hopefully fixes @mail going forward,1,[],https://github.com/pennmush/pennmush/pull/1321,https://github.com/captdeaf,1,https://github.com/pennmush/pennmush/pull/1321,"I don't have enough time to duplicate the issue in Penn to figure out if this is the actual cause and correct fix, but here's the what I'm figuring:

chunk_read doesn't null terminate. This probably doesn't impact anywhere else except mail.c since get_message might be the only one to assume it does? There's also a possibility that things are saved into chunks with null_terminator, pulled out with it, then saved again without it. Just plain ugh.
Replace all the strcpy()s in extmail.c with mush_strncpy()s. Also? Hate for the non-#defined numbers. 30, 50 instead of SENDER_LEN and SUBJECT_LEN, etc etc?

Thoughts on other possible causes:

Loading in one form of @config chunk and dumping in a separate might have been a cause?
Interplay between some particular uncompress()/compress(), chunk_fetch()/chunk_create() and getstring(), etc ...","I don't have enough time to duplicate the issue in Penn to figure out if this is the actual cause and correct fix, but here's the what I'm figuring:

chunk_read doesn't null terminate. This probably doesn't impact anywhere else except mail.c since get_message might be the only one to assume it does? There's also a possibility that things are saved into chunks with null_terminator, pulled out with it, then saved again without it. Just plain ugh.
Replace all the strcpy()s in extmail.c with mush_strncpy()s. Also? Hate for the non-#defined numbers. 30, 50 instead of SENDER_LEN and SUBJECT_LEN, etc etc?

Thoughts on other possible causes:

Loading in one form of @config chunk and dumping in a separate might have been a cause?
Interplay between some particular uncompress()/compress(), chunk_fetch()/chunk_create() and getstring(), etc ...",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/HarryCordewener,1,https://github.com/pennmush/pennmush/pull/1327,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/mike347,2,https://github.com/pennmush/pennmush/pull/1327#issuecomment-619923756,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","Not sure why it's crashing yet, but I can tell you there are two memory leaks. At the beginning of the function, after allocations and during your argument loop, you can exit the function prematurely. You need to free the alloc's before doing so. And at the end of the function, you don't free xargs[2] which was allocated in your argument loop.
You should also check that allocation succeeded, and mush_panic() if not.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/mike347,3,https://github.com/pennmush/pennmush/pull/1327#issuecomment-622549478,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","I don't see me using this day-to-day, but same can be said for many functions.  I'd like to see a better use-case example in the helpfile so  I can do some local testing before giving a yes/no vote.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/talvo,4,https://github.com/pennmush/pennmush/pull/1327#issuecomment-622550187,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","I think it's limited use and too easily softcoded, tbh. (Yes, the same could be said of quite a few existing functions, but I think that's all the more reason to give more careful thought in future, not an excuse to add for the sake of adding going forwards.)",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/HarryCordewener,5,https://github.com/pennmush/pennmush/pull/1327#issuecomment-622553340,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","Option 1 for helpfiles:
&FIB me=cache(%!,fib`%0,switch(%0,<2,%0,add(u(fib,sub(%0,1)),u(fib,sub(%0,2)))))
&SLOWFIB me=switch(%0,<2,%0,add(u(fib,sub(%0,1)),u(fib,sub(%0,2))))

th benchmark(u(slowfib,20),100)
> Average: 161.98   Min: 82   Max: 5321

th benchmark(u(fib,20),100)
> Average: 37.63   Min: 31   Max: 316",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/HarryCordewener,6,https://github.com/pennmush/pennmush/pull/1327#issuecomment-622555940,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","Option 2 for helpfiles:
Usefulness for code to not need references to random db objects. But instead having context. This problem has some other solutions of course. But this is meant to illustrate results of lsearch() calls that might otherwise take a while to complete.
@create Some System
@set Some System=!no_command
&syscode Some System=MYCODE
@@ Add some commands

@create Global Function Object
&fn`sys Global Function Object=cache(%!,cache`sys`[regeditall(%0,\[^\\w\],)],first(lsearch(all,elock,SYSCODE:[first(regeditall(%0,\[^\\w\],))] & !flag^no_command))),31536000)

th sys(mycode)
> #123",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/HarryCordewener,7,https://github.com/pennmush/pennmush/pull/1327#issuecomment-622559683,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","Simple performance example (not useful for a helpfile)
@wipe me/**cache**
37 attributes wiped.
th benchmark(localize(if(expired(%!,cache`rawr),rest(get(%!,cache`rawr)),@@(Some calculation. For fairness, we use a static value)[setq(Value,1)][attrib_set(%!,cache`rawr,%q<Value>)])),1000)
th benchmark(cache(%!,cache`rawr,@@(Some calculation. For fairness, we use a static value)1),1000)
Average: 21.01   Min: 16   Max: 86
Liminality/CACHE`RAWR - Set.
Average: 9.30   Min: 8   Max: 81",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/HarryCordewener,8,https://github.com/pennmush/pennmush/pull/1327#issuecomment-622565913,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","Production Code Example (Not sure how to translate this into a useful helpfile, but it displays the need for this)
&fn`bbs`boardtree_test #84=cache(%:,cache`boardtree`[first(%0,%t)],u(fn`bbs`testlock,rest(u(fn`bbs`get`bboards,first(%0,%t)),%r),read),mul(60,24,7))
Bulletin Board System/FN`BBS`BOARDTREE_TEST - Set.
th benchmark(u(#84/fn`bbs`boardtree_test,u(#84/fn`bbs`root)),10)
> Average: 118.60   Min: 104   Max: 180


&fn`bbs`boardtree_test #84=u(fn`bbs`testlock,rest(u(fn`bbs`get`bboards,first(%0,%t)),%r),read)
Bulletin Board System/FN`BBS`BOARDTREE_TEST - Set.
th benchmark(u(#84/fn`bbs`boardtree_test,u(#84/fn`bbs`root)),10)
> Average: 31946.80   Min: 27723   Max: 39561",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/talvo,9,https://github.com/pennmush/pennmush/pull/1327#issuecomment-622566494,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","Given that your average difference there vs softcoding is 11 microseconds, and that's using an unnecessary setq() and localize() thrown in too, I'm definitely not seeing a point in hardcoding this.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/HarryCordewener,10,https://github.com/pennmush/pennmush/pull/1327#issuecomment-622566947,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","The difference there is the cleanliness. Can you imagine that code being repeated everywhere, where you want to use the same pattern? Not to mention that the pattern itself is a /good pattern/. And lends itself to easy administration when one needs to manually wipe the cache.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1327,2020-04-27T08:55:38Z,,2022-05-25T16:51:25Z,OPEN,False,155,8,4,https://github.com/HarryCordewener,Introduction of cache() for Issue 1326,9,[],https://github.com/pennmush/pennmush/pull/1327,https://github.com/HarryCordewener,11,https://github.com/pennmush/pennmush/pull/1327#issuecomment-786281516,"This is a Draft PR, as this is non-functional at this time. But it's here to get insight from more capable developers.
Related to Issue #1326","This continues to be a useful function and has been tested for months in production now, producing excellent results. It's used in too many locations within ETO to consider making this a repeated code-bit. And it still can't be softcoded as a global.
The big important piece for this remains to be any SQL integration people may have that are somewhat longer running queries, where it can reduce seconds into milliseconds.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1328,2020-05-02T01:22:08Z,,2022-05-30T14:21:41Z,OPEN,False,1522,203,19,https://github.com/ray73864,Plugin support,44,[],https://github.com/pennmush/pennmush/pull/1328,https://github.com/ray73864,1,https://github.com/pennmush/pennmush/pull/1328,"It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.","It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1328,2020-05-02T01:22:08Z,,2022-05-30T14:21:41Z,OPEN,False,1522,203,19,https://github.com/ray73864,Plugin support,44,[],https://github.com/pennmush/pennmush/pull/1328,https://github.com/HarryCordewener,2,https://github.com/pennmush/pennmush/pull/1328#issuecomment-622652601,"It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.",Why not add the flags to the Makefile for the submission?,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1328,2020-05-02T01:22:08Z,,2022-05-30T14:21:41Z,OPEN,False,1522,203,19,https://github.com/ray73864,Plugin support,44,[],https://github.com/pennmush/pennmush/pull/1328,https://github.com/ray73864,3,https://github.com/pennmush/pennmush/pull/1328#issuecomment-622654837,"It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.","There, the configure script does the flags for Makefile now.",True,{'THUMBS_UP': ['https://github.com/HarryCordewener']}
pennmush/pennmush,https://github.com/pennmush/pennmush,1328,2020-05-02T01:22:08Z,,2022-05-30T14:21:41Z,OPEN,False,1522,203,19,https://github.com/ray73864,Plugin support,44,[],https://github.com/pennmush/pennmush/pull/1328,https://github.com/ray73864,4,https://github.com/pennmush/pennmush/pull/1328#issuecomment-623023559,"It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.",Now allocates memory for the array on a needs basis as it finds more plugins to load instead of defaulting the array size to only allowing 100 max,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1328,2020-05-02T01:22:08Z,,2022-05-30T14:21:41Z,OPEN,False,1522,203,19,https://github.com/ray73864,Plugin support,44,[],https://github.com/pennmush/pennmush/pull/1328,https://github.com/talvo,5,https://github.com/pennmush/pennmush/pull/1328#issuecomment-623029368,"It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.","I haven't really looked at the code yet, but I'd like to see a more robust interface for this, particularly with some kind of versioning for future-proofing so more features can be added and we can tell what level of support any given plugin provides. It would also be nice if plugins had a method to report their own name, plugin version, interface version, etc, that could be displayed somewhere (probably in something like @config/plugins or the like). Linked list of a struct to store that info rather than a calloced array may be an easier approach for storing that.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1328,2020-05-02T01:22:08Z,,2022-05-30T14:21:41Z,OPEN,False,1522,203,19,https://github.com/ray73864,Plugin support,44,[],https://github.com/pennmush/pennmush/pull/1328,https://github.com/ray73864,6,https://github.com/pennmush/pennmush/pull/1328#issuecomment-623074830,"It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.","Have switched to using a doubly linked list instead of the array.
Will look at a better way of handling the plugins that support certain features, especially the timer feature, it's not really a problem when you only have 1 or 2 plugins, but if you have lots of plugins, it would be handy if the penn local_timer() knew ahead of time exactly which plugins to target instead of going through the entire linked list each time.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1328,2020-05-02T01:22:08Z,,2022-05-30T14:21:41Z,OPEN,False,1522,203,19,https://github.com/ray73864,Plugin support,44,[],https://github.com/pennmush/pennmush/pull/1328,https://github.com/ray73864,7,https://github.com/pennmush/pennmush/pull/1328#issuecomment-623074858,"It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.","Will look at the version support later on, for now the basics :)",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1328,2020-05-02T01:22:08Z,,2022-05-30T14:21:41Z,OPEN,False,1522,203,19,https://github.com/ray73864,Plugin support,44,[],https://github.com/pennmush/pennmush/pull/1328,https://github.com/ray73864,8,https://github.com/pennmush/pennmush/pull/1328#issuecomment-939428853,"It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.","The latest PR should never have happened :)
I was trying to figure out Githubs changes since I last actively used it for doing commits, etc...",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1328,2020-05-02T01:22:08Z,,2022-05-30T14:21:41Z,OPEN,False,1522,203,19,https://github.com/ray73864,Plugin support,44,[],https://github.com/pennmush/pennmush/pull/1328,https://github.com/ray73864,9,https://github.com/pennmush/pennmush/pull/1328#issuecomment-939551409,"It's kinda rough.
Needs a directory in the rootdir called 'plugins', all works though.
Also needs 3 flags added to root/Makefile:
2 in LDFLAGS:
-Wl,--unresolved-symbols=ignore-in-object-files
-rdynamic
1 in CLIBS:
-ldl
An example test plugin:
#include <stdio.h>
#include <stdbool.h>
#include ""config.h""
#include ""conf.h""
#include ""dbdefs.h""
#include ""strutil.h""
#include ""parse.h""
#include ""function.h""
#include ""notify.h""
#include ""log.h""
#include ""game.h""

void test_notify() {
  dbref player;
  player = 1;
  notify_format(player, ""Hi %d!!"", player);
}

FUNCTION(local_test_notify)
{
  test_notify();
  return;
}

int plugin_init(void) {
  function_add(""TESTNOTIFY"", local_test_notify, 0, 0, FN_REG);
//  do_rawlog(LT_ERR, ""Hi"");
  return 1;
}

Test plugin is compiled by doing
gcc -shared -fPIC -I.. -I../hdrs -o test.so test.c

in the plugins directory.
At that point you can either start up your game or @shutdown/reboot your game.
Plugin requires a 'plugin_init()' function, and can optionally have a 'plugin_timer()' function if you need to run something in your plugin every second.",Closing for now. I dislike the fact that the PR keeps getting updated everytime I push a change.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1332,2020-05-27T08:53:03Z,2020-05-31T16:38:17Z,2020-06-08T05:48:18Z,MERGED,True,14586,8335,9,https://github.com/shawnw,Update to Sqlite 3.32.1,2,[],https://github.com/pennmush/pennmush/pull/1332,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1332,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1333,2020-06-02T07:42:14Z,2020-06-08T00:28:35Z,2020-06-08T05:48:24Z,MERGED,True,275,131,3,https://github.com/shawnw,Update cJSON to 1.7.13,1,[],https://github.com/pennmush/pennmush/pull/1333,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1333,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1334,2020-06-08T05:48:06Z,2020-06-11T00:29:23Z,2020-06-11T00:29:24Z,MERGED,True,3,2,3,https://github.com/shawnw,Update pcre2 to 10.35,1,[],https://github.com/pennmush/pennmush/pull/1334,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1334,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1335,2020-06-14T01:39:03Z,2020-06-15T00:31:20Z,2020-06-15T21:25:17Z,MERGED,True,1,1,1,https://github.com/diagonalfish,Update PCRE2_DIR in Makefile.in,1,[],https://github.com/pennmush/pennmush/pull/1335,https://github.com/diagonalfish,1,https://github.com/pennmush/pennmush/pull/1335,This appears to have been missed in 2fcd573.,This appears to have been missed in 2fcd573.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1335,2020-06-14T01:39:03Z,2020-06-15T00:31:20Z,2020-06-15T21:25:17Z,MERGED,True,1,1,1,https://github.com/diagonalfish,Update PCRE2_DIR in Makefile.in,1,[],https://github.com/pennmush/pennmush/pull/1335,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1335#issuecomment-643846042,This appears to have been missed in 2fcd573.,Oops.,True,{'LAUGH': ['https://github.com/diagonalfish']}
pennmush/pennmush,https://github.com/pennmush/pennmush,1339,2020-08-01T17:02:50Z,2020-08-16T07:21:44Z,2020-08-16T07:21:44Z,MERGED,True,5,1,2,https://github.com/shawnw,Add --version option.,2,[],https://github.com/pennmush/pennmush/pull/1339,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1339,Spurred by something on <Hardcode> a few days about about finding the version of a netmush binary.,Spurred by something on <Hardcode> a few days about about finding the version of a netmush binary.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1340,2020-08-01T17:32:03Z,2020-08-16T07:22:04Z,2020-08-16T07:22:04Z,MERGED,True,254,81,3,https://github.com/shawnw,Update Sqlite3 to 3.32.3,1,[],https://github.com/pennmush/pennmush/pull/1340,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1340,Has some important bug fixes over 3.32.1.,Has some important bug fixes over 3.32.1.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1343,2020-09-18T11:47:09Z,2020-09-18T11:47:30Z,2020-09-18T11:47:30Z,MERGED,True,2,1,2,https://github.com/mike347,Fixed bug in MOGRIFY`FORMAT. Closes #1341,1,[],https://github.com/pennmush/pennmush/pull/1343,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1343,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1345,2021-01-17T12:21:01Z,2021-02-28T14:04:34Z,2021-02-28T14:04:34Z,MERGED,True,12685,10626,4,https://github.com/shawnw,Update Sqlite to 3.34.0,2,[],https://github.com/pennmush/pennmush/pull/1345,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1345,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1348,2021-02-06T17:26:30Z,2021-02-08T09:46:29Z,2021-02-08T09:46:29Z,CLOSED,False,35,0,1,https://github.com/mdziczkowski,src_Makefile.in.patch,4,[],https://github.com/pennmush/pennmush/pull/1348,https://github.com/mdziczkowski,1,https://github.com/pennmush/pennmush/pull/1348,"Patch for src/Makefile.in
Changes:

ensured that the required `buildinf.h"" header file get generated
ensured that dependencies are build
grouped the apps and ensured that they become build
grouped the rebuilding of: funlocal flaglocal cmdlocal local patches potfile bflags htmltab lmathtab jsontypes that they all become build after typing: make mksrc","Patch for src/Makefile.in
Changes:

ensured that the required `buildinf.h"" header file get generated
ensured that dependencies are build
grouped the apps and ensured that they become build
grouped the rebuilding of: funlocal flaglocal cmdlocal local patches potfile bflags htmltab lmathtab jsontypes that they all become build after typing: make mksrc",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1351,2021-02-25T22:36:14Z,,2022-05-24T01:54:49Z,OPEN,False,103,76,9,https://github.com/HarryCordewener,1350: BUGFIX - Allow ansi code translation for json unescape.,19,[],https://github.com/pennmush/pennmush/pull/1351,https://github.com/HarryCordewener,1,https://github.com/pennmush/pennmush/pull/1351,This is related to the following ticket: #1350,This is related to the following ticket: #1350,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1351,2021-02-25T22:36:14Z,,2022-05-24T01:54:49Z,OPEN,False,103,76,9,https://github.com/HarryCordewener,1350: BUGFIX - Allow ansi code translation for json unescape.,19,[],https://github.com/pennmush/pennmush/pull/1351,https://github.com/HarryCordewener,2,https://github.com/pennmush/pennmush/pull/1351#issuecomment-807423010,This is related to the following ticket: #1350,Ready for re-review.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1351,2021-02-25T22:36:14Z,,2022-05-24T01:54:49Z,OPEN,False,103,76,9,https://github.com/HarryCordewener,1350: BUGFIX - Allow ansi code translation for json unescape.,19,[],https://github.com/pennmush/pennmush/pull/1351,https://github.com/HarryCordewener,3,https://github.com/pennmush/pennmush/pull/1351#issuecomment-869958400,This is related to the following ticket: #1350,"There's an error in here somewhere causing a one-off error with \0 in json_map for the value, as it puts the null too far to the right.
Debug:
https://pastebin.com/FgTANMJE
Edit: Fix being tested in production.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1351,2021-02-25T22:36:14Z,,2022-05-24T01:54:49Z,OPEN,False,103,76,9,https://github.com/HarryCordewener,1350: BUGFIX - Allow ansi code translation for json unescape.,19,[],https://github.com/pennmush/pennmush/pull/1351,https://github.com/HarryCordewener,4,https://github.com/pennmush/pennmush/pull/1351#issuecomment-926280504,This is related to the following ticket: #1350,This has been in production for a few months now. But I gotta figure out what is going on with the unit test's test harness.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1351,2021-02-25T22:36:14Z,,2022-05-24T01:54:49Z,OPEN,False,103,76,9,https://github.com/HarryCordewener,1350: BUGFIX - Allow ansi code translation for json unescape.,19,[],https://github.com/pennmush/pennmush/pull/1351,https://github.com/HarryCordewener,5,https://github.com/pennmush/pennmush/pull/1351#issuecomment-1135314740,This is related to the following ticket: #1350,Tests fixed. Ready for a new look @talvo,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1353,2021-04-04T18:06:10Z,,2022-06-03T21:15:49Z,OPEN,False,532,220,16,https://github.com/HarryCordewener,Add function: HTTP(),11,[],https://github.com/pennmush/pennmush/pull/1353,https://github.com/HarryCordewener,1,https://github.com/pennmush/pennmush/pull/1353,"Offering this Feature Request for the following use case:
Making a function call where one is restricted to using a function.
Example: Dynamic Exit evaluation.","Offering this Feature Request for the following use case:
Making a function call where one is restricted to using a function.
Example: Dynamic Exit evaluation.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1353,2021-04-04T18:06:10Z,,2022-06-03T21:15:49Z,OPEN,False,532,220,16,https://github.com/HarryCordewener,Add function: HTTP(),11,[],https://github.com/pennmush/pennmush/pull/1353,https://github.com/HarryCordewener,2,https://github.com/pennmush/pennmush/pull/1353#issuecomment-814213799,"Offering this Feature Request for the following use case:
Making a function call where one is restricted to using a function.
Example: Dynamic Exit evaluation.","Build has been fixed by editing src/Makefile.in, which was done for adding things like cJSON. So I assume that is the way this gets solved.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1353,2021-04-04T18:06:10Z,,2022-06-03T21:15:49Z,OPEN,False,532,220,16,https://github.com/HarryCordewener,Add function: HTTP(),11,[],https://github.com/pennmush/pennmush/pull/1353,https://github.com/HarryCordewener,3,https://github.com/pennmush/pennmush/pull/1353#issuecomment-926281054,"Offering this Feature Request for the following use case:
Making a function call where one is restricted to using a function.
Example: Dynamic Exit evaluation.","@shawnw
@talvo
Looking for approval.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1353,2021-04-04T18:06:10Z,,2022-06-03T21:15:49Z,OPEN,False,532,220,16,https://github.com/HarryCordewener,Add function: HTTP(),11,[],https://github.com/pennmush/pennmush/pull/1353,https://github.com/HarryCordewener,4,https://github.com/pennmush/pennmush/pull/1353#issuecomment-937174346,"Offering this Feature Request for the following use case:
Making a function call where one is restricted to using a function.
Example: Dynamic Exit evaluation.",@zetafunction - resolved your comments. Thank you!,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1353,2021-04-04T18:06:10Z,,2022-06-03T21:15:49Z,OPEN,False,532,220,16,https://github.com/HarryCordewener,Add function: HTTP(),11,[],https://github.com/pennmush/pennmush/pull/1353,https://github.com/HarryCordewener,5,https://github.com/pennmush/pennmush/pull/1353#issuecomment-1146322269,"Offering this Feature Request for the following use case:
Making a function call where one is restricted to using a function.
Example: Dynamic Exit evaluation.","http() is not managing to report the status arg correctly for things like HEAD, so I'm investigating what's going on there.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1353,2021-04-04T18:06:10Z,,2022-06-03T21:15:49Z,OPEN,False,532,220,16,https://github.com/HarryCordewener,Add function: HTTP(),11,[],https://github.com/pennmush/pennmush/pull/1353,https://github.com/HarryCordewener,6,https://github.com/pennmush/pennmush/pull/1353#issuecomment-1146365951,"Offering this Feature Request for the following use case:
Making a function call where one is restricted to using a function.
Example: Dynamic Exit evaluation.","Fix made. The function was not being evaluated because HEAD returns no content of course.
This also makes sure that we can do things other than GET and POST in http() just like in @http",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1364,2021-04-14T22:47:47Z,2021-04-15T07:04:20Z,2021-04-15T14:49:26Z,MERGED,True,1,1,1,https://github.com/tkrajcar,Fix unescaped backticks in CHANGES.188.md.,1,[],https://github.com/pennmush/pennmush/pull/1364,https://github.com/tkrajcar,1,https://github.com/pennmush/pennmush/pull/1364,"@mike347 Just fyi - the `` were triggering code formatting unintentionally, which set me off on a journey of discovery to learn how to properly use code snippets that contain backticks... turns out the answer is ... yet more backticks ðŸ˜›","@mike347 Just fyi - the `` were triggering code formatting unintentionally, which set me off on a journey of discovery to learn how to properly use code snippets that contain backticks... turns out the answer is ... yet more backticks ðŸ˜›",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1365,2021-04-14T23:05:11Z,2021-04-14T23:09:06Z,2021-04-14T23:09:14Z,CLOSED,False,0,0,1,https://github.com/tkrajcar,Do not merge: testing travis CI integration,1,[],https://github.com/pennmush/pennmush/pull/1365,https://github.com/tkrajcar,1,https://github.com/pennmush/pennmush/pull/1365,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1365,2021-04-14T23:05:11Z,2021-04-14T23:09:06Z,2021-04-14T23:09:14Z,CLOSED,False,0,0,1,https://github.com/tkrajcar,Do not merge: testing travis CI integration,1,[],https://github.com/pennmush/pennmush/pull/1365,https://github.com/tkrajcar,2,https://github.com/pennmush/pennmush/pull/1365#issuecomment-819906947,,"Yay, it works!",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1370,2021-06-23T21:44:21Z,2021-08-04T22:37:45Z,2021-08-04T22:37:45Z,MERGED,True,9548,5736,10,https://github.com/shawnw,Bump Sqlite to 3.36.0,2,[],https://github.com/pennmush/pennmush/pull/1370,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1370,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1372,2021-08-05T00:19:53Z,2021-09-18T08:53:34Z,2021-09-18T08:53:34Z,CLOSED,False,3,11,2,https://github.com/HarryCordewener,Remove UTF-8 declaration to clean up connections with BeipMU. ,5,[],https://github.com/pennmush/pennmush/pull/1372,https://github.com/HarryCordewener,1,https://github.com/pennmush/pennmush/pull/1372,"We don't actually support UTF-8.
See Issue 1352.","We don't actually support UTF-8.
See Issue 1352.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1372,2021-08-05T00:19:53Z,2021-09-18T08:53:34Z,2021-09-18T08:53:34Z,CLOSED,False,3,11,2,https://github.com/HarryCordewener,Remove UTF-8 declaration to clean up connections with BeipMU. ,5,[],https://github.com/pennmush/pennmush/pull/1372,https://github.com/HarryCordewener,2,https://github.com/pennmush/pennmush/pull/1372#issuecomment-893066359,"We don't actually support UTF-8.
See Issue 1352.","For BeipMU folk. If you join a game that your client already detected UTF-8 on, you're still going to have to set the code back to the default:  CP-1252",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1372,2021-08-05T00:19:53Z,2021-09-18T08:53:34Z,2021-09-18T08:53:34Z,CLOSED,False,3,11,2,https://github.com/HarryCordewener,Remove UTF-8 declaration to clean up connections with BeipMU. ,5,[],https://github.com/pennmush/pennmush/pull/1372,https://github.com/HarryCordewener,3,https://github.com/pennmush/pennmush/pull/1372#issuecomment-922241554,"We don't actually support UTF-8.
See Issue 1352.",Let's see if this is still needed after an update to Beip. I spotted something fun in their negotiation.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1372,2021-08-05T00:19:53Z,2021-09-18T08:53:34Z,2021-09-18T08:53:34Z,CLOSED,False,3,11,2,https://github.com/HarryCordewener,Remove UTF-8 declaration to clean up connections with BeipMU. ,5,[],https://github.com/pennmush/pennmush/pull/1372,https://github.com/HarryCordewener,4,https://github.com/pennmush/pennmush/pull/1372#issuecomment-922243600,"We don't actually support UTF-8.
See Issue 1352.","This ticket can be closed. BeipMU was sending
TELNET_IAC TELNET_SB 42 01 utf-8 TELNET_IAC TELNET_SE
Instead of
TELNET_IAC TELNET_SB 42 02 utf-8 TELNET_IAC TELNET_SE",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1373,2021-09-24T03:33:56Z,,2022-05-24T02:07:17Z,OPEN,False,163,9,5,https://github.com/HarryCordewener,chain() for function chaining,14,[],https://github.com/pennmush/pennmush/pull/1373,https://github.com/HarryCordewener,1,https://github.com/pennmush/pennmush/pull/1373,"This pull request introduces arrow(), adding the functional programming paradigm standard of thrushing to PennMUSH.
This is largely helpful in modifying data in specific steps, allowing for more code cleanliness and separation into arguments, and can serve to improve the paradigms we have going on right now.","This pull request introduces arrow(), adding the functional programming paradigm standard of thrushing to PennMUSH.
This is largely helpful in modifying data in specific steps, allowing for more code cleanliness and separation into arguments, and can serve to improve the paradigms we have going on right now.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1373,2021-09-24T03:33:56Z,,2022-05-24T02:07:17Z,OPEN,False,163,9,5,https://github.com/HarryCordewener,chain() for function chaining,14,[],https://github.com/pennmush/pennmush/pull/1373,https://github.com/HarryCordewener,2,https://github.com/pennmush/pennmush/pull/1373#issuecomment-926412288,"This pull request introduces arrow(), adding the functional programming paradigm standard of thrushing to PennMUSH.
This is largely helpful in modifying data in specific steps, allowing for more code cleanliness and separation into arguments, and can serve to improve the paradigms we have going on right now.","This can be done in softcode, but it requires that you do so using #lambda inside of a fold(), which causes risks with double evaluation of information that passes through. This is better served as a hardcoded function.
A current example Use Case, is the building of json objects. Seen here for a way to communicate with Discord. This is using a softcoded version of arrow().
DATA`WEBHOOK`DISCORD`SCENEANNOUNCE [#6`]: [arrow(lattr(%=`),json(object,embeds,json(array,json(object))),%b,decompose(%0),decompose(%1),%2,%3,%4)]
DATA`WEBHOOK`DISCORD`SCENEANNOUNCE`AUTHOR [#6]: json_mod(%0,insert,$.embeds\[0\].author,json(object,name,json(string,stripansi(%5)),url,json(string,https://wiki.eldertaleonline.com/[urlencode(stripansi(%5))]),icon_url,json(string,https://ui-avatars.com/api/?name=[edit(stripansi(%5),%b,+)])))
DATA`WEBHOOK`DISCORD`SCENEANNOUNCE`COLOR [#6]: json_mod(%0,insert,$.embeds\[0\].color,65535)
DATA`WEBHOOK`DISCORD`SCENEANNOUNCE`DESCRIPTION [#6]: if(strlen(%4),json_mod(%0,insert,$.embeds\[0\].description,json(string,stripansi(%4)%r%r<@&725049405626908745>)),%0)
DATA`WEBHOOK`DISCORD`SCENEANNOUNCE`SCHEDULE [#6]: if(strlen(%7),json_mod(%0,insert,$.embeds\[0\].fields,json(array,json(object,name,""Scheduled for:"",value,json(string,timefmt($A\, the $dth of $B at $I:$M $p $Z,%7,America/Chicago))))),%0)
DATA`WEBHOOK`DISCORD`SCENEANNOUNCE`TITLE [#6]: json_mod(%0,insert,$.embeds\[0\].title,json(string,stripansi(%3)))",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1373,2021-09-24T03:33:56Z,,2022-05-24T02:07:17Z,OPEN,False,163,9,5,https://github.com/HarryCordewener,chain() for function chaining,14,[],https://github.com/pennmush/pennmush/pull/1373,https://github.com/HarryCordewener,3,https://github.com/pennmush/pennmush/pull/1373#issuecomment-926413515,"This pull request introduces arrow(), adding the functional programming paradigm standard of thrushing to PennMUSH.
This is largely helpful in modifying data in specific steps, allowing for more code cleanliness and separation into arguments, and can serve to improve the paradigms we have going on right now.","@talvo
@mike347
@shawnw
Ready for review.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1373,2021-09-24T03:33:56Z,,2022-05-24T02:07:17Z,OPEN,False,163,9,5,https://github.com/HarryCordewener,chain() for function chaining,14,[],https://github.com/pennmush/pennmush/pull/1373,https://github.com/HarryCordewener,4,https://github.com/pennmush/pennmush/pull/1373#issuecomment-926770404,"This pull request introduces arrow(), adding the functional programming paradigm standard of thrushing to PennMUSH.
This is largely helpful in modifying data in specific steps, allowing for more code cleanliness and separation into arguments, and can serve to improve the paradigms we have going on right now.","@zetafunction
You might also know it as Function Chaining, or Threading, or Swiss Arrows, or Pipelining.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1373,2021-09-24T03:33:56Z,,2022-05-24T02:07:17Z,OPEN,False,163,9,5,https://github.com/HarryCordewener,chain() for function chaining,14,[],https://github.com/pennmush/pennmush/pull/1373,https://github.com/HarryCordewener,5,https://github.com/pennmush/pennmush/pull/1373#issuecomment-1135320415,"This pull request introduces arrow(), adding the functional programming paradigm standard of thrushing to PennMUSH.
This is largely helpful in modifying data in specific steps, allowing for more code cleanliness and separation into arguments, and can serve to improve the paradigms we have going on right now.",Test has been fixed. Documentation still needs a checkup - I need some direction there.,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1376,2021-11-27T13:41:05Z,2021-11-28T00:26:19Z,2021-11-28T00:27:06Z,CLOSED,False,6,6,2,https://github.com/mike347,Use new PCRE2 download locations. Temporary fix for #1355,1,[],https://github.com/pennmush/pennmush/pull/1376,https://github.com/mike347,1,https://github.com/pennmush/pennmush/pull/1376,,,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1376,2021-11-27T13:41:05Z,2021-11-28T00:26:19Z,2021-11-28T00:27:06Z,CLOSED,False,6,6,2,https://github.com/mike347,Use new PCRE2 download locations. Temporary fix for #1355,1,[],https://github.com/pennmush/pennmush/pull/1376,https://github.com/shawnw,2,https://github.com/pennmush/pennmush/pull/1376#issuecomment-980812383,,"Using curl version instead, because I suspect more OSes have curl installed by default instead of wget. If that turns out to not be the case, we can do something more complicated that tests for both.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1378,2021-11-27T20:27:30Z,2021-11-28T00:21:31Z,2021-11-28T00:21:31Z,MERGED,True,260,265,1,https://github.com/mdziczkowski,Doxyfile,1,[],https://github.com/pennmush/pennmush/pull/1378,https://github.com/mdziczkowski,1,https://github.com/pennmush/pennmush/pull/1378,Configured to generate more detailed documentation of all files except few exceptions,Configured to generate more detailed documentation of all files except few exceptions,True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1379,2021-11-28T00:16:36Z,2021-11-28T00:25:58Z,2021-11-28T00:25:59Z,MERGED,True,22,26,4,https://github.com/shawnw,Update PCRE2 to 10.39,1,[],https://github.com/pennmush/pennmush/pull/1379,https://github.com/shawnw,1,https://github.com/pennmush/pennmush/pull/1379,"Also updates download link from the dead ftp.pcre.org to github.
Fixes #1355.","Also updates download link from the dead ftp.pcre.org to github.
Fixes #1355.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1382,2021-12-17T18:09:21Z,,2021-12-17T20:02:46Z,OPEN,False,20,13,1,https://github.com/mdziczkowski,PCRE2 fix for configure file,3,[],https://github.com/pennmush/pennmush/pull/1382,https://github.com/mdziczkowski,1,https://github.com/pennmush/pennmush/pull/1382,"PCRE2 related variables changes:
PCRE2_VERSION -> numeric version only
PCRE2_TARBALL=""pcre2-${PCRE2_VERSION}.tar.gz""
PCRE2_URL=""https://github.com/PhilipHazel/pcre2/releases/download/pcre2-${PCRE2_CERSION}/${PCRE2_TARBALL}""
PCRE2_DIR=""$(pwd)/pcre2-${PCRE2_VERSION}""
~~ mdziczkowski","PCRE2 related variables changes:
PCRE2_VERSION -> numeric version only
PCRE2_TARBALL=""pcre2-${PCRE2_VERSION}.tar.gz""
PCRE2_URL=""https://github.com/PhilipHazel/pcre2/releases/download/pcre2-${PCRE2_CERSION}/${PCRE2_TARBALL}""
PCRE2_DIR=""$(pwd)/pcre2-${PCRE2_VERSION}""
~~ mdziczkowski",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1383,2021-12-17T18:10:09Z,,2021-12-17T20:02:27Z,OPEN,False,16,8,1,https://github.com/mdziczkowski,Fix for PCRE2 checking and download,4,[],https://github.com/pennmush/pennmush/pull/1383,https://github.com/mdziczkowski,1,https://github.com/pennmush/pennmush/pull/1383,"Changes in PCRE2 related variables:

PCRE2_VERSION -> numeric version only
PCRE2_TARBALL -> ""pcre2-${PCRE2_VERSION}.tar.gz""
PCRE2_URL -> ""https://github.com/PhilipHazel/pcre2/releases/download/pcre2-${PCRE2_VERSION}/${PCRE2_TARBALL}""

PCRE2_DIR=""$(pwd)/pcre2-${PCRE2_VERSION}""
~~ mdziczkowski","Changes in PCRE2 related variables:

PCRE2_VERSION -> numeric version only
PCRE2_TARBALL -> ""pcre2-${PCRE2_VERSION}.tar.gz""
PCRE2_URL -> ""https://github.com/PhilipHazel/pcre2/releases/download/pcre2-${PCRE2_VERSION}/${PCRE2_TARBALL}""

PCRE2_DIR=""$(pwd)/pcre2-${PCRE2_VERSION}""
~~ mdziczkowski",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1384,2021-12-17T20:37:47Z,,2021-12-17T20:37:47Z,OPEN,False,1253,265,2,https://github.com/mdziczkowski,Changes to upload: See description,2,[],https://github.com/pennmush/pennmush/pull/1384,https://github.com/mdziczkowski,1,https://github.com/pennmush/pennmush/pull/1384,"Updated Doxyfile
Add a missing header file: pcre2 without with the compilation mostly fails","Updated Doxyfile
Add a missing header file: pcre2 without with the compilation mostly fails",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1394,2022-02-14T14:23:36Z,2022-02-14T21:27:42Z,2022-02-14T21:27:42Z,MERGED,True,7,7,3,https://github.com/JulesLetters,Add owner() to pertient attribute help files,1,[],https://github.com/pennmush/pennmush/pull/1394,https://github.com/JulesLetters,1,https://github.com/pennmush/pennmush/pull/1394,"attribute functions, @atrchown, attrib-ownership","attribute functions, @atrchown, attrib-ownership",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1397,2022-05-30T23:16:49Z,2022-05-31T02:27:40Z,2022-05-31T02:27:41Z,MERGED,True,132,131,6,https://github.com/HarryCordewener,Issue 1336: Fix it so that mushtype.h #MAX_COMMAND_LEN can be raised.,2,[],https://github.com/pennmush/pennmush/pull/1397,https://github.com/HarryCordewener,1,https://github.com/pennmush/pennmush/pull/1397,"Previously, the uint16_t size used in chunk.h restricted the size of the chunk to as high as needed for increasing buffer lengths.
With the use of uint32_t size, it can now go up to a large enough number where acc_chunk_init's ASSERT can catch it getting too high if MAX_COMMAND_LEN is set to 4096*4. Before this, the game crashed before it could even reach that ASSERT.","Previously, the uint16_t size used in chunk.h restricted the size of the chunk to as high as needed for increasing buffer lengths.
With the use of uint32_t size, it can now go up to a large enough number where acc_chunk_init's ASSERT can catch it getting too high if MAX_COMMAND_LEN is set to 4096*4. Before this, the game crashed before it could even reach that ASSERT.",True,{}
pennmush/pennmush,https://github.com/pennmush/pennmush,1397,2022-05-30T23:16:49Z,2022-05-31T02:27:40Z,2022-05-31T02:27:41Z,MERGED,True,132,131,6,https://github.com/HarryCordewener,Issue 1336: Fix it so that mushtype.h #MAX_COMMAND_LEN can be raised.,2,[],https://github.com/pennmush/pennmush/pull/1397,https://github.com/HarryCordewener,2,https://github.com/pennmush/pennmush/pull/1397#issuecomment-1141552049,"Previously, the uint16_t size used in chunk.h restricted the size of the chunk to as high as needed for increasing buffer lengths.
With the use of uint32_t size, it can now go up to a large enough number where acc_chunk_init's ASSERT can catch it getting too high if MAX_COMMAND_LEN is set to 4096*4. Before this, the game crashed before it could even reach that ASSERT.",Ready for review @talvo @shawnw @mike347,True,{}
