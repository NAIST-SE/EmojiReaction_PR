endlessm/linux,https://github.com/endlessm/linux,85,2016-02-29T11:59:32Z,2016-03-02T00:37:43Z,2016-03-02T00:37:46Z,CLOSED,False,114,1,5,https://github.com/carlocaione,Shell/t6305,2,[],https://github.com/endlessm/linux/pull/85,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/85,T6305,T6305,True,{}
endlessm/linux,https://github.com/endlessm/linux,86,2016-03-25T20:51:38Z,2016-03-25T21:03:35Z,2016-03-25T21:03:39Z,MERGED,True,1,1,1,https://github.com/jprvita,T10942: ideapad_laptop: Makes radio ON/OFF key emit KEY_RFKILL,1,[],https://github.com/endlessm/linux/pull/86,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/86,"Pressing a key to turn radios off should emit KEY_RFKILL instead of
KEY_WLAN.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T10942","Pressing a key to turn radios off should emit KEY_RFKILL instead of
KEY_WLAN.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T10942",True,{}
endlessm/linux,https://github.com/endlessm/linux,87,2016-03-25T21:23:35Z,2016-03-25T21:32:02Z,2016-03-25T21:32:03Z,MERGED,True,621,157,13,https://github.com/jprvita,T11033: Fix Yoga 900 touchpad,16,[],https://github.com/endlessm/linux/pull/87,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/87,https://phabricator.endlessm.com/T11033,https://phabricator.endlessm.com/T11033,True,{}
endlessm/linux,https://github.com/endlessm/linux,88,2016-03-29T22:28:43Z,2016-03-29T22:31:56Z,2016-04-07T23:01:04Z,CLOSED,False,14,0,1,https://github.com/jprvita,i2c: Hardcode sda_hold_time for Lenovo Yoga 900,1,[],https://github.com/endlessm/linux/pull/88,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/88,"The Lenovo Yoga 900 i2c needs a non-zero sda_hold_time in order to work
properly. The correct solution is to have this passed by intel-lpss,
which is what happens on Linux 4.5 and what we have backported to be
released on EOS 2.7. For EOS 2.6 we are providing DMI quirk instead of
backporting the whole series from Linux 4.5 (16 patches).
The solution provided here was taken from a test patch provided for the
original reporter of this problem on
http://www.spinics.net/lists/linux-i2c/msg22055.html
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T1103","The Lenovo Yoga 900 i2c needs a non-zero sda_hold_time in order to work
properly. The correct solution is to have this passed by intel-lpss,
which is what happens on Linux 4.5 and what we have backported to be
released on EOS 2.7. For EOS 2.6 we are providing DMI quirk instead of
backporting the whole series from Linux 4.5 (16 patches).
The solution provided here was taken from a test patch provided for the
original reporter of this problem on
http://www.spinics.net/lists/linux-i2c/msg22055.html
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T1103",True,{}
endlessm/linux,https://github.com/endlessm/linux,89,2016-03-29T22:32:58Z,2016-04-07T23:01:01Z,2016-04-07T23:01:04Z,MERGED,True,14,0,1,https://github.com/jprvita,i2c: Hardcode sda_hold_time for Lenovo Yoga 900,1,[],https://github.com/endlessm/linux/pull/89,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/89,"The Lenovo Yoga 900 i2c needs a non-zero sda_hold_time in order to work
properly. The correct solution is to have this passed by intel-lpss,
which is what happens on Linux 4.5 and what we have backported to be
released on EOS 2.7. For EOS 2.6 we are providing DMI quirk instead of
backporting the whole series from Linux 4.5 (16 patches).
The solution provided here was taken from a test patch provided for the
original reporter of this problem on
http://www.spinics.net/lists/linux-i2c/msg22055.html
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T1103","The Lenovo Yoga 900 i2c needs a non-zero sda_hold_time in order to work
properly. The correct solution is to have this passed by intel-lpss,
which is what happens on Linux 4.5 and what we have backported to be
released on EOS 2.7. For EOS 2.6 we are providing DMI quirk instead of
backporting the whole series from Linux 4.5 (16 patches).
The solution provided here was taken from a test patch provided for the
original reporter of this problem on
http://www.spinics.net/lists/linux-i2c/msg22055.html
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T1103",True,{}
endlessm/linux,https://github.com/endlessm/linux,90,2016-03-30T23:06:21Z,2016-03-31T20:50:59Z,2016-03-31T20:51:55Z,CLOSED,False,6,25,9,https://github.com/jprvita,T10910,2,[],https://github.com/endlessm/linux/pull/90,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/90,"Disable CONFIG_ZONE_DEVICE and CONFIG_NOUVEAU, as these options are breaking the boot on the Asus N522VW.
https://phabricator.endlessm.com/T10910","Disable CONFIG_ZONE_DEVICE and CONFIG_NOUVEAU, as these options are breaking the boot on the Asus N522VW.
https://phabricator.endlessm.com/T10910",True,{}
endlessm/linux,https://github.com/endlessm/linux,91,2016-03-31T14:41:36Z,2016-03-31T14:43:21Z,2016-03-31T14:43:24Z,MERGED,True,5,13,9,https://github.com/jprvita,"T11117: Revert ""UBUNTU: [Config] CONFIG_ZONE_DEVICE=y for amd64""",1,[],https://github.com/endlessm/linux/pull/91,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/91,"This reverts commit a0b5407.
CONFIG_ZONE_DEVICE is triggering a MCE on the Asus N552VW.
https://phabricator.endlessm.com/T11117","This reverts commit a0b5407.
CONFIG_ZONE_DEVICE is triggering a MCE on the Asus N552VW.
https://phabricator.endlessm.com/T11117",True,{}
endlessm/linux,https://github.com/endlessm/linux,92,2016-03-31T15:36:41Z,2016-03-31T16:03:22Z,2016-03-31T16:03:24Z,MERGED,True,14,0,1,https://github.com/jprvita,T11116: config: Disable nouveau on the Asus N552VW,1,[],https://github.com/endlessm/linux/pull/92,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/92,"The Asus N552VW has two video cards (Intel+NVIDIA), we only really use
the Intel one, but the NVIDIA keeps running, raising the machine's
temperature, triggering the fan at full speed, wasting energy, and
sending a lot of errors to the kernel log.
Disable it for now, and revisit later for a proper fix, as some future
machines might depend on it.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T11116","The Asus N552VW has two video cards (Intel+NVIDIA), we only really use
the Intel one, but the NVIDIA keeps running, raising the machine's
temperature, triggering the fan at full speed, wasting energy, and
sending a lot of errors to the kernel log.
Disable it for now, and revisit later for a proper fix, as some future
machines might depend on it.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T11116",True,{}
endlessm/linux,https://github.com/endlessm/linux,93,2016-04-01T20:11:48Z,2016-04-04T14:40:07Z,2016-04-04T14:40:07Z,CLOSED,False,2,2,1,https://github.com/jprvita,asus-nb-wmi: Fix product name typo on DMI quirk,1,[],https://github.com/endlessm/linux/pull/93,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/93,Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com,Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com,True,{}
endlessm/linux,https://github.com/endlessm/linux,94,2016-04-04T13:21:00Z,2016-04-05T11:59:10Z,2016-04-05T11:59:10Z,CLOSED,False,697809,29771,2125,https://github.com/mschiu77,Merge remote-tracking branch 'ubuntu/master-next' into T10839,1,[],https://github.com/endlessm/linux/pull/94,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/94,Merge Ubuntu latest kernel (2016/3/31),Merge Ubuntu latest kernel (2016/3/31),True,{}
endlessm/linux,https://github.com/endlessm/linux,95,2016-04-05T12:05:46Z,2016-04-06T07:52:16Z,2016-04-06T07:52:16Z,CLOSED,False,697808,29779,2125,https://github.com/mschiu77,Merge latest ubuntu kernel,2584,[],https://github.com/endlessm/linux/pull/95,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/95,Merge latest ubuntu kernel (2016/3/31),Merge latest ubuntu kernel (2016/3/31),True,{}
endlessm/linux,https://github.com/endlessm/linux,96,2016-04-06T10:39:13Z,2016-04-07T04:12:43Z,2016-04-07T04:12:43Z,CLOSED,False,1335459,139855,3501,https://github.com/mschiu77,Merge latest ubuntu kernel,2697,[],https://github.com/endlessm/linux/pull/96,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/96,,,True,{}
endlessm/linux,https://github.com/endlessm/linux,97,2016-04-07T06:29:49Z,2016-04-08T16:04:33Z,2016-04-08T16:04:33Z,CLOSED,False,1335879,139958,3514,https://github.com/mschiu77,Merge latest ubuntu kernel,2723,[],https://github.com/endlessm/linux/pull/97,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/97,,,True,{}
endlessm/linux,https://github.com/endlessm/linux,97,2016-04-07T06:29:49Z,2016-04-08T16:04:33Z,2016-04-08T16:04:33Z,CLOSED,False,1335879,139958,3514,https://github.com/mschiu77,Merge latest ubuntu kernel,2723,[],https://github.com/endlessm/linux/pull/97,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/97#issuecomment-207494635,,Closing the PR as we don't need a pull request for this task; we will force-push on master when it is ready.,True,{}
endlessm/linux,https://github.com/endlessm/linux,98,2016-04-07T16:49:44Z,2016-04-12T15:34:50Z,2016-04-12T15:35:07Z,MERGED,True,9,31,1,https://github.com/jprvita,T11110 for eos2.6: airplane-mode indicator LED fixes,5,[],https://github.com/endlessm/linux/pull/98,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/98,"This fixes the airplane-mode indicator LED for the N552VW, X456UA and X456UF Asus laptops.
https://phabricator.endlessm.com/T11110","This fixes the airplane-mode indicator LED for the N552VW, X456UA and X456UF Asus laptops.
https://phabricator.endlessm.com/T11110",True,{}
endlessm/linux,https://github.com/endlessm/linux,99,2016-04-12T04:35:09Z,2016-04-12T13:46:33Z,2016-04-12T13:46:35Z,MERGED,True,39,0,2,https://github.com/jprvita,T10839: load i915 for SKL,1,[],https://github.com/endlessm/linux/pull/99,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/99,https://phabricator.endlessm.com/T10839,https://phabricator.endlessm.com/T10839,True,{}
endlessm/linux,https://github.com/endlessm/linux,100,2016-04-12T13:54:57Z,2016-04-12T15:34:59Z,2016-04-12T15:35:03Z,MERGED,True,9,31,1,https://github.com/jprvita,"T11110: Fix airplane-mode LED on the Asus N552VW, X456UA and X456UF",5,[],https://github.com/endlessm/linux/pull/100,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/100,https://phabricator.endlessm.com/T11110,https://phabricator.endlessm.com/T11110,True,{}
endlessm/linux,https://github.com/endlessm/linux,101,2016-04-12T22:17:17Z,2016-04-12T23:09:43Z,2016-04-12T23:09:45Z,MERGED,True,0,4,1,https://github.com/jprvita,T10839: Fix build,1,[],https://github.com/endlessm/linux/pull/101,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/101,"NOTE FOR FUTURE REBASE: squash this commit on the one introducing the
problem, so we don't have a broken build in our history (which makes
bisects harder).
This fixes a problem introduced by
9c3df35 Revert ""UBUNTU: SAUCE: i915_bpo: Support only SKL, KBL and BXT with the backport driver""
which breaks our build with
In file included from /usr/src/packages/BUILD/linux-4.4.0/include/drm/i915_drm.h:29:0,
from /usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:33:
/usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:439:21: error: 'intel_kabylake_info' undeclared here (not in a function)
INTEL_KBL_GT1_IDS(&intel_kabylake_info),
^
/usr/src/packages/BUILD/linux-4.4.0/include/drm/i915_pciids.h:42:18: note: in definition of macro 'INTEL_VGA_DEVICE'
(unsigned long) info }
^
/usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:439:2: note: in expansion of macro 'INTEL_KBL_GT1_IDS'
INTEL_KBL_GT1_IDS(&intel_kabylake_info),
^
/usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:441:21: error: 'intel_kabylake_gt3_info' undeclared here (not in a function)
INTEL_KBL_GT3_IDS(&intel_kabylake_gt3_info),
^
/usr/src/packages/BUILD/linux-4.4.0/include/drm/i915_pciids.h:42:18: note: in definition of macro 'INTEL_VGA_DEVICE'
(unsigned long) info }
^
/usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:441:2: note: in expansion of macro 'INTEL_KBL_GT3_IDS'
INTEL_KBL_GT3_IDS(&intel_kabylake_gt3_info),
^
make[6]: *** [drivers/gpu/drm/i915/i915_drv.o] Error 1
make[5]: *** [drivers/gpu/drm/i915] Error 2
make[4]: *** [drivers/gpu/drm] Error 2
make[3]: *** [drivers/gpu] Error 2
make[3]: *** Waiting for unfinished jobs....
Since KBL is not yet supported by the i915 driver we're shipping in tree.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T10839","NOTE FOR FUTURE REBASE: squash this commit on the one introducing the
problem, so we don't have a broken build in our history (which makes
bisects harder).
This fixes a problem introduced by
9c3df35 Revert ""UBUNTU: SAUCE: i915_bpo: Support only SKL, KBL and BXT with the backport driver""
which breaks our build with
In file included from /usr/src/packages/BUILD/linux-4.4.0/include/drm/i915_drm.h:29:0,
from /usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:33:
/usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:439:21: error: 'intel_kabylake_info' undeclared here (not in a function)
INTEL_KBL_GT1_IDS(&intel_kabylake_info),
^
/usr/src/packages/BUILD/linux-4.4.0/include/drm/i915_pciids.h:42:18: note: in definition of macro 'INTEL_VGA_DEVICE'
(unsigned long) info }
^
/usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:439:2: note: in expansion of macro 'INTEL_KBL_GT1_IDS'
INTEL_KBL_GT1_IDS(&intel_kabylake_info),
^
/usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:441:21: error: 'intel_kabylake_gt3_info' undeclared here (not in a function)
INTEL_KBL_GT3_IDS(&intel_kabylake_gt3_info),
^
/usr/src/packages/BUILD/linux-4.4.0/include/drm/i915_pciids.h:42:18: note: in definition of macro 'INTEL_VGA_DEVICE'
(unsigned long) info }
^
/usr/src/packages/BUILD/linux-4.4.0/drivers/gpu/drm/i915/i915_drv.c:441:2: note: in expansion of macro 'INTEL_KBL_GT3_IDS'
INTEL_KBL_GT3_IDS(&intel_kabylake_gt3_info),
^
make[6]: *** [drivers/gpu/drm/i915/i915_drv.o] Error 1
make[5]: *** [drivers/gpu/drm/i915] Error 2
make[4]: *** [drivers/gpu/drm] Error 2
make[3]: *** [drivers/gpu] Error 2
make[3]: *** Waiting for unfinished jobs....
Since KBL is not yet supported by the i915 driver we're shipping in tree.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T10839",True,{}
endlessm/linux,https://github.com/endlessm/linux,102,2016-04-15T00:31:25Z,2016-04-15T15:25:03Z,2016-04-15T15:25:04Z,MERGED,True,18,3,1,https://github.com/jprvita,T11082: Fix race between i2c-hid and hid-rmi on Yoga 900,1,[],https://github.com/endlessm/linux/pull/102,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/102,"When an i2c-hid device is resumed from system sleep the driver resets
the device to be sure it is in known state. The device is expected to
issue an interrupt when reset is complete.
This reset might take few milliseconds to complete so if the HID driver
on top (hid-rmi) starts to set up the device by sending feature reports
etc. the device might not issue the reset complete interrupt anymore.
Prevent sending of feature/output reports while the device is being
reset by adding a mutex which is held during that time.
https://phabricator.endlessm.com/T11082","When an i2c-hid device is resumed from system sleep the driver resets
the device to be sure it is in known state. The device is expected to
issue an interrupt when reset is complete.
This reset might take few milliseconds to complete so if the HID driver
on top (hid-rmi) starts to set up the device by sending feature reports
etc. the device might not issue the reset complete interrupt anymore.
Prevent sending of feature/output reports while the device is being
reset by adding a mutex which is held during that time.
https://phabricator.endlessm.com/T11082",True,{}
endlessm/linux,https://github.com/endlessm/linux,103,2016-04-15T00:51:55Z,2016-04-15T15:25:09Z,2016-04-15T15:25:12Z,MERGED,True,18,3,1,https://github.com/jprvita,T11082-eos2.6: Fix race between i2c-hid and hid-rmi on Yoga 900,1,[],https://github.com/endlessm/linux/pull/103,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/103,"When an i2c-hid device is resumed from system sleep the driver resets
the device to be sure it is in known state. The device is expected to
issue an interrupt when reset is complete.
This reset might take few milliseconds to complete so if the HID driver
on top (hid-rmi) starts to set up the device by sending feature reports
etc. the device might not issue the reset complete interrupt anymore.
Prevent sending of feature/output reports while the device is being
reset by adding a mutex which is held during that time.
https://phabricator.endlessm.com/T11082","When an i2c-hid device is resumed from system sleep the driver resets
the device to be sure it is in known state. The device is expected to
issue an interrupt when reset is complete.
This reset might take few milliseconds to complete so if the HID driver
on top (hid-rmi) starts to set up the device by sending feature reports
etc. the device might not issue the reset complete interrupt anymore.
Prevent sending of feature/output reports while the device is being
reset by adding a mutex which is held during that time.
https://phabricator.endlessm.com/T11082",True,{}
endlessm/linux,https://github.com/endlessm/linux,104,2016-04-23T12:35:09Z,2016-04-25T13:17:01Z,2016-04-25T13:17:04Z,MERGED,True,0,61,1,https://github.com/jprvita,Debian: Stop using update-initramfs,1,[],https://github.com/endlessm/linux/pull/104,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/104,"We always shipped dracut as the initramfs generator, but previously
with a update-intramfs wrapper script. On the last dracut update we
decided to drop this wrapper and fix packages use of dracut.
https://phabricator.endlessm.com/T11096","We always shipped dracut as the initramfs generator, but previously
with a update-intramfs wrapper script. On the last dracut update we
decided to drop this wrapper and fix packages use of dracut.
https://phabricator.endlessm.com/T11096",True,{}
endlessm/linux,https://github.com/endlessm/linux,105,2016-05-02T21:34:54Z,2016-05-02T21:53:07Z,2016-05-02T21:53:09Z,MERGED,True,4,0,2,https://github.com/jprvita,T11478: HID: sensor-hub: Add quirk for Lenovo Yoga 900 with ITE Chips,1,[],https://github.com/endlessm/linux/pull/105,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/105,"This needs same quirk as applied to other YOGA sensor hubs.  Refer to commit
21589eb (""HID: sensor-hub: Add in quirk for Lenovo Yogas with ITE"")
Signed-off-by: Srinivas Pandruvada srinivas.pandruvada@linux.intel.com
Signed-off-by: Jiri Kosina jkosina@suse.cz
https://phabricator.endlessm.com/T11478","This needs same quirk as applied to other YOGA sensor hubs.  Refer to commit
21589eb (""HID: sensor-hub: Add in quirk for Lenovo Yogas with ITE"")
Signed-off-by: Srinivas Pandruvada srinivas.pandruvada@linux.intel.com
Signed-off-by: Jiri Kosina jkosina@suse.cz
https://phabricator.endlessm.com/T11478",True,{}
endlessm/linux,https://github.com/endlessm/linux,106,2016-05-13T06:16:00Z,2016-05-13T06:18:32Z,2016-05-13T06:18:32Z,CLOSED,False,17,8,2,https://github.com/mschiu77,drm/radeon: rework fbdev handling on chips with no connectors,1,[],https://github.com/endlessm/linux/pull/106,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/106,"Move all the logic to radeon_fb.c and add checks to functions
called frome elsewhere.
bug:
https://bugzilla.kernel.org/show_bug.cgi?id=112781
Signed-off-by: Alex Deucher alexander.deucher@amd.com
Cc: stable@vger.kernel.org","Move all the logic to radeon_fb.c and add checks to functions
called frome elsewhere.
bug:
https://bugzilla.kernel.org/show_bug.cgi?id=112781
Signed-off-by: Alex Deucher alexander.deucher@amd.com
Cc: stable@vger.kernel.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,107,2016-05-13T06:40:00Z,2016-05-13T13:47:22Z,2016-05-13T13:47:24Z,MERGED,True,17,8,2,https://github.com/mschiu77,drm/radeon: rework fbdev handling on chips with no connectors,1,[],https://github.com/endlessm/linux/pull/107,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/107,"Move all the logic to radeon_fb.c and add checks to functions
called frome elsewhere.
bug:
https://bugzilla.kernel.org/show_bug.cgi?id=112781
Signed-off-by: Alex Deucher alexander.deucher@amd.com
Cc: stable@vger.kernel.org","Move all the logic to radeon_fb.c and add checks to functions
called frome elsewhere.
bug:
https://bugzilla.kernel.org/show_bug.cgi?id=112781
Signed-off-by: Alex Deucher alexander.deucher@amd.com
Cc: stable@vger.kernel.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,108,2016-05-13T14:06:38Z,2016-05-13T14:09:04Z,2016-05-13T14:09:05Z,MERGED,True,3,1,1,https://github.com/jprvita,"Revert ""Revert ""UBUNTU: [Config] CONFIG_ZONE_DEVICE=y for amd64""""",1,[],https://github.com/endlessm/linux/pull/108,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/108,"This reverts commit 25d56cf.
What was causing us problems was CONFIG_ZONE_DMA=n, and not
CONFIG_ZONE_DEVICE=y. Since after our last rebase enabling
CONFIG_ZONE_DEVICE does not require disabling CONFIG_ZONE_DMA, we can
enable it back.
https://phabricator.endlessm.com/T11194","This reverts commit 25d56cf.
What was causing us problems was CONFIG_ZONE_DMA=n, and not
CONFIG_ZONE_DEVICE=y. Since after our last rebase enabling
CONFIG_ZONE_DEVICE does not require disabling CONFIG_ZONE_DMA, we can
enable it back.
https://phabricator.endlessm.com/T11194",True,{}
endlessm/linux,https://github.com/endlessm/linux,109,2016-05-20T16:05:38Z,2016-05-21T01:18:20Z,2016-05-21T01:18:22Z,MERGED,True,5,5,1,https://github.com/mschiu77,Set ABS mode after Wake up touchpad per ELAN's suggestion.,1,[],https://github.com/endlessm/linux/pull/109,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/109,Verified on X456UA and the TP work as expected.,Verified on X456UA and the TP work as expected.,True,{}
endlessm/linux,https://github.com/endlessm/linux,110,2016-05-24T11:01:53Z,2016-05-24T12:41:50Z,2016-05-24T12:41:54Z,MERGED,True,8,0,1,https://github.com/mschiu77,Disable MSI on another problematic ASUS X456UR,1,[],https://github.com/endlessm/linux/pull/110,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/110,for https://phabricator.endlessm.com/T11715,for https://phabricator.endlessm.com/T11715,True,{}
endlessm/linux,https://github.com/endlessm/linux,111,2016-05-25T07:55:24Z,2016-05-25T20:06:28Z,2016-06-06T07:48:55Z,CLOSED,False,15,2,2,https://github.com/mschiu77,Workaround ELAN1000 touchpad wrongly enter into standard mouse mode after warm reboot,2,[],https://github.com/endlessm/linux/pull/111,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/111,https://phabricator.endlessm.com/T11700,https://phabricator.endlessm.com/T11700,True,{}
endlessm/linux,https://github.com/endlessm/linux,111,2016-05-25T07:55:24Z,2016-05-25T20:06:28Z,2016-06-06T07:48:55Z,CLOSED,False,15,2,2,https://github.com/mschiu77,Workaround ELAN1000 touchpad wrongly enter into standard mouse mode after warm reboot,2,[],https://github.com/endlessm/linux/pull/111,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/111#issuecomment-221691104,https://phabricator.endlessm.com/T11700,This was substituted by #112.,True,{}
endlessm/linux,https://github.com/endlessm/linux,112,2016-05-25T19:30:14Z,2016-05-25T19:52:00Z,2016-05-25T19:52:04Z,MERGED,True,28,14,2,https://github.com/jprvita,T11700: Reset ELAN touchpad to ABS mode on warm reboot,3,[],https://github.com/endlessm/linux/pull/112,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/112,https://phabricator.endlessm.com/T11700,https://phabricator.endlessm.com/T11700,True,{}
endlessm/linux,https://github.com/endlessm/linux,113,2016-05-25T19:35:27Z,2016-05-26T17:50:59Z,2016-05-26T17:51:02Z,MERGED,True,23,9,2,https://github.com/jprvita,T11700-eos2.6: Reset ELAN touchpad to ABS mode on warm reboot,2,[],https://github.com/endlessm/linux/pull/113,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/113,https://phabricator.endlessm.com/T11700,https://phabricator.endlessm.com/T11700,True,{}
endlessm/linux,https://github.com/endlessm/linux,114,2016-05-26T11:34:23Z,2016-05-27T09:23:51Z,2016-05-27T16:14:42Z,CLOSED,False,239046,225423,556,https://github.com/carlocaione,T11740,415,[],https://github.com/endlessm/linux/pull/114,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/114,https://phabricator.endlessm.com/T11740,https://phabricator.endlessm.com/T11740,True,{}
endlessm/linux,https://github.com/endlessm/linux,114,2016-05-26T11:34:23Z,2016-05-27T09:23:51Z,2016-05-27T16:14:42Z,CLOSED,False,239046,225423,556,https://github.com/carlocaione,T11740,415,[],https://github.com/endlessm/linux/pull/114,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/114#issuecomment-221880063,https://phabricator.endlessm.com/T11740,I didn't realise that we were already shipping vbox drivers. Can we just stick with the version shipped with ubuntu (5.0.16)? Or if we update to the latest xenial 4.4 kernel we'll get version 5.0.18.,True,{}
endlessm/linux,https://github.com/endlessm/linux,114,2016-05-26T11:34:23Z,2016-05-27T09:23:51Z,2016-05-27T16:14:42Z,CLOSED,False,239046,225423,556,https://github.com/carlocaione,T11740,415,[],https://github.com/endlessm/linux/pull/114,https://github.com/carlocaione,3,https://github.com/endlessm/linux/pull/114#issuecomment-221889659,https://phabricator.endlessm.com/T11740,"We can, but we would need to submit again the guests package in T11739 to match the version shipped in ubuntu.",True,{}
endlessm/linux,https://github.com/endlessm/linux,114,2016-05-26T11:34:23Z,2016-05-27T09:23:51Z,2016-05-27T16:14:42Z,CLOSED,False,239046,225423,556,https://github.com/carlocaione,T11740,415,[],https://github.com/endlessm/linux/pull/114,https://github.com/dsd,4,https://github.com/endlessm/linux/pull/114#issuecomment-221890726,https://phabricator.endlessm.com/T11740,"That sounds like a good move to keep this from being a maintenance headache. But are you sure they have to be in sync? It's perhaps a broken development version, but Ubuntu Yakkety appears to ship 5.0.18 kernel + 5.0.20 userspace right now.",True,{}
endlessm/linux,https://github.com/endlessm/linux,114,2016-05-26T11:34:23Z,2016-05-27T09:23:51Z,2016-05-27T16:14:42Z,CLOSED,False,239046,225423,556,https://github.com/carlocaione,T11740,415,[],https://github.com/endlessm/linux/pull/114,https://github.com/carlocaione,5,https://github.com/endlessm/linux/pull/114#issuecomment-221891308,https://phabricator.endlessm.com/T11740,"well, not sure, I'm just assuming here and I'm scared we can diverge too much soon. I can try with 5.0.16 kernel + 5.0.20 userspace",True,{}
endlessm/linux,https://github.com/endlessm/linux,115,2016-05-27T08:21:46Z,2020-09-18T13:29:35Z,2020-09-18T13:29:35Z,CLOSED,False,1354145,144609,3819,https://github.com/carlocaione,T11750,3152,[],https://github.com/endlessm/linux/pull/115,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/115,https://phabricator.endlessm.com/T11750,https://phabricator.endlessm.com/T11750,True,{}
endlessm/linux,https://github.com/endlessm/linux,116,2016-05-27T08:22:08Z,2016-05-27T13:48:05Z,2016-05-31T16:15:00Z,MERGED,True,239031,225423,551,https://github.com/carlocaione,T11750 merge,413,[],https://github.com/endlessm/linux/pull/116,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/116,https://phabricator.endlessm.com/T11750,https://phabricator.endlessm.com/T11750,True,{}
endlessm/linux,https://github.com/endlessm/linux,117,2016-05-27T09:25:01Z,2016-05-27T16:14:40Z,2016-05-27T16:14:42Z,CLOSED,False,15,0,6,https://github.com/carlocaione,T11740,2,[],https://github.com/endlessm/linux/pull/117,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/117,https://phabricator.endlessm.com/T11740,https://phabricator.endlessm.com/T11740,True,{}
endlessm/linux,https://github.com/endlessm/linux,117,2016-05-27T09:25:01Z,2016-05-27T16:14:40Z,2016-05-27T16:14:42Z,CLOSED,False,15,0,6,https://github.com/carlocaione,T11740,2,[],https://github.com/endlessm/linux/pull/117,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/117#issuecomment-222153436,https://phabricator.endlessm.com/T11740,"I don't understand why this is needed. ubuntu/Makefile already has
ifneq ($(filter $(ARCH), i386 x86_64),)
obj-y                         += vbox/
endif",True,{}
endlessm/linux,https://github.com/endlessm/linux,117,2016-05-27T09:25:01Z,2016-05-27T16:14:40Z,2016-05-27T16:14:42Z,CLOSED,False,15,0,6,https://github.com/carlocaione,T11740,2,[],https://github.com/endlessm/linux/pull/117,https://github.com/carlocaione,3,https://github.com/endlessm/linux/pull/117#issuecomment-222157364,https://phabricator.endlessm.com/T11740,"Because:

for some reason to trigger that you have to specify ARCH even when compiling on a x86_64 / i386 host (make ARCH=x86_64 works fine, make doesn't)
to enforce select DRM_TTM",True,{}
endlessm/linux,https://github.com/endlessm/linux,117,2016-05-27T09:25:01Z,2016-05-27T16:14:40Z,2016-05-27T16:14:42Z,CLOSED,False,15,0,6,https://github.com/carlocaione,T11740,2,[],https://github.com/endlessm/linux/pull/117,https://github.com/dsd,4,https://github.com/endlessm/linux/pull/117#issuecomment-222188919,https://phabricator.endlessm.com/T11740,pushed alternative fixes,True,{}
endlessm/linux,https://github.com/endlessm/linux,118,2016-05-27T15:12:39Z,2016-05-27T15:24:28Z,2016-05-27T15:24:30Z,MERGED,True,4,4,3,https://github.com/dsd,"Revert ""config: Build i915 drm driver into kernel""",1,[],https://github.com/endlessm/linux/pull/118,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/118,"This reverts commit 556079a.
The plymouth/udev race that we were previously trying to avoid is
now fixed.
https://phabricator.endlessm.com/T11611","This reverts commit 556079a.
The plymouth/udev race that we were previously trying to avoid is
now fixed.
https://phabricator.endlessm.com/T11611",True,{}
endlessm/linux,https://github.com/endlessm/linux,119,2016-05-31T16:19:04Z,2016-05-31T16:21:23Z,2016-05-31T16:21:25Z,MERGED,True,6,5,4,https://github.com/jprvita,T11561: Reduce severity of radeon error messages,2,[],https://github.com/endlessm/linux/pull/119,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/119,"Reduce severity of radeon error messages.
https://phabricator.endlessm.com/T11561","Reduce severity of radeon error messages.
https://phabricator.endlessm.com/T11561",True,{}
endlessm/linux,https://github.com/endlessm/linux,120,2016-05-31T16:19:30Z,2016-05-31T16:20:36Z,2016-06-07T20:05:11Z,CLOSED,False,1050412,98140,2052,https://github.com/jprvita,T11561 eos2.6,479,[],https://github.com/endlessm/linux/pull/120,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/120,,,True,{}
endlessm/linux,https://github.com/endlessm/linux,120,2016-05-31T16:19:30Z,2016-05-31T16:20:36Z,2016-06-07T20:05:11Z,CLOSED,False,1050412,98140,2052,https://github.com/jprvita,T11561 eos2.6,479,[],https://github.com/endlessm/linux/pull/120,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/120#issuecomment-222741149,,Accidentally opened against the wrong base.,True,{}
endlessm/linux,https://github.com/endlessm/linux,121,2016-05-31T16:22:44Z,2016-06-07T20:05:08Z,2016-06-07T20:05:11Z,MERGED,True,28,17,5,https://github.com/jprvita,T11561-eos2.6: Reduce severity of radeon error messages,3,[],https://github.com/endlessm/linux/pull/121,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/121,"Reduce severity of radeon and AMD IOMMU error messages.
https://phabricator.endlessm.com/T11561","Reduce severity of radeon and AMD IOMMU error messages.
https://phabricator.endlessm.com/T11561",True,{}
endlessm/linux,https://github.com/endlessm/linux,122,2016-06-01T15:15:02Z,2016-06-02T18:20:50Z,2016-06-02T18:20:52Z,MERGED,True,0,35,2,https://github.com/jprvita,T11827: Let i915_bpo handle SKL devices,2,[],https://github.com/endlessm/linux/pull/122,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/122,https://phabricator.endlessm.com/T11827,https://phabricator.endlessm.com/T11827,True,{}
endlessm/linux,https://github.com/endlessm/linux,123,2016-06-06T13:39:19Z,,2022-04-12T21:36:12Z,OPEN,False,1354104,144610,3823,https://github.com/mschiu77,Set ELAN touchpad to ABS mode correctly,3176,[],https://github.com/endlessm/linux/pull/123,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/123,,,True,{}
endlessm/linux,https://github.com/endlessm/linux,124,2016-06-06T15:49:07Z,2016-06-07T16:13:00Z,2016-06-07T16:13:03Z,MERGED,True,26,0,1,https://github.com/jprvita,ideapad: DMI quirk for touchpad control,1,[],https://github.com/endlessm/linux/pull/124,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/124,"Don't try to control the touchpad on laptops that do not support it, as
it leads to sending wrong KEY_TOUCHPAD_ON / KEY_TOUCHPAD_OFF events to
userspace.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T11369","Don't try to control the touchpad on laptops that do not support it, as
it leads to sending wrong KEY_TOUCHPAD_ON / KEY_TOUCHPAD_OFF events to
userspace.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T11369",True,{}
endlessm/linux,https://github.com/endlessm/linux,124,2016-06-06T15:49:07Z,2016-06-07T16:13:00Z,2016-06-07T16:13:03Z,MERGED,True,26,0,1,https://github.com/jprvita,ideapad: DMI quirk for touchpad control,1,[],https://github.com/endlessm/linux/pull/124,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/124#issuecomment-224003943,"Don't try to control the touchpad on laptops that do not support it, as
it leads to sending wrong KEY_TOUCHPAD_ON / KEY_TOUCHPAD_OFF events to
userspace.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T11369",Can you note in the commit message what seems to be preventing this from being accepted upstream?,True,{}
endlessm/linux,https://github.com/endlessm/linux,124,2016-06-06T15:49:07Z,2016-06-07T16:13:00Z,2016-06-07T16:13:03Z,MERGED,True,26,0,1,https://github.com/jprvita,ideapad: DMI quirk for touchpad control,1,[],https://github.com/endlessm/linux/pull/124,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/124#issuecomment-224005677,"Don't try to control the touchpad on laptops that do not support it, as
it leads to sending wrong KEY_TOUCHPAD_ON / KEY_TOUCHPAD_OFF events to
userspace.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T11369","I'm sending this one upstream now, lets see their reaction and then I can note it in the commit message. I think there is some chance of it being accepted.",True,{}
endlessm/linux,https://github.com/endlessm/linux,125,2016-06-23T18:51:24Z,2016-06-23T19:34:46Z,2016-06-23T19:34:48Z,MERGED,True,8,0,1,https://github.com/mschiu77,Disable MSI on another problematic ASUS X541UV,1,[],https://github.com/endlessm/linux/pull/125,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/125,,,True,{}
endlessm/linux,https://github.com/endlessm/linux,126,2016-06-27T14:09:20Z,2016-06-28T16:01:39Z,2016-06-28T16:01:41Z,CLOSED,False,2,2,1,https://github.com/jprvita,[T12096] certs: Add Endless info to module signing bits,1,[],https://github.com/endlessm/linux/pull/126,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/126,"Add owner and email address to the x509.genkey config file, used for
generating the module signing key pair and certificate.
https://phabricator.endlessm.com/T12096","Add owner and email address to the x509.genkey config file, used for
generating the module signing key pair and certificate.
https://phabricator.endlessm.com/T12096",True,{}
endlessm/linux,https://github.com/endlessm/linux,127,2016-06-27T20:07:20Z,2016-06-29T16:10:02Z,2016-06-29T16:10:05Z,MERGED,True,38,0,6,https://github.com/jprvita,T12101: Restrict more kernel functionality when secure booted,6,[],https://github.com/endlessm/linux/pull/127,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/127,"Backport Matthew Garrett's securelevel framework to prevent malicious users or hardware / firmware to disable secure boot and potentially chainload another OS or bootloader.
https://phabricator.endlessm.com/T12101","Backport Matthew Garrett's securelevel framework to prevent malicious users or hardware / firmware to disable secure boot and potentially chainload another OS or bootloader.
https://phabricator.endlessm.com/T12101",True,{}
endlessm/linux,https://github.com/endlessm/linux,128,2016-06-29T16:30:11Z,2016-06-29T16:32:58Z,2016-06-29T16:33:00Z,MERGED,True,1,0,1,https://github.com/jprvita,fixup! uswsusp: Disable when module signing is enforced,1,[],https://github.com/endlessm/linux/pull/128,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/128,"Fix missing include.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T12101","Fix missing include.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T12101",True,{}
endlessm/linux,https://github.com/endlessm/linux,129,2016-07-02T06:07:51Z,2016-07-04T19:07:55Z,2016-07-04T19:07:57Z,MERGED,True,1,0,1,https://github.com/mschiu77,sound/hda: Add pin quirk for ASUS X541UV headset mic,1,[],https://github.com/endlessm/linux/pull/129,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/129,"This laptop use the same FIXUP/pin as X540SA/X555UB mic
Signed-off-by: Chris Chiu chiu@endlessm.com","This laptop use the same FIXUP/pin as X540SA/X555UB mic
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,130,2016-07-02T06:18:48Z,2016-07-06T11:34:11Z,2016-07-06T11:34:11Z,CLOSED,False,11,0,1,https://github.com/mschiu77,Sound: hda - Fix headset support for ASUS X441SA,1,[],https://github.com/endlessm/linux/pull/130,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/130,"ASUS X441SA with ALC3236 (ALC223) codec requires the known fixup
(ALC269_FIXUP_HEADSET_MIC) and a different pin value on pin 0x19
for making the headset mic working.
Signed-off-by: Chris Chiu chiu@endlessm.com","ASUS X441SA with ALC3236 (ALC223) codec requires the known fixup
(ALC269_FIXUP_HEADSET_MIC) and a different pin value on pin 0x19
for making the headset mic working.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,131,2016-07-02T09:42:55Z,2016-07-04T18:27:14Z,2016-07-04T18:27:16Z,MERGED,True,4,4,1,https://github.com/mschiu77,PCI: disable MSI on problematic ASUS X541UV,2,[],https://github.com/endlessm/linux/pull/131,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/131,"pcieport 0000:00:1c.5: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.5: PCIe Bus Error: severity=Corrected,
type=Physical Layer, id=00e5(Receiver ID)
pcieport 0000:00:1c.5:   device [8086:9d15] error status/mask=00000001/00002000
pcieport 0000:00:1c.5:    [ 0] Receiver Error         (First)
avoid this with adding a quirk for X541UV","pcieport 0000:00:1c.5: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.5: PCIe Bus Error: severity=Corrected,
type=Physical Layer, id=00e5(Receiver ID)
pcieport 0000:00:1c.5:   device [8086:9d15] error status/mask=00000001/00002000
pcieport 0000:00:1c.5:    [ 0] Receiver Error         (First)
avoid this with adding a quirk for X541UV",True,{}
endlessm/linux,https://github.com/endlessm/linux,132,2016-07-06T11:33:37Z,2016-07-06T17:32:42Z,2016-07-06T17:32:45Z,MERGED,True,11,0,1,https://github.com/mschiu77,Sound: hda - Fix headset support for ASUS X441SA,1,[],https://github.com/endlessm/linux/pull/132,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/132,"ASUS X441SA with ALC3236 (ALC223) codec requires the known fixup
(ALC269_FIXUP_HEADSET_MIC) and a different pin value on pin 0x19
for making the headset mic working.
Signed-off-by: Chris Chiu chiu@endlessm.com","ASUS X441SA with ALC3236 (ALC223) codec requires the known fixup
(ALC269_FIXUP_HEADSET_MIC) and a different pin value on pin 0x19
for making the headset mic working.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,133,2016-07-08T19:58:38Z,2016-07-08T22:29:42Z,2017-01-18T15:50:34Z,MERGED,True,13,2,1,https://github.com/mschiu77,HID: multitouch: fix input mode switching on some Elan panels,1,[],https://github.com/endlessm/linux/pull/133,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/133,"commit 73e7d63 upstream.
as reported by https://bugzilla.kernel.org/show_bug.cgi?id=108481
This bug reports mentions 6d4f544 (""HID: multitouch: Fetch feature
reports on demand for Win8 devices"") as the origin of the problem but this
commit actually masked 2 firmware bugs that are annihilating each other:
The report descriptor declares two features in reports 3 and 5:
0x05, 0x0d,                    // Usage Page (Digitizers)             318
0x09, 0x0e,                    // Usage (Device Configuration)        320
0xa1, 0x01,                    // Collection (Application)            322
0x85, 0x03,                    //  Report ID (3)                      324
0x09, 0x22,                    //  Usage (Finger)                     326
0xa1, 0x00,                    //  Collection (Physical)              328
0x09, 0x52,                    //   Usage (Inputmode)                 330
0x15, 0x00,                    //   Logical Minimum (0)               332
0x25, 0x0a,                    //   Logical Maximum (10)              334
0x75, 0x08,                    //   Report Size (8)                   336
0x95, 0x02,                    //   Report Count (2)                  338
0xb1, 0x02,                    //   Feature (Data,Var,Abs)            340
0xc0,                          //  End Collection                     342
0x09, 0x22,                    //  Usage (Finger)                     343
0xa1, 0x00,                    //  Collection (Physical)              345
0x85, 0x05,                    //   Report ID (5)                     347
0x09, 0x57,                    //   Usage (Surface Switch)            349
0x09, 0x58,                    //   Usage (Button Switch)             351
0x15, 0x00,                    //   Logical Minimum (0)               353
0x75, 0x01,                    //   Report Size (1)                   355
0x95, 0x02,                    //   Report Count (2)                  357
0x25, 0x03,                    //   Logical Maximum (3)               359
0xb1, 0x02,                    //   Feature (Data,Var,Abs)            361
0x95, 0x0e,                    //   Report Count (14)                 363
0xb1, 0x03,                    //   Feature (Cnst,Var,Abs)            365
0xc0,                          //  End Collection                     367
The report ID 3 presents 2 input mode features, while only the first one
is handled by the device. Given that we did not checked if one was
previously assigned, we were dealing with the ignored featured and we
should never have been able to switch this panel into the multitouch mode.
However, the firmware presents an other bugs which allowed 6d4f544
to counteract the faulty report descriptor. When we request the values
of the feature 5, the firmware answers ""03 03 00"". The fields are correct
but the report id is wrong. Before 6d4f544, we retrieved all the features
and injected them in the system. So when we called report 5, we injected
in the system the report 3 with the values ""03 00"".
Setting the second input mode to 03 in this report changed it to ""03 03""
and the touchpad switched to the mt mode. We could have set anything
in the second field because the actual value (the first 03 in this report)
was given by the query of report ID 5.
To sum up: 2 bugs in the firmware were hiding that we were accessing the
wrong feature.
Signed-off-by: Benjamin Tissoires benjamin.tissoires@redhat.com
Signed-off-by: Jiri Kosina jkosina@suse.cz
Signed-off-by: Greg Kroah-Hartman gregkh@linuxfoundation.org","commit 73e7d63 upstream.
as reported by https://bugzilla.kernel.org/show_bug.cgi?id=108481
This bug reports mentions 6d4f544 (""HID: multitouch: Fetch feature
reports on demand for Win8 devices"") as the origin of the problem but this
commit actually masked 2 firmware bugs that are annihilating each other:
The report descriptor declares two features in reports 3 and 5:
0x05, 0x0d,                    // Usage Page (Digitizers)             318
0x09, 0x0e,                    // Usage (Device Configuration)        320
0xa1, 0x01,                    // Collection (Application)            322
0x85, 0x03,                    //  Report ID (3)                      324
0x09, 0x22,                    //  Usage (Finger)                     326
0xa1, 0x00,                    //  Collection (Physical)              328
0x09, 0x52,                    //   Usage (Inputmode)                 330
0x15, 0x00,                    //   Logical Minimum (0)               332
0x25, 0x0a,                    //   Logical Maximum (10)              334
0x75, 0x08,                    //   Report Size (8)                   336
0x95, 0x02,                    //   Report Count (2)                  338
0xb1, 0x02,                    //   Feature (Data,Var,Abs)            340
0xc0,                          //  End Collection                     342
0x09, 0x22,                    //  Usage (Finger)                     343
0xa1, 0x00,                    //  Collection (Physical)              345
0x85, 0x05,                    //   Report ID (5)                     347
0x09, 0x57,                    //   Usage (Surface Switch)            349
0x09, 0x58,                    //   Usage (Button Switch)             351
0x15, 0x00,                    //   Logical Minimum (0)               353
0x75, 0x01,                    //   Report Size (1)                   355
0x95, 0x02,                    //   Report Count (2)                  357
0x25, 0x03,                    //   Logical Maximum (3)               359
0xb1, 0x02,                    //   Feature (Data,Var,Abs)            361
0x95, 0x0e,                    //   Report Count (14)                 363
0xb1, 0x03,                    //   Feature (Cnst,Var,Abs)            365
0xc0,                          //  End Collection                     367
The report ID 3 presents 2 input mode features, while only the first one
is handled by the device. Given that we did not checked if one was
previously assigned, we were dealing with the ignored featured and we
should never have been able to switch this panel into the multitouch mode.
However, the firmware presents an other bugs which allowed 6d4f544
to counteract the faulty report descriptor. When we request the values
of the feature 5, the firmware answers ""03 03 00"". The fields are correct
but the report id is wrong. Before 6d4f544, we retrieved all the features
and injected them in the system. So when we called report 5, we injected
in the system the report 3 with the values ""03 00"".
Setting the second input mode to 03 in this report changed it to ""03 03""
and the touchpad switched to the mt mode. We could have set anything
in the second field because the actual value (the first 03 in this report)
was given by the query of report ID 5.
To sum up: 2 bugs in the firmware were hiding that we were accessing the
wrong feature.
Signed-off-by: Benjamin Tissoires benjamin.tissoires@redhat.com
Signed-off-by: Jiri Kosina jkosina@suse.cz
Signed-off-by: Greg Kroah-Hartman gregkh@linuxfoundation.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,134,2016-07-19T08:53:03Z,2016-07-19T13:45:12Z,2016-07-19T13:45:12Z,MERGED,True,13,1,1,https://github.com/mschiu77,Sound: hda - Fix speaker no sound issue for ASUS X441SA,1,[],https://github.com/endlessm/linux/pull/134,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/134,"ASUS X441SA with ALC3236 (ALC223) codec requires an external amplifier
for speaker and a pin fixup on 0x19 to make headset mic work. This
commit reuse commit 2540eaf and add
an EAPD verb fixup to enable internal speaker.
Signed-off-by: Chris Chiu chiu@endlessm.com","ASUS X441SA with ALC3236 (ALC223) codec requires an external amplifier
for speaker and a pin fixup on 0x19 to make headset mic work. This
commit reuse commit 2540eaf and add
an EAPD verb fixup to enable internal speaker.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,135,2016-07-20T19:08:58Z,2016-11-07T14:30:03Z,2020-05-18T18:35:41Z,CLOSED,False,18,0,1,https://github.com/carlocaione,intel_idle: Disable all C6 states for Asus Z550MA,1,[],https://github.com/endlessm/linux/pull/135,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/135,https://phabricator.endlessm.com/T6380,https://phabricator.endlessm.com/T6380,True,{}
endlessm/linux,https://github.com/endlessm/linux,135,2016-07-20T19:08:58Z,2016-11-07T14:30:03Z,2020-05-18T18:35:41Z,CLOSED,False,18,0,1,https://github.com/carlocaione,intel_idle: Disable all C6 states for Asus Z550MA,1,[],https://github.com/endlessm/linux/pull/135,https://github.com/carlocaione,2,https://github.com/endlessm/linux/pull/135#issuecomment-257788823,https://phabricator.endlessm.com/T6380,@parrotgeek1 we have never seen this issue on the N2807 but the patch seems promising. Can you open a ticket on phabricator so we can track this down?,True,{}
endlessm/linux,https://github.com/endlessm/linux,135,2016-07-20T19:08:58Z,2016-11-07T14:30:03Z,2020-05-18T18:35:41Z,CLOSED,False,18,0,1,https://github.com/carlocaione,intel_idle: Disable all C6 states for Asus Z550MA,1,[],https://github.com/endlessm/linux/pull/135,https://github.com/carlocaione,3,https://github.com/endlessm/linux/pull/135#issuecomment-258849805,https://phabricator.endlessm.com/T6380,"@parrotgeek1 well, apparently I confused you with another guy also called Ethan who works in Endless, sorry for that :)
IIRC we actually already tried that fix on the Asus Z550MA and it didn't work, but I'll upgrade the internal ticket with a pointer to this patch, just in case we see other computers in the wild affected by the same issue.
Thank you for the time you spent on this, really appreciated.",True,{}
endlessm/linux,https://github.com/endlessm/linux,136,2016-07-20T19:37:01Z,2016-07-20T21:27:58Z,2016-07-20T21:28:02Z,MERGED,True,15,0,1,https://github.com/carlocaione,intel_idle: Force max_cstate to 1 on Asus Z550MA,1,[],https://github.com/endlessm/linux/pull/136,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/136,https://phabricator.endlessm.com/T6380,https://phabricator.endlessm.com/T6380,True,{}
endlessm/linux,https://github.com/endlessm/linux,137,2016-07-20T21:14:52Z,2016-07-20T22:00:35Z,2016-07-20T22:00:37Z,MERGED,True,16,1,1,https://github.com/bantin,i915: Force DP probe Port B on ASUS X441SA,1,[],https://github.com/endlessm/linux/pull/137,https://github.com/bantin,1,https://github.com/endlessm/linux/pull/137,"Similar to https://bugs.freedesktop.org/show_bug.cgi?id=96321.
ASUS X441SA does not probe displayPort on Port B. The displayPort is
connected to the external VGA connector, thus the external VGA is not
functional. This is a temporary workaround.
https://phabricator.endlessm.com/T12353","Similar to https://bugs.freedesktop.org/show_bug.cgi?id=96321.
ASUS X441SA does not probe displayPort on Port B. The displayPort is
connected to the external VGA connector, thus the external VGA is not
functional. This is a temporary workaround.
https://phabricator.endlessm.com/T12353",True,{}
endlessm/linux,https://github.com/endlessm/linux,137,2016-07-20T21:14:52Z,2016-07-20T22:00:35Z,2016-07-20T22:00:37Z,MERGED,True,16,1,1,https://github.com/bantin,i915: Force DP probe Port B on ASUS X441SA,1,[],https://github.com/endlessm/linux/pull/137,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/137#issuecomment-234086926,"Similar to https://bugs.freedesktop.org/show_bug.cgi?id=96321.
ASUS X441SA does not probe displayPort on Port B. The displayPort is
connected to the external VGA connector, thus the external VGA is not
functional. This is a temporary workaround.
https://phabricator.endlessm.com/T12353","Please add the issue link to the commit description, and prefix the commit message title with ""i915:"".
I don't think the issue is incorrect information from the VBT - to borrow wording from http://www.mail-archive.com/intel-gfx@lists.freedesktop.org/msg90008.html it is instead that the port presence strap is not hooked up on the hardware level. (Following that issue our likely solution is to instead look at the VBT which hopefully has correct info, but no need to speculate on that here)",True,{}
endlessm/linux,https://github.com/endlessm/linux,138,2016-07-22T10:57:21Z,2016-07-25T14:56:33Z,2016-07-25T14:56:37Z,MERGED,True,1,0,1,https://github.com/mschiu77,sound/hda: Add pin quirk for ASUS X541SA headset mic,1,[],https://github.com/endlessm/linux/pull/138,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/138,"This laptop use the same FIXUP/pin as X540SA/X555UB/X541UV mic
Signed-off-by: Chris Chiu chiu@endlessm.com","This laptop use the same FIXUP/pin as X540SA/X555UB/X541UV mic
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,139,2016-07-26T12:49:34Z,2016-07-26T15:09:45Z,2016-07-26T15:09:47Z,MERGED,True,1,0,1,https://github.com/mschiu77,Sound: hda - Fix speaker no sound and mic not present for ASUS X441UV,1,[],https://github.com/endlessm/linux/pull/139,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/139,"ASUS X441UV is using ALC3236 (ALC223) codec same as ASUS X441SA
which requires an external amplifier for speaker and a pin fixup on 0x19
to make headset mic work.
Signed-off-by: Chris Chiu chiu@endlessm.com","ASUS X441UV is using ALC3236 (ALC223) codec same as ASUS X441SA
which requires an external amplifier for speaker and a pin fixup on 0x19
to make headset mic work.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,140,2016-07-28T13:51:34Z,2016-07-28T17:07:58Z,2016-07-28T17:08:00Z,MERGED,True,1,0,1,https://github.com/mschiu77,sound/hda: Add pin quirk for ASUS Z550SA headset mic,1,[],https://github.com/endlessm/linux/pull/140,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/140,"This laptop uses the same FIXUP/pin for ALC256 as X541UV/X541SA
Signed-off-by: Chris Chiu chiu@endlessm.com","This laptop uses the same FIXUP/pin for ALC256 as X541UV/X541SA
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,141,2016-08-09T08:09:00Z,2016-08-09T21:13:53Z,2016-08-09T21:13:55Z,MERGED,True,4,62,2,https://github.com/mschiu77,PCI: disable MSI on Realtek 8723BE/8821AE ,2,[],https://github.com/endlessm/linux/pull/141,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/141,"In the default configuration, these Asus laptops log a lot of PCIe
AER spam, and this potentially also causes some system instability:
pcieport 0000:00:1c.5: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.5: PCIe Bus Error: severity=Corrected,
type=Physical Layer, id=00e5(Receiver ID)
pcieport 0000:00:1c.5:   device [8086:9d15] error status/mask=00000001/0000
2000
pcieport 0000:00:1c.5:    [ 0] Receiver Error         (First)
pcieport 0000:00:1c.5: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.5: PCIe Bus Error: severity=Corrected,
type=Physical Layer, id=00e5(Receiver ID)
pcieport 0000:00:1c.5:   device [8086:9d15] error status/mask=00000001/00002000
pcieport 0000:00:1c.5:    [ 0] Receiver Error         (First)
pcieport 0000:00:1c.5: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.5: can't find device of ID00e5
Booting with pci=nomsi or pcie_aspm=off avoids the problem.
In this case, 00:1c.5 is a PCIe bridge with the wifi card the
other side. However, setting no_msi on that pci_dev is not enough to
kill the spam. So lets just disable MSI for Realtek 8723BE/8821AE
which has been verified the cause of MSI storm in most cases.","In the default configuration, these Asus laptops log a lot of PCIe
AER spam, and this potentially also causes some system instability:
pcieport 0000:00:1c.5: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.5: PCIe Bus Error: severity=Corrected,
type=Physical Layer, id=00e5(Receiver ID)
pcieport 0000:00:1c.5:   device [8086:9d15] error status/mask=00000001/0000
2000
pcieport 0000:00:1c.5:    [ 0] Receiver Error         (First)
pcieport 0000:00:1c.5: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.5: PCIe Bus Error: severity=Corrected,
type=Physical Layer, id=00e5(Receiver ID)
pcieport 0000:00:1c.5:   device [8086:9d15] error status/mask=00000001/00002000
pcieport 0000:00:1c.5:    [ 0] Receiver Error         (First)
pcieport 0000:00:1c.5: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.5: can't find device of ID00e5
Booting with pci=nomsi or pcie_aspm=off avoids the problem.
In this case, 00:1c.5 is a PCIe bridge with the wifi card the
other side. However, setting no_msi on that pci_dev is not enough to
kill the spam. So lets just disable MSI for Realtek 8723BE/8821AE
which has been verified the cause of MSI storm in most cases.",True,{}
endlessm/linux,https://github.com/endlessm/linux,142,2016-08-09T21:21:54Z,2016-08-10T13:36:27Z,2016-08-10T13:36:29Z,MERGED,True,1,8,2,https://github.com/jprvita,config: Build linux-source with contents,1,[],https://github.com/endlessm/linux/pull/142,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/142,"This is used by cross-toolchain-base, which is needed to build
cross-compilers.
https://phabricator.endlessm.com/T10613","This is used by cross-toolchain-base, which is needed to build
cross-compilers.
https://phabricator.endlessm.com/T10613",True,{}
endlessm/linux,https://github.com/endlessm/linux,143,2016-08-10T16:23:08Z,2016-08-10T18:28:28Z,2016-08-10T18:28:31Z,MERGED,True,17,14,1,https://github.com/bantin,ubuntu/i915: Apply patch for large number of ACPI display devices,1,[],https://github.com/endlessm/linux/pull/143,https://github.com/bantin,1,https://github.com/endlessm/linux/pull/143,"Machines that use Ubuntu provided display drivers are currently
vulnerable to the bug described in commit 3f713ab. This applies commit 3f713ab to the Ubuntu provided i915 drivers.
https://phabricator.endlessm.com/T12709
Signed-off-by: Benjamin Antin ben.antin@endlessm.com","Machines that use Ubuntu provided display drivers are currently
vulnerable to the bug described in commit 3f713ab. This applies commit 3f713ab to the Ubuntu provided i915 drivers.
https://phabricator.endlessm.com/T12709
Signed-off-by: Benjamin Antin ben.antin@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,143,2016-08-10T16:23:08Z,2016-08-10T18:28:28Z,2016-08-10T18:28:31Z,MERGED,True,17,14,1,https://github.com/bantin,ubuntu/i915: Apply patch for large number of ACPI display devices,1,[],https://github.com/endlessm/linux/pull/143,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/143#issuecomment-238922447,"Machines that use Ubuntu provided display drivers are currently
vulnerable to the bug described in commit 3f713ab. This applies commit 3f713ab to the Ubuntu provided i915 drivers.
https://phabricator.endlessm.com/T12709
Signed-off-by: Benjamin Antin ben.antin@endlessm.com","please use the commit message and authorship from the original commit. If you want to add a comment to explain the situation, do it at the end of the message enclosed in [square brackets]",True,{}
endlessm/linux,https://github.com/endlessm/linux,144,2016-08-11T16:44:25Z,2016-08-11T20:12:37Z,2016-08-11T20:12:39Z,CLOSED,False,3,0,1,https://github.com/mschiu77,Sound: hda - Fix headset mic not present on ASUS X540LA/X540LJ/X556UR,1,[],https://github.com/endlessm/linux/pull/144,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/144,"ASUS X540LJ/X540LA/X556UR laptops with ALC255 codec require the known
fixup (ALC255_FIXUP_ASUS_MIC_NO_PRESENCE) to make the headset mic work.
Signed-off-by: Chris Chiu chiu@endlessm.com","ASUS X540LJ/X540LA/X556UR laptops with ALC255 codec require the known
fixup (ALC255_FIXUP_ASUS_MIC_NO_PRESENCE) to make the headset mic work.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,144,2016-08-11T16:44:25Z,2016-08-11T20:12:37Z,2016-08-11T20:12:39Z,CLOSED,False,3,0,1,https://github.com/mschiu77,Sound: hda - Fix headset mic not present on ASUS X540LA/X540LJ/X556UR,1,[],https://github.com/endlessm/linux/pull/144,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/144#issuecomment-239277507,"ASUS X540LJ/X540LA/X556UR laptops with ALC255 codec require the known
fixup (ALC255_FIXUP_ASUS_MIC_NO_PRESENCE) to make the headset mic work.
Signed-off-by: Chris Chiu chiu@endlessm.com",merged in 75fc41b,True,{}
endlessm/linux,https://github.com/endlessm/linux,145,2016-08-12T08:58:33Z,2016-08-12T13:57:00Z,2016-08-12T13:57:02Z,MERGED,True,1,0,1,https://github.com/mschiu77,Sound/hda: Apply headset-mode and internal mic fixup on ASUS X540SA,1,[],https://github.com/endlessm/linux/pull/145,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/145,"with differnt subsystem id
Same ASUS X540SA but with different ALC256 subsystem id needs the
same fixup for jack sensing/internal mic/headset to work properly.
https://phabricator.endlessm.com/T12912
Signed-off-by: Chris Chiu chiu@endlessm.com","with differnt subsystem id
Same ASUS X540SA but with different ALC256 subsystem id needs the
same fixup for jack sensing/internal mic/headset to work properly.
https://phabricator.endlessm.com/T12912
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,146,2016-08-16T20:54:42Z,2016-08-16T22:05:29Z,2016-08-25T14:08:10Z,MERGED,True,23,4,2,https://github.com/dsd,New workaround for Realtek/Skylake pcieport spam,2,[],https://github.com/endlessm/linux/pull/146,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/146,https://phabricator.endlessm.com/T12766,https://phabricator.endlessm.com/T12766,True,{}
endlessm/linux,https://github.com/endlessm/linux,147,2016-08-16T20:57:33Z,2016-08-16T22:05:47Z,2016-08-25T14:07:00Z,MERGED,True,23,4,2,https://github.com/dsd, New workaround for Realtek/Skylake pcieport spam,2,[],https://github.com/endlessm/linux/pull/147,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/147,https://phabricator.endlessm.com/T12766,https://phabricator.endlessm.com/T12766,True,{}
endlessm/linux,https://github.com/endlessm/linux,148,2016-08-19T14:37:24Z,2016-08-22T13:41:19Z,2016-08-22T13:41:21Z,MERGED,True,14,0,1,https://github.com/mschiu77,Sound/hda: add new pin definition pin quirk table for Acer Laptops,1,[],https://github.com/endlessm/linux/pull/148,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/148,"We have Acer laptop Aspire E5-475 with codec ALC255 which can't
detect headset mic, after adding pin definitions in pin quirk table,
the headset mic can be detected and work.
https://phabricator.endlessm.com/T12912
Signed-off-by: Chris Chiu chiu@endlessm.com","We have Acer laptop Aspire E5-475 with codec ALC255 which can't
detect headset mic, after adding pin definitions in pin quirk table,
the headset mic can be detected and work.
https://phabricator.endlessm.com/T12912
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,149,2016-08-22T14:36:06Z,2016-08-22T16:07:00Z,2016-08-22T16:07:02Z,MERGED,True,10,4,5,https://github.com/jprvita,Fix boot on Acer Aspire E14 ES1-432,2,[],https://github.com/endlessm/linux/pull/149,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/149,https://phabricator.endlessm.com/T12887,https://phabricator.endlessm.com/T12887,True,{}
endlessm/linux,https://github.com/endlessm/linux,150,2016-08-24T13:13:57Z,2016-08-24T16:06:07Z,2016-08-24T18:33:40Z,MERGED,True,2,0,1,https://github.com/jprvita,vbox: Fix kernel panic after installing guest additions,1,[],https://github.com/endlessm/linux/pull/150,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/150,"This applies the fix pointed in
https://www.virtualbox.org/ticket/15769#comment:4
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com","This applies the fix pointed in
https://www.virtualbox.org/ticket/15769#comment:4
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,151,2016-08-25T21:24:52Z,2016-08-26T05:40:14Z,2016-08-26T14:37:31Z,MERGED,True,3,0,2,https://github.com/jprvita,Bluetooth: Add new AR3012 ID 04ca:3018,1,[],https://github.com/endlessm/linux/pull/151,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/151,"T:  Bus=01 Lev=01 Prnt=01 Port=07 Cnt=03 Dev#=  5 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=04ca ProdID=3018 Rev= 0.02
C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:  If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
I:  If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
This device requires ar3k/AthrBT_0x31010100.dfu and
ar3k/ramps_0x31010100_40.dfu.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T12964","T:  Bus=01 Lev=01 Prnt=01 Port=07 Cnt=03 Dev#=  5 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=04ca ProdID=3018 Rev= 0.02
C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:  If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
I:  If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
This device requires ar3k/AthrBT_0x31010100.dfu and
ar3k/ramps_0x31010100_40.dfu.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T12964",True,{}
endlessm/linux,https://github.com/endlessm/linux,152,2016-08-25T21:25:40Z,2016-08-26T05:40:38Z,2016-08-26T13:59:23Z,MERGED,True,3,0,2,https://github.com/jprvita,Bluetooth: Add new AR3012 ID 04ca:3018,1,[],https://github.com/endlessm/linux/pull/152,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/152,"T:  Bus=01 Lev=01 Prnt=01 Port=07 Cnt=03 Dev#=  5 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=04ca ProdID=3018 Rev= 0.02
C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:  If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
I:  If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
This device requires ar3k/AthrBT_0x31010100.dfu and
ar3k/ramps_0x31010100_40.dfu.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T12964","T:  Bus=01 Lev=01 Prnt=01 Port=07 Cnt=03 Dev#=  5 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=04ca ProdID=3018 Rev= 0.02
C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:  If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
I:  If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
This device requires ar3k/AthrBT_0x31010100.dfu and
ar3k/ramps_0x31010100_40.dfu.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T12964",True,{}
endlessm/linux,https://github.com/endlessm/linux,153,2016-08-26T02:43:43Z,2016-08-26T07:19:20Z,2016-08-26T13:59:12Z,MERGED,True,247,138,10,https://github.com/jprvita,T13012: Fix shutdown on Asus Z550SA,3,[],https://github.com/endlessm/linux/pull/153,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/153,"Without this patchset the Asus Z550SA would go through the shutdown process, but never actually power off. These 3 patches fix the problem.
https://phabricator.endlessm.com/T13012","Without this patchset the Asus Z550SA would go through the shutdown process, but never actually power off. These 3 patches fix the problem.
https://phabricator.endlessm.com/T13012",True,{}
endlessm/linux,https://github.com/endlessm/linux,154,2016-08-26T10:22:37Z,2016-09-06T15:06:55Z,2016-09-06T15:06:55Z,MERGED,True,4974,6,17,https://github.com/carlocaione,sound: Enable LPE-HDMI,12,[],https://github.com/endlessm/linux/pull/154,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/154,https://phabricator.endlessm.com/T12916,https://phabricator.endlessm.com/T12916,True,{}
endlessm/linux,https://github.com/endlessm/linux,155,2016-08-29T20:01:03Z,2016-08-30T19:08:29Z,2016-08-30T19:08:29Z,MERGED,True,33,0,2,https://github.com/bantin,Bluetooth: Add Realtek support for Foxconn MT13,2,[],https://github.com/endlessm/linux/pull/155,https://github.com/bantin,1,https://github.com/endlessm/linux/pull/155,"Realtek ships certain bluetooth USB devices which report themselves as
standard USB bluetooth devices, but which require special drivers.
Here we add support for the Realtek 8723BE devices shipped in the
Foxconn MT13.
https://phabricator.endlessm.com/T12741
Signed-off-by: Benjamin Antin ben.antin@endlessm.com","Realtek ships certain bluetooth USB devices which report themselves as
standard USB bluetooth devices, but which require special drivers.
Here we add support for the Realtek 8723BE devices shipped in the
Foxconn MT13.
https://phabricator.endlessm.com/T12741
Signed-off-by: Benjamin Antin ben.antin@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,156,2016-08-29T20:51:23Z,2016-08-30T19:07:52Z,2016-08-30T21:54:20Z,MERGED,True,33,0,2,https://github.com/bantin,Bluetooth: Add Realtek support for Foxconn MT13,2,[],https://github.com/endlessm/linux/pull/156,https://github.com/bantin,1,https://github.com/endlessm/linux/pull/156,"Realtek ships certain bluetooth USB devices which report themselves as
standard USB bluetooth devices, but which require special drivers.
Here we add support for the Realtek 8723BE devices shipped in the
Foxconn MT13.
https://phabricator.endlessm.com/T12741
Signed-off-by: Benjamin Antin ben.antin@endlessm.com","Realtek ships certain bluetooth USB devices which report themselves as
standard USB bluetooth devices, but which require special drivers.
Here we add support for the Realtek 8723BE devices shipped in the
Foxconn MT13.
https://phabricator.endlessm.com/T12741
Signed-off-by: Benjamin Antin ben.antin@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,156,2016-08-29T20:51:23Z,2016-08-30T19:07:52Z,2016-08-30T21:54:20Z,MERGED,True,33,0,2,https://github.com/bantin,Bluetooth: Add Realtek support for Foxconn MT13,2,[],https://github.com/endlessm/linux/pull/156,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/156#issuecomment-243433246,"Realtek ships certain bluetooth USB devices which report themselves as
standard USB bluetooth devices, but which require special drivers.
Here we add support for the Realtek 8723BE devices shipped in the
Foxconn MT13.
https://phabricator.endlessm.com/T12741
Signed-off-by: Benjamin Antin ben.antin@endlessm.com","On the first commit, it doesn't really matter which model of computer this is shipped in, but the USB id of the adapter. So the commit message subject (first line) should be something like this: Bluetooth: Add new Realtek 8723BE ID 0489:e09e. While you are there, I would also remove the 1st paragraph, since the only thing that the adapter reports is it USB ID, and it is up to the OS to decide what is the right drivers to be loaded.",True,{}
endlessm/linux,https://github.com/endlessm/linux,157,2016-08-31T16:02:25Z,2016-09-02T16:20:15Z,2016-10-07T15:51:09Z,MERGED,True,4,0,1,https://github.com/mschiu77,sound/hda: ALC256 mic and headset-mode fixups for Asus laptops,1,[],https://github.com/endlessm/linux/pull/157,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/157,"This fixes headphone jack sensing and enables use of the internal
microphone. It's verified on Asus E402NA.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T13185","This fixes headphone jack sensing and enables use of the internal
microphone. It's verified on Asus E402NA.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T13185",True,{}
endlessm/linux,https://github.com/endlessm/linux,158,2016-09-02T14:46:25Z,2016-09-06T15:20:30Z,2016-10-07T15:51:09Z,MERGED,True,4,0,1,https://github.com/mschiu77,Sound/hda: add new pin definition pin quirk table for ASUS Laptops,1,[],https://github.com/endlessm/linux/pull/158,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/158,"We have some ASUS laptops with codec ALC255 which can't detect
headset mic. Apply the same fixup ALC255_FIXUP_ASUS_MIC_NO_PRESENCE,
headset mic can be detected and work.
https://phabricator.endlessm.com/T13204
Signed-off-by: Chris Chiu chiu@endlessm.com","We have some ASUS laptops with codec ALC255 which can't detect
headset mic. Apply the same fixup ALC255_FIXUP_ASUS_MIC_NO_PRESENCE,
headset mic can be detected and work.
https://phabricator.endlessm.com/T13204
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,159,2016-09-06T15:47:45Z,2016-09-06T18:22:53Z,2016-09-06T18:22:55Z,MERGED,True,4,0,1,https://github.com/mschiu77,sound/hda: ALC256 mic and headset-mode fixups for Asus laptops,1,[],https://github.com/endlessm/linux/pull/159,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/159,"This fixes headphone jack sensing and enables use of the internal
microphone. It's verified on Asus E402NA.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T13185","This fixes headphone jack sensing and enables use of the internal
microphone. It's verified on Asus E402NA.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T13185",True,{}
endlessm/linux,https://github.com/endlessm/linux,160,2016-09-06T17:41:03Z,2016-09-06T18:10:56Z,2016-09-06T18:10:58Z,MERGED,True,324,45,9,https://github.com/carlocaione,T13253 slowdown,9,[],https://github.com/endlessm/linux/pull/160,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/160,https://phabricator.endlessm.com/T13253,https://phabricator.endlessm.com/T13253,True,{}
endlessm/linux,https://github.com/endlessm/linux,161,2016-09-06T17:42:54Z,2016-09-06T18:12:24Z,2016-09-06T18:12:27Z,MERGED,True,431,280,37,https://github.com/carlocaione,T13253 boot,14,[],https://github.com/endlessm/linux/pull/161,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/161,https://phabricator.endlessm.com/T13253,https://phabricator.endlessm.com/T13253,True,{}
endlessm/linux,https://github.com/endlessm/linux,162,2016-09-06T17:44:31Z,2016-09-06T18:18:46Z,2016-09-06T18:18:48Z,MERGED,True,483,322,38,https://github.com/carlocaione,T13255,18,[],https://github.com/endlessm/linux/pull/162,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/162,https://phabricator.endlessm.com/T13255,https://phabricator.endlessm.com/T13255,True,{}
endlessm/linux,https://github.com/endlessm/linux,163,2016-09-14T17:36:23Z,2016-09-14T19:24:00Z,2016-10-06T15:15:37Z,MERGED,True,91,43,3,https://github.com/dsd,drm/i915/bxt: Set DDI PHY lane latency optimization during modeset,1,[],https://github.com/endlessm/linux/pull/163,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/163,"So far we configured a static lane latency optimization during driver
loading/resuming. The specification changed at one point and now this
configuration depends on the lane count, so move the configuration
to modeset time accordingly.
It's not clear when this lane configuration takes effect. The
specification only requires that the programming is done before enabling
the port. On CHV OTOH the lanes start to power up already right after
enabling the PLL. To be safe preserve the current order and set things
up already before enabling the PLL.
v2: (Ander)

Simplify the optimization mask calculation.
Use the correct pipe_config always during the calculation instead
of the bogus intel_crtc->config.

CC: Ander Conselvan de Oliveira ander.conselvan.de.oliveira@intel.com
Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=95476
Signed-off-by: Imre Deak imre.deak@intel.com
Reviewed-by: Ville Syrjälä ville.syrjala@linux.intel.com
https://phabricator.endlessm.com/T13366","So far we configured a static lane latency optimization during driver
loading/resuming. The specification changed at one point and now this
configuration depends on the lane count, so move the configuration
to modeset time accordingly.
It's not clear when this lane configuration takes effect. The
specification only requires that the programming is done before enabling
the port. On CHV OTOH the lanes start to power up already right after
enabling the PLL. To be safe preserve the current order and set things
up already before enabling the PLL.
v2: (Ander)

Simplify the optimization mask calculation.
Use the correct pipe_config always during the calculation instead
of the bogus intel_crtc->config.

CC: Ander Conselvan de Oliveira ander.conselvan.de.oliveira@intel.com
Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=95476
Signed-off-by: Imre Deak imre.deak@intel.com
Reviewed-by: Ville Syrjälä ville.syrjala@linux.intel.com
https://phabricator.endlessm.com/T13366",True,{}
endlessm/linux,https://github.com/endlessm/linux,164,2016-09-14T18:52:43Z,2016-09-14T19:23:52Z,2016-09-14T19:23:52Z,MERGED,True,89,21,3,https://github.com/dsd,drm/i915/bxt: Set DDI PHY lane latency optimization during modeset,1,[],https://github.com/endlessm/linux/pull/164,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/164,"So far we configured a static lane latency optimization during driver
loading/resuming. The specification changed at one point and now this
configuration depends on the lane count, so move the configuration
to modeset time accordingly.
It's not clear when this lane configuration takes effect. The
specification only requires that the programming is done before enabling
the port. On CHV OTOH the lanes start to power up already right after
enabling the PLL. To be safe preserve the current order and set things
up already before enabling the PLL.
v2: (Ander)

Simplify the optimization mask calculation.
Use the correct pipe_config always during the calculation instead
of the bogus intel_crtc->config.

CC: Ander Conselvan de Oliveira ander.conselvan.de.oliveira@intel.com
Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=95476
Signed-off-by: Imre Deak imre.deak@intel.com
Reviewed-by: Ville Syrjälä ville.syrjala@linux.intel.com
[dsd: backport to 4.4]
https://phabricator.endlessm.com/T13366","So far we configured a static lane latency optimization during driver
loading/resuming. The specification changed at one point and now this
configuration depends on the lane count, so move the configuration
to modeset time accordingly.
It's not clear when this lane configuration takes effect. The
specification only requires that the programming is done before enabling
the port. On CHV OTOH the lanes start to power up already right after
enabling the PLL. To be safe preserve the current order and set things
up already before enabling the PLL.
v2: (Ander)

Simplify the optimization mask calculation.
Use the correct pipe_config always during the calculation instead
of the bogus intel_crtc->config.

CC: Ander Conselvan de Oliveira ander.conselvan.de.oliveira@intel.com
Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=95476
Signed-off-by: Imre Deak imre.deak@intel.com
Reviewed-by: Ville Syrjälä ville.syrjala@linux.intel.com
[dsd: backport to 4.4]
https://phabricator.endlessm.com/T13366",True,{}
endlessm/linux,https://github.com/endlessm/linux,165,2016-09-16T16:33:27Z,2016-09-20T12:59:34Z,2016-10-07T15:50:11Z,MERGED,True,515,274,4,https://github.com/dsd,Fix Apollo Lake HDMI hotplug,19,[],https://github.com/endlessm/linux/pull/165,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/165,"This patch series solves an issue where hotplugging HDMI would give a corrupted display, and a system freeze on hot-unplug.
https://phabricator.endlessm.com/T13389","This patch series solves an issue where hotplugging HDMI would give a corrupted display, and a system freeze on hot-unplug.
https://phabricator.endlessm.com/T13389",True,{}
endlessm/linux,https://github.com/endlessm/linux,166,2016-09-19T18:31:12Z,2016-09-20T07:55:28Z,2016-09-20T07:55:28Z,MERGED,True,742,307,6,https://github.com/dsd,Fix Apollo Lake HDMI hotplug,24,[],https://github.com/endlessm/linux/pull/166,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/166,"This patch series solves an issue where hotplugging HDMI would give a corrupted display, and a system freeze on hot-unplug.
A small number of commits needed small tweaks for this backport, noted that in the commit message of each one.
https://phabricator.endlessm.com/T13389","This patch series solves an issue where hotplugging HDMI would give a corrupted display, and a system freeze on hot-unplug.
A small number of commits needed small tweaks for this backport, noted that in the commit message of each one.
https://phabricator.endlessm.com/T13389",True,{}
endlessm/linux,https://github.com/endlessm/linux,167,2016-09-20T12:43:33Z,2016-09-20T12:55:41Z,2016-09-20T12:55:44Z,MERGED,True,4,0,1,https://github.com/mschiu77,Sound/hda: add new pin definition pin quirk table for ASUS X441NC,1,[],https://github.com/endlessm/linux/pull/167,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/167,"We have some ASUS X441NC with codec ALC255 which can't detect headset mic.
Apply the same fixup ALC255_FIXUP_ASUS_MIC_NO_PRESENCE for other ASUS
laptops with same pin definitions.
https://phabricator.endlessm.com/T13421
Signed-off-by: Chris Chiu chiu@endlessm.com","We have some ASUS X441NC with codec ALC255 which can't detect headset mic.
Apply the same fixup ALC255_FIXUP_ASUS_MIC_NO_PRESENCE for other ASUS
laptops with same pin definitions.
https://phabricator.endlessm.com/T13421
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,168,2016-09-20T12:58:44Z,2016-09-20T12:59:50Z,2016-09-20T12:59:50Z,CLOSED,False,4,0,1,https://github.com/mschiu77,Sound/hda: add new pin definition pin quirk table for ASUS X441NC,1,[],https://github.com/endlessm/linux/pull/168,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/168,"We have some ASUS X441NC with codec ALC255 which can't detect headset mic.
Apply the same fixup ALC255_FIXUP_ASUS_MIC_NO_PRESENCE for other ASUS
laptops with same pin definitions.
https://phabricator.endlessm.com/T13421
Signed-off-by: Chris Chiu chiu@endlessm.com","We have some ASUS X441NC with codec ALC255 which can't detect headset mic.
Apply the same fixup ALC255_FIXUP_ASUS_MIC_NO_PRESENCE for other ASUS
laptops with same pin definitions.
https://phabricator.endlessm.com/T13421
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,169,2016-09-21T12:50:57Z,2016-09-21T12:51:37Z,2016-09-21T12:58:29Z,MERGED,True,2,0,2,https://github.com/jprvita,config: Add SUPPORT_HDMI=y,1,[],https://github.com/endlessm/linux/pull/169,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/169,"We need this to enable Cherry Trail LPE HDMI audio support.
https://phabricator.endlessm.com/T12916","We need this to enable Cherry Trail LPE HDMI audio support.
https://phabricator.endlessm.com/T12916",True,{}
endlessm/linux,https://github.com/endlessm/linux,170,2016-09-22T15:35:18Z,2016-09-22T19:56:26Z,2016-09-22T19:56:29Z,MERGED,True,72,45,5,https://github.com/carlocaione,E402NA SKU2 HDMI fix,4,[],https://github.com/endlessm/linux/pull/170,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/170,https://phabricator.endlessm.com/T13389,https://phabricator.endlessm.com/T13389,True,{}
endlessm/linux,https://github.com/endlessm/linux,171,2016-09-22T19:32:37Z,2016-09-22T19:52:47Z,2016-09-22T19:52:48Z,MERGED,True,8,0,1,https://github.com/bantin,Input: i8042 - don't run self test on Asus Z450LA,1,[],https://github.com/endlessm/linux/pull/171,https://github.com/bantin,1,https://github.com/endlessm/linux/pull/171,"The self-test command causes the trackpad on this model to stop
reporting. Add DMI quirk for the Z540LA so we don't send the self test
command.
Signed-off-by: Benjamin Antin ben.antin@endlessm.com
https://phabricator.endlessm.com/T13468","The self-test command causes the trackpad on this model to stop
reporting. Add DMI quirk for the Z540LA so we don't send the self test
command.
Signed-off-by: Benjamin Antin ben.antin@endlessm.com
https://phabricator.endlessm.com/T13468",True,{}
endlessm/linux,https://github.com/endlessm/linux,172,2016-09-28T16:47:50Z,2016-09-28T17:30:14Z,2016-09-28T17:30:51Z,MERGED,True,3,1,1,https://github.com/dbnicholson,debian: Allow installation of signed linux-image packages,1,[],https://github.com/endlessm/linux/pull/172,https://github.com/dbnicholson,1,https://github.com/endlessm/linux/pull/172,"We intend to created linux-signed-image packages with kernels signed for
UEFI. These packages are identical to the unsigned linux-images but with
the vmlinuz file signed. In order to let these new packages install
correctly, they need to conflict with the normal unsigned packages.
Likewise, the linux-image-extra modules packages need to allow them as
an alternate dependency.
https://phabricator.endlessm.com/T12944","We intend to created linux-signed-image packages with kernels signed for
UEFI. These packages are identical to the unsigned linux-images but with
the vmlinuz file signed. In order to let these new packages install
correctly, they need to conflict with the normal unsigned packages.
Likewise, the linux-image-extra modules packages need to allow them as
an alternate dependency.
https://phabricator.endlessm.com/T12944",True,{}
endlessm/linux,https://github.com/endlessm/linux,173,2016-10-06T17:38:16Z,2016-10-07T22:29:03Z,2016-10-07T22:29:03Z,CLOSED,False,277701,238030,890,https://github.com/jprvita,Merge tag 'Ubuntu-4.4.0-38.57' into eos3.0,806,[],https://github.com/endlessm/linux/pull/173,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/173,https://phabricator.endlessm.com/T13581,https://phabricator.endlessm.com/T13581,True,{}
endlessm/linux,https://github.com/endlessm/linux,173,2016-10-06T17:38:16Z,2016-10-07T22:29:03Z,2016-10-07T22:29:03Z,CLOSED,False,277701,238030,890,https://github.com/jprvita,Merge tag 'Ubuntu-4.4.0-38.57' into eos3.0,806,[],https://github.com/endlessm/linux/pull/173,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/173#issuecomment-252376180,https://phabricator.endlessm.com/T13581,Closing the PR as we do not want another merge commit on top.,True,{}
endlessm/linux,https://github.com/endlessm/linux,174,2016-10-07T12:55:20Z,2016-10-07T15:05:09Z,2016-10-07T15:05:14Z,MERGED,True,4,0,1,https://github.com/mschiu77,sound/hda: ALC256 mic and headset-mode fixups for Asus laptops,1,[],https://github.com/endlessm/linux/pull/174,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/174,"This fixes the internal microphone and enables headset microphone.
It's verified on Asus E403NA.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T13648","This fixes the internal microphone and enables headset microphone.
It's verified on Asus E403NA.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T13648",True,{}
endlessm/linux,https://github.com/endlessm/linux,175,2016-10-11T20:19:02Z,2016-10-11T20:50:28Z,2016-10-11T20:50:30Z,MERGED,True,2,2,1,https://github.com/mschiu77,mfd: intel-lpss: Pass I2C SDA hold time to controller driver on APL,1,[],https://github.com/endlessm/linux/pull/175,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/175,"The I2C arbitration lost erros happens on ASUS Apollolake models
(on E402NA and E403NA) with ELAN touchpad and it requires programming
non-zero SDA hold time. Tried the Skylake I2C SDA hold time and clock
rate which fixed similar issue on Lenovo Yoga 900. It works fine w/o
problem.
Error messages are as following.
i2c_designware i2c_designware.1: i2c_dw_handle_tx_abort: lost arbitration
hid (null): reading report descriptor failed
i2c_hid i2c-ELAN1200:00 can't add hid device: -5
i2c_hid: probe of i2c-ELAN1200:00 failed with error -5
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T13616","The I2C arbitration lost erros happens on ASUS Apollolake models
(on E402NA and E403NA) with ELAN touchpad and it requires programming
non-zero SDA hold time. Tried the Skylake I2C SDA hold time and clock
rate which fixed similar issue on Lenovo Yoga 900. It works fine w/o
problem.
Error messages are as following.
i2c_designware i2c_designware.1: i2c_dw_handle_tx_abort: lost arbitration
hid (null): reading report descriptor failed
i2c_hid i2c-ELAN1200:00 can't add hid device: -5
i2c_hid: probe of i2c-ELAN1200:00 failed with error -5
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T13616",True,{}
endlessm/linux,https://github.com/endlessm/linux,176,2016-10-12T07:40:46Z,,2022-04-12T21:36:12Z,OPEN,False,718794,88761,1409,https://github.com/mschiu77,mfd: intel-lpss: Add default I2C device properties for Apollo Lake,541,[],https://github.com/endlessm/linux/pull/176,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/176,"Default I2C device properties for Intel Broxton, especially SDA hold time
may not be enough on Intel Apollo Lake. These properties are used in case
we don't get timing parameters from ACPI.
The default SDA hold time for Broxton may fail with arbitration lost errors
on Apollo Lake:
i2c_designware i2c_designware.1: i2c_dw_handle_tx_abort: lost arbitration
Fix this by using different default device properties on Apollo Lake than
Broxton.
Reported-by: Paul Liu paul.liu@canonical.com
Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=156181
Signed-off-by: Jarkko Nikula jarkko.nikula@linux.intel.com
Acked-by: Mika Westerberg mika.westerberg@linux.intel.com
Signed-off-by: Lee Jones lee.jones@linaro.org
Conflicts:
drivers/mfd/intel-lpss-pci.c","Default I2C device properties for Intel Broxton, especially SDA hold time
may not be enough on Intel Apollo Lake. These properties are used in case
we don't get timing parameters from ACPI.
The default SDA hold time for Broxton may fail with arbitration lost errors
on Apollo Lake:
i2c_designware i2c_designware.1: i2c_dw_handle_tx_abort: lost arbitration
Fix this by using different default device properties on Apollo Lake than
Broxton.
Reported-by: Paul Liu paul.liu@canonical.com
Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=156181
Signed-off-by: Jarkko Nikula jarkko.nikula@linux.intel.com
Acked-by: Mika Westerberg mika.westerberg@linux.intel.com
Signed-off-by: Lee Jones lee.jones@linaro.org
Conflicts:
drivers/mfd/intel-lpss-pci.c",True,{}
endlessm/linux,https://github.com/endlessm/linux,177,2016-10-12T14:17:59Z,2016-10-12T14:26:42Z,2016-10-12T14:26:44Z,MERGED,True,277664,238033,890,https://github.com/jprvita,Merge tag 'Ubuntu-4.4.0-38.57' into eos3.0,806,[],https://github.com/endlessm/linux/pull/177,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/177,https://phabricator.endlessm.com/T13581,https://phabricator.endlessm.com/T13581,True,{}
endlessm/linux,https://github.com/endlessm/linux,178,2016-10-17T20:24:13Z,2016-10-17T20:35:39Z,2016-10-17T20:35:41Z,MERGED,True,10,2,2,https://github.com/jprvita,fixup! mfd: intel-lpss: Add default I2C device properties for Lake,1,[],https://github.com/endlessm/linux/pull/178,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/178,"This fixes a build error, and should be squashed on the commit that
creates the problem on a future rebase.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com","This fixes a build error, and should be squashed on the commit that
creates the problem on a future rebase.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,178,2016-10-17T20:24:13Z,2016-10-17T20:35:39Z,2016-10-17T20:35:41Z,MERGED,True,10,2,2,https://github.com/jprvita,fixup! mfd: intel-lpss: Add default I2C device properties for Lake,1,[],https://github.com/endlessm/linux/pull/178,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/178#issuecomment-254323210,"This fixes a build error, and should be squashed on the commit that
creates the problem on a future rebase.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com","@dsd Can you please review this one? It fixes the build on eos3.0, which is currently broken. If you prefer I can squash this on top of eos3.0, so we don't have a broken build in our history.",True,{}
endlessm/linux,https://github.com/endlessm/linux,179,2016-10-20T10:45:19Z,2016-10-20T18:09:06Z,2016-10-20T18:09:08Z,MERGED,True,14,5,2,https://github.com/wjt,tmpfs: add user_xattr mount option,1,[],https://github.com/endlessm/linux/pull/179,https://github.com/wjt,1,https://github.com/endlessm/linux/pull/179,"For the reasons discussed at
http://www.spinics.net/lists/linux-mm/msg109982.html, this simplistic
implementation of user xattrs can't simply be made available to
everyone.
We want user xattrs on tmpfs to support flatpak running as an
unprivileged user on overlayfs whose upper fs is tmpfs, a situation
which only arises in our pristine image boots. So, for our purposes, a
mount flag is okay: we can set it at the same time as setting up the
overlays.
https://phabricator.endlessm.com/T13817
Signed-off-by: Will Thompson wjt@endlessm.com","For the reasons discussed at
http://www.spinics.net/lists/linux-mm/msg109982.html, this simplistic
implementation of user xattrs can't simply be made available to
everyone.
We want user xattrs on tmpfs to support flatpak running as an
unprivileged user on overlayfs whose upper fs is tmpfs, a situation
which only arises in our pristine image boots. So, for our purposes, a
mount flag is okay: we can set it at the same time as setting up the
overlays.
https://phabricator.endlessm.com/T13817
Signed-off-by: Will Thompson wjt@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,180,2016-10-20T13:29:11Z,2016-10-20T14:21:05Z,2016-10-20T14:21:08Z,MERGED,True,42,0,2,https://github.com/wjt,tmpfs: add user_xattr mount option,1,[],https://github.com/endlessm/linux/pull/180,https://github.com/wjt,1,https://github.com/endlessm/linux/pull/180,"For the reasons discussed at
http://www.spinics.net/lists/linux-mm/msg109982.html, this simplistic
implementation of user xattrs can't simply be made available to
everyone.
We want user xattrs on tmpfs to support flatpak running as an
unprivileged user on overlayfs whose upper fs is tmpfs, a situation
which only arises in our pristine image boots. So, for our purposes, a
mount flag is okay: we can set it at the same time as setting up the
overlays.
This is a forward-port of #179.
https://phabricator.endlessm.com/T13817","For the reasons discussed at
http://www.spinics.net/lists/linux-mm/msg109982.html, this simplistic
implementation of user xattrs can't simply be made available to
everyone.
We want user xattrs on tmpfs to support flatpak running as an
unprivileged user on overlayfs whose upper fs is tmpfs, a situation
which only arises in our pristine image boots. So, for our purposes, a
mount flag is okay: we can set it at the same time as setting up the
overlays.
This is a forward-port of #179.
https://phabricator.endlessm.com/T13817",True,{}
endlessm/linux,https://github.com/endlessm/linux,181,2016-10-28T10:38:00Z,2016-10-31T21:00:24Z,2016-10-31T21:00:26Z,MERGED,True,18,0,1,https://github.com/mschiu77,asus-wmi: Add quirk_no_rfkill for the Asus UX360CAK/UX360UA,1,[],https://github.com/endlessm/linux/pull/181,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/181,"The Asus UX360CAK/UX360UA has airplane-mode indicator LED and the WMI
WLAN user bit set, so asus-wmi uses ASUS_WMI_DEVID_WLAN_LED (0x00010002)
to store the wlan state, which has a side-effect of driving the airplane
mode indicator LED in an inverted fashion. quirk_no_rfkill prevents
asus-wmi from registering RFKill switches at all for this laptop and
allows asus-wireless to drive the LED through the ASHS ACPI device.
https://phabricator.endlessm.com/T13916
Signed-off-by: Chris Chiu chiu@endlessm.com","The Asus UX360CAK/UX360UA has airplane-mode indicator LED and the WMI
WLAN user bit set, so asus-wmi uses ASUS_WMI_DEVID_WLAN_LED (0x00010002)
to store the wlan state, which has a side-effect of driving the airplane
mode indicator LED in an inverted fashion. quirk_no_rfkill prevents
asus-wmi from registering RFKill switches at all for this laptop and
allows asus-wireless to drive the LED through the ASHS ACPI device.
https://phabricator.endlessm.com/T13916
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,182,2016-11-03T20:31:43Z,2016-11-04T13:08:41Z,2016-11-04T14:19:07Z,MERGED,True,35,14,1,https://github.com/jprvita,asus-wireless: Use the correct HSWC parameter for each HID,2,[],https://github.com/endlessm/linux/pull/182,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/182,https://phabricator.endlessm.com/T13914,https://phabricator.endlessm.com/T13914,True,{}
endlessm/linux,https://github.com/endlessm/linux,183,2016-11-03T20:53:24Z,2016-11-04T13:08:44Z,2016-11-04T13:08:46Z,MERGED,True,34,13,1,https://github.com/jprvita,asus-wireless: Use the correct HSWC parameter for each HID,1,[],https://github.com/endlessm/linux/pull/183,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/183,https://phabricator.endlessm.com/T13914,https://phabricator.endlessm.com/T13914,True,{}
endlessm/linux,https://github.com/endlessm/linux,184,2016-11-08T13:10:19Z,2016-11-08T13:13:42Z,2016-11-08T13:13:43Z,CLOSED,False,6,3,3,https://github.com/mschiu77,HID: add support for Asus G502VS,1,[],https://github.com/endlessm/linux/pull/184,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/184,"Asus GL502VS is another gaming notebook with USB interfaced keyboard.
It needs the same input remapping for function keys like other gaming
models. Add corresponding hid device id for it.
https://phabricator.endlessm.com/T13801
Signed-off-by: Chris Chiu chiu@endlessm.com","Asus GL502VS is another gaming notebook with USB interfaced keyboard.
It needs the same input remapping for function keys like other gaming
models. Add corresponding hid device id for it.
https://phabricator.endlessm.com/T13801
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,185,2016-11-08T13:14:08Z,2016-11-08T13:22:28Z,2016-11-08T13:22:30Z,MERGED,True,6,3,3,https://github.com/mschiu77,HID: add support for Asus G502VS,1,[],https://github.com/endlessm/linux/pull/185,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/185,"Asus GL502VS is another gaming notebook with USB interfaced keyboard.
It needs the same input remapping for function keys like other gaming
models. Add corresponding hid device id for it.
https://phabricator.endlessm.com/T13801
Signed-off-by: Chris Chiu chiu@endlessm.com","Asus GL502VS is another gaming notebook with USB interfaced keyboard.
It needs the same input remapping for function keys like other gaming
models. Add corresponding hid device id for it.
https://phabricator.endlessm.com/T13801
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,186,2016-11-15T12:28:01Z,2016-11-23T12:59:49Z,2016-11-23T12:59:51Z,MERGED,True,25,0,1,https://github.com/mschiu77,"Input: soc_button_array - use ACPI0011 specified gpio for ""Volume Up/…",1,[],https://github.com/endlessm/linux/pull/186,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/186,"…Down"" key
ASUS UX360UA have an extra volume up/down button controlled by gpios which
are specified in ACPI0011 device. Here's the DSDT definition.
Device (BTNS)
{
Name (_HID, ""ACPI0011"")  // _HID: Hardware ID
Name (_DDN, ""Generic HID over Interrupt Button Interface"")  // _DDN: DOS Device Name
Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
{
Name (CBUF, ResourceTemplate ()
{
GpioInt (Edge, ActiveBoth, Exclusive, PullDefault, 0x0BB8,
""\_SB.PCI0.GPI0"", 0x00, ResourceConsumer, ,
)
{   // Pin list
0x0000
}
GpioInt (Edge, ActiveBoth, Exclusive, PullDefault, 0x0BB8,
""\SB.PCI0.GPI0"", 0x00, ResourceConsumer, ,
)
{   // Pin list
0x0000
}
})
CreateWordField (CBUF, 0x17, INT1)
CreateWordField (CBUF, 0x3F, INT2)
INT1 = GNUM (0x02030015)
INT2 = GNUM (0x02030016)
Return (CBUF) /* _SB.BTNS._CRS.CBUF */
}
Method (_STA, 0, NotSerialized)  // _STA: Status
{
    Return (0x0F)
}

Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
{
    ToUUID (""fa6bd625-9ce8-470d-a2c7-b3ca36c4282e""),
    Package (0x03)
    {
        Package (0x05)
        {
            Zero,
            One,
            Zero,
            One,
            0x0D
        },

        Package (0x05)
        {
            One,
            Zero,
            One,
            0x0C,
            0xE9
        },

        Package (0x05)
        {
            One,
            One,
            One,
            0x0C,
            0xEA
        }
    }
})

}
GpioInt index 0 is for volume up, 1 is for volume down. Add definition for
it and it works as expected.
https://phabricator.endlessm.com/T13917
Signed-off-by: Chris Chiu chiu@endlessm.com","…Down"" key
ASUS UX360UA have an extra volume up/down button controlled by gpios which
are specified in ACPI0011 device. Here's the DSDT definition.
Device (BTNS)
{
Name (_HID, ""ACPI0011"")  // _HID: Hardware ID
Name (_DDN, ""Generic HID over Interrupt Button Interface"")  // _DDN: DOS Device Name
Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
{
Name (CBUF, ResourceTemplate ()
{
GpioInt (Edge, ActiveBoth, Exclusive, PullDefault, 0x0BB8,
""\_SB.PCI0.GPI0"", 0x00, ResourceConsumer, ,
)
{   // Pin list
0x0000
}
GpioInt (Edge, ActiveBoth, Exclusive, PullDefault, 0x0BB8,
""\SB.PCI0.GPI0"", 0x00, ResourceConsumer, ,
)
{   // Pin list
0x0000
}
})
CreateWordField (CBUF, 0x17, INT1)
CreateWordField (CBUF, 0x3F, INT2)
INT1 = GNUM (0x02030015)
INT2 = GNUM (0x02030016)
Return (CBUF) /* _SB.BTNS._CRS.CBUF */
}
Method (_STA, 0, NotSerialized)  // _STA: Status
{
    Return (0x0F)
}

Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
{
    ToUUID (""fa6bd625-9ce8-470d-a2c7-b3ca36c4282e""),
    Package (0x03)
    {
        Package (0x05)
        {
            Zero,
            One,
            Zero,
            One,
            0x0D
        },

        Package (0x05)
        {
            One,
            Zero,
            One,
            0x0C,
            0xE9
        },

        Package (0x05)
        {
            One,
            One,
            One,
            0x0C,
            0xEA
        }
    }
})

}
GpioInt index 0 is for volume up, 1 is for volume down. Add definition for
it and it works as expected.
https://phabricator.endlessm.com/T13917
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,187,2016-11-17T15:15:44Z,2016-11-25T14:31:47Z,2016-11-25T14:31:49Z,MERGED,True,8,1,3,https://github.com/mschiu77,mac80211: fix tx queue stuck issue during sw scanning,1,[],https://github.com/endlessm/linux/pull/187,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/187,"ieee80211_iface_work() will check if sw scanning is in progress
before handling block ack session. In RTL8821AE station mode,
when tx session expired, DELBA packet stuck during sw scanning
and so do other data packets. ieee80211_scan_state_decision()
will always switch back and forward between SCAN_SUSPEND and
SCAN_RESUME due to !tx_empty or bad_latency. Then the sw scanning
will sometimes take forever to finish. AP side still thinks the
connection is alive because it still receives the QoS NULL packet
from STA. So the link state will never change but actually no
internet access.
This commit tries to send out packet in SCAN_SUSPEND state so the
sw scanning can have chance to complete.
https://phabricator.endlessm.com/T14081
Signed-off-by: Chris Chiu chiu@endlessm.com","ieee80211_iface_work() will check if sw scanning is in progress
before handling block ack session. In RTL8821AE station mode,
when tx session expired, DELBA packet stuck during sw scanning
and so do other data packets. ieee80211_scan_state_decision()
will always switch back and forward between SCAN_SUSPEND and
SCAN_RESUME due to !tx_empty or bad_latency. Then the sw scanning
will sometimes take forever to finish. AP side still thinks the
connection is alive because it still receives the QoS NULL packet
from STA. So the link state will never change but actually no
internet access.
This commit tries to send out packet in SCAN_SUSPEND state so the
sw scanning can have chance to complete.
https://phabricator.endlessm.com/T14081
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,188,2016-11-18T15:52:47Z,2016-11-18T19:03:11Z,2016-11-18T19:03:13Z,CLOSED,False,115225,1,180,https://github.com/jprvita,Import RTL8723BS WiFi driver from hadess/rtl8723bs aae04afe876e8b07b53910,3,[],https://github.com/endlessm/linux/pull/188,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/188,https://phabricator.endlessm.com/T13721,https://phabricator.endlessm.com/T13721,True,{}
endlessm/linux,https://github.com/endlessm/linux,188,2016-11-18T15:52:47Z,2016-11-18T19:03:11Z,2016-11-18T19:03:13Z,CLOSED,False,115225,1,180,https://github.com/jprvita,Import RTL8723BS WiFi driver from hadess/rtl8723bs aae04afe876e8b07b53910,3,[],https://github.com/endlessm/linux/pull/188,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/188#issuecomment-261613704,https://phabricator.endlessm.com/T13721,pushed separately,True,{}
endlessm/linux,https://github.com/endlessm/linux,189,2016-11-25T04:21:37Z,2016-11-25T13:27:43Z,2016-11-25T13:27:45Z,MERGED,True,8,0,1,https://github.com/mschiu77,HID: multitouch: handle external buttons for Precision Touchpads,1,[],https://github.com/endlessm/linux/pull/189,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/189,"According to https://msdn.microsoft.com/en-us/library/windows/hardware/mt604195(v=vs.85).aspx
external buttons have some weird usage mapping:

Button 2 Indicates Button State for external button for primary
(default left) clicking.
Button 3 Indicates Button State for external button for secondary
(default right) clicking.

So in the current state, the buttons are mapped to right and middle.
Move the usage by one to correctly map the external buttons.
Signed-off-by: Benjamin Tissoires benjamin.tissoires@redhat.com","According to https://msdn.microsoft.com/en-us/library/windows/hardware/mt604195(v=vs.85).aspx
external buttons have some weird usage mapping:

Button 2 Indicates Button State for external button for primary
(default left) clicking.
Button 3 Indicates Button State for external button for secondary
(default right) clicking.

So in the current state, the buttons are mapped to right and middle.
Move the usage by one to correctly map the external buttons.
Signed-off-by: Benjamin Tissoires benjamin.tissoires@redhat.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,190,2016-11-30T13:05:37Z,2016-12-02T16:14:42Z,2016-12-02T16:14:42Z,MERGED,True,22,2,2,https://github.com/dsd,Add ECS EF20 internal microphone support,2,[],https://github.com/endlessm/linux/pull/190,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/190,https://phabricator.endlessm.com/T6410,https://phabricator.endlessm.com/T6410,True,{}
endlessm/linux,https://github.com/endlessm/linux,191,2016-12-01T09:13:11Z,2016-12-01T13:18:40Z,2016-12-01T13:18:42Z,MERGED,True,36,0,1,https://github.com/mschiu77,asus-wmi: Add quirk_no_rfkill for the Asus UX330UAK/UX330CAK/UX360UAK…,1,[],https://github.com/endlessm/linux/pull/191,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/191,"…/Q324UAK
Apply the quirk_no_rfkill for Asus UX330UAK/UX330CAK/UX360UAK/Q324UA
K has airplane-mode indicator. It prevents asus-wmi from registering
RFKill switches at all and allows asus-wireless to drive the LED
through the ASHS ACPI device.
https://phabricator.endlessm.com/T13916
Signed-off-by: Chris Chiu chiu@endlessm.com","…/Q324UAK
Apply the quirk_no_rfkill for Asus UX330UAK/UX330CAK/UX360UAK/Q324UA
K has airplane-mode indicator. It prevents asus-wmi from registering
RFKill switches at all and allows asus-wireless to drive the LED
through the ASHS ACPI device.
https://phabricator.endlessm.com/T13916
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,192,2016-12-01T18:16:01Z,2016-12-05T13:27:28Z,2016-12-05T13:27:46Z,MERGED,True,25,0,3,https://github.com/mschiu77,HID: primax: fix wireless keyboard incorrect report for keystrokes.,1,[],https://github.com/endlessm/linux/pull/192,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/192,"Primax wireless keyboard/mouse kit reports each keystroke with LED
hid usage which supposed to be keyboard hid usage. This commit correct
the wrong HID_USAGE_PAGE and let the standard code to do the rest.
https://phabricator.endlessm.com/T14394
Signed-off-by: Chris Chiu chiu@endlessm.com","Primax wireless keyboard/mouse kit reports each keystroke with LED
hid usage which supposed to be keyboard hid usage. This commit correct
the wrong HID_USAGE_PAGE and let the standard code to do the rest.
https://phabricator.endlessm.com/T14394
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,193,2016-12-02T14:59:03Z,2016-12-02T15:26:47Z,2016-12-02T15:26:47Z,MERGED,True,1,0,1,https://github.com/dsd,mmc: sdhci-acpi: support 80860F14 UID 2 SDIO bus,1,[],https://github.com/endlessm/linux/pull/193,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/193,"Add an entry for the SDIO bus in the ECS EF20 cherry trail laptop:
Device (SDHB) {
Name (_ADR, 0x00110000)
Name (_HID, ""80860F14"" /* Intel Baytrail SDIO/MMC Host Controller /)
Name (_CID, ""PNP0D40"" / SDA Standard Compliant SD Host Controller */)
Name (_DDN, ""Intel(R) SDIO Controller - 80862295"")
Name (_UID, 0x02)
Name (_HRV, One)
A SDHB device with the same _HID and _UID can also be found on other
cherry trail products like Chuwi Hi10.
Signed-off-by: Daniel Drake drake@endlessm.com
https://phabricator.endlessm.com/T6305","Add an entry for the SDIO bus in the ECS EF20 cherry trail laptop:
Device (SDHB) {
Name (_ADR, 0x00110000)
Name (_HID, ""80860F14"" /* Intel Baytrail SDIO/MMC Host Controller /)
Name (_CID, ""PNP0D40"" / SDA Standard Compliant SD Host Controller */)
Name (_DDN, ""Intel(R) SDIO Controller - 80862295"")
Name (_UID, 0x02)
Name (_HRV, One)
A SDHB device with the same _HID and _UID can also be found on other
cherry trail products like Chuwi Hi10.
Signed-off-by: Daniel Drake drake@endlessm.com
https://phabricator.endlessm.com/T6305",True,{}
endlessm/linux,https://github.com/endlessm/linux,194,2016-12-02T18:40:38Z,2016-12-05T10:09:58Z,2016-12-05T10:09:58Z,MERGED,True,35,2,1,https://github.com/dsd,Bluetooth: hci_bcm: Add BCM2E96 device and fix GPIOs for EF20EA,1,[],https://github.com/endlessm/linux/pull/194,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/194,"Add the BCM2E96 ID used by the ECS EF20 laptop.
hci0: BCM: chip id 82
hci0: BCM43341B0 (002.001.014) build 0000
hci0: BCM (002.001.014) build 0158
According to the vendor kernel, the GPIOs to use here are ordered
differently from the way this driver behaves as standard.
We also apply the modified order for this product.
It might be more correct to modify the BIOS to list the correct order,
although a comment in the vendor kernel suggests that this change
may be standard for all BCM2E96 devices.
Bluetooth seems to work on EF20 with or without this, but I think it's
working more reliably with this change and also the host wakeup
interrupts are now arriving.
https://phabricator.endlessm.com/T10572
Signed-off-by: Carlo Caione carlo@endlessm.com","Add the BCM2E96 ID used by the ECS EF20 laptop.
hci0: BCM: chip id 82
hci0: BCM43341B0 (002.001.014) build 0000
hci0: BCM (002.001.014) build 0158
According to the vendor kernel, the GPIOs to use here are ordered
differently from the way this driver behaves as standard.
We also apply the modified order for this product.
It might be more correct to modify the BIOS to list the correct order,
although a comment in the vendor kernel suggests that this change
may be standard for all BCM2E96 devices.
Bluetooth seems to work on EF20 with or without this, but I think it's
working more reliably with this change and also the host wakeup
interrupts are now arriving.
https://phabricator.endlessm.com/T10572
Signed-off-by: Carlo Caione carlo@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,195,2016-12-05T23:50:05Z,2016-12-07T21:09:35Z,2016-12-07T21:09:37Z,MERGED,True,2,0,1,https://github.com/jprvita,i2c-hid: Disable IRQ before freeing buffers,1,[],https://github.com/endlessm/linux/pull/195,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/195,"It may be necessary to allocate bigger buffers in i2c_hid_start() if the
report size of a device is bigger than the buffers allocated on probe.
When this happens ihid->irq is already running, so it needs to be
disabled otherwise ihid->inbuf may be modified after freed if
i2c_master_recv() in i2c_hid_get_input() is called immediatelly before
i2c_hid_free_buffers() in i2c_hid_start().
This problem has been observed on an Asus UX360UA laptop which has an
I2C touchpad, and this change makes the problem go away.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T14091","It may be necessary to allocate bigger buffers in i2c_hid_start() if the
report size of a device is bigger than the buffers allocated on probe.
When this happens ihid->irq is already running, so it needs to be
disabled otherwise ihid->inbuf may be modified after freed if
i2c_master_recv() in i2c_hid_get_input() is called immediatelly before
i2c_hid_free_buffers() in i2c_hid_start().
This problem has been observed on an Asus UX360UA laptop which has an
I2C touchpad, and this change makes the problem go away.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T14091",True,{}
endlessm/linux,https://github.com/endlessm/linux,196,2016-12-06T08:05:44Z,2016-12-06T23:02:08Z,2017-01-20T18:25:32Z,MERGED,True,9,0,1,https://github.com/mschiu77,asus-wmi: Add quirk_no_rfkill for the Asus UX430UQ,1,[],https://github.com/endlessm/linux/pull/196,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/196,"Apply the quirk_no_rfkill for Asus UX430UQ has airplane-mode indicator.
It prevents asus-wmi from registering RFKill switches at all and allows
asus-wireless to drive the LED through the ASHS ACPI device.
https://phabricator.endlessm.com/T14464
Signed-off-by: Chris Chiu chiu@endlessm.com","Apply the quirk_no_rfkill for Asus UX430UQ has airplane-mode indicator.
It prevents asus-wmi from registering RFKill switches at all and allows
asus-wireless to drive the LED through the ASHS ACPI device.
https://phabricator.endlessm.com/T14464
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,197,2016-12-09T11:40:03Z,2016-12-09T14:19:12Z,2016-12-09T14:19:14Z,MERGED,True,90,81,7,https://github.com/mschiu77,Rename hid-asus-ite8910.c to hid-asus-rog.c and add more hotkeys for it,2,[],https://github.com/endlessm/linux/pull/197,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/197,"ASUS ROG means ASUS ""Republic of Gamers"" laptops. The device info also
represents itself as ""ASASTeK COMPUTER INC. ROG MacroKey"". Rename it
to avoid confusion. And add more hotkeys support.","ASUS ROG means ASUS ""Republic of Gamers"" laptops. The device info also
represents itself as ""ASASTeK COMPUTER INC. ROG MacroKey"". Rename it
to avoid confusion. And add more hotkeys support.",True,{}
endlessm/linux,https://github.com/endlessm/linux,198,2016-12-09T19:39:32Z,2016-12-20T19:53:42Z,2016-12-20T19:53:44Z,MERGED,True,22,0,2,https://github.com/jprvita,Fix freeze on Intel Baytrail machines with RTL8723BS,2,[],https://github.com/endlessm/linux/pull/198,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/198,https://phabricator.endlessm.com/T14511,https://phabricator.endlessm.com/T14511,True,{}
endlessm/linux,https://github.com/endlessm/linux,198,2016-12-09T19:39:32Z,2016-12-20T19:53:42Z,2016-12-20T19:53:44Z,MERGED,True,22,0,2,https://github.com/jprvita,Fix freeze on Intel Baytrail machines with RTL8723BS,2,[],https://github.com/endlessm/linux/pull/198,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/198#issuecomment-268269963,https://phabricator.endlessm.com/T14511,"Please mention in the commit message that its a SDIO wifi device, also that we don't fully understand why this particular SDIO host controller / SDIO wifi card combination suffers this problem but that it also applies to other similar platforms (+ links)",True,{}
endlessm/linux,https://github.com/endlessm/linux,198,2016-12-09T19:39:32Z,2016-12-20T19:53:42Z,2016-12-20T19:53:44Z,MERGED,True,22,0,2,https://github.com/jprvita,Fix freeze on Intel Baytrail machines with RTL8723BS,2,[],https://github.com/endlessm/linux/pull/198,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/198#issuecomment-268294418,https://phabricator.endlessm.com/T14511,"Oops, let that slip through when I changed the fix approach here. Updated the commit messages now, thanks for catching it.",True,{}
endlessm/linux,https://github.com/endlessm/linux,199,2016-12-16T07:03:27Z,2016-12-16T13:09:46Z,2016-12-16T13:09:47Z,MERGED,True,245,120,23,https://github.com/mschiu77,T14507: Fix cursor not moving issue on GTX 1060/1070,4,[],https://github.com/endlessm/linux/pull/199,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/199,,,True,{}
endlessm/linux,https://github.com/endlessm/linux,200,2016-12-22T16:51:27Z,2016-12-22T17:19:47Z,2016-12-22T17:19:50Z,MERGED,True,93,40,5,https://github.com/dsd,Fix cherrytrail i2c/PUNIT warnings,5,[],https://github.com/endlessm/linux/pull/200,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/200,https://phabricator.endlessm.com/T6358,https://phabricator.endlessm.com/T6358,True,{}
endlessm/linux,https://github.com/endlessm/linux,201,2016-12-23T16:02:13Z,2016-12-23T17:10:39Z,2016-12-23T17:10:41Z,MERGED,True,72,0,1,https://github.com/mschiu77,asus-wmi: Add quirk_no_rfkill for more Asus laptops,1,[],https://github.com/endlessm/linux/pull/201,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/201,"Apply the quirk_no_rfkill for the same inverted airplane mode indicator
issue on Asus X555UQ, X756UQK, X756UXK, X756UWK, X756UAK, G502VSK,
G702VSK, G702VMK
https://phabricator.endlessm.com/T14464
https://phabricator.endlessm.com/T14360
Signed-off-by: Chris Chiu chiu@endlessm.com","Apply the quirk_no_rfkill for the same inverted airplane mode indicator
issue on Asus X555UQ, X756UQK, X756UXK, X756UWK, X756UAK, G502VSK,
G702VSK, G702VMK
https://phabricator.endlessm.com/T14464
https://phabricator.endlessm.com/T14360
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,202,2016-12-29T14:55:23Z,,2022-04-12T21:36:12Z,OPEN,False,1278115,104939,3185,https://github.com/mschiu77,"HID: asus: add support for Asus ""Republic of Gamers"" model and ZEN AIO",1464,[],https://github.com/endlessm/linux/pull/202,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/202,"Asus ""Republic of Gamers"" laptop has built-in USB interfaced keyboard.
Asus ZEN AIO also has its own customized USB-wired keyboard. They both
need input remapping for function keys handling. Add corresponding hid
device ids for special driver.
This commit remove the hid-asus-rog.c and merge it into the hid-asus.c
per upstream's request.
https://phabricator.endlessm.com/T14784
Signed-off-by: Chris Chiu chiu@endlessm.com","Asus ""Republic of Gamers"" laptop has built-in USB interfaced keyboard.
Asus ZEN AIO also has its own customized USB-wired keyboard. They both
need input remapping for function keys handling. Add corresponding hid
device ids for special driver.
This commit remove the hid-asus-rog.c and merge it into the hid-asus.c
per upstream's request.
https://phabricator.endlessm.com/T14784
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,203,2016-12-29T14:57:51Z,,2016-12-29T14:57:51Z,OPEN,False,164,88,8,https://github.com/mschiu77,"HID: asus: add support for Asus ""Republic of Gamers"" model and ZEN AIO",2,[],https://github.com/endlessm/linux/pull/203,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/203,"Asus ""Republic of Gamers"" laptop has built-in USB interfaced keyboard.
Asus ZEN AIO also has its own customized USB-wired keyboard. They both
need input remapping for function keys handling. Add corresponding hid
device ids.
This commit remove the hid-asus-ite8910.c and merge it into the hid-asus.c
per upstream's request.
https://phabricator.endlessm.com/T14784
Signed-off-by: Chris Chiu chiu@endlessm.com","Asus ""Republic of Gamers"" laptop has built-in USB interfaced keyboard.
Asus ZEN AIO also has its own customized USB-wired keyboard. They both
need input remapping for function keys handling. Add corresponding hid
device ids.
This commit remove the hid-asus-ite8910.c and merge it into the hid-asus.c
per upstream's request.
https://phabricator.endlessm.com/T14784
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,204,2017-01-04T04:12:50Z,2017-01-04T20:50:52Z,2017-01-04T20:50:55Z,MERGED,True,24,1,3,https://github.com/mschiu77,HID: asus-rog: add support for Asus customized keyboard of ZEN AIO,1,[],https://github.com/endlessm/linux/pull/204,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/204,"Asus ZEN AIO also has its own customized USB-wired keyboard. It
needs input remapping for function keys handling. Add corresponding
hid device ids in special driver.
https://phabricator.endlessm.com/T14784
Signed-off-by: Chris Chiu chiu@endlessm.com","Asus ZEN AIO also has its own customized USB-wired keyboard. It
needs input remapping for function keys handling. Add corresponding
hid device ids in special driver.
https://phabricator.endlessm.com/T14784
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,205,2017-01-05T15:29:38Z,2017-01-05T17:44:09Z,2017-01-05T17:44:14Z,MERGED,True,15,1,1,https://github.com/mschiu77,ath9k: add a norfkill_gpio quirk for Acer Aspire ES1-421,1,[],https://github.com/endlessm/linux/pull/205,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/205,"The Acer Aspire ES1-421 rfkill_gpio seems connet to something
unknown. The NFA335 module can work on first boot, then goes to
hardware-disabled after suspend/resume. And itt doesn't come back
even after reboot. This commit ignore the rfkill_gpio input based
on DMI info.
https://phabricator.endlessm.com/T14777
Signed-off-by: Chris Chiu chiu@endlessm.com","The Acer Aspire ES1-421 rfkill_gpio seems connet to something
unknown. The NFA335 module can work on first boot, then goes to
hardware-disabled after suspend/resume. And itt doesn't come back
even after reboot. This commit ignore the rfkill_gpio input based
on DMI info.
https://phabricator.endlessm.com/T14777
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,206,2017-01-06T16:58:03Z,2017-01-09T13:09:58Z,2017-01-09T13:10:00Z,MERGED,True,2,2,2,https://github.com/jprvita,config: Make CONFIG_PINCTRL_SUNRISEPOINT=y,1,[],https://github.com/endlessm/linux/pull/206,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/206,"This is needed to have the volume control buttons on the side of the
Asus UX360UA laptop work correctly.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T13917","This is needed to have the volume control buttons on the side of the
Asus UX360UA laptop work correctly.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T13917",True,{}
endlessm/linux,https://github.com/endlessm/linux,207,2017-01-09T14:36:01Z,2017-01-10T13:41:53Z,2017-01-10T13:41:55Z,MERGED,True,60,16,1,https://github.com/mschiu77,acer-wmi: Inform BIOS/EC that RF Button Driver is activated,1,[],https://github.com/endlessm/linux/pull/207,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/207,"The same method to activate LM(Launch Manager) can also be used to
activate the RF Button driver with different bit toggled in the same
lm_status. To express that many functions this byte field can achieve,
rename the lm_status to app_status. And also the app_mask is the bit
mask which specifically indicate which bits are going to be changed.
Add acer_wmi_enable_rf_button() to activate the RF button driver. It
will send scancode or inform EC that the airplane mode hotkey has been
pressed.
https://phabricator.endlessm.com/T14825
Signed-off-by: Chris Chiu chiu@endlessm.com","The same method to activate LM(Launch Manager) can also be used to
activate the RF Button driver with different bit toggled in the same
lm_status. To express that many functions this byte field can achieve,
rename the lm_status to app_status. And also the app_mask is the bit
mask which specifically indicate which bits are going to be changed.
Add acer_wmi_enable_rf_button() to activate the RF button driver. It
will send scancode or inform EC that the airplane mode hotkey has been
pressed.
https://phabricator.endlessm.com/T14825
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,208,2017-01-11T14:04:39Z,2017-01-12T13:42:13Z,2017-01-12T13:44:25Z,MERGED,True,1,0,1,https://github.com/mschiu77,PCI: Disable AER for Skylake+Realtek systems on ASUS D520MT-K,1,[],https://github.com/endlessm/linux/pull/208,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/208,"It's also a Realtek RTL8821AE card on Skylake which cause PCIe AER
error spam. However, it happen on different PCIe root port.
pcieport 0000:00:1c.7: PCIe Bus Error: severity=Corrected, type=Physical Layer, id=00e5(Receiver ID)
pcieport 0000:00:1c.7:   device [8086:a117] error status/mask=00000001/00002000
pcieport 0000:00:1c.7:    [ 0] Receiver Error
pcieport 0000:00:1c.7: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.7: can't find device of ID00e5
pcieport 0000:00:1c.7: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.7: can't find device of ID00e5
Apply the same workaround quirk_disable_rtl_aspm() on the problematic
PCI vendor/device ID.","It's also a Realtek RTL8821AE card on Skylake which cause PCIe AER
error spam. However, it happen on different PCIe root port.
pcieport 0000:00:1c.7: PCIe Bus Error: severity=Corrected, type=Physical Layer, id=00e5(Receiver ID)
pcieport 0000:00:1c.7:   device [8086:a117] error status/mask=00000001/00002000
pcieport 0000:00:1c.7:    [ 0] Receiver Error
pcieport 0000:00:1c.7: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.7: can't find device of ID00e5
pcieport 0000:00:1c.7: AER: Corrected error received: id=00e5
pcieport 0000:00:1c.7: can't find device of ID00e5
Apply the same workaround quirk_disable_rtl_aspm() on the problematic
PCI vendor/device ID.",True,{}
endlessm/linux,https://github.com/endlessm/linux,209,2017-01-13T08:44:24Z,2017-01-13T13:07:52Z,2017-01-13T13:08:00Z,MERGED,True,2,1,2,https://github.com/mschiu77,config: build in PINCTRL_BROXTON,1,[],https://github.com/endlessm/linux/pull/209,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/209,"On ASUS laptops with ApolloLake (X441NA/NC, X751NA/NC), sdhci-pci
can not detect the SD card when this is a module.
Presumably the pin controller is needed; make it built-in so that
it is loaded first.
https://phabricator.endlessm.com/T14845","On ASUS laptops with ApolloLake (X441NA/NC, X751NA/NC), sdhci-pci
can not detect the SD card when this is a module.
Presumably the pin controller is needed; make it built-in so that
it is loaded first.
https://phabricator.endlessm.com/T14845",True,{}
endlessm/linux,https://github.com/endlessm/linux,210,2017-01-19T08:40:12Z,2017-01-19T15:10:30Z,2017-01-19T15:10:34Z,MERGED,True,3,0,1,https://github.com/mschiu77,acer-wmi: Use acpi_dev_found() in acer_wmi_get_handle(),1,[],https://github.com/endlessm/linux/pull/210,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/210,"Use acpi_dev_found() before acpi_get_devices() if the particular
ACPI device not even exist. On the Acer TravelMate P449-G2-MG we
have observed the acpi_get_devices() here causes the system hang.
There's no such accel device on the machine and it does not happen
on other Acer machines in my hands. Additional check without
function change should be good to have.
https://phabricator.endlessm.com/T15061
Signed-off-by: Chris Chiu chiu@endless.com","Use acpi_dev_found() before acpi_get_devices() if the particular
ACPI device not even exist. On the Acer TravelMate P449-G2-MG we
have observed the acpi_get_devices() here causes the system hang.
There's no such accel device on the machine and it does not happen
on other Acer machines in my hands. Additional check without
function change should be good to have.
https://phabricator.endlessm.com/T15061
Signed-off-by: Chris Chiu chiu@endless.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,211,2017-01-20T10:09:23Z,2017-01-20T15:55:18Z,2017-01-20T15:55:59Z,MERGED,True,18,0,1,https://github.com/mschiu77,sdhci-pci: use SDHCI_QUIRK2_BROKEN_HS200 for Acer ApolloLake models,1,[],https://github.com/endlessm/linux/pull/211,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/211,"We found the Intel SD Host controller(5acc) fail to switch to HS200
mode on Acer ApolloLake models. So the internal emmc storage can not
be detected. Add SDHCI_QUIRK2_BROKEN_HS200 for particular subsystem
vendor/device id
https://phabricator.endlessm.com/T14845
Signed-off-by: Chris Chiu chiu@endlessm.com","We found the Intel SD Host controller(5acc) fail to switch to HS200
mode on Acer ApolloLake models. So the internal emmc storage can not
be detected. Add SDHCI_QUIRK2_BROKEN_HS200 for particular subsystem
vendor/device id
https://phabricator.endlessm.com/T14845
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,211,2017-01-20T10:09:23Z,2017-01-20T15:55:18Z,2017-01-20T15:55:59Z,MERGED,True,18,0,1,https://github.com/mschiu77,sdhci-pci: use SDHCI_QUIRK2_BROKEN_HS200 for Acer ApolloLake models,1,[],https://github.com/endlessm/linux/pull/211,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/211#issuecomment-274106391,"We found the Intel SD Host controller(5acc) fail to switch to HS200
mode on Acer ApolloLake models. So the internal emmc storage can not
be detected. Add SDHCI_QUIRK2_BROKEN_HS200 for particular subsystem
vendor/device id
https://phabricator.endlessm.com/T14845
Signed-off-by: Chris Chiu chiu@endlessm.com","Seems pretty clear from the description and the branch name that this fixes https://phabricator.endlessm.com/T14850 instead of https://phabricator.endlessm.com/T14845, so I'll update the link on the commit message before merging it.",True,{}
endlessm/linux,https://github.com/endlessm/linux,212,2017-01-25T08:56:06Z,2017-01-25T14:01:54Z,2017-01-25T14:01:57Z,MERGED,True,24,22,1,https://github.com/mschiu77,"HID: asus-rog: add missing ""if"" to fix ASUS ZEN AIO keyboard support",1,[],https://github.com/endlessm/linux/pull/212,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/212,"https://phabricator.endlessm.com/T15241
Signed-off-by: Chris Chiu chiu@endlessm.com","https://phabricator.endlessm.com/T15241
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,213,2017-01-25T17:01:00Z,2017-02-07T19:40:12Z,2017-02-07T19:40:12Z,CLOSED,False,42,209,4,https://github.com/jprvita,asus-wmi: Don't register rfkill if ASHS and user bit are present,6,[],https://github.com/endlessm/linux/pull/213,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/213,https://phabricator.endlessm.com/T14735,https://phabricator.endlessm.com/T14735,True,{}
endlessm/linux,https://github.com/endlessm/linux,214,2017-01-31T15:20:00Z,2017-02-16T17:47:34Z,2017-02-16T17:47:38Z,CLOSED,False,42,49,1,https://github.com/dsd,Bluetooth: hci_bcm: Add support for BCM2E95 and BCM2E96,2,[],https://github.com/endlessm/linux/pull/214,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/214,https://phabricator.endlessm.com/T14623,https://phabricator.endlessm.com/T14623,True,{}
endlessm/linux,https://github.com/endlessm/linux,215,2017-02-07T18:00:43Z,2017-02-07T19:13:55Z,2017-02-08T17:00:32Z,MERGED,True,55,0,4,https://github.com/dsd,i915: quirk Weibu F3C DP-to-VGA setup,1,[],https://github.com/endlessm/linux/pull/215,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/215,"The Weibu F3C has a VGA port, enabled through an onboard PS8613
DP-to-VGA converter chip.
However the BIOS describes the DP interface from the SoC as being
hooked up to an internal 1366x768 LCD panel over eDP, with a backlight.
Until we get a fixed BIOS, force it to be detected as DP. That way
we ignore the panel definition, don't register a backlight device,
and we request the EDID over the AUX pins in order to get display modes.
We also have a problem with presence detection and hotplug. The SoC
detects the DP connection as always connected (since the chip is always
there). The PS8613 does have a DP_HPD pin that looks like it could tell
us when the VGA monitor is present and hotplugged, but we don't know how
that is hooked up to the SoC.
In order to work around this limitation, we poll the status every 10
seconds. We force a re-read of the EDID even when there is no connector
state change, and we update the connector status to disconnected if we
fail to read the EDID.
https://phabricator.endlessm.com/T14620","The Weibu F3C has a VGA port, enabled through an onboard PS8613
DP-to-VGA converter chip.
However the BIOS describes the DP interface from the SoC as being
hooked up to an internal 1366x768 LCD panel over eDP, with a backlight.
Until we get a fixed BIOS, force it to be detected as DP. That way
we ignore the panel definition, don't register a backlight device,
and we request the EDID over the AUX pins in order to get display modes.
We also have a problem with presence detection and hotplug. The SoC
detects the DP connection as always connected (since the chip is always
there). The PS8613 does have a DP_HPD pin that looks like it could tell
us when the VGA monitor is present and hotplugged, but we don't know how
that is hooked up to the SoC.
In order to work around this limitation, we poll the status every 10
seconds. We force a re-read of the EDID even when there is no connector
state change, and we update the connector status to disconnected if we
fail to read the EDID.
https://phabricator.endlessm.com/T14620",True,{}
endlessm/linux,https://github.com/endlessm/linux,216,2017-02-08T20:33:48Z,2017-02-09T17:07:19Z,2017-02-09T17:07:30Z,MERGED,True,18,7,1,https://github.com/jprvita,Pick upstream fix for Acer acelerometer,2,[],https://github.com/endlessm/linux/pull/216,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/216,https://phabricator.endlessm.com/T15397,https://phabricator.endlessm.com/T15397,True,{}
endlessm/linux,https://github.com/endlessm/linux,217,2017-02-08T21:46:13Z,2017-06-05T17:49:17Z,2017-06-05T17:49:17Z,CLOSED,False,1263861,103179,2952,https://github.com/jprvita,"Revert ""sdhci-pci: use SDHCI_QUIRK2_BROKEN_HS200 for Acer ApolloLake models""",1281,[],https://github.com/endlessm/linux/pull/217,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/217,"This reverts commit 3dbb187.
This was fixed by:
commit fee686b
Author: Adrian Hunter adrian.hunter@intel.com
Date:   Wed Oct 5 12:11:24 2016 +0300
mmc: sdhci-pci: Fix bus power failing to enable for some Intel controllers
Some Intel controllers (e.g. BXT) might fail to set bus power after a
D3 -> D0 transition due to the present state not yet having propagated.
Retry for up to 2 milliseconds.
https://phabricator.endlessm.com/T15284","This reverts commit 3dbb187.
This was fixed by:
commit fee686b
Author: Adrian Hunter adrian.hunter@intel.com
Date:   Wed Oct 5 12:11:24 2016 +0300
mmc: sdhci-pci: Fix bus power failing to enable for some Intel controllers
Some Intel controllers (e.g. BXT) might fail to set bus power after a
D3 -> D0 transition due to the present state not yet having propagated.
Retry for up to 2 milliseconds.
https://phabricator.endlessm.com/T15284",True,{}
endlessm/linux,https://github.com/endlessm/linux,218,2017-02-13T10:09:22Z,2017-02-13T13:43:08Z,2017-02-13T13:43:10Z,MERGED,True,13,0,1,https://github.com/mschiu77,Sound: hda - Fix speaker support for ASUS AIO ZN270IE,1,[],https://github.com/endlessm/linux/pull/218,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/218,"ASUS AIO ZN270IE with ALC256 has no audio ouput for internal speaker
and headphone. It require GPIO 2 as an amp. This commit apply the
HDA verb to enable GPIO2 and pull it high.
https://phabricator.endlessm.com/T15562
Signed-off-by: Chris Chiu chiu@endlessm.com","ASUS AIO ZN270IE with ALC256 has no audio ouput for internal speaker
and headphone. It require GPIO 2 as an amp. This commit apply the
HDA verb to enable GPIO2 and pull it high.
https://phabricator.endlessm.com/T15562
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,219,2017-02-14T07:35:22Z,,2022-04-12T21:36:12Z,OPEN,False,1263937,103185,2954,https://github.com/mschiu77,drm/nouveau/core: recognise GP107 chipset,1287,[],https://github.com/endlessm/linux/pull/219,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/219,Signed-off-by: Chris Chiu chiu@endlessm.com,Signed-off-by: Chris Chiu chiu@endlessm.com,True,{}
endlessm/linux,https://github.com/endlessm/linux,220,2017-02-16T10:04:44Z,2017-02-16T12:39:33Z,2017-02-16T12:46:13Z,MERGED,True,41,1,1,https://github.com/mschiu77,x86/reboot: Add EFI power off quirk for some particular models,1,[],https://github.com/endlessm/linux/pull/220,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/220,"Some particular Acer/Packard Bell machines hang during shutdown.
It hangs while doing bit operations for turning on SLP_EN bit in
ACPI PM1A control address and Sleep Control Register. Thus the
normal acpi_power_off path can never complete the shutdown process.
This commit offers a quirk for these particular models to do
efi_power_off() instead of normal acpi_power_off() until we find
the root cause.
https://phabricator.endlessm.com/T14785
Signed-off-by: Chris Chiu chiu@endlessm.com","Some particular Acer/Packard Bell machines hang during shutdown.
It hangs while doing bit operations for turning on SLP_EN bit in
ACPI PM1A control address and Sleep Control Register. Thus the
normal acpi_power_off path can never complete the shutdown process.
This commit offers a quirk for these particular models to do
efi_power_off() instead of normal acpi_power_off() until we find
the root cause.
https://phabricator.endlessm.com/T14785
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,221,2017-02-16T19:50:47Z,2017-02-16T19:52:34Z,2017-02-16T19:53:00Z,MERGED,True,15,1,1,https://github.com/jprvita,drm/nouveau: Disable runtime pm on the Asus X756UQK,2,[],https://github.com/endlessm/linux/pull/221,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/221,https://phabricator.endlessm.com/T15196,https://phabricator.endlessm.com/T15196,True,{}
endlessm/linux,https://github.com/endlessm/linux,222,2017-02-16T19:51:31Z,2017-02-17T01:02:32Z,2017-02-17T01:02:35Z,MERGED,True,14,0,1,https://github.com/jprvita,drm/nouveau: Disable runtime pm on the Asus X756UQK,1,[],https://github.com/endlessm/linux/pull/222,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/222,https://phabricator.endlessm.com/T15196,https://phabricator.endlessm.com/T15196,True,{}
endlessm/linux,https://github.com/endlessm/linux,223,2017-02-20T10:12:06Z,,2017-05-11T17:14:19Z,OPEN,False,24,0,1,https://github.com/mschiu77,drm/amdgpu: disable driver loading for particular models,1,[],https://github.com/endlessm/linux/pull/223,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/223,"Acer Aspire E5-553G and E5-523G has the same AMD Topaz XT [Radeon
R7 M260/M265] which seems not well supported even in latest amdgpu
driver. It brings flooding ""AMD-Vi: Complete-Wait loop timed out""
messages and hold off the booting process. Disable it as a temporal
solution.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T15655","Acer Aspire E5-553G and E5-523G has the same AMD Topaz XT [Radeon
R7 M260/M265] which seems not well supported even in latest amdgpu
driver. It brings flooding ""AMD-Vi: Complete-Wait loop timed out""
messages and hold off the booting process. Disable it as a temporal
solution.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T15655",True,{}
endlessm/linux,https://github.com/endlessm/linux,224,2017-02-22T09:17:33Z,2017-02-23T12:46:07Z,2017-02-23T12:46:11Z,MERGED,True,21,0,1,https://github.com/mschiu77,drm/nouveau: Disable runtime pm on more Asus laptops,1,[],https://github.com/endlessm/linux/pull/224,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/224,"The Asus GL552VXK/X550VXK/K401UQK has two video cards (Intel+NVIDIA). They
suffer the same runtime pm problem as X756UQK but it happens during boot
from HDD/USB. Apply the same quirk until there's a upstream fix
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T15697","The Asus GL552VXK/X550VXK/K401UQK has two video cards (Intel+NVIDIA). They
suffer the same runtime pm problem as X756UQK but it happens during boot
from HDD/USB. Apply the same quirk until there's a upstream fix
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T15697",True,{}
endlessm/linux,https://github.com/endlessm/linux,225,2017-02-22T15:51:16Z,2017-02-22T15:56:49Z,2017-02-22T15:56:53Z,MERGED,True,0,15,1,https://github.com/jprvita,"Revert ""intel_idle: Disable on Asus N552VW""",1,[],https://github.com/endlessm/linux/pull/225,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/225,"This reverts commit 983d29b.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T15710","This reverts commit 983d29b.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T15710",True,{}
endlessm/linux,https://github.com/endlessm/linux,226,2017-03-07T15:11:49Z,2017-03-07T15:14:05Z,2017-03-07T15:14:13Z,MERGED,True,1,0,1,https://github.com/mschiu77,PCI: Disable AER for Skylake+Realtek systems,1,[],https://github.com/endlessm/linux/pull/226,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/226,"Apply the quirk_disable_rtl_aspm for the same combination found in
ASUS D320SF-K.
pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical La
yer, id=00e0(Receiver ID)
pcieport 0000:00:1c.0:   device [8086:a115] error status/mask=00000001/0000
2000
pcieport 0000:00:1c.0:    [ 0] Receiver Error
pcieport 0000:00:1c.0: AER: Corrected error received: id=00e0
pcieport 0000:00:1c.0: can't find device of ID00e0
pcieport 0000:00:1c.0: AER: Corrected error received: id=00e0
pcieport 0000:00:1c.0: can't find device of ID00e0
https://phabricator.endlessm.com/T15946
Signed-off-by: Chris Chiu chiu@endlessm.com","Apply the quirk_disable_rtl_aspm for the same combination found in
ASUS D320SF-K.
pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical La
yer, id=00e0(Receiver ID)
pcieport 0000:00:1c.0:   device [8086:a115] error status/mask=00000001/0000
2000
pcieport 0000:00:1c.0:    [ 0] Receiver Error
pcieport 0000:00:1c.0: AER: Corrected error received: id=00e0
pcieport 0000:00:1c.0: can't find device of ID00e0
pcieport 0000:00:1c.0: AER: Corrected error received: id=00e0
pcieport 0000:00:1c.0: can't find device of ID00e0
https://phabricator.endlessm.com/T15946
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,227,2017-03-13T05:57:55Z,2017-03-17T12:06:58Z,2017-03-17T12:07:04Z,MERGED,True,1,0,1,https://github.com/mschiu77,PCI: Disable AER for Kabylake+Realtek systems,1,[],https://github.com/endlessm/linux/pull/227,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/227,"Apply the quirk_disable_rtl_aspm for RTL8821AE on Kabylake PCI bridge
in ASUS X550VX. It whould cause lots of applications not responding.
pcieport 0000:00:1c.2: PCIe Bus Error: severity=Corrected, type=Physical Layer, id=00e2(Receiver ID)
pcieport 0000:00:1c.2:   device [8086:a112] error status/mask=00000001/00002000
pcieport 0000:00:1c.2:    [ 0] Receiver Error
pcieport 0000:00:1c.2: AER: Corrected error received: id=00e2
pcieport 0000:00:1c.2: can't find device of ID00e2
pcieport 0000:00:1c.2: AER: Corrected error received: id=00e2
pcieport 0000:00:1c.2: can't find device of ID00e2
https://phabricator.endlessm.com/T16032
Signed-off-by: Chris Chiu chiu@endlessm.com","Apply the quirk_disable_rtl_aspm for RTL8821AE on Kabylake PCI bridge
in ASUS X550VX. It whould cause lots of applications not responding.
pcieport 0000:00:1c.2: PCIe Bus Error: severity=Corrected, type=Physical Layer, id=00e2(Receiver ID)
pcieport 0000:00:1c.2:   device [8086:a112] error status/mask=00000001/00002000
pcieport 0000:00:1c.2:    [ 0] Receiver Error
pcieport 0000:00:1c.2: AER: Corrected error received: id=00e2
pcieport 0000:00:1c.2: can't find device of ID00e2
pcieport 0000:00:1c.2: AER: Corrected error received: id=00e2
pcieport 0000:00:1c.2: can't find device of ID00e2
https://phabricator.endlessm.com/T16032
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,228,2017-03-14T12:59:16Z,2017-03-14T14:45:44Z,2017-03-14T14:45:47Z,MERGED,True,1,1,1,https://github.com/ramcq,T16069: version the dependency between -extra and -signed-image,1,[],https://github.com/endlessm/linux/pull/228,https://github.com/ramcq,1,https://github.com/endlessm/linux/pull/228,"Add a version to the -extra package dependency on -signed-image. When secure boot is enabled, it's not possible to load the modules in a kernel build at a different time because a different transient module signing key is used for each build.
https://phabricator.endlessm.com/T16069","Add a version to the -extra package dependency on -signed-image. When secure boot is enabled, it's not possible to load the modules in a kernel build at a different time because a different transient module signing key is used for each build.
https://phabricator.endlessm.com/T16069",True,{}
endlessm/linux,https://github.com/endlessm/linux,229,2017-03-15T15:24:28Z,2017-03-15T18:18:39Z,2017-03-15T18:18:42Z,MERGED,True,0,6,2,https://github.com/dsd,config: disable wil6210 60GHz wifi,1,[],https://github.com/endlessm/linux/pull/229,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/229,"The firmware is not present in linux-firmware and doesn't seem to be
freely available/redistributable.
https://phabricator.endlessm.com/T16038","The firmware is not present in linux-firmware and doesn't seem to be
freely available/redistributable.
https://phabricator.endlessm.com/T16038",True,{}
endlessm/linux,https://github.com/endlessm/linux,230,2017-03-16T15:24:37Z,2017-03-16T15:55:01Z,2017-03-16T15:55:05Z,MERGED,True,1,0,1,https://github.com/jprvita,fixup! config: disable wil6210 60GHz wifi,1,[],https://github.com/endlessm/linux/pull/230,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/230,"The original commit broke our OBS build, as 'make silentoldconfig', asks
the user for a value for any undefined symbol in the original config
file.
This should be squashed on the original commit on the next rebase.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T16038","The original commit broke our OBS build, as 'make silentoldconfig', asks
the user for a value for any undefined symbol in the original config
file.
This should be squashed on the original commit on the next rebase.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T16038",True,{}
endlessm/linux,https://github.com/endlessm/linux,231,2017-03-24T01:36:17Z,2017-03-24T12:51:23Z,2017-03-24T12:51:26Z,MERGED,True,3,0,3,https://github.com/mschiu77,hid-chicony: Add support for ASUS Zen AiO wireless keyboard,1,[],https://github.com/endlessm/linux/pull/231,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/231,"Add support for media keys on the keyboard that comes with the
Asus V221ID and ZN241IC All In One computers.
The keys to support here are WLAN, BRIGHTNESSDOWN and BRIGHTNESSUP.
This device is not visibly branded as Chicony, and the USB Vendor ID
suggests that it is a TURBOX device. However this seems like the right place
to put it: the usage codes are identical to the currently supported
devices, and this driver already supports the ASUS AIO keyboard AK1D.","Add support for media keys on the keyboard that comes with the
Asus V221ID and ZN241IC All In One computers.
The keys to support here are WLAN, BRIGHTNESSDOWN and BRIGHTNESSUP.
This device is not visibly branded as Chicony, and the USB Vendor ID
suggests that it is a TURBOX device. However this seems like the right place
to put it: the usage codes are identical to the currently supported
devices, and this driver already supports the ASUS AIO keyboard AK1D.",True,{}
endlessm/linux,https://github.com/endlessm/linux,232,2017-03-24T03:03:18Z,2017-03-24T12:52:00Z,2017-03-24T12:52:03Z,MERGED,True,7,4,3,https://github.com/mschiu77,HID: asus-rog: add support for Asus ZEN AIO wireless keyboard,1,[],https://github.com/endlessm/linux/pull/232,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/232,"Add support for media keys on the wireless keyboard/mouse set comes
with the Asus All in One computers.
They keys to support here are WLAN, BRIGHTNESSDOWN and BRIGHTNESSUP
This device has different USB Vendor ID suggest that it is a TURBOX
device. Add the vendor/device id for identification.
https://phabricator.endlessm.com/T14784
Signed-off-by: Chris Chiu chiu@endlessm.com","Add support for media keys on the wireless keyboard/mouse set comes
with the Asus All in One computers.
They keys to support here are WLAN, BRIGHTNESSDOWN and BRIGHTNESSUP
This device has different USB Vendor ID suggest that it is a TURBOX
device. Add the vendor/device id for identification.
https://phabricator.endlessm.com/T14784
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,233,2017-03-31T20:42:11Z,2017-04-03T09:43:35Z,2017-04-03T09:43:39Z,MERGED,True,1619,0,10,https://github.com/dsd,Add ES8316 CherryTrail audio driver,2,[],https://github.com/endlessm/linux/pull/233,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/233,https://phabricator.endlessm.com/T14626,https://phabricator.endlessm.com/T14626,True,{}
endlessm/linux,https://github.com/endlessm/linux,234,2017-04-05T08:13:53Z,2017-04-17T15:22:12Z,2017-04-17T15:22:15Z,MERGED,True,35,34,4,https://github.com/mschiu77,T16443,2,[],https://github.com/endlessm/linux/pull/234,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/234,"Revert ""sdhci-pci: use SDHCI_QUIRK2_BROKEN_HS200 for Acer ApolloLake and apply upstream fix for HS200 eMMC","Revert ""sdhci-pci: use SDHCI_QUIRK2_BROKEN_HS200 for Acer ApolloLake and apply upstream fix for HS200 eMMC",True,{}
endlessm/linux,https://github.com/endlessm/linux,235,2017-04-07T12:18:35Z,2020-09-18T13:30:44Z,2020-09-18T13:30:44Z,CLOSED,False,16,0,1,https://github.com/carlocaione,RTL8723BE: Set ant_sel=1 for HP 240 G5,1,[],https://github.com/endlessm/linux/pull/235,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/235,https://phabricator.endlessm.com/T16455,https://phabricator.endlessm.com/T16455,True,{}
endlessm/linux,https://github.com/endlessm/linux,235,2017-04-07T12:18:35Z,2020-09-18T13:30:44Z,2020-09-18T13:30:44Z,CLOSED,False,16,0,1,https://github.com/carlocaione,RTL8723BE: Set ant_sel=1 for HP 240 G5,1,[],https://github.com/endlessm/linux/pull/235,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/235#issuecomment-292551026,https://phabricator.endlessm.com/T16455,"Please add a commit message. What problem does this solve and how did you observe that it makes a difference?
Do we have an understanding of why it is needed, is it because the EEPROM points at antenna connector 2 but the shipped hardware configuration has it connected to connector 1?
Do we not need this on master too?",True,{}
endlessm/linux,https://github.com/endlessm/linux,236,2017-04-07T14:59:38Z,2017-04-11T14:42:33Z,2017-04-11T14:42:36Z,MERGED,True,28,14,1,https://github.com/carlocaione,hp-wmi: Fix detection for dock and tablet mode,2,[],https://github.com/endlessm/linux/pull/236,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/236,https://phabricator.endlessm.com/T16452,https://phabricator.endlessm.com/T16452,True,{}
endlessm/linux,https://github.com/endlessm/linux,236,2017-04-07T14:59:38Z,2017-04-11T14:42:33Z,2017-04-11T14:42:36Z,MERGED,True,28,14,1,https://github.com/carlocaione,hp-wmi: Fix detection for dock and tablet mode,2,[],https://github.com/endlessm/linux/pull/236,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/236#issuecomment-292561235,https://phabricator.endlessm.com/T16452,Small typo: s/Several laptop/Several laptops/,True,{}
endlessm/linux,https://github.com/endlessm/linux,237,2017-04-07T18:15:49Z,2017-04-07T19:32:31Z,2017-04-07T19:32:34Z,MERGED,True,16,0,1,https://github.com/carlocaione,RTL8723BE: Fix antenna selection for HP240G5,1,[],https://github.com/endlessm/linux/pull/237,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/237,https://phabricator.endlessm.com/T16455,https://phabricator.endlessm.com/T16455,True,{}
endlessm/linux,https://github.com/endlessm/linux,238,2017-04-11T06:31:57Z,2017-04-11T13:54:14Z,2017-04-11T13:54:17Z,MERGED,True,184,1,2,https://github.com/carlocaione,HID: asus: support backlight on USB keyboards,1,[],https://github.com/endlessm/linux/pull/238,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/238,https://phabricator.endlessm.com/T14358,https://phabricator.endlessm.com/T14358,True,{}
endlessm/linux,https://github.com/endlessm/linux,239,2017-04-11T13:58:14Z,2017-04-11T14:41:43Z,2017-04-11T14:41:48Z,MERGED,True,28,14,1,https://github.com/carlocaione,T16452 master,2,[],https://github.com/endlessm/linux/pull/239,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/239,https://phabricator.endlessm.com/T16452,https://phabricator.endlessm.com/T16452,True,{}
endlessm/linux,https://github.com/endlessm/linux,240,2017-04-11T15:48:11Z,2017-04-13T11:48:12Z,2017-04-13T11:48:14Z,MERGED,True,231,3,2,https://github.com/carlocaione,HID: asus: support backlight on USB keyboards,1,[],https://github.com/endlessm/linux/pull/240,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/240,https://phabricator.endlessm.com/T14358,https://phabricator.endlessm.com/T14358,True,{}
endlessm/linux,https://github.com/endlessm/linux,240,2017-04-11T15:48:11Z,2017-04-13T11:48:12Z,2017-04-13T11:48:14Z,MERGED,True,231,3,2,https://github.com/carlocaione,HID: asus: support backlight on USB keyboards,1,[],https://github.com/endlessm/linux/pull/240,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/240#issuecomment-293315259,https://phabricator.endlessm.com/T14358,"This device id is already claimed on this branch by hid-asus-rog. Will the kernel now load both hid-asus and hid-asus-rog for this device, with functionality from both drivers working OK?",True,{}
endlessm/linux,https://github.com/endlessm/linux,240,2017-04-11T15:48:11Z,2017-04-13T11:48:12Z,2017-04-13T11:48:14Z,MERGED,True,231,3,2,https://github.com/carlocaione,HID: asus: support backlight on USB keyboards,1,[],https://github.com/endlessm/linux/pull/240,https://github.com/carlocaione,3,https://github.com/endlessm/linux/pull/240#issuecomment-293852180,https://phabricator.endlessm.com/T14358,@dsd new PR moving all the code into the ROG specific HID driver.,True,{}
endlessm/linux,https://github.com/endlessm/linux,241,2017-04-19T16:15:06Z,2017-04-20T20:01:26Z,2017-04-20T20:01:29Z,CLOSED,False,37,6,1,https://github.com/mschiu77,ACPI / EC: Fix media keys not working problem on some Asus laptops,1,[],https://github.com/endlessm/linux/pull/241,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/241,"Some Asus laptops (verified on X550VXK/FX502VD/FX502VE) get no
interrupts when pressing media keys thus the corresponding functions
are not invoked. It's due to the _GPE defines in DSDT for EC returns
differnt value compared to the GPE Number in ECDT. Confirmed with Asus
that the vale in ECDT is the correct one. This commit use a DMI quirk
to prevent calling _GPE when doing ec_parse_device() and keep the ECDT
GPE number setting for the EC device.
https://phabricator.endlessm.com/T16033
Signed-off-by: Chris Chiu chiu@endlessm.com","Some Asus laptops (verified on X550VXK/FX502VD/FX502VE) get no
interrupts when pressing media keys thus the corresponding functions
are not invoked. It's due to the _GPE defines in DSDT for EC returns
differnt value compared to the GPE Number in ECDT. Confirmed with Asus
that the vale in ECDT is the correct one. This commit use a DMI quirk
to prevent calling _GPE when doing ec_parse_device() and keep the ECDT
GPE number setting for the EC device.
https://phabricator.endlessm.com/T16033
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,241,2017-04-19T16:15:06Z,2017-04-20T20:01:26Z,2017-04-20T20:01:29Z,CLOSED,False,37,6,1,https://github.com/mschiu77,ACPI / EC: Fix media keys not working problem on some Asus laptops,1,[],https://github.com/endlessm/linux/pull/241,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/241#issuecomment-295883676,"Some Asus laptops (verified on X550VXK/FX502VD/FX502VE) get no
interrupts when pressing media keys thus the corresponding functions
are not invoked. It's due to the _GPE defines in DSDT for EC returns
differnt value compared to the GPE Number in ECDT. Confirmed with Asus
that the vale in ECDT is the correct one. This commit use a DMI quirk
to prevent calling _GPE when doing ec_parse_device() and keep the ECDT
GPE number setting for the EC device.
https://phabricator.endlessm.com/T16033
Signed-off-by: Chris Chiu chiu@endlessm.com",pushed manually to fix the date,True,{}
endlessm/linux,https://github.com/endlessm/linux,242,2017-04-24T16:16:52Z,2017-05-05T02:05:08Z,2017-05-05T02:05:12Z,MERGED,True,4,0,1,https://github.com/mschiu77,ACPI / EC: Fix media keys not working problem on some Asus X580VD,1,[],https://github.com/endlessm/linux/pull/242,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/242,"Apply the same DMI quirk in last commit to fix the incorrect GPE number
defined in DSDT on EC device for Asus X580VD
https://phabricator.endlessm.com/T16722
Signed-off-by: Chris Chiu chiu@endlessm.com","Apply the same DMI quirk in last commit to fix the incorrect GPE number
defined in DSDT on EC device for Asus X580VD
https://phabricator.endlessm.com/T16722
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,243,2017-04-28T12:03:49Z,2017-04-28T17:08:52Z,2017-04-28T17:08:55Z,MERGED,True,4,1,1,https://github.com/mschiu77,ACPI / EC: Fix NULL reference of boot_ec caused by the DMI quirk,1,[],https://github.com/endlessm/linux/pull/243,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/243,"The boot_ec is handled differently in kernel 4.10 and 4.8. The DMI
quirk in 4002b74 is originally
designed for the ec driver on kernel 4.10. Fix the NULL boot_ec
and keep the DMI quirk working.
https://phabricator.endlessm.com/T16834
Signed-off-by: Chris Chiu chiu@endlessm.com","The boot_ec is handled differently in kernel 4.10 and 4.8. The DMI
quirk in 4002b74 is originally
designed for the ec driver on kernel 4.10. Fix the NULL boot_ec
and keep the DMI quirk working.
https://phabricator.endlessm.com/T16834
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,244,2017-05-02T06:49:19Z,2017-05-03T20:13:02Z,2017-05-03T20:13:06Z,CLOSED,False,283630,0,416,https://github.com/mschiu77,T16720,3,[],https://github.com/endlessm/linux/pull/244,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/244,Add Realtek RTL8822BE support from https://github.com/pkshih/rtlwifi_sync branch rtlwifi.linux_20170126,Add Realtek RTL8822BE support from https://github.com/pkshih/rtlwifi_sync branch rtlwifi.linux_20170126,True,{}
endlessm/linux,https://github.com/endlessm/linux,244,2017-05-02T06:49:19Z,2017-05-03T20:13:02Z,2017-05-03T20:13:06Z,CLOSED,False,283630,0,416,https://github.com/mschiu77,T16720,3,[],https://github.com/endlessm/linux/pull/244,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/244#issuecomment-299021847,Add Realtek RTL8822BE support from https://github.com/pkshih/rtlwifi_sync branch rtlwifi.linux_20170126,"pushed the first 2 commits, thanks! 3rd one not needed",True,{}
endlessm/linux,https://github.com/endlessm/linux,245,2017-05-08T09:50:25Z,2017-05-08T19:11:25Z,2017-05-08T19:11:28Z,CLOSED,False,18,0,1,https://github.com/mschiu77,Input: i8042 - add few Acer Aspire models to 'reset' blacklist,1,[],https://github.com/endlessm/linux/pull/245,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/245,"Acer Aspire ES1-132/ES1-332/ES1-432 needs to be in the reset quirk
list for its touchpad's proper function.","Acer Aspire ES1-132/ES1-332/ES1-432 needs to be in the reset quirk
list for its touchpad's proper function.",True,{}
endlessm/linux,https://github.com/endlessm/linux,245,2017-05-08T09:50:25Z,2017-05-08T19:11:25Z,2017-05-08T19:11:28Z,CLOSED,False,18,0,1,https://github.com/mschiu77,Input: i8042 - add few Acer Aspire models to 'reset' blacklist,1,[],https://github.com/endlessm/linux/pull/245,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/245#issuecomment-299962224,"Acer Aspire ES1-132/ES1-332/ES1-432 needs to be in the reset quirk
list for its touchpad's proper function.",applied manually,True,{}
endlessm/linux,https://github.com/endlessm/linux,246,2017-05-09T15:34:11Z,2017-05-09T15:57:13Z,2017-05-09T15:57:16Z,MERGED,True,24,0,1,https://github.com/mschiu77,drm/amdgpu: disable driver loading for particular Acer models,1,[],https://github.com/endlessm/linux/pull/246,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/246,"Acer Aspire A515-41G and Nitro AN515-41 are not well supported even
in latest amdgpu driver. It crashes during boot so this commit disable
the amdgpu driver until there's a upstream fix.
https://phabricator.endlessm.com/T16777
Signed-off-by: Chris Chiu chiu@endlessm.com","Acer Aspire A515-41G and Nitro AN515-41 are not well supported even
in latest amdgpu driver. It crashes during boot so this commit disable
the amdgpu driver until there's a upstream fix.
https://phabricator.endlessm.com/T16777
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,247,2017-05-10T11:55:48Z,2017-05-10T19:57:11Z,2017-05-10T19:57:13Z,CLOSED,False,18,0,1,https://github.com/mschiu77,Input: i8042 - force reset on more Acer Aspire models,1,[],https://github.com/endlessm/linux/pull/247,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/247,"When the touchpad is configured to Basic Mode in the firmware setup,
the Acer Aspire A315-31/A314-31/A114-31 touchpad doesn't produce any
response until after suspend/resume.
Force reset during initialisation to solve this.","When the touchpad is configured to Basic Mode in the firmware setup,
the Acer Aspire A315-31/A314-31/A114-31 touchpad doesn't produce any
response until after suspend/resume.
Force reset during initialisation to solve this.",True,{}
endlessm/linux,https://github.com/endlessm/linux,247,2017-05-10T11:55:48Z,2017-05-10T19:57:11Z,2017-05-10T19:57:13Z,CLOSED,False,18,0,1,https://github.com/mschiu77,Input: i8042 - force reset on more Acer Aspire models,1,[],https://github.com/endlessm/linux/pull/247,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/247#issuecomment-300595062,"When the touchpad is configured to Basic Mode in the firmware setup,
the Acer Aspire A315-31/A314-31/A114-31 touchpad doesn't produce any
response until after suspend/resume.
Force reset during initialisation to solve this.",pushed manually to add bug link to the commit message,True,{}
endlessm/linux,https://github.com/endlessm/linux,248,2017-05-12T18:36:58Z,2017-05-13T02:07:50Z,2017-05-13T02:07:53Z,MERGED,True,4051,391,61,https://github.com/jprvita,Support acceleration and HDMI output on the NVIDIA Pascal GPUs,53,[],https://github.com/endlessm/linux/pull/248,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/248,"This is a backport of a patchset merged on the Linux 4.12 merge window. There were no conflicts during the backport, so git should automatically skip these when we rebase on Linux 4.12.
https://phabricator.endlessm.com/T16037","This is a backport of a patchset merged on the Linux 4.12 merge window. There were no conflicts during the backport, so git should automatically skip these when we rebase on Linux 4.12.
https://phabricator.endlessm.com/T16037",True,{}
endlessm/linux,https://github.com/endlessm/linux,249,2017-05-16T16:22:29Z,2018-07-17T19:15:51Z,2018-07-17T19:15:56Z,CLOSED,False,1460672,102280,3226,https://github.com/dsd,Import linux-meta virtual packages,900,[],https://github.com/endlessm/linux/pull/249,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/249,"To simplify maintenance, add the linux-meta packages here. Then we have
all the kernel packaging maintained in just 1 place.
https://phabricator.endlessm.com/T16504","To simplify maintenance, add the linux-meta packages here. Then we have
all the kernel packaging maintained in just 1 place.
https://phabricator.endlessm.com/T16504",True,{}
endlessm/linux,https://github.com/endlessm/linux,249,2017-05-16T16:22:29Z,2018-07-17T19:15:51Z,2018-07-17T19:15:56Z,CLOSED,False,1460672,102280,3226,https://github.com/dsd,Import linux-meta virtual packages,900,[],https://github.com/endlessm/linux/pull/249,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/249#issuecomment-405696578,"To simplify maintenance, add the linux-meta packages here. Then we have
all the kernel packaging maintained in just 1 place.
https://phabricator.endlessm.com/T16504",Closing stale PR.,True,{}
endlessm/linux,https://github.com/endlessm/linux,250,2017-05-17T20:13:53Z,2017-05-17T20:17:45Z,2017-05-17T20:18:14Z,MERGED,True,6,1,1,https://github.com/dsd,Quirk antenna selection on HP 240 G5/HP 250 G5,2,[],https://github.com/endlessm/linux/pull/250,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/250,https://phabricator.endlessm.com/T15935,https://phabricator.endlessm.com/T15935,True,{}
endlessm/linux,https://github.com/endlessm/linux,251,2017-05-19T09:36:02Z,2017-05-22T13:57:23Z,2017-05-22T13:57:25Z,MERGED,True,23,24,2,https://github.com/mschiu77,T17116 ,2,[],https://github.com/endlessm/linux/pull/251,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/251,"Revert old commit ""drm/amdgpu: disable driver loading for particular Acer models"" which only works in Legacy mode. Move the DMI check to amdgpu_pci_probe but don't know it there's still X509 certificate issue.","Revert old commit ""drm/amdgpu: disable driver loading for particular Acer models"" which only works in Legacy mode. Move the DMI check to amdgpu_pci_probe but don't know it there's still X509 certificate issue.",True,{}
endlessm/linux,https://github.com/endlessm/linux,252,2017-05-24T06:23:15Z,2017-05-25T17:30:00Z,2017-05-25T17:30:03Z,MERGED,True,1,0,1,https://github.com/mschiu77,sound/hda: ALC256 mic and headset-mode fixups for Asus X705UD,1,[],https://github.com/endlessm/linux/pull/252,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/252,"Apply the known ALC256_FIXUP_ASUS_MIC for the ASUS X705UD. This fixes
headphone jack sensing and enables use of the internal microphone.
Unfortunately jack sensing for the headset mic is still not working.
https://phabricator.endlessm.com/T17180
Signed-off-by: Chris Chiu chiu@endlessm.com","Apply the known ALC256_FIXUP_ASUS_MIC for the ASUS X705UD. This fixes
headphone jack sensing and enables use of the internal microphone.
Unfortunately jack sensing for the headset mic is still not working.
https://phabricator.endlessm.com/T17180
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,253,2017-05-29T15:38:03Z,2017-05-29T16:26:40Z,2017-05-29T16:26:43Z,MERGED,True,125,53,7,https://github.com/mschiu77,T17223 - Fix for GTX 970 GPUs that are in an odd MMU configuration,2,[],https://github.com/endlessm/linux/pull/253,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/253,"As mentioned in skeggsb/linux@6796b12.
""drm/nouveau/fb/gm200: split ram implementation from gm107"" is Fix for GTX 970 GPUs that are in an odd MMU configuration and it need dependency on
""drm/nouveau/fb/gf100-: modify constructors to allow more customisation""","As mentioned in skeggsb/linux@6796b12.
""drm/nouveau/fb/gm200: split ram implementation from gm107"" is Fix for GTX 970 GPUs that are in an odd MMU configuration and it need dependency on
""drm/nouveau/fb/gf100-: modify constructors to allow more customisation""",True,{}
endlessm/linux,https://github.com/endlessm/linux,254,2017-05-31T13:33:18Z,2017-05-31T14:01:27Z,2017-05-31T14:01:30Z,MERGED,True,266,102,11,https://github.com/mschiu77,T17223 - fix GTX 970 boards with 4GiB of RAM where the last 512MiB isn't fully accessible,4,[],https://github.com/endlessm/linux/pull/254,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/254,https://phabricator.endlessm.com/T17223,https://phabricator.endlessm.com/T17223,True,{}
endlessm/linux,https://github.com/endlessm/linux,255,2017-05-31T15:25:45Z,2017-05-31T21:36:24Z,2017-05-31T21:36:27Z,CLOSED,False,4,0,1,https://github.com/carlocaione,ACPI / EC: Fix suspend on lid closing caused by wrong GPE in DSDT,1,[],https://github.com/endlessm/linux/pull/255,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/255,https://phabricator.endlessm.com/T17326,https://phabricator.endlessm.com/T17326,True,{}
endlessm/linux,https://github.com/endlessm/linux,255,2017-05-31T15:25:45Z,2017-05-31T21:36:24Z,2017-05-31T21:36:27Z,CLOSED,False,4,0,1,https://github.com/carlocaione,ACPI / EC: Fix suspend on lid closing caused by wrong GPE in DSDT,1,[],https://github.com/endlessm/linux/pull/255,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/255#issuecomment-305324841,https://phabricator.endlessm.com/T17326,"added buglink and pushed, thanks",True,{}
endlessm/linux,https://github.com/endlessm/linux,256,2017-06-02T09:38:05Z,2017-06-02T14:17:54Z,2017-06-02T14:17:56Z,MERGED,True,7,0,1,https://github.com/mschiu77,Disable nouveau on the Acer Aspire Z20-730,1,[],https://github.com/endlessm/linux/pull/256,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/256,"The Acer Aspire Z20-730 has two video cards (Intel+NVIDIA), the NVIDIA
(GM108) will hit kernel panic during boot even with the latest nouveau
driver.
Disable it for now, and revisit later for a proper fix, as some future
machines might depend on it.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T17225","The Acer Aspire Z20-730 has two video cards (Intel+NVIDIA), the NVIDIA
(GM108) will hit kernel panic during boot even with the latest nouveau
driver.
Disable it for now, and revisit later for a proper fix, as some future
machines might depend on it.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T17225",True,{}
endlessm/linux,https://github.com/endlessm/linux,257,2017-06-06T02:47:32Z,2017-06-06T18:16:55Z,2017-06-06T18:16:58Z,MERGED,True,7,0,1,https://github.com/jprvita,platform/x86/acer-wmi: Detect RF Button capability,1,[],https://github.com/endlessm/linux/pull/257,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/257,"If a machine reports a RF Button in the communication button device
bitmap, we need to remove it before calling Get Device Status otherwise
it will return the ""Undefined device"" (0xE2) error code.
Although this may be a BIOS bug, we don't really need to get or set the
RF Button status. The LED indicator status is controlled by firmware
logic depending on the status of the wireless radios present on the
machine (WiFi, Bluetooth, WWAN).
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T16187","If a machine reports a RF Button in the communication button device
bitmap, we need to remove it before calling Get Device Status otherwise
it will return the ""Undefined device"" (0xE2) error code.
Although this may be a BIOS bug, we don't really need to get or set the
RF Button status. The LED indicator status is controlled by firmware
logic depending on the status of the wireless radios present on the
machine (WiFi, Bluetooth, WWAN).
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T16187",True,{}
endlessm/linux,https://github.com/endlessm/linux,258,2017-06-15T15:50:11Z,2017-06-16T15:37:20Z,2017-06-16T15:37:22Z,MERGED,True,2,25,2,https://github.com/carlocaione,T16971,2,[],https://github.com/endlessm/linux/pull/258,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/258,https://phabricator.endlessm.com/T16971,https://phabricator.endlessm.com/T16971,True,{}
endlessm/linux,https://github.com/endlessm/linux,259,2017-06-16T11:43:09Z,2017-06-16T14:56:15Z,2017-06-16T14:56:19Z,MERGED,True,1,0,1,https://github.com/mschiu77,PCI: Disable AER for Skylake/Kabylake with Realtek for ASUS D830MT/D6…,1,[],https://github.com/endlessm/linux/pull/259,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/259,"…30MT
Apply the same quirk_disable_rtl_aspm() for ASUS D830MT/D630MT which
have the same huge PCIe AER error spam.
https://phabricator.endlessm.com/T17655
Signed-off-by: Chris Chiu chiu@endlessm.com","…30MT
Apply the same quirk_disable_rtl_aspm() for ASUS D830MT/D630MT which
have the same huge PCIe AER error spam.
https://phabricator.endlessm.com/T17655
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,260,2017-06-16T14:38:54Z,2017-06-16T15:38:44Z,2017-06-16T15:38:46Z,MERGED,True,7,3,4,https://github.com/carlocaione,drm/amdgpu: increase gtt size to 3GB by default v2,1,[],https://github.com/endlessm/linux/pull/260,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/260,https://phabricator.endlessm.com/T17631,https://phabricator.endlessm.com/T17631,True,{}
endlessm/linux,https://github.com/endlessm/linux,261,2017-06-19T11:40:30Z,2017-06-21T13:07:20Z,2017-06-21T13:07:24Z,MERGED,True,14,1,1,https://github.com/mschiu77,sound/hda: ALC286 mic and headset-mode fixups for Acer Aspire U27-880,1,[],https://github.com/endlessm/linux/pull/261,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/261,"Acer Aspire U27-880(AIO) with ALC286 codec can not detect headset mic
and internal mic not working either. It needs the similar quirk like
Sony laptops to fix headphone jack sensing and enables use of the
internal microphone.
Unfortunately jack sensing for the headset mic is still not working.
https://phabricator.endlessm.com/T17721
Signed-off-by: Chris Chiu chiu@endlessm.com","Acer Aspire U27-880(AIO) with ALC286 codec can not detect headset mic
and internal mic not working either. It needs the similar quirk like
Sony laptops to fix headphone jack sensing and enables use of the
internal microphone.
Unfortunately jack sensing for the headset mic is still not working.
https://phabricator.endlessm.com/T17721
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,262,2017-06-19T17:46:02Z,2017-06-19T17:47:42Z,2017-06-19T17:47:42Z,MERGED,True,7,0,1,https://github.com/dsd,Input: i8042 - add Fujitsu Lifebook AH544 to notimeout list,1,[],https://github.com/endlessm/linux/pull/262,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/262,"Without this quirk, the touchpad is not responsive on this product, with
the following message repeated in the logs:
psmouse serio1: bad data from KBC - timeout
Add it to the notimeout list alongside other similar Fujitsu laptops.
https://phabricator.endlessm.com/T17627
Signed-off-by: Daniel Drake drake@endlessm.com","Without this quirk, the touchpad is not responsive on this product, with
the following message repeated in the logs:
psmouse serio1: bad data from KBC - timeout
Add it to the notimeout list alongside other similar Fujitsu laptops.
https://phabricator.endlessm.com/T17627
Signed-off-by: Daniel Drake drake@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,263,2017-06-19T21:30:24Z,2017-06-22T13:40:38Z,2017-06-22T13:40:40Z,MERGED,True,2,2,1,https://github.com/dsd,Build linux-libc-dev package on ARM,1,[],https://github.com/endlessm/linux/pull/263,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/263,"This is a dependency of glibc. We can build the headers/tools/etc
packages without actually building the kernel.
usbip had to be disabled since it depends on a header that we don't
currently ship. It could be enabled in future once we have
""bootstrapped"" with this change that will get new headers in place.
https://phabricator.endlessm.com/T17739","This is a dependency of glibc. We can build the headers/tools/etc
packages without actually building the kernel.
usbip had to be disabled since it depends on a header that we don't
currently ship. It could be enabled in future once we have
""bootstrapped"" with this change that will get new headers in place.
https://phabricator.endlessm.com/T17739",True,{}
endlessm/linux,https://github.com/endlessm/linux,264,2017-06-22T08:34:13Z,2017-06-22T13:18:34Z,2017-06-22T13:18:35Z,MERGED,True,3,0,1,https://github.com/mschiu77,Bluetooth: Add new Realtek 8822BE ID 13d3:3526,1,[],https://github.com/endlessm/linux/pull/264,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/264,"This is AZWAVE/AW-CB295NF with Realtek 8822BE which requires a special
driver.
T:  Bus=01 Lev=01 Prnt=01 Port=08 Cnt=03 Dev#=  4 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3526 Rev= 1.10
S:  Manufacturer=Realtek
S:  Product=Bluetooth Radio
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T17808
Signed-off-by: Chris Chiuchiu@endlessm.com","This is AZWAVE/AW-CB295NF with Realtek 8822BE which requires a special
driver.
T:  Bus=01 Lev=01 Prnt=01 Port=08 Cnt=03 Dev#=  4 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3526 Rev= 1.10
S:  Manufacturer=Realtek
S:  Product=Bluetooth Radio
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T17808
Signed-off-by: Chris Chiuchiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,265,2017-06-24T12:59:12Z,2017-06-27T08:50:08Z,2017-06-27T08:50:08Z,CLOSED,False,197,10,11,https://github.com/mschiu77,drm/nouveau/gr/gp107: initial support,2,[],https://github.com/endlessm/linux/pull/265,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/265,"Forked from GP106 implementation.
Differences:

1 PPC/GPC
Slightly different grctx magics
and add its dependency of the gr of GP10B","Forked from GP106 implementation.
Differences:

1 PPC/GPC
Slightly different grctx magics
and add its dependency of the gr of GP10B",True,{}
endlessm/linux,https://github.com/endlessm/linux,266,2017-06-27T08:59:10Z,2017-06-27T12:35:31Z,2017-06-27T12:35:34Z,MERGED,True,197,10,11,https://github.com/mschiu77,drm/nouveau/gr/gp107: initial support,2,[],https://github.com/endlessm/linux/pull/266,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/266,"Forked from GP106 implementation.
Differences:

1 PPC/GPC
Slightly different grctx magics
dependency of the gr on GP10B","Forked from GP106 implementation.
Differences:

1 PPC/GPC
Slightly different grctx magics
dependency of the gr on GP10B",True,{}
endlessm/linux,https://github.com/endlessm/linux,267,2017-06-28T15:22:39Z,2017-06-29T13:16:18Z,2017-06-29T13:16:20Z,MERGED,True,33,7,6,https://github.com/carlocaione,T17431,3,[],https://github.com/endlessm/linux/pull/267,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/267,https://phabricator.endlessm.com/T17431,https://phabricator.endlessm.com/T17431,True,{}
endlessm/linux,https://github.com/endlessm/linux,268,2017-07-05T12:20:14Z,2017-07-06T13:52:36Z,2017-07-06T13:52:39Z,MERGED,True,1,1,1,https://github.com/mschiu77,drm/nouveau/fb/gf100-: Fix 32 bit wraparound in new ram detection,1,[],https://github.com/endlessm/linux/pull/268,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/268,"A missing u64 cast causes a 32-Bit wraparound from
4096 MiB to 0 MiB and therefore total 0 MiB VRAM detected
if card has 4096 Mib per FBP.
Signed-off-by: Mario Kleiner mario.kleiner.de@gmail.com
Reviewed-by: Karol Herbst karolherbst@gmail.com
Signed-off-by: Ben Skeggs bskeggs@redhat.com
https://phabricator.endlessm.com/T18047","A missing u64 cast causes a 32-Bit wraparound from
4096 MiB to 0 MiB and therefore total 0 MiB VRAM detected
if card has 4096 Mib per FBP.
Signed-off-by: Mario Kleiner mario.kleiner.de@gmail.com
Reviewed-by: Karol Herbst karolherbst@gmail.com
Signed-off-by: Ben Skeggs bskeggs@redhat.com
https://phabricator.endlessm.com/T18047",True,{}
endlessm/linux,https://github.com/endlessm/linux,268,2017-07-05T12:20:14Z,2017-07-06T13:52:36Z,2017-07-06T13:52:39Z,MERGED,True,1,1,1,https://github.com/mschiu77,drm/nouveau/fb/gf100-: Fix 32 bit wraparound in new ram detection,1,[],https://github.com/endlessm/linux/pull/268,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/268#issuecomment-313161863,"A missing u64 cast causes a 32-Bit wraparound from
4096 MiB to 0 MiB and therefore total 0 MiB VRAM detected
if card has 4096 Mib per FBP.
Signed-off-by: Mario Kleiner mario.kleiner.de@gmail.com
Reviewed-by: Karol Herbst karolherbst@gmail.com
Signed-off-by: Ben Skeggs bskeggs@redhat.com
https://phabricator.endlessm.com/T18047",@mschiu77 What is the phabricator task associated with this PR?,True,{}
endlessm/linux,https://github.com/endlessm/linux,269,2017-07-10T10:44:00Z,2017-07-14T19:01:05Z,2017-07-14T19:01:31Z,MERGED,True,15,0,1,https://github.com/mschiu77,sound/hda: ALC294 mic and headset-mode fixups for ASUS X542UN,1,[],https://github.com/endlessm/linux/pull/269,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/269,"The known ALC256_FIXUP_ASUS_MIC fixup can fix the headphone jack
sensing and enable use of the internal microphone on this laptop
X542UN. However, it's ALC294 so create a new fixup named
ALC294_FIXUP_ASUS_MIC to avoid confusion.
https://phabricator.endlessm.com/T17766
Signed-off-by: Chris Chiu chiu@endlessm.com","The known ALC256_FIXUP_ASUS_MIC fixup can fix the headphone jack
sensing and enable use of the internal microphone on this laptop
X542UN. However, it's ALC294 so create a new fixup named
ALC294_FIXUP_ASUS_MIC to avoid confusion.
https://phabricator.endlessm.com/T17766
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,270,2017-07-10T11:27:44Z,2020-09-18T13:30:39Z,2020-09-18T18:26:26Z,CLOSED,False,1470248,105890,3693,https://github.com/carlocaione,clk: x86: Do not gate PMC platform clocks,1462,[],https://github.com/endlessm/linux/pull/270,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/270,https://phabricator.endlessm.com/T18107,https://phabricator.endlessm.com/T18107,True,{}
endlessm/linux,https://github.com/endlessm/linux,271,2017-07-10T13:17:19Z,2017-07-10T13:39:07Z,2017-07-10T13:39:10Z,MERGED,True,48,1,1,https://github.com/carlocaione,r8169: Claim pmc_plt_clk_4 clock,1,[],https://github.com/endlessm/linux/pull/271,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/271,https://phabricator.endlessm.com/T18107,https://phabricator.endlessm.com/T18107,True,{}
endlessm/linux,https://github.com/endlessm/linux,272,2017-07-12T09:49:05Z,2017-07-12T12:32:55Z,2017-07-12T12:33:01Z,MERGED,True,78,1,2,https://github.com/mschiu77,ath10k: initialize regulatory domain based on SMBIOS data,1,[],https://github.com/endlessm/linux/pull/272,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/272,"According to the specification ""Qualcomm Atheros WLAN SMBIOS 80-Y7674-28
Rev.D"", Acer follow it to add a OEM-specific field in SMBIOS to
program the regulatory domain (country code) based on target shipment
country. It basically stores the flag which toggle the 11ac capability,
country code flag and country code ANSI name based on ISO3166-1 alpha2.
This commit read and parse data from SMBIOS and change regulatory
settings while initializing the regulatory domain (country code).
https://phabricator.endlessm.com/T18076
Signed-off-by: Chris Chiu chiu@endlessm.com","According to the specification ""Qualcomm Atheros WLAN SMBIOS 80-Y7674-28
Rev.D"", Acer follow it to add a OEM-specific field in SMBIOS to
program the regulatory domain (country code) based on target shipment
country. It basically stores the flag which toggle the 11ac capability,
country code flag and country code ANSI name based on ISO3166-1 alpha2.
This commit read and parse data from SMBIOS and change regulatory
settings while initializing the regulatory domain (country code).
https://phabricator.endlessm.com/T18076
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,273,2017-07-12T10:35:45Z,2017-07-12T22:02:32Z,2017-07-12T22:03:04Z,MERGED,True,1,0,1,https://github.com/mschiu77,Sound: hda - Add quirk for ALC255 headset mic on ASUS Q524UQK,1,[],https://github.com/endlessm/linux/pull/273,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/273,"https://phabricator.endlessm.com/T17763
Signed-off-by: Chris Chiu chiu@endlessm.com","https://phabricator.endlessm.com/T17763
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,274,2017-07-12T12:49:00Z,2017-07-12T12:55:45Z,2020-09-18T18:27:59Z,CLOSED,False,5,5,1,https://github.com/carlocaione,drm/nouveau/gr/gp107: Partially revert acceleration support,1,[],https://github.com/endlessm/linux/pull/274,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/274,https://phabricator.endlessm.com/T18168,https://phabricator.endlessm.com/T18168,True,{}
endlessm/linux,https://github.com/endlessm/linux,275,2017-07-12T12:57:31Z,2020-09-18T13:30:36Z,2020-09-18T18:27:58Z,CLOSED,False,1470295,105890,3692,https://github.com/carlocaione,drm/nouveau/gr/gp107: Partially revert acceleration support,1464,[],https://github.com/endlessm/linux/pull/275,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/275,https://phabricator.endlessm.com/T18168,https://phabricator.endlessm.com/T18168,True,{}
endlessm/linux,https://github.com/endlessm/linux,276,2017-07-17T13:55:30Z,2017-07-17T14:06:03Z,2017-07-17T14:06:05Z,MERGED,True,13,0,1,https://github.com/carlocaione,nouveau/GP107: Enable noaccel quirk for Acer Aspire A717-71G,1,[],https://github.com/endlessm/linux/pull/276,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/276,https://phabricator.endlessm.com/T18168,https://phabricator.endlessm.com/T18168,True,{}
endlessm/linux,https://github.com/endlessm/linux,277,2017-07-20T09:51:20Z,2017-07-21T10:57:56Z,2017-07-21T10:57:59Z,MERGED,True,15,0,1,https://github.com/mschiu77,drm/nouveau: Disable runtime pm on Asus Notebooks with NV GP107,1,[],https://github.com/endlessm/linux/pull/277,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/277,"The Asus FX502VD/VE, X580VD and more models with NVIDIA GTX1050(Ti)
has a problem with the interaction between runtime pm and suspend/resume
which leads to the machine hanging on boot/shutdown. This commit
disables runtime pm for all Asus Notebooks with the display chip
NV GP107.
It has to be reverted once if there's a upstream fix.
https://phabricator.endlessm.com/T17322
Signed-off-by: Chris Chiu chiu@endlessm.com","The Asus FX502VD/VE, X580VD and more models with NVIDIA GTX1050(Ti)
has a problem with the interaction between runtime pm and suspend/resume
which leads to the machine hanging on boot/shutdown. This commit
disables runtime pm for all Asus Notebooks with the display chip
NV GP107.
It has to be reverted once if there's a upstream fix.
https://phabricator.endlessm.com/T17322
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,278,2017-07-20T13:26:37Z,2017-07-21T10:45:10Z,2017-07-21T10:45:12Z,CLOSED,False,575238,283008,973,https://github.com/mschiu77,T18344 - revert old RTL8822BE driver commits and add official release one,6,[],https://github.com/endlessm/linux/pull/278,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/278,,,True,{}
endlessm/linux,https://github.com/endlessm/linux,278,2017-07-20T13:26:37Z,2017-07-21T10:45:10Z,2017-07-21T10:45:12Z,CLOSED,False,575238,283008,973,https://github.com/mschiu77,T18344 - revert old RTL8822BE driver commits and add official release one,6,[],https://github.com/endlessm/linux/pull/278,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/278#issuecomment-316969884,,pushed with a slight tweak in the last commit to support out-of-tree object build (as used in kernel packaging),True,{}
endlessm/linux,https://github.com/endlessm/linux,279,2017-07-21T16:42:06Z,2017-08-08T10:46:38Z,2017-08-08T10:46:40Z,MERGED,True,69,1,4,https://github.com/jprvita,HID: multitouch: Support Asus T304UA media keys,5,[],https://github.com/endlessm/linux/pull/279,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/279,"The Asus T304UA convertible sports a magnetic detachable keyboard with
touchpad, which is connected over USB. Most of the keyboard hotkeys are
exposed through the same USB interface as the touchpad, defined in the
report descriptor as follows:
0x06, 0x31, 0xFF,  // Usage Page (Vendor Defined 0xFF31)
0x09, 0x76,        // Usage (0x76)
0xA1, 0x01,        // Collection (Application)
0x05, 0xFF,        //   Usage Page (Reserved 0xFF)
0x85, 0x5A,        //   Report ID (90)
0x19, 0x00,        //   Usage Minimum (0x00)
0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
0x15, 0x00,        //   Logical Minimum (0)
0x26, 0xFF, 0x00,  //   Logical Maximum (255)
0x75, 0x08,        //   Report Size (8)
0x95, 0x0F,        //   Report Count (15)
0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
0x05, 0xFF,        //   Usage Page (Reserved 0xFF)
0x85, 0x5A,        //   Report ID (90)
0x19, 0x00,        //   Usage Minimum (0x00)
0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
0x15, 0x00,        //   Logical Minimum (0)
0x26, 0xFF, 0x00,  //   Logical Maximum (255)
0x75, 0x08,        //   Report Size (8)
0x95, 0x02,        //   Report Count (2)
0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
0xC0,              // End Collection
The UsagePage is declared as a variable, but we need to treat it as an
array to be able to map each Usage we care about to its corresponding
input key.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T14926","The Asus T304UA convertible sports a magnetic detachable keyboard with
touchpad, which is connected over USB. Most of the keyboard hotkeys are
exposed through the same USB interface as the touchpad, defined in the
report descriptor as follows:
0x06, 0x31, 0xFF,  // Usage Page (Vendor Defined 0xFF31)
0x09, 0x76,        // Usage (0x76)
0xA1, 0x01,        // Collection (Application)
0x05, 0xFF,        //   Usage Page (Reserved 0xFF)
0x85, 0x5A,        //   Report ID (90)
0x19, 0x00,        //   Usage Minimum (0x00)
0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
0x15, 0x00,        //   Logical Minimum (0)
0x26, 0xFF, 0x00,  //   Logical Maximum (255)
0x75, 0x08,        //   Report Size (8)
0x95, 0x0F,        //   Report Count (15)
0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
0x05, 0xFF,        //   Usage Page (Reserved 0xFF)
0x85, 0x5A,        //   Report ID (90)
0x19, 0x00,        //   Usage Minimum (0x00)
0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
0x15, 0x00,        //   Logical Minimum (0)
0x26, 0xFF, 0x00,  //   Logical Maximum (255)
0x75, 0x08,        //   Report Size (8)
0x95, 0x02,        //   Report Count (2)
0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
0xC0,              // End Collection
The UsagePage is declared as a variable, but we need to treat it as an
array to be able to map each Usage we care about to its corresponding
input key.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T14926",True,{}
endlessm/linux,https://github.com/endlessm/linux,279,2017-07-21T16:42:06Z,2017-08-08T10:46:38Z,2017-08-08T10:46:40Z,MERGED,True,69,1,4,https://github.com/jprvita,HID: multitouch: Support Asus T304UA media keys,5,[],https://github.com/endlessm/linux/pull/279,https://github.com/carlocaione,2,https://github.com/endlessm/linux/pull/279#issuecomment-318987024,"The Asus T304UA convertible sports a magnetic detachable keyboard with
touchpad, which is connected over USB. Most of the keyboard hotkeys are
exposed through the same USB interface as the touchpad, defined in the
report descriptor as follows:
0x06, 0x31, 0xFF,  // Usage Page (Vendor Defined 0xFF31)
0x09, 0x76,        // Usage (0x76)
0xA1, 0x01,        // Collection (Application)
0x05, 0xFF,        //   Usage Page (Reserved 0xFF)
0x85, 0x5A,        //   Report ID (90)
0x19, 0x00,        //   Usage Minimum (0x00)
0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
0x15, 0x00,        //   Logical Minimum (0)
0x26, 0xFF, 0x00,  //   Logical Maximum (255)
0x75, 0x08,        //   Report Size (8)
0x95, 0x0F,        //   Report Count (15)
0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
0x05, 0xFF,        //   Usage Page (Reserved 0xFF)
0x85, 0x5A,        //   Report ID (90)
0x19, 0x00,        //   Usage Minimum (0x00)
0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
0x15, 0x00,        //   Logical Minimum (0)
0x26, 0xFF, 0x00,  //   Logical Maximum (255)
0x75, 0x08,        //   Report Size (8)
0x95, 0x02,        //   Report Count (2)
0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
0xC0,              // End Collection
The UsagePage is declared as a variable, but we need to treat it as an
array to be able to map each Usage we care about to its corresponding
input key.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T14926",@jprvita I left a couple of nits and one comment.,True,{}
endlessm/linux,https://github.com/endlessm/linux,279,2017-07-21T16:42:06Z,2017-08-08T10:46:38Z,2017-08-08T10:46:40Z,MERGED,True,69,1,4,https://github.com/jprvita,HID: multitouch: Support Asus T304UA media keys,5,[],https://github.com/endlessm/linux/pull/279,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/279#issuecomment-319994094,"The Asus T304UA convertible sports a magnetic detachable keyboard with
touchpad, which is connected over USB. Most of the keyboard hotkeys are
exposed through the same USB interface as the touchpad, defined in the
report descriptor as follows:
0x06, 0x31, 0xFF,  // Usage Page (Vendor Defined 0xFF31)
0x09, 0x76,        // Usage (0x76)
0xA1, 0x01,        // Collection (Application)
0x05, 0xFF,        //   Usage Page (Reserved 0xFF)
0x85, 0x5A,        //   Report ID (90)
0x19, 0x00,        //   Usage Minimum (0x00)
0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
0x15, 0x00,        //   Logical Minimum (0)
0x26, 0xFF, 0x00,  //   Logical Maximum (255)
0x75, 0x08,        //   Report Size (8)
0x95, 0x0F,        //   Report Count (15)
0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
0x05, 0xFF,        //   Usage Page (Reserved 0xFF)
0x85, 0x5A,        //   Report ID (90)
0x19, 0x00,        //   Usage Minimum (0x00)
0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
0x15, 0x00,        //   Logical Minimum (0)
0x26, 0xFF, 0x00,  //   Logical Maximum (255)
0x75, 0x08,        //   Report Size (8)
0x95, 0x02,        //   Report Count (2)
0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
0xC0,              // End Collection
The UsagePage is declared as a variable, but we need to treat it as an
array to be able to map each Usage we care about to its corresponding
input key.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T14926",@carlocaione Thanks for the review. I'll update the PR with the version which was accepted upstream.,True,{}
endlessm/linux,https://github.com/endlessm/linux,280,2017-07-26T07:32:36Z,2017-07-26T08:46:55Z,2017-07-26T08:46:57Z,MERGED,True,15,13,1,https://github.com/mschiu77,Rever old noaccel quirk for Acer A717-71G and enable new quirk for Acer Notebooks,2,[],https://github.com/endlessm/linux/pull/280,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/280,"All laptops ship with NVIDIA GeForce GTX 1050 (Ti) requires passing
'nouveau.noaccel=1' at boot to have it working correctly and avoid
boot or shutdown failure.
With this patch we introduce a new quirk and link it to all Acer
laptops with GP107 to automatically enable this module parameter.
phabricator: https://phabricator.endlessm.com/T18500
Signed-off-by: Chris Chiu chiu@endlessm.com","All laptops ship with NVIDIA GeForce GTX 1050 (Ti) requires passing
'nouveau.noaccel=1' at boot to have it working correctly and avoid
boot or shutdown failure.
With this patch we introduce a new quirk and link it to all Acer
laptops with GP107 to automatically enable this module parameter.
phabricator: https://phabricator.endlessm.com/T18500
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,281,2017-07-31T22:05:21Z,2017-08-02T10:45:02Z,2017-08-03T13:52:55Z,MERGED,True,11,4,1,https://github.com/jprvita,HID: rmi: Make sure the HID device is opened on resume,1,[],https://github.com/endlessm/linux/pull/281,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/281,"So it looks like that suspend/resume has actually always been broken on
hid-rmi. The fact it worked was a rather silly coincidence that was
relying on the HID device to already be opened upon resume. This means
that so long as anything was reading the /dev/input/eventX node for for
an RMI device, it would suspend and resume correctly. As well, if
nothing happened to be keeping the HID device away it would shut off,
then the RMI driver would get confused on resume when it stopped
responding and explode.
So, call hid_hw_open() in rmi_post_resume() so we make sure that the
device is alive before we try talking to it.
This fixes RMI device suspend/resume over HID.
Signed-off-by: Lyude lyude@redhat.com
Cc: Andrew Duggan aduggan@synaptics.com
Cc: stable@vger.kernel.org","So it looks like that suspend/resume has actually always been broken on
hid-rmi. The fact it worked was a rather silly coincidence that was
relying on the HID device to already be opened upon resume. This means
that so long as anything was reading the /dev/input/eventX node for for
an RMI device, it would suspend and resume correctly. As well, if
nothing happened to be keeping the HID device away it would shut off,
then the RMI driver would get confused on resume when it stopped
responding and explode.
So, call hid_hw_open() in rmi_post_resume() so we make sure that the
device is alive before we try talking to it.
This fixes RMI device suspend/resume over HID.
Signed-off-by: Lyude lyude@redhat.com
Cc: Andrew Duggan aduggan@synaptics.com
Cc: stable@vger.kernel.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,282,2017-08-01T22:45:46Z,2017-08-07T10:15:06Z,2017-08-07T10:15:08Z,MERGED,True,6,6,1,https://github.com/jprvita,iwlwifi: Demote messages about fw flags size to info,1,[],https://github.com/endlessm/linux/pull/282,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/282,"These messages are not reporting a real error, just the fact that the
firmware knows about more flags than the driver.
Currently these messages are presented to the user during boot if there
is no bootsplash covering the console, even when booting the kernel with
""quiet"".
Demoting it to the warn level helps having a clean boot process.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com","These messages are not reporting a real error, just the fact that the
firmware knows about more flags than the driver.
Currently these messages are presented to the user during boot if there
is no bootsplash covering the console, even when booting the kernel with
""quiet"".
Demoting it to the warn level helps having a clean boot process.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,283,2017-08-07T09:56:58Z,2017-08-07T11:16:42Z,2017-08-07T11:16:45Z,MERGED,True,1,0,1,https://github.com/mschiu77,PCI: Disable AER for Skylake/Kabylake with Realtek for ASUS D830SF,1,[],https://github.com/endlessm/linux/pull/283,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/283,"Apply the same quirk_disable_rtl_aspm() for ASUS D830SF which have
the same huge PCIe AER error spam.
https://phabricator.endlessm.com/T18688
Signed-off-by: Chris Chiu chiu@endlessm.com","Apply the same quirk_disable_rtl_aspm() for ASUS D830SF which have
the same huge PCIe AER error spam.
https://phabricator.endlessm.com/T18688
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,284,2017-08-07T11:42:17Z,2017-08-11T09:07:59Z,2017-08-11T09:07:59Z,CLOSED,False,22,0,1,https://github.com/mschiu77,PCI: Disable MSI for Apollolake with QCA9565 systems,1,[],https://github.com/endlessm/linux/pull/284,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/284,"It's been reported on lots of Acer laptops that NFA335(QCA AR9565)
module fail connecting wifi. From the /proc/interrupts, there's no
interrupt count at all on interrupt named ath9k. Tried on Intel/AMD
platforms, the NFA335 module only fails connecting on Apollolake.
Apollolake is known to have problem supporting INTx interrupt. However,
current ath9k driver only supports INTx mechanism and no well support
for PCI MSI/MSI-X. Disable MSI on the specific combination Apollolake
with QCA9565 to make ath9k interrupt work.
https://phabricator.endlessm.com/T16988
Signed-off-by: Chris Chiu chiu@endlessm.com","It's been reported on lots of Acer laptops that NFA335(QCA AR9565)
module fail connecting wifi. From the /proc/interrupts, there's no
interrupt count at all on interrupt named ath9k. Tried on Intel/AMD
platforms, the NFA335 module only fails connecting on Apollolake.
Apollolake is known to have problem supporting INTx interrupt. However,
current ath9k driver only supports INTx mechanism and no well support
for PCI MSI/MSI-X. Disable MSI on the specific combination Apollolake
with QCA9565 to make ath9k interrupt work.
https://phabricator.endlessm.com/T16988
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,285,2017-08-10T12:14:54Z,2017-08-11T15:21:54Z,2017-08-11T15:21:56Z,MERGED,True,19,12,1,https://github.com/mschiu77,PCI: Disable AER for Skylake/Kabylake with Realtek wifi cards,1,[],https://github.com/endlessm/linux/pull/285,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/285,"Realtek cards on Skylake/Kabylake systems cause a huge amount of PCIe
AER error spam. Apply the same quirk_disable_rtl_aspm() for all PCI IDs
of PCI bridge on SKL/KBL.
https://phabricator.endlessm.com/T18753
Signed-off-by: Chris Chiu chiu@endlessm.com","Realtek cards on Skylake/Kabylake systems cause a huge amount of PCIe
AER error spam. Apply the same quirk_disable_rtl_aspm() for all PCI IDs
of PCI bridge on SKL/KBL.
https://phabricator.endlessm.com/T18753
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,286,2017-08-11T11:29:11Z,,2022-04-12T21:36:12Z,OPEN,False,1762882,105910,3852,https://github.com/mschiu77,T16988 - Force ath9k to use MSI for NFA335 module on Acer Apollolake laptops,1497,[],https://github.com/endlessm/linux/pull/286,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/286,"Lots of Acer Apollolake laptops has been reported fail connecting
wifi with NFA335 (QCA9565) modules. There's no interrupt observed
at all on ath9k and tha's the problem. The interrupts will be
fired after switching from original INTx to PCI MSI interrupt handling
mechanism. However, ""do_IRQ: 0.xxx No irq handler for vector"" keeps
coming even switching to PCI MSI. ""xxx"" misaligned with the interrupt
vector number which system expect for ath9k.
The NFA335 almost connects to PCI bus 0 Device 13h function 03 on
Acer Apollolake laptops. This commit force MSI on QCA9565 connect
to specific PCI function and try to fix the misalignment of the
interrupt vector number for it.
https://phabricator.endlessm.com/T16988
Signed-off-by: Chris Chiu chiu@endlessm.com","Lots of Acer Apollolake laptops has been reported fail connecting
wifi with NFA335 (QCA9565) modules. There's no interrupt observed
at all on ath9k and tha's the problem. The interrupts will be
fired after switching from original INTx to PCI MSI interrupt handling
mechanism. However, ""do_IRQ: 0.xxx No irq handler for vector"" keeps
coming even switching to PCI MSI. ""xxx"" misaligned with the interrupt
vector number which system expect for ath9k.
The NFA335 almost connects to PCI bus 0 Device 13h function 03 on
Acer Apollolake laptops. This commit force MSI on QCA9565 connect
to specific PCI function and try to fix the misalignment of the
interrupt vector number for it.
https://phabricator.endlessm.com/T16988
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,287,2017-08-11T21:26:59Z,2017-08-18T01:39:27Z,2017-08-18T01:39:27Z,CLOSED,False,1762661,105896,3840,https://github.com/ramcq,b43: avoid registering for devices supported by brcmsmac,1486,[],https://github.com/endlessm/linux/pull/287,https://github.com/ramcq,1,https://github.com/endlessm/linux/pull/287,"Removed the bcma_device_id table entries which overlap with the
brcmsmac driver (see brcm80211/brcmsmac/mac80211_if.c), so that
the module loading and probing is deterministic. Also, correct
an oversight in the allhwsupport module parameter, where if both
drivers are loaded, one of the IDs that brcmsmac supports could
still have been claimed by b43.
https://phabricator.endlessm.com/T12154","Removed the bcma_device_id table entries which overlap with the
brcmsmac driver (see brcm80211/brcmsmac/mac80211_if.c), so that
the module loading and probing is deterministic. Also, correct
an oversight in the allhwsupport module parameter, where if both
drivers are loaded, one of the IDs that brcmsmac supports could
still have been claimed by b43.
https://phabricator.endlessm.com/T12154",True,{}
endlessm/linux,https://github.com/endlessm/linux,288,2017-08-15T08:00:15Z,2017-08-15T08:41:36Z,2017-08-15T08:41:38Z,MERGED,True,16,0,1,https://github.com/mschiu77,ACPI / EC: Fix media keys not working problem on some Asus laptops,1,[],https://github.com/endlessm/linux/pull/288,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/288,"More ASUS laptops have the _GPE define in the DSDT table with a
different value than the _GPE number in the ECDT.
This is causing media keys not working on ASUS X505BA/BP, X542BA/BP
Add model info to the quirks list.
https://phabricator.endlessm.com/T17976
Signed-off-by: Chris Chiu chiu@endlessm.com","More ASUS laptops have the _GPE define in the DSDT table with a
different value than the _GPE number in the ECDT.
This is causing media keys not working on ASUS X505BA/BP, X542BA/BP
Add model info to the quirks list.
https://phabricator.endlessm.com/T17976
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,289,2017-08-16T05:21:11Z,2017-08-16T13:52:51Z,2017-08-16T13:52:54Z,MERGED,True,49,0,1,https://github.com/mschiu77,"ACPI / gpio: fix touchpad stop working issue on ASUS X505BA/BP, X542B…",1,[],https://github.com/endlessm/linux/pull/289,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/289,"…A/BP
ASUS X505BA/BP, X542BA/BP are laptops of AMD platform. The interrupt
of touchpad on these are connected via GPIO as following DSDT:
Name (CID, ""PNP0C50"" /* HID Protocol Device (I2C bus) /)  // _CID: Compatible ID
Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
{
Name (RBUF, ResourceTemplate ()
{
I2cSerialBus (0x0015, ControllerInitiated, 0x00061A80,
AddressingMode7Bit, ""\_SB.I2CD"",
0x00, ResourceConsumer, ,
)
GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
""\_SB.GPIO"", 0x00, ResourceConsumer, ,
)
{   // Pin list
0x0056
}
})
Return (RBUF) / _SB.I2CD.ETPD._CRS.RBUF */
}
The interrupt trigger type declared for the GPIO is low level active
which is not working properly. It needs to be falling edge active.
This commit gives a DMI quirk to override the GpioInt to be falling
edge triggering for X505BA/BA and X542BA/BP.
https://phabricator.endlessm.com/T17977
Signed-off-by: Chris Chiu chiu@endlessm.com","…A/BP
ASUS X505BA/BP, X542BA/BP are laptops of AMD platform. The interrupt
of touchpad on these are connected via GPIO as following DSDT:
Name (CID, ""PNP0C50"" /* HID Protocol Device (I2C bus) /)  // _CID: Compatible ID
Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
{
Name (RBUF, ResourceTemplate ()
{
I2cSerialBus (0x0015, ControllerInitiated, 0x00061A80,
AddressingMode7Bit, ""\_SB.I2CD"",
0x00, ResourceConsumer, ,
)
GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
""\_SB.GPIO"", 0x00, ResourceConsumer, ,
)
{   // Pin list
0x0056
}
})
Return (RBUF) / _SB.I2CD.ETPD._CRS.RBUF */
}
The interrupt trigger type declared for the GPIO is low level active
which is not working properly. It needs to be falling edge active.
This commit gives a DMI quirk to override the GpioInt to be falling
edge triggering for X505BA/BA and X542BA/BP.
https://phabricator.endlessm.com/T17977
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,290,2017-08-16T06:53:38Z,2017-08-16T13:48:54Z,2017-08-16T13:48:56Z,CLOSED,False,13,0,3,https://github.com/mschiu77,USB: Add device quirk for Huawei LTE module on Acer laptop,1,[],https://github.com/endlessm/linux/pull/290,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/290,"System will expectedly wakeup 3~4 seconds after suspend with this
device connected. It supports remote wakeup but been verified
disabled before usb port suspend. The only way to prevent this
is to unbind the port before system suspend.
This patch tries to introduce USB_QUIRK_DISCONNECT_SUSPEND quirk.
With this quirk set, the port connect to specific devices will
be disabled instead of suspend.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T18675","System will expectedly wakeup 3~4 seconds after suspend with this
device connected. It supports remote wakeup but been verified
disabled before usb port suspend. The only way to prevent this
is to unbind the port before system suspend.
This patch tries to introduce USB_QUIRK_DISCONNECT_SUSPEND quirk.
With this quirk set, the port connect to specific devices will
be disabled instead of suspend.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T18675",True,{}
endlessm/linux,https://github.com/endlessm/linux,290,2017-08-16T06:53:38Z,2017-08-16T13:48:54Z,2017-08-16T13:48:56Z,CLOSED,False,13,0,3,https://github.com/mschiu77,USB: Add device quirk for Huawei LTE module on Acer laptop,1,[],https://github.com/endlessm/linux/pull/290,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/290#issuecomment-322776771,"System will expectedly wakeup 3~4 seconds after suspend with this
device connected. It supports remote wakeup but been verified
disabled before usb port suspend. The only way to prevent this
is to unbind the port before system suspend.
This patch tries to introduce USB_QUIRK_DISCONNECT_SUSPEND quirk.
With this quirk set, the port connect to specific devices will
be disabled instead of suspend.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T18675",pushed as:     USB: Force disconnect Huawei 4G modem during suspend,True,{}
endlessm/linux,https://github.com/endlessm/linux,291,2017-08-23T15:37:46Z,2017-08-28T04:55:26Z,2017-08-28T04:55:28Z,MERGED,True,12,11,2,https://github.com/mschiu77,drm/nouveau/kms: pdate vblank state in response to modeset actions and remove call to  drm_crtc_vblank_off() during unload/suspend.,2,[],https://github.com/endlessm/linux/pull/291,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/291,"update vblank state in response to modeset actions and remove call to
drm_crtc_vblank_off() during unload/suspend. These on()/off() calls should
be done as a result of modesetting actions, and as we shut down all heads
already on unload/suspend, it's pointless to call off() again.","update vblank state in response to modeset actions and remove call to
drm_crtc_vblank_off() during unload/suspend. These on()/off() calls should
be done as a result of modesetting actions, and as we shut down all heads
already on unload/suspend, it's pointless to call off() again.",True,{}
endlessm/linux,https://github.com/endlessm/linux,292,2017-08-24T09:32:51Z,2017-08-28T03:11:23Z,2017-08-31T22:05:02Z,MERGED,True,7,0,1,https://github.com/mschiu77,Disable nouveau on the Acer Aspire Z20-780,1,[],https://github.com/endlessm/linux/pull/292,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/292,"The Acer Aspire Z20-730 has two video cards (Intel+NVIDIA), the NVIDIA
(GM108) will sometimes hit kernel panic during boot and always fail to
resume from suspend.
Disable it for now, and revisit later for a proper fix, as some future
machines might depend on it.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T18739","The Acer Aspire Z20-730 has two video cards (Intel+NVIDIA), the NVIDIA
(GM108) will sometimes hit kernel panic during boot and always fail to
resume from suspend.
Disable it for now, and revisit later for a proper fix, as some future
machines might depend on it.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T18739",True,{}
endlessm/linux,https://github.com/endlessm/linux,293,2017-08-28T05:38:01Z,2017-08-28T06:58:46Z,2017-08-28T06:58:49Z,CLOSED,False,590621,0,560,https://github.com/mschiu77,T18646 - add Realtek wifi RTL8821CE support,3,[],https://github.com/endlessm/linux/pull/293,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/293,From Realtek official driver RTL8821CE_WiFi_linux_v5.2.5_23431_COEX20170310-1212.20170825,From Realtek official driver RTL8821CE_WiFi_linux_v5.2.5_23431_COEX20170310-1212.20170825,True,{}
endlessm/linux,https://github.com/endlessm/linux,293,2017-08-28T05:38:01Z,2017-08-28T06:58:46Z,2017-08-28T06:58:49Z,CLOSED,False,590621,0,560,https://github.com/mschiu77,T18646 - add Realtek wifi RTL8821CE support,3,[],https://github.com/endlessm/linux/pull/293,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/293#issuecomment-325275430,From Realtek official driver RTL8821CE_WiFi_linux_v5.2.5_23431_COEX20170310-1212.20170825,pushed and enabled in config,True,{}
endlessm/linux,https://github.com/endlessm/linux,294,2017-08-30T11:00:26Z,2017-09-05T03:01:52Z,2017-09-05T03:01:54Z,MERGED,True,4,0,3,https://github.com/mschiu77,HID: asus: support Republic of Gamers special keys for ASUS GL503VM,1,[],https://github.com/endlessm/linux/pull/294,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/294,"Add support for the special keys found on another ASUS ROG laptop
GL503VM.
https://phabricator.endlessm.com/T18649
Signed-off-by: Chris Chiu chiu@endlessm.com","Add support for the special keys found on another ASUS ROG laptop
GL503VM.
https://phabricator.endlessm.com/T18649
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,295,2017-08-30T11:14:11Z,2017-09-11T06:21:35Z,2017-09-11T06:21:37Z,MERGED,True,14,0,1,https://github.com/mschiu77,ALSA: hda/realtek - Add support for ASUS GL503VM headset mic,1,[],https://github.com/endlessm/linux/pull/295,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/295,"The ASUS laptop GL503VM with ALC295 can't detect the headset
microphone until we modify a pin definition.
https://phabricator.endlessm.com/T18650
Signed-off-by: Chris Chiu chiu@endlessm.com","The ASUS laptop GL503VM with ALC295 can't detect the headset
microphone until we modify a pin definition.
https://phabricator.endlessm.com/T18650
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,296,2017-09-05T09:56:50Z,2017-09-06T00:48:10Z,2017-09-06T00:48:12Z,MERGED,True,2,3,2,https://github.com/wjt,config: enable DRM_BOCHS,1,[],https://github.com/endlessm/linux/pull/296,https://github.com/wjt,1,https://github.com/endlessm/linux/pull/296,"This is the default VGA card emulated by qemu. Without this, the
Plymouth boot splash does not display.
The Ubuntu issue which led to this being disabled --
https://bugs.launchpad.net/ubuntu/+source/kmod/+bug/1378648 --
seems to be ppc64el-specific, so not relevant to us.
https://phabricator.endlessm.com/T19074","This is the default VGA card emulated by qemu. Without this, the
Plymouth boot splash does not display.
The Ubuntu issue which led to this being disabled --
https://bugs.launchpad.net/ubuntu/+source/kmod/+bug/1378648 --
seems to be ppc64el-specific, so not relevant to us.
https://phabricator.endlessm.com/T19074",True,{}
endlessm/linux,https://github.com/endlessm/linux,297,2017-09-07T10:04:39Z,2017-09-07T10:05:53Z,2017-09-07T10:06:01Z,MERGED,True,2,26,2,https://github.com/carlocaione,config: Disable CONFIG_INTEL_ATOMISP,1,[],https://github.com/endlessm/linux/pull/297,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/297,https://phabricator.endlessm.com/T18502,https://phabricator.endlessm.com/T18502,True,{}
endlessm/linux,https://github.com/endlessm/linux,298,2017-09-08T07:38:54Z,2017-09-11T04:59:47Z,2017-09-11T04:59:47Z,CLOSED,False,14,1,1,https://github.com/mschiu77,HID: i2c: restore interrupt trigger type in resume,1,[],https://github.com/endlessm/linux/pull/298,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/298,"ASUS X542BA/BP is AMD platform and the touchpad interrupt pin is
connected via AMD GPIO. The error message ""failed to reset device""
always happens after system resume so that the touchpad not works
anymore. Per the signal analysis, it does ack the i2c hid reset
command and notify by interrupt pin. However, driver does nothing
because the irq handler not even invoked.
It's because the register value of the GPIO which connects touchpad
interrupt has been reset and not restored after resume. Then driver
doesn't know the touchpad reset is done. The GPIO driver in this
case is pinctrl_amd but there's no suspend/resume to deal with it.
It's confirmed that touchpad connected via intel gpio works fine.
Although real solution here supposed to be adding suspend/resume in
amd pinctrl but restoring interrupt type in resume is still good to
have if there may be other GPIO drivers which has no suspend/resume
or not dealing with the restore properly.
https://phabricator.endlessm.com/T18846
Signed-off-by: Chris Chiu chiu@endlessm.com","ASUS X542BA/BP is AMD platform and the touchpad interrupt pin is
connected via AMD GPIO. The error message ""failed to reset device""
always happens after system resume so that the touchpad not works
anymore. Per the signal analysis, it does ack the i2c hid reset
command and notify by interrupt pin. However, driver does nothing
because the irq handler not even invoked.
It's because the register value of the GPIO which connects touchpad
interrupt has been reset and not restored after resume. Then driver
doesn't know the touchpad reset is done. The GPIO driver in this
case is pinctrl_amd but there's no suspend/resume to deal with it.
It's confirmed that touchpad connected via intel gpio works fine.
Although real solution here supposed to be adding suspend/resume in
amd pinctrl but restoring interrupt type in resume is still good to
have if there may be other GPIO drivers which has no suspend/resume
or not dealing with the restore properly.
https://phabricator.endlessm.com/T18846
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,299,2017-09-08T07:40:57Z,2017-09-11T02:00:10Z,2017-09-11T02:00:14Z,MERGED,True,22,20,3,https://github.com/mschiu77,T17976 - port ec related fix from upstream ,2,[],https://github.com/endlessm/linux/pull/299,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/299,"To make media keys work on ASUS X505BA/BP, X542BA/BA, need 2 commits from upstream.","To make media keys work on ASUS X505BA/BP, X542BA/BA, need 2 commits from upstream.",True,{}
endlessm/linux,https://github.com/endlessm/linux,300,2017-09-11T05:02:34Z,,2022-04-12T21:36:12Z,OPEN,False,2222739,101343,3713,https://github.com/mschiu77,The touchpad in the Asus laptop models X505BA/BP and X542BA/BP is,954,[],https://github.com/endlessm/linux/pull/300,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/300,"unresponsive after suspend/resume. The following error appears during
resume:
i2c_hid i2c-ELAN1300:00: failed to reset device.
The problem here is that i2c_hid does not notice the interrupt being
generated at this point, because the GPIO is no longer configured
for interrupts.
Fix this by saving pinctrl-amd pin registers during suspend and
restoring them at resume time.
Based on code from pinctrl-intel.
Signed-off-by: Daniel Drake drake@endlessm.com
Signed-off-by: Chris Chiu chiu@endlessm.com","unresponsive after suspend/resume. The following error appears during
resume:
i2c_hid i2c-ELAN1300:00: failed to reset device.
The problem here is that i2c_hid does not notice the interrupt being
generated at this point, because the GPIO is no longer configured
for interrupts.
Fix this by saving pinctrl-amd pin registers during suspend and
restoring them at resume time.
Based on code from pinctrl-intel.
Signed-off-by: Daniel Drake drake@endlessm.com
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,301,2017-09-19T13:33:44Z,2017-09-19T15:58:25Z,2017-09-19T15:58:26Z,CLOSED,False,43,37,1,https://github.com/ramcq,Bluetooth: Properly check L2CAP config option output buffer length,1,[],https://github.com/endlessm/linux/pull/301,https://github.com/ramcq,1,https://github.com/endlessm/linux/pull/301,"commit e860d2c upstream.
Validate the output buffer length for L2CAP config requests and responses
to avoid overflowing the stack buffer used for building the option blocks.
Cc: stable@vger.kernel.org
Signed-off-by: Ben Seri ben@armis.com
Signed-off-by: Marcel Holtmann marcel@holtmann.org
Signed-off-by: Linus Torvalds torvalds@linux-foundation.org
https://phabricator.endlessm.com/T19288","commit e860d2c upstream.
Validate the output buffer length for L2CAP config requests and responses
to avoid overflowing the stack buffer used for building the option blocks.
Cc: stable@vger.kernel.org
Signed-off-by: Ben Seri ben@armis.com
Signed-off-by: Marcel Holtmann marcel@holtmann.org
Signed-off-by: Linus Torvalds torvalds@linux-foundation.org
https://phabricator.endlessm.com/T19288",True,{}
endlessm/linux,https://github.com/endlessm/linux,301,2017-09-19T13:33:44Z,2017-09-19T15:58:25Z,2017-09-19T15:58:26Z,CLOSED,False,43,37,1,https://github.com/ramcq,Bluetooth: Properly check L2CAP config option output buffer length,1,[],https://github.com/endlessm/linux/pull/301,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/301#issuecomment-330586617,"commit e860d2c upstream.
Validate the output buffer length for L2CAP config requests and responses
to avoid overflowing the stack buffer used for building the option blocks.
Cc: stable@vger.kernel.org
Signed-off-by: Ben Seri ben@armis.com
Signed-off-by: Marcel Holtmann marcel@holtmann.org
Signed-off-by: Linus Torvalds torvalds@linux-foundation.org
https://phabricator.endlessm.com/T19288",Manually pushed keeping the original commit author.,True,{}
endlessm/linux,https://github.com/endlessm/linux,302,2017-09-20T12:45:54Z,2017-09-20T23:44:19Z,2017-09-20T23:44:21Z,MERGED,True,20,0,1,https://github.com/mschiu77,sound/hda: Remove line out and fixup headset-mic on Acer TravelMate P648,1,[],https://github.com/endlessm/linux/pull/302,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/302,"A line out port given by BIOS doesn't have physical jack and the value
of 0x18 pin is also incorrect. Overriding with the correct values to
disable the line out pin and adds support for the headset microphone
which would not otherwise be visible in the system.
https://phabricator.endlessm.com/T18847
Signed-off-by: Chris Chiu chiu@endlessm.com","A line out port given by BIOS doesn't have physical jack and the value
of 0x18 pin is also incorrect. Overriding with the correct values to
disable the line out pin and adds support for the headset microphone
which would not otherwise be visible in the system.
https://phabricator.endlessm.com/T18847
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,303,2017-09-21T04:34:06Z,2017-09-22T15:09:41Z,2017-09-27T01:15:35Z,CLOSED,False,9,0,1,https://github.com/mschiu77,HID: usbhid: wake up system from usb mouse,1,[],https://github.com/endlessm/linux/pull/303,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/303,"It's been requested to wake up system from usb mouse also because
Windows also supports this. This commit follows the same way which
works on usb keyboard.
https://phabricator.endlessm.com/T19106
Signed-off-by: Chris Chiu chiu@endlessm.com","It's been requested to wake up system from usb mouse also because
Windows also supports this. This commit follows the same way which
works on usb keyboard.
https://phabricator.endlessm.com/T19106
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,303,2017-09-21T04:34:06Z,2017-09-22T15:09:41Z,2017-09-27T01:15:35Z,CLOSED,False,9,0,1,https://github.com/mschiu77,HID: usbhid: wake up system from usb mouse,1,[],https://github.com/endlessm/linux/pull/303,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/303#issuecomment-331181588,"It's been requested to wake up system from usb mouse also because
Windows also supports this. This commit follows the same way which
works on usb keyboard.
https://phabricator.endlessm.com/T19106
Signed-off-by: Chris Chiu chiu@endlessm.com","The changes look good, but I suggest you improve the commit message a bit explaining what the changes actually do. Something like saying that this is enabling remote wakeup by default for all mice supporting the boot protocol.",True,{}
endlessm/linux,https://github.com/endlessm/linux,303,2017-09-21T04:34:06Z,2017-09-22T15:09:41Z,2017-09-27T01:15:35Z,CLOSED,False,9,0,1,https://github.com/mschiu77,HID: usbhid: wake up system from usb mouse,1,[],https://github.com/endlessm/linux/pull/303,https://github.com/mschiu77,3,https://github.com/endlessm/linux/pull/303#issuecomment-331348287,"It's been requested to wake up system from usb mouse also because
Windows also supports this. This commit follows the same way which
works on usb keyboard.
https://phabricator.endlessm.com/T19106
Signed-off-by: Chris Chiu chiu@endlessm.com",Got it. I've modified per your suggestion.,True,{}
endlessm/linux,https://github.com/endlessm/linux,303,2017-09-21T04:34:06Z,2017-09-22T15:09:41Z,2017-09-27T01:15:35Z,CLOSED,False,9,0,1,https://github.com/mschiu77,HID: usbhid: wake up system from usb mouse,1,[],https://github.com/endlessm/linux/pull/303,https://github.com/jprvita,4,https://github.com/endlessm/linux/pull/303#issuecomment-331474366,"It's been requested to wake up system from usb mouse also because
Windows also supports this. This commit follows the same way which
works on usb keyboard.
https://phabricator.endlessm.com/T19106
Signed-off-by: Chris Chiu chiu@endlessm.com","Closing this -- as discussed on the issue, this would be better solved through a udev rule.",True,{}
endlessm/linux,https://github.com/endlessm/linux,304,2017-09-21T07:44:39Z,,2022-04-12T21:36:12Z,OPEN,False,2222558,97508,3310,https://github.com/mschiu77,"T18827- remove dmi quirk for X505BP/BA, X542BP/BA and fix amd-gpio interrupt issue",457,[],https://github.com/endlessm/linux/pull/304,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/304,"The touchpad in the Asus laptop models X505BA/BP and X542BA/BP connect
the interrupt pin via AMD GPIO. However, toucpad will always stop
working after few minutes becasue the i2c hid interrupt routine not
invoked anymore. When it happens, it's observed from oscillopscope that
the signal level of the interrupt pin is still low. Since the i2c-hid
is low level triggered, the interrupt should still keep firing.
AMD pinctrl needs to be notified EOI for each interrupt. But there's
no around irq unmask. Thus it's worthy to modify the flags to make sure
the EOI is toggled while invoking unmask_threaded_irq(). After
IRQCHIP_EOI_THREADED enbled in the amd_irq_gpiochip, the interrupt will
never stops while the touchpad interrupt pin signal level still low.","The touchpad in the Asus laptop models X505BA/BP and X542BA/BP connect
the interrupt pin via AMD GPIO. However, toucpad will always stop
working after few minutes becasue the i2c hid interrupt routine not
invoked anymore. When it happens, it's observed from oscillopscope that
the signal level of the interrupt pin is still low. Since the i2c-hid
is low level triggered, the interrupt should still keep firing.
AMD pinctrl needs to be notified EOI for each interrupt. But there's
no around irq unmask. Thus it's worthy to modify the flags to make sure
the EOI is toggled while invoking unmask_threaded_irq(). After
IRQCHIP_EOI_THREADED enbled in the amd_irq_gpiochip, the interrupt will
never stops while the touchpad interrupt pin signal level still low.",True,{}
endlessm/linux,https://github.com/endlessm/linux,305,2017-09-26T09:05:11Z,2017-10-18T06:56:05Z,2017-10-18T06:56:14Z,MERGED,True,1,0,1,https://github.com/carlocaione,net: rfkill: gpio: Add OBDA8723 ACPI HID,1,[],https://github.com/endlessm/linux/pull/305,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/305,https://phabricator.endlessm.com/T19284,https://phabricator.endlessm.com/T19284,True,{}
endlessm/linux,https://github.com/endlessm/linux,306,2017-09-28T07:11:30Z,2017-10-02T02:46:20Z,2017-10-02T02:46:23Z,CLOSED,False,7,4,3,https://github.com/mschiu77,HID: primax: add one more buggy device for input mapping,1,[],https://github.com/endlessm/linux/pull/306,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/306,"Another Primax wireless keyboard ship with Acer Desktop/AIO reports
each keystroke with LED hid usage which supposed to be keyboard hid
usage.
https://phabricator.endlessm.com/T19434
Signed-off-by: Chris Chiu chiu@endlessm.com","Another Primax wireless keyboard ship with Acer Desktop/AIO reports
each keystroke with LED hid usage which supposed to be keyboard hid
usage.
https://phabricator.endlessm.com/T19434
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,306,2017-09-28T07:11:30Z,2017-10-02T02:46:20Z,2017-10-02T02:46:23Z,CLOSED,False,7,4,3,https://github.com/mschiu77,HID: primax: add one more buggy device for input mapping,1,[],https://github.com/endlessm/linux/pull/306,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/306#issuecomment-333429487,"Another Primax wireless keyboard ship with Acer Desktop/AIO reports
each keystroke with LED hid usage which supposed to be keyboard hid
usage.
https://phabricator.endlessm.com/T19434
Signed-off-by: Chris Chiu chiu@endlessm.com",tweaked commit message and pushed,True,{}
endlessm/linux,https://github.com/endlessm/linux,307,2017-10-02T03:55:52Z,2017-10-02T06:49:07Z,2017-10-02T06:49:34Z,MERGED,True,9,50,2,https://github.com/dsd, pinctrl-amd: fix masking of GPIO interrupts ,2,[],https://github.com/endlessm/linux/pull/307,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/307,https://phabricator.endlessm.com/T17977,https://phabricator.endlessm.com/T17977,True,{}
endlessm/linux,https://github.com/endlessm/linux,308,2017-10-04T16:25:19Z,2017-10-04T16:29:03Z,2017-10-04T16:29:03Z,MERGED,True,1,0,1,https://github.com/mschiu77,ALSA/hda: apply automute fixup for the Acer Veriton N4640G desktop,1,[],https://github.com/endlessm/linux/pull/308,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/308,"This Acer Veriton N4640G desktop have 2 audio jacks which expected
to be headphone jacks. However, the rear audio jack is actually a
line out jack. The front headphone jack work as expected, but no
audio output from the rear audio jack when we plug in the headphone.
To have both the audio jacks working, we need the known fixup
ALC269VC_FIXUP_NL3_AUTOMUTE.
https://phabricator.endlessm.com/T19023
Signed-off-by: Chris Chiu chiu@endlessm.com","This Acer Veriton N4640G desktop have 2 audio jacks which expected
to be headphone jacks. However, the rear audio jack is actually a
line out jack. The front headphone jack work as expected, but no
audio output from the rear audio jack when we plug in the headphone.
To have both the audio jacks working, we need the known fixup
ALC269VC_FIXUP_NL3_AUTOMUTE.
https://phabricator.endlessm.com/T19023
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,309,2017-10-05T10:55:04Z,2017-10-11T04:59:11Z,2017-10-11T04:59:14Z,MERGED,True,33,1,1,https://github.com/mschiu77,r8169: Force disable Wakeup-On-Lan on particular Acer laptops,1,[],https://github.com/endlessm/linux/pull/309,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/309,"When suspending the Acer Aspire ES1-732 laptop, it always wakes up 3-4
seconds later for no good reason.
After inspection, it's caused by the enabled WOL feature even without
ethernet cable connected. Suspend/resume would work as expected after
disabling WOL. This commit intruduce a DMI quirk which disable the WOL
for affected models until we find better solution.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T16236","When suspending the Acer Aspire ES1-732 laptop, it always wakes up 3-4
seconds later for no good reason.
After inspection, it's caused by the enabled WOL feature even without
ethernet cable connected. Suspend/resume would work as expected after
disabling WOL. This commit intruduce a DMI quirk which disable the WOL
for affected models until we find better solution.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T16236",True,{}
endlessm/linux,https://github.com/endlessm/linux,310,2017-10-13T04:25:05Z,2017-10-13T05:53:06Z,2017-10-13T05:54:00Z,MERGED,True,28,14,3,https://github.com/dsd,mac80211: fix deadlock in driver-managed RX BA session start,1,[],https://github.com/endlessm/linux/pull/310,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/310,"BugLink: http://bugs.launchpad.net/bugs/1721777
commit bde59c4 upstream.
When an RX BA session is started by the driver, and it has to tell
mac80211 about it, the corresponding bit in tid_rx_manage_offl gets
set and the BA session work is scheduled. Upon testing this bit, it
will call __ieee80211_start_rx_ba_session(), thus deadlocking as it
already holds the ampdu_mlme.mtx, which that acquires again.
Fix this by adding ___ieee80211_start_rx_ba_session(), a version of
the function that requires the mutex already held.
Fixes: 699cb58 (""mac80211: manage RX BA session offload without SKB queue"")
Reported-by: Matteo Croce mcroce@redhat.com
Signed-off-by: Johannes Berg johannes.berg@intel.com
Signed-off-by: Greg Kroah-Hartman gregkh@linuxfoundation.org
Signed-off-by: Seth Forshee seth.forshee@canonical.com
https://phabricator.endlessm.com/T19637","BugLink: http://bugs.launchpad.net/bugs/1721777
commit bde59c4 upstream.
When an RX BA session is started by the driver, and it has to tell
mac80211 about it, the corresponding bit in tid_rx_manage_offl gets
set and the BA session work is scheduled. Upon testing this bit, it
will call __ieee80211_start_rx_ba_session(), thus deadlocking as it
already holds the ampdu_mlme.mtx, which that acquires again.
Fix this by adding ___ieee80211_start_rx_ba_session(), a version of
the function that requires the mutex already held.
Fixes: 699cb58 (""mac80211: manage RX BA session offload without SKB queue"")
Reported-by: Matteo Croce mcroce@redhat.com
Signed-off-by: Johannes Berg johannes.berg@intel.com
Signed-off-by: Greg Kroah-Hartman gregkh@linuxfoundation.org
Signed-off-by: Seth Forshee seth.forshee@canonical.com
https://phabricator.endlessm.com/T19637",True,{}
endlessm/linux,https://github.com/endlessm/linux,311,2017-10-16T09:45:47Z,2017-10-17T03:03:40Z,2017-10-17T03:03:42Z,MERGED,True,2,0,1,https://github.com/mschiu77,ALSA: hda/realtek - Add support for more Acer Aspire headset mic,1,[],https://github.com/endlessm/linux/pull/311,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/311,"The Acer laptop Aspire E5-523G and ES1-432 with ALC255 can't detect
the headset microphone until ALC255_FIXUP_ACER_MIC_NO_PRESENCE quirk
applied.
https://phabricator.endlessm.com/T19635
https://phabricator.endlessm.com/T19639
Signed-off-by: Chris Chiu chiu@endlessm.com","The Acer laptop Aspire E5-523G and ES1-432 with ALC255 can't detect
the headset microphone until ALC255_FIXUP_ACER_MIC_NO_PRESENCE quirk
applied.
https://phabricator.endlessm.com/T19635
https://phabricator.endlessm.com/T19639
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,312,2017-10-16T13:18:27Z,2020-09-18T13:30:32Z,2020-09-18T18:29:00Z,CLOSED,False,2224929,98667,3421,https://github.com/carlocaione,ASoC: rt5651: Enable micbias1 widget,576,[],https://github.com/endlessm/linux/pull/312,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/312,https://phabricator.endlessm.com/T19570,https://phabricator.endlessm.com/T19570,True,{}
endlessm/linux,https://github.com/endlessm/linux,312,2017-10-16T13:18:27Z,2020-09-18T13:30:32Z,2020-09-18T18:29:00Z,CLOSED,False,2224929,98667,3421,https://github.com/carlocaione,ASoC: rt5651: Enable micbias1 widget,576,[],https://github.com/endlessm/linux/pull/312,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/312#issuecomment-337103905,https://phabricator.endlessm.com/T19570,What's the relevance of changing MICBIAS to SUPPLY? Can you send this straight upstream?,True,{}
endlessm/linux,https://github.com/endlessm/linux,312,2017-10-16T13:18:27Z,2020-09-18T13:30:32Z,2020-09-18T18:29:00Z,CLOSED,False,2224929,98667,3421,https://github.com/carlocaione,ASoC: rt5651: Enable micbias1 widget,576,[],https://github.com/endlessm/linux/pull/312,https://github.com/carlocaione,3,https://github.com/endlessm/linux/pull/312#issuecomment-337272934,https://phabricator.endlessm.com/T19570,"MICBIAS is deprecated https://lkml.org/lkml/2016/5/12/404
Yeah, I can send it upstream. I was waiting to have something working for the jack detection but probably it's fine enough anyway.",True,{}
endlessm/linux,https://github.com/endlessm/linux,313,2017-10-18T10:01:16Z,2017-10-19T09:29:10Z,2017-10-19T09:29:12Z,MERGED,True,1,1,1,https://github.com/mschiu77,ALSA/hda: apply jack fixup for the Acer Veriton N4640G desktop,1,[],https://github.com/endlessm/linux/pull/313,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/313,"This Acer Veriton N4640G desktop have 2 audio jacks which expected
to be headphone jacks and another audio jack marked as ""Mic In"".
However, the rear audio headphone jack is actually a line out jack
but alaway silence. The front ""Mic In"" jack also not works as
expected due to the input volume is always zero and not adjustable.
The change to set the front headphone jack to a 'Dock Headphone Jack'
can get the input volume adjustable and PA is able to recognize the
rear line out jack as a different jack. ALC269VC_FIXUP_NL3_SECOND_JACK
helps here to get all audio jacks working.
https://phabricator.endlessm.com/T19023
Signed-off-by: Chris Chiu chiu@endlessm.com","This Acer Veriton N4640G desktop have 2 audio jacks which expected
to be headphone jacks and another audio jack marked as ""Mic In"".
However, the rear audio headphone jack is actually a line out jack
but alaway silence. The front ""Mic In"" jack also not works as
expected due to the input volume is always zero and not adjustable.
The change to set the front headphone jack to a 'Dock Headphone Jack'
can get the input volume adjustable and PA is able to recognize the
rear line out jack as a different jack. ALC269VC_FIXUP_NL3_SECOND_JACK
helps here to get all audio jacks working.
https://phabricator.endlessm.com/T19023
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,314,2017-10-19T02:38:30Z,2017-10-24T07:07:41Z,2017-10-24T07:07:44Z,MERGED,True,1,0,1,https://github.com/mschiu77,ALSA: hda/realtek - Add support for Acer Aspire C24-860 headset mic,1,[],https://github.com/endlessm/linux/pull/314,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/314,"The ASUS AIO Aspire C24-860 with ALC269 can't detect the headset
microphone. Just like another Acer AIO U27-880, it needs a different
pin value for 0x18 and the headset fixup to make headset mic work.
https://phabricator.endlessm.com/T19649
Signed-off-by: Chris Chiu chiu@endlessm.com","The ASUS AIO Aspire C24-860 with ALC269 can't detect the headset
microphone. Just like another Acer AIO U27-880, it needs a different
pin value for 0x18 and the headset fixup to make headset mic work.
https://phabricator.endlessm.com/T19649
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,315,2017-10-25T18:30:42Z,2017-10-25T18:42:20Z,2017-10-25T18:42:20Z,CLOSED,False,0,7,1,https://github.com/jprvita,"Partially revert ""Disable nouveau on the Asus N552VW""",1,[],https://github.com/endlessm/linux/pull/315,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/315,"This partially reverts commit 46a4ac0,
only removing the Asus N552VW entry from the nouveau_modeset_0 array,
but keeping the quirk around for other platforms.
https://phabricator.endlessm.com/T11193","This partially reverts commit 46a4ac0,
only removing the Asus N552VW entry from the nouveau_modeset_0 array,
but keeping the quirk around for other platforms.
https://phabricator.endlessm.com/T11193",True,{}
endlessm/linux,https://github.com/endlessm/linux,316,2017-10-26T03:19:11Z,2017-10-26T07:38:57Z,2017-10-26T07:39:01Z,MERGED,True,8,0,1,https://github.com/mschiu77,ALSA: hda - Fix mic issues on Acer Aspire E5-575T,1,[],https://github.com/endlessm/linux/pull/316,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/316,"The Acer Apire E5-575T laptop with codec ALC255 has headset detect
problem and sound recording via internal mic suffers from terrible
background noise.
This patch allows the headset microphone to be used and limits the
gain on the (quite noisy) internal microphone.
https://phabricator.endlessm.com/T19640
Signed-off-by: Chris Chiu chiu@endlessm.com","The Acer Apire E5-575T laptop with codec ALC255 has headset detect
problem and sound recording via internal mic suffers from terrible
background noise.
This patch allows the headset microphone to be used and limits the
gain on the (quite noisy) internal microphone.
https://phabricator.endlessm.com/T19640
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,317,2017-10-31T03:10:11Z,2017-11-07T09:44:20Z,2017-11-07T09:44:22Z,MERGED,True,1,0,1,https://github.com/mschiu77,ALSA/hda: apply jack fixup for the Acer Veriton N6640G desktop,1,[],https://github.com/endlessm/linux/pull/317,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/317,"This Acer Veriton N6640G desktop has the same audio configuration
with N4640G. Thus the same fixup ALC269VC_FIXUP_NL3_SECOND_JACK
can be applied to get the rear line out port and mic in port back to work.
https://phabricator.endlessm.com/T19770
Signed-off-by: Chris Chiu chiu@endlessm.com","This Acer Veriton N6640G desktop has the same audio configuration
with N4640G. Thus the same fixup ALC269VC_FIXUP_NL3_SECOND_JACK
can be applied to get the rear line out port and mic in port back to work.
https://phabricator.endlessm.com/T19770
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,318,2017-11-02T13:20:52Z,2017-11-03T08:44:50Z,2017-11-03T08:44:54Z,MERGED,True,16,6,3,https://github.com/mschiu77,HID: primax: avoid compromising input report data on Acer MORFHPUO,1,[],https://github.com/endlessm/linux/pull/318,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/318,"This Primax wireless mouse is actually part of the wireless keyboard
mouse kit with the wireless keyboard Acer KBRF96211. They are the
same USB DEVICE ID so px_raw_event() will be invoked to quirk the
input data for both keyboard/mouse. The original px_raw_event() is
specific for keyboard and the report id from the mouse is also 0 so
the unexpected quirked input data will sometimes cause unexpected
click events and coordinate moves.
This commit renames the USB DEVICE ID for wireless keyboard/mouse kit
in a more specific way. And leave the input data from mouse intact.
https://phabricator.endlessm.com/T19771
Signed-off-by: Chris Chiu chiu@endlessm.com","This Primax wireless mouse is actually part of the wireless keyboard
mouse kit with the wireless keyboard Acer KBRF96211. They are the
same USB DEVICE ID so px_raw_event() will be invoked to quirk the
input data for both keyboard/mouse. The original px_raw_event() is
specific for keyboard and the report id from the mouse is also 0 so
the unexpected quirked input data will sometimes cause unexpected
click events and coordinate moves.
This commit renames the USB DEVICE ID for wireless keyboard/mouse kit
in a more specific way. And leave the input data from mouse intact.
https://phabricator.endlessm.com/T19771
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,319,2017-11-07T07:57:04Z,2017-11-08T02:40:07Z,2017-11-08T02:40:10Z,MERGED,True,21,1,1,https://github.com/mschiu77,pinctrl: intel: save HOSTSW_OWN register over suspend/resume,1,[],https://github.com/endlessm/linux/pull/319,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/319,"The touchpad in the Asus laptop model X540NA is unresponsive
after suspend/resume. The following error appears during resume:
i2c_hid i2c-ELAN1200:00: failed to reset device.
The problem here is that i2c_hid does not notice the interrupt
being generated at this point. Because the GPIO which connects
to touchpad interrupt is in ACPI mode after resume and no longer
work as IRQ.
Fix this by saving HOSTSW_OWN register during suspend and restore
them at resume.
https://phabricator.endlessm.com/T19754
Signed-off-by: Chris Chiu chiu@endlessm.com","The touchpad in the Asus laptop model X540NA is unresponsive
after suspend/resume. The following error appears during resume:
i2c_hid i2c-ELAN1200:00: failed to reset device.
The problem here is that i2c_hid does not notice the interrupt
being generated at this point. Because the GPIO which connects
to touchpad interrupt is in ACPI mode after resume and no longer
work as IRQ.
Fix this by saving HOSTSW_OWN register during suspend and restore
them at resume.
https://phabricator.endlessm.com/T19754
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,320,2017-11-07T08:02:46Z,2017-11-07T08:20:01Z,2017-11-07T08:20:01Z,CLOSED,False,16,6,3,https://github.com/mschiu77,HID: primax: avoid compromising input report data on Acer MORFHPUO,1,[],https://github.com/endlessm/linux/pull/320,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/320,"This Primax wireless mouse is actually part of the wireless keyboard
mouse kit with the wireless keyboard Acer KBRF96211. They are the
same USB DEVICE ID so px_raw_event() will be invoked to quirk the
input data for both keyboard/mouse. The original px_raw_event() is
specific for keyboard and the report id from the mouse is also 0 so
the unexpected quirked input data will sometimes cause unexpected
click events and coordinate moves.
This commit renames the USB DEVICE ID for wireless keyboard/mouse kit
in a more specific way. And leave the input data from mouse intact.
https://phabricator.endlessm.com/T19771
Signed-off-by: Chris Chiu chiu@endlessm.com","This Primax wireless mouse is actually part of the wireless keyboard
mouse kit with the wireless keyboard Acer KBRF96211. They are the
same USB DEVICE ID so px_raw_event() will be invoked to quirk the
input data for both keyboard/mouse. The original px_raw_event() is
specific for keyboard and the report id from the mouse is also 0 so
the unexpected quirked input data will sometimes cause unexpected
click events and coordinate moves.
This commit renames the USB DEVICE ID for wireless keyboard/mouse kit
in a more specific way. And leave the input data from mouse intact.
https://phabricator.endlessm.com/T19771
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,321,2017-11-07T08:29:01Z,2017-11-07T08:31:23Z,2017-11-07T08:31:26Z,MERGED,True,1,1,1,https://github.com/mschiu77,HID: primax: fix compile error caused by last commit,1,[],https://github.com/endlessm/linux/pull/321,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/321,https://phabricator.endlessm.com/T19771,https://phabricator.endlessm.com/T19771,True,{}
endlessm/linux,https://github.com/endlessm/linux,322,2017-11-08T09:44:52Z,2017-11-15T18:54:19Z,2017-11-15T18:54:19Z,CLOSED,False,101,0,3,https://github.com/mschiu77,platform/x86: Add Acer Wireless Radio Control driver,1,[],https://github.com/endlessm/linux/pull/322,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/322,"New Acer laptops in 2018 will have a separate ACPI device for
notifications from the airplane mode hotkey. The device name in
the DSDT is SMKB and its ACPI _HID is 10251229.
For these models, when the airplane mode hotkey (Fn+F3) pressed,
a query 0x02 is started in the Embedded Controller, and all this
query does is a notify SMKB with the value 0x80.
    Scope (_SB.PCI0.LPCB.EC0)
    {
            (...)
            Method (_Q02, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (0x2, One)
	    Notify (SMKB, 0x80)	// Status Change
            }
    }

Based on code from asus-wireless
https://phabricator.endlessm.com/T19743
Signed-off-by: Chris Chiu chiu@endlessm.com","New Acer laptops in 2018 will have a separate ACPI device for
notifications from the airplane mode hotkey. The device name in
the DSDT is SMKB and its ACPI _HID is 10251229.
For these models, when the airplane mode hotkey (Fn+F3) pressed,
a query 0x02 is started in the Embedded Controller, and all this
query does is a notify SMKB with the value 0x80.
    Scope (_SB.PCI0.LPCB.EC0)
    {
            (...)
            Method (_Q02, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (0x2, One)
	    Notify (SMKB, 0x80)	// Status Change
            }
    }

Based on code from asus-wireless
https://phabricator.endlessm.com/T19743
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,322,2017-11-08T09:44:52Z,2017-11-15T18:54:19Z,2017-11-15T18:54:19Z,CLOSED,False,101,0,3,https://github.com/mschiu77,platform/x86: Add Acer Wireless Radio Control driver,1,[],https://github.com/endlessm/linux/pull/322,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/322#issuecomment-344691804,"New Acer laptops in 2018 will have a separate ACPI device for
notifications from the airplane mode hotkey. The device name in
the DSDT is SMKB and its ACPI _HID is 10251229.
For these models, when the airplane mode hotkey (Fn+F3) pressed,
a query 0x02 is started in the Embedded Controller, and all this
query does is a notify SMKB with the value 0x80.
    Scope (_SB.PCI0.LPCB.EC0)
    {
            (...)
            Method (_Q02, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (0x2, One)
	    Notify (SMKB, 0x80)	// Status Change
            }
    }

Based on code from asus-wireless
https://phabricator.endlessm.com/T19743
Signed-off-by: Chris Chiu chiu@endlessm.com",Superseeded by PR #324.,True,{}
endlessm/linux,https://github.com/endlessm/linux,323,2017-11-08T11:17:48Z,2017-11-09T04:24:37Z,2017-11-09T04:24:40Z,MERGED,True,517,201,15,https://github.com/carlocaione,RT5651 jack detection,13,[],https://github.com/endlessm/linux/pull/323,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/323,https://phabricator.endlessm.com/T19499,https://phabricator.endlessm.com/T19499,True,{}
endlessm/linux,https://github.com/endlessm/linux,324,2017-11-09T08:18:04Z,2017-11-15T21:49:02Z,2017-11-15T21:49:06Z,MERGED,True,103,0,5,https://github.com/mschiu77,T19743: add Acer Wireless Radio Control driver and distro config,2,[],https://github.com/endlessm/linux/pull/324,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/324,https://phabricator.endlessm.com/T19743,https://phabricator.endlessm.com/T19743,True,{}
endlessm/linux,https://github.com/endlessm/linux,325,2017-11-09T09:52:06Z,2017-11-09T10:15:41Z,2017-11-09T10:15:41Z,MERGED,True,160,153,5,https://github.com/dsd,Fix Geminilake HDMI audio,4,[],https://github.com/endlessm/linux/pull/325,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/325,https://phabricator.endlessm.com/T19831,https://phabricator.endlessm.com/T19831,True,{}
endlessm/linux,https://github.com/endlessm/linux,326,2017-11-12T16:31:03Z,2017-11-12T17:13:04Z,2017-11-12T17:13:05Z,CLOSED,False,85,1,3,https://github.com/mschiu77,pinctrl: intel: Add timer to process interrupts not handled by ISR,2,[],https://github.com/endlessm/linux/pull/326,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/326,"ASUS Laptop X540NA(APL platform) connect the touchpad interrupt pin
via intel pinctrl. However, interrupt sometimes stops for unknown
reason even the i2c-hid still have more data and pull the interrupt
pin in low level (i2c-hid is low level active). Further more, the
GPI_IS status bit is updated with on at this time, and the mask
register also has nothing wrong.
This commit introduces a timer to poll the GPI_IS and mask register.
If both interrupt mask and GPI_IS value for the GPIO IRQ pin means
there should be a interrupt triggered but actually not, then the
timer would mask the interrupt and unmask it again to process the
pending interrupt.
https://phabricator.endlessm.com/T19757","ASUS Laptop X540NA(APL platform) connect the touchpad interrupt pin
via intel pinctrl. However, interrupt sometimes stops for unknown
reason even the i2c-hid still have more data and pull the interrupt
pin in low level (i2c-hid is low level active). Further more, the
GPI_IS status bit is updated with on at this time, and the mask
register also has nothing wrong.
This commit introduces a timer to poll the GPI_IS and mask register.
If both interrupt mask and GPI_IS value for the GPIO IRQ pin means
there should be a interrupt triggered but actually not, then the
timer would mask the interrupt and unmask it again to process the
pending interrupt.
https://phabricator.endlessm.com/T19757",True,{}
endlessm/linux,https://github.com/endlessm/linux,327,2017-11-12T17:16:12Z,2017-11-13T05:40:01Z,2017-11-13T05:40:04Z,CLOSED,False,85,1,3,https://github.com/mschiu77,pinctrl: intel: Add timer to process interrupts not handled by ISR,1,[],https://github.com/endlessm/linux/pull/327,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/327,"ASUS Laptop X540NA(APL platform) connect the touchpad interrupt pin
via intel pinctrl. However, interrupt sometimes stops for unknown
reason even the i2c-hid still have more data and pull the interrupt
pin in low level (i2c-hid is low level active). Further more, the
GPI_IS status bit is updated with on at this time, and the mask
register also has nothing wrong.
This commit introduces a timer to poll the GPI_IS and mask register.
If both interrupt mask and GPI_IS value for the GPIO IRQ pin means
there should be a interrupt triggered but actually not, then the
timer would mask the interrupt and unmask it again to process the
pending interrupt.
https://phabricator.endlessm.com/T19757","ASUS Laptop X540NA(APL platform) connect the touchpad interrupt pin
via intel pinctrl. However, interrupt sometimes stops for unknown
reason even the i2c-hid still have more data and pull the interrupt
pin in low level (i2c-hid is low level active). Further more, the
GPI_IS status bit is updated with on at this time, and the mask
register also has nothing wrong.
This commit introduces a timer to poll the GPI_IS and mask register.
If both interrupt mask and GPI_IS value for the GPIO IRQ pin means
there should be a interrupt triggered but actually not, then the
timer would mask the interrupt and unmask it again to process the
pending interrupt.
https://phabricator.endlessm.com/T19757",True,{}
endlessm/linux,https://github.com/endlessm/linux,327,2017-11-12T17:16:12Z,2017-11-13T05:40:01Z,2017-11-13T05:40:04Z,CLOSED,False,85,1,3,https://github.com/mschiu77,pinctrl: intel: Add timer to process interrupts not handled by ISR,1,[],https://github.com/endlessm/linux/pull/327,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/327#issuecomment-343819455,"ASUS Laptop X540NA(APL platform) connect the touchpad interrupt pin
via intel pinctrl. However, interrupt sometimes stops for unknown
reason even the i2c-hid still have more data and pull the interrupt
pin in low level (i2c-hid is low level active). Further more, the
GPI_IS status bit is updated with on at this time, and the mask
register also has nothing wrong.
This commit introduces a timer to poll the GPI_IS and mask register.
If both interrupt mask and GPI_IS value for the GPIO IRQ pin means
there should be a interrupt triggered but actually not, then the
timer would mask the interrupt and unmask it again to process the
pending interrupt.
https://phabricator.endlessm.com/T19757",pushed revised version,True,{}
endlessm/linux,https://github.com/endlessm/linux,328,2017-11-16T03:45:23Z,2017-11-17T08:44:40Z,2017-11-17T08:44:42Z,CLOSED,False,1,1,1,https://github.com/mschiu77,HID: asus: support backlight on USB keyboards of GL753VD/VE,1,[],https://github.com/endlessm/linux/pull/328,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/328,"Asus Republic of Gamers (ROG) laptop models GL553VD/VE, GL753VD/VE
support keyboard backlight control via function keys. Apply the
QUIRK_USE_KBD_BACKLIGHT to get it work.
https://phabricator.endlessm.com/T19879
Signed-off-by: Chris Chiu chiu@endlessm.com","Asus Republic of Gamers (ROG) laptop models GL553VD/VE, GL753VD/VE
support keyboard backlight control via function keys. Apply the
QUIRK_USE_KBD_BACKLIGHT to get it work.
https://phabricator.endlessm.com/T19879
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,328,2017-11-16T03:45:23Z,2017-11-17T08:44:40Z,2017-11-17T08:44:42Z,CLOSED,False,1,1,1,https://github.com/mschiu77,HID: asus: support backlight on USB keyboards of GL753VD/VE,1,[],https://github.com/endlessm/linux/pull/328,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/328#issuecomment-345180943,"Asus Republic of Gamers (ROG) laptop models GL553VD/VE, GL753VD/VE
support keyboard backlight control via function keys. Apply the
QUIRK_USE_KBD_BACKLIGHT to get it work.
https://phabricator.endlessm.com/T19879
Signed-off-by: Chris Chiu chiu@endlessm.com",pushed upstream fix instead,True,{}
endlessm/linux,https://github.com/endlessm/linux,329,2017-11-23T05:22:22Z,2017-11-24T11:04:02Z,2017-11-24T11:04:05Z,CLOSED,False,4,0,1,https://github.com/mschiu77,USB: serial: option: add support for MeiG LTE module SLM720,1,[],https://github.com/endlessm/linux/pull/329,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/329,"This commit adds support for MeiG LTE USB module SLM720 to option
driver.
T:  Bus=01 Lev=01 Prnt=01 Port=02 Cnt=02 Dev#=  3 Spd=480  MxCh= 0
D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=2dee ProdID=4d07 Rev= 3.18
S:  Manufacturer=Android
S:  Product=Android
S:  SerialNumber=124346
C:* #Ifs= 6 Cfg#= 1 Atr=80 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
I:* If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
I:* If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=(none)
I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
https://phabricator.endlessm.com/T20061
Signed-off-by: Chris Chiu chiu@endlessm.com","This commit adds support for MeiG LTE USB module SLM720 to option
driver.
T:  Bus=01 Lev=01 Prnt=01 Port=02 Cnt=02 Dev#=  3 Spd=480  MxCh= 0
D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=2dee ProdID=4d07 Rev= 3.18
S:  Manufacturer=Android
S:  Product=Android
S:  SerialNumber=124346
C:* #Ifs= 6 Cfg#= 1 Atr=80 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
I:* If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
I:* If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=(none)
I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
https://phabricator.endlessm.com/T20061
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,330,2017-11-29T17:03:04Z,2017-11-29T17:31:26Z,2017-11-29T17:31:29Z,MERGED,True,13,1,1,https://github.com/carlocaione,T19967,2,[],https://github.com/endlessm/linux/pull/330,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/330,https://phabricator.endlessm.com/T19967,https://phabricator.endlessm.com/T19967,True,{}
endlessm/linux,https://github.com/endlessm/linux,331,2017-12-07T12:39:16Z,2017-12-12T09:39:04Z,2017-12-12T09:39:06Z,CLOSED,False,141239,8889,599,https://github.com/carlocaione,Dc 4.13,6,[],https://github.com/endlessm/linux/pull/331,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/331,https://phabricator.endlessm.com/T11531,https://phabricator.endlessm.com/T11531,True,{}
endlessm/linux,https://github.com/endlessm/linux,331,2017-12-07T12:39:16Z,2017-12-12T09:39:04Z,2017-12-12T09:39:06Z,CLOSED,False,141239,8889,599,https://github.com/carlocaione,Dc 4.13,6,[],https://github.com/endlessm/linux/pull/331,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/331#issuecomment-349968585,https://phabricator.endlessm.com/T11531,I think you also need a commit to turn this on in the config files under debian.master (you can see how I did this on the master branch),True,{}
endlessm/linux,https://github.com/endlessm/linux,331,2017-12-07T12:39:16Z,2017-12-12T09:39:04Z,2017-12-12T09:39:06Z,CLOSED,False,141239,8889,599,https://github.com/carlocaione,Dc 4.13,6,[],https://github.com/endlessm/linux/pull/331,https://github.com/carlocaione,3,https://github.com/endlessm/linux/pull/331#issuecomment-349979140,https://phabricator.endlessm.com/T11531,@dsd PR respin ready,True,{}
endlessm/linux,https://github.com/endlessm/linux,331,2017-12-07T12:39:16Z,2017-12-12T09:39:04Z,2017-12-12T09:39:06Z,CLOSED,False,141239,8889,599,https://github.com/carlocaione,Dc 4.13,6,[],https://github.com/endlessm/linux/pull/331,https://github.com/dsd,4,https://github.com/endlessm/linux/pull/331#issuecomment-349990849,https://phabricator.endlessm.com/T11531,Looks good. Must not be merged before eos3.3 is open for 2018-01 release.,True,{}
endlessm/linux,https://github.com/endlessm/linux,331,2017-12-07T12:39:16Z,2017-12-12T09:39:04Z,2017-12-12T09:39:06Z,CLOSED,False,141239,8889,599,https://github.com/carlocaione,Dc 4.13,6,[],https://github.com/endlessm/linux/pull/331,https://github.com/carlocaione,5,https://github.com/endlessm/linux/pull/331#issuecomment-350098292,https://phabricator.endlessm.com/T11531,@jprvita thanks for noticing. New PR ready.,True,{}
endlessm/linux,https://github.com/endlessm/linux,331,2017-12-07T12:39:16Z,2017-12-12T09:39:04Z,2017-12-12T09:39:06Z,CLOSED,False,141239,8889,599,https://github.com/carlocaione,Dc 4.13,6,[],https://github.com/endlessm/linux/pull/331,https://github.com/dsd,6,https://github.com/endlessm/linux/pull/331#issuecomment-350997348,https://phabricator.endlessm.com/T11531,merged,True,{}
endlessm/linux,https://github.com/endlessm/linux,332,2017-12-07T17:38:06Z,2017-12-08T08:09:45Z,2017-12-08T08:09:47Z,MERGED,True,14,4,2,https://github.com/mschiu77,T19756 - Mark MIC stripped MPDUs,2,[],https://github.com/endlessm/linux/pull/332,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/332,https://phabricator.endlessm.com/T19756,https://phabricator.endlessm.com/T19756,True,{}
endlessm/linux,https://github.com/endlessm/linux,333,2017-12-07T17:54:08Z,2017-12-08T09:50:04Z,2017-12-08T09:50:08Z,MERGED,True,11,0,1,https://github.com/mschiu77,ALSA: hda/realtek - Add support for ASUS laptop X441MB headset mic,1,[],https://github.com/endlessm/linux/pull/333,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/333,"The ASUS laptop X441MB with ALC256 can't detect the headset
microphone. Add the pin cfg to make the headset mic work.
https://phabricator.endlessm.com/T20151
Signed-off-by: Chris Chiu chiu@endlessm.com","The ASUS laptop X441MB with ALC256 can't detect the headset
microphone. Add the pin cfg to make the headset mic work.
https://phabricator.endlessm.com/T20151
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,334,2017-12-12T12:16:31Z,2017-12-12T13:03:57Z,2017-12-12T13:04:00Z,MERGED,True,312,38,2,https://github.com/carlocaione,Improve Cherry Trail SD card compatibility,6,[],https://github.com/endlessm/linux/pull/334,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/334,https://phabricator.endlessm.com/T19285,https://phabricator.endlessm.com/T19285,True,{}
endlessm/linux,https://github.com/endlessm/linux,335,2017-12-12T12:16:35Z,2017-12-12T13:02:48Z,2017-12-12T13:02:48Z,MERGED,True,312,35,2,https://github.com/carlocaione,Improve Cherry Trail SD card compatibility,6,[],https://github.com/endlessm/linux/pull/335,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/335,https://phabricator.endlessm.com/T19285,https://phabricator.endlessm.com/T19285,True,{}
endlessm/linux,https://github.com/endlessm/linux,336,2017-12-12T17:06:53Z,2017-12-13T11:16:33Z,2017-12-13T11:16:37Z,MERGED,True,409423,0,472,https://github.com/mschiu77,Add support for RTL8723DE,3,[],https://github.com/endlessm/linux/pull/336,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/336,https://phabricator.endlessm.com/T20069,https://phabricator.endlessm.com/T20069,True,{}
endlessm/linux,https://github.com/endlessm/linux,337,2017-12-15T13:56:45Z,2017-12-22T11:23:26Z,2017-12-22T11:23:35Z,MERGED,True,2,1,1,https://github.com/carlocaione,PM / runtime: Fix handling of suppliers with disabled runtime PM,1,[],https://github.com/endlessm/linux/pull/337,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/337,https://phabricator.endlessm.com/T19285,https://phabricator.endlessm.com/T19285,True,{}
endlessm/linux,https://github.com/endlessm/linux,338,2017-12-15T13:56:47Z,2017-12-15T14:57:35Z,2017-12-15T14:57:40Z,MERGED,True,2,1,1,https://github.com/carlocaione,PM / runtime: Fix handling of suppliers with disabled runtime PM,1,[],https://github.com/endlessm/linux/pull/338,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/338,https://phabricator.endlessm.com/T19285,https://phabricator.endlessm.com/T19285,True,{}
endlessm/linux,https://github.com/endlessm/linux,339,2017-12-19T04:11:08Z,2017-12-20T02:53:47Z,2017-12-20T03:18:12Z,CLOSED,False,5,0,1,https://github.com/mschiu77,tpm: fix suspend failure on Acer Veriton X4110G,1,[],https://github.com/endlessm/linux/pull/339,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/339,"The TPM on Acer Veriton X4110G shows the following message in the
first resume.
tpm tpm0: A TPM error(38) occured continue selftest
And error(38) is TPM_ERR_INVALID_POSTINIT which means the TPM is
not in the correct state. Then the following suspend will always
fail with the following messages.
tpm tpm0: Error (38) sending savestate before suspend
PM: Device 00:0b failed to suspend: error 38
This commit fix the TPM state by performing tpm_startup again and
prevent same error in tpm_pm_suspend.
https://phabricator.endlessm.com/T20438
Signed-off-by: Chris Chiu chiu@endlessm.com","The TPM on Acer Veriton X4110G shows the following message in the
first resume.
tpm tpm0: A TPM error(38) occured continue selftest
And error(38) is TPM_ERR_INVALID_POSTINIT which means the TPM is
not in the correct state. Then the following suspend will always
fail with the following messages.
tpm tpm0: Error (38) sending savestate before suspend
PM: Device 00:0b failed to suspend: error 38
This commit fix the TPM state by performing tpm_startup again and
prevent same error in tpm_pm_suspend.
https://phabricator.endlessm.com/T20438
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,339,2017-12-19T04:11:08Z,2017-12-20T02:53:47Z,2017-12-20T03:18:12Z,CLOSED,False,5,0,1,https://github.com/mschiu77,tpm: fix suspend failure on Acer Veriton X4110G,1,[],https://github.com/endlessm/linux/pull/339,https://github.com/mschiu77,2,https://github.com/endlessm/linux/pull/339#issuecomment-352953623,"The TPM on Acer Veriton X4110G shows the following message in the
first resume.
tpm tpm0: A TPM error(38) occured continue selftest
And error(38) is TPM_ERR_INVALID_POSTINIT which means the TPM is
not in the correct state. Then the following suspend will always
fail with the following messages.
tpm tpm0: Error (38) sending savestate before suspend
PM: Device 00:0b failed to suspend: error 38
This commit fix the TPM state by performing tpm_startup again and
prevent same error in tpm_pm_suspend.
https://phabricator.endlessm.com/T20438
Signed-off-by: Chris Chiu chiu@endlessm.com",@jprvita thanks for your suggestion. It's weird that I can't directly do git force push so I create another PR based on your suggestion. Please kindly help to review that. Thanks,True,{}
endlessm/linux,https://github.com/endlessm/linux,340,2017-12-20T03:16:05Z,2017-12-20T10:47:20Z,2017-12-20T10:47:23Z,MERGED,True,4,0,1,https://github.com/mschiu77,tpm: fix suspend failure on Acer Veriton X4110G,1,[],https://github.com/endlessm/linux/pull/340,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/340,"The TPM on Acer Veriton X4110G shows the following message in the
first resume.
tpm tpm0: A TPM error(38) occured continue selftest
And error(38) is TPM_ERR_INVALID_POSTINIT which means the TPM is
not in the correct state. Then the following suspend will always
fail with the following messages.
tpm tpm0: Error (38) sending savestate before suspend
PM: Device 00:0b failed to suspend: error 38
This commit logs the unexpected TPM state and skip the TPM_SaveState
in following suspends.
https://phabricator.endlessm.com/T20438
Signed-off-by: Chris Chiu chiu@endlessm.com","The TPM on Acer Veriton X4110G shows the following message in the
first resume.
tpm tpm0: A TPM error(38) occured continue selftest
And error(38) is TPM_ERR_INVALID_POSTINIT which means the TPM is
not in the correct state. Then the following suspend will always
fail with the following messages.
tpm tpm0: Error (38) sending savestate before suspend
PM: Device 00:0b failed to suspend: error 38
This commit logs the unexpected TPM state and skip the TPM_SaveState
in following suspends.
https://phabricator.endlessm.com/T20438
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,341,2017-12-27T12:34:06Z,2017-12-29T10:31:45Z,2017-12-29T10:31:48Z,MERGED,True,7,8,6,https://github.com/mschiu77,Fix problems on Raven Ridge display and resume,3,[],https://github.com/endlessm/linux/pull/341,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/341,https://phabricator.endlessm.com/T20523,https://phabricator.endlessm.com/T20523,True,{}
endlessm/linux,https://github.com/endlessm/linux,342,2018-01-02T09:23:19Z,2018-01-03T02:01:47Z,2018-01-03T02:01:47Z,MERGED,True,1,0,1,https://github.com/dsd,acer-wireless: send an EV_SYN/SYN_REPORT between state changes,1,[],https://github.com/endlessm/linux/pull/342,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/342,"Sending the switch state change twice within the same frame is invalid
evdev protocol and only works if the client handles keys immediately as
well. Processing events immediately is incorrect, it forces a fake
order of events that does not exist on the device.
Recent versions of libinput changed to only process the device state and
SYN_REPORT time, so now the key event is lost.
Same fix as bff5bf9 ""platform/x86: asus-wireless: send an
EV_SYN/SYN_REPORT between state changes""
https://phabricator.endlessm.com/T20508
Signed-off-by: Daniel Drake drake@endlessm.com","Sending the switch state change twice within the same frame is invalid
evdev protocol and only works if the client handles keys immediately as
well. Processing events immediately is incorrect, it forces a fake
order of events that does not exist on the device.
Recent versions of libinput changed to only process the device state and
SYN_REPORT time, so now the key event is lost.
Same fix as bff5bf9 ""platform/x86: asus-wireless: send an
EV_SYN/SYN_REPORT between state changes""
https://phabricator.endlessm.com/T20508
Signed-off-by: Daniel Drake drake@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,343,2018-01-02T17:59:34Z,2018-01-02T19:09:37Z,2018-01-02T19:09:40Z,MERGED,True,511,78,12,https://github.com/carlocaione,amdgpu: enable display mirror/extend,3,[],https://github.com/endlessm/linux/pull/343,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/343,https://phabricator.endlessm.com/T20491,https://phabricator.endlessm.com/T20491,True,{}
endlessm/linux,https://github.com/endlessm/linux,344,2018-01-09T22:04:55Z,2018-01-09T22:51:11Z,2018-01-09T22:51:13Z,MERGED,True,1,1,1,https://github.com/jprvita,"Revert ""ideapad_laptop: Makes radio ON/OFF key emit KEY_RFKILL""",1,[],https://github.com/endlessm/linux/pull/344,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/344,"This reverts commit 7a2cc12.
Userspace is now treating KEY_WLAN as airplane-mode, so we can drop this
change.
https://phabricator.endlessm.com/T20508","This reverts commit 7a2cc12.
Userspace is now treating KEY_WLAN as airplane-mode, so we can drop this
change.
https://phabricator.endlessm.com/T20508",True,{}
endlessm/linux,https://github.com/endlessm/linux,345,2018-01-10T14:29:09Z,2018-01-15T18:37:00Z,2018-01-15T18:37:02Z,MERGED,True,21,0,1,https://github.com/mschiu77,drm/nouveau: Disable runtime pm on more Asus laptops,1,[],https://github.com/endlessm/linux/pull/345,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/345,"The Asus X542UQ/P1440UF/P2440UF laptops have two video cards
(Intel+NVIDIA GM108). There is a problem with the interaction
between runtime pm and suspend/resume which leads to the machine
hanging on shutdown. Add these to dmi quirk table which disables
runpm.
phabricator: https://phabricator.endlessm.com/T20646","The Asus X542UQ/P1440UF/P2440UF laptops have two video cards
(Intel+NVIDIA GM108). There is a problem with the interaction
between runtime pm and suspend/resume which leads to the machine
hanging on shutdown. Add these to dmi quirk table which disables
runpm.
phabricator: https://phabricator.endlessm.com/T20646",True,{}
endlessm/linux,https://github.com/endlessm/linux,346,2018-01-13T23:33:08Z,2018-02-02T19:13:12Z,2018-02-02T19:13:13Z,CLOSED,False,82,61,1,https://github.com/jprvita,drm/nouveau: Disable runtime pm on the Asus X555UQ,5,[],https://github.com/endlessm/linux/pull/346,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/346,"The Asus X555UQ has two video cards (Intel+NVIDIA). There is a problem
with the interaction between runtime pm and suspend/resume which leads
to the machine hanging on shutdown.
https://phabricator.endlessm.com/T20281","The Asus X555UQ has two video cards (Intel+NVIDIA). There is a problem
with the interaction between runtime pm and suspend/resume which leads
to the machine hanging on shutdown.
https://phabricator.endlessm.com/T20281",True,{}
endlessm/linux,https://github.com/endlessm/linux,347,2018-01-18T21:51:51Z,2018-01-18T22:25:26Z,2018-01-18T22:25:29Z,MERGED,True,7,14,1,https://github.com/jprvita,Add 04ca:3015 to the QCA Rome family and switch from BTUSB_RESET_RESUME to USB_QUIRK_RESET_RESUME,3,[],https://github.com/endlessm/linux/pull/347,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/347,https://phabricator.endlessm.com/T19633,https://phabricator.endlessm.com/T19633,True,{}
endlessm/linux,https://github.com/endlessm/linux,348,2018-01-19T16:57:46Z,2018-01-19T17:55:51Z,2018-01-19T17:56:16Z,MERGED,True,11,12,1,https://github.com/jprvita,[eos3.3] Add 04ca:3015 to the QCA Rome family and switch from BTUSB_RESET_RESUME to USB_QUIRK_RESET_RESUME,2,[],https://github.com/endlessm/linux/pull/348,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/348,https://phabricator.endlessm.com/T19633,https://phabricator.endlessm.com/T19633,True,{}
endlessm/linux,https://github.com/endlessm/linux,349,2018-01-22T13:20:52Z,2018-01-23T16:06:30Z,2018-01-23T16:06:42Z,MERGED,True,15,2,1,https://github.com/carlocaione,HID: multitouch: Only look at non touch fields in first packet of a f…,1,[],https://github.com/endlessm/linux/pull/349,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/349,https://phabricator.endlessm.com/T20746,https://phabricator.endlessm.com/T20746,True,{}
endlessm/linux,https://github.com/endlessm/linux,350,2018-01-22T13:57:40Z,2018-01-22T16:02:35Z,2018-01-22T16:02:38Z,MERGED,True,15,21,1,https://github.com/mschiu77,T20646 - disable runtime pm on ASUS laptops with NV GM108,2,[],https://github.com/endlessm/linux/pull/350,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/350,,,True,{}
endlessm/linux,https://github.com/endlessm/linux,351,2018-01-22T14:15:33Z,2020-09-18T13:30:22Z,2020-09-18T18:32:06Z,CLOSED,False,2369567,566,3428,https://github.com/carlocaione,T20588,324,[],https://github.com/endlessm/linux/pull/351,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/351,https://phabricator.endlessm.com/T20588,https://phabricator.endlessm.com/T20588,True,{}
endlessm/linux,https://github.com/endlessm/linux,352,2018-01-30T17:36:04Z,2018-02-12T03:04:07Z,2018-02-12T17:40:25Z,MERGED,True,0,5,1,https://github.com/jprvita,"Revert ""Bluetooth: btusb: driver to enable the usb-wakeup feature""",1,[],https://github.com/endlessm/linux/pull/352,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/352,"This reverts commit a0085f2.
This may cause spurious wake-ups or prevent the system from entering
suspend at all.
https://patchwork.kernel.org/patch/10121401/
https://phabricator.endlessm.com/T20764","This reverts commit a0085f2.
This may cause spurious wake-ups or prevent the system from entering
suspend at all.
https://patchwork.kernel.org/patch/10121401/
https://phabricator.endlessm.com/T20764",True,{}
endlessm/linux,https://github.com/endlessm/linux,353,2018-02-01T13:42:35Z,2018-02-02T13:31:24Z,2018-02-02T13:31:30Z,CLOSED,False,3,0,1,https://github.com/carlocaione,rtl8723bu: Fix connection error on resume,1,[],https://github.com/endlessm/linux/pull/353,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/353,https://phabricator.endlessm.com/T20835,https://phabricator.endlessm.com/T20835,True,{}
endlessm/linux,https://github.com/endlessm/linux,353,2018-02-01T13:42:35Z,2018-02-02T13:31:24Z,2018-02-02T13:31:30Z,CLOSED,False,3,0,1,https://github.com/carlocaione,rtl8723bu: Fix connection error on resume,1,[],https://github.com/endlessm/linux/pull/353,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/353#issuecomment-362586875,https://phabricator.endlessm.com/T20835,Looks fine. But instead of a separate pull request just include this commit in the pull request on T20588.,True,{}
endlessm/linux,https://github.com/endlessm/linux,354,2018-02-02T03:25:47Z,2018-02-02T13:43:47Z,2018-02-02T13:43:50Z,CLOSED,False,1,1,1,https://github.com/mschiu77,nouveau/gm108: Enable noaccel quirk for Asus Notebooks,1,[],https://github.com/endlessm/linux/pull/354,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/354,"The Asus X542UF/X542UQ, P1440UF/P2440UF and more models with NVIDIA
940MX, MX110/MX130 requires passing 'nouveau.noaccel=1' at boot to
have it working correctly and avoid boot or shutdown failure. If
only disable runtime pm, it stills incurs the side effect which is
the shutdown/reboot takes ~3 minutes to complete.
This commit turns on noaccel for all Asus Notebooks with the display
chip NV GM108.
It has to be reverted once if there's a upstream fix.
https://phabricator.endlessm.com/T20991
Signed-off-by: Chris Chiu chiu@endlessm.com","The Asus X542UF/X542UQ, P1440UF/P2440UF and more models with NVIDIA
940MX, MX110/MX130 requires passing 'nouveau.noaccel=1' at boot to
have it working correctly and avoid boot or shutdown failure. If
only disable runtime pm, it stills incurs the side effect which is
the shutdown/reboot takes ~3 minutes to complete.
This commit turns on noaccel for all Asus Notebooks with the display
chip NV GM108.
It has to be reverted once if there's a upstream fix.
https://phabricator.endlessm.com/T20991
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,354,2018-02-02T03:25:47Z,2018-02-02T13:43:47Z,2018-02-02T13:43:50Z,CLOSED,False,1,1,1,https://github.com/mschiu77,nouveau/gm108: Enable noaccel quirk for Asus Notebooks,1,[],https://github.com/endlessm/linux/pull/354,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/354#issuecomment-362589821,"The Asus X542UF/X542UQ, P1440UF/P2440UF and more models with NVIDIA
940MX, MX110/MX130 requires passing 'nouveau.noaccel=1' at boot to
have it working correctly and avoid boot or shutdown failure. If
only disable runtime pm, it stills incurs the side effect which is
the shutdown/reboot takes ~3 minutes to complete.
This commit turns on noaccel for all Asus Notebooks with the display
chip NV GM108.
It has to be reverted once if there's a upstream fix.
https://phabricator.endlessm.com/T20991
Signed-off-by: Chris Chiu chiu@endlessm.com",pushed separately,True,{}
endlessm/linux,https://github.com/endlessm/linux,355,2018-02-02T20:28:24Z,,2022-04-12T21:36:12Z,OPEN,False,2167430,566,3190,https://github.com/jprvita,drm/nouveau: Rework DMI quirks,327,[],https://github.com/endlessm/linux/pull/355,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/355,"This improves code readability, adds logging so we know when the quirks are active (specially useful now that we have more generic quirks), and make possible to override the quirks with command-line parameters.","This improves code readability, adds logging so we know when the quirks are active (specially useful now that we have more generic quirks), and make possible to override the quirks with command-line parameters.",True,{}
endlessm/linux,https://github.com/endlessm/linux,356,2018-02-06T09:53:12Z,2018-02-06T15:41:07Z,2018-02-06T15:41:11Z,MERGED,True,2,2,1,https://github.com/mschiu77,r8169: fix RTL8168EP take too long to complete driver initialization.,1,[],https://github.com/endlessm/linux/pull/356,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/356,"Driver check the wrong register bit in rtl_ocp_tx_cond() that keep driver
waiting until timeout.
Fix this by waiting for the right register bit.
Signed-off-by: Chunhao Lin hau@realtek.com
Signed-off-by: David S. Miller davem@davemloft.net","Driver check the wrong register bit in rtl_ocp_tx_cond() that keep driver
waiting until timeout.
Fix this by waiting for the right register bit.
Signed-off-by: Chunhao Lin hau@realtek.com
Signed-off-by: David S. Miller davem@davemloft.net",True,{}
endlessm/linux,https://github.com/endlessm/linux,357,2018-02-06T10:35:21Z,2018-02-07T21:06:13Z,2018-02-07T21:06:15Z,CLOSED,False,15,0,1,https://github.com/mschiu77,ipmi_si: DMI quirk to disable IPMI pci probe,1,[],https://github.com/endlessm/linux/pull/357,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/357,"Acer Veriton Z4640G has a PCI IPMI device which is always timeout
while getting BMC ID in try_get_dev_id(). It takes too long and
could cause oops during suspend/shutdown if the probe not done yet.
Add a quirk to prevent it from probing until there's an upstream fix.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T20918","Acer Veriton Z4640G has a PCI IPMI device which is always timeout
while getting BMC ID in try_get_dev_id(). It takes too long and
could cause oops during suspend/shutdown if the probe not done yet.
Add a quirk to prevent it from probing until there's an upstream fix.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T20918",True,{}
endlessm/linux,https://github.com/endlessm/linux,357,2018-02-06T10:35:21Z,2018-02-07T21:06:13Z,2018-02-07T21:06:15Z,CLOSED,False,15,0,1,https://github.com/mschiu77,ipmi_si: DMI quirk to disable IPMI pci probe,1,[],https://github.com/endlessm/linux/pull/357,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/357#issuecomment-363910530,"Acer Veriton Z4640G has a PCI IPMI device which is always timeout
while getting BMC ID in try_get_dev_id(). It takes too long and
could cause oops during suspend/shutdown if the probe not done yet.
Add a quirk to prevent it from probing until there's an upstream fix.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T20918",pushed separately,True,{}
endlessm/linux,https://github.com/endlessm/linux,358,2018-02-08T15:06:04Z,2018-02-09T18:09:56Z,2018-02-09T18:09:56Z,CLOSED,False,14,1,1,https://github.com/mschiu77,Bluetooth: btusb: DMI quirk to disable wakeup,1,[],https://github.com/endlessm/linux/pull/358,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/358,"Acer Veriton Z4640G has a Intel 7265 wifi/bt combo chip which always
resumes due to some unexpected bluetooth rx data from paired device.
There's no problem if no bluetooth device connected/paired. Don't know
why exactly so add a quirk to disable wakeup until there's an upstream
fix.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T20764","Acer Veriton Z4640G has a Intel 7265 wifi/bt combo chip which always
resumes due to some unexpected bluetooth rx data from paired device.
There's no problem if no bluetooth device connected/paired. Don't know
why exactly so add a quirk to disable wakeup until there's an upstream
fix.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T20764",True,{}
endlessm/linux,https://github.com/endlessm/linux,358,2018-02-08T15:06:04Z,2018-02-09T18:09:56Z,2018-02-09T18:09:56Z,CLOSED,False,14,1,1,https://github.com/mschiu77,Bluetooth: btusb: DMI quirk to disable wakeup,1,[],https://github.com/endlessm/linux/pull/358,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/358#issuecomment-364512491,"Acer Veriton Z4640G has a Intel 7265 wifi/bt combo chip which always
resumes due to some unexpected bluetooth rx data from paired device.
There's no problem if no bluetooth device connected/paired. Don't know
why exactly so add a quirk to disable wakeup until there's an upstream
fix.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T20764","Closing this, as I believe we should merge #352 instead.",True,{}
endlessm/linux,https://github.com/endlessm/linux,359,2018-02-08T17:43:16Z,2018-02-08T20:04:46Z,2018-02-08T20:04:48Z,MERGED,True,16,0,2,https://github.com/carlocaione,rt5651: Add new quirk for DeeQ X5-Z8300,1,[],https://github.com/endlessm/linux/pull/359,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/359,https://phabricator.endlessm.com/T20855,https://phabricator.endlessm.com/T20855,True,{}
endlessm/linux,https://github.com/endlessm/linux,360,2018-02-13T16:42:06Z,2018-02-26T18:05:14Z,2018-02-26T18:05:17Z,MERGED,True,11,0,1,https://github.com/carlocaione,ASoC: rt5645: Introduce mapping for ACPI-defined GPIO,1,[],https://github.com/endlessm/linux/pull/360,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/360,https://phabricator.endlessm.com/T21052,https://phabricator.endlessm.com/T21052,True,{}
endlessm/linux,https://github.com/endlessm/linux,361,2018-02-14T16:23:53Z,2018-02-14T18:46:35Z,2018-02-16T14:03:02Z,MERGED,True,16,0,2,https://github.com/carlocaione,rt5651: Add new quirk for DeeQ X5-Z8300,1,[],https://github.com/endlessm/linux/pull/361,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/361,https://phabricator.endlessm.com/T20855,https://phabricator.endlessm.com/T20855,True,{}
endlessm/linux,https://github.com/endlessm/linux,362,2018-02-15T00:45:49Z,2018-02-15T00:53:12Z,2018-02-15T00:53:15Z,MERGED,True,12657,4884,235,https://github.com/jprvita,Minor update to Ubuntu's 4.15.0-9.10,151,[],https://github.com/endlessm/linux/pull/362,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/362,https://phabricator.endlessm.com/T20810,https://phabricator.endlessm.com/T20810,True,{}
endlessm/linux,https://github.com/endlessm/linux,363,2018-02-15T15:27:09Z,2018-02-27T18:33:09Z,2018-02-27T18:33:12Z,MERGED,True,3,1,3,https://github.com/carlocaione,rfkill: Add hidden type and use it for OBDA8723 device,1,[],https://github.com/endlessm/linux/pull/363,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/363,https://phabricator.endlessm.com/T19284,https://phabricator.endlessm.com/T19284,True,{}
endlessm/linux,https://github.com/endlessm/linux,364,2018-02-20T14:59:29Z,2018-02-26T19:20:59Z,2018-02-26T19:21:01Z,MERGED,True,7,0,1,https://github.com/carlocaione,ACPI / scan: Do not treat the OBDA8723 device as serdev for now,1,[],https://github.com/endlessm/linux/pull/364,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/364,https://phabricator.endlessm.com/T19284,https://phabricator.endlessm.com/T19284,True,{}
endlessm/linux,https://github.com/endlessm/linux,365,2018-02-21T15:02:57Z,2018-02-22T13:57:22Z,2018-02-22T13:57:26Z,MERGED,True,2,171421,176,https://github.com/carlocaione,Go back to upstream RTL8192CU driver,2,[],https://github.com/endlessm/linux/pull/365,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/365,https://phabricator.endlessm.com/T20791,https://phabricator.endlessm.com/T20791,True,{}
endlessm/linux,https://github.com/endlessm/linux,366,2018-02-26T21:02:48Z,2018-02-27T18:33:15Z,2018-02-27T18:33:17Z,MERGED,True,3,1,3,https://github.com/carlocaione,rfkill: Add hidden type and use it for OBDA8723 device,1,[],https://github.com/endlessm/linux/pull/366,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/366,https://phabricator.endlessm.com/T19284,https://phabricator.endlessm.com/T19284,True,{}
endlessm/linux,https://github.com/endlessm/linux,367,2018-02-28T14:23:46Z,2018-03-01T13:41:10Z,2018-03-01T13:41:21Z,MERGED,True,14,0,1,https://github.com/mschiu77,Disable nouveau on ASUS ZenBook Pro 15 UX550GEX,1,[],https://github.com/endlessm/linux/pull/367,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/367,"ASUS ZenBook UX550GEX has dual GPU (Intel CoffeeLake+NVIDIA GP107),
the nouveau will hit kernel panic during shutdown and fail to suspend.
Disable it for now, and revisit later for a proper fix.
https://phabricator.endlessm.com/T21111","ASUS ZenBook UX550GEX has dual GPU (Intel CoffeeLake+NVIDIA GP107),
the nouveau will hit kernel panic during shutdown and fail to suspend.
Disable it for now, and revisit later for a proper fix.
https://phabricator.endlessm.com/T21111",True,{}
endlessm/linux,https://github.com/endlessm/linux,368,2018-03-01T13:35:14Z,2018-03-01T13:40:18Z,2018-03-01T13:40:20Z,MERGED,True,7,1,1,https://github.com/carlocaione,EF20: rt5645: Enable quirk also for the second EF20 SKU,1,[],https://github.com/endlessm/linux/pull/368,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/368,https://phabricator.endlessm.com/T21052,https://phabricator.endlessm.com/T21052,True,{}
endlessm/linux,https://github.com/endlessm/linux,369,2018-03-01T14:07:57Z,2018-03-01T14:39:08Z,2018-03-01T14:39:10Z,MERGED,True,111,16,3,https://github.com/carlocaione,T21051,4,[],https://github.com/endlessm/linux/pull/369,https://github.com/carlocaione,1,https://github.com/endlessm/linux/pull/369,https://phabricator.endlessm.com/T21051,https://phabricator.endlessm.com/T21051,True,{}
endlessm/linux,https://github.com/endlessm/linux,370,2018-03-16T04:52:38Z,2018-03-16T08:26:44Z,2018-03-16T08:26:47Z,MERGED,True,7,0,1,https://github.com/starnight,nouveau_drm: ASUS FX570UD can't resume with nouveau,1,[],https://github.com/endlessm/linux/pull/370,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/370,"The NV GTX 1050M of FX570UD cannot resume back from suspend with the
normal display when use the nouveau without setting the module parameter
noaccel.
Set the nouveau's module parameter noaccel to 1 can fix this problem.
https://phabricator.endlessm.com/T21413","The NV GTX 1050M of FX570UD cannot resume back from suspend with the
normal display when use the nouveau without setting the module parameter
noaccel.
Set the nouveau's module parameter noaccel to 1 can fix this problem.
https://phabricator.endlessm.com/T21413",True,{}
endlessm/linux,https://github.com/endlessm/linux,370,2018-03-16T04:52:38Z,2018-03-16T08:26:44Z,2018-03-16T08:26:47Z,MERGED,True,7,0,1,https://github.com/starnight,nouveau_drm: ASUS FX570UD can't resume with nouveau,1,[],https://github.com/endlessm/linux/pull/370,https://github.com/starnight,2,https://github.com/endlessm/linux/pull/370#issuecomment-373638394,"The NV GTX 1050M of FX570UD cannot resume back from suspend with the
normal display when use the nouveau without setting the module parameter
noaccel.
Set the nouveau's module parameter noaccel to 1 can fix this problem.
https://phabricator.endlessm.com/T21413","Fixed the commit message to
nouveau: Disable acceleration on ASUS FX570UD 

Jian-Hong Pan
Jian-Hong Pan committed 4 hours ago
 Nouveau will hit kernel panic during suspending on ASUS FX570UD with NV
GTX-1050M.  After send the suspending command, system will suspend
failed and come back directly with a long time waiting.
The message: 'kernel: nouveau 0000:01:00.0: timeout' will be found.

Set the nouveau's module parameter noaccel to 1 can fix this problem.",True,{}
endlessm/linux,https://github.com/endlessm/linux,371,2018-03-21T11:44:25Z,,2022-04-12T21:36:12Z,OPEN,False,1983979,5435,3766,https://github.com/dbnicholson,fs/dcache: Increase vfs_cache_pressure on lowmem systems,1168,[],https://github.com/endlessm/linux/pull/371,https://github.com/dbnicholson,1,https://github.com/endlessm/linux/pull/371,"If the system has less than 2GB of RAM, increase vfs_cache_pressure to
200. This helps application load time at the expense of the dcache.
https://phabricator.endlessm.com/T21483","If the system has less than 2GB of RAM, increase vfs_cache_pressure to
200. This helps application load time at the expense of the dcache.
https://phabricator.endlessm.com/T21483",True,{}
endlessm/linux,https://github.com/endlessm/linux,372,2018-03-22T12:07:18Z,2018-03-23T08:22:30Z,2018-03-23T08:34:05Z,MERGED,True,19,0,1,https://github.com/mschiu77,rt5645: add internal microphone support and fix jack detection,1,[],https://github.com/endlessm/linux/pull/372,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/372,"The internal mic of Shuttle XO0CT12 is on DMIC1/IN2N. It also
requires jd_mode=3 to make the jack detection work.
https://phabricator.endlessm.com/T20479","The internal mic of Shuttle XO0CT12 is on DMIC1/IN2N. It also
requires jd_mode=3 to make the jack detection work.
https://phabricator.endlessm.com/T20479",True,{}
endlessm/linux,https://github.com/endlessm/linux,373,2018-03-23T06:34:41Z,2018-03-27T02:04:26Z,2018-03-27T02:04:33Z,MERGED,True,21,0,1,https://github.com/dsd,nouveau: disable runtime pm and acceleration on Acer Nitro N50-600,1,[],https://github.com/endlessm/linux/pull/373,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/373,"The Acer Nitro N50-600 has Nvidia GTX 1060 and will occasionally fail
to resume from S3 suspend, with error messages:
nouveau 0000:01:00.0: timeout
nouveau 0000:01:00.0: secboot: error during falcon reset: -110
nouveau 0000:01:00.0: gr: init failed, -110
nouveau 0000:01:00.0: init failed with -110
Disable runtime power management and acceleration in order to avoid
this. Since the chipset number (0x136) does not match the existing
blacklists, create new blacklists which we can use for general
DMI vendor/product name matches and move one existing entry there.
https://phabricator.endlessm.com/T21513","The Acer Nitro N50-600 has Nvidia GTX 1060 and will occasionally fail
to resume from S3 suspend, with error messages:
nouveau 0000:01:00.0: timeout
nouveau 0000:01:00.0: secboot: error during falcon reset: -110
nouveau 0000:01:00.0: gr: init failed, -110
nouveau 0000:01:00.0: init failed with -110
Disable runtime power management and acceleration in order to avoid
this. Since the chipset number (0x136) does not match the existing
blacklists, create new blacklists which we can use for general
DMI vendor/product name matches and move one existing entry there.
https://phabricator.endlessm.com/T21513",True,{}
endlessm/linux,https://github.com/endlessm/linux,374,2018-03-30T07:56:41Z,2018-05-02T01:33:57Z,2018-05-02T01:34:00Z,CLOSED,False,1984014,5436,3767,https://github.com/mschiu77,ACPI / PM: Fix wake up by PS2 keyboard fail on ASUS UX331UA,1172,[],https://github.com/endlessm/linux/pull/374,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/374,"This issue happens on new ASUS laptop UX331UA which has modern
standby mode (suspend-to-idle). Pressing keys on the PS2 keyboard
can't wake up the system from suspend-to-idle which is not expected.
However, pressing power button can wake up without problem.
Per the engineers of ASUS, the keypress event is routed to Embedded
Controller (EC) in standby mode. EC then signals the SCI event to
BIOS so BIOS would Notify() power button to wake up the system. It's
from BIOS perspective. What we observe here is that kernel receives
the SCI event from SCI interrupt handler which informs that the GPE
status bit belongs to EC needs to be handled and then queries the EC
to find out what event is pending. Then execute the following ACPI
_QDF method which defined in ACPI DSDT for EC to notify power button.
Method (_QDF, 0, NotSerialized)  // _Qxx: EC Query
{
Notify (PWRB, 0x80) // Status Change
}
With more debug messages added to analyze this problem, we find that
the keypress does wake up the system from suspend-to-idle but it's back
to suspend again almost immediately. As we see in the following messages,
the acpi_button_notify() is invoked but acpi_pm_wakeup_event() can not
really wake up the system here because acpi_s2idle_wakeup() is false.
The acpi_s2idle_wakeup() returnd false because the acpi_s2idle_sync() has
alrealdy exited.
[   52.987048] s2idle_loop going s2idle
[   59.713392] acpi_s2idle_wake enter
[   59.713394] acpi_s2idle_wake exit
[   59.760888] acpi_ev_gpe_detect enter
[   59.760893] acpi_s2idle_sync enter
[   59.760893] acpi_ec_query_flushed ec pending queries 0
[   59.760953] Read registers for GPE 50-57: Status=01, Enable=01, RunEnable=01, WakeEnable=00
[   59.760955] ACPI: EC: ===== IRQ (1) =====
[   59.760972] ACPI: EC: EC_SC(R) = 0x28 SCI_EVT=1 BURST=0 CMD=1 IBF=0 OBF=0
[   59.760979] ACPI: EC: +++++ Polling enabled +++++
[   59.760979] ACPI: EC: ##### Command(QR_EC) submitted/blocked #####
[   59.761003] acpi_s2idle_sync exit
[   59.769587] ACPI: EC: ##### Query(0xdf) started #####
[   59.769611] ACPI: EC: ##### Query(0xdf) stopped #####
[   59.774154] acpi_button_notify button type 1
[   59.813175] s2idle_loop going s2idle
I would expect the acpi_s2idle_sync() to wait until the pending EC
queries been processed but apparently not in this case. This commit
tries to achieve synchronization to make sure all pending EC events
been processed.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T21599","This issue happens on new ASUS laptop UX331UA which has modern
standby mode (suspend-to-idle). Pressing keys on the PS2 keyboard
can't wake up the system from suspend-to-idle which is not expected.
However, pressing power button can wake up without problem.
Per the engineers of ASUS, the keypress event is routed to Embedded
Controller (EC) in standby mode. EC then signals the SCI event to
BIOS so BIOS would Notify() power button to wake up the system. It's
from BIOS perspective. What we observe here is that kernel receives
the SCI event from SCI interrupt handler which informs that the GPE
status bit belongs to EC needs to be handled and then queries the EC
to find out what event is pending. Then execute the following ACPI
_QDF method which defined in ACPI DSDT for EC to notify power button.
Method (_QDF, 0, NotSerialized)  // _Qxx: EC Query
{
Notify (PWRB, 0x80) // Status Change
}
With more debug messages added to analyze this problem, we find that
the keypress does wake up the system from suspend-to-idle but it's back
to suspend again almost immediately. As we see in the following messages,
the acpi_button_notify() is invoked but acpi_pm_wakeup_event() can not
really wake up the system here because acpi_s2idle_wakeup() is false.
The acpi_s2idle_wakeup() returnd false because the acpi_s2idle_sync() has
alrealdy exited.
[   52.987048] s2idle_loop going s2idle
[   59.713392] acpi_s2idle_wake enter
[   59.713394] acpi_s2idle_wake exit
[   59.760888] acpi_ev_gpe_detect enter
[   59.760893] acpi_s2idle_sync enter
[   59.760893] acpi_ec_query_flushed ec pending queries 0
[   59.760953] Read registers for GPE 50-57: Status=01, Enable=01, RunEnable=01, WakeEnable=00
[   59.760955] ACPI: EC: ===== IRQ (1) =====
[   59.760972] ACPI: EC: EC_SC(R) = 0x28 SCI_EVT=1 BURST=0 CMD=1 IBF=0 OBF=0
[   59.760979] ACPI: EC: +++++ Polling enabled +++++
[   59.760979] ACPI: EC: ##### Command(QR_EC) submitted/blocked #####
[   59.761003] acpi_s2idle_sync exit
[   59.769587] ACPI: EC: ##### Query(0xdf) started #####
[   59.769611] ACPI: EC: ##### Query(0xdf) stopped #####
[   59.774154] acpi_button_notify button type 1
[   59.813175] s2idle_loop going s2idle
I would expect the acpi_s2idle_sync() to wait until the pending EC
queries been processed but apparently not in this case. This commit
tries to achieve synchronization to make sure all pending EC events
been processed.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T21599",True,{}
endlessm/linux,https://github.com/endlessm/linux,374,2018-03-30T07:56:41Z,2018-05-02T01:33:57Z,2018-05-02T01:34:00Z,CLOSED,False,1984014,5436,3767,https://github.com/mschiu77,ACPI / PM: Fix wake up by PS2 keyboard fail on ASUS UX331UA,1172,[],https://github.com/endlessm/linux/pull/374,https://github.com/coverme76,2,https://github.com/endlessm/linux/pull/374#issuecomment-377769801,"This issue happens on new ASUS laptop UX331UA which has modern
standby mode (suspend-to-idle). Pressing keys on the PS2 keyboard
can't wake up the system from suspend-to-idle which is not expected.
However, pressing power button can wake up without problem.
Per the engineers of ASUS, the keypress event is routed to Embedded
Controller (EC) in standby mode. EC then signals the SCI event to
BIOS so BIOS would Notify() power button to wake up the system. It's
from BIOS perspective. What we observe here is that kernel receives
the SCI event from SCI interrupt handler which informs that the GPE
status bit belongs to EC needs to be handled and then queries the EC
to find out what event is pending. Then execute the following ACPI
_QDF method which defined in ACPI DSDT for EC to notify power button.
Method (_QDF, 0, NotSerialized)  // _Qxx: EC Query
{
Notify (PWRB, 0x80) // Status Change
}
With more debug messages added to analyze this problem, we find that
the keypress does wake up the system from suspend-to-idle but it's back
to suspend again almost immediately. As we see in the following messages,
the acpi_button_notify() is invoked but acpi_pm_wakeup_event() can not
really wake up the system here because acpi_s2idle_wakeup() is false.
The acpi_s2idle_wakeup() returnd false because the acpi_s2idle_sync() has
alrealdy exited.
[   52.987048] s2idle_loop going s2idle
[   59.713392] acpi_s2idle_wake enter
[   59.713394] acpi_s2idle_wake exit
[   59.760888] acpi_ev_gpe_detect enter
[   59.760893] acpi_s2idle_sync enter
[   59.760893] acpi_ec_query_flushed ec pending queries 0
[   59.760953] Read registers for GPE 50-57: Status=01, Enable=01, RunEnable=01, WakeEnable=00
[   59.760955] ACPI: EC: ===== IRQ (1) =====
[   59.760972] ACPI: EC: EC_SC(R) = 0x28 SCI_EVT=1 BURST=0 CMD=1 IBF=0 OBF=0
[   59.760979] ACPI: EC: +++++ Polling enabled +++++
[   59.760979] ACPI: EC: ##### Command(QR_EC) submitted/blocked #####
[   59.761003] acpi_s2idle_sync exit
[   59.769587] ACPI: EC: ##### Query(0xdf) started #####
[   59.769611] ACPI: EC: ##### Query(0xdf) stopped #####
[   59.774154] acpi_button_notify button type 1
[   59.813175] s2idle_loop going s2idle
I would expect the acpi_s2idle_sync() to wait until the pending EC
queries been processed but apparently not in this case. This commit
tries to achieve synchronization to make sure all pending EC events
been processed.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T21599",this may affect Vivobooks aswell.,True,{}
endlessm/linux,https://github.com/endlessm/linux,374,2018-03-30T07:56:41Z,2018-05-02T01:33:57Z,2018-05-02T01:34:00Z,CLOSED,False,1984014,5436,3767,https://github.com/mschiu77,ACPI / PM: Fix wake up by PS2 keyboard fail on ASUS UX331UA,1172,[],https://github.com/endlessm/linux/pull/374,https://github.com/dsd,3,https://github.com/endlessm/linux/pull/374#issuecomment-385839175,"This issue happens on new ASUS laptop UX331UA which has modern
standby mode (suspend-to-idle). Pressing keys on the PS2 keyboard
can't wake up the system from suspend-to-idle which is not expected.
However, pressing power button can wake up without problem.
Per the engineers of ASUS, the keypress event is routed to Embedded
Controller (EC) in standby mode. EC then signals the SCI event to
BIOS so BIOS would Notify() power button to wake up the system. It's
from BIOS perspective. What we observe here is that kernel receives
the SCI event from SCI interrupt handler which informs that the GPE
status bit belongs to EC needs to be handled and then queries the EC
to find out what event is pending. Then execute the following ACPI
_QDF method which defined in ACPI DSDT for EC to notify power button.
Method (_QDF, 0, NotSerialized)  // _Qxx: EC Query
{
Notify (PWRB, 0x80) // Status Change
}
With more debug messages added to analyze this problem, we find that
the keypress does wake up the system from suspend-to-idle but it's back
to suspend again almost immediately. As we see in the following messages,
the acpi_button_notify() is invoked but acpi_pm_wakeup_event() can not
really wake up the system here because acpi_s2idle_wakeup() is false.
The acpi_s2idle_wakeup() returnd false because the acpi_s2idle_sync() has
alrealdy exited.
[   52.987048] s2idle_loop going s2idle
[   59.713392] acpi_s2idle_wake enter
[   59.713394] acpi_s2idle_wake exit
[   59.760888] acpi_ev_gpe_detect enter
[   59.760893] acpi_s2idle_sync enter
[   59.760893] acpi_ec_query_flushed ec pending queries 0
[   59.760953] Read registers for GPE 50-57: Status=01, Enable=01, RunEnable=01, WakeEnable=00
[   59.760955] ACPI: EC: ===== IRQ (1) =====
[   59.760972] ACPI: EC: EC_SC(R) = 0x28 SCI_EVT=1 BURST=0 CMD=1 IBF=0 OBF=0
[   59.760979] ACPI: EC: +++++ Polling enabled +++++
[   59.760979] ACPI: EC: ##### Command(QR_EC) submitted/blocked #####
[   59.761003] acpi_s2idle_sync exit
[   59.769587] ACPI: EC: ##### Query(0xdf) started #####
[   59.769611] ACPI: EC: ##### Query(0xdf) stopped #####
[   59.774154] acpi_button_notify button type 1
[   59.813175] s2idle_loop going s2idle
I would expect the acpi_s2idle_sync() to wait until the pending EC
queries been processed but apparently not in this case. This commit
tries to achieve synchronization to make sure all pending EC events
been processed.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T21599",pushed separately,True,{}
endlessm/linux,https://github.com/endlessm/linux,375,2018-04-02T07:58:47Z,2018-04-03T16:37:40Z,2018-04-03T16:37:43Z,MERGED,True,32,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable audio line out on ASUS D640SA,1,[],https://github.com/endlessm/linux/pull/375,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/375,"This ASUS D640SA desktop whose mother board is D640MB has

two jacks which are a headphone and a mic on the front panel,
three jacks which are a mic, a line out and a line in on the rear
panel
one internal speaker.

If I plug a headphone to the front headphone jack, there will be sound
through the headphone jack, and no sound through the internal speaker.
If I unplug the headphone from the the headphone jack, there will be
sound through the internal speaker.  And always no sound through rear
line out, when I plug a headphone or an externel speaker to the rear
line out jack.
Besides, I had checked and toggled the Auto-Mute Mode in alsamixer, but
the rear line out still was not working.  Then I checked the sound
settings in GUI, and found there was no ""Line Out"" could be chosen, only
the ""Headphones"" and ""HDMI/DisplayPort"".
However, system does know that there is an ""Intel PCH Line Out"".
[   10.089082] snd_hda_codec_realtek hdaudioC0D0: autoconfig for
ALC887-VD: line_outs=1 (0x14/0x0/0x0/0x0/0x0) type:line
[   10.089083] snd_hda_codec_realtek hdaudioC0D0:    speaker_outs=1
(0x1a/0x0/0x0/0x0/0x0)
[   10.089084] snd_hda_codec_realtek hdaudioC0D0:    hp_outs=1
(0x1b/0x0/0x0/0x0/0x0)
[   10.089085] snd_hda_codec_realtek hdaudioC0D0:    mono: mono_out=0x0
[   10.089086] snd_hda_codec_realtek hdaudioC0D0:    inputs:
[   10.089087] snd_hda_codec_realtek hdaudioC0D0:      Rear Mic=0x18
[   10.089088] snd_hda_codec_realtek hdaudioC0D0:      Front Mic=0x19
[   10.089089] snd_hda_codec_realtek hdaudioC0D0:      Line=0x15
[   10.104387] input: HDA Intel PCH Rear Mic as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input9
[   10.104416] input: HDA Intel PCH Front Mic as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input10
[   10.104441] input: HDA Intel PCH Line as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input11
[   10.104467] input: HDA Intel PCH Line Out as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input12
[   10.104494] input: HDA Intel PCH Front Headphone as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input13
Consequently, I checked the pin widgets' default configuration values:


Node 0x14 [Pin Complex] wcaps 0x40058d: Stereo Amp-Out
Pin Default 0x01014010: [Jack] Line Out at Ext Rear


Node 0x1b [Pin Complex] wcaps 0x40058f: Stereo Amp-In Amp-Out
Pin Default 0x02214030: [Jack] HP Out at Ext Front


Because the headphone jack (Node ID:0x1b) locates on the desktop's front
panel, not rear panel, I change the headphone jack's configuration from
primary chassis to separate chassis.  So, the configuration value of
Node ID:0x1b should be 0x22214030.
Additionally, I toggle the Auto-Mute Mode of Realtek codecs to “Speaker
Only” which makes signal outputs through line out jack when the ""Line
Out"" is chosen in the sound settings.
https://phabricator.endlessm.com/T21606","This ASUS D640SA desktop whose mother board is D640MB has

two jacks which are a headphone and a mic on the front panel,
three jacks which are a mic, a line out and a line in on the rear
panel
one internal speaker.

If I plug a headphone to the front headphone jack, there will be sound
through the headphone jack, and no sound through the internal speaker.
If I unplug the headphone from the the headphone jack, there will be
sound through the internal speaker.  And always no sound through rear
line out, when I plug a headphone or an externel speaker to the rear
line out jack.
Besides, I had checked and toggled the Auto-Mute Mode in alsamixer, but
the rear line out still was not working.  Then I checked the sound
settings in GUI, and found there was no ""Line Out"" could be chosen, only
the ""Headphones"" and ""HDMI/DisplayPort"".
However, system does know that there is an ""Intel PCH Line Out"".
[   10.089082] snd_hda_codec_realtek hdaudioC0D0: autoconfig for
ALC887-VD: line_outs=1 (0x14/0x0/0x0/0x0/0x0) type:line
[   10.089083] snd_hda_codec_realtek hdaudioC0D0:    speaker_outs=1
(0x1a/0x0/0x0/0x0/0x0)
[   10.089084] snd_hda_codec_realtek hdaudioC0D0:    hp_outs=1
(0x1b/0x0/0x0/0x0/0x0)
[   10.089085] snd_hda_codec_realtek hdaudioC0D0:    mono: mono_out=0x0
[   10.089086] snd_hda_codec_realtek hdaudioC0D0:    inputs:
[   10.089087] snd_hda_codec_realtek hdaudioC0D0:      Rear Mic=0x18
[   10.089088] snd_hda_codec_realtek hdaudioC0D0:      Front Mic=0x19
[   10.089089] snd_hda_codec_realtek hdaudioC0D0:      Line=0x15
[   10.104387] input: HDA Intel PCH Rear Mic as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input9
[   10.104416] input: HDA Intel PCH Front Mic as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input10
[   10.104441] input: HDA Intel PCH Line as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input11
[   10.104467] input: HDA Intel PCH Line Out as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input12
[   10.104494] input: HDA Intel PCH Front Headphone as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input13
Consequently, I checked the pin widgets' default configuration values:


Node 0x14 [Pin Complex] wcaps 0x40058d: Stereo Amp-Out
Pin Default 0x01014010: [Jack] Line Out at Ext Rear


Node 0x1b [Pin Complex] wcaps 0x40058f: Stereo Amp-In Amp-Out
Pin Default 0x02214030: [Jack] HP Out at Ext Front


Because the headphone jack (Node ID:0x1b) locates on the desktop's front
panel, not rear panel, I change the headphone jack's configuration from
primary chassis to separate chassis.  So, the configuration value of
Node ID:0x1b should be 0x22214030.
Additionally, I toggle the Auto-Mute Mode of Realtek codecs to “Speaker
Only” which makes signal outputs through line out jack when the ""Line
Out"" is chosen in the sound settings.
https://phabricator.endlessm.com/T21606",True,{}
endlessm/linux,https://github.com/endlessm/linux,375,2018-04-02T07:58:47Z,2018-04-03T16:37:40Z,2018-04-03T16:37:43Z,MERGED,True,32,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable audio line out on ASUS D640SA,1,[],https://github.com/endlessm/linux/pull/375,https://github.com/starnight,2,https://github.com/endlessm/linux/pull/375#issuecomment-378188019,"This ASUS D640SA desktop whose mother board is D640MB has

two jacks which are a headphone and a mic on the front panel,
three jacks which are a mic, a line out and a line in on the rear
panel
one internal speaker.

If I plug a headphone to the front headphone jack, there will be sound
through the headphone jack, and no sound through the internal speaker.
If I unplug the headphone from the the headphone jack, there will be
sound through the internal speaker.  And always no sound through rear
line out, when I plug a headphone or an externel speaker to the rear
line out jack.
Besides, I had checked and toggled the Auto-Mute Mode in alsamixer, but
the rear line out still was not working.  Then I checked the sound
settings in GUI, and found there was no ""Line Out"" could be chosen, only
the ""Headphones"" and ""HDMI/DisplayPort"".
However, system does know that there is an ""Intel PCH Line Out"".
[   10.089082] snd_hda_codec_realtek hdaudioC0D0: autoconfig for
ALC887-VD: line_outs=1 (0x14/0x0/0x0/0x0/0x0) type:line
[   10.089083] snd_hda_codec_realtek hdaudioC0D0:    speaker_outs=1
(0x1a/0x0/0x0/0x0/0x0)
[   10.089084] snd_hda_codec_realtek hdaudioC0D0:    hp_outs=1
(0x1b/0x0/0x0/0x0/0x0)
[   10.089085] snd_hda_codec_realtek hdaudioC0D0:    mono: mono_out=0x0
[   10.089086] snd_hda_codec_realtek hdaudioC0D0:    inputs:
[   10.089087] snd_hda_codec_realtek hdaudioC0D0:      Rear Mic=0x18
[   10.089088] snd_hda_codec_realtek hdaudioC0D0:      Front Mic=0x19
[   10.089089] snd_hda_codec_realtek hdaudioC0D0:      Line=0x15
[   10.104387] input: HDA Intel PCH Rear Mic as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input9
[   10.104416] input: HDA Intel PCH Front Mic as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input10
[   10.104441] input: HDA Intel PCH Line as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input11
[   10.104467] input: HDA Intel PCH Line Out as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input12
[   10.104494] input: HDA Intel PCH Front Headphone as
/devices/pci0000:00/0000:00:1f.3/sound/card0/input13
Consequently, I checked the pin widgets' default configuration values:


Node 0x14 [Pin Complex] wcaps 0x40058d: Stereo Amp-Out
Pin Default 0x01014010: [Jack] Line Out at Ext Rear


Node 0x1b [Pin Complex] wcaps 0x40058f: Stereo Amp-In Amp-Out
Pin Default 0x02214030: [Jack] HP Out at Ext Front


Because the headphone jack (Node ID:0x1b) locates on the desktop's front
panel, not rear panel, I change the headphone jack's configuration from
primary chassis to separate chassis.  So, the configuration value of
Node ID:0x1b should be 0x22214030.
Additionally, I toggle the Auto-Mute Mode of Realtek codecs to “Speaker
Only” which makes signal outputs through line out jack when the ""Line
Out"" is chosen in the sound settings.
https://phabricator.endlessm.com/T21606","I have update the codes in alc887_fixup_asus_automute_mode function (the part for Auto-Mute Mode feature) according to the advice from upstream: http://mailman.alsa-project.org/pipermail/alsa-devel/2018-April/133977.html , which is simpler and more directly.",True,{}
endlessm/linux,https://github.com/endlessm/linux,376,2018-04-02T14:43:06Z,2018-04-06T12:51:20Z,2018-04-06T12:51:30Z,MERGED,True,9,0,2,https://github.com/mschiu77,platform/x86: asus-wmi: Add keyboard backlight toggle support,1,[],https://github.com/endlessm/linux/pull/376,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/376,"Some Asus laptops like UX550GE has hotkey (Fn+F7) for keyboard
backlight toggle. In this UX550GE, the hotkey not only switches
on/off the keyboard backlight, it also increment the the level
of brightness from 1 to max 3. This commit catches the specific
code, increments the brightness, and toggles the led if the
brightness reaches the max level.
https://phabricator.endlessm.com/T21390
Signed-off-by: Chris Chiu chiu@endlessm.com","Some Asus laptops like UX550GE has hotkey (Fn+F7) for keyboard
backlight toggle. In this UX550GE, the hotkey not only switches
on/off the keyboard backlight, it also increment the the level
of brightness from 1 to max 3. This commit catches the specific
code, increments the brightness, and toggles the led if the
brightness reaches the max level.
https://phabricator.endlessm.com/T21390
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,377,2018-04-10T02:11:28Z,2018-04-12T15:35:17Z,2018-04-12T15:35:19Z,MERGED,True,1,4,1,https://github.com/dsd,config: disable transparent hugepages,1,[],https://github.com/endlessm/linux/pull/377,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/377,"The transparent hugepage set_recommended_min_free_kbytes() function
raises the min_free_kbytes emergency memory pool from ~6mb to ~45mb
on a 2GB RAM system.
However transparent hugepages are only then available when a process
specifically requests them with madvise, which does not seem to be
a common thing.
Disable transparent hugepage support so that we get that memory back.
https://phabricator.endlessm.com/T19943","The transparent hugepage set_recommended_min_free_kbytes() function
raises the min_free_kbytes emergency memory pool from ~6mb to ~45mb
on a 2GB RAM system.
However transparent hugepages are only then available when a process
specifically requests them with madvise, which does not seem to be
a common thing.
Disable transparent hugepage support so that we get that memory back.
https://phabricator.endlessm.com/T19943",True,{}
endlessm/linux,https://github.com/endlessm/linux,378,2018-04-12T14:08:59Z,2018-04-13T03:16:29Z,2018-04-13T03:16:44Z,MERGED,True,9,0,1,https://github.com/mschiu77,sound/hda: Remove line out and fixup headset-mic on Acer TravelMate P658,1,[],https://github.com/endlessm/linux/pull/378,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/378,"There's another Acer TraveMate variant P658 series that requires
the existing fixup to disable the line out pin and fix the headphone
jack sensing.
https://phabricator.endlessm.com/T22021
Signed-off-by: Chris Chiu chiu@endlessm.com","There's another Acer TraveMate variant P658 series that requires
the existing fixup to disable the line out pin and fix the headphone
jack sensing.
https://phabricator.endlessm.com/T22021
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,379,2018-04-16T09:58:53Z,2018-04-18T13:33:35Z,2018-04-18T13:33:37Z,MERGED,True,4,0,1,https://github.com/starnight,ALSA: hda/realtek - Enable headset mic of ASUS UX550GE with ALC295,1,[],https://github.com/endlessm/linux/pull/379,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/379,"The ASUS laptop UX550GE with ALC295 can't detect the headset microphone
until ALC295_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
https://phabricator.endlessm.com/T21690
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The ASUS laptop UX550GE with ALC295 can't detect the headset microphone
until ALC295_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
https://phabricator.endlessm.com/T21690
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,380,2018-04-27T17:20:44Z,2018-04-30T16:13:23Z,2018-04-30T16:13:26Z,MERGED,True,1,0,1,https://github.com/jprvita,Bluetooth: Add a new 13d3:3496 QCA_ROME device,1,[],https://github.com/endlessm/linux/pull/380,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/380,"Without this patch we can't establish a SCO connection with this
adapter.
This adapter is named ""IMC Networks"" under lsusb.
T:  Bus=01 Lev=01 Prnt=01 Port=07 Cnt=02 Dev#=  3 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3496 Rev= 0.01
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T21648","Without this patch we can't establish a SCO connection with this
adapter.
This adapter is named ""IMC Networks"" under lsusb.
T:  Bus=01 Lev=01 Prnt=01 Port=07 Cnt=02 Dev#=  3 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3496 Rev= 0.01
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T21648",True,{}
endlessm/linux,https://github.com/endlessm/linux,381,2018-04-27T17:53:22Z,2018-04-30T16:13:04Z,2018-04-30T16:13:30Z,MERGED,True,1,0,1,https://github.com/jprvita,Bluetooth: Add a new 13d3:3496 QCA_ROME device,1,[],https://github.com/endlessm/linux/pull/381,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/381,"Without this patch we can't establish a SCO connection with this
adapter.
This adapter is named ""IMC Networks"" under lsusb.
T:  Bus=01 Lev=01 Prnt=01 Port=07 Cnt=02 Dev#=  3 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3496 Rev= 0.01
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T21648","Without this patch we can't establish a SCO connection with this
adapter.
This adapter is named ""IMC Networks"" under lsusb.
T:  Bus=01 Lev=01 Prnt=01 Port=07 Cnt=02 Dev#=  3 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3496 Rev= 0.01
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T21648",True,{}
endlessm/linux,https://github.com/endlessm/linux,382,2018-05-04T22:50:18Z,2018-05-07T17:20:30Z,2018-05-07T17:20:33Z,MERGED,True,12,19,3,https://github.com/jprvita,rtlwifi: cleanup 8723be ant_sel definition,1,[],https://github.com/endlessm/linux/pull/382,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/382,"Some HP laptops have only a single wifi antenna. This would not be a
problem except that they were shipped with an incorrectly encoded
EFUSE. It should have been possible to open the computer and transfer
the antenna connection to the other terminal except that such action
might void the warranty, and moving the antenna broke the Windows
driver. The fix was to add a module option that would override the
EFUSE encoding. That was done with commit c18d8f5 (""rtlwifi:
rtl8723be: Add antenna select module parameter""). There was still a
problem with Bluetooth coexistence, which was addressed with commit
baa1702 (""rtlwifi: btcoexist: Implement antenna selection"").
There were still problems, thus there were commit 0ff78ad
(""rtlwifi: rtl8723be: fix ant_sel code"") and commit 6d62269
(""rtlwifi: btcoexist: Fix antenna selection code""). Despite all these
attempts at fixing the problem, the code is not yet right. A proper
fix is important as there are now instances of laptops having
RTL8723DE chips with the same problem.
The module parameter ant_sel is used to control antenna number and path.
At present enum ANT_{X2,X1} is used to define the antenna number, but
this choice is not intuitive, thus change to a new enum ANT_{MAIN,AUX}
to make it more readable. This change showed examples where incorrect
values were used. It was also possible to remove a workaround in
halbtcoutsrc.c.
The experimental results with single antenna connected to specific path
are now as follows:
ant_sel  ANT_MAIN(#1)  ANT_AUX(#2)
0        -8            -62
1        -62           -10
2        -6            -60
Signed-off-by: Ping-Ke Shih pkshih@realtek.com
Fixes: c18d8f5 (""rtlwifi: rtl8723be: Add antenna select module parameter"")
Fixes: baa1702 (""rtlwifi: btcoexist: Implement antenna selection"")
Fixes: 0ff78ad (""rtlwifi: rtl8723be: fix ant_sel code"")
Fixes: 6d62269 (""rtlwifi: btcoexist: Fix antenna selection code"")
Cc: Stable stable@vger.kernel.org # 4.7+
Reviewed-by: Larry Finger Larry.Finger@lwfinger.net
Signed-off-by: Kalle Valo kvalo@codeaurora.org
https://phabricator.endlessm.com/T19890","Some HP laptops have only a single wifi antenna. This would not be a
problem except that they were shipped with an incorrectly encoded
EFUSE. It should have been possible to open the computer and transfer
the antenna connection to the other terminal except that such action
might void the warranty, and moving the antenna broke the Windows
driver. The fix was to add a module option that would override the
EFUSE encoding. That was done with commit c18d8f5 (""rtlwifi:
rtl8723be: Add antenna select module parameter""). There was still a
problem with Bluetooth coexistence, which was addressed with commit
baa1702 (""rtlwifi: btcoexist: Implement antenna selection"").
There were still problems, thus there were commit 0ff78ad
(""rtlwifi: rtl8723be: fix ant_sel code"") and commit 6d62269
(""rtlwifi: btcoexist: Fix antenna selection code""). Despite all these
attempts at fixing the problem, the code is not yet right. A proper
fix is important as there are now instances of laptops having
RTL8723DE chips with the same problem.
The module parameter ant_sel is used to control antenna number and path.
At present enum ANT_{X2,X1} is used to define the antenna number, but
this choice is not intuitive, thus change to a new enum ANT_{MAIN,AUX}
to make it more readable. This change showed examples where incorrect
values were used. It was also possible to remove a workaround in
halbtcoutsrc.c.
The experimental results with single antenna connected to specific path
are now as follows:
ant_sel  ANT_MAIN(#1)  ANT_AUX(#2)
0        -8            -62
1        -62           -10
2        -6            -60
Signed-off-by: Ping-Ke Shih pkshih@realtek.com
Fixes: c18d8f5 (""rtlwifi: rtl8723be: Add antenna select module parameter"")
Fixes: baa1702 (""rtlwifi: btcoexist: Implement antenna selection"")
Fixes: 0ff78ad (""rtlwifi: rtl8723be: fix ant_sel code"")
Fixes: 6d62269 (""rtlwifi: btcoexist: Fix antenna selection code"")
Cc: Stable stable@vger.kernel.org # 4.7+
Reviewed-by: Larry Finger Larry.Finger@lwfinger.net
Signed-off-by: Kalle Valo kvalo@codeaurora.org
https://phabricator.endlessm.com/T19890",True,{}
endlessm/linux,https://github.com/endlessm/linux,383,2018-05-04T22:51:50Z,2018-05-07T17:21:16Z,2018-05-07T17:21:19Z,MERGED,True,233,95,9,https://github.com/jprvita,T19890 eos3.4,4,[],https://github.com/endlessm/linux/pull/383,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/383,https://phabricator.endlessm.com/T19890,https://phabricator.endlessm.com/T19890,True,{}
endlessm/linux,https://github.com/endlessm/linux,384,2018-05-07T14:02:02Z,2018-05-08T15:13:09Z,2018-05-08T15:13:13Z,MERGED,True,39,0,1,https://github.com/mschiu77,mfd: intel-lpss: Add new quirk for ELAN touchpad on Coffee Lake,1,[],https://github.com/endlessm/linux/pull/384,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/384,"The ELAN1200 touchpad on ASUS X580GD (Intel(R) Core(TM) i5-8300H)
laptop run into probe fail as follows always.
i2c_hid i2c-ELAN1200:00: unexpected HID descriptor bcdVersion (0xff00)
i2c_hid: probe of i2c-ELAN1200:00 failed with error -22
However, the same touchpad on other Intel platforms work without
problems. According to the SCL signal output from oscilloscope,
the frequency of SCL is faster (around 635kHz) than expected. The
SCL high period is ~450ns, and the low period is ~1.15us. I2C fast
mode is expect to operate at 400kHz so ELAN claims the SCL high
duration is too short to read from I2C correctly. After lots of
different I2C timing parameters tested, we found what really
matters is HCNT value which causes the SCL high duration change.
This has been reported upstream, and this commit introduces a DMI
based quirk which adjust the I2C timing for specific ASUS Coffee
Lake laptops with problematic ELAN touchpad.
https://phabricator.endlessm.com/T22400
Signed-off-by: Chris Chiu chiu@endlessm.com","The ELAN1200 touchpad on ASUS X580GD (Intel(R) Core(TM) i5-8300H)
laptop run into probe fail as follows always.
i2c_hid i2c-ELAN1200:00: unexpected HID descriptor bcdVersion (0xff00)
i2c_hid: probe of i2c-ELAN1200:00 failed with error -22
However, the same touchpad on other Intel platforms work without
problems. According to the SCL signal output from oscilloscope,
the frequency of SCL is faster (around 635kHz) than expected. The
SCL high period is ~450ns, and the low period is ~1.15us. I2C fast
mode is expect to operate at 400kHz so ELAN claims the SCL high
duration is too short to read from I2C correctly. After lots of
different I2C timing parameters tested, we found what really
matters is HCNT value which causes the SCL high duration change.
This has been reported upstream, and this commit introduces a DMI
based quirk which adjust the I2C timing for specific ASUS Coffee
Lake laptops with problematic ELAN touchpad.
https://phabricator.endlessm.com/T22400
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,385,2018-05-14T18:46:39Z,2018-05-23T18:46:05Z,2018-05-23T18:46:08Z,MERGED,True,0,27,1,https://github.com/jprvita,"Revert ""RTL8723BE: Fix antenna selection for HP laptops""",1,[],https://github.com/endlessm/linux/pull/385,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/385,"This reverts commit f9cbd7e.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T22588","This reverts commit f9cbd7e.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T22588",True,{}
endlessm/linux,https://github.com/endlessm/linux,386,2018-05-16T21:55:59Z,2018-05-17T16:52:17Z,2018-05-17T16:52:20Z,MERGED,True,41,73,3,https://github.com/jprvita,Create new LED trigger rfkill-none and use it to drive the asus-wireless LED,5,[],https://github.com/endlessm/linux/pull/386,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/386,https://phabricator.endlessm.com/T22625,https://phabricator.endlessm.com/T22625,True,{}
endlessm/linux,https://github.com/endlessm/linux,387,2018-05-17T09:05:06Z,2018-05-18T21:18:59Z,2018-05-18T21:19:02Z,MERGED,True,88,34,2,https://github.com/starnight,Bluetooth: Add a new Realtek 8723DE ID 2ff8:b011,2,[],https://github.com/endlessm/linux/pull/387,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/387,"Without these patches we cannot turn on the Bluethooth adapter on ASUS E406MA.
T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=2ff8 ProdID=b011 Rev= 2.00
S:  Manufacturer=Realtek
S:  Product=802.11n WLAN Adapter
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T20726
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Without these patches we cannot turn on the Bluethooth adapter on ASUS E406MA.
T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=2ff8 ProdID=b011 Rev= 2.00
S:  Manufacturer=Realtek
S:  Product=802.11n WLAN Adapter
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T20726
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,387,2018-05-17T09:05:06Z,2018-05-18T21:18:59Z,2018-05-18T21:19:02Z,MERGED,True,88,34,2,https://github.com/starnight,Bluetooth: Add a new Realtek 8723DE ID 2ff8:b011,2,[],https://github.com/endlessm/linux/pull/387,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/387#issuecomment-389883738,"Without these patches we cannot turn on the Bluethooth adapter on ASUS E406MA.
T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=2ff8 ProdID=b011 Rev= 2.00
S:  Manufacturer=Realtek
S:  Product=802.11n WLAN Adapter
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T20726
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Your own commit has author:
From: dev 
Please fix to have your name and endless email
Also please add a separate commit with the USB ID 0bda:b009 for the system where T20726 was originally opened.",True,{}
endlessm/linux,https://github.com/endlessm/linux,387,2018-05-17T09:05:06Z,2018-05-18T21:18:59Z,2018-05-18T21:19:02Z,MERGED,True,88,34,2,https://github.com/starnight,Bluetooth: Add a new Realtek 8723DE ID 2ff8:b011,2,[],https://github.com/endlessm/linux/pull/387,https://github.com/starnight,3,https://github.com/endlessm/linux/pull/387#issuecomment-390148683,"Without these patches we cannot turn on the Bluethooth adapter on ASUS E406MA.
T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=2ff8 ProdID=b011 Rev= 2.00
S:  Manufacturer=Realtek
S:  Product=802.11n WLAN Adapter
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T20726
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Thanks for the review.  I missed configuration the git config.  I have fixed it and pushed again.
And, sure!  I will send another commit for the btusb device on the HP laptop.",True,{}
endlessm/linux,https://github.com/endlessm/linux,388,2018-05-23T03:43:57Z,2018-05-23T07:26:17Z,2018-05-23T07:26:47Z,MERGED,True,15,49,1,https://github.com/starnight,"Revert ""mfd: intel-lpss: Add new quirk for ELAN touchpad on Coffee Lake""",2,[],https://github.com/endlessm/linux/pull/388,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/388,"This reverts commit 76a2a17.
Upstream has new patch for this issue
https://patchwork.ozlabs.org/patch/916118/
https://phabricator.endlessm.com/T22486
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","This reverts commit 76a2a17.
Upstream has new patch for this issue
https://patchwork.ozlabs.org/patch/916118/
https://phabricator.endlessm.com/T22486
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,389,2018-05-24T03:39:43Z,2018-05-24T14:37:41Z,2018-05-24T14:42:05Z,MERGED,True,1,0,1,https://github.com/starnight,Bluetooth: Add a new Realtek 8723DE ID 0bda:b009,1,[],https://github.com/endlessm/linux/pull/389,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/389,"Without this patch we cannot turn on the Bluethooth adapter on HP
14-bs007la.
T:  Bus=01 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0bda ProdID=b009 Rev= 2.00
S:  Manufacturer=Realtek
S:  Product=802.11n WLAN Adapter
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T20726
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Without this patch we cannot turn on the Bluethooth adapter on HP
14-bs007la.
T:  Bus=01 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0bda ProdID=b009 Rev= 2.00
S:  Manufacturer=Realtek
S:  Product=802.11n WLAN Adapter
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T20726
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,389,2018-05-24T03:39:43Z,2018-05-24T14:37:41Z,2018-05-24T14:42:05Z,MERGED,True,1,0,1,https://github.com/starnight,Bluetooth: Add a new Realtek 8723DE ID 0bda:b009,1,[],https://github.com/endlessm/linux/pull/389,https://github.com/goodfellasthai,2,https://github.com/endlessm/linux/pull/389#issuecomment-391584789,"Without this patch we cannot turn on the Bluethooth adapter on HP
14-bs007la.
T:  Bus=01 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0bda ProdID=b009 Rev= 2.00
S:  Manufacturer=Realtek
S:  Product=802.11n WLAN Adapter
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T20726
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",HI not sure if this is the right place to leave a message but I am having a similar issue with the device rtl8821ce wifi works fine but bluetooth is not operational.  Is there a planned patch for this? Many thanks for you good and hard work.,True,{}
endlessm/linux,https://github.com/endlessm/linux,389,2018-05-24T03:39:43Z,2018-05-24T14:37:41Z,2018-05-24T14:42:05Z,MERGED,True,1,0,1,https://github.com/starnight,Bluetooth: Add a new Realtek 8723DE ID 0bda:b009,1,[],https://github.com/endlessm/linux/pull/389,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/389#issuecomment-391738573,"Without this patch we cannot turn on the Bluethooth adapter on HP
14-bs007la.
T:  Bus=01 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12   MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0bda ProdID=b009 Rev= 2.00
S:  Manufacturer=Realtek
S:  Product=802.11n WLAN Adapter
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T20726
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",@goodfellasthai If you are experiencing that problem with Endless OS please report it on https://community.endlessos.com. Otherwise the best would be to report a bug upstream in the kernel bugzilla: https://bugzilla.kernel.org/buglist.cgi?componnt=Bluetooth&product=Drivers&resolution=---.,True,{}
endlessm/linux,https://github.com/endlessm/linux,390,2018-05-29T13:01:24Z,2018-06-01T20:58:12Z,2018-06-01T20:59:21Z,MERGED,True,21,9,2,https://github.com/mschiu77,T22136,3,[],https://github.com/endlessm/linux/pull/390,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/390,"platform/x86: asus-wmi: Call new led hw_changed API on kbd brightness change
Make asus-wmi notify on hotkey kbd brightness changes, listen for
these brightness down/up/toggle events corresponds to Fn+F3/F4/F7
and call led_classdev_notify_brightness_hw_changed.
This will allow userspace to monitor (poll) for brightness changes
on the LED caused by the hotkey. Note that brightness toggle hotkey
would incremet the level of brightness if the max brightness > 1,
then toggle (off) the LED when it already reached the max level.
https://phabricator.endlessm.com/T22136
Signed-off-by: Chris Chiu chiu@endlessm.com","platform/x86: asus-wmi: Call new led hw_changed API on kbd brightness change
Make asus-wmi notify on hotkey kbd brightness changes, listen for
these brightness down/up/toggle events corresponds to Fn+F3/F4/F7
and call led_classdev_notify_brightness_hw_changed.
This will allow userspace to monitor (poll) for brightness changes
on the LED caused by the hotkey. Note that brightness toggle hotkey
would incremet the level of brightness if the max brightness > 1,
then toggle (off) the LED when it already reached the max level.
https://phabricator.endlessm.com/T22136
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,391,2018-06-07T08:06:08Z,2018-06-07T16:30:55Z,2018-06-07T16:30:58Z,MERGED,True,1,0,1,https://github.com/starnight,ALSA: hda/realtek - Enable headset mic of ASUS X705FD with ALC256,1,[],https://github.com/endlessm/linux/pull/391,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/391,"The ASUS laptop X705FD with ALC295 can't detect the headset microphone
until ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
https://phabricator.endlessm.com/T22841
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The ASUS laptop X705FD with ALC295 can't detect the headset microphone
until ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
https://phabricator.endlessm.com/T22841
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,392,2018-06-07T14:35:01Z,,2022-04-12T21:36:12Z,OPEN,False,1987710,6351,3843,https://github.com/mschiu77,T22136,1406,[],https://github.com/endlessm/linux/pull/392,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/392,,,True,{}
endlessm/linux,https://github.com/endlessm/linux,393,2018-06-08T06:00:01Z,2018-06-08T17:44:24Z,2018-06-08T17:44:27Z,MERGED,True,7,0,1,https://github.com/starnight,nouveau_drm: ASUS X560UD can't resume with nouveau,1,[],https://github.com/endlessm/linux/pull/393,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/393,"The NV GTX 1050M of X560UD cannot resume back from suspend with the
normal display when use the nouveau without setting the module parameter
noaccel.
Set the nouveau's module parameter noaccel to 1 can fix this problem.
https://phabricator.endlessm.com/T22813
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The NV GTX 1050M of X560UD cannot resume back from suspend with the
normal display when use the nouveau without setting the module parameter
noaccel.
Set the nouveau's module parameter noaccel to 1 can fix this problem.
https://phabricator.endlessm.com/T22813
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,394,2018-06-19T05:29:24Z,2018-06-22T06:47:22Z,2018-06-28T22:23:45Z,MERGED,True,14,0,1,https://github.com/starnight,nouveau_drm: Acer Predator Orion 5-100 can't resume with nouveau,1,[],https://github.com/endlessm/linux/pull/394,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/394,"The NV GTX 1050 Ti of Predator Orion 5-100 cannot resume back from
suspend with the normal display when use the nouveau without setting the
module parameters runpm and noaccel.
Set the nouveau's module parameters runpm to 0 and noaccel to 1 can fix
this problem.
https://phabricator.endlessm.com/T21605
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The NV GTX 1050 Ti of Predator Orion 5-100 cannot resume back from
suspend with the normal display when use the nouveau without setting the
module parameters runpm and noaccel.
Set the nouveau's module parameters runpm to 0 and noaccel to 1 can fix
this problem.
https://phabricator.endlessm.com/T21605
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,395,2018-06-25T01:38:45Z,2018-06-25T06:51:05Z,2018-06-26T13:19:27Z,MERGED,True,28,0,1,https://github.com/mschiu77,nouveau_drm: disable runpm and accel on ASUS X530UN and X705FD,1,[],https://github.com/endlessm/linux/pull/395,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/395,"The NV GTX 1050M of X705FD and MX150 on X530UN cannot resume back
from suspend with the normal display.
Setting the module parameters noaccel=1 and runpm=0 fix it.
https://phabricator.endlessm.com/T22813
https://phabricator.endlessm.com/T23033
Signed-off-by: Chris Chiu chiu@endlessm.com","The NV GTX 1050M of X705FD and MX150 on X530UN cannot resume back
from suspend with the normal display.
Setting the module parameters noaccel=1 and runpm=0 fix it.
https://phabricator.endlessm.com/T22813
https://phabricator.endlessm.com/T23033
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,396,2018-07-03T07:43:05Z,2018-07-03T15:48:04Z,2018-07-03T15:48:07Z,MERGED,True,14,0,1,https://github.com/starnight,r8822be: Disable ASPM of r8822be on ASUS X530UN,1,[],https://github.com/endlessm/linux/pull/396,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/396,"The laptop ASUS X530UN's rtl8822be cannnot find any WiFi access point
with enabled ASPM.
[    8.591333] r8822be: module is from the staging directory, the
quality is unknown, you have been warned.
[    8.593122] r8822be 0000:02:00.0: enabling device (0000 -> 0003)
[    8.669163] r8822be: Using firmware rtlwifi/rtl8822befw.bin
[    9.289939] r8822be: rtlwifi: wireless switch is on
[   10.056426] r8822be 0000:02:00.0 wlp2s0: renamed from wlan0
...
[   11.952534] r8822be: halmac_init_hal failed
[   11.955933] r8822be: halmac_init_hal failed
[   11.956227] r8822be: halmac_init_hal failed
[   22.007942] r8822be: halmac_init_hal failed
Disabling ASPM for rtl8822be on ASUS X530UN can fix this bug.
https://phabricator.endlessm.com/T23038
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The laptop ASUS X530UN's rtl8822be cannnot find any WiFi access point
with enabled ASPM.
[    8.591333] r8822be: module is from the staging directory, the
quality is unknown, you have been warned.
[    8.593122] r8822be 0000:02:00.0: enabling device (0000 -> 0003)
[    8.669163] r8822be: Using firmware rtlwifi/rtl8822befw.bin
[    9.289939] r8822be: rtlwifi: wireless switch is on
[   10.056426] r8822be 0000:02:00.0 wlp2s0: renamed from wlan0
...
[   11.952534] r8822be: halmac_init_hal failed
[   11.955933] r8822be: halmac_init_hal failed
[   11.956227] r8822be: halmac_init_hal failed
[   22.007942] r8822be: halmac_init_hal failed
Disabling ASPM for rtl8822be on ASUS X530UN can fix this bug.
https://phabricator.endlessm.com/T23038
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,397,2018-07-05T07:35:48Z,2018-07-05T12:33:59Z,2018-07-06T03:47:08Z,MERGED,True,11,0,1,https://github.com/starnight,ALSA: hda/realtek - Enable headset mic of Acer X2660G with ALC662,1,[],https://github.com/endlessm/linux/pull/397,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/397,"The Acer desktop X2660G with ALC662 can't detect the headset microphone
until ALC662_FIXUP_ACER_X2660G_HEADSET_MODE quirk applied.
https://phabricator.endlessm.com/T23133
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Acer desktop X2660G with ALC662 can't detect the headset microphone
until ALC662_FIXUP_ACER_X2660G_HEADSET_MODE quirk applied.
https://phabricator.endlessm.com/T23133
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,398,2018-07-09T07:20:17Z,2018-07-09T13:02:43Z,2018-07-09T13:02:46Z,MERGED,True,1,0,1,https://github.com/mschiu77,ALSA: hda/realtek - Enable headset mic of ASUS X430UN with ALC256,1,[],https://github.com/endlessm/linux/pull/398,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/398,"The ASUS laptop X430UN with ALC256 can't detect the headset microphone
until ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
Signed-off-by: Chris Chiu chiu@endlessm.com","The ASUS laptop X430UN with ALC256 can't detect the headset microphone
until ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,399,2018-07-17T16:37:40Z,2018-07-17T17:10:26Z,2018-07-17T17:10:29Z,MERGED,True,244,200,3,https://github.com/jprvita,"Revert ""kbuild: deb-pkg: split generating packaging and build""",1,[],https://github.com/endlessm/linux/pull/399,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/399,"This reverts commit b41d920.
This change breaks building of cross-toolchain-base_v18, which we need
to build cross-compilers for arm64. Debian's latest version of
cross-toolchain-base (27 atm) is still built against linux 4.16. We can
revert it for now and drop the revert in the future once
cross-toolchain-based is fixed to build against Linux 4.17+ in Debian.
https://phabricator.endlessm.com/T21144","This reverts commit b41d920.
This change breaks building of cross-toolchain-base_v18, which we need
to build cross-compilers for arm64. Debian's latest version of
cross-toolchain-base (27 atm) is still built against linux 4.16. We can
revert it for now and drop the revert in the future once
cross-toolchain-based is fixed to build against Linux 4.17+ in Debian.
https://phabricator.endlessm.com/T21144",True,{}
endlessm/linux,https://github.com/endlessm/linux,400,2018-07-19T06:03:25Z,2018-07-19T19:56:34Z,2018-07-19T19:56:36Z,MERGED,True,1,0,1,https://github.com/starnight,ALSA: hda/realtek - Enable headphone of Acer N2510G with ALC269VC,1,[],https://github.com/endlessm/linux/pull/400,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/400,"The Acer desktop N2510G with ALC269VC can't detect the front headphone
until ALC269VC_FIXUP_NL3_SECOND_JACK quirk applied.
https://phabricator.endlessm.com/T23311
Signed-off-by: Chris Chiu chiu@endlessm.com
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Acer desktop N2510G with ALC269VC can't detect the front headphone
until ALC269VC_FIXUP_NL3_SECOND_JACK quirk applied.
https://phabricator.endlessm.com/T23311
Signed-off-by: Chris Chiu chiu@endlessm.com
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,401,2018-07-19T17:02:52Z,2018-07-19T18:29:31Z,2018-07-19T18:29:34Z,MERGED,True,122,0,3,https://github.com/jprvita,Import linux-meta packages,1,[],https://github.com/endlessm/linux/pull/401,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/401,"Import meta packages from linux-meta that map to the versioned packages
built by the linux source package. This way we can get rid of linux-meta
and don't need to bump its ABI version on every rebase.
https://phabricator.endlessm.com/T16504","Import meta packages from linux-meta that map to the versioned packages
built by the linux source package. This way we can get rid of linux-meta
and don't need to bump its ABI version on every rebase.
https://phabricator.endlessm.com/T16504",True,{}
endlessm/linux,https://github.com/endlessm/linux,402,2018-07-23T06:40:33Z,2018-07-25T13:48:53Z,2018-07-25T13:48:56Z,MERGED,True,14,0,1,https://github.com/starnight,nouveau_drm: Disable runpm and accel on Acer Nitro N50-100,1,[],https://github.com/endlessm/linux/pull/402,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/402,"The NV GTX 1050Ti of Acer Nitro N50-100 cannot resume back from suspend
with the normal display.
Setting the module parameters noaccel=1 and runpm=0 fix it.
https://phabricator.endlessm.com/T23367
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The NV GTX 1050Ti of Acer Nitro N50-100 cannot resume back from suspend
with the normal display.
Setting the module parameters noaccel=1 and runpm=0 fix it.
https://phabricator.endlessm.com/T23367
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,403,2018-07-24T07:14:11Z,2018-07-25T07:00:21Z,2018-07-26T02:22:28Z,MERGED,True,13,0,1,https://github.com/starnight,ALSA: hda/realtek - Enable audio jacks of Acer vCopperbox with ALC269VC,1,[],https://github.com/endlessm/linux/pull/403,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/403,"The Acer desktop vCopperbox with ALC269VC cannot detect the MIC of
headset, the line out and internal speaker until
ALC269VC_FIXUP_ACER_VCOPPERBOX_PINS quirk applied.
https://phabricator.endlessm.com/T21388
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Acer desktop vCopperbox with ALC269VC cannot detect the MIC of
headset, the line out and internal speaker until
ALC269VC_FIXUP_ACER_VCOPPERBOX_PINS quirk applied.
https://phabricator.endlessm.com/T21388
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,404,2018-07-26T07:13:41Z,2018-07-26T12:49:23Z,2018-07-26T12:49:25Z,MERGED,True,1,0,1,https://github.com/starnight,drm/amdgpu: Read back max backlight value at boot,1,[],https://github.com/endlessm/linux/pull/404,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/404,"[Why]
If there is no program explicitly setting the backlight
brightness (for example, during a minimal install of linux), the
hardware defaults to maximum brightness but the backlight_device
defaults to 0 value.  Thus, settings displays the wrong brightness
value.
[How]
When creating the backlight device, set brightness to max
https://phabricator.endlessm.com/T21064
Signed-off-by: David Francis David.Francis@amd.com","[Why]
If there is no program explicitly setting the backlight
brightness (for example, during a minimal install of linux), the
hardware defaults to maximum brightness but the backlight_device
defaults to 0 value.  Thus, settings displays the wrong brightness
value.
[How]
When creating the backlight device, set brightness to max
https://phabricator.endlessm.com/T21064
Signed-off-by: David Francis David.Francis@amd.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,405,2018-08-08T07:06:36Z,2018-08-08T09:22:41Z,2018-08-08T09:22:44Z,MERGED,True,18,0,1,https://github.com/starnight, ALSA: hda/realtek: Enable audio jacks of ASUS UX333FA/UX433FN/UX533FD with ALC294,2,[],https://github.com/endlessm/linux/pull/405,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/405,"The ASUS UX333FA, UX433FN and UX533FD with ALC294 cannot detect the
headset MIC and output through the internal speaker and the headphone
until ALC294_FIXUP_ASUS_SPK_NOISE quirk applied.
https://phabricator.endlessm.com/T23381
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The ASUS UX333FA, UX433FN and UX533FD with ALC294 cannot detect the
headset MIC and output through the internal speaker and the headphone
until ALC294_FIXUP_ASUS_SPK_NOISE quirk applied.
https://phabricator.endlessm.com/T23381
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,406,2018-08-10T09:14:34Z,2018-08-15T02:47:52Z,2018-08-15T02:47:55Z,MERGED,True,33,11,1,https://github.com/starnight,asus-wmi: Disable kbd_led change notification for booting and resuming,1,[],https://github.com/endlessm/linux/pull/406,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/406,"The asus_wmi will send the keyboard backlight brightness change
notification during booting, resuming and pressing function key.  The
notification pops up the keyboard backlight OSD on the screen.  However,
poping up OSD during booting and resuming is not necessary and confuses
users.
This patch adds the keyboard brightness change reasons and makes sure
only send keyboard backlight brightness change nitification by pressing
the function key.
https://phabricator.endlessm.com/T23126
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The asus_wmi will send the keyboard backlight brightness change
notification during booting, resuming and pressing function key.  The
notification pops up the keyboard backlight OSD on the screen.  However,
poping up OSD during booting and resuming is not necessary and confuses
users.
This patch adds the keyboard brightness change reasons and makes sure
only send keyboard backlight brightness change nitification by pressing
the function key.
https://phabricator.endlessm.com/T23126
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,407,2018-08-13T14:44:27Z,2018-08-15T08:15:33Z,2018-08-15T08:15:36Z,MERGED,True,4,0,1,https://github.com/mschiu77,USB: Force disconnect Intel bluetooth adapter during suspend,1,[],https://github.com/endlessm/linux/pull/407,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/407,"After going into S3/s2idle suspend, sometimes there will be a GPE
event from Embedded Controller which indicates a wake up signal from
the USB controller. Then the system will wake up unexpectedly. After
removing the btusb driver or just turn off bluetooth, it goses to
suspend just fine. However, there's neither paired nor connected
devices which could possibly wake up the system when it reproduces.
Quirks like USB_QUIRK_RESET_RESUME, USB_QUIRK_RESET, USB_QUIRK_NO_LPM,
USB_QUIRK_IGNORE_REMOTE_WAKEUP do no help.
Apply USB_QUIRK_DISCONNECT_SUSPEND to avoid the issue until the root
cause found and addressed.
https://phabricator.endlessm.com/T23395
Signed-off-by: Chris Chiu chiu@endlessm.com","After going into S3/s2idle suspend, sometimes there will be a GPE
event from Embedded Controller which indicates a wake up signal from
the USB controller. Then the system will wake up unexpectedly. After
removing the btusb driver or just turn off bluetooth, it goses to
suspend just fine. However, there's neither paired nor connected
devices which could possibly wake up the system when it reproduces.
Quirks like USB_QUIRK_RESET_RESUME, USB_QUIRK_RESET, USB_QUIRK_NO_LPM,
USB_QUIRK_IGNORE_REMOTE_WAKEUP do no help.
Apply USB_QUIRK_DISCONNECT_SUSPEND to avoid the issue until the root
cause found and addressed.
https://phabricator.endlessm.com/T23395
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,408,2018-08-14T09:36:08Z,2018-08-14T10:46:33Z,2018-08-29T06:54:09Z,MERGED,True,17,0,1,https://github.com/starnight,net: r8169: Disable MSI and MSI-X for r8169 on ASUS X441UAR,1,[],https://github.com/endlessm/linux/pull/408,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/408,"The ethernet adapter on ASUS X441UAR does not comes back after resumes
until the MSI and MSI-X features of r8169 module in Linux 4.17.3 are
disabled.
https://phabricator.endlessm.com/T23514
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The ethernet adapter on ASUS X441UAR does not comes back after resumes
until the MSI and MSI-X features of r8169 module in Linux 4.17.3 are
disabled.
https://phabricator.endlessm.com/T23514
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,409,2018-08-14T10:25:48Z,2018-08-14T10:33:15Z,2018-08-14T13:36:25Z,MERGED,True,94,7,11,https://github.com/starnight,drm/i915: Fix PIPESTAT irq ack on i965/g4x,2,[],https://github.com/endlessm/linux/pull/409,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/409,"These two upstream commits:

drm/i915: Fix PIPESTAT irq ack on i965/g4x ea6ac2b5cf18c50321208952f3ff91810174926d
drm/i915: Allow DBLSCAN user modes with eDP/LVDS/DSI d85341e000f14c18abec5d97a008432d4cd30426

fix ""Asus X441UAR SKU2: Internal screen not display after switch to Mirror mode"" issue.
https://phabricator.endlessm.com/T23517","These two upstream commits:

drm/i915: Fix PIPESTAT irq ack on i965/g4x ea6ac2b5cf18c50321208952f3ff91810174926d
drm/i915: Allow DBLSCAN user modes with eDP/LVDS/DSI d85341e000f14c18abec5d97a008432d4cd30426

fix ""Asus X441UAR SKU2: Internal screen not display after switch to Mirror mode"" issue.
https://phabricator.endlessm.com/T23517",True,{}
endlessm/linux,https://github.com/endlessm/linux,410,2018-08-17T08:57:56Z,2018-08-20T07:38:24Z,2018-08-20T07:38:26Z,MERGED,True,7,0,1,https://github.com/starnight,nouveau_drm: Disable accel on ASUS UX533FD,1,[],https://github.com/endlessm/linux/pull/410,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/410,"The NV GTX 1050M of ASUS UX533FD cannot resume back from suspend with
the normal display.
Using nouveau with parameter noaccel=1 fixes it.
https://phabricator.endlessm.com/T23227
https://phabricator.endlessm.com/T23291
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The NV GTX 1050M of ASUS UX533FD cannot resume back from suspend with
the normal display.
Using nouveau with parameter noaccel=1 fixes it.
https://phabricator.endlessm.com/T23227
https://phabricator.endlessm.com/T23291
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,411,2018-08-27T07:49:03Z,2018-08-27T08:18:51Z,2018-08-27T08:18:54Z,MERGED,True,7,0,1,https://github.com/starnight,nouveau_drm: Disable accel on ASUS X570ZD,1,[],https://github.com/endlessm/linux/pull/411,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/411,"The NV GTX 1050M of ASUS X570ZD cannot resume back from suspend with
the normal display.
Using nouveau with parameter noaccel=1 fixes it.
https://phabricator.endlessm.com/T22624
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The NV GTX 1050M of ASUS X570ZD cannot resume back from suspend with
the normal display.
Using nouveau with parameter noaccel=1 fixes it.
https://phabricator.endlessm.com/T22624
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,412,2018-08-29T06:55:16Z,2018-09-03T09:11:29Z,2018-09-14T00:02:37Z,MERGED,True,20,0,1,https://github.com/starnight,hda/snd_hda_intel: Disable power save control on ASUS X505ZA,1,[],https://github.com/endlessm/linux/pull/412,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/412,"The ASUS X505ZA HDMI's audio cannot be detected until apply this quirk
which disables the power save control of snd_hda_intel module.
https://phabricator.endlessm.com/T23644
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The ASUS X505ZA HDMI's audio cannot be detected until apply this quirk
which disables the power save control of snd_hda_intel module.
https://phabricator.endlessm.com/T23644
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,413,2018-08-31T05:40:28Z,2018-08-31T09:25:16Z,2018-09-14T00:02:37Z,MERGED,True,19,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable MICs of Acer SWIFT with ALC256,1,[],https://github.com/endlessm/linux/pull/413,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/413,"The Acer SWIFT with ALC256 cannot detect the headset MIC and internal
MIC until quirks in this patch applied.
https://phabricator.endlessm.com/T23377
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Acer SWIFT with ALC256 cannot detect the headset MIC and internal
MIC until quirks in this patch applied.
https://phabricator.endlessm.com/T23377
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,414,2018-09-04T23:15:12Z,2018-09-06T05:14:49Z,2018-09-06T05:14:52Z,CLOSED,False,6,6,6,https://github.com/ramcq,config: enable SCSI MQ by default,1,[],https://github.com/endlessm/linux/pull/414,https://github.com/ramcq,1,https://github.com/endlessm/linux/pull/414,"The BFQ scheduler is implemented on top of the newer multiqueue block scheduler
framework in the kernel, which SCSI has been ported to use but does not use by
default. To be able to use the BFQ scheduler, this must first be enabled. It
can in theory be enabled with the module parameter scsi_mod.use_mq_default=1
but once the SCSI host is initialised, changing this parameter doesn't change
the scheduler framework they use.
Given that we don't have any succinct way to edit our kernel commandline on
deployed systems and scsi_mod is built in, and the effect of this config option
is identical, it's easier to simply turn it on.
Note that a side-effect of this is that CFQ (the in-kernel default) IO
scheduler is no longer available to these SCSI hosts - however the Endless udev
rule will always enable BFQ on any disk device where it's available, so
MQ-incapable devices such as (currently) MMC will stick with the in-kernel
default of CFQ.
https://phabricator.endlessm.com/T23725","The BFQ scheduler is implemented on top of the newer multiqueue block scheduler
framework in the kernel, which SCSI has been ported to use but does not use by
default. To be able to use the BFQ scheduler, this must first be enabled. It
can in theory be enabled with the module parameter scsi_mod.use_mq_default=1
but once the SCSI host is initialised, changing this parameter doesn't change
the scheduler framework they use.
Given that we don't have any succinct way to edit our kernel commandline on
deployed systems and scsi_mod is built in, and the effect of this config option
is identical, it's easier to simply turn it on.
Note that a side-effect of this is that CFQ (the in-kernel default) IO
scheduler is no longer available to these SCSI hosts - however the Endless udev
rule will always enable BFQ on any disk device where it's available, so
MQ-incapable devices such as (currently) MMC will stick with the in-kernel
default of CFQ.
https://phabricator.endlessm.com/T23725",True,{}
endlessm/linux,https://github.com/endlessm/linux,414,2018-09-04T23:15:12Z,2018-09-06T05:14:49Z,2018-09-06T05:14:52Z,CLOSED,False,6,6,6,https://github.com/ramcq,config: enable SCSI MQ by default,1,[],https://github.com/endlessm/linux/pull/414,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/414#issuecomment-418967118,"The BFQ scheduler is implemented on top of the newer multiqueue block scheduler
framework in the kernel, which SCSI has been ported to use but does not use by
default. To be able to use the BFQ scheduler, this must first be enabled. It
can in theory be enabled with the module parameter scsi_mod.use_mq_default=1
but once the SCSI host is initialised, changing this parameter doesn't change
the scheduler framework they use.
Given that we don't have any succinct way to edit our kernel commandline on
deployed systems and scsi_mod is built in, and the effect of this config option
is identical, it's easier to simply turn it on.
Note that a side-effect of this is that CFQ (the in-kernel default) IO
scheduler is no longer available to these SCSI hosts - however the Endless udev
rule will always enable BFQ on any disk device where it's available, so
MQ-incapable devices such as (currently) MMC will stick with the in-kernel
default of CFQ.
https://phabricator.endlessm.com/T23725","amended to only modify amd64 (like our other config changes - reduces annoying delta with ubuntu) and pushed, thanks",True,{}
endlessm/linux,https://github.com/endlessm/linux,415,2018-09-11T03:13:21Z,2018-09-11T03:40:40Z,2018-09-11T03:40:48Z,MERGED,True,32,4,2,https://github.com/mschiu77,drm/i915: re-check the hotplug with a delayed work,1,[],https://github.com/endlessm/linux/pull/415,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/415,"I have few ASUS laptops, X705FD(Intel i7-8565), X560UD(Intel i5-8250U)
and X530UN(Intel i7-8550U) share the same problem. The HDMI connector
status stays 'connected' even the HDMI cable has been unplugged.
Then the status in sysfs would never change since then until we
do 'xrandr' to reprobe the devices. It would also cause the audio
output path cannot correctly swicth based on the connector status.
This commit kicks off a delayed work when the status remains unchanged
in the first hotplug event handling, which may not be the perfect
timing in some special cases.
https://phabricator.endlessm.com/T22838
Signed-off-by: Chris Chiu chiu@endlessm.com","I have few ASUS laptops, X705FD(Intel i7-8565), X560UD(Intel i5-8250U)
and X530UN(Intel i7-8550U) share the same problem. The HDMI connector
status stays 'connected' even the HDMI cable has been unplugged.
Then the status in sysfs would never change since then until we
do 'xrandr' to reprobe the devices. It would also cause the audio
output path cannot correctly swicth based on the connector status.
This commit kicks off a delayed work when the status remains unchanged
in the first hotplug event handling, which may not be the perfect
timing in some special cases.
https://phabricator.endlessm.com/T22838
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,416,2018-09-15T01:43:18Z,2018-09-17T04:49:26Z,2018-09-17T04:49:29Z,MERGED,True,1544,247,42,https://github.com/jprvita,Backport and enable PSI by default,10,[],https://github.com/endlessm/linux/pull/416,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/416,"Backport the Pressure Stall Information patches that are now on linux-next.
https://phabricator.endlessm.com/T19943","Backport the Pressure Stall Information patches that are now on linux-next.
https://phabricator.endlessm.com/T19943",True,{}
endlessm/linux,https://github.com/endlessm/linux,417,2018-09-17T12:54:12Z,2018-10-09T03:16:57Z,2018-10-09T03:17:00Z,CLOSED,False,14,0,1,https://github.com/mschiu77,nouveau_drm: Disable accel/runpm on ASUS UX433FN,1,[],https://github.com/endlessm/linux/pull/417,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/417,"The NV MX150 (GP108) on UX433FN fails to resume from suspend and
also hangs on shutdown.
Setting the module parameters noaccel=1 and runpm=0 will fix it.
https://phabricator.endlessm.com/T23280
Signed-off-by: Chris Chiu chiu@endlessm.com","The NV MX150 (GP108) on UX433FN fails to resume from suspend and
also hangs on shutdown.
Setting the module parameters noaccel=1 and runpm=0 will fix it.
https://phabricator.endlessm.com/T23280
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,418,2018-09-18T09:21:06Z,2018-09-19T04:22:08Z,2018-09-19T04:22:10Z,MERGED,True,68,42,4,https://github.com/starnight, ALSA: hda - Enable runtime PM only for discrete GPU,2,[],https://github.com/endlessm/linux/pull/418,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/418,"The recent change of vga_switcheroo allowed the runtime PM for
HD-audio on AMD GPUs, but this also resulted in a regression.  When
the HD-audio controller driver gets runtime-suspended, HD-audio link
is turned off, and the hotplug notification is ignored.  This leads to
the inconsistent audio state (the connection isn't notified and ELD is
ignored).
The best fix would be to implement the proper ELD notification via the
audio component, but it's still not ready.  As a quick workaround,
this patch adds the check of runtime_idle and allows the runtime
suspend only when the vga_switcheroo is bound with discrete GPU.
That is, a system with a single GPU and APU would be again without
runtime PM to keep the HD-audio link for the hotplug notification and
ELD read out.
Also, the codec->auto_runtime_pm flag is set only for the discrete GPU
at the time GPU gets bound via vga_switcheroo (i.e. only dGPU is
forcibly runtime-PM enabled), so that APU can still get the ELD
notification.
For identifying which GPU is bound, a new vga_switcheroo client
callback, gpu_bound, is implemented.  The vga_switcheroo simply calls
this when GPU is bound, and tells whether it's dGPU or APU.
https://phabricator.endlessm.com/T23732
Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=200945
Fixes: 07f4f97 (""vga_switcheroo: Use device link for HDA controller"")
Reported-by: Jian-Hong Pan jian-hong@endlessm.com
Tested-by: Jian-Hong Pan jian-hong@endlessm.com
Acked-by: Lukas Wunner lukas@wunner.de
Signed-off-by: Takashi Iwai tiwai@suse.de","The recent change of vga_switcheroo allowed the runtime PM for
HD-audio on AMD GPUs, but this also resulted in a regression.  When
the HD-audio controller driver gets runtime-suspended, HD-audio link
is turned off, and the hotplug notification is ignored.  This leads to
the inconsistent audio state (the connection isn't notified and ELD is
ignored).
The best fix would be to implement the proper ELD notification via the
audio component, but it's still not ready.  As a quick workaround,
this patch adds the check of runtime_idle and allows the runtime
suspend only when the vga_switcheroo is bound with discrete GPU.
That is, a system with a single GPU and APU would be again without
runtime PM to keep the HD-audio link for the hotplug notification and
ELD read out.
Also, the codec->auto_runtime_pm flag is set only for the discrete GPU
at the time GPU gets bound via vga_switcheroo (i.e. only dGPU is
forcibly runtime-PM enabled), so that APU can still get the ELD
notification.
For identifying which GPU is bound, a new vga_switcheroo client
callback, gpu_bound, is implemented.  The vga_switcheroo simply calls
this when GPU is bound, and tells whether it's dGPU or APU.
https://phabricator.endlessm.com/T23732
Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=200945
Fixes: 07f4f97 (""vga_switcheroo: Use device link for HDA controller"")
Reported-by: Jian-Hong Pan jian-hong@endlessm.com
Tested-by: Jian-Hong Pan jian-hong@endlessm.com
Acked-by: Lukas Wunner lukas@wunner.de
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,419,2018-09-26T13:11:45Z,2018-09-27T01:40:48Z,2018-09-27T01:40:52Z,MERGED,True,1,0,1,https://github.com/mschiu77,ALSA: hda/realtek: Fix mic issue on Acer AIO Veriton Z4660G,1,[],https://github.com/endlessm/linux/pull/419,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/419,"Acer AIO Veriton Z4660G with ALC286 codec has issue with the input
from external microphones connecting via 'Front Mic' jack. The fixup
ALC286_FIXUP_ACER_AIO_MIC_NO_PRESENCE enables the jack sensing of
the headset and fix the audio input issue of external microphone.
https://phabricator.endlessm.com/T23888
Signed-off-by: Chris Chiu chiu@endlessm.com","Acer AIO Veriton Z4660G with ALC286 codec has issue with the input
from external microphones connecting via 'Front Mic' jack. The fixup
ALC286_FIXUP_ACER_AIO_MIC_NO_PRESENCE enables the jack sensing of
the headset and fix the audio input issue of external microphone.
https://phabricator.endlessm.com/T23888
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,420,2018-10-04T04:53:54Z,2018-10-15T15:51:59Z,2018-10-15T15:52:03Z,MERGED,True,3,3,2,https://github.com/jprvita,asus-nb-wmi: Handle the display toggle hotkey,3,[],https://github.com/endlessm/linux/pull/420,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/420,"Handle the display toggle hotkey on Asus devices.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T20914","Handle the display toggle hotkey on Asus devices.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T20914",True,{}
endlessm/linux,https://github.com/endlessm/linux,421,2018-10-11T07:35:42Z,2018-10-12T04:48:00Z,2018-10-12T04:48:03Z,MERGED,True,17,0,1,https://github.com/starnight,radeon: Disable runtime pm on Acer Veriton Z4660G,1,[],https://github.com/endlessm/linux/pull/421,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/421,"Radeon on the desktop like Acer Veriton Z4660G hits the errors during
booting which makes the Xorg cannot start.
[   31.576037] [drm:atom_op_jump [radeon]] ERROR atombios stuck in
loop for more than 5secs aborting
[   31.576058] [drm:atom_execute_table_locked [radeon]] ERROR atombios
stuck executing 67C0 (len 254, WS 0, PS 4) @ 0x67CE
[   31.576064] [drm:atom_execute_table_locked [radeon]] ERROR atombios
stuck executing 612C (len 78, WS 12, PS 8) @ 0x6165
[   31.928696] radeon 0000:01:00.0: Wait for MC idle timedout !
[   32.099173] radeon 0000:01:00.0: Wait for MC idle timedout !
[   32.105505] radeon 0000:01:00.0: WB enabled
[   32.105506] radeon 0000:01:00.0: fence driver on ring 0 use gpu addr
0x0000000080000c00 and cpu addr 0x00000000789d04f1
[   32.105507] radeon 0000:01:00.0: fence driver on ring 1 use gpu addr
0x0000000080000c04 and cpu addr 0x00000000e97b01fe
[   32.105508] radeon 0000:01:00.0: fence driver on ring 2 use gpu addr
0x0000000080000c08 and cpu addr 0x00000000d4f9b704
[   32.105509] radeon 0000:01:00.0: fence driver on ring 3 use gpu addr
0x0000000080000c0c and cpu addr 0x000000003c3a5095
[   32.105509] radeon 0000:01:00.0: fence driver on ring 4 use gpu addr
0x0000000080000c10 and cpu addr 0x0000000039af488d
[   32.631109] [drm:r600_ring_test [radeon]] ERROR radeon: ring 0 test
failed (scratch(0x850C)=0xCAFEDEAD)
[   32.631119] [drm:si_resume [radeon]] ERROR si startup failed on
resume
This patch disbles the radeon's runtime pm to fix the issue.
https://phabricator.endlessm.com/T23948
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Radeon on the desktop like Acer Veriton Z4660G hits the errors during
booting which makes the Xorg cannot start.
[   31.576037] [drm:atom_op_jump [radeon]] ERROR atombios stuck in
loop for more than 5secs aborting
[   31.576058] [drm:atom_execute_table_locked [radeon]] ERROR atombios
stuck executing 67C0 (len 254, WS 0, PS 4) @ 0x67CE
[   31.576064] [drm:atom_execute_table_locked [radeon]] ERROR atombios
stuck executing 612C (len 78, WS 12, PS 8) @ 0x6165
[   31.928696] radeon 0000:01:00.0: Wait for MC idle timedout !
[   32.099173] radeon 0000:01:00.0: Wait for MC idle timedout !
[   32.105505] radeon 0000:01:00.0: WB enabled
[   32.105506] radeon 0000:01:00.0: fence driver on ring 0 use gpu addr
0x0000000080000c00 and cpu addr 0x00000000789d04f1
[   32.105507] radeon 0000:01:00.0: fence driver on ring 1 use gpu addr
0x0000000080000c04 and cpu addr 0x00000000e97b01fe
[   32.105508] radeon 0000:01:00.0: fence driver on ring 2 use gpu addr
0x0000000080000c08 and cpu addr 0x00000000d4f9b704
[   32.105509] radeon 0000:01:00.0: fence driver on ring 3 use gpu addr
0x0000000080000c0c and cpu addr 0x000000003c3a5095
[   32.105509] radeon 0000:01:00.0: fence driver on ring 4 use gpu addr
0x0000000080000c10 and cpu addr 0x0000000039af488d
[   32.631109] [drm:r600_ring_test [radeon]] ERROR radeon: ring 0 test
failed (scratch(0x850C)=0xCAFEDEAD)
[   32.631119] [drm:si_resume [radeon]] ERROR si startup failed on
resume
This patch disbles the radeon's runtime pm to fix the issue.
https://phabricator.endlessm.com/T23948
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,422,2018-10-22T06:05:26Z,2018-10-22T07:05:46Z,2018-10-22T07:06:06Z,MERGED,True,4,0,1,https://github.com/dsd,i915: disable framebuffer compression on GeminiLake,1,[],https://github.com/endlessm/linux/pull/422,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/422,"On many (all?) the Gemini Lake systems we work with, there is frequent
momentary graphical corruption at the top of the screen, and it
seems that disabling framebuffer compression can avoid this.
Disable fbc on GeminiLake until a solution is found.
https://bugs.freedesktop.org/show_bug.cgi?id=108085
https://phabricator.endlessm.com/T21409","On many (all?) the Gemini Lake systems we work with, there is frequent
momentary graphical corruption at the top of the screen, and it
seems that disabling framebuffer compression can avoid this.
Disable fbc on GeminiLake until a solution is found.
https://bugs.freedesktop.org/show_bug.cgi?id=108085
https://phabricator.endlessm.com/T21409",True,{}
endlessm/linux,https://github.com/endlessm/linux,423,2018-11-03T06:47:28Z,2018-11-13T06:46:46Z,2018-11-15T09:36:01Z,CLOSED,False,5,1,1,https://github.com/jprvita,"ACPI / battery: Fix reporting ""Not charging"" when capacity is 100%",1,[],https://github.com/endlessm/linux/pull/423,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/423,"Commit 19fffc8 fixed reporting
""Discharging"" on some machines when AC was connected but the battery was
not charging. But now on these machines the battery status is reported
as ""Not charging"" even when the battery is fully charged.
This commit takes the battery capacity into consideration when checking
if ""Not charging"" should be returned and ""Full"" is returned when the
capacity is 100%.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T24044","Commit 19fffc8 fixed reporting
""Discharging"" on some machines when AC was connected but the battery was
not charging. But now on these machines the battery status is reported
as ""Not charging"" even when the battery is fully charged.
This commit takes the battery capacity into consideration when checking
if ""Not charging"" should be returned and ""Full"" is returned when the
capacity is 100%.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T24044",True,{}
endlessm/linux,https://github.com/endlessm/linux,423,2018-11-03T06:47:28Z,2018-11-13T06:46:46Z,2018-11-15T09:36:01Z,CLOSED,False,5,1,1,https://github.com/jprvita,"ACPI / battery: Fix reporting ""Not charging"" when capacity is 100%",1,[],https://github.com/endlessm/linux/pull/423,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/423#issuecomment-438156093,"Commit 19fffc8 fixed reporting
""Discharging"" on some machines when AC was connected but the battery was
not charging. But now on these machines the battery status is reported
as ""Not charging"" even when the battery is fully charged.
This commit takes the battery capacity into consideration when checking
if ""Not charging"" should be returned and ""Full"" is returned when the
capacity is 100%.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T24044","Not accepted upstream, but I think the userspace work done here mitigates the issue well enough.",True,{}
endlessm/linux,https://github.com/endlessm/linux,423,2018-11-03T06:47:28Z,2018-11-13T06:46:46Z,2018-11-15T09:36:01Z,CLOSED,False,5,1,1,https://github.com/jprvita,"ACPI / battery: Fix reporting ""Not charging"" when capacity is 100%",1,[],https://github.com/endlessm/linux/pull/423,https://github.com/khfeng,3,https://github.com/endlessm/linux/pull/423#issuecomment-438968987,"Commit 19fffc8 fixed reporting
""Discharging"" on some machines when AC was connected but the battery was
not charging. But now on these machines the battery status is reported
as ""Not charging"" even when the battery is fully charged.
This commit takes the battery capacity into consideration when checking
if ""Not charging"" should be returned and ""Full"" is returned when the
capacity is 100%.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T24044","Hi @dsd,
Can you point out where the userspace work is? I'd like to backport it to Ubuntu.
Thanks!",True,{}
endlessm/linux,https://github.com/endlessm/linux,423,2018-11-03T06:47:28Z,2018-11-13T06:46:46Z,2018-11-15T09:36:01Z,CLOSED,False,5,1,1,https://github.com/jprvita,"ACPI / battery: Fix reporting ""Not charging"" when capacity is 100%",1,[],https://github.com/endlessm/linux/pull/423,https://github.com/dsd,4,https://github.com/endlessm/linux/pull/423#issuecomment-438970715,"Commit 19fffc8 fixed reporting
""Discharging"" on some machines when AC was connected but the battery was
not charging. But now on these machines the battery status is reported
as ""Not charging"" even when the battery is fully charged.
This commit takes the battery capacity into consideration when checking
if ""Not charging"" should be returned and ""Full"" is returned when the
capacity is 100%.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T24044","https://gitlab.freedesktop.org/upower/upower/merge_requests/19
https://gitlab.gnome.org/GNOME/gnome-shell/merge_requests/278
https://gitlab.gnome.org/GNOME/gnome-control-center/merge_requests/266",True,{}
endlessm/linux,https://github.com/endlessm/linux,423,2018-11-03T06:47:28Z,2018-11-13T06:46:46Z,2018-11-15T09:36:01Z,CLOSED,False,5,1,1,https://github.com/jprvita,"ACPI / battery: Fix reporting ""Not charging"" when capacity is 100%",1,[],https://github.com/endlessm/linux/pull/423,https://github.com/khfeng,5,https://github.com/endlessm/linux/pull/423#issuecomment-438977330,"Commit 19fffc8 fixed reporting
""Discharging"" on some machines when AC was connected but the battery was
not charging. But now on these machines the battery status is reported
as ""Not charging"" even when the battery is fully charged.
This commit takes the battery capacity into consideration when checking
if ""Not charging"" should be returned and ""Full"" is returned when the
capacity is 100%.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T24044",@dsd Thanks!,True,{}
endlessm/linux,https://github.com/endlessm/linux,424,2018-11-08T18:56:32Z,,2022-04-12T21:36:12Z,OPEN,False,2009016,1633,3151,https://github.com/jprvita,Intel 8000+ family: Load WiFi and Bluetooth drivers in a mutually-exclusive way,486,[],https://github.com/endlessm/linux/pull/424,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/424,"On machines with the Intel 8260 WiFi + Bluetooth combo adapter we are experiencing firmware loading failures on the Bluetooth adapter from time to time. Doing the loading operations in a mutually-exclusive fashion using a mutex avoids the problem.
https://phabricator.endlessm.com/T22801","On machines with the Intel 8260 WiFi + Bluetooth combo adapter we are experiencing firmware loading failures on the Bluetooth adapter from time to time. Doing the loading operations in a mutually-exclusive fashion using a mutex avoids the problem.
https://phabricator.endlessm.com/T22801",True,{}
endlessm/linux,https://github.com/endlessm/linux,425,2018-11-13T09:27:26Z,2018-11-14T04:54:05Z,2018-11-14T04:54:07Z,MERGED,True,2,0,1,https://github.com/mschiu77,ALSA: hda/realtek: Fix mic issue on Acer AIO Veriton Z4860G/Z6860G,1,[],https://github.com/endlessm/linux/pull/425,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/425,"Acer AIO Veriton Z4860G/Z6860G with the same ALC286 codec has issues
with the input from external microphone. The issue can be fixed by
the fixup ALC286_FIXUP_ACER_AIO_MIC_NO_PRESENCE for Veriton Z4660G.
https://phabricator.endlessm.com/T24392
https://phabricator.endlessm.com/T24398
Signed-off-by: Chris Chiu chiu@endlessm.com","Acer AIO Veriton Z4860G/Z6860G with the same ALC286 codec has issues
with the input from external microphone. The issue can be fixed by
the fixup ALC286_FIXUP_ACER_AIO_MIC_NO_PRESENCE for Veriton Z4660G.
https://phabricator.endlessm.com/T24392
https://phabricator.endlessm.com/T24398
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,426,2018-11-13T10:10:23Z,2018-11-14T05:17:53Z,2018-11-14T05:18:01Z,MERGED,True,4,0,1,https://github.com/mschiu77,ALSA: hda/realtek - Enable headset mic of ASUS P5440FF with ALC256,1,[],https://github.com/endlessm/linux/pull/426,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/426,"The ASUS laptop P5440FF with ALC256 can't detect the headset microphone
until ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
https://phabricator.endlessm.com/T24390
Signed-off-by: Chris Chiu chiu@endlessm.com","The ASUS laptop P5440FF with ALC256 can't detect the headset microphone
until ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
https://phabricator.endlessm.com/T24390
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,427,2018-11-20T09:49:48Z,2018-11-21T03:45:38Z,2018-11-21T03:45:41Z,MERGED,True,14,0,1,https://github.com/starnight,radeon: Disable runtime pm on Acer Veriton Z4860G/Z6860G,1,[],https://github.com/endlessm/linux/pull/427,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/427,"Some Acer AIO desktops like Veriton Z4860G and Z6860G cannot boot into
desktop environment without disabling runtime PM of the AMD Radeon VGA
card R5-330.
https://phabricator.endlessm.com/T23948
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Some Acer AIO desktops like Veriton Z4860G and Z6860G cannot boot into
desktop environment without disabling runtime PM of the AMD Radeon VGA
card R5-330.
https://phabricator.endlessm.com/T23948
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,428,2018-11-27T03:07:19Z,2018-11-28T05:42:16Z,2018-11-28T05:42:19Z,MERGED,True,1,1,1,https://github.com/jprvita,config: Enable FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER,1,[],https://github.com/endlessm/linux/pull/428,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/428,"This is needed for having a flicker-free boot.
https://phabricator.endlessm.com/T24265","This is needed for having a flicker-free boot.
https://phabricator.endlessm.com/T24265",True,{}
endlessm/linux,https://github.com/endlessm/linux,429,2018-12-04T03:28:13Z,2018-12-05T06:33:15Z,2018-12-05T06:33:18Z,MERGED,True,6,1,1,https://github.com/mschiu77,HID: input: support Microsoft wireless radio control hotkey,2,[],https://github.com/endlessm/linux/pull/429,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/429,"The ASUS laptops start to support the airplane mode radio management
to replace the original mechanism of airplane mode toggle hotkey.
On the ASUS P5440FF, it presents as a HID device connecting via
I2C, named i2c-AMPD0001. When pressing it, the Embedded Controller
send hid report via I2C and switch the airplane mode indicator LED
based on the status.
However, it's not working because it fails to be identified as a
hidinput device. It fails in hidinput_connect() due to the macro
IS_INPUT_APPLICATION doesn't have HID_GD_WIRELESS_RADIO_CTLS as
a legit application code.
It's easy to add the HID I2C vendor and product id to the quirk
list and apply HID_QUIRK_HIDINPUT_FORCE to make it work. But it
makes more sense to support it as a generic input application.
Signed-off-by: Chris Chiu chiu@endlessm.com","The ASUS laptops start to support the airplane mode radio management
to replace the original mechanism of airplane mode toggle hotkey.
On the ASUS P5440FF, it presents as a HID device connecting via
I2C, named i2c-AMPD0001. When pressing it, the Embedded Controller
send hid report via I2C and switch the airplane mode indicator LED
based on the status.
However, it's not working because it fails to be identified as a
hidinput device. It fails in hidinput_connect() due to the macro
IS_INPUT_APPLICATION doesn't have HID_GD_WIRELESS_RADIO_CTLS as
a legit application code.
It's easy to add the HID I2C vendor and product id to the quirk
list and apply HID_QUIRK_HIDINPUT_FORCE to make it work. But it
makes more sense to support it as a generic input application.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,430,2018-12-06T06:36:01Z,2018-12-06T09:01:22Z,2018-12-06T09:01:24Z,MERGED,True,24,13,1,https://github.com/starnight,ALSA: hda/realtek: Enable internal speaker of ASUS UX333FA with ALC294,1,[],https://github.com/endlessm/linux/pull/430,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/430,"Apply more HDA verbs of ALC294 to enable the internal speaker of ASUS
UX333FA.
https://phabricator.endlessm.com/T24542
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Apply more HDA verbs of ALC294 to enable the internal speaker of ASUS
UX333FA.
https://phabricator.endlessm.com/T24542
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,431,2018-12-07T02:59:45Z,2018-12-21T07:54:29Z,2018-12-21T07:54:32Z,MERGED,True,11,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset mic of Acer C20-820 with ALC269VC,1,[],https://github.com/endlessm/linux/pull/431,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/431,"The Acer Aspire C20-820 AIO's audio (1025:1065) with ALC269VC can't
detect the headset microphone until ALC269VC_FIXUP_ACER_HEADSET_MIC
quirk maps the NID 0x18 as the headset mic pin.
https://phabricator.endlessm.com/T24554
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Acer Aspire C20-820 AIO's audio (1025:1065) with ALC269VC can't
detect the headset microphone until ALC269VC_FIXUP_ACER_HEADSET_MIC
quirk maps the NID 0x18 as the headset mic pin.
https://phabricator.endlessm.com/T24554
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,432,2018-12-07T10:18:31Z,2018-12-10T03:00:21Z,2018-12-10T03:00:23Z,MERGED,True,5,7,1,https://github.com/starnight,ALSA: hda/realtek: Modfiy the HDA verbs in ALC294_FIXUP_ASUS_SPK_NOISE,1,[],https://github.com/endlessm/linux/pull/432,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/432,"Modify the HDA verbs in ALC294_FIXUP_ASUS_SPK_NOISE entry of ALC294
according to Realtek's suggestion https://lkml.org/lkml/2018/12/7/72
Also modify the quirk's name from ALC294_FIXUP_ASUS_SPK_NOISE to
ALC294_FIXUP_ASUS_SPK.
https://phabricator.endlessm.com/T24542
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Modify the HDA verbs in ALC294_FIXUP_ASUS_SPK_NOISE entry of ALC294
according to Realtek's suggestion https://lkml.org/lkml/2018/12/7/72
Also modify the quirk's name from ALC294_FIXUP_ASUS_SPK_NOISE to
ALC294_FIXUP_ASUS_SPK.
https://phabricator.endlessm.com/T24542
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,433,2018-12-10T06:11:01Z,2018-12-10T06:24:05Z,2018-12-10T06:24:08Z,MERGED,True,24,15,1,https://github.com/starnight,ALSA: hda/realtek: Modfiy the HDA verbs in ALC294_FIXUP_ASUS_SPK_NOISE,2,[],https://github.com/endlessm/linux/pull/433,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/433,"ALSA: hda/realtek: Modfiy the HDA verbs in ALC294_FIXUP_ASUS_SPK_NOISE
Modify the HDA verbs in ALC294_FIXUP_ASUS_SPK_NOISE entry of ALC294
according to Realtek's suggestion https://lkml.org/lkml/2018/12/7/72
Also modify the quirk's name from ALC294_FIXUP_ASUS_SPK_NOISE to
ALC294_FIXUP_ASUS_SPK.
https://phabricator.endlessm.com/T24542
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","ALSA: hda/realtek: Modfiy the HDA verbs in ALC294_FIXUP_ASUS_SPK_NOISE
Modify the HDA verbs in ALC294_FIXUP_ASUS_SPK_NOISE entry of ALC294
according to Realtek's suggestion https://lkml.org/lkml/2018/12/7/72
Also modify the quirk's name from ALC294_FIXUP_ASUS_SPK_NOISE to
ALC294_FIXUP_ASUS_SPK.
https://phabricator.endlessm.com/T24542
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,434,2018-12-10T22:13:48Z,2019-01-22T19:56:18Z,2019-01-22T19:56:19Z,CLOSED,False,1,0,1,https://github.com/ndnenkov,Fix rtl8821ce wireless driver build,1,[],https://github.com/endlessm/linux/pull/434,https://github.com/ndnenkov,1,https://github.com/endlessm/linux/pull/434,"Suppresses C compilation warning when running make.
./rtl8821ce/os_dep/linux/os_intfs.c:1325:22: error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
  .ndo_select_queue = rtw_select_queue,

I understand this is sloppy. I didn't care about getting to the bottom of it, I just wanted to make it work.","Suppresses C compilation warning when running make.
./rtl8821ce/os_dep/linux/os_intfs.c:1325:22: error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
  .ndo_select_queue = rtw_select_queue,

I understand this is sloppy. I didn't care about getting to the bottom of it, I just wanted to make it work.",True,{}
endlessm/linux,https://github.com/endlessm/linux,434,2018-12-10T22:13:48Z,2019-01-22T19:56:18Z,2019-01-22T19:56:19Z,CLOSED,False,1,0,1,https://github.com/ndnenkov,Fix rtl8821ce wireless driver build,1,[],https://github.com/endlessm/linux/pull/434,https://github.com/eos-shell-build,2,https://github.com/endlessm/linux/pull/434#issuecomment-445994489,"Suppresses C compilation warning when running make.
./rtl8821ce/os_dep/linux/os_intfs.c:1325:22: error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
  .ndo_select_queue = rtw_select_queue,

I understand this is sloppy. I didn't care about getting to the bottom of it, I just wanted to make it work.",I don't recognize the submitter as a member of @endlessm. Can somebody in @endlessm verify the patch? See https://phabricator.endlessm.com/w/software/build/ci-integration/#pull-requests for more details.,True,{}
endlessm/linux,https://github.com/endlessm/linux,434,2018-12-10T22:13:48Z,2019-01-22T19:56:18Z,2019-01-22T19:56:19Z,CLOSED,False,1,0,1,https://github.com/ndnenkov,Fix rtl8821ce wireless driver build,1,[],https://github.com/endlessm/linux/pull/434,https://github.com/huashuolee,3,https://github.com/endlessm/linux/pull/434#issuecomment-449917997,"Suppresses C compilation warning when running make.
./rtl8821ce/os_dep/linux/os_intfs.c:1325:22: error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
  .ndo_select_queue = rtw_select_queue,

I understand this is sloppy. I didn't care about getting to the bottom of it, I just wanted to make it work.","I don't know whether these is risk in it. However, it works for me indeed.",True,{}
endlessm/linux,https://github.com/endlessm/linux,434,2018-12-10T22:13:48Z,2019-01-22T19:56:18Z,2019-01-22T19:56:19Z,CLOSED,False,1,0,1,https://github.com/ndnenkov,Fix rtl8821ce wireless driver build,1,[],https://github.com/endlessm/linux/pull/434,https://github.com/jprvita,4,https://github.com/endlessm/linux/pull/434#issuecomment-456540421,"Suppresses C compilation warning when running make.
./rtl8821ce/os_dep/linux/os_intfs.c:1325:22: error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
  .ndo_select_queue = rtw_select_queue,

I understand this is sloppy. I didn't care about getting to the bottom of it, I just wanted to make it work.","rtl8821ce is a vendor-provided driver that we integrated in the Endless' kernel, which is still based on Linux 4.19. Pieces of this repository are not intended to be used with other kernels, and we are not the authors or maintainers of this driver, so this PR does not make sense here.",True,{}
endlessm/linux,https://github.com/endlessm/linux,435,2018-12-20T00:14:16Z,2018-12-20T02:44:09Z,2018-12-20T02:44:12Z,MERGED,True,1,1,1,https://github.com/jprvita,fixup! config: Enable FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER,1,[],https://github.com/endlessm/linux/pull/435,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/435,"Update the annotations to reflect what we have been shipping. When we
first enabled this flag it was not present in the config annotations.
https://phabricator.endlessm.com/T24265","Update the annotations to reflect what we have been shipping. When we
first enabled this flag it was not present in the config annotations.
https://phabricator.endlessm.com/T24265",True,{}
endlessm/linux,https://github.com/endlessm/linux,436,2018-12-21T06:02:50Z,2018-12-21T07:30:27Z,2018-12-21T07:30:41Z,MERGED,True,1,2,1,https://github.com/starnight,ALSA: hda: Fix the mic control when headset is plugged,1,[],https://github.com/endlessm/linux/pull/436,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/436,"The internal microphone will not be listed on the report of ""amixer -D
sysdefault"" if the pin node of headset microphone has auto detection
feature.  When the headset is plugged and user chooses the internal
microphone as the input source, system only gets sound from headset's
microphone.
This patch makes internal microphone be listed whether the headset
microphone pin node is auto detection or not.
https://phabricator.endlessm.com/T24554
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The internal microphone will not be listed on the report of ""amixer -D
sysdefault"" if the pin node of headset microphone has auto detection
feature.  When the headset is plugged and user chooses the internal
microphone as the input source, system only gets sound from headset's
microphone.
This patch makes internal microphone be listed whether the headset
microphone pin node is auto detection or not.
https://phabricator.endlessm.com/T24554
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,437,2018-12-25T09:03:16Z,2018-12-26T03:11:59Z,2018-12-26T03:12:01Z,MERGED,True,1,1,1,https://github.com/starnight,ALSA: hda/realtek: Enable the headset mic auto detection for ASUS laptops,1,[],https://github.com/endlessm/linux/pull/437,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/437,"The headset mic of ASUS laptops like UX533FD, UX433FN and UX333FA, whose
CODEC is Realtek ALC294 has jack auto detection feature.  This patch
enable the feature.
https://phabricator.endlessm.com/T24542
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The headset mic of ASUS laptops like UX533FD, UX433FN and UX333FA, whose
CODEC is Realtek ALC294 has jack auto detection feature.  This patch
enable the feature.
https://phabricator.endlessm.com/T24542
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,438,2019-01-08T03:17:56Z,2019-01-23T03:32:54Z,2019-01-23T03:32:54Z,CLOSED,False,3,3,1,https://github.com/jprvita,drm/i915: Clear inteldrmfb's framebuffer on probe,1,[],https://github.com/endlessm/linux/pull/438,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/438,"The firmware framebuffer is re-used as inteldrmfb's framebuffer to have
a seamless firmware -> bootloader -> efifb -> inteldrmfb transition.
Since inteldrmfb's framebuffer is also used as a fallback when clients
remove the scan-out buffer, we end-up having the BGRT image or whatever
else may have been left-over on that framebuffer shown when a drm client
removes its own framebuffer, as that is when the fallback framebuffer is
displayed. In practice this happens on shutdown, when the user session
and GDM remove their framebuffers and before Plymouth installs its own
framebuffer using the DRM API to show the shutdown splash, and on logout
if GDM's greeter is not active, when the user session and GDM remove
their framebuffers and before GDM's greeter starts again and installs
its own framebuffer to show the user selection menu.
To work around this problem, we can clear inteldrmfb's framebuffer when
creating it, so we have a clean black screen as fallback.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com","The firmware framebuffer is re-used as inteldrmfb's framebuffer to have
a seamless firmware -> bootloader -> efifb -> inteldrmfb transition.
Since inteldrmfb's framebuffer is also used as a fallback when clients
remove the scan-out buffer, we end-up having the BGRT image or whatever
else may have been left-over on that framebuffer shown when a drm client
removes its own framebuffer, as that is when the fallback framebuffer is
displayed. In practice this happens on shutdown, when the user session
and GDM remove their framebuffers and before Plymouth installs its own
framebuffer using the DRM API to show the shutdown splash, and on logout
if GDM's greeter is not active, when the user session and GDM remove
their framebuffers and before GDM's greeter starts again and installs
its own framebuffer to show the user selection menu.
To work around this problem, we can clear inteldrmfb's framebuffer when
creating it, so we have a clean black screen as fallback.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,438,2019-01-08T03:17:56Z,2019-01-23T03:32:54Z,2019-01-23T03:32:54Z,CLOSED,False,3,3,1,https://github.com/jprvita,drm/i915: Clear inteldrmfb's framebuffer on probe,1,[],https://github.com/endlessm/linux/pull/438,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/438#issuecomment-456656899,"The firmware framebuffer is re-used as inteldrmfb's framebuffer to have
a seamless firmware -> bootloader -> efifb -> inteldrmfb transition.
Since inteldrmfb's framebuffer is also used as a fallback when clients
remove the scan-out buffer, we end-up having the BGRT image or whatever
else may have been left-over on that framebuffer shown when a drm client
removes its own framebuffer, as that is when the fallback framebuffer is
displayed. In practice this happens on shutdown, when the user session
and GDM remove their framebuffers and before Plymouth installs its own
framebuffer using the DRM API to show the shutdown splash, and on logout
if GDM's greeter is not active, when the user session and GDM remove
their framebuffers and before GDM's greeter starts again and installs
its own framebuffer to show the user selection menu.
To work around this problem, we can clear inteldrmfb's framebuffer when
creating it, so we have a clean black screen as fallback.
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com",We decided to take a different approach: endlessm/eos-boot-helper#251,True,{}
endlessm/linux,https://github.com/endlessm/linux,439,2019-01-08T08:08:32Z,2019-01-08T19:26:25Z,2019-01-08T19:26:37Z,MERGED,True,202026,2,241,https://github.com/dsd,Add rtl8723bu wifi driver,4,[],https://github.com/endlessm/linux/pull/439,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/439,https://phabricator.endlessm.com/T25056,https://phabricator.endlessm.com/T25056,True,{}
endlessm/linux,https://github.com/endlessm/linux,440,2019-01-08T08:10:15Z,2019-01-09T00:19:36Z,2019-01-09T00:19:36Z,MERGED,True,202026,2,241,https://github.com/dsd, Add rtl8723bu wifi driver,4,[],https://github.com/endlessm/linux/pull/440,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/440,https://phabricator.endlessm.com/T25056,https://phabricator.endlessm.com/T25056,True,{}
endlessm/linux,https://github.com/endlessm/linux,441,2019-01-11T09:15:12Z,2019-01-16T03:17:24Z,2019-01-16T03:17:55Z,MERGED,True,5,3,6,https://github.com/starnight,Enable Endless Linux kernel armhf build,2,[],https://github.com/endlessm/linux/pull/441,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/441,"https://phabricator.endlessm.com/T25000
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","https://phabricator.endlessm.com/T25000
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,442,2019-01-21T13:07:34Z,2019-01-22T19:55:17Z,2019-01-22T19:55:18Z,CLOSED,False,1,1,1,https://github.com/An1000kg,rtl8821ce fixing error in kernel 4.20.2-107,1,[],https://github.com/endlessm/linux/pull/442,https://github.com/An1000kg,1,https://github.com/endlessm/linux/pull/442,"I am running Solus and have to build this driver manually at every kernel update. After update 4.20.2-107 i got the error message:
drivers/net/wireless/rtl8821ce/os_dep/linux/ioctl_cfg80211.c:339:2: error: implicit declaration of function ‘get_monotonic_boottime’; did you mean ‘getboottime’? [-Werror=implicit-function-declaration]
so I changed the function from get_monotonic_boottime to getboottime in accordance with the message. This is my first time contributing, sorry if I made any mistakes.","I am running Solus and have to build this driver manually at every kernel update. After update 4.20.2-107 i got the error message:
drivers/net/wireless/rtl8821ce/os_dep/linux/ioctl_cfg80211.c:339:2: error: implicit declaration of function ‘get_monotonic_boottime’; did you mean ‘getboottime’? [-Werror=implicit-function-declaration]
so I changed the function from get_monotonic_boottime to getboottime in accordance with the message. This is my first time contributing, sorry if I made any mistakes.",True,{}
endlessm/linux,https://github.com/endlessm/linux,442,2019-01-21T13:07:34Z,2019-01-22T19:55:17Z,2019-01-22T19:55:18Z,CLOSED,False,1,1,1,https://github.com/An1000kg,rtl8821ce fixing error in kernel 4.20.2-107,1,[],https://github.com/endlessm/linux/pull/442,https://github.com/eos-shell-build,2,https://github.com/endlessm/linux/pull/442#issuecomment-456068096,"I am running Solus and have to build this driver manually at every kernel update. After update 4.20.2-107 i got the error message:
drivers/net/wireless/rtl8821ce/os_dep/linux/ioctl_cfg80211.c:339:2: error: implicit declaration of function ‘get_monotonic_boottime’; did you mean ‘getboottime’? [-Werror=implicit-function-declaration]
so I changed the function from get_monotonic_boottime to getboottime in accordance with the message. This is my first time contributing, sorry if I made any mistakes.",I don't recognize the submitter as a member of @endlessm. Can somebody in @endlessm verify the patch? See https://phabricator.endlessm.com/w/software/build/ci-integration/#pull-requests for more details.,True,{}
endlessm/linux,https://github.com/endlessm/linux,442,2019-01-21T13:07:34Z,2019-01-22T19:55:17Z,2019-01-22T19:55:18Z,CLOSED,False,1,1,1,https://github.com/An1000kg,rtl8821ce fixing error in kernel 4.20.2-107,1,[],https://github.com/endlessm/linux/pull/442,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/442#issuecomment-456540078,"I am running Solus and have to build this driver manually at every kernel update. After update 4.20.2-107 i got the error message:
drivers/net/wireless/rtl8821ce/os_dep/linux/ioctl_cfg80211.c:339:2: error: implicit declaration of function ‘get_monotonic_boottime’; did you mean ‘getboottime’? [-Werror=implicit-function-declaration]
so I changed the function from get_monotonic_boottime to getboottime in accordance with the message. This is my first time contributing, sorry if I made any mistakes.","rtl8821ce is a vendor-provided driver that we integrated in the Endless' kernel, which is still based on Linux 4.19. Pieces of this repository are not intended to be used with other kernels, and we are not the authors or maintainers of this driver, so this PR does not make sense here.
In any case, you probably want to use ktime_get_boottime instead, which is the new API replacing get_monotonic_boottime on Linux 4.20+ and the patch should probably check the kernel version to decide the right API to use. But again, we are not the authors or maintainers of this patch, so the patch should be submitted elsewhere (if anywhere).",True,{}
endlessm/linux,https://github.com/endlessm/linux,443,2019-01-25T04:46:45Z,2019-01-25T05:08:48Z,2022-04-13T03:57:03Z,MERGED,True,12,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset audio of Acer Crux_WL with ALC255,1,[],https://github.com/endlessm/linux/pull/443,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/443,"The headset pins of Acer TravelMate X514-51T of Crux_WL series do not
work correctly until ALC255_FIXUP_ACER_CRUX_MIC_NO_PRESENCE quirk is
applied.
https://phabricator.endlessm.com/T25184
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The headset pins of Acer TravelMate X514-51T of Crux_WL series do not
work correctly until ALC255_FIXUP_ACER_CRUX_MIC_NO_PRESENCE quirk is
applied.
https://phabricator.endlessm.com/T25184
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,444,2019-01-25T08:06:25Z,2019-03-20T08:09:48Z,2022-04-13T03:57:17Z,CLOSED,False,1781029,9301,3597,https://github.com/starnight,ALSA: hda/realtek: Fix headset audio of Acer Crux_WL with ALC255,1672,[],https://github.com/endlessm/linux/pull/444,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/444,"ALSA: hda/realtek: Fix headset audio of Acer Crux_WL with ALC255
The headset pins of Acer TravelMate X514-51T of Crux_WL series do not
work correctly until ALC255_FIXUP_ACER_CRUX_MIC_NO_PRESENCE quirk is
applied.
The values of NID 0x19 and 0x21 refer to the values on Windows.  But the
bit 0 of MISC field for NID 0x19 must be set with Linux, otherwise the
headset MIC will not be turned on.
The NID 0x1a is a internal DMIC which uses Intel SST as the driver on
Windows.  But it is not fully implemented with Linux yet.  However, it
must be set to enable the headset MIC.
https://phabricator.endlessm.com/T25184
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","ALSA: hda/realtek: Fix headset audio of Acer Crux_WL with ALC255
The headset pins of Acer TravelMate X514-51T of Crux_WL series do not
work correctly until ALC255_FIXUP_ACER_CRUX_MIC_NO_PRESENCE quirk is
applied.
The values of NID 0x19 and 0x21 refer to the values on Windows.  But the
bit 0 of MISC field for NID 0x19 must be set with Linux, otherwise the
headset MIC will not be turned on.
The NID 0x1a is a internal DMIC which uses Intel SST as the driver on
Windows.  But it is not fully implemented with Linux yet.  However, it
must be set to enable the headset MIC.
https://phabricator.endlessm.com/T25184
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,444,2019-01-25T08:06:25Z,2019-03-20T08:09:48Z,2022-04-13T03:57:17Z,CLOSED,False,1781029,9301,3597,https://github.com/starnight,ALSA: hda/realtek: Fix headset audio of Acer Crux_WL with ALC255,1672,[],https://github.com/endlessm/linux/pull/444,https://github.com/starnight,2,https://github.com/endlessm/linux/pull/444#issuecomment-474728103,"ALSA: hda/realtek: Fix headset audio of Acer Crux_WL with ALC255
The headset pins of Acer TravelMate X514-51T of Crux_WL series do not
work correctly until ALC255_FIXUP_ACER_CRUX_MIC_NO_PRESENCE quirk is
applied.
The values of NID 0x19 and 0x21 refer to the values on Windows.  But the
bit 0 of MISC field for NID 0x19 must be set with Linux, otherwise the
headset MIC will not be turned on.
The NID 0x1a is a internal DMIC which uses Intel SST as the driver on
Windows.  But it is not fully implemented with Linux yet.  However, it
must be set to enable the headset MIC.
https://phabricator.endlessm.com/T25184
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","We have the patch https://patchwork.kernel.org/patch/10850837/ for it.  So, close this pull request.",True,{}
endlessm/linux,https://github.com/endlessm/linux,445,2019-02-19T07:29:49Z,2019-02-19T07:36:24Z,2019-02-22T08:27:23Z,MERGED,True,4,1,1,https://github.com/starnight,ALSA: hda/realtek: Enable audio jacks of ASUS UX362FA with ALC294,1,[],https://github.com/endlessm/linux/pull/445,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/445,"The ASUS UX362FA with ALC294 cannot detect the headset MIC and outputs
through the internal speaker and the headphone.  This issue can be fixed
by the quirk in the commit 4e05110 ALSA: hda/realtek: Enable audio
jacks of ASUS UX533FD with ALC294.
Besides, ASUS UX362FA and UX533FD have the same audio initial pin config
values.  So, this patch replaces SND_PCI_QUIRK of UX533FD with a new
SND_HDA_PIN_QUIRK which benefits both UX362FA and UX533FD.
https://phabricator.endlessm.com/T25475
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The ASUS UX362FA with ALC294 cannot detect the headset MIC and outputs
through the internal speaker and the headphone.  This issue can be fixed
by the quirk in the commit 4e05110 ALSA: hda/realtek: Enable audio
jacks of ASUS UX533FD with ALC294.
Besides, ASUS UX362FA and UX533FD have the same audio initial pin config
values.  So, this patch replaces SND_PCI_QUIRK of UX533FD with a new
SND_HDA_PIN_QUIRK which benefits both UX362FA and UX533FD.
https://phabricator.endlessm.com/T25475
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,446,2019-02-22T07:27:15Z,2019-02-22T08:48:04Z,2019-02-22T08:48:06Z,MERGED,True,21,0,1,https://github.com/starnight,x86/reboot: Use efi reboot for Acer TravelMate X514-51T,1,[],https://github.com/endlessm/linux/pull/446,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/446,"Laptops like Acer TravelMate X514-51T cannot reboot (hang in the BIOS
POST when reboot) until set it as efi reboot.
https://phabricator.endlessm.com/T25190
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Laptops like Acer TravelMate X514-51T cannot reboot (hang in the BIOS
POST when reboot) until set it as efi reboot.
https://phabricator.endlessm.com/T25190
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,447,2019-02-22T08:30:14Z,2019-02-22T08:40:46Z,2019-02-22T08:40:48Z,MERGED,True,12,8,1,https://github.com/starnight,ALSA: hda/realtek: Enable audio jacks of ASUS UX362FA with ALC294,1,[],https://github.com/endlessm/linux/pull/447,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/447,"The ASUS UX362FA with ALC294 cannot detect the headset MIC and outputs
through the internal speaker and the headphone.  This issue can be fixed
by the quirk in the commit 4e05110 ALSA: hda/realtek: Enable audio
jacks of ASUS UX533FD with ALC294.
Besides, ASUS UX362FA and UX533FD have the same audio initial pin config
values.  So, this patch replaces SND_PCI_QUIRK of UX533FD with a new
SND_HDA_PIN_QUIRK which benefits both UX362FA and UX533FD.
https://phabricator.endlessm.com/T25475
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The ASUS UX362FA with ALC294 cannot detect the headset MIC and outputs
through the internal speaker and the headphone.  This issue can be fixed
by the quirk in the commit 4e05110 ALSA: hda/realtek: Enable audio
jacks of ASUS UX533FD with ALC294.
Besides, ASUS UX362FA and UX533FD have the same audio initial pin config
values.  So, this patch replaces SND_PCI_QUIRK of UX533FD with a new
SND_HDA_PIN_QUIRK which benefits both UX362FA and UX533FD.
https://phabricator.endlessm.com/T25475
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,448,2019-02-27T05:57:02Z,2019-03-07T05:44:35Z,2019-03-07T05:44:40Z,MERGED,True,1,1,1,https://github.com/dsd,fixup! ALSA: hda/realtek: Enable headset audio of Acer Crux_WL with A…,1,[],https://github.com/endlessm/linux/pull/448,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/448,"…LC255
https://phabricator.endlessm.com/T25184","…LC255
https://phabricator.endlessm.com/T25184",True,{}
endlessm/linux,https://github.com/endlessm/linux,449,2019-03-04T14:01:10Z,2019-03-07T16:29:41Z,2019-03-07T16:29:45Z,MERGED,True,60,0,1,https://github.com/mschiu77,pinctrl:intel: New quirk to save HOSTSW_OWN for ASUS laptops,1,[],https://github.com/endlessm/linux/pull/449,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/449,"The touchpad of the ASUS laptops E403NA, X540NA, X541NA are not
responsive after suspend/resume. The following error message
shows after resume.
i2c_hid i2c-ELAN1200:00: failed to reset device.
On these laptops, the touchpad interrupt is connected via a GPIO
pin which is controlled by Intel pinctrl. After system resumes,
the GPIO is in ACPI mode and no longer works as an IRQ.
Introduce a new quirk here by saving HOSTSW_OWN register during
suspend and restore at resume.
https://phabricator.endlessm.com/T14379
Signed-off-by: Chris Chiu chiu@endlessm.com","The touchpad of the ASUS laptops E403NA, X540NA, X541NA are not
responsive after suspend/resume. The following error message
shows after resume.
i2c_hid i2c-ELAN1200:00: failed to reset device.
On these laptops, the touchpad interrupt is connected via a GPIO
pin which is controlled by Intel pinctrl. After system resumes,
the GPIO is in ACPI mode and no longer works as an IRQ.
Introduce a new quirk here by saving HOSTSW_OWN register during
suspend and restore at resume.
https://phabricator.endlessm.com/T14379
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,449,2019-03-04T14:01:10Z,2019-03-07T16:29:41Z,2019-03-07T16:29:45Z,MERGED,True,60,0,1,https://github.com/mschiu77,pinctrl:intel: New quirk to save HOSTSW_OWN for ASUS laptops,1,[],https://github.com/endlessm/linux/pull/449,https://github.com/mschiu77,2,https://github.com/endlessm/linux/pull/449#issuecomment-469945811,"The touchpad of the ASUS laptops E403NA, X540NA, X541NA are not
responsive after suspend/resume. The following error message
shows after resume.
i2c_hid i2c-ELAN1200:00: failed to reset device.
On these laptops, the touchpad interrupt is connected via a GPIO
pin which is controlled by Intel pinctrl. After system resumes,
the GPIO is in ACPI mode and no longer works as an IRQ.
Introduce a new quirk here by saving HOSTSW_OWN register during
suspend and restore at resume.
https://phabricator.endlessm.com/T14379
Signed-off-by: Chris Chiu chiu@endlessm.com",Thanks for your great help. My mistake to bypass verification on the specific machine. I've updated the commit and verified on E403NA. Please help review if there's still any. Thanks,True,{}
endlessm/linux,https://github.com/endlessm/linux,450,2019-03-07T01:36:40Z,2019-03-07T19:31:47Z,2019-03-07T19:31:50Z,MERGED,True,60,0,1,https://github.com/mschiu77,pinctrl:intel: New quirk to save HOSTSW_OWN for ASUS laptops,1,[],https://github.com/endlessm/linux/pull/450,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/450,"The touchpad of the ASUS laptops E403NA, X540NA, X541NA are not
responsive after suspend/resume. The following error message
shows after resume.
i2c_hid i2c-ELAN1200:00: failed to reset device.
On these laptops, the touchpad interrupt is connected via a GPIO
pin which is controlled by Intel pinctrl. After system resumes,
the GPIO is in ACPI mode and no longer works as an IRQ.
Introduce a new quirk here by saving HOSTSW_OWN register during
suspend and restore at resume.
https://phabricator.endlessm.com/T14379
Signed-off-by: Chris Chiu chiu@endlessm.com","The touchpad of the ASUS laptops E403NA, X540NA, X541NA are not
responsive after suspend/resume. The following error message
shows after resume.
i2c_hid i2c-ELAN1200:00: failed to reset device.
On these laptops, the touchpad interrupt is connected via a GPIO
pin which is controlled by Intel pinctrl. After system resumes,
the GPIO is in ACPI mode and no longer works as an IRQ.
Introduce a new quirk here by saving HOSTSW_OWN register during
suspend and restore at resume.
https://phabricator.endlessm.com/T14379
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,451,2019-03-14T01:57:38Z,2019-03-14T05:08:48Z,2019-03-14T05:08:53Z,MERGED,True,3,0,1,https://github.com/mschiu77,iommu/amd: Fix a null pointer dereference for ACPI devices,1,[],https://github.com/endlessm/linux/pull/451,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/451,"On ASUS laptop X512DK with the realtek USB card reader, the NULL
pointer dereference happens while bringing up the rtsx_usb driver.
[    1.782281] BUG: unable to handle kernel NULL pointer dereference at 0000000000000090
[    1.782283] PGD 0 P4D 0
[    1.782285] Oops: 0000 [#1] SMP NOPTI
[    1.782287] CPU: 6 PID: 290 Comm: systemd-udevd Not tainted 4.20.0-2-generic #3+dev91.add2285bem1
[    1.782288] Hardware name: ASUSTeK COMPUTER INC. VivoBook_ASUSLaptop X512DK_X512DK/X512DK, BIOS X512DK.200 01/04/2019
[    1.782292] RIP: 0010:acpi_device_hid+0x6/0x30
[    1.782293] Code: ff ff 5b 31 c0 41 5c 5d c3 49 8b 84 24 20 02 00 00 48 85 c0 74 e4 48 8b 40 38 48 85 c0 75 d3 eb d9 90 90 90 0f 1f 44 00 00 55 <48> 8b 97 90 00 00 00 48 8d 8f 90 00 00 00 48 c7 c0 f7 4a ba b9 48
[    1.782294] RSP: 0018:ffffb1c40209f7a8 EFLAGS: 00010246
[    1.782295] RAX: 0000000000000000 RBX: ffff9ed23446b200 RCX: 0000000000000000
[    1.782296] RDX: ffff9ed22ab23010 RSI: 0000000000000001 RDI: 0000000000000000
[    1.782297] RBP: ffffb1c40209f7e0 R08: 0000000000000000 R09: 0000000000000228
[    1.782297] R10: 0000000000000000 R11: ffff9ed2288c5ed8 R12: fffffffffffffff0
[    1.782298] R13: ffff9ed22ab23010 R14: 0000000000000000 R15: 0000000000000000
[    1.782299] FS:  00007f9aa61988c0(0000) GS:ffff9ed234b80000(0000) knlGS:0000000000000000
[    1.782300] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[    1.782300] CR2: 0000000000000090 CR3: 00000002aaafc000 CR4: 00000000003406e0
[    1.782301] Call Trace:
[    1.782307]  ? check_device.part.19+0x5e/0x140
[    1.782308]  amd_iommu_add_device+0x2d/0x4a0
[    1.782310]  ? acpi_match_device+0x30/0x70
[    1.782312]  iommu_bus_notifier+0xc5/0xe0
[    1.782315]  notifier_call_chain+0x4c/0x70
[    1.782316]  blocking_notifier_call_chain+0x43/0x60
[    1.782319]  device_add+0x392/0x6a0
[    1.782321]  platform_device_add+0x111/0x260
[    1.782323]  mfd_add_device+0x445/0x570
[    1.782326]  ? urb_destroy+0x1b/0x40
[    1.782329]  ? _cond_resched+0x19/0x30
[    1.782330]  mfd_add_devices+0xab/0x120
[    1.782333]  rtsx_usb_probe+0x256/0x300 [rtsx_usb]
[    1.782336]  usb_probe_interface+0xf1/0x300
[    1.782338]  really_probe+0xfe/0x3b0
[    1.782339]  driver_probe_device+0xba/0x100
[    1.782341]  __driver_attach+0xe4/0x110
[    1.782343]  ? driver_probe_device+0x100/0x100
[    1.782345]  bus_for_each_dev+0x79/0xc0
[    1.782347]  ? kmem_cache_alloc_trace+0x15e/0x1e0
[    1.782348]  driver_attach+0x1e/0x20
[    1.782350]  bus_add_driver+0x159/0x230
[    1.782351]  driver_register+0x70/0xc0
[    1.782353]  usb_register_driver+0x7f/0x140
[    1.782356]  rtsx_usb_driver_init+0x23/0x1000 [rtsx_usb]
[    1.782359]  do_one_initcall+0x4a/0x1c4
[    1.782377] localhost kernel: RIP: 0033:0x7f9aa6806299
[    1.782379] localhost kernel: Code: 00 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d c7 6b 0c 00 f7 d8 64 89 01 48
[    1.782379] localhost kernel: RSP: 002b:00007fff6471bd48 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
[    1.782380] localhost kernel: RAX: ffffffffffffffda RBX: 000056264b3ba4a0 RCX: 00007f9aa6806299
[    1.782381] localhost kernel: RDX: 0000000000000000 RSI: 00007f9aa670acad RDI: 000000000000000e
[    1.782381] localhost kernel: RBP: 00007f9aa670acad R08: 0000000000000000 R09: 000056264b3ba4a0
[    1.782382] localhost kernel: R10: 000000000000000e R11: 0000000000000246 R12: 0000000000000000
[    1.782383] localhost kernel: R13: 000056264b3acc10 R14: 0000000000020000 R15: 000056264b3ba4a0
[    1.782384] localhost kernel: Modules linked in: rtsx_usb(+) uas usb_storage hid_multitouch hid_generic amdgpu(+) chash amd_iommu_v2 gpu_sched i2c_algo_bit serio_raw drm_kms_helper syscopyarea ahci sysfillrect sysimgblt fb_sys_fops libahci ttm drm wmi video i2c_hid hid
[    1.782391] localhost kernel: CR2: 0000000000000090
[    1.782392] localhost kernel: ---[ end trace ba1c82e36e279e13 ]---
The reason is the card reader attached to the USB and doesn't have
corresponding ACPI device. So the ACPI_COMPANION(dev) passed to
acpi_device_hid() is NULL which results in null derefernce at the
consequent device->pnp.ids.
Fix this by validating the ACPI companion of the device first.
Signed-off-by: Chris Chiu chiu@endlessm.com","On ASUS laptop X512DK with the realtek USB card reader, the NULL
pointer dereference happens while bringing up the rtsx_usb driver.
[    1.782281] BUG: unable to handle kernel NULL pointer dereference at 0000000000000090
[    1.782283] PGD 0 P4D 0
[    1.782285] Oops: 0000 [#1] SMP NOPTI
[    1.782287] CPU: 6 PID: 290 Comm: systemd-udevd Not tainted 4.20.0-2-generic #3+dev91.add2285bem1
[    1.782288] Hardware name: ASUSTeK COMPUTER INC. VivoBook_ASUSLaptop X512DK_X512DK/X512DK, BIOS X512DK.200 01/04/2019
[    1.782292] RIP: 0010:acpi_device_hid+0x6/0x30
[    1.782293] Code: ff ff 5b 31 c0 41 5c 5d c3 49 8b 84 24 20 02 00 00 48 85 c0 74 e4 48 8b 40 38 48 85 c0 75 d3 eb d9 90 90 90 0f 1f 44 00 00 55 <48> 8b 97 90 00 00 00 48 8d 8f 90 00 00 00 48 c7 c0 f7 4a ba b9 48
[    1.782294] RSP: 0018:ffffb1c40209f7a8 EFLAGS: 00010246
[    1.782295] RAX: 0000000000000000 RBX: ffff9ed23446b200 RCX: 0000000000000000
[    1.782296] RDX: ffff9ed22ab23010 RSI: 0000000000000001 RDI: 0000000000000000
[    1.782297] RBP: ffffb1c40209f7e0 R08: 0000000000000000 R09: 0000000000000228
[    1.782297] R10: 0000000000000000 R11: ffff9ed2288c5ed8 R12: fffffffffffffff0
[    1.782298] R13: ffff9ed22ab23010 R14: 0000000000000000 R15: 0000000000000000
[    1.782299] FS:  00007f9aa61988c0(0000) GS:ffff9ed234b80000(0000) knlGS:0000000000000000
[    1.782300] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[    1.782300] CR2: 0000000000000090 CR3: 00000002aaafc000 CR4: 00000000003406e0
[    1.782301] Call Trace:
[    1.782307]  ? check_device.part.19+0x5e/0x140
[    1.782308]  amd_iommu_add_device+0x2d/0x4a0
[    1.782310]  ? acpi_match_device+0x30/0x70
[    1.782312]  iommu_bus_notifier+0xc5/0xe0
[    1.782315]  notifier_call_chain+0x4c/0x70
[    1.782316]  blocking_notifier_call_chain+0x43/0x60
[    1.782319]  device_add+0x392/0x6a0
[    1.782321]  platform_device_add+0x111/0x260
[    1.782323]  mfd_add_device+0x445/0x570
[    1.782326]  ? urb_destroy+0x1b/0x40
[    1.782329]  ? _cond_resched+0x19/0x30
[    1.782330]  mfd_add_devices+0xab/0x120
[    1.782333]  rtsx_usb_probe+0x256/0x300 [rtsx_usb]
[    1.782336]  usb_probe_interface+0xf1/0x300
[    1.782338]  really_probe+0xfe/0x3b0
[    1.782339]  driver_probe_device+0xba/0x100
[    1.782341]  __driver_attach+0xe4/0x110
[    1.782343]  ? driver_probe_device+0x100/0x100
[    1.782345]  bus_for_each_dev+0x79/0xc0
[    1.782347]  ? kmem_cache_alloc_trace+0x15e/0x1e0
[    1.782348]  driver_attach+0x1e/0x20
[    1.782350]  bus_add_driver+0x159/0x230
[    1.782351]  driver_register+0x70/0xc0
[    1.782353]  usb_register_driver+0x7f/0x140
[    1.782356]  rtsx_usb_driver_init+0x23/0x1000 [rtsx_usb]
[    1.782359]  do_one_initcall+0x4a/0x1c4
[    1.782377] localhost kernel: RIP: 0033:0x7f9aa6806299
[    1.782379] localhost kernel: Code: 00 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d c7 6b 0c 00 f7 d8 64 89 01 48
[    1.782379] localhost kernel: RSP: 002b:00007fff6471bd48 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
[    1.782380] localhost kernel: RAX: ffffffffffffffda RBX: 000056264b3ba4a0 RCX: 00007f9aa6806299
[    1.782381] localhost kernel: RDX: 0000000000000000 RSI: 00007f9aa670acad RDI: 000000000000000e
[    1.782381] localhost kernel: RBP: 00007f9aa670acad R08: 0000000000000000 R09: 000056264b3ba4a0
[    1.782382] localhost kernel: R10: 000000000000000e R11: 0000000000000246 R12: 0000000000000000
[    1.782383] localhost kernel: R13: 000056264b3acc10 R14: 0000000000020000 R15: 000056264b3ba4a0
[    1.782384] localhost kernel: Modules linked in: rtsx_usb(+) uas usb_storage hid_multitouch hid_generic amdgpu(+) chash amd_iommu_v2 gpu_sched i2c_algo_bit serio_raw drm_kms_helper syscopyarea ahci sysfillrect sysimgblt fb_sys_fops libahci ttm drm wmi video i2c_hid hid
[    1.782391] localhost kernel: CR2: 0000000000000090
[    1.782392] localhost kernel: ---[ end trace ba1c82e36e279e13 ]---
The reason is the card reader attached to the USB and doesn't have
corresponding ACPI device. So the ACPI_COMPANION(dev) passed to
acpi_device_hid() is NULL which results in null derefernce at the
consequent device->pnp.ids.
Fix this by validating the ACPI companion of the device first.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,452,2019-03-20T03:14:26Z,2019-03-20T06:50:19Z,2019-03-20T06:50:22Z,MERGED,True,4,1,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset MIC of ASUS X512DK with ALC256,1,[],https://github.com/endlessm/linux/pull/452,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/452,"The ASUS X512DK with ALC256 cannot detect the headset MIC until
ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.  Besides, it has the
same initial pin config values as ASUS X430UN:
0x12 0x90a60130
0x13 0x40000000
0x14 0x90170110
0x18 0x411111f0
0x19 0x411111f0
0x1a 0x411111f0
0x1b 0x411111f0
0x1d 0x40689b2d
0x1e 0x411111f0
0x21 0x04211020
So, this patch makes them share the same SND_HDA_PIN_QUIRK to enable the
headset MIC.
https://phabricator.endlessm.com/T25932
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The ASUS X512DK with ALC256 cannot detect the headset MIC until
ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.  Besides, it has the
same initial pin config values as ASUS X430UN:
0x12 0x90a60130
0x13 0x40000000
0x14 0x90170110
0x18 0x411111f0
0x19 0x411111f0
0x1a 0x411111f0
0x1b 0x411111f0
0x1d 0x40689b2d
0x1e 0x411111f0
0x21 0x04211020
So, this patch makes them share the same SND_HDA_PIN_QUIRK to enable the
headset MIC.
https://phabricator.endlessm.com/T25932
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,453,2019-03-20T08:17:37Z,2019-03-20T08:37:30Z,2019-03-20T08:37:32Z,MERGED,True,4,2,1,https://github.com/starnight,ALSA: hda/realtek: Merge ASUS X705FD and X441MB's SND_PCI_QUIRKs with ALC256,1,[],https://github.com/endlessm/linux/pull/453,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/453,"Both ASUS X705FD and X441MB have the same initial pin config values:
0x12 0x40000000
0x13 0x411111f0
0x14 0x411111f0
0x18 0x411111f0
0x19 0x411111f0
0x1a 0x90a70130
0x1b 0x90170110
0x1d 0x40489a6d
0x1e 0x411111f0
0x21 0x03211020
This patch merges the two SND_PCI_QUIRKs which enable the headset MIC
into a single SND_HDA_PIN_QUIRK.
https://phabricator.endlessm.com/T22841
https://phabricator.endlessm.com/T20151
Fixes: commit 5ac0738 (ALSA: hda/realtek - Enable headset mic of ASUS X705FD with ALC256)
commit 04bc2e6 (ALSA: hda/realtek - Add support for ASUS laptop X441MB headset mic)
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Both ASUS X705FD and X441MB have the same initial pin config values:
0x12 0x40000000
0x13 0x411111f0
0x14 0x411111f0
0x18 0x411111f0
0x19 0x411111f0
0x1a 0x90a70130
0x1b 0x90170110
0x1d 0x40489a6d
0x1e 0x411111f0
0x21 0x03211020
This patch merges the two SND_PCI_QUIRKs which enable the headset MIC
into a single SND_HDA_PIN_QUIRK.
https://phabricator.endlessm.com/T22841
https://phabricator.endlessm.com/T20151
Fixes: commit 5ac0738 (ALSA: hda/realtek - Enable headset mic of ASUS X705FD with ALC256)
commit 04bc2e6 (ALSA: hda/realtek - Add support for ASUS laptop X441MB headset mic)
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,454,2019-03-21T07:03:56Z,2019-03-21T07:15:58Z,2019-03-21T07:16:00Z,MERGED,True,15,3,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset MIC of Acer AIO with ALC286,1,[],https://github.com/endlessm/linux/pull/454,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/454,"Some Acer AIO desktops like Veriton Z6860G, Z4860G and Z4660G cannot
record sound from headset MIC.  This patch adds the
ALC286_FIXUP_ACER_AIO_HEADSET_MIC quirk to fix this issue.
https://phabricator.endlessm.com/T24132
Fixes: 9f8aefe (""ALSA: hda/realtek: Fix mic issue on Acer AIO Veriton Z4660G"")
Fixes: b72f936 (""ALSA: hda/realtek: Fix mic issue on Acer AIO Veriton Z4860G/Z6860G"")
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Reviewed-by: Kailang Yang kailang@realtek.com
Cc: stable@vger.kernel.org
Signed-off-by: Takashi Iwai tiwai@suse.de","Some Acer AIO desktops like Veriton Z6860G, Z4860G and Z4660G cannot
record sound from headset MIC.  This patch adds the
ALC286_FIXUP_ACER_AIO_HEADSET_MIC quirk to fix this issue.
https://phabricator.endlessm.com/T24132
Fixes: 9f8aefe (""ALSA: hda/realtek: Fix mic issue on Acer AIO Veriton Z4660G"")
Fixes: b72f936 (""ALSA: hda/realtek: Fix mic issue on Acer AIO Veriton Z4860G/Z6860G"")
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Reviewed-by: Kailang Yang kailang@realtek.com
Cc: stable@vger.kernel.org
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,455,2019-03-21T07:45:03Z,2019-03-21T08:29:57Z,2019-03-21T08:29:59Z,MERGED,True,1,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset MIC of Acer Aspire Z24-890 with ALC286,1,[],https://github.com/endlessm/linux/pull/455,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/455,"The Acer Aspire Z24-890 cannot detect the headset MIC until
ALC286_FIXUP_ACER_AIO_HEADSET_MIC quirk applied.
https://phabricator.endlessm.com/T24569
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Acer Aspire Z24-890 cannot detect the headset MIC until
ALC286_FIXUP_ACER_AIO_HEADSET_MIC quirk applied.
https://phabricator.endlessm.com/T24569
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,456,2019-03-21T08:49:53Z,2019-03-21T22:40:09Z,2019-03-21T22:40:14Z,MERGED,True,171,1,2,https://github.com/dsd,iio: st_accel: use ACPI orientation data,1,[],https://github.com/endlessm/linux/pull/456,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/456,"Platform-specific ST accelerometer mount matrix information can be
provided by returning a package of 6 integers from the ACPI _ONT
method. This has been seen on Acer products such as Veriton Z4860G,
Z6860G and A890, which include a ST SMO8840 sensor. We have also
confirmed experimentally that the Windows driver uses such information.
The _ONT data format was explained by a ST vendor contact. However,
strangely enough, the _ONT transformations must be applied after first
applying another mount matrix which we determined experimentally. ST
have not commented on why this is the case, but we imagine that perhaps
earlier devices (before _ONT was introduced) required this translation
and hence it became 'standard.'
Interpret the _ONT data and export the equivalent mount matrix to
userspace.
If no _ONT data is present, no mount matrix is exported.
Signed-off-by: Daniel Drake drake@endlessm.com
Signed-off-by: Jonathan Cameron Jonathan.Cameron@huawei.com
https://phabricator.endlessm.com/T24200","Platform-specific ST accelerometer mount matrix information can be
provided by returning a package of 6 integers from the ACPI _ONT
method. This has been seen on Acer products such as Veriton Z4860G,
Z6860G and A890, which include a ST SMO8840 sensor. We have also
confirmed experimentally that the Windows driver uses such information.
The _ONT data format was explained by a ST vendor contact. However,
strangely enough, the _ONT transformations must be applied after first
applying another mount matrix which we determined experimentally. ST
have not commented on why this is the case, but we imagine that perhaps
earlier devices (before _ONT was introduced) required this translation
and hence it became 'standard.'
Interpret the _ONT data and export the equivalent mount matrix to
userspace.
If no _ONT data is present, no mount matrix is exported.
Signed-off-by: Daniel Drake drake@endlessm.com
Signed-off-by: Jonathan Cameron Jonathan.Cameron@huawei.com
https://phabricator.endlessm.com/T24200",True,{}
endlessm/linux,https://github.com/endlessm/linux,457,2019-03-27T03:02:25Z,2019-03-27T07:23:34Z,2019-03-27T07:23:36Z,MERGED,True,12,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset MIC of Acer TravelMate B114-21 with ALC233,1,[],https://github.com/endlessm/linux/pull/457,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/457,"The Acer TravelMate B114-21 laptop cannot detect and record sound from
headset MIC.  This patch adds the ALC233_FIXUP_ACER_HEADSET_MIC HDA verb
quirk chained with ALC233_FIXUP_ASUS_MIC_NO_PRESENCE pin quirk to fix
this issue.
https://phabricator.endlessm.com/T25933
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Acer TravelMate B114-21 laptop cannot detect and record sound from
headset MIC.  This patch adds the ALC233_FIXUP_ACER_HEADSET_MIC HDA verb
quirk chained with ALC233_FIXUP_ASUS_MIC_NO_PRESENCE pin quirk to fix
this issue.
https://phabricator.endlessm.com/T25933
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,458,2019-03-27T09:37:59Z,2019-03-27T09:39:03Z,2019-03-27T09:39:05Z,MERGED,True,0,21,1,https://github.com/starnight,"Revert ""x86/reboot: Use efi reboot for Acer TravelMate X514-51T""",1,[],https://github.com/endlessm/linux/pull/458,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/458,"This reverts commit 3ae73f1.
Upstream fixed this issue.
https://phabricator.endlessm.com/T25533","This reverts commit 3ae73f1.
Upstream fixed this issue.
https://phabricator.endlessm.com/T25533",True,{}
endlessm/linux,https://github.com/endlessm/linux,459,2019-04-10T03:35:33Z,2019-04-10T03:46:23Z,2019-04-10T03:46:23Z,CLOSED,False,0,14,1,https://github.com/starnight,"Revert ""radeon: Disable runtime pm on Acer Veriton Z4860G/Z6860G""",1,[],https://github.com/endlessm/linux/pull/459,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/459,"This reverts commit 9ac6fc2.
https://phabricator.endlessm.com/T24062","This reverts commit 9ac6fc2.
https://phabricator.endlessm.com/T24062",True,{}
endlessm/linux,https://github.com/endlessm/linux,459,2019-04-10T03:35:33Z,2019-04-10T03:46:23Z,2019-04-10T03:46:23Z,CLOSED,False,0,14,1,https://github.com/starnight,"Revert ""radeon: Disable runtime pm on Acer Veriton Z4860G/Z6860G""",1,[],https://github.com/endlessm/linux/pull/459,https://github.com/starnight,2,https://github.com/endlessm/linux/pull/459#issuecomment-481521868,"This reverts commit 9ac6fc2.
https://phabricator.endlessm.com/T24062",Want to test more,True,{}
endlessm/linux,https://github.com/endlessm/linux,460,2019-04-10T06:33:03Z,2019-04-10T07:43:09Z,2019-04-10T07:43:09Z,CLOSED,False,21,0,1,https://github.com/starnight,amd/iommu: Use soft iommu for Acer Aspire A315-21G,1,[],https://github.com/endlessm/linux/pull/460,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/460,"The Acer Aspire A315-21G cannot boot with the error:
Apr 09 11:28:59 endless kernel: AMD-Vi: Completion-Wait loop timed out
Apr 09 11:28:59 endless kernel: iommu ivhd0: AMD-Vi: Event logged [IOTLB_INV_TIMEOUT device=01:00.0 address=0x216d8e620]
This patch makes a workaround by adding a DMI quirk which uses soft
IOMMU on this model.
https://phabricator.endlessm.com/T26099
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Acer Aspire A315-21G cannot boot with the error:
Apr 09 11:28:59 endless kernel: AMD-Vi: Completion-Wait loop timed out
Apr 09 11:28:59 endless kernel: iommu ivhd0: AMD-Vi: Event logged [IOTLB_INV_TIMEOUT device=01:00.0 address=0x216d8e620]
This patch makes a workaround by adding a DMI quirk which uses soft
IOMMU on this model.
https://phabricator.endlessm.com/T26099
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,461,2019-04-10T08:09:01Z,2019-04-11T03:43:48Z,2019-04-11T03:43:51Z,MERGED,True,19,0,1,https://github.com/starnight,drm/amdgpu: Disable runtime pm for Acer Aspire A315-21G,1,[],https://github.com/endlessm/linux/pull/461,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/461,"The Acer Aspire A315-21G cannot boot with the error:
Apr 09 11:28:59 endless kernel: AMD-Vi: Completion-Wait loop timed out
Apr 09 11:28:59 endless kernel: iommu ivhd0: AMD-Vi: Event logged [IOTLB_INV_TIMEOUT device=01:00.0 address=0x216d8e620]
This patch makes a workaround by adding a DMI quirk which disables
amdgpu's runtime pm for this model.
https://phabricator.endlessm.com/T26099
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Acer Aspire A315-21G cannot boot with the error:
Apr 09 11:28:59 endless kernel: AMD-Vi: Completion-Wait loop timed out
Apr 09 11:28:59 endless kernel: iommu ivhd0: AMD-Vi: Event logged [IOTLB_INV_TIMEOUT device=01:00.0 address=0x216d8e620]
This patch makes a workaround by adding a DMI quirk which disables
amdgpu's runtime pm for this model.
https://phabricator.endlessm.com/T26099
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,462,2019-04-11T09:49:41Z,2019-04-15T05:09:38Z,2019-04-15T05:09:40Z,MERGED,True,21,0,1,https://github.com/starnight,x86/reboot: Use efi reboot for Acer TravelMate X514-51T,1,[],https://github.com/endlessm/linux/pull/462,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/462,"Upon reboot, the Acer TravelMate X514-51T laptop appears to complete the
shutdown process, but then it hangs in BIOS POST with a black screen.
The problem is intermittent - at some points it has appeared related to
Secure Boot settings or different kernel builds, but ultimately we have
not been able to identify the exact conditions that trigger the issue to
come and go.
However, after extensive testing, we observe that using the EFI reboot
method reliably avoids the issue in all cases.
https://phabricator.endlessm.com/T25533
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Upon reboot, the Acer TravelMate X514-51T laptop appears to complete the
shutdown process, but then it hangs in BIOS POST with a black screen.
The problem is intermittent - at some points it has appeared related to
Secure Boot settings or different kernel builds, but ultimately we have
not been able to identify the exact conditions that trigger the issue to
come and go.
However, after extensive testing, we observe that using the EFI reboot
method reliably avoids the issue in all cases.
https://phabricator.endlessm.com/T25533
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,463,2019-04-12T00:23:13Z,2019-04-12T05:33:48Z,2019-04-12T05:33:50Z,MERGED,True,145,22,10,https://github.com/jprvita,"Enable fastboot by default on VLV, CHV, and SKL or newer.",9,[],https://github.com/endlessm/linux/pull/463,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/463,https://phabricator.endlessm.com/T25948,https://phabricator.endlessm.com/T25948,True,{}
endlessm/linux,https://github.com/endlessm/linux,464,2019-04-16T10:07:24Z,2019-04-16T11:41:49Z,2019-04-16T11:41:52Z,MERGED,True,1,19,2,https://github.com/starnight,"Revert ""drm/amdgpu: Disable runtime pm for Acer Aspire A315-21G""",2,[],https://github.com/endlessm/linux/pull/464,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/464,"This reverts commit 9d19ad0.
Upstreams uses the the patch 1 to fix the issue for now.
https://phabricator.endlessm.com/T26211","This reverts commit 9d19ad0.
Upstreams uses the the patch 1 to fix the issue for now.
https://phabricator.endlessm.com/T26211",True,{}
endlessm/linux,https://github.com/endlessm/linux,465,2019-04-17T06:43:03Z,2019-04-18T05:59:02Z,2019-04-18T05:59:05Z,MERGED,True,37,0,2,https://github.com/mschiu77,platform/x86: asus-wmi: Add fn-lock mode switch support,1,[],https://github.com/endlessm/linux/pull/465,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/465,"Some of latest ASUS laptops support new fn-lock mode switching.
This commit detect whether if the fn-lock option is enabled in
BIOS setting, and toggle the fn-lock mode via a new WMI DEVID
0x00100023 when the corresponding notify code captured.
The ASUS fn-lock mode switch is activated by pressing Fn+Esc.
When on, keys F1 to F12 behave as applicable, with meanings
defined by the application being used at the time. When off,
F1 to F12 directly triggers hardware features, well known audio
volume up/down, brightness up/down...etc, which were triggered
by holding down Fn key and F-keys.
Because there's no way to retrive the fn-lock mode via existing
WMI methods per ASUS spec, driver need to initialize and keep the
fn-lock mode by itself.
https://phabricator.endlessm.com/T23042
Signed-off-by: Chris Chiu chiu@endlessm.com","Some of latest ASUS laptops support new fn-lock mode switching.
This commit detect whether if the fn-lock option is enabled in
BIOS setting, and toggle the fn-lock mode via a new WMI DEVID
0x00100023 when the corresponding notify code captured.
The ASUS fn-lock mode switch is activated by pressing Fn+Esc.
When on, keys F1 to F12 behave as applicable, with meanings
defined by the application being used at the time. When off,
F1 to F12 directly triggers hardware features, well known audio
volume up/down, brightness up/down...etc, which were triggered
by holding down Fn key and F-keys.
Because there's no way to retrive the fn-lock mode via existing
WMI methods per ASUS spec, driver need to initialize and keep the
fn-lock mode by itself.
https://phabricator.endlessm.com/T23042
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,466,2019-04-24T05:49:20Z,2019-05-07T05:20:57Z,2019-05-07T05:21:00Z,MERGED,True,24,0,5,https://github.com/jprvita,Bluetooth: Ignore CC events not matching the last HCI command,1,[],https://github.com/endlessm/linux/pull/466,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/466,"This commit makes the kernel not send the next queued HCI command until
a command complete arrives for the last HCI command sent to the
controller. This change avoids a problem with some buggy controllers
(seen on two SKUs of QCA9377) that send an extra command complete event
for the previous command after the kernel had already sent a new HCI
command to the controller.
The problem was reproduced when starting an active scanning procedure,
where an extra command complete event arrives for the LE_SET_RANDOM_ADDR
command. When this happends the kernel ends up not processing the
command complete for the following commmand, LE_SET_SCAN_PARAM, and
ultimately behaving as if a passive scanning procedure was being
performed, when in fact controller is performing an active scanning
procedure. This makes it impossible to discover BLE devices as no device
found events are sent to userspace.
This problem is reproducible on 100% of the attempts on the affected
controllers. The extra command complete event can be seen at timestamp
27.420131 on the btmon logs bellow.
Bluetooth monitor ver 5.50
= Note: Linux version 5.0.0+ (x86_64)                                  0.352340
= Note: Bluetooth subsystem version 2.22                               0.352343
= New Index: 80:C5:F2:8F:87:84 (Primary,USB,hci0)               [hci0] 0.352344
= Open Index: 80:C5:F2:8F:87:84                                 [hci0] 0.352345
= Index Info: 80:C5:F2:8F:87:84 (Qualcomm)                      [hci0] 0.352346
@ MGMT Open: bluetoothd (privileged) version 1.14             {0x0001} 0.352347
@ MGMT Open: btmon (privileged) version 1.14                  {0x0002} 0.352366
@ MGMT Open: btmgmt (privileged) version 1.14                {0x0003} 27.302164
@ MGMT Command: Start Discovery (0x0023) plen 1       {0x0003} [hci0] 27.302310
Address type: 0x06
LE Public
LE Random
< HCI Command: LE Set Random Address (0x08|0x0005) plen 6   #1 [hci0] 27.302496
Address: 15:60:F2:91:B2:24 (Non-Resolvable)

HCI Event: Command Complete (0x0e) plen 4                 #2 [hci0] 27.419117
LE Set Random Address (0x08|0x0005) ncmd 1
Status: Success (0x00)
< HCI Command: LE Set Scan Parameters (0x08|0x000b) plen 7  #3 [hci0] 27.419244
Type: Active (0x01)
Interval: 11.250 msec (0x0012)
Window: 11.250 msec (0x0012)
Own address type: Random (0x01)
Filter policy: Accept all advertisement (0x00)
HCI Event: Command Complete (0x0e) plen 4                 #4 [hci0] 27.420131
LE Set Random Address (0x08|0x0005) ncmd 1
Status: Success (0x00)
< HCI Command: LE Set Scan Enable (0x08|0x000c) plen 2      #5 [hci0] 27.420259
Scanning: Enabled (0x01)
Filter duplicates: Enabled (0x01)
HCI Event: Command Complete (0x0e) plen 4                 #6 [hci0] 27.420969
LE Set Scan Parameters (0x08|0x000b) ncmd 1
Status: Success (0x00)
HCI Event: Command Complete (0x0e) plen 4                 #7 [hci0] 27.421983
LE Set Scan Enable (0x08|0x000c) ncmd 1
Status: Success (0x00)
@ MGMT Event: Command Complete (0x0001) plen 4        {0x0003} [hci0] 27.422059
Start Discovery (0x0023) plen 1
Status: Success (0x00)
Address type: 0x06
LE Public
LE Random
@ MGMT Event: Discovering (0x0013) plen 2             {0x0003} [hci0] 27.422067
Address type: 0x06
LE Public
LE Random
Discovery: Enabled (0x01)
@ MGMT Event: Discovering (0x0013) plen 2             {0x0002} [hci0] 27.422067
Address type: 0x06
LE Public
LE Random
Discovery: Enabled (0x01)
@ MGMT Event: Discovering (0x0013) plen 2             {0x0001} [hci0] 27.422067
Address type: 0x06
LE Public
LE Random
Discovery: Enabled (0x01)

Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
Signed-off-by: Marcel Holtmann marcel@holtmann.org
https://phabricator.endlessm.com/T24992","This commit makes the kernel not send the next queued HCI command until
a command complete arrives for the last HCI command sent to the
controller. This change avoids a problem with some buggy controllers
(seen on two SKUs of QCA9377) that send an extra command complete event
for the previous command after the kernel had already sent a new HCI
command to the controller.
The problem was reproduced when starting an active scanning procedure,
where an extra command complete event arrives for the LE_SET_RANDOM_ADDR
command. When this happends the kernel ends up not processing the
command complete for the following commmand, LE_SET_SCAN_PARAM, and
ultimately behaving as if a passive scanning procedure was being
performed, when in fact controller is performing an active scanning
procedure. This makes it impossible to discover BLE devices as no device
found events are sent to userspace.
This problem is reproducible on 100% of the attempts on the affected
controllers. The extra command complete event can be seen at timestamp
27.420131 on the btmon logs bellow.
Bluetooth monitor ver 5.50
= Note: Linux version 5.0.0+ (x86_64)                                  0.352340
= Note: Bluetooth subsystem version 2.22                               0.352343
= New Index: 80:C5:F2:8F:87:84 (Primary,USB,hci0)               [hci0] 0.352344
= Open Index: 80:C5:F2:8F:87:84                                 [hci0] 0.352345
= Index Info: 80:C5:F2:8F:87:84 (Qualcomm)                      [hci0] 0.352346
@ MGMT Open: bluetoothd (privileged) version 1.14             {0x0001} 0.352347
@ MGMT Open: btmon (privileged) version 1.14                  {0x0002} 0.352366
@ MGMT Open: btmgmt (privileged) version 1.14                {0x0003} 27.302164
@ MGMT Command: Start Discovery (0x0023) plen 1       {0x0003} [hci0] 27.302310
Address type: 0x06
LE Public
LE Random
< HCI Command: LE Set Random Address (0x08|0x0005) plen 6   #1 [hci0] 27.302496
Address: 15:60:F2:91:B2:24 (Non-Resolvable)

HCI Event: Command Complete (0x0e) plen 4                 #2 [hci0] 27.419117
LE Set Random Address (0x08|0x0005) ncmd 1
Status: Success (0x00)
< HCI Command: LE Set Scan Parameters (0x08|0x000b) plen 7  #3 [hci0] 27.419244
Type: Active (0x01)
Interval: 11.250 msec (0x0012)
Window: 11.250 msec (0x0012)
Own address type: Random (0x01)
Filter policy: Accept all advertisement (0x00)
HCI Event: Command Complete (0x0e) plen 4                 #4 [hci0] 27.420131
LE Set Random Address (0x08|0x0005) ncmd 1
Status: Success (0x00)
< HCI Command: LE Set Scan Enable (0x08|0x000c) plen 2      #5 [hci0] 27.420259
Scanning: Enabled (0x01)
Filter duplicates: Enabled (0x01)
HCI Event: Command Complete (0x0e) plen 4                 #6 [hci0] 27.420969
LE Set Scan Parameters (0x08|0x000b) ncmd 1
Status: Success (0x00)
HCI Event: Command Complete (0x0e) plen 4                 #7 [hci0] 27.421983
LE Set Scan Enable (0x08|0x000c) ncmd 1
Status: Success (0x00)
@ MGMT Event: Command Complete (0x0001) plen 4        {0x0003} [hci0] 27.422059
Start Discovery (0x0023) plen 1
Status: Success (0x00)
Address type: 0x06
LE Public
LE Random
@ MGMT Event: Discovering (0x0013) plen 2             {0x0003} [hci0] 27.422067
Address type: 0x06
LE Public
LE Random
Discovery: Enabled (0x01)
@ MGMT Event: Discovering (0x0013) plen 2             {0x0002} [hci0] 27.422067
Address type: 0x06
LE Public
LE Random
Discovery: Enabled (0x01)
@ MGMT Event: Discovering (0x0013) plen 2             {0x0001} [hci0] 27.422067
Address type: 0x06
LE Public
LE Random
Discovery: Enabled (0x01)

Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
Signed-off-by: Marcel Holtmann marcel@holtmann.org
https://phabricator.endlessm.com/T24992",True,{}
endlessm/linux,https://github.com/endlessm/linux,467,2019-04-24T08:50:49Z,2019-04-24T09:05:32Z,2019-05-02T03:26:53Z,MERGED,True,0,1,1,https://github.com/jprvita,"Revert ""Bluetooth: Add new Realtek 8822BE ID 13d3:3526""",1,[],https://github.com/endlessm/linux/pull/467,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/467,"This reverts commit 644ee83.
This USB id is now present upstream, so we are adding an extra entry to
the list to no effect.","This reverts commit 644ee83.
This USB id is now present upstream, so we are adding an extra entry to
the list to no effect.",True,{}
endlessm/linux,https://github.com/endlessm/linux,467,2019-04-24T08:50:49Z,2019-04-24T09:05:32Z,2019-05-02T03:26:53Z,MERGED,True,0,1,1,https://github.com/jprvita,"Revert ""Bluetooth: Add new Realtek 8822BE ID 13d3:3526""",1,[],https://github.com/endlessm/linux/pull/467,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/467#issuecomment-486130875,"This reverts commit 644ee83.
This USB id is now present upstream, so we are adding an extra entry to
the list to no effect.",Just some duplicate code I have found while investigating something else.,True,{}
endlessm/linux,https://github.com/endlessm/linux,468,2019-05-01T15:38:26Z,2019-05-06T09:01:42Z,2019-05-10T19:33:45Z,MERGED,True,33,0,1,https://github.com/ManMower,r8169: Get and enable optional ether_clk clock,1,[],https://github.com/endlessm/linux/pull/468,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/468,"On some boards a platform clock is used as clock for the r8169 chip,
this commit adds support for getting and enabling this clock (assuming
it has an ""ether_clk"" alias set on it).
This is related to commit d31fd43 (""clk: x86: Do not gate clocks
enabled by the firmware"") which is a previous attempt to fix this for some
x86 boards, but this causes all Cherry Trail SoC using boards to not reach
there lowest power states when suspending.
This commit (together with an atom-pmc-clk driver commit adding the alias)
fixes things properly by making the r8169 get the clock and enable it when
it needs it.
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=193891#c102
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=196861
Cc: Johannes Stezenbach js@sig21.net
Cc: Carlo Caione carlo@endlessm.com
Reported-by: Johannes Stezenbach js@sig21.net
Acked-by: Stephen Boyd sboyd@kernel.org
Reviewed-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Hans de Goede hdegoede@redhat.com
Signed-off-by: David S. Miller davem@davemloft.net","On some boards a platform clock is used as clock for the r8169 chip,
this commit adds support for getting and enabling this clock (assuming
it has an ""ether_clk"" alias set on it).
This is related to commit d31fd43 (""clk: x86: Do not gate clocks
enabled by the firmware"") which is a previous attempt to fix this for some
x86 boards, but this causes all Cherry Trail SoC using boards to not reach
there lowest power states when suspending.
This commit (together with an atom-pmc-clk driver commit adding the alias)
fixes things properly by making the r8169 get the clock and enable it when
it needs it.
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=193891#c102
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=196861
Cc: Johannes Stezenbach js@sig21.net
Cc: Carlo Caione carlo@endlessm.com
Reported-by: Johannes Stezenbach js@sig21.net
Acked-by: Stephen Boyd sboyd@kernel.org
Reviewed-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Hans de Goede hdegoede@redhat.com
Signed-off-by: David S. Miller davem@davemloft.net",True,{}
endlessm/linux,https://github.com/endlessm/linux,468,2019-05-01T15:38:26Z,2019-05-06T09:01:42Z,2019-05-10T19:33:45Z,MERGED,True,33,0,1,https://github.com/ManMower,r8169: Get and enable optional ether_clk clock,1,[],https://github.com/endlessm/linux/pull/468,https://github.com/wjt,2,https://github.com/endlessm/linux/pull/468#issuecomment-491336860,"On some boards a platform clock is used as clock for the r8169 chip,
this commit adds support for getting and enabling this clock (assuming
it has an ""ether_clk"" alias set on it).
This is related to commit d31fd43 (""clk: x86: Do not gate clocks
enabled by the firmware"") which is a previous attempt to fix this for some
x86 boards, but this causes all Cherry Trail SoC using boards to not reach
there lowest power states when suspending.
This commit (together with an atom-pmc-clk driver commit adding the alias)
fixes things properly by making the r8169 get the clock and enable it when
it needs it.
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=193891#c102
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=196861
Cc: Johannes Stezenbach js@sig21.net
Cc: Carlo Caione carlo@endlessm.com
Reported-by: Johannes Stezenbach js@sig21.net
Acked-by: Stephen Boyd sboyd@kernel.org
Reviewed-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Hans de Goede hdegoede@redhat.com
Signed-off-by: David S. Miller davem@davemloft.net",Was it intentional that this commit was merged to the eos3.5 branch?,True,{}
endlessm/linux,https://github.com/endlessm/linux,468,2019-05-01T15:38:26Z,2019-05-06T09:01:42Z,2019-05-10T19:33:45Z,MERGED,True,33,0,1,https://github.com/ManMower,r8169: Get and enable optional ether_clk clock,1,[],https://github.com/endlessm/linux/pull/468,https://github.com/ManMower,3,https://github.com/endlessm/linux/pull/468#issuecomment-491403114,"On some boards a platform clock is used as clock for the r8169 chip,
this commit adds support for getting and enabling this clock (assuming
it has an ""ether_clk"" alias set on it).
This is related to commit d31fd43 (""clk: x86: Do not gate clocks
enabled by the firmware"") which is a previous attempt to fix this for some
x86 boards, but this causes all Cherry Trail SoC using boards to not reach
there lowest power states when suspending.
This commit (together with an atom-pmc-clk driver commit adding the alias)
fixes things properly by making the r8169 get the clock and enable it when
it needs it.
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=193891#c102
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=196861
Cc: Johannes Stezenbach js@sig21.net
Cc: Carlo Caione carlo@endlessm.com
Reported-by: Johannes Stezenbach js@sig21.net
Acked-by: Stephen Boyd sboyd@kernel.org
Reviewed-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Hans de Goede hdegoede@redhat.com
Signed-off-by: David S. Miller davem@davemloft.net","I think so, though I may have made a mistake.
eos3.6 already has this patch because it's based on a 5.0 kernel
eos3.5 was missing it (but included a patch that depended on it - thus the crashes)",True,{}
endlessm/linux,https://github.com/endlessm/linux,468,2019-05-01T15:38:26Z,2019-05-06T09:01:42Z,2019-05-10T19:33:45Z,MERGED,True,33,0,1,https://github.com/ManMower,r8169: Get and enable optional ether_clk clock,1,[],https://github.com/endlessm/linux/pull/468,https://github.com/jprvita,4,https://github.com/endlessm/linux/pull/468#issuecomment-491405716,"On some boards a platform clock is used as clock for the r8169 chip,
this commit adds support for getting and enabling this clock (assuming
it has an ""ether_clk"" alias set on it).
This is related to commit d31fd43 (""clk: x86: Do not gate clocks
enabled by the firmware"") which is a previous attempt to fix this for some
x86 boards, but this causes all Cherry Trail SoC using boards to not reach
there lowest power states when suspending.
This commit (together with an atom-pmc-clk driver commit adding the alias)
fixes things properly by making the r8169 get the clock and enable it when
it needs it.
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=193891#c102
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=196861
Cc: Johannes Stezenbach js@sig21.net
Cc: Carlo Caione carlo@endlessm.com
Reported-by: Johannes Stezenbach js@sig21.net
Acked-by: Stephen Boyd sboyd@kernel.org
Reviewed-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Hans de Goede hdegoede@redhat.com
Signed-off-by: David S. Miller davem@davemloft.net","Was it intentional that this commit was merged to the eos3.5 branch?

Yes, it was discussed offline that we should have this in the eos3.5 just in case an emergency release had to be made.",True,{}
endlessm/linux,https://github.com/endlessm/linux,469,2019-05-09T02:52:19Z,2020-03-11T00:08:38Z,2020-03-11T00:08:38Z,CLOSED,False,1773616,1840,2642,https://github.com/starnight,"Revert ""x86/reboot, efi: Use EFI reboot for Acer TravelMate X514-51T""",670,[],https://github.com/endlessm/linux/pull/469,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/469,"We got new patch from upstream for this issue.
Got new BIOS v1.08, which fixed the reboot issue.  So, do not need the
quirk any more.
This reverts commit c666658.
https://phabricator.endlessm.com/T25533","We got new patch from upstream for this issue.
Got new BIOS v1.08, which fixed the reboot issue.  So, do not need the
quirk any more.
This reverts commit c666658.
https://phabricator.endlessm.com/T25533",True,{}
endlessm/linux,https://github.com/endlessm/linux,469,2019-05-09T02:52:19Z,2020-03-11T00:08:38Z,2020-03-11T00:08:38Z,CLOSED,False,1773616,1840,2642,https://github.com/starnight,"Revert ""x86/reboot, efi: Use EFI reboot for Acer TravelMate X514-51T""",670,[],https://github.com/endlessm/linux/pull/469,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/469#issuecomment-597379707,"We got new patch from upstream for this issue.
Got new BIOS v1.08, which fixed the reboot issue.  So, do not need the
quirk any more.
This reverts commit c666658.
https://phabricator.endlessm.com/T25533",Closing old leftover PR.,True,{}
endlessm/linux,https://github.com/endlessm/linux,470,2019-05-13T09:48:31Z,2019-05-15T17:17:29Z,2019-05-15T17:17:35Z,MERGED,True,3,17,1,https://github.com/starnight,"Revert ""ALSA: hda - Enforces runtime_resume after S3 and S4 for each codec""",1,[],https://github.com/endlessm/linux/pull/470,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/470,"After suspending the device and bringing it back up the audio playback
does not work anymore. The device for sound output is listed as a
headphone device. Plugging in headphones no sound is audible neither.
This reverts commit 9c51afa to solve
this regression issue.
https://phabricator.endlessm.com/T26524","After suspending the device and bringing it back up the audio playback
does not work anymore. The device for sound output is listed as a
headphone device. Plugging in headphones no sound is audible neither.
This reverts commit 9c51afa to solve
this regression issue.
https://phabricator.endlessm.com/T26524",True,{}
endlessm/linux,https://github.com/endlessm/linux,470,2019-05-13T09:48:31Z,2019-05-15T17:17:29Z,2019-05-15T17:17:35Z,MERGED,True,3,17,1,https://github.com/starnight,"Revert ""ALSA: hda - Enforces runtime_resume after S3 and S4 for each codec""",1,[],https://github.com/endlessm/linux/pull/470,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/470#issuecomment-492743897,"After suspending the device and bringing it back up the audio playback
does not work anymore. The device for sound output is listed as a
headphone device. Plugging in headphones no sound is audible neither.
This reverts commit 9c51afa to solve
this regression issue.
https://phabricator.endlessm.com/T26524",I'm ignoring the CI check as the build environment was broken at the time of this PR.,True,{}
endlessm/linux,https://github.com/endlessm/linux,471,2019-05-16T18:44:54Z,2019-05-16T18:49:46Z,2019-05-16T18:49:57Z,MERGED,True,2,0,1,https://github.com/jprvita,Bluetooth: Add two new QCA_ROME devices,2,[],https://github.com/endlessm/linux/pull/471,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/471,"Without the QCA ROME setup routine these adapters fail to establish a SCO
connection.
T:  Bus=01 Lev=01 Prnt=01 Port=08 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3491 Rev=00.01
C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:  If#=0x0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
I:  If#=0x1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
T:  Bus=01 Lev=01 Prnt=01 Port=04 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3501 Rev=00.01
C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:  If#=0x0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
I:  If#=0x1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T24996","Without the QCA ROME setup routine these adapters fail to establish a SCO
connection.
T:  Bus=01 Lev=01 Prnt=01 Port=08 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3491 Rev=00.01
C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:  If#=0x0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
I:  If#=0x1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
T:  Bus=01 Lev=01 Prnt=01 Port=04 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3501 Rev=00.01
C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
I:  If#=0x0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
I:  If#=0x1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
Signed-off-by: João Paulo Rechi Vita jprvita@endlessm.com
https://phabricator.endlessm.com/T24996",True,{}
endlessm/linux,https://github.com/endlessm/linux,472,2019-05-17T17:32:07Z,2019-05-17T17:46:15Z,2019-05-17T17:46:19Z,MERGED,True,1,1,1,https://github.com/jprvita,net: rds: force to destroy connection if t_sock is NULL in rds_tcp_kill_sock().,1,[],https://github.com/endlessm/linux/pull/472,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/472,"When it is to cleanup net namespace, rds_tcp_exit_net() will call
rds_tcp_kill_sock(), if t_sock is NULL, it will not call
rds_conn_destroy(), rds_conn_path_destroy() and rds_tcp_conn_free() to free
connection, and the worker cp_conn_w is not stopped, afterwards the net is freed in
net_drop_ns(); While cp_conn_w rds_connect_worker() will call rds_tcp_conn_path_connect()
and reference 'net' which has already been freed.
In rds_tcp_conn_path_connect(), rds_tcp_set_callbacks() will set t_sock = sock before
sock->ops->connect, but if connect() is failed, it will call
rds_tcp_restore_callbacks() and set t_sock = NULL, if connect is always
failed, rds_connect_worker() will try to reconnect all the time, so
rds_tcp_kill_sock() will never to cancel worker cp_conn_w and free the
connections.
Therefore, the condition !tc->t_sock is not needed if it is going to do
cleanup_net->rds_tcp_exit_net->rds_tcp_kill_sock, because tc->t_sock is always
NULL, and there is on other path to cancel cp_conn_w and free
connection. So this patch is to fix this.
rds_tcp_kill_sock():
...
if (net != c_net || !tc->t_sock)
...
Acked-by: Santosh Shilimkar santosh.shilimkar@oracle.com
==================================================================
BUG: KASAN: use-after-free in inet_create+0xbcc/0xd28
net/ipv4/af_inet.c:340
Read of size 4 at addr ffff8003496a4684 by task kworker/u8:4/3721
CPU: 3 PID: 3721 Comm: kworker/u8:4 Not tainted 5.1.0 #11
Hardware name: linux,dummy-virt (DT)
Workqueue: krdsd rds_connect_worker
Call trace:
dump_backtrace+0x0/0x3c0 arch/arm64/kernel/time.c:53
show_stack+0x28/0x38 arch/arm64/kernel/traps.c:152
__dump_stack lib/dump_stack.c:77 [inline]
dump_stack+0x120/0x188 lib/dump_stack.c:113
print_address_description+0x68/0x278 mm/kasan/report.c:253
kasan_report_error mm/kasan/report.c:351 [inline]
kasan_report+0x21c/0x348 mm/kasan/report.c:409
__asan_report_load4_noabort+0x30/0x40 mm/kasan/report.c:429
inet_create+0xbcc/0xd28 net/ipv4/af_inet.c:340
__sock_create+0x4f8/0x770 net/socket.c:1276
sock_create_kern+0x50/0x68 net/socket.c:1322
rds_tcp_conn_path_connect+0x2b4/0x690 net/rds/tcp_connect.c:114
rds_connect_worker+0x108/0x1d0 net/rds/threads.c:175
process_one_work+0x6e8/0x1700 kernel/workqueue.c:2153
worker_thread+0x3b0/0xdd0 kernel/workqueue.c:2296
kthread+0x2f0/0x378 kernel/kthread.c:255
ret_from_fork+0x10/0x18 arch/arm64/kernel/entry.S:1117
Allocated by task 687:
save_stack mm/kasan/kasan.c:448 [inline]
set_track mm/kasan/kasan.c:460 [inline]
kasan_kmalloc+0xd4/0x180 mm/kasan/kasan.c:553
kasan_slab_alloc+0x14/0x20 mm/kasan/kasan.c:490
slab_post_alloc_hook mm/slab.h:444 [inline]
slab_alloc_node mm/slub.c:2705 [inline]
slab_alloc mm/slub.c:2713 [inline]
kmem_cache_alloc+0x14c/0x388 mm/slub.c:2718
kmem_cache_zalloc include/linux/slab.h:697 [inline]
net_alloc net/core/net_namespace.c:384 [inline]
copy_net_ns+0xc4/0x2d0 net/core/net_namespace.c:424
create_new_namespaces+0x300/0x658 kernel/nsproxy.c:107
unshare_nsproxy_namespaces+0xa0/0x198 kernel/nsproxy.c:206
ksys_unshare+0x340/0x628 kernel/fork.c:2577
__do_sys_unshare kernel/fork.c:2645 [inline]
__se_sys_unshare kernel/fork.c:2643 [inline]
__arm64_sys_unshare+0x38/0x58 kernel/fork.c:2643
__invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]
invoke_syscall arch/arm64/kernel/syscall.c:47 [inline]
el0_svc_common+0x168/0x390 arch/arm64/kernel/syscall.c:83
el0_svc_handler+0x60/0xd0 arch/arm64/kernel/syscall.c:129
el0_svc+0x8/0xc arch/arm64/kernel/entry.S:960
Freed by task 264:
save_stack mm/kasan/kasan.c:448 [inline]
set_track mm/kasan/kasan.c:460 [inline]
__kasan_slab_free+0x114/0x220 mm/kasan/kasan.c:521
kasan_slab_free+0x10/0x18 mm/kasan/kasan.c:528
slab_free_hook mm/slub.c:1370 [inline]
slab_free_freelist_hook mm/slub.c:1397 [inline]
slab_free mm/slub.c:2952 [inline]
kmem_cache_free+0xb8/0x3a8 mm/slub.c:2968
net_free net/core/net_namespace.c:400 [inline]
net_drop_ns.part.6+0x78/0x90 net/core/net_namespace.c:407
net_drop_ns net/core/net_namespace.c:406 [inline]
cleanup_net+0x53c/0x6d8 net/core/net_namespace.c:569
process_one_work+0x6e8/0x1700 kernel/workqueue.c:2153
worker_thread+0x3b0/0xdd0 kernel/workqueue.c:2296
kthread+0x2f0/0x378 kernel/kthread.c:255
ret_from_fork+0x10/0x18 arch/arm64/kernel/entry.S:1117
The buggy address belongs to the object at ffff8003496a3f80
which belongs to the cache net_namespace of size 7872
The buggy address is located 1796 bytes inside of
7872-byte region [ffff8003496a3f80, ffff8003496a5e40)
The buggy address belongs to the page:
page:ffff7e000d25a800 count:1 mapcount:0 mapping:ffff80036ce4b000
index:0x0 compound_mapcount: 0
flags: 0xffffe0000008100(slab|head)
raw: 0ffffe0000008100 dead000000000100 dead000000000200 ffff80036ce4b000
raw: 0000000000000000 0000000080040004 00000001ffffffff 0000000000000000
page dumped because: kasan: bad access detected
Memory state around the buggy address:
ffff8003496a4580: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
ffff8003496a4600: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb

ffff8003496a4680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
^
ffff8003496a4700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
ffff8003496a4780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
==================================================================

Fixes: 467fa15(""RDS-TCP: Support multiple RDS-TCP listen endpoints, one per netns."")
Reported-by: Hulk Robot hulkci@huawei.com
Signed-off-by: Mao Wenan maowenan@huawei.com
Signed-off-by: David S. Miller davem@davemloft.net","When it is to cleanup net namespace, rds_tcp_exit_net() will call
rds_tcp_kill_sock(), if t_sock is NULL, it will not call
rds_conn_destroy(), rds_conn_path_destroy() and rds_tcp_conn_free() to free
connection, and the worker cp_conn_w is not stopped, afterwards the net is freed in
net_drop_ns(); While cp_conn_w rds_connect_worker() will call rds_tcp_conn_path_connect()
and reference 'net' which has already been freed.
In rds_tcp_conn_path_connect(), rds_tcp_set_callbacks() will set t_sock = sock before
sock->ops->connect, but if connect() is failed, it will call
rds_tcp_restore_callbacks() and set t_sock = NULL, if connect is always
failed, rds_connect_worker() will try to reconnect all the time, so
rds_tcp_kill_sock() will never to cancel worker cp_conn_w and free the
connections.
Therefore, the condition !tc->t_sock is not needed if it is going to do
cleanup_net->rds_tcp_exit_net->rds_tcp_kill_sock, because tc->t_sock is always
NULL, and there is on other path to cancel cp_conn_w and free
connection. So this patch is to fix this.
rds_tcp_kill_sock():
...
if (net != c_net || !tc->t_sock)
...
Acked-by: Santosh Shilimkar santosh.shilimkar@oracle.com
==================================================================
BUG: KASAN: use-after-free in inet_create+0xbcc/0xd28
net/ipv4/af_inet.c:340
Read of size 4 at addr ffff8003496a4684 by task kworker/u8:4/3721
CPU: 3 PID: 3721 Comm: kworker/u8:4 Not tainted 5.1.0 #11
Hardware name: linux,dummy-virt (DT)
Workqueue: krdsd rds_connect_worker
Call trace:
dump_backtrace+0x0/0x3c0 arch/arm64/kernel/time.c:53
show_stack+0x28/0x38 arch/arm64/kernel/traps.c:152
__dump_stack lib/dump_stack.c:77 [inline]
dump_stack+0x120/0x188 lib/dump_stack.c:113
print_address_description+0x68/0x278 mm/kasan/report.c:253
kasan_report_error mm/kasan/report.c:351 [inline]
kasan_report+0x21c/0x348 mm/kasan/report.c:409
__asan_report_load4_noabort+0x30/0x40 mm/kasan/report.c:429
inet_create+0xbcc/0xd28 net/ipv4/af_inet.c:340
__sock_create+0x4f8/0x770 net/socket.c:1276
sock_create_kern+0x50/0x68 net/socket.c:1322
rds_tcp_conn_path_connect+0x2b4/0x690 net/rds/tcp_connect.c:114
rds_connect_worker+0x108/0x1d0 net/rds/threads.c:175
process_one_work+0x6e8/0x1700 kernel/workqueue.c:2153
worker_thread+0x3b0/0xdd0 kernel/workqueue.c:2296
kthread+0x2f0/0x378 kernel/kthread.c:255
ret_from_fork+0x10/0x18 arch/arm64/kernel/entry.S:1117
Allocated by task 687:
save_stack mm/kasan/kasan.c:448 [inline]
set_track mm/kasan/kasan.c:460 [inline]
kasan_kmalloc+0xd4/0x180 mm/kasan/kasan.c:553
kasan_slab_alloc+0x14/0x20 mm/kasan/kasan.c:490
slab_post_alloc_hook mm/slab.h:444 [inline]
slab_alloc_node mm/slub.c:2705 [inline]
slab_alloc mm/slub.c:2713 [inline]
kmem_cache_alloc+0x14c/0x388 mm/slub.c:2718
kmem_cache_zalloc include/linux/slab.h:697 [inline]
net_alloc net/core/net_namespace.c:384 [inline]
copy_net_ns+0xc4/0x2d0 net/core/net_namespace.c:424
create_new_namespaces+0x300/0x658 kernel/nsproxy.c:107
unshare_nsproxy_namespaces+0xa0/0x198 kernel/nsproxy.c:206
ksys_unshare+0x340/0x628 kernel/fork.c:2577
__do_sys_unshare kernel/fork.c:2645 [inline]
__se_sys_unshare kernel/fork.c:2643 [inline]
__arm64_sys_unshare+0x38/0x58 kernel/fork.c:2643
__invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]
invoke_syscall arch/arm64/kernel/syscall.c:47 [inline]
el0_svc_common+0x168/0x390 arch/arm64/kernel/syscall.c:83
el0_svc_handler+0x60/0xd0 arch/arm64/kernel/syscall.c:129
el0_svc+0x8/0xc arch/arm64/kernel/entry.S:960
Freed by task 264:
save_stack mm/kasan/kasan.c:448 [inline]
set_track mm/kasan/kasan.c:460 [inline]
__kasan_slab_free+0x114/0x220 mm/kasan/kasan.c:521
kasan_slab_free+0x10/0x18 mm/kasan/kasan.c:528
slab_free_hook mm/slub.c:1370 [inline]
slab_free_freelist_hook mm/slub.c:1397 [inline]
slab_free mm/slub.c:2952 [inline]
kmem_cache_free+0xb8/0x3a8 mm/slub.c:2968
net_free net/core/net_namespace.c:400 [inline]
net_drop_ns.part.6+0x78/0x90 net/core/net_namespace.c:407
net_drop_ns net/core/net_namespace.c:406 [inline]
cleanup_net+0x53c/0x6d8 net/core/net_namespace.c:569
process_one_work+0x6e8/0x1700 kernel/workqueue.c:2153
worker_thread+0x3b0/0xdd0 kernel/workqueue.c:2296
kthread+0x2f0/0x378 kernel/kthread.c:255
ret_from_fork+0x10/0x18 arch/arm64/kernel/entry.S:1117
The buggy address belongs to the object at ffff8003496a3f80
which belongs to the cache net_namespace of size 7872
The buggy address is located 1796 bytes inside of
7872-byte region [ffff8003496a3f80, ffff8003496a5e40)
The buggy address belongs to the page:
page:ffff7e000d25a800 count:1 mapcount:0 mapping:ffff80036ce4b000
index:0x0 compound_mapcount: 0
flags: 0xffffe0000008100(slab|head)
raw: 0ffffe0000008100 dead000000000100 dead000000000200 ffff80036ce4b000
raw: 0000000000000000 0000000080040004 00000001ffffffff 0000000000000000
page dumped because: kasan: bad access detected
Memory state around the buggy address:
ffff8003496a4580: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
ffff8003496a4600: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb

ffff8003496a4680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
^
ffff8003496a4700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
ffff8003496a4780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
==================================================================

Fixes: 467fa15(""RDS-TCP: Support multiple RDS-TCP listen endpoints, one per netns."")
Reported-by: Hulk Robot hulkci@huawei.com
Signed-off-by: Mao Wenan maowenan@huawei.com
Signed-off-by: David S. Miller davem@davemloft.net",True,{}
endlessm/linux,https://github.com/endlessm/linux,472,2019-05-17T17:32:07Z,2019-05-17T17:46:15Z,2019-05-17T17:46:19Z,MERGED,True,1,1,1,https://github.com/jprvita,net: rds: force to destroy connection if t_sock is NULL in rds_tcp_kill_sock().,1,[],https://github.com/endlessm/linux/pull/472,https://github.com/ManMower,2,https://github.com/endlessm/linux/pull/472#issuecomment-493540004,"When it is to cleanup net namespace, rds_tcp_exit_net() will call
rds_tcp_kill_sock(), if t_sock is NULL, it will not call
rds_conn_destroy(), rds_conn_path_destroy() and rds_tcp_conn_free() to free
connection, and the worker cp_conn_w is not stopped, afterwards the net is freed in
net_drop_ns(); While cp_conn_w rds_connect_worker() will call rds_tcp_conn_path_connect()
and reference 'net' which has already been freed.
In rds_tcp_conn_path_connect(), rds_tcp_set_callbacks() will set t_sock = sock before
sock->ops->connect, but if connect() is failed, it will call
rds_tcp_restore_callbacks() and set t_sock = NULL, if connect is always
failed, rds_connect_worker() will try to reconnect all the time, so
rds_tcp_kill_sock() will never to cancel worker cp_conn_w and free the
connections.
Therefore, the condition !tc->t_sock is not needed if it is going to do
cleanup_net->rds_tcp_exit_net->rds_tcp_kill_sock, because tc->t_sock is always
NULL, and there is on other path to cancel cp_conn_w and free
connection. So this patch is to fix this.
rds_tcp_kill_sock():
...
if (net != c_net || !tc->t_sock)
...
Acked-by: Santosh Shilimkar santosh.shilimkar@oracle.com
==================================================================
BUG: KASAN: use-after-free in inet_create+0xbcc/0xd28
net/ipv4/af_inet.c:340
Read of size 4 at addr ffff8003496a4684 by task kworker/u8:4/3721
CPU: 3 PID: 3721 Comm: kworker/u8:4 Not tainted 5.1.0 #11
Hardware name: linux,dummy-virt (DT)
Workqueue: krdsd rds_connect_worker
Call trace:
dump_backtrace+0x0/0x3c0 arch/arm64/kernel/time.c:53
show_stack+0x28/0x38 arch/arm64/kernel/traps.c:152
__dump_stack lib/dump_stack.c:77 [inline]
dump_stack+0x120/0x188 lib/dump_stack.c:113
print_address_description+0x68/0x278 mm/kasan/report.c:253
kasan_report_error mm/kasan/report.c:351 [inline]
kasan_report+0x21c/0x348 mm/kasan/report.c:409
__asan_report_load4_noabort+0x30/0x40 mm/kasan/report.c:429
inet_create+0xbcc/0xd28 net/ipv4/af_inet.c:340
__sock_create+0x4f8/0x770 net/socket.c:1276
sock_create_kern+0x50/0x68 net/socket.c:1322
rds_tcp_conn_path_connect+0x2b4/0x690 net/rds/tcp_connect.c:114
rds_connect_worker+0x108/0x1d0 net/rds/threads.c:175
process_one_work+0x6e8/0x1700 kernel/workqueue.c:2153
worker_thread+0x3b0/0xdd0 kernel/workqueue.c:2296
kthread+0x2f0/0x378 kernel/kthread.c:255
ret_from_fork+0x10/0x18 arch/arm64/kernel/entry.S:1117
Allocated by task 687:
save_stack mm/kasan/kasan.c:448 [inline]
set_track mm/kasan/kasan.c:460 [inline]
kasan_kmalloc+0xd4/0x180 mm/kasan/kasan.c:553
kasan_slab_alloc+0x14/0x20 mm/kasan/kasan.c:490
slab_post_alloc_hook mm/slab.h:444 [inline]
slab_alloc_node mm/slub.c:2705 [inline]
slab_alloc mm/slub.c:2713 [inline]
kmem_cache_alloc+0x14c/0x388 mm/slub.c:2718
kmem_cache_zalloc include/linux/slab.h:697 [inline]
net_alloc net/core/net_namespace.c:384 [inline]
copy_net_ns+0xc4/0x2d0 net/core/net_namespace.c:424
create_new_namespaces+0x300/0x658 kernel/nsproxy.c:107
unshare_nsproxy_namespaces+0xa0/0x198 kernel/nsproxy.c:206
ksys_unshare+0x340/0x628 kernel/fork.c:2577
__do_sys_unshare kernel/fork.c:2645 [inline]
__se_sys_unshare kernel/fork.c:2643 [inline]
__arm64_sys_unshare+0x38/0x58 kernel/fork.c:2643
__invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]
invoke_syscall arch/arm64/kernel/syscall.c:47 [inline]
el0_svc_common+0x168/0x390 arch/arm64/kernel/syscall.c:83
el0_svc_handler+0x60/0xd0 arch/arm64/kernel/syscall.c:129
el0_svc+0x8/0xc arch/arm64/kernel/entry.S:960
Freed by task 264:
save_stack mm/kasan/kasan.c:448 [inline]
set_track mm/kasan/kasan.c:460 [inline]
__kasan_slab_free+0x114/0x220 mm/kasan/kasan.c:521
kasan_slab_free+0x10/0x18 mm/kasan/kasan.c:528
slab_free_hook mm/slub.c:1370 [inline]
slab_free_freelist_hook mm/slub.c:1397 [inline]
slab_free mm/slub.c:2952 [inline]
kmem_cache_free+0xb8/0x3a8 mm/slub.c:2968
net_free net/core/net_namespace.c:400 [inline]
net_drop_ns.part.6+0x78/0x90 net/core/net_namespace.c:407
net_drop_ns net/core/net_namespace.c:406 [inline]
cleanup_net+0x53c/0x6d8 net/core/net_namespace.c:569
process_one_work+0x6e8/0x1700 kernel/workqueue.c:2153
worker_thread+0x3b0/0xdd0 kernel/workqueue.c:2296
kthread+0x2f0/0x378 kernel/kthread.c:255
ret_from_fork+0x10/0x18 arch/arm64/kernel/entry.S:1117
The buggy address belongs to the object at ffff8003496a3f80
which belongs to the cache net_namespace of size 7872
The buggy address is located 1796 bytes inside of
7872-byte region [ffff8003496a3f80, ffff8003496a5e40)
The buggy address belongs to the page:
page:ffff7e000d25a800 count:1 mapcount:0 mapping:ffff80036ce4b000
index:0x0 compound_mapcount: 0
flags: 0xffffe0000008100(slab|head)
raw: 0ffffe0000008100 dead000000000100 dead000000000200 ffff80036ce4b000
raw: 0000000000000000 0000000080040004 00000001ffffffff 0000000000000000
page dumped because: kasan: bad access detected
Memory state around the buggy address:
ffff8003496a4580: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
ffff8003496a4600: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb

ffff8003496a4680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
^
ffff8003496a4700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
ffff8003496a4780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
==================================================================

Fixes: 467fa15(""RDS-TCP: Support multiple RDS-TCP listen endpoints, one per netns."")
Reported-by: Hulk Robot hulkci@huawei.com
Signed-off-by: Mao Wenan maowenan@huawei.com
Signed-off-by: David S. Miller davem@davemloft.net","Trivial upstream cherry-pick that closes an obscure but real DoS possibility...
Looks good to me",True,{}
endlessm/linux,https://github.com/endlessm/linux,473,2019-05-21T08:52:29Z,2019-05-21T08:59:01Z,2019-05-21T08:59:05Z,MERGED,True,1,0,1,https://github.com/mschiu77,ALSA: hda/realtek: Enable headset mic of ASUS MJ401TA with ALC256,1,[],https://github.com/endlessm/linux/pull/473,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/473,"The ASUS laptop MJ401TA with ALC256 can't detect the headset microphone
until ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
https://phabricator.endlessm.com/T26249
Signed-off-by: Chris Chiu chiu@endlessm.com","The ASUS laptop MJ401TA with ALC256 can't detect the headset microphone
until ALC256_FIXUP_ASUS_MIC_NO_PRESENCE quirk applied.
https://phabricator.endlessm.com/T26249
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,474,2019-05-28T20:04:22Z,2019-05-29T19:41:09Z,2019-05-29T19:41:13Z,MERGED,True,7,0,1,https://github.com/jprvita,drm/i915: HDCP state handling in ddi_update_pipe,1,[],https://github.com/endlessm/linux/pull/474,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/474,"The downgrade of the fullmodeset into fastset
intel_encoder->update_pipe, in possible scenario, skips the En/Dis-able
DDI. Hence breaks the HDCP state change handling.
We also don't have any hdcp tests in CI, because the shard runs don't
have hdcp capable outputs :-/
So this change fixs it by handling the HDCP state change request at
intel_encoder->update_pipe too along with enable and disable of the DDI.
Fixes: d19f958 (""drm/i915: Enable fastset for non-boot modesets."")
v2:
Added commit id that broke the HDCP [Daniel]
Signed-off-by: Ramalingam C ramalingam.c@intel.com
cc: Maarten Lankhorst maarten.lankhorst@linux.intel.com
cc: Hans de Goede hdegoede@redhat.com
cc: Daniel Vetter daniel.vetter@intel.com
Signed-off-by: Daniel Vetter daniel.vetter@ffwll.ch
Link: https://patchwork.freedesktop.org/patch/msgid/1549295080-18353-1-git-send-email-ramalingam.c@intel.com
(cherry picked from commit 634852d)
Signed-off-by: Rodrigo Vivi rodrigo.vivi@intel.com","The downgrade of the fullmodeset into fastset
intel_encoder->update_pipe, in possible scenario, skips the En/Dis-able
DDI. Hence breaks the HDCP state change handling.
We also don't have any hdcp tests in CI, because the shard runs don't
have hdcp capable outputs :-/
So this change fixs it by handling the HDCP state change request at
intel_encoder->update_pipe too along with enable and disable of the DDI.
Fixes: d19f958 (""drm/i915: Enable fastset for non-boot modesets."")
v2:
Added commit id that broke the HDCP [Daniel]
Signed-off-by: Ramalingam C ramalingam.c@intel.com
cc: Maarten Lankhorst maarten.lankhorst@linux.intel.com
cc: Hans de Goede hdegoede@redhat.com
cc: Daniel Vetter daniel.vetter@intel.com
Signed-off-by: Daniel Vetter daniel.vetter@ffwll.ch
Link: https://patchwork.freedesktop.org/patch/msgid/1549295080-18353-1-git-send-email-ramalingam.c@intel.com
(cherry picked from commit 634852d)
Signed-off-by: Rodrigo Vivi rodrigo.vivi@intel.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,475,2019-06-13T07:06:15Z,2019-06-13T07:18:03Z,2019-06-13T07:18:07Z,MERGED,True,286,64,6,https://github.com/starnight,drm/i915: Force 2*96 MHz cdclk on glk/cnl when audio power is enabled,5,[],https://github.com/endlessm/linux/pull/475,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/475,"To fix
T26524 Hack device: after suspend the audio playback does not work anymore
T26862 Asus X512DK: HDMI audio disappear after resume from S3
T26929 E406MA: HDMI may have chance to fail sound playback after resume from suspend
We need commit 905801f drm/i915: Force 2*96 MHz cdclk on glk/cnl when audio power is enabled
We also need these commits to prevent screen to flicker when the CDCLK changes on
the laptop like ASUS E406MA after apply the commit ""drm/i915: Force 2*96 MHz cdclk on glk/cnl when audio power is enabled"". 1
commit 48d9f87 drm/i915: Save the old CDCLK atomic state
commit 2b21dfb drm/i915: Remove redundant store of logical CDCLK state
commit 59f9e9c drm/i915: Skip modeset for cdclk changes if possible
https://phabricator.endlessm.com/T26862
https://phabricator.endlessm.com/T26929","To fix
T26524 Hack device: after suspend the audio playback does not work anymore
T26862 Asus X512DK: HDMI audio disappear after resume from S3
T26929 E406MA: HDMI may have chance to fail sound playback after resume from suspend
We need commit 905801f drm/i915: Force 2*96 MHz cdclk on glk/cnl when audio power is enabled
We also need these commits to prevent screen to flicker when the CDCLK changes on
the laptop like ASUS E406MA after apply the commit ""drm/i915: Force 2*96 MHz cdclk on glk/cnl when audio power is enabled"". 1
commit 48d9f87 drm/i915: Save the old CDCLK atomic state
commit 2b21dfb drm/i915: Remove redundant store of logical CDCLK state
commit 59f9e9c drm/i915: Skip modeset for cdclk changes if possible
https://phabricator.endlessm.com/T26862
https://phabricator.endlessm.com/T26929",True,{}
endlessm/linux,https://github.com/endlessm/linux,476,2019-06-21T07:51:15Z,2019-06-21T09:19:44Z,2019-07-16T00:48:16Z,MERGED,True,474,13,3,https://github.com/dsd,PCI: Add Intel remapped NVMe device support,1,[],https://github.com/endlessm/linux/pull/476,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/476,"Consumer products that are configured by default to run the Intel SATA AHCI
controller in ""RAID"" or ""Intel RST Premium With Intel Optane System
Acceleration"" mode are becoming increasingly prevalent.
Unde this mode, NVMe devices are remapped into the SATA device and become
hidden from the PCI bus, which means that Linux users cannot access their
storage devices unless they go into the firmware setup menu to revert back
to AHCI mode - assuming such option is available. Lack of support for this
mode is also causing complications for vendors who distribute Linux.
Add support for the remapped NVMe mode by creating a virtual PCI bus,
where the AHCI and NVMe devices are presented separately, allowing the
ahci and nvme drivers to bind in the normal way.
Unfortunately the NVMe device configuration space is inaccesible under
this scheme, so we provide a fake one, and hope that no DeviceID-based
quirks are needed. The interrupt is shared between the AHCI and NVMe
devices.
The existing ahci driver is modified to not claim devices where remapped
NVMe devices are present, allowing this new driver to step in.
The details of the remapping scheme came from patches previously
posted by Dan Williams and the resulting discussion.
https://phabricator.endlessm.com/T24358
Signed-off-by: Daniel Drake drake@endlessm.com","Consumer products that are configured by default to run the Intel SATA AHCI
controller in ""RAID"" or ""Intel RST Premium With Intel Optane System
Acceleration"" mode are becoming increasingly prevalent.
Unde this mode, NVMe devices are remapped into the SATA device and become
hidden from the PCI bus, which means that Linux users cannot access their
storage devices unless they go into the firmware setup menu to revert back
to AHCI mode - assuming such option is available. Lack of support for this
mode is also causing complications for vendors who distribute Linux.
Add support for the remapped NVMe mode by creating a virtual PCI bus,
where the AHCI and NVMe devices are presented separately, allowing the
ahci and nvme drivers to bind in the normal way.
Unfortunately the NVMe device configuration space is inaccesible under
this scheme, so we provide a fake one, and hope that no DeviceID-based
quirks are needed. The interrupt is shared between the AHCI and NVMe
devices.
The existing ahci driver is modified to not claim devices where remapped
NVMe devices are present, allowing this new driver to step in.
The details of the remapping scheme came from patches previously
posted by Dan Williams and the resulting discussion.
https://phabricator.endlessm.com/T24358
Signed-off-by: Daniel Drake drake@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,477,2019-06-24T03:21:33Z,2019-06-24T18:36:20Z,2019-06-24T18:36:23Z,MERGED,True,4,0,1,https://github.com/starnight,Bluetooth: btrtl: HCI reset on close for RTL8822BE,1,[],https://github.com/endlessm/linux/pull/477,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/477,"Realtek RTL8822BE BT chip on ASUS X420FA cannot be turned on correctly
after on-off several times.  Bluetooth daemon sets BT mode failed when
this issue happens.
bluetoothd[1576]: Failed to set mode: Failed (0x03)
If BT is tunred off, then turned on again, it works correctly again.
This patch makes RTL8822BE BT reset on close to fix this issue.
https://phabricator.endlessm.com/T26102
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Realtek RTL8822BE BT chip on ASUS X420FA cannot be turned on correctly
after on-off several times.  Bluetooth daemon sets BT mode failed when
this issue happens.
bluetoothd[1576]: Failed to set mode: Failed (0x03)
If BT is tunred off, then turned on again, it works correctly again.
This patch makes RTL8822BE BT reset on close to fix this issue.
https://phabricator.endlessm.com/T26102
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,478,2019-07-02T09:13:48Z,2019-07-02T09:18:12Z,2019-07-03T13:11:52Z,CLOSED,False,0,0,0,https://github.com/dsd,Add Endless PAYG LSM,0,[],https://github.com/endlessm/linux/pull/478,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/478,"Allow the paygd PID to be set through
/sys/kernel/security/endlesspayg/paygd_pid
When set, paygd can no longer be ptraced.
https://phabricator.endlessm.com/T27045","Allow the paygd PID to be set through
/sys/kernel/security/endlesspayg/paygd_pid
When set, paygd can no longer be ptraced.
https://phabricator.endlessm.com/T27045",True,{}
endlessm/linux,https://github.com/endlessm/linux,479,2019-07-02T09:21:21Z,2019-07-03T13:11:46Z,2019-07-03T13:11:52Z,MERGED,True,86,1,4,https://github.com/dsd,Add Endless PAYG LSM,1,[],https://github.com/endlessm/linux/pull/479,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/479,"Allow the paygd PID to be set through
/sys/kernel/security/endlesspayg/paygd_pid
When set, paygd can no longer be ptraced.
https://phabricator.endlessm.com/T27045","Allow the paygd PID to be set through
/sys/kernel/security/endlesspayg/paygd_pid
When set, paygd can no longer be ptraced.
https://phabricator.endlessm.com/T27045",True,{}
endlessm/linux,https://github.com/endlessm/linux,480,2019-07-03T06:38:02Z,2019-07-03T06:56:01Z,2019-07-16T00:48:16Z,MERGED,True,0,2,1,https://github.com/dsd,rtl8723bu: always indicate disconnect during netdev_close,1,[],https://github.com/endlessm/linux/pull/480,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/480,"In eos3.5, CONFIG_ANDROID=n, so we were running this code, which
we've previously documented as being the essential thing to tell
cfg80211 that we've disconnected in the suspend/resume path.
In eos3.6, CONFIG_ANDROID=y so we were no longer doing this.
After suspend/resume, wifi reconnection is broken as a result.
""Fix"" this by restoring the eos3.5 behaviour of running this codepath.
https://phabricator.endlessm.com/T20835
https://phabricator.endlessm.com/T27164","In eos3.5, CONFIG_ANDROID=n, so we were running this code, which
we've previously documented as being the essential thing to tell
cfg80211 that we've disconnected in the suspend/resume path.
In eos3.6, CONFIG_ANDROID=y so we were no longer doing this.
After suspend/resume, wifi reconnection is broken as a result.
""Fix"" this by restoring the eos3.5 behaviour of running this codepath.
https://phabricator.endlessm.com/T20835
https://phabricator.endlessm.com/T27164",True,{}
endlessm/linux,https://github.com/endlessm/linux,481,2019-07-03T07:39:22Z,2019-07-03T07:53:39Z,2019-07-03T07:53:41Z,MERGED,True,1,1,1,https://github.com/mschiu77,rtl8821ce: always inform station disconnect event,1,[],https://github.com/endlessm/linux/pull/481,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/481,"The Realtek RTL8821CE only connect to AP successfully at the very
first time. Then it will always fail connecting to other APs. No
authentication/association even observed for each re-connecting.
The cfg80211_connect simply returns w/o really trying to connect
due to the wdev->ssid_len > 0, which indicate that the connection
already exist. It also means the former disconnect is not really
done before re-connecting.
This commit enable RTW_CFG80211_ALWAYS_INFORM_STA_DISCONNECT_EVENT
to tell the cfg80211 to process the disconnect completely.
https://phabricator.endlessm.com/T27112","The Realtek RTL8821CE only connect to AP successfully at the very
first time. Then it will always fail connecting to other APs. No
authentication/association even observed for each re-connecting.
The cfg80211_connect simply returns w/o really trying to connect
due to the wdev->ssid_len > 0, which indicate that the connection
already exist. It also means the former disconnect is not really
done before re-connecting.
This commit enable RTW_CFG80211_ALWAYS_INFORM_STA_DISCONNECT_EVENT
to tell the cfg80211 to process the disconnect completely.
https://phabricator.endlessm.com/T27112",True,{}
endlessm/linux,https://github.com/endlessm/linux,482,2019-07-12T05:44:22Z,2019-07-12T07:51:32Z,2019-07-12T07:51:32Z,MERGED,True,360161,269878,715,https://github.com/dsd,Update RTL8821CE wifi driver,3,[],https://github.com/endlessm/linux/pull/482,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/482,https://phabricator.endlessm.com/T27112,https://phabricator.endlessm.com/T27112,True,{}
endlessm/linux,https://github.com/endlessm/linux,483,2019-07-12T07:10:32Z,2019-07-12T07:52:40Z,2019-07-16T00:49:08Z,MERGED,True,0,8,1,https://github.com/dsd,rtl8723bu: indicate disconnection events when disconnecting,1,[],https://github.com/endlessm/linux/pull/483,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/483,"For some reason, the driver has logic to suppress raising disconnection
events when in these codepaths.
This causes mac80211 to believe the device is still connected. When the
user attempts to switch from one AP to another, the 2nd connection
will fail because of this confusion.
Follow the approach taken in newer Realtek drivers for other hardware,
where these events are only suppressed in the connection codepath,
and issued as normal during disconnection.
https://phabricator.endlessm.com/T27202","For some reason, the driver has logic to suppress raising disconnection
events when in these codepaths.
This causes mac80211 to believe the device is still connected. When the
user attempts to switch from one AP to another, the 2nd connection
will fail because of this confusion.
Follow the approach taken in newer Realtek drivers for other hardware,
where these events are only suppressed in the connection codepath,
and issued as normal during disconnection.
https://phabricator.endlessm.com/T27202",True,{}
endlessm/linux,https://github.com/endlessm/linux,483,2019-07-12T07:10:32Z,2019-07-12T07:52:40Z,2019-07-16T00:49:08Z,MERGED,True,0,8,1,https://github.com/dsd,rtl8723bu: indicate disconnection events when disconnecting,1,[],https://github.com/endlessm/linux/pull/483,https://github.com/mschiu77,2,https://github.com/endlessm/linux/pull/483#issuecomment-510787997,"For some reason, the driver has logic to suppress raising disconnection
events when in these codepaths.
This causes mac80211 to believe the device is still connected. When the
user attempts to switch from one AP to another, the 2nd connection
will fail because of this confusion.
Follow the approach taken in newer Realtek drivers for other hardware,
where these events are only suppressed in the connection codepath,
and issued as normal during disconnection.
https://phabricator.endlessm.com/T27202",Verified on the Connex L1430 also. Looks good.,True,{}
endlessm/linux,https://github.com/endlessm/linux,484,2019-07-17T02:45:59Z,2019-07-17T05:15:09Z,2019-07-17T05:15:13Z,MERGED,True,47559,4,44,https://github.com/starnight,rtw88: new Realtek 802.11ac driver,12,[],https://github.com/endlessm/linux/pull/484,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/484,"Backport new Realtek 802.11ac driver rtw88 from kernel 5.2 to EOS 3.6's kernel 5.0.
https://phabricator.endlessm.com/T25135
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Backport new Realtek 802.11ac driver rtw88 from kernel 5.2 to EOS 3.6's kernel 5.0.
https://phabricator.endlessm.com/T25135
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,485,2019-07-18T06:12:36Z,2019-07-19T04:54:15Z,2019-07-19T04:54:17Z,MERGED,True,14053,0,10,https://github.com/starnight,r8125: Import Realtek r8125 driver,2,[],https://github.com/endlessm/linux/pull/485,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/485,"Get the Realtek r8125 driver from Realtek's website.
https://www.realtek.com/en/component/zoo/category/network-interface-controllers-10-100-1000m-gigabit-ethernet-pci-express-software
https://phabricator.endlessm.com/T27244
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Get the Realtek r8125 driver from Realtek's website.
https://www.realtek.com/en/component/zoo/category/network-interface-controllers-10-100-1000m-gigabit-ethernet-pci-express-software
https://phabricator.endlessm.com/T27244
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,486,2019-07-23T13:37:52Z,2019-07-23T17:09:26Z,2019-07-23T17:09:40Z,MERGED,True,1,1,1,https://github.com/ManMower,config: allow endlesspayg LSM to pass packaging checks,1,[],https://github.com/endlessm/linux/pull/486,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/486,"Turning on our LSM broke the build because the packaging strictly
enforces certain LSM options.  Add our LSM to those.
https://phabricator.endlessm.com/T27045","Turning on our LSM broke the build because the packaging strictly
enforces certain LSM options.  Add our LSM to those.
https://phabricator.endlessm.com/T27045",True,{}
endlessm/linux,https://github.com/endlessm/linux,487,2019-07-25T22:50:49Z,2019-07-30T03:49:28Z,2019-07-30T03:49:38Z,MERGED,True,135,0,5,https://github.com/ManMower,T27174,2,[],https://github.com/endlessm/linux/pull/487,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/487,Add and enable our new watchdog timer,Add and enable our new watchdog timer,True,{}
endlessm/linux,https://github.com/endlessm/linux,488,2019-07-26T17:05:03Z,2019-07-30T03:20:57Z,2019-07-30T03:20:59Z,MERGED,True,13,10,1,https://github.com/ManMower,endlesspayg: disable lsm protections when pidfile closes,1,[],https://github.com/endlessm/linux/pull/488,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/488,"When the process owning the security pid dies, the pid could be reused
by another process.
Require the pidfile be held open, so we can disable all security
measures on close.
https://phabricator.endlessm.com/T27346","When the process owning the security pid dies, the pid could be reused
by another process.
Require the pidfile be held open, so we can disable all security
measures on close.
https://phabricator.endlessm.com/T27346",True,{}
endlessm/linux,https://github.com/endlessm/linux,489,2019-07-31T01:18:12Z,2019-07-31T01:32:11Z,2019-07-31T01:32:15Z,MERGED,True,21,0,2,https://github.com/ManMower,Endless packaging customization,1,[],https://github.com/endlessm/linux/pull/489,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/489,"This adds the initramfs for our PAYG images to the linux-image
package.
https://phabricator.endlessm.com/T27042","This adds the initramfs for our PAYG images to the linux-image
package.
https://phabricator.endlessm.com/T27042",True,{}
endlessm/linux,https://github.com/endlessm/linux,490,2019-08-01T15:15:23Z,2019-08-02T01:41:38Z,2019-08-02T01:41:41Z,CLOSED,False,4,1,2,https://github.com/ManMower,Endless Packaging Customization,1,[],https://github.com/endlessm/linux/pull/490,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/490,"Make efi payg images per-arch optional, only enable for amd64
https://phabricator.endlessm.com/T27042","Make efi payg images per-arch optional, only enable for amd64
https://phabricator.endlessm.com/T27042",True,{}
endlessm/linux,https://github.com/endlessm/linux,491,2019-08-13T02:49:58Z,2019-08-13T03:25:35Z,2019-08-13T03:25:39Z,MERGED,True,40,0,1,https://github.com/starnight,drm/amdgpu: pin the csb buffer on hw init for gfx v8,1,[],https://github.com/endlessm/linux/pull/491,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/491,"Without this pin, the csb buffer will be filled with inconsistent
data after S3 resume. And that will causes gfx hang on gfxoff
exit since this csb will be executed then.
https://phabricator.endlessm.com/T26295
Signed-off-by: Likun Gao Likun.Gao@amd.com
Tested-by: Paul Gover pmw.gover@yahoo.co.uk
Reviewed-by: Feifei Xu Feifei.Xu@amd.com
Reviewed-by: Xiaojie Yuan xiaojie.yuan@amd.com
Signed-off-by: Alex Deucher alexander.deucher@amd.com","Without this pin, the csb buffer will be filled with inconsistent
data after S3 resume. And that will causes gfx hang on gfxoff
exit since this csb will be executed then.
https://phabricator.endlessm.com/T26295
Signed-off-by: Likun Gao Likun.Gao@amd.com
Tested-by: Paul Gover pmw.gover@yahoo.co.uk
Reviewed-by: Feifei Xu Feifei.Xu@amd.com
Reviewed-by: Xiaojie Yuan xiaojie.yuan@amd.com
Signed-off-by: Alex Deucher alexander.deucher@amd.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,492,2019-08-13T08:28:18Z,2019-08-13T09:12:17Z,2019-08-13T09:12:19Z,MERGED,True,119,6,3,https://github.com/starnight,"Asus TP412FA: Intel 660P SSD suspend & resume issue, T27483",2,[],https://github.com/endlessm/linux/pull/492,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/492,"This issue can be fixed by these two commits:

commit 1a87ee6 nvme: export get and set features
commit d916b1b nvme-pci: use host managed power state for suspend

Commit d916b1b is modified for backporting.
https://phabricator.endlessm.com/T27483","This issue can be fixed by these two commits:

commit 1a87ee6 nvme: export get and set features
commit d916b1b nvme-pci: use host managed power state for suspend

Commit d916b1b is modified for backporting.
https://phabricator.endlessm.com/T27483",True,{}
endlessm/linux,https://github.com/endlessm/linux,493,2019-08-16T02:05:14Z,2019-08-16T07:31:24Z,2019-09-17T16:47:19Z,MERGED,True,11,1,1,https://github.com/dsd,pinctrl/amd: disable spurious-firing GPIO IRQs,1,[],https://github.com/endlessm/linux/pull/493,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/493,"When cold-booting Asus X434DA, GPIO 7 is found to be already configured
as an interrupt, and the GPIO level is found to be in a state that
causes the interrupt to fire.
As soon as pinctrl-amd probes, this interrupt fires and invokes
amd_gpio_irq_handler(). The IRQ is acked, but no GPIO-IRQ handler was
invoked, so the GPIO level being unchanged just causes another interrupt
to fire again immediately after.
This results in an interrupt storm causing this platform to hang
during boot, right after pinctrl-amd is probed.
Detect this situation and disable the GPIO interrupt when this happens.
This enables the affected platform to boot as normal. GPIO 7 actually is
the I2C touchpad interrupt line, and later on, i2c-multitouch loads and
re-enables this interrupt when it is ready to handle it.
Instead of this approach, I considered disabling all GPIO interrupts at
probe time, however that seems a little risky, and I also confirmed that
Windows does not seem to have this behaviour: the same 41 GPIO IRQs are
enabled under both Linux and Windows, which is a far larger collection
than the GPIOs referenced by the DSDT on this platform.
Signed-off-by: Daniel Drake drake@endlessm.com
https://phabricator.endlessm.com/T27528","When cold-booting Asus X434DA, GPIO 7 is found to be already configured
as an interrupt, and the GPIO level is found to be in a state that
causes the interrupt to fire.
As soon as pinctrl-amd probes, this interrupt fires and invokes
amd_gpio_irq_handler(). The IRQ is acked, but no GPIO-IRQ handler was
invoked, so the GPIO level being unchanged just causes another interrupt
to fire again immediately after.
This results in an interrupt storm causing this platform to hang
during boot, right after pinctrl-amd is probed.
Detect this situation and disable the GPIO interrupt when this happens.
This enables the affected platform to boot as normal. GPIO 7 actually is
the I2C touchpad interrupt line, and later on, i2c-multitouch loads and
re-enables this interrupt when it is ready to handle it.
Instead of this approach, I considered disabling all GPIO interrupts at
probe time, however that seems a little risky, and I also confirmed that
Windows does not seem to have this behaviour: the same 41 GPIO IRQs are
enabled under both Linux and Windows, which is a far larger collection
than the GPIOs referenced by the DSDT on this platform.
Signed-off-by: Daniel Drake drake@endlessm.com
https://phabricator.endlessm.com/T27528",True,{}
endlessm/linux,https://github.com/endlessm/linux,494,2019-08-16T09:07:12Z,2019-08-19T07:48:04Z,2019-08-19T07:48:08Z,MERGED,True,25,1,1,https://github.com/mschiu77,pinctrl: intel: remap the pin number to gpio offset for irq enabled pin,1,[],https://github.com/endlessm/linux/pull/494,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/494,"On Asus X571GT, GPIO 297 is configured as an interrupt and serves
for the touchpad. The touchpad will report input events much less
than expected after S3 suspend/resume, which results in extremely
slow cursor movement. However, the number of interrupts observed
from /proc/interrupts increases much more than expected even no
touching touchpad.
This is due to the value of PADCFG0 of PIN 225 for the interrupt
has been changed from 0x80800102 to 0x80100102. The GPIROUTIOXAPIC
is toggled on which results in the spurious interrupts. The PADCFG0
of PIN 225 is expected to be saved during suspend, but the 297 is
saved instead because the gpiochip_line_is_irq() expect the GPIO
offset but what's really passed to it is PIN number. In this case,
the /sys/kernel/debug/pinctrl/INT3450:00/gpio-ranges shows
288: INT3450:00 GPIOS [436 - 459] PINS [216 - 239]
So gpiochip_line_is_irq() returns true for GPIO offset 297, the
suspend routine spuriously saves the content for PIN 297 which
we expect to save for PIN 225.
This commit maps the PIN number to GPIO offset first in the
intel_pinctrl_should_save() to make sure the values for the
specific PINs can be correctly saved and then restored.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T27498","On Asus X571GT, GPIO 297 is configured as an interrupt and serves
for the touchpad. The touchpad will report input events much less
than expected after S3 suspend/resume, which results in extremely
slow cursor movement. However, the number of interrupts observed
from /proc/interrupts increases much more than expected even no
touching touchpad.
This is due to the value of PADCFG0 of PIN 225 for the interrupt
has been changed from 0x80800102 to 0x80100102. The GPIROUTIOXAPIC
is toggled on which results in the spurious interrupts. The PADCFG0
of PIN 225 is expected to be saved during suspend, but the 297 is
saved instead because the gpiochip_line_is_irq() expect the GPIO
offset but what's really passed to it is PIN number. In this case,
the /sys/kernel/debug/pinctrl/INT3450:00/gpio-ranges shows
288: INT3450:00 GPIOS [436 - 459] PINS [216 - 239]
So gpiochip_line_is_irq() returns true for GPIO offset 297, the
suspend routine spuriously saves the content for PIN 297 which
we expect to save for PIN 225.
This commit maps the PIN number to GPIO offset first in the
intel_pinctrl_should_save() to make sure the values for the
specific PINs can be correctly saved and then restored.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T27498",True,{}
endlessm/linux,https://github.com/endlessm/linux,494,2019-08-16T09:07:12Z,2019-08-19T07:48:04Z,2019-08-19T07:48:08Z,MERGED,True,25,1,1,https://github.com/mschiu77,pinctrl: intel: remap the pin number to gpio offset for irq enabled pin,1,[],https://github.com/endlessm/linux/pull/494,https://github.com/khfeng,2,https://github.com/endlessm/linux/pull/494#issuecomment-522212881,"On Asus X571GT, GPIO 297 is configured as an interrupt and serves
for the touchpad. The touchpad will report input events much less
than expected after S3 suspend/resume, which results in extremely
slow cursor movement. However, the number of interrupts observed
from /proc/interrupts increases much more than expected even no
touching touchpad.
This is due to the value of PADCFG0 of PIN 225 for the interrupt
has been changed from 0x80800102 to 0x80100102. The GPIROUTIOXAPIC
is toggled on which results in the spurious interrupts. The PADCFG0
of PIN 225 is expected to be saved during suspend, but the 297 is
saved instead because the gpiochip_line_is_irq() expect the GPIO
offset but what's really passed to it is PIN number. In this case,
the /sys/kernel/debug/pinctrl/INT3450:00/gpio-ranges shows
288: INT3450:00 GPIOS [436 - 459] PINS [216 - 239]
So gpiochip_line_is_irq() returns true for GPIO offset 297, the
suspend routine spuriously saves the content for PIN 297 which
we expect to save for PIN 225.
This commit maps the PIN number to GPIO offset first in the
intel_pinctrl_should_save() to make sure the values for the
specific PINs can be correctly saved and then restored.
Signed-off-by: Chris Chiu chiu@endlessm.com
https://phabricator.endlessm.com/T27498","Is it the same as [1]?
[1] https://bugzilla.kernel.org/attachment.cgi?id=283515&action=diff",True,{}
endlessm/linux,https://github.com/endlessm/linux,495,2019-08-20T16:55:50Z,2019-08-28T00:25:16Z,2019-08-28T00:25:19Z,MERGED,True,1,2,1,https://github.com/ManMower,Endless packaging customizations,1,[],https://github.com/endlessm/linux/pull/495,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/495,"put the command line option eospayg in the dracut kernel command line

https://phabricator.endlessm.com/T27524","put the command line option eospayg in the dracut kernel command line

https://phabricator.endlessm.com/T27524",True,{}
endlessm/linux,https://github.com/endlessm/linux,496,2019-08-23T21:45:13Z,2019-08-29T05:06:53Z,2019-08-29T05:06:55Z,MERGED,True,159,0,3,https://github.com/ManMower,T27046,2,[],https://github.com/endlessm/linux/pull/496,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/496,"Add efi variable filtering to endless security module
https://phabricator.endlessm.com/T27046","Add efi variable filtering to endless security module
https://phabricator.endlessm.com/T27046",True,{}
endlessm/linux,https://github.com/endlessm/linux,497,2019-08-29T15:05:47Z,2019-08-29T15:09:56Z,2019-08-29T15:09:56Z,MERGED,True,13,0,1,https://github.com/ManMower,endlesspayg: Add missing include file,1,[],https://github.com/endlessm/linux/pull/497,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/497,"Brown paper bag.
https://phabricator.endlessm.com/T27046","Brown paper bag.
https://phabricator.endlessm.com/T27046",True,{}
endlessm/linux,https://github.com/endlessm/linux,498,2019-08-29T19:49:53Z,2019-08-29T20:23:57Z,2019-08-29T20:24:02Z,MERGED,True,0,22,2,https://github.com/ManMower,"Revert ""Endless packaging customization""",1,[],https://github.com/endlessm/linux/pull/498,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/498,"This reverts commit b3094da.
https://phabricator.endlessm.com/T27042","This reverts commit b3094da.
https://phabricator.endlessm.com/T27042",True,{}
endlessm/linux,https://github.com/endlessm/linux,499,2019-09-03T20:21:09Z,2019-09-05T03:29:43Z,2019-09-05T03:29:45Z,MERGED,True,19,6,1,https://github.com/ManMower,endlesspayg: protect emmc ro controls,1,[],https://github.com/endlessm/linux/pull/499,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/499,"Filter unauthorized access to emmc read-only controls.
https://phabricator.endlessm.com/T27048","Filter unauthorized access to emmc read-only controls.
https://phabricator.endlessm.com/T27048",True,{}
endlessm/linux,https://github.com/endlessm/linux,500,2019-09-05T02:37:43Z,2019-09-05T03:18:42Z,2019-09-05T03:18:45Z,MERGED,True,12,0,1,https://github.com/starnight,ALSA: hda/realtek - Enable internal speaker & headset mic of ASUS UX431FL,1,[],https://github.com/endlessm/linux/pull/500,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/500,"Original pin node values of ASUS UX431FL with ALC294:
0x12 0xb7a60140
0x13 0x40000000
0x14 0x90170110
0x15 0x411111f0
0x16 0x411111f0
0x17 0x90170111
0x18 0x411111f0
0x19 0x411111f0
0x1a 0x411111f0
0x1b 0x411111f0
0x1d 0x4066852d
0x1e 0x411111f0
0x1f 0x411111f0
0x21 0x04211020

Has duplicated internal speakers (0x14 & 0x17) which makes the output
route become confused. So, the output volume cannot be changed by
setting.
Misses the headset mic pin node.

This patch disables the confusing speaker (NID 0x14) and enables the
headset mic (NID 0x19).
https://phabricator.endlessm.com/T27316
Link: https://lore.kernel.org/r/20190902100054.6941-1-jian-hong@endlessm.com
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Signed-off-by: Takashi Iwai tiwai@suse.de","Original pin node values of ASUS UX431FL with ALC294:
0x12 0xb7a60140
0x13 0x40000000
0x14 0x90170110
0x15 0x411111f0
0x16 0x411111f0
0x17 0x90170111
0x18 0x411111f0
0x19 0x411111f0
0x1a 0x411111f0
0x1b 0x411111f0
0x1d 0x4066852d
0x1e 0x411111f0
0x1f 0x411111f0
0x21 0x04211020

Has duplicated internal speakers (0x14 & 0x17) which makes the output
route become confused. So, the output volume cannot be changed by
setting.
Misses the headset mic pin node.

This patch disables the confusing speaker (NID 0x14) and enables the
headset mic (NID 0x19).
https://phabricator.endlessm.com/T27316
Link: https://lore.kernel.org/r/20190902100054.6941-1-jian-hong@endlessm.com
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,501,2019-09-05T02:56:04Z,2019-09-05T03:21:34Z,2019-09-05T03:21:36Z,MERGED,True,3,0,1,https://github.com/starnight,Bluetooth: btrtl: Additional Realtek 8822CE Bluetooth devices,1,[],https://github.com/endlessm/linux/pull/501,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/501,"The ASUS X412FA laptop contains a Realtek RTL8822CE device with an
associated BT chip using a USB ID of 04ca:4005. This ID is added to the
driver.
The /sys/kernel/debug/usb/devices portion for this device is:
T:  Bus=01 Lev=01 Prnt=01 Port=09 Cnt=04 Dev#=  4 Spd=12   MxCh= 0
D:  Ver= 1.00 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=04ca ProdID=4005 Rev= 0.00
S:  Manufacturer=Realtek
S:  Product=Bluetooth Radio
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=a0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T27617
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=204707
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Signed-off-by: Marcel Holtmann marcel@holtmann.org","The ASUS X412FA laptop contains a Realtek RTL8822CE device with an
associated BT chip using a USB ID of 04ca:4005. This ID is added to the
driver.
The /sys/kernel/debug/usb/devices portion for this device is:
T:  Bus=01 Lev=01 Prnt=01 Port=09 Cnt=04 Dev#=  4 Spd=12   MxCh= 0
D:  Ver= 1.00 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=04ca ProdID=4005 Rev= 0.00
S:  Manufacturer=Realtek
S:  Product=Bluetooth Radio
S:  SerialNumber=00e04c000001
C:* #Ifs= 2 Cfg#= 1 Atr=a0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
https://phabricator.endlessm.com/T27617
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=204707
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Signed-off-by: Marcel Holtmann marcel@holtmann.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,502,2019-09-05T03:27:12Z,2019-09-13T21:55:02Z,2019-09-13T21:55:09Z,MERGED,True,2,2,1,https://github.com/mwleeds,endlessdog: Increase timeout to 20 minutes,1,[],https://github.com/endlessm/linux/pull/502,https://github.com/mwleeds,1,https://github.com/endlessm/linux/pull/502,"Increase the watchdog timeout. For the rationale see the ticket linked
below.
https://phabricator.endlessm.com/T27051","Increase the watchdog timeout. For the rationale see the ticket linked
below.
https://phabricator.endlessm.com/T27051",True,{}
endlessm/linux,https://github.com/endlessm/linux,502,2019-09-05T03:27:12Z,2019-09-13T21:55:02Z,2019-09-13T21:55:09Z,MERGED,True,2,2,1,https://github.com/mwleeds,endlessdog: Increase timeout to 20 minutes,1,[],https://github.com/endlessm/linux/pull/502,https://github.com/mwleeds,2,https://github.com/endlessm/linux/pull/502#issuecomment-528181310,"Increase the watchdog timeout. For the rationale see the ticket linked
below.
https://phabricator.endlessm.com/T27051",Don't merge yet; I'd like feedback on the ticket first.,True,{}
endlessm/linux,https://github.com/endlessm/linux,503,2019-09-05T19:12:14Z,2019-09-12T14:27:16Z,2019-09-12T14:27:19Z,MERGED,True,10,0,1,https://github.com/ManMower,endlesspayg: Block signals,1,[],https://github.com/endlessm/linux/pull/503,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/503,"This prevents signal delivery to the payg LSM owner.
https://phabricator.endlessm.com/T27663","This prevents signal delivery to the payg LSM owner.
https://phabricator.endlessm.com/T27663",True,{}
endlessm/linux,https://github.com/endlessm/linux,503,2019-09-05T19:12:14Z,2019-09-12T14:27:16Z,2019-09-12T14:27:19Z,MERGED,True,10,0,1,https://github.com/ManMower,endlesspayg: Block signals,1,[],https://github.com/endlessm/linux/pull/503,https://github.com/mwleeds,2,https://github.com/endlessm/linux/pull/503#issuecomment-528960301,"This prevents signal delivery to the payg LSM owner.
https://phabricator.endlessm.com/T27663","If we could hold off on merging this until after the Dev QA on this ticket happens, that would be helpful.",True,{}
endlessm/linux,https://github.com/endlessm/linux,503,2019-09-05T19:12:14Z,2019-09-12T14:27:16Z,2019-09-12T14:27:19Z,MERGED,True,10,0,1,https://github.com/ManMower,endlesspayg: Block signals,1,[],https://github.com/endlessm/linux/pull/503,https://github.com/mwleeds,3,https://github.com/endlessm/linux/pull/503#issuecomment-528961258,"This prevents signal delivery to the payg LSM owner.
https://phabricator.endlessm.com/T27663","If we could hold off on merging this until after the Dev QA on this ticket happens, that would be helpful.

Never mind, this won't have any effect until we have https://phabricator.endlessm.com/T27050",True,{}
endlessm/linux,https://github.com/endlessm/linux,504,2019-09-06T02:56:24Z,2019-09-11T06:29:29Z,2019-09-11T06:29:32Z,MERGED,True,50,0,3,https://github.com/starnight,Endless Packaging Customization,1,[],https://github.com/endlessm/linux/pull/504,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/504,"Deploy all device trees in a single generic FDT files.
https://phabricator.endlessm.com/T27541","Deploy all device trees in a single generic FDT files.
https://phabricator.endlessm.com/T27541",True,{}
endlessm/linux,https://github.com/endlessm/linux,505,2019-09-06T04:26:59Z,2019-09-06T04:58:01Z,2019-09-06T04:58:03Z,MERGED,True,20,8,1,https://github.com/mschiu77,mfd: intel-lpss: Add default I2C device properties for Gemini Lake,1,[],https://github.com/endlessm/linux/pull/505,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/505,"It turned out Intel Gemini Lake doesn't use the same I2C timing
parameters as Broxton.
I got confirmation from the Windows team that Gemini Lake systems should
use updated timing parameters that differ from those used in Broxton
based systems.
Fixes: f80e78a (""mfd: intel-lpss: Add Intel Gemini Lake PCI IDs"")
Tested-by: Chris Chiu chiu@endlessm.com
Signed-off-by: Jarkko Nikula jarkko.nikula@linux.intel.com","It turned out Intel Gemini Lake doesn't use the same I2C timing
parameters as Broxton.
I got confirmation from the Windows team that Gemini Lake systems should
use updated timing parameters that differ from those used in Broxton
based systems.
Fixes: f80e78a (""mfd: intel-lpss: Add Intel Gemini Lake PCI IDs"")
Tested-by: Chris Chiu chiu@endlessm.com
Signed-off-by: Jarkko Nikula jarkko.nikula@linux.intel.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,506,2019-09-10T02:08:31Z,2019-09-10T03:45:30Z,2019-09-10T03:45:32Z,MERGED,True,43,6,5,https://github.com/mschiu77,asus-wmi: Improve DSTS WMI method ID detection,2,[],https://github.com/endlessm/linux/pull/506,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/506,Improve DSTS WMI method ID detection which needs wmi_get_acpi_device_uid comes from the other commit.,Improve DSTS WMI method ID detection which needs wmi_get_acpi_device_uid comes from the other commit.,True,{}
endlessm/linux,https://github.com/endlessm/linux,507,2019-09-11T21:32:48Z,2019-09-12T03:26:01Z,2019-09-12T03:26:03Z,MERGED,True,15,0,1,https://github.com/ManMower,endlesspayg: Hook inode create,1,[],https://github.com/endlessm/linux/pull/507,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/507,"When we open(""file"", O_CREAT, ...) the create and open are caught by
different LSM hooks.  We need to catch the create instead of just
the open if we want to block creation.
https://phabricator.endlessm.com/T27046","When we open(""file"", O_CREAT, ...) the create and open are caught by
different LSM hooks.  We need to catch the create instead of just
the open if we want to block creation.
https://phabricator.endlessm.com/T27046",True,{}
endlessm/linux,https://github.com/endlessm/linux,508,2019-09-13T21:42:15Z,2019-09-17T00:10:18Z,2019-09-17T00:10:22Z,MERGED,True,19,0,3,https://github.com/ManMower,endlesspayg: Block proc populating for LSM user,1,[],https://github.com/endlessm/linux/pull/508,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/508,"Stop the pid directory in proc from being populated for the holder
of the LSM
https://phabricator.endlessm.com/T27044","Stop the pid directory in proc from being populated for the holder
of the LSM
https://phabricator.endlessm.com/T27044",True,{}
endlessm/linux,https://github.com/endlessm/linux,509,2019-09-19T09:02:01Z,2019-09-20T01:31:29Z,2019-09-26T18:03:23Z,MERGED,True,12,0,1,https://github.com/mschiu77,ASoC: Intel: bytcr_rt5640: Add quirks for ARCHOS Cesium 140,1,[],https://github.com/endlessm/linux/pull/509,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/509,"Add quirks to select the correct input map, jack-detect options
and channel map to enable jack sensing and headset microphone.
This device uses IN1 for its internal MIC and JD2 for jack-detect.
Signed-off-by: Chris Chiu chiu@endlessm.com","Add quirks to select the correct input map, jack-detect options
and channel map to enable jack sensing and headset microphone.
This device uses IN1 for its internal MIC and JD2 for jack-detect.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,510,2019-09-25T08:04:57Z,2019-09-25T09:36:16Z,2019-09-25T09:36:23Z,MERGED,True,583,202031,241,https://github.com/mschiu77,T26807,8,[],https://github.com/endlessm/linux/pull/510,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/510,Revert RTL8723BU vendor driver and add patches for supporting rtl8723bu on rtl8xxxu,Revert RTL8723BU vendor driver and add patches for supporting rtl8723bu on rtl8xxxu,True,{}
endlessm/linux,https://github.com/endlessm/linux,511,2019-09-26T15:45:26Z,2019-09-26T17:35:48Z,2019-09-26T17:35:53Z,MERGED,True,4,2,1,https://github.com/mschiu77,ACPI: PM: Set s2idle_wakeup earlier and clear it later,1,[],https://github.com/endlessm/linux/pull/511,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/511,"The role of the s2idle_wakeup variable is to cause
acpi_pm_wakeup_event() and acpi_pm_notify_handler() to
increment pm_abort_suspend and trigger a wakeup from
suspend-to-idle in case the ACPI SCI wakeup was canceled
by acpi_s2idle_wake().
However, for this purpose it need not be set in acpi_s2idle_wake()
and cleared in acpi_s2idle_sync(), respectively.  In fact, it
may be set as early as in acpi_s2idle_prepare() and cleared as
late as in acpi_s2idle_restore(), so do that to allow subsequent
changes to be simpler.
This change is not expected to alter functionality.
Signed-off-by: Rafael J. Wysocki rafael.j.wysocki@intel.com
Acked-by: Thomas Gleixner tglx@linutronix.de","The role of the s2idle_wakeup variable is to cause
acpi_pm_wakeup_event() and acpi_pm_notify_handler() to
increment pm_abort_suspend and trigger a wakeup from
suspend-to-idle in case the ACPI SCI wakeup was canceled
by acpi_s2idle_wake().
However, for this purpose it need not be set in acpi_s2idle_wake()
and cleared in acpi_s2idle_sync(), respectively.  In fact, it
may be set as early as in acpi_s2idle_prepare() and cleared as
late as in acpi_s2idle_restore(), so do that to allow subsequent
changes to be simpler.
This change is not expected to alter functionality.
Signed-off-by: Rafael J. Wysocki rafael.j.wysocki@intel.com
Acked-by: Thomas Gleixner tglx@linutronix.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,512,2019-10-03T21:13:12Z,2019-10-03T21:14:18Z,2019-10-03T21:14:40Z,CLOSED,False,11,0,1,https://github.com/ManMower,endlesspayg: Protect SecureBootOption EFI variable,1,[],https://github.com/endlessm/linux/pull/512,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/512,"Some incredibly misguided EFI implementations have a vendor specific
SecureBootOption EFI variable that allows disabling secure boot
from userspace even when not in setup mode.
Block access to that for payg systems.
https://phabricator.endlessm.com/T27193","Some incredibly misguided EFI implementations have a vendor specific
SecureBootOption EFI variable that allows disabling secure boot
from userspace even when not in setup mode.
Block access to that for payg systems.
https://phabricator.endlessm.com/T27193",True,{}
endlessm/linux,https://github.com/endlessm/linux,513,2019-10-03T21:15:52Z,2019-10-08T03:29:55Z,2019-10-08T03:29:58Z,MERGED,True,11,0,1,https://github.com/ManMower,endlesspayg: Protect SecureBootOption EFI variable,1,[],https://github.com/endlessm/linux/pull/513,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/513,"Some incredibly misguided EFI implementations have a vendor specific
SecureBootOption EFI variable that allows disabling secure boot
from userspace even when not in setup mode.
Block access to that for payg systems.
https://phabricator.endlessm.com/T27913","Some incredibly misguided EFI implementations have a vendor specific
SecureBootOption EFI variable that allows disabling secure boot
from userspace even when not in setup mode.
Block access to that for payg systems.
https://phabricator.endlessm.com/T27913",True,{}
endlessm/linux,https://github.com/endlessm/linux,513,2019-10-03T21:15:52Z,2019-10-08T03:29:55Z,2019-10-08T03:29:58Z,MERGED,True,11,0,1,https://github.com/ManMower,endlesspayg: Protect SecureBootOption EFI variable,1,[],https://github.com/endlessm/linux/pull/513,https://github.com/ManMower,2,https://github.com/endlessm/linux/pull/513#issuecomment-538133543,"Some incredibly misguided EFI implementations have a vendor specific
SecureBootOption EFI variable that allows disabling secure boot
from userspace even when not in setup mode.
Block access to that for payg systems.
https://phabricator.endlessm.com/T27913","This is starting to get a little cut'n'pastey.  I don't think it's awful yet, but if we end up adding any more strings to the list I'll make an array and a loop instead of a ladder of if statements.
or, of course, I can do that now if a reviewer feels that's necessary.  Just let me know.",True,{}
endlessm/linux,https://github.com/endlessm/linux,514,2019-10-09T10:50:59Z,2019-10-09T22:02:23Z,2019-10-09T22:02:26Z,MERGED,True,5,2,1,https://github.com/starnight,PCI/MSI: Fix restoring of MSI-X vector control's mask bit,1,[],https://github.com/endlessm/linux/pull/514,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/514,"MSI-X vector control's bit 0 is the mask bit, which masks the
corresponding interrupt request, or not. Other reserved bits might be
used for other purpose by device vendors. For example, the values of
Kingston NVMe SSD's MSI-X vector control are neither 0, nor 1, but other
values [1].
The original restoring logic in system resuming uses the whole MSI-X
vector control value as the flag to set/clear the mask bit. However,
this logic conflicts the idea mentioned above. It may mislead system to
disable the MSI-X vector entries. That makes system get no interrupt
from Kingston NVMe SSD after resume and usually get NVMe I/O timeout
error.
[  174.715534] nvme nvme0: I/O 978 QID 3 timeout, completion polled
This patch takes only the mask bit of original MSI-X vector control
value as the flag to fix this issue.
[1] https://bugzilla.kernel.org/show_bug.cgi?id=204887#c8
https://phabricator.endlessm.com/T27799
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=204887
Fixed: f2440d9 (""PCI MSI: Refactor interrupt masking code"")
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","MSI-X vector control's bit 0 is the mask bit, which masks the
corresponding interrupt request, or not. Other reserved bits might be
used for other purpose by device vendors. For example, the values of
Kingston NVMe SSD's MSI-X vector control are neither 0, nor 1, but other
values [1].
The original restoring logic in system resuming uses the whole MSI-X
vector control value as the flag to set/clear the mask bit. However,
this logic conflicts the idea mentioned above. It may mislead system to
disable the MSI-X vector entries. That makes system get no interrupt
from Kingston NVMe SSD after resume and usually get NVMe I/O timeout
error.
[  174.715534] nvme nvme0: I/O 978 QID 3 timeout, completion polled
This patch takes only the mask bit of original MSI-X vector control
value as the flag to fix this issue.
[1] https://bugzilla.kernel.org/show_bug.cgi?id=204887#c8
https://phabricator.endlessm.com/T27799
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=204887
Fixed: f2440d9 (""PCI MSI: Refactor interrupt masking code"")
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,515,2019-10-14T13:25:53Z,2019-10-15T03:35:49Z,2019-10-15T03:35:56Z,MERGED,True,5,0,3,https://github.com/mschiu77,rtl8xxxu: fix RTL8723BU connection failure issue after warm reboot,1,[],https://github.com/endlessm/linux/pull/515,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/515,"The RTL8723BU has problems connecting to AP after each warm reboot.
Sometimes it returns no scan result, and in most cases, it fails
the authentication for unknown reason. However, it works totally
fine after cold reboot.
Compare the value of register SYS_CR and SYS_CLK_MAC_CLK_ENABLE
for cold reboot and warm reboot, the registers imply that the MAC
is already powered and thus some procedures are skipped during
driver initialization. Double checked the vendor driver, it reads
the SYS_CR and SYS_CLK_MAC_CLK_ENABLE also but doesn't skip any
during initialization based on them. This commit only tells the
RTL8723BU to do full initilization without checking MAC status.
https://phabricator.endlessm.com/T28000
Signed-off-by: Chris Chiu chiu@endlessm.com","The RTL8723BU has problems connecting to AP after each warm reboot.
Sometimes it returns no scan result, and in most cases, it fails
the authentication for unknown reason. However, it works totally
fine after cold reboot.
Compare the value of register SYS_CR and SYS_CLK_MAC_CLK_ENABLE
for cold reboot and warm reboot, the registers imply that the MAC
is already powered and thus some procedures are skipped during
driver initialization. Double checked the vendor driver, it reads
the SYS_CR and SYS_CLK_MAC_CLK_ENABLE also but doesn't skip any
during initialization based on them. This commit only tells the
RTL8723BU to do full initilization without checking MAC status.
https://phabricator.endlessm.com/T28000
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,516,2019-10-22T12:58:59Z,2019-10-22T18:43:27Z,2019-10-22T18:43:30Z,MERGED,True,16,6,1,https://github.com/mschiu77,drm/i915: Favor last VBT child device with conflicting AUX ch/DDC pin,1,[],https://github.com/endlessm/linux/pull/516,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/516,"The first come first served apporoach to handling the VBT
child device AUX ch conflicts has backfired. We have machines
in the wild where the VBT specifies both port A eDP and
port E DP (in that order) with port E being the real one.
So let's try to flip the preference around and let the last
child device win once again.
Cc: stable@vger.kernel.org
Cc: Jani Nikula jani.nikula@intel.com
Tested-by: Masami Ichikawa masami256@gmail.com
Tested-by: Torsten freedesktop201910@liggy.de
Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=111966
Fixes: 36a0f92 (""drm/i915/bios: make child device order the priority order"")
Signed-off-by: Ville Syrjälä ville.syrjala@linux.intel.com
Link: https://patchwork.freedesktop.org/patch/msgid/20191011202030.8829-1-ville.syrjala@linux.intel.com
Acked-by: Jani Nikula jani.nikula@intel.com","The first come first served apporoach to handling the VBT
child device AUX ch conflicts has backfired. We have machines
in the wild where the VBT specifies both port A eDP and
port E DP (in that order) with port E being the real one.
So let's try to flip the preference around and let the last
child device win once again.
Cc: stable@vger.kernel.org
Cc: Jani Nikula jani.nikula@intel.com
Tested-by: Masami Ichikawa masami256@gmail.com
Tested-by: Torsten freedesktop201910@liggy.de
Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=111966
Fixes: 36a0f92 (""drm/i915/bios: make child device order the priority order"")
Signed-off-by: Ville Syrjälä ville.syrjala@linux.intel.com
Link: https://patchwork.freedesktop.org/patch/msgid/20191011202030.8829-1-ville.syrjala@linux.intel.com
Acked-by: Jani Nikula jani.nikula@intel.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,517,2019-10-24T07:10:54Z,2019-10-24T07:15:13Z,2019-10-24T16:51:31Z,MERGED,True,0,16,2,https://github.com/dsd,Realtek drivers: don't register vendor commands,2,[],https://github.com/endlessm/linux/pull/517,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/517,https://phabricator.endlessm.com/T28334,https://phabricator.endlessm.com/T28334,True,{}
endlessm/linux,https://github.com/endlessm/linux,517,2019-10-24T07:10:54Z,2019-10-24T07:15:13Z,2019-10-24T16:51:31Z,MERGED,True,0,16,2,https://github.com/dsd,Realtek drivers: don't register vendor commands,2,[],https://github.com/endlessm/linux/pull/517,https://github.com/mschiu77,2,https://github.com/endlessm/linux/pull/517#issuecomment-545780594,https://phabricator.endlessm.com/T28334,LGTM. Merged.,True,{}
endlessm/linux,https://github.com/endlessm/linux,518,2019-10-30T05:57:55Z,2019-11-04T08:31:50Z,2019-11-04T18:55:14Z,MERGED,True,139,56,1,https://github.com/dsd,ACPI: EC: add support for hardware-reduced systems,2,[],https://github.com/endlessm/linux/pull/518,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/518,https://phabricator.endlessm.com/T27666,https://phabricator.endlessm.com/T27666,True,{}
endlessm/linux,https://github.com/endlessm/linux,519,2019-10-30T21:05:32Z,2019-10-31T14:12:18Z,2019-10-31T14:12:18Z,CLOSED,False,47,0,3,https://github.com/ManMower,endlesspayg: Allow blocking a single device,1,[],https://github.com/endlessm/linux/pull/519,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/519,"Add an ioctl that lets the LSM user request a block on a single device.
https://phabricator.endlessm.com/T28442","Add an ioctl that lets the LSM user request a block on a single device.
https://phabricator.endlessm.com/T28442",True,{}
endlessm/linux,https://github.com/endlessm/linux,519,2019-10-30T21:05:32Z,2019-10-31T14:12:18Z,2019-10-31T14:12:18Z,CLOSED,False,47,0,3,https://github.com/ManMower,endlesspayg: Allow blocking a single device,1,[],https://github.com/endlessm/linux/pull/519,https://github.com/ManMower,2,https://github.com/endlessm/linux/pull/519#issuecomment-548394497,"Add an ioctl that lets the LSM user request a block on a single device.
https://phabricator.endlessm.com/T28442",There is a better way to handle this.,True,{}
endlessm/linux,https://github.com/endlessm/linux,520,2019-11-08T19:41:56Z,2019-11-08T21:13:50Z,2019-11-08T21:13:54Z,MERGED,True,2,2,2,https://github.com/jprvita,config: Disable ALLOW_LOCKDOWN_LIFT_BY_SYSRQ,1,[],https://github.com/endlessm/linux/pull/520,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/520,"We don't want to allow users to be able to disable secure boot via
SysRq.
https://phabricator.endlessm.com/T27055","We don't want to allow users to be able to disable secure boot via
SysRq.
https://phabricator.endlessm.com/T27055",True,{}
endlessm/linux,https://github.com/endlessm/linux,521,2019-11-22T16:49:47Z,2019-11-22T19:20:33Z,2019-11-22T19:20:57Z,CLOSED,False,151,59,5,https://github.com/ManMower,endlesspayg: Break build if lockdown lift is enabled,8,[],https://github.com/endlessm/linux/pull/521,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/521,"The lockdown lift sysrq key allows circumventing many of our PAYG
security requirements. To make sure we don't accidentally deploy
with it enabled, conditionally break the build.
https://phabricator.endlessm.com/T27055","The lockdown lift sysrq key allows circumventing many of our PAYG
security requirements. To make sure we don't accidentally deploy
with it enabled, conditionally break the build.
https://phabricator.endlessm.com/T27055",True,{}
endlessm/linux,https://github.com/endlessm/linux,521,2019-11-22T16:49:47Z,2019-11-22T19:20:33Z,2019-11-22T19:20:57Z,CLOSED,False,151,59,5,https://github.com/ManMower,endlesspayg: Break build if lockdown lift is enabled,8,[],https://github.com/endlessm/linux/pull/521,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/521#issuecomment-557659705,"The lockdown lift sysrq key allows circumventing many of our PAYG
security requirements. To make sure we don't accidentally deploy
with it enabled, conditionally break the build.
https://phabricator.endlessm.com/T27055",Merged manually.,True,{}
endlessm/linux,https://github.com/endlessm/linux,522,2019-11-26T06:06:08Z,2019-11-26T06:57:03Z,2019-11-26T18:08:32Z,MERGED,True,9,1,1,https://github.com/starnight,ALSA: hda/realtek - Enable internal speaker of ASUS UX431FLC,1,[],https://github.com/endlessm/linux/pull/522,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/522,"Laptops like ASUS UX431FLC and UX431FL can share the same audio quirks.
But UX431FLC needs one more step to enable the internal speaker: Pull
the GPIO from CODEC to initialize the AMP.
https://phabricator.endlessm.com/T28694
Fixes: 60083f9 (""ALSA: hda/realtek - Enable internal speaker & headset mic of ASUS UX431FL"")
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20191125093405.5702-1-jian-hong@endlessm.com
Signed-off-by: Takashi Iwai tiwai@suse.de","Laptops like ASUS UX431FLC and UX431FL can share the same audio quirks.
But UX431FLC needs one more step to enable the internal speaker: Pull
the GPIO from CODEC to initialize the AMP.
https://phabricator.endlessm.com/T28694
Fixes: 60083f9 (""ALSA: hda/realtek - Enable internal speaker & headset mic of ASUS UX431FL"")
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20191125093405.5702-1-jian-hong@endlessm.com
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,522,2019-11-26T06:06:08Z,2019-11-26T06:57:03Z,2019-11-26T18:08:32Z,MERGED,True,9,1,1,https://github.com/starnight,ALSA: hda/realtek - Enable internal speaker of ASUS UX431FLC,1,[],https://github.com/endlessm/linux/pull/522,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/522#issuecomment-558751931,"Laptops like ASUS UX431FLC and UX431FL can share the same audio quirks.
But UX431FLC needs one more step to enable the internal speaker: Pull
the GPIO from CODEC to initialize the AMP.
https://phabricator.endlessm.com/T28694
Fixes: 60083f9 (""ALSA: hda/realtek - Enable internal speaker & headset mic of ASUS UX431FL"")
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20191125093405.5702-1-jian-hong@endlessm.com
Signed-off-by: Takashi Iwai tiwai@suse.de",(gentle reminder to remove topic branches after merging so we don't leave a forest behind),True,{}
endlessm/linux,https://github.com/endlessm/linux,523,2019-12-05T05:55:20Z,2019-12-05T05:59:52Z,2019-12-05T05:59:55Z,MERGED,True,1348,301,23,https://github.com/starnight,T28448 Enable RPi 4 minimal features,13,[],https://github.com/endlessm/linux/pull/523,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/523,https://phabricator.endlessm.com/T28448,https://phabricator.endlessm.com/T28448,True,{}
endlessm/linux,https://github.com/endlessm/linux,524,2019-12-06T00:37:29Z,2019-12-06T02:44:55Z,2019-12-06T02:45:05Z,MERGED,True,1,0,1,https://github.com/jprvita,ahci: Add Intel Comet Lake PCH RAID PCI ID,1,[],https://github.com/endlessm/linux/pull/524,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/524,"Intel Comet Lake should use the default LPM policy for mobile chipsets.
So, add the PCI ID to the driver list of supported devices.
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Intel Comet Lake should use the default LPM policy for mobile chipsets.
So, add the PCI ID to the driver list of supported devices.
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,525,2019-12-12T05:33:28Z,2019-12-12T19:06:18Z,2020-07-13T12:54:19Z,CLOSED,False,1556,628,44,https://github.com/starnight,T28888 Enable RPi 4 PCIe,39,[],https://github.com/endlessm/linux/pull/525,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/525,https://phabricator.endlessm.com/T28888,https://phabricator.endlessm.com/T28888,True,{}
endlessm/linux,https://github.com/endlessm/linux,525,2019-12-12T05:33:28Z,2019-12-12T19:06:18Z,2020-07-13T12:54:19Z,CLOSED,False,1556,628,44,https://github.com/starnight,T28888 Enable RPi 4 PCIe,39,[],https://github.com/endlessm/linux/pull/525,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/525#issuecomment-565141216,https://phabricator.endlessm.com/T28888,This has been manually merged.,True,{}
endlessm/linux,https://github.com/endlessm/linux,526,2019-12-17T09:52:17Z,2019-12-17T20:27:20Z,2019-12-17T20:27:25Z,MERGED,True,123,37,7,https://github.com/starnight,T28966 RPi4: Enable Ethernet,9,[],https://github.com/endlessm/linux/pull/526,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/526,https://phabricator.endlessm.com/T28966,https://phabricator.endlessm.com/T28966,True,{}
endlessm/linux,https://github.com/endlessm/linux,527,2019-12-18T10:57:36Z,2019-12-19T00:53:40Z,2019-12-19T00:53:44Z,MERGED,True,365,292,34,https://github.com/dsd,Fix USB devices on RPi4 with 4GB RAM,15,[],https://github.com/endlessm/linux/pull/527,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/527,https://phabricator.endlessm.com/T28996,https://phabricator.endlessm.com/T28996,True,{}
endlessm/linux,https://github.com/endlessm/linux,528,2019-12-26T10:58:31Z,2019-12-26T20:30:42Z,2019-12-26T20:30:48Z,MERGED,True,22,6,1,https://github.com/mschiu77,ALSA: hda/realtek - Enable the subwoofer of ASUS UX431FLC,1,[],https://github.com/endlessm/linux/pull/528,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/528,"ASUS reported that there's an additional speaker which serves as
the subwoofer and uses DAC 0x02. It dose not work with the commit
73a7233 (""ALSA: hda/realtek - Enable internal speaker of ASUS
UX431FLC"") which enables the amplifier and front speakers. This
commit enables the subwoofer to improve the acoustic experience.
https://phabricator.endlessm.com/T28694
Signed-off-by: Chris Chiu chiu@endlessm.com","ASUS reported that there's an additional speaker which serves as
the subwoofer and uses DAC 0x02. It dose not work with the commit
73a7233 (""ALSA: hda/realtek - Enable internal speaker of ASUS
UX431FLC"") which enables the amplifier and front speakers. This
commit enables the subwoofer to improve the acoustic experience.
https://phabricator.endlessm.com/T28694
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,529,2019-12-30T08:21:23Z,2019-12-30T09:50:56Z,2019-12-30T15:43:13Z,MERGED,True,1,7,1,https://github.com/starnight,platform/x86: asus-wmi: Fix keyboard brightness cannot be set to 0,1,[],https://github.com/endlessm/linux/pull/529,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/529,"Some of ASUS laptops like UX431FL keyboard backlight cannot be set to
brightness 0. According to ASUS' information, the brightness should be
0x80 ~ 0x83. This patch fixes it by following the logic.
https://phabricator.endlessm.com/T28949
Fixes: e9809c0 (""asus-wmi: add keyboard backlight support"")
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Some of ASUS laptops like UX431FL keyboard backlight cannot be set to
brightness 0. According to ASUS' information, the brightness should be
0x80 ~ 0x83. This patch fixes it by following the logic.
https://phabricator.endlessm.com/T28949
Fixes: e9809c0 (""asus-wmi: add keyboard backlight support"")
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,530,2019-12-31T05:49:57Z,2019-12-31T07:53:25Z,2019-12-31T09:07:44Z,MERGED,True,1,1,1,https://github.com/starnight,"Revert ""iwlwifi: mvm: fix scan config command size""",1,[],https://github.com/endlessm/linux/pull/530,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/530,"The Intel(R) Dual Band Wireless AC 9461 WiFi keeps restarting until
commit 06eb547 (""iwlwifi: mvm: fix scan config command size"") is
reverted.
https://phabricator.endlessm.com/T28926
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The Intel(R) Dual Band Wireless AC 9461 WiFi keeps restarting until
commit 06eb547 (""iwlwifi: mvm: fix scan config command size"") is
reverted.
https://phabricator.endlessm.com/T28926
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,531,2020-01-10T06:27:02Z,2020-01-10T19:43:21Z,2020-01-10T19:43:24Z,MERGED,True,42,37,3,https://github.com/starnight,"Fix Intel Wireless 9462 WiFi regression issue in 5.4 kernel, T29100",2,[],https://github.com/endlessm/linux/pull/531,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/531,https://phabricator.endlessm.com/T29100,https://phabricator.endlessm.com/T29100,True,{}
endlessm/linux,https://github.com/endlessm/linux,532,2020-01-15T10:40:50Z,2020-01-16T01:58:47Z,2020-01-16T01:58:50Z,MERGED,True,28,7,1,https://github.com/dsd,PCI: Increase D3 delay for AMD Ryzen5/7 XHCI controllers,2,[],https://github.com/endlessm/linux/pull/532,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/532,https://phabricator.endlessm.com/T27618,https://phabricator.endlessm.com/T27618,True,{}
endlessm/linux,https://github.com/endlessm/linux,533,2020-02-04T10:54:19Z,2020-02-07T01:49:48Z,2020-02-07T01:49:51Z,MERGED,True,1,1,1,https://github.com/mschiu77,drm/amdgpu: remove the experimental flag for renoir,1,[],https://github.com/endlessm/linux/pull/533,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/533,"Should work properly with the latest sbios on 5.5 and newer
kernels.
Reviewed-by: Hawking Zhang Hawking.Zhang@amd.com
Signed-off-by: Alex Deucher alexander.deucher@amd.com","Should work properly with the latest sbios on 5.5 and newer
kernels.
Reviewed-by: Hawking Zhang Hawking.Zhang@amd.com
Signed-off-by: Alex Deucher alexander.deucher@amd.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,534,2020-02-06T02:57:23Z,2020-02-07T10:31:39Z,2021-01-04T12:18:14Z,CLOSED,False,7,5,2,https://github.com/starnight,T29119: Asus B9450FA SKU1: Cannot boot to installer or system while set sata configuration to Intel RST mode in BIOS,2,[],https://github.com/endlessm/linux/pull/534,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/534,https://phabricator.endlessm.com/T29119,https://phabricator.endlessm.com/T29119,True,{}
endlessm/linux,https://github.com/endlessm/linux,535,2020-02-07T10:03:58Z,2020-02-07T10:04:36Z,2020-02-07T10:04:36Z,CLOSED,False,13,0,1,https://github.com/starnight,ALSA: hda/realtek - Enable the headset of ASUS B9450FA,1,[],https://github.com/endlessm/linux/pull/535,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/535,"A headset on the laptop like ASUS B9450FA does not work, until quirk
ALC294_FIXUP_ASUS_HPE is applied.
https://phabricator.endlessm.com/T29120
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","A headset on the laptop like ASUS B9450FA does not work, until quirk
ALC294_FIXUP_ASUS_HPE is applied.
https://phabricator.endlessm.com/T29120
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,536,2020-02-07T10:06:17Z,2020-02-07T20:39:26Z,2020-02-07T20:39:30Z,MERGED,True,13,0,1,https://github.com/starnight,ALSA: hda/realtek - Enable the headset of ASUS B9450FA with ALC294,1,[],https://github.com/endlessm/linux/pull/536,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/536,"A headset on the laptop like ASUS B9450FA does not work, until quirk
ALC294_FIXUP_ASUS_HPE is applied.
https://phabricator.endlessm.com/T29120
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","A headset on the laptop like ASUS B9450FA does not work, until quirk
ALC294_FIXUP_ASUS_HPE is applied.
https://phabricator.endlessm.com/T29120
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,537,2020-02-07T10:33:00Z,2021-01-04T12:19:28Z,2021-01-04T12:19:41Z,CLOSED,False,1628395,2352,2426,https://github.com/starnight,T29119: Asus B9450FA SKU1: Cannot boot to installer or system while set sata configuration to Intel RST mode in BIOS,552,[],https://github.com/endlessm/linux/pull/537,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/537,https://phabricator.endlessm.com/T29119,https://phabricator.endlessm.com/T29119,True,{}
endlessm/linux,https://github.com/endlessm/linux,538,2020-02-17T12:33:29Z,2020-02-18T19:54:58Z,2020-02-18T19:55:03Z,MERGED,True,12,1,1,https://github.com/mschiu77,mfd: intel-lpss: Add Intel Comet Lake PCH-H PCI IDs,1,[],https://github.com/endlessm/linux/pull/538,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/538,"[ Upstream commit dd047dc ]
Intel Comet Lake PCH-H has the same LPSS than Intel Cannon Lake.
Add the new IDs to the list of supported devices.
Signed-off-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Lee Jones lee.jones@linaro.org
Signed-off-by: Sasha Levin sashal@kernel.org","[ Upstream commit dd047dc ]
Intel Comet Lake PCH-H has the same LPSS than Intel Cannon Lake.
Add the new IDs to the list of supported devices.
Signed-off-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Lee Jones lee.jones@linaro.org
Signed-off-by: Sasha Levin sashal@kernel.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,539,2020-02-18T07:54:53Z,2020-02-18T09:01:05Z,2020-02-26T22:29:13Z,MERGED,True,81,233,12,https://github.com/dsd,intel-iommu/dmar fixups for NVMe remap,11,[],https://github.com/endlessm/linux/pull/539,https://github.com/dsd,1,https://github.com/endlessm/linux/pull/539,https://phabricator.endlessm.com/T29119,https://phabricator.endlessm.com/T29119,True,{}
endlessm/linux,https://github.com/endlessm/linux,540,2020-02-26T05:47:09Z,2020-02-26T07:25:43Z,2020-02-26T22:29:12Z,MERGED,True,12,0,1,https://github.com/starnight,LSA: hda/realtek - Enable the headset of Acer N50-600 with ALC662,1,[],https://github.com/endlessm/linux/pull/540,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/540,"A headset on the desktop like Acer N50-600 does not work, until quirk
ALC662_FIXUP_ACER_NITRO_HEADSET_MODE is applied.
https://phabricator.endlessm.com/T27589
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","A headset on the desktop like Acer N50-600 does not work, until quirk
ALC662_FIXUP_ACER_NITRO_HEADSET_MODE is applied.
https://phabricator.endlessm.com/T27589
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,541,2020-03-12T10:41:39Z,2020-03-31T03:04:01Z,2020-03-31T03:04:05Z,CLOSED,False,0,49,3,https://github.com/starnight,Remove the FIT image,1,[],https://github.com/endlessm/linux/pull/541,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/541,"Since we can have the dtb folder includes all of the device tree
binaries for arm64 platforms. Then, we can remove the FIT uImage which
includes all of the device tree binaries in a single file. U-boot can
find a way to get corresponding device tree binary in the dtb folder.
https://phabricator.endlessm.com/T29416","Since we can have the dtb folder includes all of the device tree
binaries for arm64 platforms. Then, we can remove the FIT uImage which
includes all of the device tree binaries in a single file. U-boot can
find a way to get corresponding device tree binary in the dtb folder.
https://phabricator.endlessm.com/T29416",True,{}
endlessm/linux,https://github.com/endlessm/linux,542,2020-03-18T14:07:05Z,2020-03-19T07:46:51Z,2020-03-19T07:51:35Z,MERGED,True,1,0,1,https://github.com/mschiu77,ALSA: hda/realtek - Enable the headset of ASUS UX434IQ with ALC294,1,[],https://github.com/endlessm/linux/pull/542,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/542,"A headset microphone on the laptop ASUS UX434IQ does not work, until
quirk ALC294_FIXUP_ASUS_HEADSET_MIC is applied.
Signed-off-by: Chris Chiu chiu@endlessm.com","A headset microphone on the laptop ASUS UX434IQ does not work, until
quirk ALC294_FIXUP_ASUS_HEADSET_MIC is applied.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,543,2020-03-24T09:13:07Z,2020-03-24T17:33:45Z,2020-03-24T17:33:48Z,MERGED,True,0,1,1,https://github.com/mschiu77,"Revert ""ALSA: hda/realtek - Enable the headset of ASUS UX434IQ with A…",1,[],https://github.com/endlessm/linux/pull/543,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/543,"…LC294""
This reverts commit 65cdbf0.","…LC294""
This reverts commit 65cdbf0.",True,{}
endlessm/linux,https://github.com/endlessm/linux,544,2020-04-06T08:08:34Z,2020-04-07T15:12:57Z,2020-04-08T02:12:10Z,CLOSED,False,200001,1428,399,https://github.com/starnight,i2c: nvidia-gpu: Handle timeout correctly in gpu_i2c_check_status(),95,[],https://github.com/endlessm/linux/pull/544,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/544,"Nvidia card may come with a ""phantom"" UCSI device, and its driver gets
stuck in probe routine, prevents any system PM operations like suspend.
There's an unaccounted case that the target time can equal to jiffies in
gpu_i2c_check_status(), let's solve that by using readl_poll_timeout()
instead of jiffies comparison functions.
https://phabricator.endlessm.com/T29189
Fixes: c71bcdc (""i2c: add i2c bus driver for NVIDIA GPU"")
Suggested-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Kai-Heng Feng kai.heng.feng@canonical.com
Reviewed-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Reviewed-by: Ajay Gupta ajayg@nvidia.com
Tested-by: Ajay Gupta ajayg@nvidia.com
Signed-off-by: Wolfram Sang wsa@the-dreams.de","Nvidia card may come with a ""phantom"" UCSI device, and its driver gets
stuck in probe routine, prevents any system PM operations like suspend.
There's an unaccounted case that the target time can equal to jiffies in
gpu_i2c_check_status(), let's solve that by using readl_poll_timeout()
instead of jiffies comparison functions.
https://phabricator.endlessm.com/T29189
Fixes: c71bcdc (""i2c: add i2c bus driver for NVIDIA GPU"")
Suggested-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Kai-Heng Feng kai.heng.feng@canonical.com
Reviewed-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Reviewed-by: Ajay Gupta ajayg@nvidia.com
Tested-by: Ajay Gupta ajayg@nvidia.com
Signed-off-by: Wolfram Sang wsa@the-dreams.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,545,2020-04-08T02:13:22Z,2020-04-08T02:34:58Z,2020-04-08T02:39:49Z,MERGED,True,8,12,1,https://github.com/starnight,i2c: nvidia-gpu: Handle timeout correctly in gpu_i2c_check_status(),1,[],https://github.com/endlessm/linux/pull/545,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/545,"Nvidia card may come with a ""phantom"" UCSI device, and its driver gets
stuck in probe routine, prevents any system PM operations like suspend.
There's an unaccounted case that the target time can equal to jiffies in
gpu_i2c_check_status(), let's solve that by using readl_poll_timeout()
instead of jiffies comparison functions.
https://phabricator.endlessm.com/T29189
Fixes: c71bcdc (""i2c: add i2c bus driver for NVIDIA GPU"")
Suggested-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Kai-Heng Feng kai.heng.feng@canonical.com
Reviewed-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Reviewed-by: Ajay Gupta ajayg@nvidia.com
Tested-by: Ajay Gupta ajayg@nvidia.com
Signed-off-by: Wolfram Sang wsa@the-dreams.de","Nvidia card may come with a ""phantom"" UCSI device, and its driver gets
stuck in probe routine, prevents any system PM operations like suspend.
There's an unaccounted case that the target time can equal to jiffies in
gpu_i2c_check_status(), let's solve that by using readl_poll_timeout()
instead of jiffies comparison functions.
https://phabricator.endlessm.com/T29189
Fixes: c71bcdc (""i2c: add i2c bus driver for NVIDIA GPU"")
Suggested-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Signed-off-by: Kai-Heng Feng kai.heng.feng@canonical.com
Reviewed-by: Andy Shevchenko andriy.shevchenko@linux.intel.com
Reviewed-by: Ajay Gupta ajayg@nvidia.com
Tested-by: Ajay Gupta ajayg@nvidia.com
Signed-off-by: Wolfram Sang wsa@the-dreams.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,546,2020-04-20T13:33:02Z,2020-04-20T21:47:36Z,2020-04-20T21:47:41Z,MERGED,True,2,1,1,https://github.com/mschiu77,mac80211: fix authentication with iwlwifi/mvm,1,[],https://github.com/endlessm/linux/pull/546,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/546,"The original patch didn't copy the ieee80211_is_data() condition
because on most drivers the management frames don't go through
this path. However, they do on iwlwifi/mvm, so we do need to keep
the condition here.
Cc: stable@vger.kernel.org
Fixes: ce2e1ca (""mac80211: Check port authorization in the ieee80211_tx_dequeue() case"")
Signed-off-by: Johannes Berg johannes.berg@intel.com
Signed-off-by: David S. Miller davem@davemloft.net
https://phabricator.endlessm.com/T29854","The original patch didn't copy the ieee80211_is_data() condition
because on most drivers the management frames don't go through
this path. However, they do on iwlwifi/mvm, so we do need to keep
the condition here.
Cc: stable@vger.kernel.org
Fixes: ce2e1ca (""mac80211: Check port authorization in the ieee80211_tx_dequeue() case"")
Signed-off-by: Johannes Berg johannes.berg@intel.com
Signed-off-by: David S. Miller davem@davemloft.net
https://phabricator.endlessm.com/T29854",True,{}
endlessm/linux,https://github.com/endlessm/linux,547,2020-04-24T06:01:01Z,2020-04-24T21:54:44Z,2020-04-24T21:54:47Z,MERGED,True,24,0,1,https://github.com/starnight,PCI: Disable AER for CFL 0xa334 with Atheros Killer E2500 ethernet,1,[],https://github.com/endlessm/linux/pull/547,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/547,"Qualcomm Atheros Killer E2500 ethernet on Intel coffee lake chipset
0xa334 causes huge amount of PCIe AER error spam
pcieport 0000:00:1d.0: AER: Corrected error received: 0000:07:00.0
alx 0000:07:00.0: AER: PCIe Bus Error: severity=Corrected, type=Data Link Layer, (Receiver ID)
alx 0000:07:00.0: AER:   device [1969:e0b1] error status/mask=00000040/00002000
alx 0000:07:00.0: AER:    [ 6] BadTLP
This workaround is intentionally restricted to CFL 0xa334 where the
Qualcomm Atheros Killer E2500 ethernet presents behind the quirked PCI
bridge, in order to avoid side effects on other systems
https://phabricator.endlessm.com/T29786
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Qualcomm Atheros Killer E2500 ethernet on Intel coffee lake chipset
0xa334 causes huge amount of PCIe AER error spam
pcieport 0000:00:1d.0: AER: Corrected error received: 0000:07:00.0
alx 0000:07:00.0: AER: PCIe Bus Error: severity=Corrected, type=Data Link Layer, (Receiver ID)
alx 0000:07:00.0: AER:   device [1969:e0b1] error status/mask=00000040/00002000
alx 0000:07:00.0: AER:    [ 6] BadTLP
This workaround is intentionally restricted to CFL 0xa334 where the
Qualcomm Atheros Killer E2500 ethernet presents behind the quirked PCI
bridge, in order to avoid side effects on other systems
https://phabricator.endlessm.com/T29786
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,548,2020-04-30T03:33:03Z,2020-04-30T07:26:22Z,2020-04-30T07:26:25Z,MERGED,True,24,0,1,https://github.com/starnight,PCI: Disable AER for CFL 0xa334 with Atheros Killer E2500 ethernet,1,[],https://github.com/endlessm/linux/pull/548,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/548,"Qualcomm Atheros Killer E2500 ethernet on Intel coffee lake chipset
0xa334 causes huge amount of PCIe AER error spam, but the functions work
fine.
pcieport 0000:00:1d.0: AER: Corrected error received: 0000:07:00.0
alx 0000:07:00.0: AER: PCIe Bus Error: severity=Corrected, type=Data Link Layer, (Receiver ID)
alx 0000:07:00.0: AER:   device [1969:e0b1] error status/mask=00000040/00002000
alx 0000:07:00.0: AER:    [ 6] BadTLP
This workaround is intentionally restricted to CFL 0xa334 where the
Qualcomm Atheros Killer E2500 ethernet presents behind the quirked PCI
bridge, in order to avoid side effects on other systems
https://phabricator.endlessm.com/T29786
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","Qualcomm Atheros Killer E2500 ethernet on Intel coffee lake chipset
0xa334 causes huge amount of PCIe AER error spam, but the functions work
fine.
pcieport 0000:00:1d.0: AER: Corrected error received: 0000:07:00.0
alx 0000:07:00.0: AER: PCIe Bus Error: severity=Corrected, type=Data Link Layer, (Receiver ID)
alx 0000:07:00.0: AER:   device [1969:e0b1] error status/mask=00000040/00002000
alx 0000:07:00.0: AER:    [ 6] BadTLP
This workaround is intentionally restricted to CFL 0xa334 where the
Qualcomm Atheros Killer E2500 ethernet presents behind the quirked PCI
bridge, in order to avoid side effects on other systems
https://phabricator.endlessm.com/T29786
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,549,2020-05-05T02:33:28Z,2020-05-05T22:36:03Z,2020-05-05T22:36:09Z,MERGED,True,3,10,1,https://github.com/mschiu77,"Revert ""ACPI: PM: s2idle: Prevent spurious SCIs from waking up the system""",1,[],https://github.com/endlessm/linux/pull/549,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/549,"This reverts commit a2ad686.
The ECS EF20EA hangs during resume from s2idle by a keystroke
problem will be gone after this. Revert it until a better solution
from upstream.
https://phabricator.endlessm.com/T29893","This reverts commit a2ad686.
The ECS EF20EA hangs during resume from s2idle by a keystroke
problem will be gone after this. Revert it until a better solution
from upstream.
https://phabricator.endlessm.com/T29893",True,{}
endlessm/linux,https://github.com/endlessm/linux,550,2020-05-12T04:32:00Z,2020-05-12T05:52:07Z,2020-05-12T06:18:32Z,MERGED,True,1,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset mic of ASUS UX581LV with ALC295,1,[],https://github.com/endlessm/linux/pull/550,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/550,"The ASUS UX581LV laptop's audio (1043:19e1) with ALC295 can't detect the
headset microphone until ALC295_FIXUP_ASUS_MIC_NO_PRESENCE quirk
applied.
https://phabricator.endlessm.com/T29999
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com","The ASUS UX581LV laptop's audio (1043:19e1) with ALC295 can't detect the
headset microphone until ALC295_FIXUP_ASUS_MIC_NO_PRESENCE quirk
applied.
https://phabricator.endlessm.com/T29999
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,551,2020-05-22T06:21:52Z,2020-05-22T12:31:40Z,2020-05-22T12:31:45Z,MERGED,True,2,0,1,https://github.com/mschiu77,platform/x86: asus_wmi: Reserve more space for struct bias_args,1,[],https://github.com/endlessm/linux/pull/551,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/551,"On the ASUS laptop UX325JA/UX425JA, most of the media keys are not
working due to the ASUS WMI driver fails to be loaded. The error
messages as follows lead to the failure of asus_wmi_evaluate_method.
ACPI BIOS Error (bug): AE_AML_BUFFER_LIMIT, Field [IIA3] at bit offset/length 96/32 exceeds size of target Buffer (96 bits) (20200326/dsopcode-203)
No Local Variables are initialized for Method [WMNB]
ACPI Error: Aborting method _SB.ATKD.WMNB due to previous error (AE_AML_BUFFER_LIMIT) (20200326/psparse-531)
The DSDT for the WMNB part shows that 5 DWORD required for local
variables and the 3rd variable IIA3 hit the buffer limit.
Method (WMNB, 3, Serialized)
{ ..
CreateDWordField (Arg2, Zero, IIA0)
CreateDWordField (Arg2, 0x04, IIA1)
CreateDWordField (Arg2, 0x08, IIA2)
CreateDWordField (Arg2, 0x0C, IIA3)
CreateDWordField (Arg2, 0x10, IIA4)
Local0 = (Arg1 & 0xFFFFFFFF)
If ((Local0 == 0x54494E49))
..
}
The limitation is determined by the input acpi_buffer size passed
to the wmi_evaluate_method. Since the struct bios_args is the data
structure used as input buffer by default for all ASUS WMI calls,
the size needs to be expanded to fix the problem.
Signed-off-by: Chris Chiu chiu@endlessm.com","On the ASUS laptop UX325JA/UX425JA, most of the media keys are not
working due to the ASUS WMI driver fails to be loaded. The error
messages as follows lead to the failure of asus_wmi_evaluate_method.
ACPI BIOS Error (bug): AE_AML_BUFFER_LIMIT, Field [IIA3] at bit offset/length 96/32 exceeds size of target Buffer (96 bits) (20200326/dsopcode-203)
No Local Variables are initialized for Method [WMNB]
ACPI Error: Aborting method _SB.ATKD.WMNB due to previous error (AE_AML_BUFFER_LIMIT) (20200326/psparse-531)
The DSDT for the WMNB part shows that 5 DWORD required for local
variables and the 3rd variable IIA3 hit the buffer limit.
Method (WMNB, 3, Serialized)
{ ..
CreateDWordField (Arg2, Zero, IIA0)
CreateDWordField (Arg2, 0x04, IIA1)
CreateDWordField (Arg2, 0x08, IIA2)
CreateDWordField (Arg2, 0x0C, IIA3)
CreateDWordField (Arg2, 0x10, IIA4)
Local0 = (Arg1 & 0xFFFFFFFF)
If ((Local0 == 0x54494E49))
..
}
The limitation is determined by the input acpi_buffer size passed
to the wmi_evaluate_method. Since the struct bios_args is the data
structure used as input buffer by default for all ASUS WMI calls,
the size needs to be expanded to fix the problem.
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,552,2020-05-25T14:16:24Z,2020-05-26T10:08:35Z,2020-05-26T10:08:41Z,MERGED,True,8,0,1,https://github.com/mschiu77,ALSA: usb: mixer: volume quirk for ESS Technology Asus USB DAC,1,[],https://github.com/endlessm/linux/pull/552,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/552,"The Asus USB DAC is a USB type-C audio dongle for connecting to
the headset and headphone. The volume minimum value -23040 which
is 0xa600 in hexdecimal with the resolution value 1 indicates
this should be endianess issue caused by the firmware bug. Add
a volume quirk to fix the volume control problem.
Also fixes this warning:
Warning! Unlikely big volume range (=23040), cval->res is probably wrong.
[5] FU [Headset Capture Volume] ch = 1, val = -23040/0/1
Warning! Unlikely big volume range (=23040), cval->res is probably wrong.
[7] FU [Headset Playback Volume] ch = 1, val = -23040/0/1
Signed-off-by: Chris Chiu chiu@endlessm.com","The Asus USB DAC is a USB type-C audio dongle for connecting to
the headset and headphone. The volume minimum value -23040 which
is 0xa600 in hexdecimal with the resolution value 1 indicates
this should be endianess issue caused by the firmware bug. Add
a volume quirk to fix the volume control problem.
Also fixes this warning:
Warning! Unlikely big volume range (=23040), cval->res is probably wrong.
[5] FU [Headset Capture Volume] ch = 1, val = -23040/0/1
Warning! Unlikely big volume range (=23040), cval->res is probably wrong.
[7] FU [Headset Playback Volume] ch = 1, val = -23040/0/1
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,553,2020-05-29T07:55:02Z,2020-06-02T01:36:06Z,2020-06-02T01:36:10Z,MERGED,True,161,30,9,https://github.com/mschiu77,T29893,4,[],https://github.com/endlessm/linux/pull/553,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/553,"ACPI: EC: PM: Avoid premature returns from acpi_s2idle_wake()
If the EC GPE status is not set after checking all of the other GPEs,
acpi_s2idle_wake() returns 'false', to indicate that the SCI event
that has just triggered is not a system wakeup one, but it does that
without canceling the pending wakeup and re-arming the SCI for system
wakeup which is a mistake, because it may cause s2idle_loop() to busy
spin until the next valid wakeup event.  [If that happens, the first
spurious wakeup is still pending after acpi_s2idle_wake() has
returned, so s2idle_enter() does nothing, acpi_s2idle_wake()
is called again and it sees that the SCI has triggered, but no GPEs
are active, so 'false' is returned again, and so on.]
Fix that by moving all of the GPE checking logic from
acpi_s2idle_wake() to acpi_ec_dispatch_gpe() and making the
latter return 'true' only if a non-EC GPE has triggered and
'false' otherwise, which will cause acpi_s2idle_wake() to
cancel the pending SCI wakeup and re-arm the SCI for system
wakeup regardless of the EC GPE status.
This also addresses a lockup observed on an Elitegroup EF20EA laptop
after attempting to wake it up from suspend-to-idle by a key press.
Fixes: d540628 (""ACPI: PM: s2idle: Refine active GPEs check"")
Link: https://bugzilla.kernel.org/show_bug.cgi?id=207603
Reported-by: Todd Brandt todd.e.brandt@linux.intel.com
Fixes: fdde0ff (""ACPI: PM: s2idle: Prevent spurious SCIs from waking up the system"")
Link: https://lore.kernel.org/linux-acpi/CAB4CAwdqo7=MvyG_PE+PGVfeA17AHF5i5JucgaKqqMX6mjArbQ@mail.gmail.com/
Reported-by: Chris Chiu chiu@endlessm.com
Tested-by: Chris Chiu chiu@endlessm.com
Cc: 5.4+ stable@vger.kernel.org # 5.4+
Signed-off-by: Rafael J. Wysocki rafael.j.wysocki@intel.com","ACPI: EC: PM: Avoid premature returns from acpi_s2idle_wake()
If the EC GPE status is not set after checking all of the other GPEs,
acpi_s2idle_wake() returns 'false', to indicate that the SCI event
that has just triggered is not a system wakeup one, but it does that
without canceling the pending wakeup and re-arming the SCI for system
wakeup which is a mistake, because it may cause s2idle_loop() to busy
spin until the next valid wakeup event.  [If that happens, the first
spurious wakeup is still pending after acpi_s2idle_wake() has
returned, so s2idle_enter() does nothing, acpi_s2idle_wake()
is called again and it sees that the SCI has triggered, but no GPEs
are active, so 'false' is returned again, and so on.]
Fix that by moving all of the GPE checking logic from
acpi_s2idle_wake() to acpi_ec_dispatch_gpe() and making the
latter return 'true' only if a non-EC GPE has triggered and
'false' otherwise, which will cause acpi_s2idle_wake() to
cancel the pending SCI wakeup and re-arm the SCI for system
wakeup regardless of the EC GPE status.
This also addresses a lockup observed on an Elitegroup EF20EA laptop
after attempting to wake it up from suspend-to-idle by a key press.
Fixes: d540628 (""ACPI: PM: s2idle: Refine active GPEs check"")
Link: https://bugzilla.kernel.org/show_bug.cgi?id=207603
Reported-by: Todd Brandt todd.e.brandt@linux.intel.com
Fixes: fdde0ff (""ACPI: PM: s2idle: Prevent spurious SCIs from waking up the system"")
Link: https://lore.kernel.org/linux-acpi/CAB4CAwdqo7=MvyG_PE+PGVfeA17AHF5i5JucgaKqqMX6mjArbQ@mail.gmail.com/
Reported-by: Chris Chiu chiu@endlessm.com
Tested-by: Chris Chiu chiu@endlessm.com
Cc: 5.4+ stable@vger.kernel.org # 5.4+
Signed-off-by: Rafael J. Wysocki rafael.j.wysocki@intel.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,554,2020-06-03T04:11:38Z,2020-06-05T21:26:08Z,2020-06-05T21:26:12Z,MERGED,True,22,0,1,https://github.com/mwleeds,endlesspayg: Deactivate LSM after permanent unlock,1,[],https://github.com/endlessm/linux/pull/554,https://github.com/mwleeds,1,https://github.com/endlessm/linux/pull/554,"After a PAYG computer is permanently unlocked, the EOSPAYG_active EFI
variable is deleted. With that variable gone, on the next boot eos-paygd
will no longer activate the LSM, so it makes sense for the LSM to
deactivate itself; otherwise some other process could theoretically
activate it. See the ticket for more discussion.
https://phabricator.endlessm.com/T30284","After a PAYG computer is permanently unlocked, the EOSPAYG_active EFI
variable is deleted. With that variable gone, on the next boot eos-paygd
will no longer activate the LSM, so it makes sense for the LSM to
deactivate itself; otherwise some other process could theoretically
activate it. See the ticket for more discussion.
https://phabricator.endlessm.com/T30284",True,{}
endlessm/linux,https://github.com/endlessm/linux,554,2020-06-03T04:11:38Z,2020-06-05T21:26:08Z,2020-06-05T21:26:12Z,MERGED,True,22,0,1,https://github.com/mwleeds,endlesspayg: Deactivate LSM after permanent unlock,1,[],https://github.com/endlessm/linux/pull/554,https://github.com/mwleeds,2,https://github.com/endlessm/linux/pull/554#issuecomment-637941034,"After a PAYG computer is permanently unlocked, the EOSPAYG_active EFI
variable is deleted. With that variable gone, on the next boot eos-paygd
will no longer activate the LSM, so it makes sense for the LSM to
deactivate itself; otherwise some other process could theoretically
activate it. See the ticket for more discussion.
https://phabricator.endlessm.com/T30284","This is untested but it seems potentially in the ""obviously correct"" category of things that can be tested during QA?",True,{}
endlessm/linux,https://github.com/endlessm/linux,554,2020-06-03T04:11:38Z,2020-06-05T21:26:08Z,2020-06-05T21:26:12Z,MERGED,True,22,0,1,https://github.com/mwleeds,endlesspayg: Deactivate LSM after permanent unlock,1,[],https://github.com/endlessm/linux/pull/554,https://github.com/mwleeds,3,https://github.com/endlessm/linux/pull/554#issuecomment-637958006,"After a PAYG computer is permanently unlocked, the EOSPAYG_active EFI
variable is deleted. With that variable gone, on the next boot eos-paygd
will no longer activate the LSM, so it makes sense for the LSM to
deactivate itself; otherwise some other process could theoretically
activate it. See the ticket for more discussion.
https://phabricator.endlessm.com/T30284",Added the missing header include.,True,{}
endlessm/linux,https://github.com/endlessm/linux,554,2020-06-03T04:11:38Z,2020-06-05T21:26:08Z,2020-06-05T21:26:12Z,MERGED,True,22,0,1,https://github.com/mwleeds,endlesspayg: Deactivate LSM after permanent unlock,1,[],https://github.com/endlessm/linux/pull/554,https://github.com/mwleeds,4,https://github.com/endlessm/linux/pull/554#issuecomment-638263962,"After a PAYG computer is permanently unlocked, the EOSPAYG_active EFI
variable is deleted. With that variable gone, on the next boot eos-paygd
will no longer activate the LSM, so it makes sense for the LSM to
deactivate itself; otherwise some other process could theoretically
activate it. See the ticket for more discussion.
https://phabricator.endlessm.com/T30284",Added a check for status == EFI_BUFFER_TOO_SMALL. I think this is ready now.,True,{}
endlessm/linux,https://github.com/endlessm/linux,554,2020-06-03T04:11:38Z,2020-06-05T21:26:08Z,2020-06-05T21:26:12Z,MERGED,True,22,0,1,https://github.com/mwleeds,endlesspayg: Deactivate LSM after permanent unlock,1,[],https://github.com/endlessm/linux/pull/554,https://github.com/mwleeds,5,https://github.com/endlessm/linux/pull/554#issuecomment-638594194,"After a PAYG computer is permanently unlocked, the EOSPAYG_active EFI
variable is deleted. With that variable gone, on the next boot eos-paygd
will no longer activate the LSM, so it makes sense for the LSM to
deactivate itself; otherwise some other process could theoretically
activate it. See the ticket for more discussion.
https://phabricator.endlessm.com/T30284",Turns out the EFI_GUID macro needs fixing to pass 11 arguments not 10 as in eos-payg,True,{}
endlessm/linux,https://github.com/endlessm/linux,554,2020-06-03T04:11:38Z,2020-06-05T21:26:08Z,2020-06-05T21:26:12Z,MERGED,True,22,0,1,https://github.com/mwleeds,endlesspayg: Deactivate LSM after permanent unlock,1,[],https://github.com/endlessm/linux/pull/554,https://github.com/mwleeds,6,https://github.com/endlessm/linux/pull/554#issuecomment-639104381,"After a PAYG computer is permanently unlocked, the EOSPAYG_active EFI
variable is deleted. With that variable gone, on the next boot eos-paygd
will no longer activate the LSM, so it makes sense for the LSM to
deactivate itself; otherwise some other process could theoretically
activate it. See the ticket for more discussion.
https://phabricator.endlessm.com/T30284",The build of this was successful but I still need to test it.,True,{}
endlessm/linux,https://github.com/endlessm/linux,554,2020-06-03T04:11:38Z,2020-06-05T21:26:08Z,2020-06-05T21:26:12Z,MERGED,True,22,0,1,https://github.com/mwleeds,endlesspayg: Deactivate LSM after permanent unlock,1,[],https://github.com/endlessm/linux/pull/554,https://github.com/mwleeds,7,https://github.com/endlessm/linux/pull/554#issuecomment-639162046,"After a PAYG computer is permanently unlocked, the EOSPAYG_active EFI
variable is deleted. With that variable gone, on the next boot eos-paygd
will no longer activate the LSM, so it makes sense for the LSM to
deactivate itself; otherwise some other process could theoretically
activate it. See the ticket for more discussion.
https://phabricator.endlessm.com/T30284","This has been tested now, un-marking as draft.",True,{}
endlessm/linux,https://github.com/endlessm/linux,555,2020-07-08T03:32:57Z,2020-07-09T06:02:02Z,2020-07-13T12:51:42Z,MERGED,True,11,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset mic of Acer Veriton N4660G with ALC269VC,1,[],https://github.com/endlessm/linux/pull/555,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/555,"The Acer Veriton N4660G desktop's audio (1025:1248) with ALC269VC cannot
detect the headset microphone until ALC269VC_FIXUP_ACER_MIC_NO_PRESENCE
quirk maps the NID 0x18 as the headset mic pin.
https://phabricator.endlessm.com/T30326
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20200706071826.39726-3-jian-hong@endlessm.com
Signed-off-by: Takashi Iwai tiwai@suse.de","The Acer Veriton N4660G desktop's audio (1025:1248) with ALC269VC cannot
detect the headset microphone until ALC269VC_FIXUP_ACER_MIC_NO_PRESENCE
quirk maps the NID 0x18 as the headset mic pin.
https://phabricator.endlessm.com/T30326
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20200706071826.39726-3-jian-hong@endlessm.com
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,556,2020-07-13T12:51:24Z,2020-07-13T13:50:28Z,2020-07-21T17:45:19Z,MERGED,True,11,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset mic of Acer TravelMate B311R-31 with ALC256,1,[],https://github.com/endlessm/linux/pull/556,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/556,"The Acer TravelMate B311R-31 laptop's audio (1025:1430) with ALC256
cannot detect the headset microphone until
ALC256_FIXUP_ACER_MIC_NO_PRESENCE quirk maps the NID 0x19 as the headset
mic pin.
https://phabricator.endlessm.com/T30492
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20200713060421.62435-1-jian-hong@endlessm.com
Signed-off-by: Takashi Iwai tiwai@suse.de","The Acer TravelMate B311R-31 laptop's audio (1025:1430) with ALC256
cannot detect the headset microphone until
ALC256_FIXUP_ACER_MIC_NO_PRESENCE quirk maps the NID 0x19 as the headset
mic pin.
https://phabricator.endlessm.com/T30492
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20200713060421.62435-1-jian-hong@endlessm.com
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,556,2020-07-13T12:51:24Z,2020-07-13T13:50:28Z,2020-07-21T17:45:19Z,MERGED,True,11,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset mic of Acer TravelMate B311R-31 with ALC256,1,[],https://github.com/endlessm/linux/pull/556,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/556#issuecomment-662009000,"The Acer TravelMate B311R-31 laptop's audio (1025:1430) with ALC256
cannot detect the headset microphone until
ALC256_FIXUP_ACER_MIC_NO_PRESENCE quirk maps the NID 0x19 as the headset
mic pin.
https://phabricator.endlessm.com/T30492
Signed-off-by: Jian-Hong Pan jian-hong@endlessm.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20200713060421.62435-1-jian-hong@endlessm.com
Signed-off-by: Takashi Iwai tiwai@suse.de",Please remember to delete topic branches after merging.,True,{}
endlessm/linux,https://github.com/endlessm/linux,557,2020-07-21T13:55:21Z,2020-07-21T15:41:59Z,2020-07-21T15:42:03Z,MERGED,True,1,0,1,https://github.com/mschiu77,ALSA: hda/realtek - Add support for Memeza EDL03 headset mic,1,[],https://github.com/endlessm/linux/pull/557,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/557,"The Memeza laptop EDL03 with codec ALC256 can't detect the headset
microphone. The headphone jack sensing works after we add a pin
definition for it.
https://phabricator.endlessm.com/T28808
Signed-off-by: Chris Chiu chiu@endlessm.com","The Memeza laptop EDL03 with codec ALC256 can't detect the headset
microphone. The headphone jack sensing works after we add a pin
definition for it.
https://phabricator.endlessm.com/T28808
Signed-off-by: Chris Chiu chiu@endlessm.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,558,2020-08-06T18:35:37Z,2020-08-20T22:45:39Z,2020-08-20T22:55:54Z,MERGED,True,19,1,4,https://github.com/ManMower,endlesspayg: Fix rtc and system clock synchronization problems,2,[],https://github.com/endlessm/linux/pull/558,https://github.com/ManMower,1,https://github.com/endlessm/linux/pull/558,"Help prevent some problems that can occur when the hardware clock
and the system clock aren't in sync
https://phabricator.endlessm.com/T30571","Help prevent some problems that can occur when the hardware clock
and the system clock aren't in sync
https://phabricator.endlessm.com/T30571",True,{}
endlessm/linux,https://github.com/endlessm/linux,559,2020-08-18T22:32:01Z,2020-08-19T00:39:51Z,2020-08-19T00:39:58Z,MERGED,True,18,18,1,https://github.com/dbnicholson,Use new EOS Driver Signing 2020 certificate,1,[],https://github.com/endlessm/linux/pull/559,https://github.com/dbnicholson,1,https://github.com/endlessm/linux/pull/559,"This certificate is different than the one used to sign the kernel to
prevent PAYG systems from executing EOS kernels and breaking out of the
PAYG security domain. It will be used to sign out of tree modules such
as the nvidia driver.
$ openssl x509 -noout -subject -issuer -dates -in certs/endless.pem
subject=CN = EOS Driver Signing 2020
issuer=CN = Endless Secure Boot CA
notBefore=Aug 18 21:55:26 2020 GMT
notAfter=Aug 17 21:55:26 2025 GMT

https://phabricator.endlessm.com/T30607","This certificate is different than the one used to sign the kernel to
prevent PAYG systems from executing EOS kernels and breaking out of the
PAYG security domain. It will be used to sign out of tree modules such
as the nvidia driver.
$ openssl x509 -noout -subject -issuer -dates -in certs/endless.pem
subject=CN = EOS Driver Signing 2020
issuer=CN = Endless Secure Boot CA
notBefore=Aug 18 21:55:26 2020 GMT
notAfter=Aug 17 21:55:26 2025 GMT

https://phabricator.endlessm.com/T30607",True,{}
endlessm/linux,https://github.com/endlessm/linux,559,2020-08-18T22:32:01Z,2020-08-19T00:39:51Z,2020-08-19T00:39:58Z,MERGED,True,18,18,1,https://github.com/dbnicholson,Use new EOS Driver Signing 2020 certificate,1,[],https://github.com/endlessm/linux/pull/559,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/559#issuecomment-675786734,"This certificate is different than the one used to sign the kernel to
prevent PAYG systems from executing EOS kernels and breaking out of the
PAYG security domain. It will be used to sign out of tree modules such
as the nvidia driver.
$ openssl x509 -noout -subject -issuer -dates -in certs/endless.pem
subject=CN = EOS Driver Signing 2020
issuer=CN = Endless Secure Boot CA
notBefore=Aug 18 21:55:26 2020 GMT
notAfter=Aug 17 21:55:26 2025 GMT

https://phabricator.endlessm.com/T30607","Looks good, thanks! I'm merging this, even though it will break loading the NVIDIA driver under secure boot until endlessm/eos-sb-signer#18 is merged.",True,{}
endlessm/linux,https://github.com/endlessm/linux,560,2020-09-07T09:14:01Z,2020-09-09T23:24:06Z,2020-09-09T23:24:10Z,MERGED,True,2,2,2,https://github.com/starnight,config: Disable CONFIG_SECURITY_DMESG_RESTRICT,1,[],https://github.com/endlessm/linux/pull/560,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/560,"To enable dmesg for normal users by default,
CONFIG_SECURITY_DMESG_RESTRICT should be disabled.
https://phabricator.endlessm.com/T30742","To enable dmesg for normal users by default,
CONFIG_SECURITY_DMESG_RESTRICT should be disabled.
https://phabricator.endlessm.com/T30742",True,{}
endlessm/linux,https://github.com/endlessm/linux,560,2020-09-07T09:14:01Z,2020-09-09T23:24:06Z,2020-09-09T23:24:10Z,MERGED,True,2,2,2,https://github.com/starnight,config: Disable CONFIG_SECURITY_DMESG_RESTRICT,1,[],https://github.com/endlessm/linux/pull/560,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/560#issuecomment-689875330,"To enable dmesg for normal users by default,
CONFIG_SECURITY_DMESG_RESTRICT should be disabled.
https://phabricator.endlessm.com/T30742",Thanks for the PR and review. Merging this!,True,{}
endlessm/linux,https://github.com/endlessm/linux,561,2020-09-18T09:54:57Z,2020-09-18T09:57:38Z,2020-09-18T09:57:38Z,CLOSED,False,2,2,2,https://github.com/starnight,config: Disable CONFIG_ROCKCHIP_CDN_DP,1,[],https://github.com/endlessm/linux/pull/561,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/561,"To enable the DRM devices of Rockchip RK3399 on PINEBOOK Pro,
CONFIG_ROCKCHIP_CDN_DP should be disabled. Because, the cdn-dp failure
halts the following DRM works. The orginal preload OS Manjaro ARM also
disables it.
https://phabricator.endlessm.com/T30770","To enable the DRM devices of Rockchip RK3399 on PINEBOOK Pro,
CONFIG_ROCKCHIP_CDN_DP should be disabled. Because, the cdn-dp failure
halts the following DRM works. The orginal preload OS Manjaro ARM also
disables it.
https://phabricator.endlessm.com/T30770",True,{}
endlessm/linux,https://github.com/endlessm/linux,562,2020-09-18T10:03:06Z,2020-09-25T06:23:29Z,2020-09-25T06:23:36Z,CLOSED,False,2,2,2,https://github.com/starnight,config: Disable CONFIG_ROCKCHIP_CDN_DP,1,[],https://github.com/endlessm/linux/pull/562,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/562,"To enable the DRM devices of Rockchip RK3399 on PINEBOOK Pro,
CONFIG_ROCKCHIP_CDN_DP should be disabled. Because, the cdn-dp failure
halts the following DRM works.
https://phabricator.endlessm.com/T30770","To enable the DRM devices of Rockchip RK3399 on PINEBOOK Pro,
CONFIG_ROCKCHIP_CDN_DP should be disabled. Because, the cdn-dp failure
halts the following DRM works.
https://phabricator.endlessm.com/T30770",True,{}
endlessm/linux,https://github.com/endlessm/linux,563,2020-09-25T06:25:26Z,2020-09-25T22:00:41Z,2020-09-25T22:00:46Z,MERGED,True,1,1,1,https://github.com/starnight,arm64: dts: rockchip: disable USB type-c DisplayPort,1,[],https://github.com/endlessm/linux/pull/563,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/563,"The cdn-dp sub driver probes the device failed on PINEBOOK Pro.
kernel: cdn-dp fec00000.dp: [drm:cdn_dp_probe [rockchipdrm]] ERROR missing extcon or phy
kernel: cdn-dp: probe of fec00000.dp failed with error -22
Then, the device halts all of the DRM related device jobs. For example,
the operations: vop_component_ops, vop_component_ops and
rockchip_dp_component_ops cannot be bound to corresponding devices. So,
Xorg cannot find the correct DRM device.
The USB type-C DisplayPort does not work for now. So, disable the
DisplayPort node until the type-C phy work has been done.
https://phabricator.endlessm.com/T30770
Link: https://patchwork.kernel.org/patch/11794141/#23639877
Signed-off-by: Jian-Hong Pan jhp@endlessos.org","The cdn-dp sub driver probes the device failed on PINEBOOK Pro.
kernel: cdn-dp fec00000.dp: [drm:cdn_dp_probe [rockchipdrm]] ERROR missing extcon or phy
kernel: cdn-dp: probe of fec00000.dp failed with error -22
Then, the device halts all of the DRM related device jobs. For example,
the operations: vop_component_ops, vop_component_ops and
rockchip_dp_component_ops cannot be bound to corresponding devices. So,
Xorg cannot find the correct DRM device.
The USB type-C DisplayPort does not work for now. So, disable the
DisplayPort node until the type-C phy work has been done.
https://phabricator.endlessm.com/T30770
Link: https://patchwork.kernel.org/patch/11794141/#23639877
Signed-off-by: Jian-Hong Pan jhp@endlessos.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,564,2020-10-07T10:44:02Z,,2022-04-12T21:36:12Z,OPEN,False,999043,1996,1612,https://github.com/mschiu77,Bluetooth: btusb: Add support for 13d3:3560 MediaTek MT7615E device,485,[],https://github.com/endlessm/linux/pull/564,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/564,"The ASUS X532EQ laptop contains AzureWave AW-CB434NF module with an
associated MT7615E BT chip using a USB ID of 13d3:3560.
T:  Bus=03 Lev=01 Prnt=01 Port=09 Cnt=02 Dev#=  3 Spd=480  MxCh= 0
D:  Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3560 Rev= 1.00
S:  Manufacturer=MediaTek Inc.
S:  Product=Wireless_Device
S:  SerialNumber=000000000
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
A:  FirstIf#= 0 IfCount= 2 Cls=e0(wlcon) Sub=01 Prot=01
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=125us
E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
I:  If#= 1 Alt= 6 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  63 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  63 Ivl=1ms
Signed-off-by: Chris Chiu chiu@endlessos.org","The ASUS X532EQ laptop contains AzureWave AW-CB434NF module with an
associated MT7615E BT chip using a USB ID of 13d3:3560.
T:  Bus=03 Lev=01 Prnt=01 Port=09 Cnt=02 Dev#=  3 Spd=480  MxCh= 0
D:  Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=13d3 ProdID=3560 Rev= 1.00
S:  Manufacturer=MediaTek Inc.
S:  Product=Wireless_Device
S:  SerialNumber=000000000
C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
A:  FirstIf#= 0 IfCount= 2 Cls=e0(wlcon) Sub=01 Prot=01
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=125us
E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
I:  If#= 1 Alt= 6 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  63 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  63 Ivl=1ms
Signed-off-by: Chris Chiu chiu@endlessos.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,565,2020-10-08T03:42:09Z,2020-10-08T22:51:37Z,2020-10-08T22:51:50Z,MERGED,True,42,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable audio jacks of ASUS D700SA with ALC887,1,[],https://github.com/endlessm/linux/pull/565,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/565,"The ASUS D700SA desktop's audio (1043:2390) with ALC887 cannot detect
the headset microphone and another headphone jack until
ALC887_FIXUP_ASUS_HMIC and ALC887_FIXUP_ASUS_AUDIO quirks are applied.
The NID 0x15 maps as the headset microphone and NID 0x19 maps as another
headphone jack. Also need the function like alc887_fixup_asus_jack to
enable the audio jacks.
https://phabricator.endlessm.com/T30803
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Signed-off-by: Kailang Yang kailang@realtek.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20201007052224.22611-1-jhp@endlessos.org
Signed-off-by: Takashi Iwai tiwai@suse.de","The ASUS D700SA desktop's audio (1043:2390) with ALC887 cannot detect
the headset microphone and another headphone jack until
ALC887_FIXUP_ASUS_HMIC and ALC887_FIXUP_ASUS_AUDIO quirks are applied.
The NID 0x15 maps as the headset microphone and NID 0x19 maps as another
headphone jack. Also need the function like alc887_fixup_asus_jack to
enable the audio jacks.
https://phabricator.endlessm.com/T30803
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Signed-off-by: Kailang Yang kailang@realtek.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20201007052224.22611-1-jhp@endlessos.org
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,566,2020-10-12T06:38:12Z,2020-10-15T23:14:59Z,2020-10-15T23:15:52Z,CLOSED,False,42,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable audio jacks of ASUS D700SA with ALC887,1,[],https://github.com/endlessm/linux/pull/566,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/566,"The ASUS D700SA desktop's audio (1043:2390) with ALC887 cannot detect
the headset microphone and another headphone jack until
ALC887_FIXUP_ASUS_HMIC and ALC887_FIXUP_ASUS_AUDIO quirks are applied.
The NID 0x15 maps as the headset microphone and NID 0x19 maps as another
headphone jack. Also need the function like alc887_fixup_asus_jack to
enable the audio jacks.
https://phabricator.endlessm.com/T30803
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Signed-off-by: Kailang Yang kailang@realtek.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20201007052224.22611-1-jhp@endlessos.org
Signed-off-by: Takashi Iwai tiwai@suse.de","The ASUS D700SA desktop's audio (1043:2390) with ALC887 cannot detect
the headset microphone and another headphone jack until
ALC887_FIXUP_ASUS_HMIC and ALC887_FIXUP_ASUS_AUDIO quirks are applied.
The NID 0x15 maps as the headset microphone and NID 0x19 maps as another
headphone jack. Also need the function like alc887_fixup_asus_jack to
enable the audio jacks.
https://phabricator.endlessm.com/T30803
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Signed-off-by: Kailang Yang kailang@realtek.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20201007052224.22611-1-jhp@endlessos.org
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,566,2020-10-12T06:38:12Z,2020-10-15T23:14:59Z,2020-10-15T23:15:52Z,CLOSED,False,42,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable audio jacks of ASUS D700SA with ALC887,1,[],https://github.com/endlessm/linux/pull/566,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/566#issuecomment-709638088,"The ASUS D700SA desktop's audio (1043:2390) with ALC887 cannot detect
the headset microphone and another headphone jack until
ALC887_FIXUP_ASUS_HMIC and ALC887_FIXUP_ASUS_AUDIO quirks are applied.
The NID 0x15 maps as the headset microphone and NID 0x19 maps as another
headphone jack. Also need the function like alc887_fixup_asus_jack to
enable the audio jacks.
https://phabricator.endlessm.com/T30803
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Signed-off-by: Kailang Yang kailang@realtek.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20201007052224.22611-1-jhp@endlessos.org
Signed-off-by: Takashi Iwai tiwai@suse.de",Already merged outside of github.,True,{}
endlessm/linux,https://github.com/endlessm/linux,567,2020-10-13T07:01:39Z,2020-10-13T07:17:17Z,2020-10-13T07:17:18Z,MERGED,True,108,29,7,https://github.com/starnight,rtw88: coex: Fix ACL Tx pause during BT inquiry/page.,1,[],https://github.com/endlessm/linux/pull/567,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/567,"Add a set of logic with corresponding coexistence parameters to
handle the situation under BT inquiry/page.
We will set PSTDMA while WL-Busy + BT inquiry/page to separate
WL/BT slots. PSTDMA can protect WL data rate and BT performance.
If WL-Busy + BT inquiry/page and there was BT device paired,
We will set the mechanism to 4Slot PSTDMA.
In 4Slot PSTDMA, the paired devices can perform more smoothly
and prevent some issues trigger from insufficient data.
And to avoid A2DP glitch or disconnection, we will adjust ACL
data priority higher than inquiry/page.
In addition, we found sometimes BT inquiry/page still working
last for seconds after BT had notified inquiry/page finished.
It will lead to A2DP glitch cause of ACL data, inquiry/page
priority toggled. To fix the corner, we add a timer to remain
the inquiry/page status.
And we found WL busy/idle threshold is too sensitive,
it will keep switching in some weak network environment and
coexistence mechanism will switch between TDMA and PSTDMA.
The very frequently switching may destroyed not only the
handshake with AP, but BT performance. And it will trigger
some unexpected error.
To prevent the frequently switching, we add a timer to delay
the status change while WL busy switch to idle.
https://phabricator.endlessm.com/T30702
Signed-off-by: Zong-Zhe Yang kevin_yang@realtek.com
Signed-off-by: Yan-Hsuan Chuang yhchuang@realtek.com
Signed-off-by: Kalle Valo kvalo@codeaurora.org
Link: https://lore.kernel.org/r/20200715023324.8600-1-yhchuang@realtek.com","Add a set of logic with corresponding coexistence parameters to
handle the situation under BT inquiry/page.
We will set PSTDMA while WL-Busy + BT inquiry/page to separate
WL/BT slots. PSTDMA can protect WL data rate and BT performance.
If WL-Busy + BT inquiry/page and there was BT device paired,
We will set the mechanism to 4Slot PSTDMA.
In 4Slot PSTDMA, the paired devices can perform more smoothly
and prevent some issues trigger from insufficient data.
And to avoid A2DP glitch or disconnection, we will adjust ACL
data priority higher than inquiry/page.
In addition, we found sometimes BT inquiry/page still working
last for seconds after BT had notified inquiry/page finished.
It will lead to A2DP glitch cause of ACL data, inquiry/page
priority toggled. To fix the corner, we add a timer to remain
the inquiry/page status.
And we found WL busy/idle threshold is too sensitive,
it will keep switching in some weak network environment and
coexistence mechanism will switch between TDMA and PSTDMA.
The very frequently switching may destroyed not only the
handshake with AP, but BT performance. And it will trigger
some unexpected error.
To prevent the frequently switching, we add a timer to delay
the status change while WL busy switch to idle.
https://phabricator.endlessm.com/T30702
Signed-off-by: Zong-Zhe Yang kevin_yang@realtek.com
Signed-off-by: Yan-Hsuan Chuang yhchuang@realtek.com
Signed-off-by: Kalle Valo kvalo@codeaurora.org
Link: https://lore.kernel.org/r/20200715023324.8600-1-yhchuang@realtek.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,568,2020-10-13T09:55:42Z,2020-10-13T10:03:35Z,2020-10-14T00:18:56Z,MERGED,True,9,7,3,https://github.com/starnight,T30702: rtl8732de: Fix BT file transfer issue,3,[],https://github.com/endlessm/linux/pull/568,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/568,"Fix BT file transfer issue for rtw88 8732de.
https://phabricator.endlessm.com/T30702","Fix BT file transfer issue for rtw88 8732de.
https://phabricator.endlessm.com/T30702",True,{}
endlessm/linux,https://github.com/endlessm/linux,569,2020-10-15T00:57:51Z,2020-10-15T01:01:13Z,2020-10-15T01:01:17Z,MERGED,True,13,15,1,https://github.com/jprvita,fixup! tmpfs: add user_xattr mount option,1,[],https://github.com/endlessm/linux/pull/569,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/569,"We should be using fsparam_no_flag instead of fsparam_bool for this
attribute, otherwise mount expects a value to be passed to the option.
Also, fsparam_no_flag already covers both 'option' and 'nooption', and
we can differentiate them by the result from fs_parse.
This is modeled after fs/erofs/super.c.
https://phabricator.endlessm.com/T30464","We should be using fsparam_no_flag instead of fsparam_bool for this
attribute, otherwise mount expects a value to be passed to the option.
Also, fsparam_no_flag already covers both 'option' and 'nooption', and
we can differentiate them by the result from fs_parse.
This is modeled after fs/erofs/super.c.
https://phabricator.endlessm.com/T30464",True,{}
endlessm/linux,https://github.com/endlessm/linux,570,2020-10-16T01:47:32Z,2020-10-16T02:19:12Z,2020-10-16T02:19:16Z,MERGED,True,3,5,1,https://github.com/starnight,PCI: vmd: Add AHCI to fast interrupt list,1,[],https://github.com/endlessm/linux/pull/570,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/570,"Some platforms have an AHCI controller behind VMD. These platforms are
working correctly except for a case when the AHCI MSI is programmed with
VMD IRQ vector 0 (0xfee00000). When programmed with any other interrupt
(0xfeeNN000), the MSI is routed correctly and is handled by VMD. Placing
the AHCI MSI(s) in the fast-interrupt allow list solves the issue.
This also requires that VMD allocate more than one MSI/X vector and
changes the minimum MSI/X vectors allocated to two.
https://phabricator.endlessm.com/T30967
Signed-off-by: Jon Derrick jonathan.derrick@intel.com
Tested-by: Jian-Hong Pan jhp@endlessos.org","Some platforms have an AHCI controller behind VMD. These platforms are
working correctly except for a case when the AHCI MSI is programmed with
VMD IRQ vector 0 (0xfee00000). When programmed with any other interrupt
(0xfeeNN000), the MSI is routed correctly and is handled by VMD. Placing
the AHCI MSI(s) in the fast-interrupt allow list solves the issue.
This also requires that VMD allocate more than one MSI/X vector and
changes the minimum MSI/X vectors allocated to two.
https://phabricator.endlessm.com/T30967
Signed-off-by: Jon Derrick jonathan.derrick@intel.com
Tested-by: Jian-Hong Pan jhp@endlessos.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,571,2020-10-23T16:06:39Z,2020-10-26T22:36:39Z,2020-10-26T22:36:44Z,MERGED,True,1,1,1,https://github.com/mschiu77,Bluetooth: Fix update of connection state in `hci_encrypt_cfm`,1,[],https://github.com/endlessm/linux/pull/571,https://github.com/mschiu77,1,https://github.com/endlessm/linux/pull/571,"Starting with the upgrade to v5.8-rc3, I've noticed I wasn't able to
connect to my Bluetooth headset properly anymore. While connecting to
the device would eventually succeed, bluetoothd seemed to be confused
about the current connection state where the state was flapping hence
and forth. Bisecting this issue led to commit 3ca44c1 (Bluetooth:
Consolidate encryption handling in hci_encrypt_cfm, 2020-05-19), which
refactored hci_encrypt_cfm to also handle updating the connection
state.
The commit in question changed the code to call hci_connect_cfm inside
hci_encrypt_cfm and to change the connection state. But with the
conversion, we now only update the connection state if a status was set
already. In fact, the reverse should be true: the status should be
updated if no status is yet set. So let's fix the isuse by reversing the
condition.
Fixes: 3ca44c1 (""Bluetooth: Consolidate encryption handling in hci_encrypt_cfm"")
Signed-off-by: Patrick Steinhardt ps@pks.im
Acked-by:  Luiz Augusto von Dentz luiz.von.dentz@intel.com
Signed-off-by: Marcel Holtmann marcel@holtmann.org","Starting with the upgrade to v5.8-rc3, I've noticed I wasn't able to
connect to my Bluetooth headset properly anymore. While connecting to
the device would eventually succeed, bluetoothd seemed to be confused
about the current connection state where the state was flapping hence
and forth. Bisecting this issue led to commit 3ca44c1 (Bluetooth:
Consolidate encryption handling in hci_encrypt_cfm, 2020-05-19), which
refactored hci_encrypt_cfm to also handle updating the connection
state.
The commit in question changed the code to call hci_connect_cfm inside
hci_encrypt_cfm and to change the connection state. But with the
conversion, we now only update the connection state if a status was set
already. In fact, the reverse should be true: the status should be
updated if no status is yet set. So let's fix the isuse by reversing the
condition.
Fixes: 3ca44c1 (""Bluetooth: Consolidate encryption handling in hci_encrypt_cfm"")
Signed-off-by: Patrick Steinhardt ps@pks.im
Acked-by:  Luiz Augusto von Dentz luiz.von.dentz@intel.com
Signed-off-by: Marcel Holtmann marcel@holtmann.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,572,2020-11-26T03:08:26Z,2020-11-26T03:14:44Z,2020-11-26T03:14:50Z,MERGED,True,3,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset of ASUS UX482EG & B9400CEA with ALC294,1,[],https://github.com/endlessm/linux/pull/572,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/572,"Some laptops like ASUS UX482EG & B9400CEA's headset audio does not work
until the quirk ALC294_FIXUP_ASUS_HPE is applied.
https://phabricator.endlessm.com/T30940
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20201124092024.179540-1-jhp@endlessos.org
Signed-off-by: Takashi Iwai tiwai@suse.de","Some laptops like ASUS UX482EG & B9400CEA's headset audio does not work
until the quirk ALC294_FIXUP_ASUS_HPE is applied.
https://phabricator.endlessm.com/T30940
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20201124092024.179540-1-jhp@endlessos.org
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,573,2020-12-03T03:12:20Z,2020-12-03T03:20:22Z,2020-12-03T03:20:26Z,MERGED,True,85,16,4,https://github.com/jprvita,Fix internal keyboard now working on several Asus laptops,2,[],https://github.com/endlessm/linux/pull/573,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/573,https://phabricator.endlessm.com/T31158,https://phabricator.endlessm.com/T31158,True,{}
endlessm/linux,https://github.com/endlessm/linux,574,2020-12-28T09:45:00Z,2020-12-28T21:24:58Z,2020-12-28T21:25:01Z,MERGED,True,13,0,1,https://github.com/starnight,ALSA: hda/realtek - Enable headphone for ASUS TM420,1,[],https://github.com/endlessm/linux/pull/574,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/574,"ASUS TM420 had depop circuit for headphone.
It need to turn on by COEF bit.
[ fixed the missing enum definition by tiwai ]
https://phabricator.endlessm.com/T30825
Signed-off-by: Kailang Yang kailang@realtek.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/3d6177d7023b4783bf2793861c577ada@realtek.com
Signed-off-by: Takashi Iwai tiwai@suse.de","ASUS TM420 had depop circuit for headphone.
It need to turn on by COEF bit.
[ fixed the missing enum definition by tiwai ]
https://phabricator.endlessm.com/T30825
Signed-off-by: Kailang Yang kailang@realtek.com
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/3d6177d7023b4783bf2793861c577ada@realtek.com
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,575,2021-01-15T06:50:31Z,2021-01-15T07:12:14Z,2021-01-15T07:12:20Z,MERGED,True,56,0,2,https://github.com/starnight,HID: chicony: Add Wireless Radio Control feature for Chicony devices,1,[],https://github.com/endlessm/linux/pull/575,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/575,"Some Chicony's keyboards support airplane mode hotkey (Fn+F2) with
""Wireless Radio Control"" feature. For example, the wireless keyboard
[04f2:1236] shipped with ASUS all-in-one desktop.
After consulting Chicony for this hotkey, learned the device will send
with 0x11 as the report ID and 0x1 as the value when the key is pressed
down.
This patch maps the event as KEY_RFKILL.
https://phabricator.endlessm.com/T31048
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Signed-off-by: Jiri Kosina jkosina@suse.cz","Some Chicony's keyboards support airplane mode hotkey (Fn+F2) with
""Wireless Radio Control"" feature. For example, the wireless keyboard
[04f2:1236] shipped with ASUS all-in-one desktop.
After consulting Chicony for this hotkey, learned the device will send
with 0x11 as the report ID and 0x1 as the value when the key is pressed
down.
This patch maps the event as KEY_RFKILL.
https://phabricator.endlessm.com/T31048
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Signed-off-by: Jiri Kosina jkosina@suse.cz",True,{}
endlessm/linux,https://github.com/endlessm/linux,576,2021-01-22T03:38:55Z,2021-01-26T01:26:04Z,2021-01-26T01:26:07Z,MERGED,True,1,1,1,https://github.com/starnight,[Endless] drm/i915: Clear require_force_probe for JSL DRM,1,[],https://github.com/endlessm/linux/pull/576,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/576,"We have an ASUS BR1100FKA equipped with Intel N6000 Jasper Lake. The DRM
is always probed failed due to the require_force_probe barrier placed by
Intel. Maybe, Intel has not enabled it well right now, so puts the
barrier here.
However, to make users enjoy Endless OS as much as possible, this patch
clears the require_force_probe flag for Jasper Lake's DRM.
This approach should be removed if Intel enables Jasper Lake chips well.
This will be different after kernel 5.11+ due to the commit 24ea098
(""drm/i915/jsl: Split EHL/JSL platform info and PCI ids"").
https://phabricator.endlessm.com/T31213
Signed-off-by: Jian-Hong Pan jhp@endlessos.org","We have an ASUS BR1100FKA equipped with Intel N6000 Jasper Lake. The DRM
is always probed failed due to the require_force_probe barrier placed by
Intel. Maybe, Intel has not enabled it well right now, so puts the
barrier here.
However, to make users enjoy Endless OS as much as possible, this patch
clears the require_force_probe flag for Jasper Lake's DRM.
This approach should be removed if Intel enables Jasper Lake chips well.
This will be different after kernel 5.11+ due to the commit 24ea098
(""drm/i915/jsl: Split EHL/JSL platform info and PCI ids"").
https://phabricator.endlessm.com/T31213
Signed-off-by: Jian-Hong Pan jhp@endlessos.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,577,2021-01-22T09:58:32Z,2021-01-22T19:10:55Z,2021-01-22T19:10:59Z,MERGED,True,1,0,1,https://github.com/starnight,ALSA: hda/realtek: Enable headset of ASUS B1400CEPE with ALC256,1,[],https://github.com/endlessm/linux/pull/577,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/577,"ASUS B1400CEPE laptop's headset audio is not enabled until
ALC256_FIXUP_ASUS_HPE quirk is applied.
Here is the original pin node values:
0x12 0x40000000
0x13 0x411111f0
0x14 0x90170110
0x18 0x411111f0
0x19 0x411111f0
0x1a 0x411111f0
0x1b 0x411111f0
0x1d 0x40461b45
0x1e 0x411111f0
0x21 0x04211020
https://phabricator.endlessm.com/T31254
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20210122054705.48804-1-jhp@endlessos.org
Signed-off-by: Takashi Iwai tiwai@suse.de","ASUS B1400CEPE laptop's headset audio is not enabled until
ALC256_FIXUP_ASUS_HPE quirk is applied.
Here is the original pin node values:
0x12 0x40000000
0x13 0x411111f0
0x14 0x90170110
0x18 0x411111f0
0x19 0x411111f0
0x1a 0x411111f0
0x1b 0x411111f0
0x1d 0x40461b45
0x1e 0x411111f0
0x21 0x04211020
https://phabricator.endlessm.com/T31254
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20210122054705.48804-1-jhp@endlessos.org
Signed-off-by: Takashi Iwai tiwai@suse.de",True,{}
endlessm/linux,https://github.com/endlessm/linux,578,2021-01-29T10:03:57Z,2021-02-12T19:22:53Z,2021-02-12T19:22:56Z,MERGED,True,54,804,3,https://github.com/starnight,[Endless] config: Disable arm64 platforms that EOS not tested,1,[],https://github.com/endlessm/linux/pull/578,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/578,"The kernel 5.10+ image is too fat to fit in the memory space prepared by
U-Boot.
This patch disables the arm64 platforms that EOS has not tested to
shrink the kernel image size.
https://phabricator.endlessm.com/T31242#867351","The kernel 5.10+ image is too fat to fit in the memory space prepared by
U-Boot.
This patch disables the arm64 platforms that EOS has not tested to
shrink the kernel image size.
https://phabricator.endlessm.com/T31242#867351",True,{}
endlessm/linux,https://github.com/endlessm/linux,579,2021-03-23T07:01:02Z,2021-03-24T04:25:28Z,2021-03-24T04:25:31Z,MERGED,True,12,18,3,https://github.com/starnight,"Fix kernel 5.11, T31617",3,[],https://github.com/endlessm/linux/pull/579,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/579,"Fix the commits (""[Endless] packaging: Downstream customization"") and ([Endless] config: Downstream customization).
Also, revert commit (""PCI/MSI: Fix restoring of MSI-X vector control's mask bit"").
https://phabricator.endlessm.com/T31617#880114","Fix the commits (""[Endless] packaging: Downstream customization"") and ([Endless] config: Downstream customization).
Also, revert commit (""PCI/MSI: Fix restoring of MSI-X vector control's mask bit"").
https://phabricator.endlessm.com/T31617#880114",True,{}
endlessm/linux,https://github.com/endlessm/linux,580,2021-04-12T08:57:54Z,2021-04-13T19:18:43Z,2021-04-13T19:21:35Z,MERGED,True,0,49,3,https://github.com/starnight,fixup! [Endless] packaging: Downstream customization,1,[],https://github.com/endlessm/linux/pull/580,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/580,"EOS is going to deploy device tree directory with OSTree. So, the
FIT-uImage should be removed.
https://phabricator.endlessm.com/T31726","EOS is going to deploy device tree directory with OSTree. So, the
FIT-uImage should be removed.
https://phabricator.endlessm.com/T31726",True,{}
endlessm/linux,https://github.com/endlessm/linux,580,2021-04-12T08:57:54Z,2021-04-13T19:18:43Z,2021-04-13T19:21:35Z,MERGED,True,0,49,3,https://github.com/starnight,fixup! [Endless] packaging: Downstream customization,1,[],https://github.com/endlessm/linux/pull/580,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/580#issuecomment-818050185,"EOS is going to deploy device tree directory with OSTree. So, the
FIT-uImage should be removed.
https://phabricator.endlessm.com/T31726",The CI failure here is being addressed at endlessm/eos-build#1245.,True,{}
endlessm/linux,https://github.com/endlessm/linux,580,2021-04-12T08:57:54Z,2021-04-13T19:18:43Z,2021-04-13T19:21:35Z,MERGED,True,0,49,3,https://github.com/starnight,fixup! [Endless] packaging: Downstream customization,1,[],https://github.com/endlessm/linux/pull/580,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/580#issuecomment-818057026,"EOS is going to deploy device tree directory with OSTree. So, the
FIT-uImage should be removed.
https://phabricator.endlessm.com/T31726","The CI failure here is being addressed at endlessm/eos-build#1245.

We should not merge this PR until endlessm/eos-build#1245 is merged, because atm this will fail to build on our infrastructure.",True,{}
endlessm/linux,https://github.com/endlessm/linux,580,2021-04-12T08:57:54Z,2021-04-13T19:18:43Z,2021-04-13T19:21:35Z,MERGED,True,0,49,3,https://github.com/starnight,fixup! [Endless] packaging: Downstream customization,1,[],https://github.com/endlessm/linux/pull/580,https://github.com/jprvita,4,https://github.com/endlessm/linux/pull/580#issuecomment-818979665,"EOS is going to deploy device tree directory with OSTree. So, the
FIT-uImage should be removed.
https://phabricator.endlessm.com/T31726","bot, retest this please",True,{}
endlessm/linux,https://github.com/endlessm/linux,581,2021-05-06T16:52:45Z,2021-05-07T21:13:26Z,2021-05-07T21:13:31Z,MERGED,True,10,472,26,https://github.com/jprvita,Drop unnecessary packaging changes,22,[],https://github.com/endlessm/linux/pull/581,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/581,https://phabricator.endlessm.com/T31772,https://phabricator.endlessm.com/T31772,True,{}
endlessm/linux,https://github.com/endlessm/linux,581,2021-05-06T16:52:45Z,2021-05-07T21:13:26Z,2021-05-07T21:13:31Z,MERGED,True,10,472,26,https://github.com/jprvita,Drop unnecessary packaging changes,22,[],https://github.com/endlessm/linux/pull/581,https://github.com/dsd,2,https://github.com/endlessm/linux/pull/581#issuecomment-834044323,https://phabricator.endlessm.com/T31772,Looks good. If it's not much extra effort maybe also add Acer Veriton Z4660G/Z4860G/Z6860G to the list of machines that dont automatically upgrade.,True,{}
endlessm/linux,https://github.com/endlessm/linux,581,2021-05-06T16:52:45Z,2021-05-07T21:13:26Z,2021-05-07T21:13:31Z,MERGED,True,10,472,26,https://github.com/jprvita,Drop unnecessary packaging changes,22,[],https://github.com/endlessm/linux/pull/581,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/581#issuecomment-834636700,https://phabricator.endlessm.com/T31772,"Looks good. If it's not much extra effort maybe also add Acer Veriton Z4660G/Z4860G/Z6860G to the list of machines that dont automatically upgrade.

I agree -- in fact, they were already listed on a comment in the ticket tracking this work, together with a few other modules, to be transferred to the ticket tracking the conditional update work once I got feedback on these reverts. I'll update that other ticket after this get merged.",True,{}
endlessm/linux,https://github.com/endlessm/linux,582,2021-06-07T09:10:22Z,2021-06-08T06:34:04Z,2021-06-08T06:34:06Z,MERGED,True,2,2,2,https://github.com/starnight,fixup! [Endless] config: Downstream customization,1,[],https://github.com/endlessm/linux/pull/582,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/582,"Enable RPi 4B's HDMI audio by disabling CONFIG_SND_BCM2835, which is
used by Raspberry Pi OS only and conflicts to upstream
CONFIG_SND_BCM2835_SOC_I2S.
https://phabricator.endlessm.com/T32044","Enable RPi 4B's HDMI audio by disabling CONFIG_SND_BCM2835, which is
used by Raspberry Pi OS only and conflicts to upstream
CONFIG_SND_BCM2835_SOC_I2S.
https://phabricator.endlessm.com/T32044",True,{}
endlessm/linux,https://github.com/endlessm/linux,583,2021-06-15T09:25:01Z,2021-06-16T00:01:44Z,2021-06-16T02:21:46Z,MERGED,True,159,78,23,https://github.com/starnight,arm: arm64: dts: Enable RPi 400 by adding its device tree,8,[],https://github.com/endlessm/linux/pull/583,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/583,"Applied related commits from upstream [1] to add RPi 400's device tree.
[1] https://git.kernel.org/pub/scm/linux/kernel/git/nsaenz/linux-rpi.git/log/?h=bcm2835-dt-next-2021-06-08-v2
https://phabricator.endlessm.com/T32106","Applied related commits from upstream [1] to add RPi 400's device tree.
[1] https://git.kernel.org/pub/scm/linux/kernel/git/nsaenz/linux-rpi.git/log/?h=bcm2835-dt-next-2021-06-08-v2
https://phabricator.endlessm.com/T32106",True,{}
endlessm/linux,https://github.com/endlessm/linux,584,2021-07-01T09:33:41Z,2021-07-01T23:56:31Z,2021-07-01T23:56:34Z,MERGED,True,1,0,1,https://github.com/starnight,net: bcmgenet: Add mdio-bcm-unimac soft dependency,1,[],https://github.com/endlessm/linux/pull/584,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/584,"The Broadcom UniMAC MDIO bus from mdio-bcm-unimac module comes too late.
So, GENET cannot find the ethernet PHY on UniMAC MDIO bus. This leads
GENET fail to attach the PHY as following log:
bcmgenet fd580000.ethernet: GENET 5.0 EPHY: 0x0000
...
could not attach to PHY
bcmgenet fd580000.ethernet eth0: failed to connect to PHY
uart-pl011 fe201000.serial: no DMA platform data
libphy: bcmgenet MII bus: probed
...
unimac-mdio unimac-mdio.-19: Broadcom UniMAC MDIO bus
It is not just coming too late, there is also no way for the module
loader to figure out the dependency between GENET and its MDIO bus
driver unless we provide this MODULE_SOFTDEP hint.
This patch adds the soft dependency to load mdio-bcm-unimac module
before genet module to fix this issue.
https://phabricator.endlessm.com/T32142
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=213485
Fixes: 9a4e796 (""net: bcmgenet: utilize generic Broadcom UniMAC MDIO controller driver"")
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Signed-off-by: Florian Fainelli f.fainelli@gmail.com
Signed-off-by: David S. Miller davem@davemloft.net","The Broadcom UniMAC MDIO bus from mdio-bcm-unimac module comes too late.
So, GENET cannot find the ethernet PHY on UniMAC MDIO bus. This leads
GENET fail to attach the PHY as following log:
bcmgenet fd580000.ethernet: GENET 5.0 EPHY: 0x0000
...
could not attach to PHY
bcmgenet fd580000.ethernet eth0: failed to connect to PHY
uart-pl011 fe201000.serial: no DMA platform data
libphy: bcmgenet MII bus: probed
...
unimac-mdio unimac-mdio.-19: Broadcom UniMAC MDIO bus
It is not just coming too late, there is also no way for the module
loader to figure out the dependency between GENET and its MDIO bus
driver unless we provide this MODULE_SOFTDEP hint.
This patch adds the soft dependency to load mdio-bcm-unimac module
before genet module to fix this issue.
https://phabricator.endlessm.com/T32142
Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=213485
Fixes: 9a4e796 (""net: bcmgenet: utilize generic Broadcom UniMAC MDIO controller driver"")
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
Signed-off-by: Florian Fainelli f.fainelli@gmail.com
Signed-off-by: David S. Miller davem@davemloft.net",True,{}
endlessm/linux,https://github.com/endlessm/linux,585,2021-07-20T21:25:40Z,2021-07-21T03:26:58Z,2021-07-21T06:12:35Z,MERGED,True,10,61,2,https://github.com/jprvita,"Revert ""tmpfs: add user_xattr mount option""",1,[],https://github.com/endlessm/linux/pull/585,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/585,"This reverts commit 97de92d.
https://phabricator.endlessm.com/T13839","This reverts commit 97de92d.
https://phabricator.endlessm.com/T13839",True,{}
endlessm/linux,https://github.com/endlessm/linux,586,2021-07-20T23:10:36Z,2021-07-20T23:58:34Z,2021-07-20T23:58:36Z,MERGED,True,3,0,1,https://github.com/jprvita,UBUNTU: SAUCE: seq_file: Disallow extremely large seq buffer allocations,1,[],https://github.com/endlessm/linux/pull/586,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/586,"There is no reasonable need for a buffer larger than this,
and it avoids int overflow pitfalls.
Suggested-by: Al Viro viro@zeniv.linux.org.uk
Signed-off-by: Eric Sandeen sandeen@redhat.com
CVE-2021-33909
Signed-off-by: Thadeu Lima de Souza Cascardo cascardo@canonical.com","There is no reasonable need for a buffer larger than this,
and it avoids int overflow pitfalls.
Suggested-by: Al Viro viro@zeniv.linux.org.uk
Signed-off-by: Eric Sandeen sandeen@redhat.com
CVE-2021-33909
Signed-off-by: Thadeu Lima de Souza Cascardo cascardo@canonical.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,587,2021-07-20T23:13:27Z,2021-07-20T23:58:30Z,2021-07-20T23:58:38Z,MERGED,True,3,0,1,https://github.com/jprvita,UBUNTU: SAUCE: seq_file: Disallow extremely large seq buffer allocations,1,[],https://github.com/endlessm/linux/pull/587,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/587,"There is no reasonable need for a buffer larger than this,
and it avoids int overflow pitfalls.
Suggested-by: Al Viro viro@zeniv.linux.org.uk
Signed-off-by: Eric Sandeen sandeen@redhat.com
CVE-2021-33909
Fixes: 058504e (""fs/seq_file: fallback to vmalloc allocation"")
Signed-off-by: Thadeu Lima de Souza Cascardo cascardo@canonical.com
Acked-by: Juerg Haefliger juergh@canonical.com
Acked-by: Benjamin M Romer benjamin.romer@canonical.com","There is no reasonable need for a buffer larger than this,
and it avoids int overflow pitfalls.
Suggested-by: Al Viro viro@zeniv.linux.org.uk
Signed-off-by: Eric Sandeen sandeen@redhat.com
CVE-2021-33909
Fixes: 058504e (""fs/seq_file: fallback to vmalloc allocation"")
Signed-off-by: Thadeu Lima de Souza Cascardo cascardo@canonical.com
Acked-by: Juerg Haefliger juergh@canonical.com
Acked-by: Benjamin M Romer benjamin.romer@canonical.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,588,2021-07-20T23:16:19Z,2021-07-20T23:58:25Z,2021-07-20T23:58:41Z,MERGED,True,3,0,1,https://github.com/jprvita,UBUNTU: SAUCE: seq_file: Disallow extremely large seq buffer allocations,1,[],https://github.com/endlessm/linux/pull/588,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/588,"There is no reasonable need for a buffer larger than this,
and it avoids int overflow pitfalls.
Suggested-by: Al Viro viro@zeniv.linux.org.uk
Signed-off-by: Eric Sandeen sandeen@redhat.com
CVE-2021-33909
Fixes: 058504e (""fs/seq_file: fallback to vmalloc allocation"")
Signed-off-by: Thadeu Lima de Souza Cascardo cascardo@canonical.com
Acked-by: Juerg Haefliger juergh@canonical.com
Acked-by: Benjamin M Romer benjamin.romer@canonical.com","There is no reasonable need for a buffer larger than this,
and it avoids int overflow pitfalls.
Suggested-by: Al Viro viro@zeniv.linux.org.uk
Signed-off-by: Eric Sandeen sandeen@redhat.com
CVE-2021-33909
Fixes: 058504e (""fs/seq_file: fallback to vmalloc allocation"")
Signed-off-by: Thadeu Lima de Souza Cascardo cascardo@canonical.com
Acked-by: Juerg Haefliger juergh@canonical.com
Acked-by: Benjamin M Romer benjamin.romer@canonical.com",True,{}
endlessm/linux,https://github.com/endlessm/linux,589,2021-08-08T23:51:54Z,2021-08-19T20:15:02Z,2021-08-19T20:40:29Z,CLOSED,False,0,0,0,https://github.com/mithrandir42,Fix order of remapped nvme devices.,1,[],https://github.com/endlessm/linux/pull/589,https://github.com/mithrandir42,1,https://github.com/endlessm/linux/pull/589,"Not using this kernel, but since the origin of the nvme remapping is here, I want to give back the fix for the nvme drive order problem I have encountered. Works fine for me with zen-sources: zen-kernel/zen-kernel#227
At least with my hardware the nvme devices are being ordered the opposite way in rst mode than in ahci mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in rst mode. For non initrd users this means grub cannot find the root partition when switching between ahci and rst in bios. Assuming this is a general issue and not just with my hardware (Dell Precision 7550). If there are complaints from other users (with other devices) about the ordering being wrong for them, this should be easy to revert.","Not using this kernel, but since the origin of the nvme remapping is here, I want to give back the fix for the nvme drive order problem I have encountered. Works fine for me with zen-sources: zen-kernel/zen-kernel#227
At least with my hardware the nvme devices are being ordered the opposite way in rst mode than in ahci mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in rst mode. For non initrd users this means grub cannot find the root partition when switching between ahci and rst in bios. Assuming this is a general issue and not just with my hardware (Dell Precision 7550). If there are complaints from other users (with other devices) about the ordering being wrong for them, this should be easy to revert.",True,{}
endlessm/linux,https://github.com/endlessm/linux,589,2021-08-08T23:51:54Z,2021-08-19T20:15:02Z,2021-08-19T20:40:29Z,CLOSED,False,0,0,0,https://github.com/mithrandir42,Fix order of remapped nvme devices.,1,[],https://github.com/endlessm/linux/pull/589,https://github.com/eos-shell-build,2,https://github.com/endlessm/linux/pull/589#issuecomment-894875990,"Not using this kernel, but since the origin of the nvme remapping is here, I want to give back the fix for the nvme drive order problem I have encountered. Works fine for me with zen-sources: zen-kernel/zen-kernel#227
At least with my hardware the nvme devices are being ordered the opposite way in rst mode than in ahci mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in rst mode. For non initrd users this means grub cannot find the root partition when switching between ahci and rst in bios. Assuming this is a general issue and not just with my hardware (Dell Precision 7550). If there are complaints from other users (with other devices) about the ordering being wrong for them, this should be easy to revert.",I don't recognize the submitter as a member of @endlessm. Can somebody in @endlessm verify the patch? See https://phabricator.endlessm.com/w/software/build/ci-integration/#pull-requests for more details.,True,{}
endlessm/linux,https://github.com/endlessm/linux,589,2021-08-08T23:51:54Z,2021-08-19T20:15:02Z,2021-08-19T20:40:29Z,CLOSED,False,0,0,0,https://github.com/mithrandir42,Fix order of remapped nvme devices.,1,[],https://github.com/endlessm/linux/pull/589,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/589#issuecomment-895503162,"Not using this kernel, but since the origin of the nvme remapping is here, I want to give back the fix for the nvme drive order problem I have encountered. Works fine for me with zen-sources: zen-kernel/zen-kernel#227
At least with my hardware the nvme devices are being ordered the opposite way in rst mode than in ahci mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in rst mode. For non initrd users this means grub cannot find the root partition when switching between ahci and rst in bios. Assuming this is a general issue and not just with my hardware (Dell Precision 7550). If there are complaints from other users (with other devices) about the ordering being wrong for them, this should be easy to revert.","test this please
(for the CI bot)",True,{}
endlessm/linux,https://github.com/endlessm/linux,589,2021-08-08T23:51:54Z,2021-08-19T20:15:02Z,2021-08-19T20:40:29Z,CLOSED,False,0,0,0,https://github.com/mithrandir42,Fix order of remapped nvme devices.,1,[],https://github.com/endlessm/linux/pull/589,https://github.com/jprvita,4,https://github.com/endlessm/linux/pull/589#issuecomment-895626068,"Not using this kernel, but since the origin of the nvme remapping is here, I want to give back the fix for the nvme drive order problem I have encountered. Works fine for me with zen-sources: zen-kernel/zen-kernel#227
At least with my hardware the nvme devices are being ordered the opposite way in rst mode than in ahci mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in rst mode. For non initrd users this means grub cannot find the root partition when switching between ahci and rst in bios. Assuming this is a general issue and not just with my hardware (Dell Precision 7550). If there are complaints from other users (with other devices) about the ordering being wrong for them, this should be easy to revert.","Thanks for your bug report and contribution!
While the changes here are very simple, I don't have access the NVMe drives myself, or am super familiar with this kind of hardware, to be confident that changing the order won't have other negative side-effects. @dsd, who is the author of this code, is currently on vacation, so this will need to wait for him to be back in about 2 weeks before it gets properly reviewed and merged.
In the meantime, could you please adjust the commit message and break the lines on or before column 72?",True,{}
endlessm/linux,https://github.com/endlessm/linux,589,2021-08-08T23:51:54Z,2021-08-19T20:15:02Z,2021-08-19T20:40:29Z,CLOSED,False,0,0,0,https://github.com/mithrandir42,Fix order of remapped nvme devices.,1,[],https://github.com/endlessm/linux/pull/589,https://github.com/mithrandir42,5,https://github.com/endlessm/linux/pull/589#issuecomment-896362905,"Not using this kernel, but since the origin of the nvme remapping is here, I want to give back the fix for the nvme drive order problem I have encountered. Works fine for me with zen-sources: zen-kernel/zen-kernel#227
At least with my hardware the nvme devices are being ordered the opposite way in rst mode than in ahci mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in rst mode. For non initrd users this means grub cannot find the root partition when switching between ahci and rst in bios. Assuming this is a general issue and not just with my hardware (Dell Precision 7550). If there are complaints from other users (with other devices) about the ordering being wrong for them, this should be easy to revert.","Well, I don't get it. What do you want me to adjust the commit message to? Which line break do you mean? I don't see a column 72 in the line of the PR.",True,{}
endlessm/linux,https://github.com/endlessm/linux,589,2021-08-08T23:51:54Z,2021-08-19T20:15:02Z,2021-08-19T20:40:29Z,CLOSED,False,0,0,0,https://github.com/mithrandir42,Fix order of remapped nvme devices.,1,[],https://github.com/endlessm/linux/pull/589,https://github.com/jprvita,6,https://github.com/endlessm/linux/pull/589#issuecomment-897414095,"Not using this kernel, but since the origin of the nvme remapping is here, I want to give back the fix for the nvme drive order problem I have encountered. Works fine for me with zen-sources: zen-kernel/zen-kernel#227
At least with my hardware the nvme devices are being ordered the opposite way in rst mode than in ahci mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in rst mode. For non initrd users this means grub cannot find the root partition when switching between ahci and rst in bios. Assuming this is a general issue and not just with my hardware (Dell Precision 7550). If there are complaints from other users (with other devices) about the ordering being wrong for them, this should be easy to revert.","Well, I don't get it. What do you want me to adjust the commit message to? Which line break do you mean? I don't see a column 72 in the line of the PR.

I mean on the commit message, not the PR. If you look at the history with git log on a terminal you'll see that the commit message on your commit is much wider than all other commits.",True,{}
endlessm/linux,https://github.com/endlessm/linux,589,2021-08-08T23:51:54Z,2021-08-19T20:15:02Z,2021-08-19T20:40:29Z,CLOSED,False,0,0,0,https://github.com/mithrandir42,Fix order of remapped nvme devices.,1,[],https://github.com/endlessm/linux/pull/589,https://github.com/mithrandir42,7,https://github.com/endlessm/linux/pull/589#issuecomment-902230025,"Not using this kernel, but since the origin of the nvme remapping is here, I want to give back the fix for the nvme drive order problem I have encountered. Works fine for me with zen-sources: zen-kernel/zen-kernel#227
At least with my hardware the nvme devices are being ordered the opposite way in rst mode than in ahci mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in rst mode. For non initrd users this means grub cannot find the root partition when switching between ahci and rst in bios. Assuming this is a general issue and not just with my hardware (Dell Precision 7550). If there are complaints from other users (with other devices) about the ordering being wrong for them, this should be easy to revert.",Changing the commit message somehow broke the history and closed the PR. Created a new one: #590,True,{}
endlessm/linux,https://github.com/endlessm/linux,590,2021-08-19T20:38:48Z,,2022-04-12T21:36:12Z,OPEN,False,401071,18774,3876,https://github.com/mithrandir42,Fix order of remapped nvme devices.,3950,[],https://github.com/endlessm/linux/pull/590,https://github.com/mithrandir42,1,https://github.com/endlessm/linux/pull/590,"Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.","Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.",True,{}
endlessm/linux,https://github.com/endlessm/linux,590,2021-08-19T20:38:48Z,,2022-04-12T21:36:12Z,OPEN,False,401071,18774,3876,https://github.com/mithrandir42,Fix order of remapped nvme devices.,3950,[],https://github.com/endlessm/linux/pull/590,https://github.com/eos-shell-build,2,https://github.com/endlessm/linux/pull/590#issuecomment-902229005,"Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.",I don't recognize the submitter as a member of @endlessm. Can somebody in @endlessm verify the patch? See https://phabricator.endlessm.com/w/software/build/ci-integration/#pull-requests for more details.,True,{}
endlessm/linux,https://github.com/endlessm/linux,590,2021-08-19T20:38:48Z,,2022-04-12T21:36:12Z,OPEN,False,401071,18774,3876,https://github.com/mithrandir42,Fix order of remapped nvme devices.,3950,[],https://github.com/endlessm/linux/pull/590,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/590#issuecomment-902239176,"Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.",test this please,True,{}
endlessm/linux,https://github.com/endlessm/linux,590,2021-08-19T20:38:48Z,,2022-04-12T21:36:12Z,OPEN,False,401071,18774,3876,https://github.com/mithrandir42,Fix order of remapped nvme devices.,3950,[],https://github.com/endlessm/linux/pull/590,https://github.com/jprvita,4,https://github.com/endlessm/linux/pull/590#issuecomment-902243800,"Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.","@mithrandir42 The commit message text looks good now, thanks!
I just realized the author is a @users.noreply.github.com address -- can you share an email address to be used as the commit author and signed-off-by? Then I can manually update it on the commit message before merging (or, if you prefer to update the commit yourself with a proper author email and signed-off, that works too). Sorry I have missed this on the previous review.
In any case, we still need to wait @dsd for a proper code review + approval, but then I can do the manual merge work.",True,{}
endlessm/linux,https://github.com/endlessm/linux,590,2021-08-19T20:38:48Z,,2022-04-12T21:36:12Z,OPEN,False,401071,18774,3876,https://github.com/mithrandir42,Fix order of remapped nvme devices.,3950,[],https://github.com/endlessm/linux/pull/590,https://github.com/mithrandir42,5,https://github.com/endlessm/linux/pull/590#issuecomment-902280953,"Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.","Sure we have to wait. Just wanted to prepare the PR, well and broke it... Seems to happen when one wants so save time by not cloning the full history...
Did the signed-off-by entry myself for learning. Hoping I did it right. Didn't expect this to get that complicated ;)",True,{}
endlessm/linux,https://github.com/endlessm/linux,590,2021-08-19T20:38:48Z,,2022-04-12T21:36:12Z,OPEN,False,401071,18774,3876,https://github.com/mithrandir42,Fix order of remapped nvme devices.,3950,[],https://github.com/endlessm/linux/pull/590,https://github.com/jprvita,6,https://github.com/endlessm/linux/pull/590#issuecomment-902824836,"Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.",@mithrandir42 Thanks! The commit authorship and signed-off-by look good now!,True,{}
endlessm/linux,https://github.com/endlessm/linux,590,2021-08-19T20:38:48Z,,2022-04-12T21:36:12Z,OPEN,False,401071,18774,3876,https://github.com/mithrandir42,Fix order of remapped nvme devices.,3950,[],https://github.com/endlessm/linux/pull/590,https://github.com/dsd,7,https://github.com/endlessm/linux/pull/590#issuecomment-903359899,"Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.","The kernel doesn't generally make any promises around persistent device node naming. If the names are already stable in some way, I believe that is more viewed as luck, rather than something you can rely on. And e.g. if you were using USB disks instead I expect you would be considerably less lucky. This situation really calls for an initramfs.
Anyway, if there is some indication in the spec that the disks are somehow listed in reverse then I would accept this anyway - would you mind checking that? The info I used when working on this is in
https://www.intel.com/content/dam/www/public/us/en/documents/datasheets/300-series-chipset-pch-datasheet-vol-1.pdf
https://www.intel.com/content/dam/www/public/us/en/documents/datasheets/300-series-chipset-pch-datasheet-vol-2.pdf
Otherwise, I am not really sure if this patch is correct, or if it is just working around an oddity in your specific BIOS that other people may not be experiencing.",True,{}
endlessm/linux,https://github.com/endlessm/linux,590,2021-08-19T20:38:48Z,,2022-04-12T21:36:12Z,OPEN,False,401071,18774,3876,https://github.com/mithrandir42,Fix order of remapped nvme devices.,3950,[],https://github.com/endlessm/linux/pull/590,https://github.com/mithrandir42,8,https://github.com/endlessm/linux/pull/590#issuecomment-903782147,"Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.","Answering without having fully viewed the spec, yet. As I also have written in the first pull request, it is possible, that the BIOS does this weird reordering. Since I do not have access to more machines with nvme drives, I cannot try this out. In my opinion it is at least inconvenient if the order in rst mode differs from the order in ahci mode. Well, there there are no guarantees on the device nodes order. But I think on one machine these should be as stable as possible. Grub for example cannot use uuids for the root drive when not using initrd. This means a machine without initrd might get unbootable when switching between rst and ahci. So basically, if we cannot find a reason for the reordering in the remapping code or in the spec, we have to find out if this is an issue for all (or the majority of) devices or just mine. Do you have access to one or more devices with multiple nvme disks and the option to switch between rst and ahci mode in BIOS?
Anyways, I will have a further look at the spec and the affected kernel code and see if I can find the reason.",True,{}
endlessm/linux,https://github.com/endlessm/linux,590,2021-08-19T20:38:48Z,,2022-04-12T21:36:12Z,OPEN,False,401071,18774,3876,https://github.com/mithrandir42,Fix order of remapped nvme devices.,3950,[],https://github.com/endlessm/linux/pull/590,https://github.com/dsd,9,https://github.com/endlessm/linux/pull/590#issuecomment-904204825,"Nvme devices are being ordered the opposite way in rst mode than in ahci
mode. I.e., with three drives, nvme0n1(in ahci mode) becomes nvme2n1 in
rst mode. For non initrd users this means grub cannot find the root
partition when switching between ahci and rst in bios.","I don't quite follow your points around grub  - how is a kernel patch going to help any limitations in grub? And grub is capable of searching for partitions by UUID, partition type, label, etc, and can even be restricted to search only on the disk that the BIOS booted from. That's how we solve this class of problem in Endless OS meaning that the boot process is completely unaffected by any change in device node numbering or naming.",True,{}
endlessm/linux,https://github.com/endlessm/linux,591,2021-11-16T01:29:20Z,2021-11-17T06:11:42Z,2022-01-06T19:39:56Z,MERGED,True,2,2,2,https://github.com/jprvita,[Endless] config: Disable CONFIG_ACPI_BGRT,1,[],https://github.com/endlessm/linux/pull/591,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/591,"When the kernel is loaded it re-draws the BGRT that has been initially
drawn by the firmware, which works fine when the bootloader menu has not
been shown. However, if the boot menu has been shown this causes a
strange graphics sequence:
OEM logo -> Bootloader menu -> OEM logo -> Boot splash
Disabling CONFIG_ACPI_BGRT prevents the kernel from parsing the BGRT
table and prevents efifb from drawing it on screen, and since we enable
CONFIG_FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER the kernel will not touch
the framebuffer, leaving whatever is currently present on screen until
Plymouth takes over and draws the boot splash. When the bootloader menu
is shown, GRUB clears the screen after an entry is selected, so the
graphics sequence will be:
OEM logo -> Bootloader menu -> Black screen -> Boot splash
When the bootloader menu is not shown this change should not have any
impact, as the framebeuffer should still have the contents drawn by the
firmware, so both with or without this config flag enabled the graphics
sequence will be:
OEM logo -> Boot splash
https://phabricator.endlessm.com/T32725","When the kernel is loaded it re-draws the BGRT that has been initially
drawn by the firmware, which works fine when the bootloader menu has not
been shown. However, if the boot menu has been shown this causes a
strange graphics sequence:
OEM logo -> Bootloader menu -> OEM logo -> Boot splash
Disabling CONFIG_ACPI_BGRT prevents the kernel from parsing the BGRT
table and prevents efifb from drawing it on screen, and since we enable
CONFIG_FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER the kernel will not touch
the framebuffer, leaving whatever is currently present on screen until
Plymouth takes over and draws the boot splash. When the bootloader menu
is shown, GRUB clears the screen after an entry is selected, so the
graphics sequence will be:
OEM logo -> Bootloader menu -> Black screen -> Boot splash
When the bootloader menu is not shown this change should not have any
impact, as the framebeuffer should still have the contents drawn by the
firmware, so both with or without this config flag enabled the graphics
sequence will be:
OEM logo -> Boot splash
https://phabricator.endlessm.com/T32725",True,{}
endlessm/linux,https://github.com/endlessm/linux,592,2021-12-03T03:33:54Z,2021-12-03T22:19:49Z,2021-12-03T22:19:52Z,MERGED,True,15,1,1,https://github.com/starnight,rtw88: Enable RTL8821CE's type 4,2,[],https://github.com/endlessm/linux/pull/592,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/592,"Enable RTL8821CE's type 4 chip.
https://phabricator.endlessm.com/T31296","Enable RTL8821CE's type 4 chip.
https://phabricator.endlessm.com/T31296",True,{}
endlessm/linux,https://github.com/endlessm/linux,593,2021-12-10T09:16:53Z,2021-12-10T10:59:30Z,2021-12-10T10:59:33Z,MERGED,True,14,21,4,https://github.com/starnight,[Endless] rtw88: 8821c: disable the ASPM of RTL8821CE,2,[],https://github.com/endlessm/linux/pull/593,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/593,"More and more laptops become frozen, due to the equipped RTL8821CE.
This patch follows the idea mentioned in commits 956c6d4 (""rtw88:
add quirks to disable pci capabilities"") and 1d4dcaf (""rtw88: add
quirk to disable pci caps on HP Pavilion 14-ce0xxx""), but disables its
PCI ASPM capability of RTL8821CE directly, instead of checking DMI.
Buglink:https://bugzilla.kernel.org/show_bug.cgi?id=215239
Fixes: 1d4dcaf (""rtw88: add quirk to disable pci caps on HP Pavilion 14-ce0xxx"")
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
https://phabricator.endlessm.com/T31296","More and more laptops become frozen, due to the equipped RTL8821CE.
This patch follows the idea mentioned in commits 956c6d4 (""rtw88:
add quirks to disable pci capabilities"") and 1d4dcaf (""rtw88: add
quirk to disable pci caps on HP Pavilion 14-ce0xxx""), but disables its
PCI ASPM capability of RTL8821CE directly, instead of checking DMI.
Buglink:https://bugzilla.kernel.org/show_bug.cgi?id=215239
Fixes: 1d4dcaf (""rtw88: add quirk to disable pci caps on HP Pavilion 14-ce0xxx"")
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
https://phabricator.endlessm.com/T31296",True,{}
endlessm/linux,https://github.com/endlessm/linux,593,2021-12-10T09:16:53Z,2021-12-10T10:59:30Z,2021-12-10T10:59:33Z,MERGED,True,14,21,4,https://github.com/starnight,[Endless] rtw88: 8821c: disable the ASPM of RTL8821CE,2,[],https://github.com/endlessm/linux/pull/593,https://github.com/wjt,2,https://github.com/endlessm/linux/pull/593#issuecomment-990784751,"More and more laptops become frozen, due to the equipped RTL8821CE.
This patch follows the idea mentioned in commits 956c6d4 (""rtw88:
add quirks to disable pci capabilities"") and 1d4dcaf (""rtw88: add
quirk to disable pci caps on HP Pavilion 14-ce0xxx""), but disables its
PCI ASPM capability of RTL8821CE directly, instead of checking DMI.
Buglink:https://bugzilla.kernel.org/show_bug.cgi?id=215239
Fixes: 1d4dcaf (""rtw88: add quirk to disable pci caps on HP Pavilion 14-ce0xxx"")
Signed-off-by: Jian-Hong Pan jhp@endlessos.org
https://phabricator.endlessm.com/T31296",@dsd are you able to help review this change?,True,{}
endlessm/linux,https://github.com/endlessm/linux,594,2022-01-12T19:13:10Z,2022-01-13T17:29:54Z,2022-01-13T17:29:56Z,MERGED,True,3,1,1,https://github.com/jprvita,[Endless] lsm: endlesspayg: Protect all threads of the LSM owner,1,[],https://github.com/endlessm/linux/pull/594,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/594,https://phabricator.endlessm.com/T32959,https://phabricator.endlessm.com/T32959,True,{}
endlessm/linux,https://github.com/endlessm/linux,595,2022-01-18T23:59:29Z,2022-02-14T14:15:05Z,2022-02-14T14:15:07Z,MERGED,True,4,0,1,https://github.com/jprvita,[Endless] lsm: endlesspayg: Allow the LSM owner to receive SIGTERM,1,[],https://github.com/endlessm/linux/pull/595,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/595,"We want to allow paygd to receive SIGTERM so it can properly cleanup
during shutdown.
https://phabricator.endlessm.com/T33088
https://phabricator.endlessm.com/T32815","We want to allow paygd to receive SIGTERM so it can properly cleanup
during shutdown.
https://phabricator.endlessm.com/T33088
https://phabricator.endlessm.com/T32815",True,{}
endlessm/linux,https://github.com/endlessm/linux,595,2022-01-18T23:59:29Z,2022-02-14T14:15:05Z,2022-02-14T14:15:07Z,MERGED,True,4,0,1,https://github.com/jprvita,[Endless] lsm: endlesspayg: Allow the LSM owner to receive SIGTERM,1,[],https://github.com/endlessm/linux/pull/595,https://github.com/jprvita,2,https://github.com/endlessm/linux/pull/595#issuecomment-1016506209,"We want to allow paygd to receive SIGTERM so it can properly cleanup
during shutdown.
https://phabricator.endlessm.com/T33088
https://phabricator.endlessm.com/T32815","I don't understand the ""LSM owner"" terminology here but this change seems reasonable.

The LSM owner is the process that first opens the LSM pid file to activate it and gain its protections and privileges. It can only be done once per boot.",True,{}
endlessm/linux,https://github.com/endlessm/linux,595,2022-01-18T23:59:29Z,2022-02-14T14:15:05Z,2022-02-14T14:15:07Z,MERGED,True,4,0,1,https://github.com/jprvita,[Endless] lsm: endlesspayg: Allow the LSM owner to receive SIGTERM,1,[],https://github.com/endlessm/linux/pull/595,https://github.com/jprvita,3,https://github.com/endlessm/linux/pull/595#issuecomment-1016970052,"We want to allow paygd to receive SIGTERM so it can properly cleanup
during shutdown.
https://phabricator.endlessm.com/T33088
https://phabricator.endlessm.com/T32815",Changed to draft as this is blocked on endlessm/eos-payg#92.,True,{}
endlessm/linux,https://github.com/endlessm/linux,596,2022-02-25T06:48:14Z,2022-02-25T07:08:09Z,2022-02-25T07:08:11Z,MERGED,True,1,1,1,https://github.com/starnight,"Revert ""[DROP-ME] packaging: Downgrade dwarves dependent version to >= 1.20""",1,[],https://github.com/endlessm/linux/pull/596,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/596,"This reverts commit 9741012.
Since libbpf 0.5.0-1bpo11+1 and dwarves 1.22-4bpo11+1 have built in
eos:master:core, they can provide the dependent packages for normal
linux 5.15 package now. So, drop the workaround.
https://phabricator.endlessm.com/T33162#929649","This reverts commit 9741012.
Since libbpf 0.5.0-1bpo11+1 and dwarves 1.22-4bpo11+1 have built in
eos:master:core, they can provide the dependent packages for normal
linux 5.15 package now. So, drop the workaround.
https://phabricator.endlessm.com/T33162#929649",True,{}
endlessm/linux,https://github.com/endlessm/linux,597,2022-03-10T00:15:48Z,2022-03-10T02:41:35Z,2022-03-10T02:42:02Z,MERGED,True,2,0,1,https://github.com/jprvita,"lib/iov_iter: initialize ""flags"" in new pipe_buffer",1,[],https://github.com/endlessm/linux/pull/597,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/597,"The functions copy_page_to_iter_pipe() and push_pipe() can both
allocate a new pipe_buffer, but the ""flags"" member initializer is
missing.
Fixes: 241699c (""new iov_iter flavour: pipe-backed"")
To: Alexander Viro viro@zeniv.linux.org.uk
To: linux-fsdevel@vger.kernel.org
To: linux-kernel@vger.kernel.org
Cc: stable@vger.kernel.org
Signed-off-by: Max Kellermann max.kellermann@ionos.com
Signed-off-by: Al Viro viro@zeniv.linux.org.uk
https://phabricator.endlessm.com/T33272","The functions copy_page_to_iter_pipe() and push_pipe() can both
allocate a new pipe_buffer, but the ""flags"" member initializer is
missing.
Fixes: 241699c (""new iov_iter flavour: pipe-backed"")
To: Alexander Viro viro@zeniv.linux.org.uk
To: linux-fsdevel@vger.kernel.org
To: linux-kernel@vger.kernel.org
Cc: stable@vger.kernel.org
Signed-off-by: Max Kellermann max.kellermann@ionos.com
Signed-off-by: Al Viro viro@zeniv.linux.org.uk
https://phabricator.endlessm.com/T33272",True,{}
endlessm/linux,https://github.com/endlessm/linux,598,2022-03-10T00:15:50Z,2022-03-10T02:41:49Z,2022-03-10T02:41:54Z,MERGED,True,2,0,1,https://github.com/jprvita,"lib/iov_iter: initialize ""flags"" in new pipe_buffer",1,[],https://github.com/endlessm/linux/pull/598,https://github.com/jprvita,1,https://github.com/endlessm/linux/pull/598,"The functions copy_page_to_iter_pipe() and push_pipe() can both
allocate a new pipe_buffer, but the ""flags"" member initializer is
missing.
Fixes: 241699c (""new iov_iter flavour: pipe-backed"")
To: Alexander Viro viro@zeniv.linux.org.uk
To: linux-fsdevel@vger.kernel.org
To: linux-kernel@vger.kernel.org
Cc: stable@vger.kernel.org
Signed-off-by: Max Kellermann max.kellermann@ionos.com
Signed-off-by: Al Viro viro@zeniv.linux.org.uk
https://phabricator.endlessm.com/T33272","The functions copy_page_to_iter_pipe() and push_pipe() can both
allocate a new pipe_buffer, but the ""flags"" member initializer is
missing.
Fixes: 241699c (""new iov_iter flavour: pipe-backed"")
To: Alexander Viro viro@zeniv.linux.org.uk
To: linux-fsdevel@vger.kernel.org
To: linux-kernel@vger.kernel.org
Cc: stable@vger.kernel.org
Signed-off-by: Max Kellermann max.kellermann@ionos.com
Signed-off-by: Al Viro viro@zeniv.linux.org.uk
https://phabricator.endlessm.com/T33272",True,{}
endlessm/linux,https://github.com/endlessm/linux,599,2022-03-14T07:04:52Z,2022-03-14T22:17:06Z,2022-03-14T22:17:09Z,MERGED,True,15,0,1,https://github.com/starnight,drm/i915/opregion: check port number bounds for SWSCI display power state,1,[],https://github.com/endlessm/linux/pull/599,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/599,"commit ea958422291de248b9e2eaaeea36004e84b64043 upstream.
The mapping from enum port to whatever port numbering scheme is used by
the SWSCI Display Power State Notification is odd, and the memory of it
has faded. In any case, the parameter only has space for ports numbered
[0..4], and UBSAN reports bit shift beyond it when the platform has port
F or more.
Since the SWSCI functionality is supposed to be obsolete for new
platforms (i.e. ones that might have port F or more), just bail out
early if the mapped and mangled port number is beyond what the Display
Power State Notification can support.
Fixes: 9c4b0a6 (""drm/i915: add opregion function to notify bios of encoder enable/disable"")
Cc: stable@vger.kernel.org # v3.13+
Cc: Ville Syrjälä ville.syrjala@linux.intel.com
Cc: Lucas De Marchi lucas.demarchi@intel.com
Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/4800
Signed-off-by: Jani Nikula jani.nikula@intel.com
Reviewed-by: Ville Syrjälä ville.syrjala@linux.intel.com
Link: https://patchwork.freedesktop.org/patch/msgid/cc363f42d6b5a5932b6d218fefcc8bdfb15dbbe5.1644489329.git.jani.nikula@intel.com
(cherry picked from commit 24a644ebbfd3b13cda702f98907f9dd123e34bf9)
Signed-off-by: Tvrtko Ursulin tvrtko.ursulin@intel.com
Signed-off-by: Greg Kroah-Hartman gregkh@linuxfoundation.org
https://phabricator.endlessm.com/T33277","commit ea958422291de248b9e2eaaeea36004e84b64043 upstream.
The mapping from enum port to whatever port numbering scheme is used by
the SWSCI Display Power State Notification is odd, and the memory of it
has faded. In any case, the parameter only has space for ports numbered
[0..4], and UBSAN reports bit shift beyond it when the platform has port
F or more.
Since the SWSCI functionality is supposed to be obsolete for new
platforms (i.e. ones that might have port F or more), just bail out
early if the mapped and mangled port number is beyond what the Display
Power State Notification can support.
Fixes: 9c4b0a6 (""drm/i915: add opregion function to notify bios of encoder enable/disable"")
Cc: stable@vger.kernel.org # v3.13+
Cc: Ville Syrjälä ville.syrjala@linux.intel.com
Cc: Lucas De Marchi lucas.demarchi@intel.com
Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/4800
Signed-off-by: Jani Nikula jani.nikula@intel.com
Reviewed-by: Ville Syrjälä ville.syrjala@linux.intel.com
Link: https://patchwork.freedesktop.org/patch/msgid/cc363f42d6b5a5932b6d218fefcc8bdfb15dbbe5.1644489329.git.jani.nikula@intel.com
(cherry picked from commit 24a644ebbfd3b13cda702f98907f9dd123e34bf9)
Signed-off-by: Tvrtko Ursulin tvrtko.ursulin@intel.com
Signed-off-by: Greg Kroah-Hartman gregkh@linuxfoundation.org
https://phabricator.endlessm.com/T33277",True,{}
endlessm/linux,https://github.com/endlessm/linux,600,2022-03-15T03:14:58Z,2022-03-21T19:20:14Z,2022-03-21T19:20:24Z,MERGED,True,26,5,6,https://github.com/starnight,netfilter: nf_tables_offload: incorrect flow offload action array size,1,[],https://github.com/endlessm/linux/pull/600,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/600,"immediate verdict expression needs to allocate one slot in the flow offload
action array, however, immediate data expression does not need to do so.
fwd and dup expression need to allocate one slot, this is missing.
Add a new offload_action interface to report if this expression needs to
allocate one slot in the flow offload action array.
Fixes: be2861d (""netfilter: nft_{fwd,dup}_netdev: add offload support"")
Reported-and-tested-by: Nick Gregory Nick.Gregory@Sophos.com
Signed-off-by: Pablo Neira Ayuso pablo@netfilter.org
https://phabricator.endlessm.com/T33282","immediate verdict expression needs to allocate one slot in the flow offload
action array, however, immediate data expression does not need to do so.
fwd and dup expression need to allocate one slot, this is missing.
Add a new offload_action interface to report if this expression needs to
allocate one slot in the flow offload action array.
Fixes: be2861d (""netfilter: nft_{fwd,dup}_netdev: add offload support"")
Reported-and-tested-by: Nick Gregory Nick.Gregory@Sophos.com
Signed-off-by: Pablo Neira Ayuso pablo@netfilter.org
https://phabricator.endlessm.com/T33282",True,{}
endlessm/linux,https://github.com/endlessm/linux,601,2022-03-15T03:25:54Z,2022-03-21T19:20:19Z,2022-03-21T19:20:22Z,MERGED,True,26,5,6,https://github.com/starnight,netfilter: nf_tables_offload: incorrect flow offload action array size,1,[],https://github.com/endlessm/linux/pull/601,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/601,"commit b1a5983f56e371046dcf164f90bfaf704d2b89f6 upstream.
immediate verdict expression needs to allocate one slot in the flow offload
action array, however, immediate data expression does not need to do so.
fwd and dup expression need to allocate one slot, this is missing.
Add a new offload_action interface to report if this expression needs to
allocate one slot in the flow offload action array.
Fixes: be2861d (""netfilter: nft_{fwd,dup}_netdev: add offload support"")
Reported-and-tested-by: Nick Gregory Nick.Gregory@Sophos.com
Signed-off-by: Pablo Neira Ayuso pablo@netfilter.org
Signed-off-by: Greg Kroah-Hartman gregkh@linuxfoundation.org
https://phabricator.endlessm.com/T33282","commit b1a5983f56e371046dcf164f90bfaf704d2b89f6 upstream.
immediate verdict expression needs to allocate one slot in the flow offload
action array, however, immediate data expression does not need to do so.
fwd and dup expression need to allocate one slot, this is missing.
Add a new offload_action interface to report if this expression needs to
allocate one slot in the flow offload action array.
Fixes: be2861d (""netfilter: nft_{fwd,dup}_netdev: add offload support"")
Reported-and-tested-by: Nick Gregory Nick.Gregory@Sophos.com
Signed-off-by: Pablo Neira Ayuso pablo@netfilter.org
Signed-off-by: Greg Kroah-Hartman gregkh@linuxfoundation.org
https://phabricator.endlessm.com/T33282",True,{}
endlessm/linux,https://github.com/endlessm/linux,602,2022-03-18T09:22:17Z,2022-03-21T20:31:37Z,2022-03-21T20:31:40Z,MERGED,True,28,12,2,https://github.com/starnight,drm/vc4: hdmi: Prevent access to crtc->state outside of KMS,1,[],https://github.com/endlessm/linux/pull/602,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/602,"commit 633be8c3c0c5e0cf176ce904083a4728ae8e4025 upstream.
Accessing the crtc->state pointer from outside the modesetting context
is not allowed. We thus need to copy whatever we need from the KMS state
to our structure in order to access it.
However, in the vc4 HDMI driver we do use that pointer in the ALSA code
path, and potentially in the hotplug interrupt handler path.
These paths both need access to the CRTC adjusted mode in order for the
proper dividers to be set for ALSA, and the scrambler state to be
reinstated properly for hotplug.
Let's copy this mode into our private encoder structure and reference it
from there when needed. Since that part is shared between KMS and other
paths, we need to protect it using our mutex.
https://phabricator.endlessm.com/T33279
Link: https://lore.kernel.org/all/YWgteNaNeaS9uWDe@phenom.ffwll.local/
Link: https://lore.kernel.org/r/20211025141113.702757-7-maxime@cerno.tech
Fixes: bb7d785 (""drm/vc4: Add HDMI audio support"")
Acked-by: Daniel Vetter daniel.vetter@ffwll.ch
Signed-off-by: Maxime Ripard maxime@cerno.tech
[Jian-Hong Pan: Backport to v5.15]
Signed-off-by: Jian-Hong Pan jhp@endlessos.org","commit 633be8c3c0c5e0cf176ce904083a4728ae8e4025 upstream.
Accessing the crtc->state pointer from outside the modesetting context
is not allowed. We thus need to copy whatever we need from the KMS state
to our structure in order to access it.
However, in the vc4 HDMI driver we do use that pointer in the ALSA code
path, and potentially in the hotplug interrupt handler path.
These paths both need access to the CRTC adjusted mode in order for the
proper dividers to be set for ALSA, and the scrambler state to be
reinstated properly for hotplug.
Let's copy this mode into our private encoder structure and reference it
from there when needed. Since that part is shared between KMS and other
paths, we need to protect it using our mutex.
https://phabricator.endlessm.com/T33279
Link: https://lore.kernel.org/all/YWgteNaNeaS9uWDe@phenom.ffwll.local/
Link: https://lore.kernel.org/r/20211025141113.702757-7-maxime@cerno.tech
Fixes: bb7d785 (""drm/vc4: Add HDMI audio support"")
Acked-by: Daniel Vetter daniel.vetter@ffwll.ch
Signed-off-by: Maxime Ripard maxime@cerno.tech
[Jian-Hong Pan: Backport to v5.15]
Signed-off-by: Jian-Hong Pan jhp@endlessos.org",True,{}
endlessm/linux,https://github.com/endlessm/linux,603,2022-04-01T09:56:45Z,2022-04-01T20:39:17Z,2022-04-01T20:39:20Z,MERGED,True,14,14,3,https://github.com/starnight,Disable arm64 configs to reduce kernel image size,2,[],https://github.com/endlessm/linux/pull/603,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/603,https://phabricator.endlessm.com/T33254,https://phabricator.endlessm.com/T33254,True,{}
endlessm/linux,https://github.com/endlessm/linux,604,2022-04-06T08:26:57Z,2022-04-06T12:52:39Z,2022-04-06T12:52:42Z,MERGED,True,3,0,1,https://github.com/starnight,fixup! [Endless] x86_64 defconfig: add development options,1,[],https://github.com/endlessm/linux/pull/604,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/604,https://phabricator.endlessm.com/T33337,https://phabricator.endlessm.com/T33337,True,{}
endlessm/linux,https://github.com/endlessm/linux,605,2022-04-13T07:42:15Z,2022-04-13T16:48:37Z,2022-04-13T16:48:40Z,MERGED,True,6,6,3,https://github.com/starnight,config: Disable CONFIG_DEBUG_INFO_BTF on arm64 platforms,2,[],https://github.com/endlessm/linux/pull/605,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/605,"EOS does not use BPF related things. So, Disable CONFIG_DEBUG_INFO_BTF
on arm64 platforms to reduce kernel image size to fulfill U-Boot's
requirements on Raspberry Pi.
https://phabricator.endlessm.com/T33254","EOS does not use BPF related things. So, Disable CONFIG_DEBUG_INFO_BTF
on arm64 platforms to reduce kernel image size to fulfill U-Boot's
requirements on Raspberry Pi.
https://phabricator.endlessm.com/T33254",True,{}
endlessm/linux,https://github.com/endlessm/linux,606,2022-04-15T09:20:04Z,2022-04-18T20:51:56Z,2022-04-18T20:52:00Z,MERGED,True,491,71,5,https://github.com/starnight,Fix RPi 4B: UI hangs due to blocked kernel works,14,[],https://github.com/endlessm/linux/pull/606,https://github.com/starnight,1,https://github.com/endlessm/linux/pull/606,"EOS needs the whole patch series drm/vc4: Introduce locking and remove !KMS state access, instead of a single patch in it. Besides, apply the dependent commits to avoid conflicts.
Also, disable the staging driver by unset CONFIG_BCM_VIDEOCORE to avoid conflicting to mainline's VC4 driver. It is used by Raspberry Pi OS, but not with mainline kernel.
https://phabricator.endlessm.com/T33336","EOS needs the whole patch series drm/vc4: Introduce locking and remove !KMS state access, instead of a single patch in it. Besides, apply the dependent commits to avoid conflicts.
Also, disable the staging driver by unset CONFIG_BCM_VIDEOCORE to avoid conflicting to mainline's VC4 driver. It is used by Raspberry Pi OS, but not with mainline kernel.
https://phabricator.endlessm.com/T33336",True,{}
