mruby/mruby,https://github.com/mruby/mruby,3132,2016-03-07T16:50:53Z,2016-03-16T07:28:35Z,2016-09-27T13:07:57Z,MERGED,True,69,0,1,https://github.com/pbosetti,Added example for cross-compiling on Intel Edison,1,[],https://github.com/mruby/mruby/pull/3132,https://github.com/pbosetti,1,https://github.com/mruby/mruby/pull/3132,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3132,2016-03-07T16:50:53Z,2016-03-16T07:28:35Z,2016-09-27T13:07:57Z,MERGED,True,69,0,1,https://github.com/pbosetti,Added example for cross-compiling on Intel Edison,1,[],https://github.com/mruby/mruby/pull/3132,https://github.com/zzak,2,https://github.com/mruby/mruby/pull/3132#issuecomment-249859351,,@pbosetti How about wrapping this into a toolchain?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3135,2016-03-13T08:16:16Z,2016-03-14T00:35:53Z,2016-03-14T00:35:53Z,MERGED,True,3,0,1,https://github.com/wanabe,Reduce compiler include_paths,1,[],https://github.com/mruby/mruby/pull/3135,https://github.com/wanabe,1,https://github.com/mruby/mruby/pull/3135,"When I tried to build mruby-gtk3, sometimes faild by inflation of include_paths. It contains many -I""/some/path/mruby-cfunc/include"".
I guess it should be a 'set', without duplication.","When I tried to build mruby-gtk3, sometimes faild by inflation of include_paths. It contains many -I""/some/path/mruby-cfunc/include"".
I guess it should be a 'set', without duplication.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3136,2016-03-15T12:00:01Z,2016-03-16T07:27:58Z,2016-03-16T07:27:59Z,MERGED,True,77,0,2,https://github.com/bggd,Add appveyor.yml,2,[],https://github.com/mruby/mruby/pull/3136,https://github.com/bggd,1,https://github.com/mruby/mruby/pull/3136,"AppVeyor is Windows CI (http://www.appveyor.com/).
It is very helpful for the development of mruby.","AppVeyor is Windows CI (http://www.appveyor.com/).
It is very helpful for the development of mruby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3139,2016-03-22T11:00:55Z,2016-03-22T15:22:26Z,2016-12-18T03:05:36Z,MERGED,True,26,3,2,https://github.com/cremno,deprecate and fix VS2010/2012 build,3,[],https://github.com/mruby/mruby/pull/3139,https://github.com/cremno,1,https://github.com/mruby/mruby/pull/3139,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3139,2016-03-22T11:00:55Z,2016-03-22T15:22:26Z,2016-12-18T03:05:36Z,MERGED,True,26,3,2,https://github.com/cremno,deprecate and fix VS2010/2012 build,3,[],https://github.com/mruby/mruby/pull/3139,https://github.com/jmhmccr,2,https://github.com/mruby/mruby/pull/3139#issuecomment-267800566,,Should this be in 1.3 notes? #3140,True,{}
mruby/mruby,https://github.com/mruby/mruby,3142,2016-03-24T15:27:36Z,2016-03-25T04:41:35Z,2016-03-26T16:20:56Z,MERGED,True,1,0,1,https://github.com/kou,Add missing regs update,1,[],https://github.com/mruby/mruby/pull/3142,https://github.com/kou,1,https://github.com/mruby/mruby/pull/3142,"mrb_vm_define_class() may realloc() mrb->c->stack because it calls
mrb_funcall() for inherited hook. If mrb->c->stack is realloc()-ed, regs
refers orphan address.","mrb_vm_define_class() may realloc() mrb->c->stack because it calls
mrb_funcall() for inherited hook. If mrb->c->stack is realloc()-ed, regs
refers orphan address.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3142,2016-03-24T15:27:36Z,2016-03-25T04:41:35Z,2016-03-26T16:20:56Z,MERGED,True,1,0,1,https://github.com/kou,Add missing regs update,1,[],https://github.com/mruby/mruby/pull/3142,https://github.com/kou,2,https://github.com/mruby/mruby/pull/3142#issuecomment-200887281,"mrb_vm_define_class() may realloc() mrb->c->stack because it calls
mrb_funcall() for inherited hook. If mrb->c->stack is realloc()-ed, regs
refers orphan address.","Maybe, there are more locations that need update regs in mrb_vm_exec()...",True,{}
mruby/mruby,https://github.com/mruby/mruby,3142,2016-03-24T15:27:36Z,2016-03-25T04:41:35Z,2016-03-26T16:20:56Z,MERGED,True,1,0,1,https://github.com/kou,Add missing regs update,1,[],https://github.com/mruby/mruby/pull/3142,https://github.com/kou,3,https://github.com/mruby/mruby/pull/3142#issuecomment-201121123,"mrb_vm_define_class() may realloc() mrb->c->stack because it calls
mrb_funcall() for inherited hook. If mrb->c->stack is realloc()-ed, regs
refers orphan address.","This is caused when realloc() returns different address.
We can reproduce with the patch:
diff --git a/src/vm.c b/src/vm.c
index e65b033..fff7e3f 100644
--- a/src/vm.c
+++ b/src/vm.c
@@ -147,6 +147,7 @@ stack_extend_alloc(mrb_state *mrb, int room, int keep)
   else
     size += room;
 #endif
+  size *= 8;

   mrb->c->stbase = (mrb_value *)mrb_realloc(mrb, mrb->c->stbase, sizeof(mrb_value) * size);
   mrb->c->stack = mrb->c->stbase + off;
and the following code generator:
class_name = ""A""
128.times do |i|
  puts ""class #{class_name}""
  puts ""  include Enumerable"" if i == 122
  class_name.succ!
end

128.times do
  puts ""end""
end
% ruby /tmp/b.rb > /tmp/a.rb
% bin/mruby /tmp/a.rb
trace:
    [0] /tmp/a.rb:124
    [1] /tmp/a.rb:123
    [2] /tmp/a.rb:122
    [3] /tmp/a.rb:121
    [4] /tmp/a.rb:120
    [5] /tmp/a.rb:119
    [6] /tmp/a.rb:118
    [7] /tmp/a.rb:117
    [8] /tmp/a.rb:116
    [9] /tmp/a.rb:115
    [10] /tmp/a.rb:114
    [11] /tmp/a.rb:113
    [12] /tmp/a.rb:112
    [13] /tmp/a.rb:111
    [14] /tmp/a.rb:110
    [15] /tmp/a.rb:109
    [16] /tmp/a.rb:108
    [17] /tmp/a.rb:107
    [18] /tmp/a.rb:106
    [19] /tmp/a.rb:105
    [20] /tmp/a.rb:104
    [21] /tmp/a.rb:103
    [22] /tmp/a.rb:102
    [23] /tmp/a.rb:101
    [24] /tmp/a.rb:100
    [25] /tmp/a.rb:99
    [26] /tmp/a.rb:98
    [27] /tmp/a.rb:97
    [28] /tmp/a.rb:96
    [29] /tmp/a.rb:95
    [30] /tmp/a.rb:94
    [31] /tmp/a.rb:93
    [32] /tmp/a.rb:92
    [33] /tmp/a.rb:91
    [34] /tmp/a.rb:90
    [35] /tmp/a.rb:89
    [36] /tmp/a.rb:88
    [37] /tmp/a.rb:87
    [38] /tmp/a.rb:86
    [39] /tmp/a.rb:85
    [40] /tmp/a.rb:84
    [41] /tmp/a.rb:83
    [42] /tmp/a.rb:82
    [43] /tmp/a.rb:81
    [44] /tmp/a.rb:80
    [45] /tmp/a.rb:79
    [46] /tmp/a.rb:78
    [47] /tmp/a.rb:77
    [48] /tmp/a.rb:76
    [49] /tmp/a.rb:75
    [50] /tmp/a.rb:74
    [51] /tmp/a.rb:73
    [52] /tmp/a.rb:72
    [53] /tmp/a.rb:71
    [54] /tmp/a.rb:70
    [55] /tmp/a.rb:69
    [56] /tmp/a.rb:68
    [57] /tmp/a.rb:67
    [58] /tmp/a.rb:66
    [59] /tmp/a.rb:65
    [60] /tmp/a.rb:64
    [61] /tmp/a.rb:63
    [62] /tmp/a.rb:62
    [63] /tmp/a.rb:61
    [64] /tmp/a.rb:60
    [65] /tmp/a.rb:59
    [66] /tmp/a.rb:58
    [67] /tmp/a.rb:57
    [68] /tmp/a.rb:56
    [69] /tmp/a.rb:55
    [70] /tmp/a.rb:54
    [71] /tmp/a.rb:53
    [72] /tmp/a.rb:52
    [73] /tmp/a.rb:51
    [74] /tmp/a.rb:50
    [75] /tmp/a.rb:49
    [76] /tmp/a.rb:48
    [77] /tmp/a.rb:47
    [78] /tmp/a.rb:46
    [79] /tmp/a.rb:45
    [80] /tmp/a.rb:44
    [81] /tmp/a.rb:43
    [82] /tmp/a.rb:42
    [83] /tmp/a.rb:41
    [84] /tmp/a.rb:40
    [85] /tmp/a.rb:39
    [86] /tmp/a.rb:38
    [87] /tmp/a.rb:37
    [88] /tmp/a.rb:36
    [89] /tmp/a.rb:35
    [90] /tmp/a.rb:34
    [91] /tmp/a.rb:33
    [92] /tmp/a.rb:32
    [93] /tmp/a.rb:31
    [94] /tmp/a.rb:30
    [95] /tmp/a.rb:29
    [96] /tmp/a.rb:28
    [97] /tmp/a.rb:27
    [98] /tmp/a.rb:26
    [99] /tmp/a.rb:25
    [100] /tmp/a.rb:24
    [101] /tmp/a.rb:23
    [102] /tmp/a.rb:22
    [103] /tmp/a.rb:21
    [104] /tmp/a.rb:20
    [105] /tmp/a.rb:19
    [106] /tmp/a.rb:18
    [107] /tmp/a.rb:17
    [108] /tmp/a.rb:16
    [109] /tmp/a.rb:15
    [110] /tmp/a.rb:14
    [111] /tmp/a.rb:13
    [112] /tmp/a.rb:12
    [113] /tmp/a.rb:11
    [114] /tmp/a.rb:10
    [115] /tmp/a.rb:9
    [116] /tmp/a.rb:8
    [117] /tmp/a.rb:7
    [118] /tmp/a.rb:6
    [119] /tmp/a.rb:5
    [120] /tmp/a.rb:4
    [121] /tmp/a.rb:3
    [122] /tmp/a.rb:2
    [123] /tmp/a.rb:1
/tmp/a.rb:124: undefined method 'include' for #<NilClass:0x0> (NoMethodError)

class A
...
class DT
  include Enumerable # <- This raises the exception because self is broken (self == nil).
class  ...
end
...
end
...
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,3142,2016-03-24T15:27:36Z,2016-03-25T04:41:35Z,2016-03-26T16:20:56Z,MERGED,True,1,0,1,https://github.com/kou,Add missing regs update,1,[],https://github.com/mruby/mruby/pull/3142,https://github.com/kou,4,https://github.com/mruby/mruby/pull/3142#issuecomment-201138873,"mrb_vm_define_class() may realloc() mrb->c->stack because it calls
mrb_funcall() for inherited hook. If mrb->c->stack is realloc()-ed, regs
refers orphan address.","What do you think about we always reference mrb->c->stack instead of keeping mrb->c->stack snapshot as regs like the following? It'll resolve related problems (regs refers invalid address after stack_extend_alloc() is called):
diff --git a/src/vm.c b/src/vm.c
index b56ad49..fd2a938 100644
--- a/src/vm.c
+++ b/src/vm.c
@@ -766,7 +766,6 @@ mrb_vm_exec(mrb_state *mrb, struct RProc *proc, mrb_code *pc)
   mrb_irep *irep = proc->body.irep;
   mrb_value *pool = irep->pool;
   mrb_sym *syms = irep->syms;
-  mrb_value *regs = NULL;
   mrb_code i;
   int ai = mrb_gc_arena_save(mrb);
   struct mrb_jmpbuf *prev_jmp = mrb->jmp;
@@ -809,8 +808,8 @@ RETRY_TRY_BLOCK:
   mrb->jmp = &c_jmp;
   mrb->c->ci->proc = proc;
   mrb->c->ci->nregs = irep->nregs;
-  regs = mrb->c->stack;

+#define regs (mrb->c->stack)
   INIT_DISPATCH {
     CASE(OP_NOP) {
       /* do nothing */
@@ -916,7 +915,6 @@ RETRY_TRY_BLOCK:
       ERR_PC_SET(mrb, pc);
       val = mrb_vm_const_get(mrb, syms[GETARG_Bx(i)]);
       ERR_PC_CLR(mrb);
-      regs = mrb->c->stack;
       regs[GETARG_A(i)] = val;
       NEXT;
     }
@@ -935,7 +933,6 @@ RETRY_TRY_BLOCK:
       ERR_PC_SET(mrb, pc);
       val = mrb_const_get(mrb, regs[a], syms[GETARG_Bx(i)]);
       ERR_PC_CLR(mrb);
-      regs = mrb->c->stack;
       regs[a] = val;
       NEXT;
     }
@@ -1169,7 +1166,7 @@ RETRY_TRY_BLOCK:
           }
         }
         mrb->c->stack[0] = result;
-        regs = mrb->c->stack = ci->stackent;
+        mrb->c->stack = ci->stackent;
         pc = ci->pc;
         cipop(mrb);
         JUMP;
@@ -1189,7 +1186,6 @@ RETRY_TRY_BLOCK:
           ci->argc = n;
           stack_extend(mrb, irep->nregs,  n+2);
         }
-        regs = mrb->c->stack;
         pc = irep->iseq;
         JUMP;
       }
@@ -1226,7 +1222,7 @@ RETRY_TRY_BLOCK:
         if (mrb->exc) goto L_RAISE;
         /* pop stackpos */
         ci = mrb->c->ci;
-        regs = mrb->c->stack = ci->stackent;
+        mrb->c->stack = ci->stackent;
         regs[ci->acc] = recv;
         pc = ci->pc;
         cipop(mrb);
@@ -1252,7 +1248,6 @@ RETRY_TRY_BLOCK:
         else {
           stack_extend(mrb, irep->nregs, ci->argc+2);
         }
-        regs = mrb->c->stack;
         regs[0] = m->env->stack[0];
         pc = irep->iseq;
         JUMP;
@@ -1320,7 +1315,7 @@ RETRY_TRY_BLOCK:
         mrb_gc_arena_restore(mrb, ai);
         if (mrb->exc) goto L_RAISE;
         /* pop stackpos */
-        regs = mrb->c->stack = mrb->c->ci->stackent;
+        mrb->c->stack = mrb->c->ci->stackent;
         cipop(mrb);
         NEXT;
       }
@@ -1340,7 +1335,6 @@ RETRY_TRY_BLOCK:
         else {
           stack_extend(mrb, irep->nregs, ci->argc+2);
         }
-        regs = mrb->c->stack;
         pc = irep->iseq;
         JUMP;
       }
@@ -1532,7 +1526,7 @@ RETRY_TRY_BLOCK:
             }
             if (ci->ridx == 0) {
               if (mrb->c == mrb->root_c) {
-                regs = mrb->c->stack = mrb->c->stbase;
+                mrb->c->stack = mrb->c->stbase;
                 goto L_STOP;
               }
               else {
@@ -1558,7 +1552,7 @@ RETRY_TRY_BLOCK:
         irep = proc->body.irep;
         pool = irep->pool;
         syms = irep->syms;
-        regs = mrb->c->stack = ci[1].stackent;
+        mrb->c->stack = ci[1].stackent;
         pc = mrb->c->rescue[--ci->ridx];
       }
       else {
@@ -1640,7 +1634,7 @@ RETRY_TRY_BLOCK:
         }
         cipop(mrb);
         acc = ci->acc;
-        regs = mrb->c->stack = ci->stackent;
+        mrb->c->stack = ci->stackent;
         if (acc == CI_ACC_SKIP) {
           mrb->jmp = prev_jmp;
           return v;
@@ -1714,7 +1708,6 @@ RETRY_TRY_BLOCK:
         else {
           stack_extend(mrb, irep->nregs, ci->argc+2);
         }
-        regs = mrb->c->stack;
         pc = irep->iseq;
       }
       JUMP;
@@ -2215,7 +2208,6 @@ RETRY_TRY_BLOCK:
     CASE(OP_STRCAT) {
       /* A B    R(A).concat(R(B)) */
       mrb_str_concat(mrb, regs[GETARG_A(i)], regs[GETARG_B(i)]);
-      regs = mrb->c->stack;
       NEXT;
     }

@@ -2271,7 +2263,6 @@ RETRY_TRY_BLOCK:
         base = mrb_obj_value(mrb->c->ci->target_class);
       }
       c = mrb_vm_define_class(mrb, base, super, id);
-      regs = mrb->c->stack;
       regs[a] = mrb_obj_value(c);
       ARENA_RESTORE(mrb, ai);
       NEXT;
@@ -2323,7 +2314,7 @@ RETRY_TRY_BLOCK:
         mrb_gc_arena_restore(mrb, ai);
         if (mrb->exc) goto L_RAISE;
         /* pop stackpos */
-        regs = mrb->c->stack = mrb->c->ci->stackent;
+        mrb->c->stack = mrb->c->ci->stackent;
         cipop(mrb);
         NEXT;
       }
@@ -2333,7 +2324,6 @@ RETRY_TRY_BLOCK:
         syms = irep->syms;
         stack_extend(mrb, irep->nregs, 1);
         ci->nregs = irep->nregs;
-        regs = mrb->c->stack;
         pc = irep->iseq;
         JUMP;
       }
@@ -2424,6 +2414,7 @@ RETRY_TRY_BLOCK:
     }
   }
   END_DISPATCH;
+#undef regs

   }
   MRB_CATCH(&c_jmp) {",True,{}
mruby/mruby,https://github.com/mruby/mruby,3142,2016-03-24T15:27:36Z,2016-03-25T04:41:35Z,2016-03-26T16:20:56Z,MERGED,True,1,0,1,https://github.com/kou,Add missing regs update,1,[],https://github.com/mruby/mruby/pull/3142,https://github.com/matz,5,https://github.com/mruby/mruby/pull/3142#issuecomment-201880717,"mrb_vm_define_class() may realloc() mrb->c->stack because it calls
mrb_funcall() for inherited hook. If mrb->c->stack is realloc()-ed, regs
refers orphan address.","@kou Yes, but I care about performance. If it does not slow VM down, I am fine.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3145,2016-04-13T11:41:38Z,2016-04-13T15:04:54Z,2016-04-13T20:06:51Z,MERGED,True,1,1,1,https://github.com/timoschilling,fix syntax highlighting,1,[],https://github.com/mruby/mruby/pull/3145,https://github.com/timoschilling,1,https://github.com/mruby/mruby/pull/3145,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3147,2016-04-16T14:00:06Z,2016-04-16T14:27:15Z,2016-04-17T08:02:06Z,MERGED,True,1,1,1,https://github.com/ksss,Avoid Syntax Error on CRuby v1.8,1,[],https://github.com/mruby/mruby/pull/3147,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3147,"CRuby v1.8 dose not support named capture.
$ ruby -v
ruby 1.8.7 (2013-06-27 patchlevel 374) [i686-darwin13.4.0]

$ rake
rake aborted!
SyntaxError: src/github.com/ksss/mruby/tasks/toolchains/visualcpp.rake:56: undefined (?...) sequence: /Version (?<v>\d{2}\.\d{2}\.\d{5})/

$ ./minirake
(in src/github.com/ksss/mruby)
rake aborted!
src/github.com/ksss/mruby/tasks/toolchains/visualcpp.rake:56: undefined (?...) sequence: /Version (?<v>\d{2}\.\d{2}\.\d{5})/
./rakefile:10:in `load'

Since this fix #3139
@cremno Could you review this? (I don't have visual studio)","CRuby v1.8 dose not support named capture.
$ ruby -v
ruby 1.8.7 (2013-06-27 patchlevel 374) [i686-darwin13.4.0]

$ rake
rake aborted!
SyntaxError: src/github.com/ksss/mruby/tasks/toolchains/visualcpp.rake:56: undefined (?...) sequence: /Version (?<v>\d{2}\.\d{2}\.\d{5})/

$ ./minirake
(in src/github.com/ksss/mruby)
rake aborted!
src/github.com/ksss/mruby/tasks/toolchains/visualcpp.rake:56: undefined (?...) sequence: /Version (?<v>\d{2}\.\d{2}\.\d{5})/
./rakefile:10:in `load'

Since this fix #3139
@cremno Could you review this? (I don't have visual studio)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3151,2016-04-27T02:54:27Z,2016-04-27T03:14:54Z,2016-04-27T03:57:33Z,MERGED,True,9,18,1,https://github.com/okkez,Use stack directly,1,[],https://github.com/mruby/mruby/pull/3151,https://github.com/okkez,1,https://github.com/mruby/mruby/pull/3151,See #3142 (comment),See #3142 (comment),True,{}
mruby/mruby,https://github.com/mruby/mruby,3151,2016-04-27T02:54:27Z,2016-04-27T03:14:54Z,2016-04-27T03:57:33Z,MERGED,True,9,18,1,https://github.com/okkez,Use stack directly,1,[],https://github.com/mruby/mruby/pull/3151,https://github.com/okkez,2,https://github.com/mruby/mruby/pull/3151#issuecomment-214955425,See #3142 (comment),See benchmark result: https://gist.github.com/okkez/136697f3681770b5191ffa33b4a0c33c,True,{}
mruby/mruby,https://github.com/mruby/mruby,3151,2016-04-27T02:54:27Z,2016-04-27T03:14:54Z,2016-04-27T03:57:33Z,MERGED,True,9,18,1,https://github.com/okkez,Use stack directly,1,[],https://github.com/mruby/mruby/pull/3151,https://github.com/okkez,3,https://github.com/mruby/mruby/pull/3151#issuecomment-214963936,See #3142 (comment),Thanks!!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3153,2016-05-09T05:07:13Z,2016-05-09T08:35:19Z,2016-05-09T13:59:16Z,MERGED,True,0,1,1,https://github.com/kou,Remove needless assignment,1,[],https://github.com/mruby/mruby/pull/3153,https://github.com/kou,1,https://github.com/mruby/mruby/pull/3153,d4ee409 should remove this line.,d4ee409 should remove this line.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3154,2016-05-09T14:41:02Z,2016-05-10T01:04:04Z,2016-05-10T14:47:07Z,MERGED,True,28,34,1,https://github.com/cremno,improve checked mrb int arithmetic implementation,2,[],https://github.com/mruby/mruby/pull/3154,https://github.com/cremno,1,https://github.com/mruby/mruby/pull/3154,Somewhat related to #3149 which will be fixed by a future PR.,Somewhat related to #3149 which will be fixed by a future PR.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3154,2016-05-09T14:41:02Z,2016-05-10T01:04:04Z,2016-05-10T14:47:07Z,MERGED,True,28,34,1,https://github.com/cremno,improve checked mrb int arithmetic implementation,2,[],https://github.com/mruby/mruby/pull/3154,https://github.com/cremno,2,https://github.com/mruby/mruby/pull/3154#issuecomment-217884439,Somewhat related to #3149 which will be fixed by a future PR.,Oh and if somebody here has a better name than the long MRB_HAVE_TYPE_GENERIC_CHECKED_ARITHMETIC_BUILTINS - let's hear it!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3155,2016-05-09T15:00:25Z,2016-05-10T00:18:25Z,2016-05-10T00:18:25Z,MERGED,True,2,1,1,https://github.com/cremno,fix #3152,1,[],https://github.com/mruby/mruby/pull/3155,https://github.com/cremno,1,https://github.com/mruby/mruby/pull/3155,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3156,2016-05-09T15:23:53Z,2016-05-10T01:04:31Z,2016-05-10T14:46:44Z,MERGED,True,1,1,1,https://github.com/cremno,fix MRUBY_VERSION value,1,[],https://github.com/mruby/mruby/pull/3156,https://github.com/cremno,1,https://github.com/mruby/mruby/pull/3156,"RUBY_ENGINE_VERSION and MRUBY_VERSION should refer to the same string.
Rationale: One less object is created and JRuby does it too.","RUBY_ENGINE_VERSION and MRUBY_VERSION should refer to the same string.
Rationale: One less object is created and JRuby does it too.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3157,2016-05-10T17:36:12Z,2016-05-11T00:41:19Z,2016-05-11T00:41:19Z,MERGED,True,45,28,3,https://github.com/cremno,add function for checked mrb_int multiplication,2,[],https://github.com/mruby/mruby/pull/3157,https://github.com/cremno,1,https://github.com/mruby/mruby/pull/3157,See #3149.,See #3149.,True,{'HEART': ['https://github.com/Asmod4n']}
mruby/mruby,https://github.com/mruby/mruby,3159,2016-05-14T12:23:38Z,2016-05-16T06:37:53Z,2016-05-16T06:37:53Z,CLOSED,False,6,4,1,https://github.com/mame,disable d098d82 for shortcut operator temporarily,1,[],https://github.com/mruby/mruby/pull/3159,https://github.com/mame,1,https://github.com/mruby/mruby/pull/3159,"d098d82 introduces a stack inconsistency when it is a shortcut operator.
a = { :foo => { :bar => 0 } }
p((a[:foo] ||= {})[:bar] ||= 42)
#=> expected: 0, actual: nil
Note that this is just a temporary fix to disable d098d82; a in a[b] ||= c is evaluated twice.","d098d82 introduces a stack inconsistency when it is a shortcut operator.
a = { :foo => { :bar => 0 } }
p((a[:foo] ||= {})[:bar] ||= 42)
#=> expected: 0, actual: nil
Note that this is just a temporary fix to disable d098d82; a in a[b] ||= c is evaluated twice.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3159,2016-05-14T12:23:38Z,2016-05-16T06:37:53Z,2016-05-16T06:37:53Z,CLOSED,False,6,4,1,https://github.com/mame,disable d098d82 for shortcut operator temporarily,1,[],https://github.com/mruby/mruby/pull/3159,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3159#issuecomment-219299325,"d098d82 introduces a stack inconsistency when it is a shortcut operator.
a = { :foo => { :bar => 0 } }
p((a[:foo] ||= {})[:bar] ||= 42)
#=> expected: 0, actual: nil
Note that this is just a temporary fix to disable d098d82; a in a[b] ||= c is evaluated twice.",29d3a40 causes TravisCI fail. need to fix.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3162,2016-06-14T07:37:37Z,2016-06-14T10:10:04Z,2016-06-15T01:22:28Z,MERGED,True,3,0,1,https://github.com/udzura,"Update doc, write about add_test_dependency",1,[],https://github.com/mruby/mruby/pull/3162,https://github.com/udzura,1,https://github.com/mruby/mruby/pull/3162,I had been confused so I added.,I had been confused so I added.,True,"{'THUMBS_UP': ['https://github.com/matsumotory', 'https://github.com/yancya', 'https://github.com/davydovanton']}"
mruby/mruby,https://github.com/mruby/mruby,3162,2016-06-14T07:37:37Z,2016-06-14T10:10:04Z,2016-06-15T01:22:28Z,MERGED,True,3,0,1,https://github.com/udzura,"Update doc, write about add_test_dependency",1,[],https://github.com/mruby/mruby/pull/3162,https://github.com/udzura,2,https://github.com/mruby/mruby/pull/3162#issuecomment-226063488,I had been confused so I added.,Thanks!!!!!!!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3163,2016-06-17T16:24:20Z,2016-06-18T02:40:32Z,2016-06-18T02:40:32Z,MERGED,True,6,3,2,https://github.com/mattn,Fix public methods,2,[],https://github.com/mruby/mruby/pull/3163,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3163,"class Foo
  def foo
  end
end

class Bar < Foo
  def bar
  end
end

p Foo.new.public_methods(false)
p Bar.new.public_methods(false)
p Bar.new.public_methods.include?(:foo)
CRuby works as below:
[:foo]
[:bar]
true

But mruby does:
[:foo]
[:bar]
false","class Foo
  def foo
  end
end

class Bar < Foo
  def bar
  end
end

p Foo.new.public_methods(false)
p Bar.new.public_methods(false)
p Bar.new.public_methods.include?(:foo)
CRuby works as below:
[:foo]
[:bar]
true

But mruby does:
[:foo]
[:bar]
false",True,{}
mruby/mruby,https://github.com/mruby/mruby,3165,2016-06-25T10:43:26Z,2016-06-25T11:24:16Z,2016-06-25T11:24:16Z,CLOSED,False,1,1,1,https://github.com/devnexen,buffer overflow fix buf is sized 24 (ary member of RString),1,[],https://github.com/mruby/mruby/pull/3165,https://github.com/devnexen,1,https://github.com/mruby/mruby/pull/3165,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3165,2016-06-25T10:43:26Z,2016-06-25T11:24:16Z,2016-06-25T11:24:16Z,CLOSED,False,1,1,1,https://github.com/devnexen,buffer overflow fix buf is sized 24 (ary member of RString),1,[],https://github.com/mruby/mruby/pull/3165,https://github.com/cremno,2,https://github.com/mruby/mruby/pull/3165#issuecomment-228533318,,"Can you post Ruby code and if necessary any other steps that are needed to reproduce the bug please?
Also a string returned by mrb_str_buf_new() never uses the embedded array to store its content. So your fix looks incorrect to me.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3166,2016-06-29T08:13:31Z,2016-06-30T05:32:53Z,2016-06-30T05:32:53Z,MERGED,True,1,1,1,https://github.com/yyamano,Fix compilation error with GC_PROFILE.,1,[],https://github.com/mruby/mruby/pull/3166,https://github.com/yyamano,1,https://github.com/mruby/mruby/pull/3166,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3169,2016-07-01T13:04:34Z,2016-07-01T15:55:00Z,2016-07-02T06:43:09Z,MERGED,True,1,1,1,https://github.com/ksss,Fix warning shift-negative-value,1,[],https://github.com/mruby/mruby/pull/3169,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3169,"On OSX & clang v7.3.0 appear these warning.
/Users/yuki/src/github.com/ksss/mruby/mrbgems/mruby-sprintf/src/sprintf.c:37:11: warning: shifting a negative signed value is undefined
      [-Wshift-negative-value]
    *t |= EXTENDSIGN(3, strlen(t));
          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuki/src/github.com/ksss/mruby/mrbgems/mruby-sprintf/src/sprintf.c:20:32: note: expanded from macro 'EXTENDSIGN'
#define EXTENDSIGN(n, l) (((~0 << (n)) >> (((n)*(l)) % BITSPERDIG)) & ~(~0 << (n)))
                            ~~ ^
/Users/yuki/src/github.com/ksss/mruby/mrbgems/mruby-sprintf/src/sprintf.c:37:11: warning: shifting a negative signed value is undefined
      [-Wshift-negative-value]
    *t |= EXTENDSIGN(3, strlen(t));
          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuki/src/github.com/ksss/mruby/mrbgems/mruby-sprintf/src/sprintf.c:20:76: note: expanded from macro 'EXTENDSIGN'
#define EXTENDSIGN(n, l) (((~0 << (n)) >> (((n)*(l)) % BITSPERDIG)) & ~(~0 << (n)))

So, I use unsigned suffix.
http://stackoverflow.com/questions/22883790/left-shift-of-negative-values-by-0-positions
This fix seems to be silent.
But I don't know best way to fix...","On OSX & clang v7.3.0 appear these warning.
/Users/yuki/src/github.com/ksss/mruby/mrbgems/mruby-sprintf/src/sprintf.c:37:11: warning: shifting a negative signed value is undefined
      [-Wshift-negative-value]
    *t |= EXTENDSIGN(3, strlen(t));
          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuki/src/github.com/ksss/mruby/mrbgems/mruby-sprintf/src/sprintf.c:20:32: note: expanded from macro 'EXTENDSIGN'
#define EXTENDSIGN(n, l) (((~0 << (n)) >> (((n)*(l)) % BITSPERDIG)) & ~(~0 << (n)))
                            ~~ ^
/Users/yuki/src/github.com/ksss/mruby/mrbgems/mruby-sprintf/src/sprintf.c:37:11: warning: shifting a negative signed value is undefined
      [-Wshift-negative-value]
    *t |= EXTENDSIGN(3, strlen(t));
          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuki/src/github.com/ksss/mruby/mrbgems/mruby-sprintf/src/sprintf.c:20:76: note: expanded from macro 'EXTENDSIGN'
#define EXTENDSIGN(n, l) (((~0 << (n)) >> (((n)*(l)) % BITSPERDIG)) & ~(~0 << (n)))

So, I use unsigned suffix.
http://stackoverflow.com/questions/22883790/left-shift-of-negative-values-by-0-positions
This fix seems to be silent.
But I don't know best way to fix...",True,{}
mruby/mruby,https://github.com/mruby/mruby,3171,2016-07-07T21:41:08Z,2016-07-08T03:14:46Z,2016-07-11T04:17:13Z,MERGED,True,2,2,1,https://github.com/kjunichi,C doesn't have try-catch,1,[],https://github.com/mruby/mruby/pull/3171,https://github.com/kjunichi,1,https://github.com/mruby/mruby/pull/3171,"It seems that there is a problem in case of using C and C++ gems at same time.
for example:
you write in build_config.rb like this.
conf.gem :github => 'kjunichi/mruby-mrmagick'
conf.gem :github => 'matsumoto-r/mruby-redis'
compile errors occur.
CC    build/mrbgems/mruby-redis/src/mrb_redis.c -> build/host/mrbgems/mruby-redis/src/mrb_redis.o
In file included from /Users/kjunichi/work/mruby/mrmagick/mruby/build/mrbgems/mruby-redis/src/mrb_redis.c:45:
/Users/kjunichi/work/mruby/mrmagick/mruby/include/mruby/throw.h:44:3: error: type name does not allow storage class
      to be specified
  static mrb_int jmpbuf_id;
  ^
/Users/kjunichi/work/mruby/mrmagick/mruby/include/mruby/throw.h:45:3: error: type name requires a specifier or
      qualifier
  mrb_jmpbuf() : impl(jmpbuf_id++) {}
  ^
/Users/kjunichi/work/mruby/mrmagick/mruby/include/mruby/throw.h:45:18: error: implicit declaration of function 'impl'
      is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  mrb_jmpbuf() : impl(jmpbuf_id++) {}
                 ^
/Users/kjunichi/work/mruby/mrmagick/mruby/include/mruby/throw.h:45:23: error: use of undeclared identifier
      'jmpbuf_id'
  mrb_jmpbuf() : impl(jmpbuf_id++) {}","It seems that there is a problem in case of using C and C++ gems at same time.
for example:
you write in build_config.rb like this.
conf.gem :github => 'kjunichi/mruby-mrmagick'
conf.gem :github => 'matsumoto-r/mruby-redis'
compile errors occur.
CC    build/mrbgems/mruby-redis/src/mrb_redis.c -> build/host/mrbgems/mruby-redis/src/mrb_redis.o
In file included from /Users/kjunichi/work/mruby/mrmagick/mruby/build/mrbgems/mruby-redis/src/mrb_redis.c:45:
/Users/kjunichi/work/mruby/mrmagick/mruby/include/mruby/throw.h:44:3: error: type name does not allow storage class
      to be specified
  static mrb_int jmpbuf_id;
  ^
/Users/kjunichi/work/mruby/mrmagick/mruby/include/mruby/throw.h:45:3: error: type name requires a specifier or
      qualifier
  mrb_jmpbuf() : impl(jmpbuf_id++) {}
  ^
/Users/kjunichi/work/mruby/mrmagick/mruby/include/mruby/throw.h:45:18: error: implicit declaration of function 'impl'
      is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  mrb_jmpbuf() : impl(jmpbuf_id++) {}
                 ^
/Users/kjunichi/work/mruby/mrmagick/mruby/include/mruby/throw.h:45:23: error: use of undeclared identifier
      'jmpbuf_id'
  mrb_jmpbuf() : impl(jmpbuf_id++) {}",True,{'THUMBS_UP': ['https://github.com/Asmod4n']}
mruby/mruby,https://github.com/mruby/mruby,3174,2016-07-14T01:30:49Z,2016-07-14T08:10:54Z,2016-07-14T09:16:13Z,MERGED,True,11,0,2,https://github.com/ksss,Should raise LocalJumpError when no block given,1,[],https://github.com/mruby/mruby/pull/3174,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3174,Fix #3173,Fix #3173,True,{}
mruby/mruby,https://github.com/mruby/mruby,3176,2016-07-14T12:52:01Z,2016-07-14T16:22:02Z,2016-07-15T03:23:45Z,MERGED,True,11,8,2,https://github.com/ksss,String#insert should be destructive,1,[],https://github.com/mruby/mruby/pull/3176,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3176,"I think, almost all of the user of mruby expect mruby works same as the CRuby.
So, I think String#insert should be destructive same as the CRuby.
And current String#insert implementation is slightly complicated.
I reimplemented this and fix to destructive.","I think, almost all of the user of mruby expect mruby works same as the CRuby.
So, I think String#insert should be destructive same as the CRuby.
And current String#insert implementation is slightly complicated.
I reimplemented this and fix to destructive.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3178,2016-07-22T05:49:24Z,2016-07-25T01:40:30Z,2016-07-25T02:01:53Z,CLOSED,False,59,17,2,https://github.com/ksss,Fix segmentation fault,1,[],https://github.com/mruby/mruby/pull/3178,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3178,"Fix #3177
But, This PR have some bad points.

mrb_instance_alloc copied by src/class.c
mrb_struct_instance_new nearly the same as mrb_instance_new

How do you think?","Fix #3177
But, This PR have some bad points.

mrb_instance_alloc copied by src/class.c
mrb_struct_instance_new nearly the same as mrb_instance_new

How do you think?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3178,2016-07-22T05:49:24Z,2016-07-25T01:40:30Z,2016-07-25T02:01:53Z,CLOSED,False,59,17,2,https://github.com/ksss,Fix segmentation fault,1,[],https://github.com/mruby/mruby/pull/3178,https://github.com/ksss,2,https://github.com/mruby/mruby/pull/3178#issuecomment-234463289,"Fix #3177
But, This PR have some bad points.

mrb_instance_alloc copied by src/class.c
mrb_struct_instance_new nearly the same as mrb_instance_new

How do you think?",Test code dependent on #3179,True,{}
mruby/mruby,https://github.com/mruby/mruby,3179,2016-07-22T05:56:39Z,2016-07-25T05:19:10Z,2016-07-27T04:30:23Z,MERGED,True,4,1,2,https://github.com/ksss,Should not define to `Struct` class,2,[],https://github.com/mruby/mruby/pull/3179,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3179,"Struct.new(:foo) do
  def bar
  end
end
Struct.new(:baz).new.bar
This case should raise NoMethodError, But nothing.","Struct.new(:foo) do
  def bar
  end
end
Struct.new(:baz).new.bar
This case should raise NoMethodError, But nothing.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3181,2016-07-23T02:35:10Z,2016-07-25T15:12:54Z,2016-07-25T15:46:22Z,MERGED,True,1,1,1,https://github.com/sdottaka,Fix crash in mrb_parser_free() due to freed memory access,1,[],https://github.com/mruby/mruby/pull/3181,https://github.com/sdottaka,1,https://github.com/mruby/mruby/pull/3181,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3181,2016-07-23T02:35:10Z,2016-07-25T15:12:54Z,2016-07-25T15:46:22Z,MERGED,True,1,1,1,https://github.com/sdottaka,Fix crash in mrb_parser_free() due to freed memory access,1,[],https://github.com/mruby/mruby/pull/3181,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3181#issuecomment-234842637,,Do you have any info to reproduce the issue?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3181,2016-07-23T02:35:10Z,2016-07-25T15:12:54Z,2016-07-25T15:46:22Z,MERGED,True,1,1,1,https://github.com/sdottaka,Fix crash in mrb_parser_free() due to freed memory access,1,[],https://github.com/mruby/mruby/pull/3181,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3181#issuecomment-234983098,,I found the issue by using valgrind.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3181,2016-07-23T02:35:10Z,2016-07-25T15:12:54Z,2016-07-25T15:46:22Z,MERGED,True,1,1,1,https://github.com/sdottaka,Fix crash in mrb_parser_free() due to freed memory access,1,[],https://github.com/mruby/mruby/pull/3181,https://github.com/sdottaka,4,https://github.com/mruby/mruby/pull/3181#issuecomment-234993441,,"Thank you for the merge.
It was always reproducible when executing mrbc.exe which was built with MSVC2015.
Sorry for no information.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3182,2016-07-23T02:59:45Z,2016-07-25T15:13:53Z,2016-07-25T15:31:11Z,MERGED,True,8,4,2,https://github.com/sdottaka,Fix broken msvc build,2,[],https://github.com/mruby/mruby/pull/3182,https://github.com/sdottaka,1,https://github.com/mruby/mruby/pull/3182,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3183,2016-07-23T06:50:06Z,2016-07-25T06:07:30Z,2016-07-25T06:07:35Z,MERGED,True,213,2,1,None,yard docs for string.h,1,[],https://github.com/mruby/mruby/pull/3183,None,1,https://github.com/mruby/mruby/pull/3183,Please review this documentation for string.h,Please review this documentation for string.h,True,{}
mruby/mruby,https://github.com/mruby/mruby,3183,2016-07-23T06:50:06Z,2016-07-25T06:07:30Z,2016-07-25T06:07:35Z,MERGED,True,213,2,1,None,yard docs for string.h,1,[],https://github.com/mruby/mruby/pull/3183,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3183#issuecomment-234847994,Please review this documentation for string.h,Looks reasonable to me.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3184,2016-07-26T09:51:49Z,2016-07-26T17:32:04Z,2016-08-07T09:12:39Z,MERGED,True,9,1,1,https://github.com/ksss,Support to call without block to String#each_char,1,[],https://github.com/mruby/mruby/pull/3184,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3184,"String#char and String#each_char aren't same methods.
This patch support like this (same as CRuby).
""foo"".each_char.with_index do |ch, index|
  # ...
end","String#char and String#each_char aren't same methods.
This patch support like this (same as CRuby).
""foo"".each_char.with_index do |ch, index|
  # ...
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,3184,2016-07-26T09:51:49Z,2016-07-26T17:32:04Z,2016-08-07T09:12:39Z,MERGED,True,9,1,1,https://github.com/ksss,Support to call without block to String#each_char,1,[],https://github.com/mruby/mruby/pull/3184,https://github.com/ebertolazzi,2,https://github.com/mruby/mruby/pull/3184#issuecomment-238043666,"String#char and String#each_char aren't same methods.
This patch support like this (same as CRuby).
""foo"".each_char.with_index do |ch, index|
  # ...
end","This patch introduce the following error:
Before
mirb
mirb - Embeddable Interactive Ruby Shell

a = ""hello""
=> ""hello""
a.upcase.each_char.join(' ')
=> ""H E L L O""

now
mirb
mirb - Embeddable Interactive Ruby Shell

a = ""hello""
=> ""hello""
a.upcase.each_char.join(' ')
(mirb):4: undefined method 'join' for #<Enumerator: HELLO:each_char> (NoMethodError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3184,2016-07-26T09:51:49Z,2016-07-26T17:32:04Z,2016-08-07T09:12:39Z,MERGED,True,9,1,1,https://github.com/ksss,Support to call without block to String#each_char,1,[],https://github.com/mruby/mruby/pull/3184,https://github.com/ksss,3,https://github.com/mruby/mruby/pull/3184#issuecomment-238064958,"String#char and String#each_char aren't same methods.
This patch support like this (same as CRuby).
""foo"".each_char.with_index do |ch, index|
  # ...
end","@ebertolazzi Thank you for reporting.
I'm sorry break compatibility.
But, This fix follow to spec of CRuby.
http://ruby-doc.org/core-2.3.0/String.html#method-i-chars
http://ruby-doc.org/core-2.3.0/String.html#method-i-each_char
$ irb
irb(main):001:0> ""hello"".upcase.each_char.join(' ')
NoMethodError: undefined method `join' for #<Enumerator: ""HELLO"":each_char>
In this case, I recommend that you use chars or each_chars.to_a like this.
$ mirb
> ""hello"".upcase.chars.join(' ')
 => ""H E L L O""
> ""hello"".upcase.each_char.to_a.join(' ')
 => ""H E L L O""
Thanks!",True,{}
mruby/mruby,https://github.com/mruby/mruby,3184,2016-07-26T09:51:49Z,2016-07-26T17:32:04Z,2016-08-07T09:12:39Z,MERGED,True,9,1,1,https://github.com/ksss,Support to call without block to String#each_char,1,[],https://github.com/mruby/mruby/pull/3184,https://github.com/ebertolazzi,4,https://github.com/mruby/mruby/pull/3184#issuecomment-238071042,"String#char and String#each_char aren't same methods.
This patch support like this (same as CRuby).
""foo"".each_char.with_index do |ch, index|
  # ...
end","Now its clear, thanks for explanation.
Another possibility is to use
chars.join(' ')
shorthand for seach_char.to_a.join(' ')
regards,",True,{}
mruby/mruby,https://github.com/mruby/mruby,3184,2016-07-26T09:51:49Z,2016-07-26T17:32:04Z,2016-08-07T09:12:39Z,MERGED,True,9,1,1,https://github.com/ksss,Support to call without block to String#each_char,1,[],https://github.com/mruby/mruby/pull/3184,https://github.com/ksss,5,https://github.com/mruby/mruby/pull/3184#issuecomment-238071990,"String#char and String#each_char aren't same methods.
This patch support like this (same as CRuby).
""foo"".each_char.with_index do |ch, index|
  # ...
end",✨,True,{}
mruby/mruby,https://github.com/mruby/mruby,3185,2016-07-27T05:02:28Z,2016-07-27T05:03:52Z,2016-07-27T05:04:08Z,MERGED,True,3,3,1,https://github.com/kou,Reduce needless Array generation in some String methods,1,[],https://github.com/mruby/mruby/pull/3185,https://github.com/kou,1,https://github.com/mruby/mruby/pull/3185,"Here are some benchmarks:
each_char:
# /tmp/each_char.rb
a = ""a"" * 1000000
a.each_char do |x|
end

Without this change:
% time bin/mruby /tmp/each_char.rb
bin/mruby /tmp/each_char.rb  1.07s user 0.02s system 99% cpu 1.088 total

With this change:
% time bin/mruby /tmp/each_char.rb
bin/mruby /tmp/each_char.rb  0.52s user 0.01s system 99% cpu 0.530 total

2 times faster with this change.
codepoints:
# /tmp/codepoints.rb
a = ""a"" * 1000000
a.codepoints do |x|
end

Without this change:
% time bin/mruby /tmp/codepoints.rb
bin/mruby /tmp/codepoints.rb  1.16s user 0.05s system 99% cpu 1.216 total

With this change:
% time bin/mruby /tmp/codepoints.rb
bin/mruby /tmp/codepoints.rb  0.56s user 0.02s system 99% cpu 0.589 total","Here are some benchmarks:
each_char:
# /tmp/each_char.rb
a = ""a"" * 1000000
a.each_char do |x|
end

Without this change:
% time bin/mruby /tmp/each_char.rb
bin/mruby /tmp/each_char.rb  1.07s user 0.02s system 99% cpu 1.088 total

With this change:
% time bin/mruby /tmp/each_char.rb
bin/mruby /tmp/each_char.rb  0.52s user 0.01s system 99% cpu 0.530 total

2 times faster with this change.
codepoints:
# /tmp/codepoints.rb
a = ""a"" * 1000000
a.codepoints do |x|
end

Without this change:
% time bin/mruby /tmp/codepoints.rb
bin/mruby /tmp/codepoints.rb  1.16s user 0.05s system 99% cpu 1.216 total

With this change:
% time bin/mruby /tmp/codepoints.rb
bin/mruby /tmp/codepoints.rb  0.56s user 0.02s system 99% cpu 0.589 total",True,{'HEART': ['https://github.com/ksss']}
mruby/mruby,https://github.com/mruby/mruby,3186,2016-07-27T19:51:31Z,2016-07-28T01:59:32Z,2016-07-28T14:40:46Z,MERGED,True,1,1,1,https://github.com/rmalizia44,Fixed a typo in comment,1,[],https://github.com/mruby/mruby/pull/3186,https://github.com/rmalizia44,1,https://github.com/mruby/mruby/pull/3186,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3186,2016-07-27T19:51:31Z,2016-07-28T01:59:32Z,2016-07-28T14:40:46Z,MERGED,True,1,1,1,https://github.com/rmalizia44,Fixed a typo in comment,1,[],https://github.com/mruby/mruby/pull/3186,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3186#issuecomment-235778257,,"Next time, we want to see more descriptive message than Update mirb.c,
for example, fixed a typo in comment.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3188,2016-07-31T04:52:32Z,2016-07-31T05:37:39Z,2016-07-31T05:37:39Z,MERGED,True,1,1,1,https://github.com/guoxiao,intptr_t should be used instead of uint32_t to hold a pointer.,1,[],https://github.com/mruby/mruby/pull/3188,https://github.com/guoxiao,1,https://github.com/mruby/mruby/pull/3188,Fix warning: cast from pointer to integer of different size [-Wpointer-to-int-cast],Fix warning: cast from pointer to integer of different size [-Wpointer-to-int-cast],True,{}
mruby/mruby,https://github.com/mruby/mruby,3189,2016-08-01T09:09:20Z,2016-08-02T17:26:04Z,2016-12-18T02:41:23Z,MERGED,True,6,1,2,https://github.com/wrl,make mrb_hash_values() a public API function,1,[],https://github.com/mruby/mruby/pull/3189,https://github.com/wrl,1,https://github.com/mruby/mruby/pull/3189,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3189,2016-08-01T09:09:20Z,2016-08-02T17:26:04Z,2016-12-18T02:41:23Z,MERGED,True,6,1,2,https://github.com/wrl,make mrb_hash_values() a public API function,1,[],https://github.com/mruby/mruby/pull/3189,https://github.com/cremno,2,https://github.com/mruby/mruby/pull/3189#issuecomment-236531187,,"Why isn't mrb_funcall(mrb, hash, ""values"", 0) good enough for you? Speed?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3189,2016-08-01T09:09:20Z,2016-08-02T17:26:04Z,2016-12-18T02:41:23Z,MERGED,True,6,1,2,https://github.com/wrl,make mrb_hash_values() a public API function,1,[],https://github.com/mruby/mruby/pull/3189,https://github.com/wrl,3,https://github.com/mruby/mruby/pull/3189#issuecomment-236536258,,"Ah, I suppose I could do that. I just figured that since mrb_hash_keys() is a public API function, it would make sense to have mrb_hash_values() public as well.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3189,2016-08-01T09:09:20Z,2016-08-02T17:26:04Z,2016-12-18T02:41:23Z,MERGED,True,6,1,2,https://github.com/wrl,make mrb_hash_values() a public API function,1,[],https://github.com/mruby/mruby/pull/3189,https://github.com/jmhmccr,4,https://github.com/mruby/mruby/pull/3189#issuecomment-267799901,,Should this be in 1.3 notes? #3140,True,{}
mruby/mruby,https://github.com/mruby/mruby,3192,2016-08-08T03:40:04Z,2016-08-31T14:15:42Z,2016-09-02T01:38:14Z,MERGED,True,3,0,2,https://github.com/ksss,instance_eval env should remake Fix #3191,1,[],https://github.com/mruby/mruby/pull/3192,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3192,"I try to fix #3191.
Before, mrb->c->ci->env keep and pass to env of proc when make a closure.

  
    
      mruby/src/proc.c
    
    
         Line 61
      in
      0d9aa83
    
  
  
    

        
          
           e = mrb->c->ci->env; 
        
    
  


So, stack when call instance_eval get back it when make a closure.
a = 1
b = 2
c = 3
o = Object.new
p o.instance_eval(""[a, b, c, o, self]"")
#=> [1, 2, 3, #<Object:0x7ff749818c90>, #<Object:0x7ff749818c90>]
p o.instance_eval(""[1].each { break [a, b, c, o, self] }"")
#=> [nil, nil, nil, nil, main]
But proc env should be that of receiver.
And closure_setup make new env on current context.

  
    
      mruby/src/proc.c
    
    
        Lines 37 to 64
      in
      501e1ef
    
  
  
    

        
          
           static struct REnv* 
        

        
          
           env_new(mrb_state *mrb, int nlocals) 
        

        
          
           { 
        

        
          
             struct REnv *e; 
        

        
          
            
        

        
          
             e = (struct REnv*)mrb_obj_alloc(mrb, MRB_TT_ENV, (struct RClass*)mrb->c->ci->proc->env); 
        

        
          
             MRB_SET_ENV_STACK_LEN(e, nlocals); 
        

        
          
             e->mid = mrb->c->ci->mid; 
        

        
          
             e->cioff = mrb->c->ci - mrb->c->cibase; 
        

        
          
             e->stack = mrb->c->stack; 
        

        
          
            
        

        
          
             return e; 
        

        
          
           } 
        

        
          
            
        

        
          
           static void 
        

        
          
           closure_setup(mrb_state *mrb, struct RProc *p, int nlocals) 
        

        
          
           { 
        

        
          
             struct REnv *e; 
        

        
          
            
        

        
          
             if (!mrb->c->ci->env) { 
        

        
          
               e = env_new(mrb, nlocals); 
        

        
          
               mrb->c->ci->env = e; 
        

        
          
             } 
        

        
          
             else { 
        

        
          
               e = mrb->c->ci->env; 
        

        
          
             } 
        

        
          
             p->env = e; 
        

        
          
           } 
        
    
  


So, I propose this patch.","I try to fix #3191.
Before, mrb->c->ci->env keep and pass to env of proc when make a closure.

  
    
      mruby/src/proc.c
    
    
         Line 61
      in
      0d9aa83
    
  
  
    

        
          
           e = mrb->c->ci->env; 
        
    
  


So, stack when call instance_eval get back it when make a closure.
a = 1
b = 2
c = 3
o = Object.new
p o.instance_eval(""[a, b, c, o, self]"")
#=> [1, 2, 3, #<Object:0x7ff749818c90>, #<Object:0x7ff749818c90>]
p o.instance_eval(""[1].each { break [a, b, c, o, self] }"")
#=> [nil, nil, nil, nil, main]
But proc env should be that of receiver.
And closure_setup make new env on current context.

  
    
      mruby/src/proc.c
    
    
        Lines 37 to 64
      in
      501e1ef
    
  
  
    

        
          
           static struct REnv* 
        

        
          
           env_new(mrb_state *mrb, int nlocals) 
        

        
          
           { 
        

        
          
             struct REnv *e; 
        

        
          
            
        

        
          
             e = (struct REnv*)mrb_obj_alloc(mrb, MRB_TT_ENV, (struct RClass*)mrb->c->ci->proc->env); 
        

        
          
             MRB_SET_ENV_STACK_LEN(e, nlocals); 
        

        
          
             e->mid = mrb->c->ci->mid; 
        

        
          
             e->cioff = mrb->c->ci - mrb->c->cibase; 
        

        
          
             e->stack = mrb->c->stack; 
        

        
          
            
        

        
          
             return e; 
        

        
          
           } 
        

        
          
            
        

        
          
           static void 
        

        
          
           closure_setup(mrb_state *mrb, struct RProc *p, int nlocals) 
        

        
          
           { 
        

        
          
             struct REnv *e; 
        

        
          
            
        

        
          
             if (!mrb->c->ci->env) { 
        

        
          
               e = env_new(mrb, nlocals); 
        

        
          
               mrb->c->ci->env = e; 
        

        
          
             } 
        

        
          
             else { 
        

        
          
               e = mrb->c->ci->env; 
        

        
          
             } 
        

        
          
             p->env = e; 
        

        
          
           } 
        
    
  


So, I propose this patch.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3193,2016-08-12T01:22:22Z,2016-08-12T01:29:46Z,2016-08-12T01:41:05Z,MERGED,True,31,88,1,https://github.com/nobu,parse.y: simplify 90e8ce5,1,[],https://github.com/mruby/mruby/pull/3193,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3193,"simplify tOP_ASGN rules by command_rhs and arg_rhs rules with
%prec.","simplify tOP_ASGN rules by command_rhs and arg_rhs rules with
%prec.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3194,2016-08-13T04:58:49Z,2016-08-13T05:06:35Z,2016-08-19T07:00:08Z,MERGED,True,19,19,1,https://github.com/nobu,parse.y: fix chained assignments,1,[],https://github.com/mruby/mruby/pull/3194,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3194,"fix syntax errors with chained assignment with op assign.
reported [Bug:12669] in bugs.ruby-lang.org fixed in CRuby 2.4.","fix syntax errors with chained assignment with op assign.
reported [Bug:12669] in bugs.ruby-lang.org fixed in CRuby 2.4.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3195,2016-08-16T03:52:14Z,2016-08-16T04:44:24Z,2016-08-16T04:44:24Z,MERGED,True,3,3,1,https://github.com/franckverrot,Correct method name,1,[],https://github.com/mruby/mruby/pull/3195,https://github.com/franckverrot,1,https://github.com/mruby/mruby/pull/3195,"This typo appears in our CI and I just noticed it, I figured I could fix it with this very simple commit :-)","This typo appears in our CI and I just noticed it, I figured I could fix it with this very simple commit :-)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3196,2016-08-17T06:48:23Z,2016-08-17T08:00:01Z,2016-08-22T05:50:32Z,MERGED,True,5,1,2,https://github.com/mimaki,Fix String#ord failure which return a negative value,1,[],https://github.com/mruby/mruby/pull/3196,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3196,"Fixed a problem which String#ord returns a negative value, if specify character code of 0x80 or later.","Fixed a problem which String#ord returns a negative value, if specify character code of 0x80 or later.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3198,2016-08-19T02:13:22Z,2016-08-19T03:52:40Z,2016-08-19T07:02:41Z,MERGED,True,1,1,1,https://github.com/nobu,parse.y: lparen_arg statement,1,[],https://github.com/mruby/mruby/pull/3198,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3198,"allow parenthesised statement as a method argument.
reported [Feature:12686] in bugs.ruby-lang.org fixed in CRuby 2.4.","allow parenthesised statement as a method argument.
reported [Feature:12686] in bugs.ruby-lang.org fixed in CRuby 2.4.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3199,2016-08-20T12:28:58Z,2016-08-20T12:35:17Z,2016-08-20T12:35:17Z,MERGED,True,73,0,1,https://github.com/miura1729,Add new test for optimize VM,1,[],https://github.com/mruby/mruby/pull/3199,https://github.com/miura1729,1,https://github.com/mruby/mruby/pull/3199,Ｔｈｉｓ　is regression test for my project (JIT of mruby). I think this test is useful for developer optimizing VM of mruby.,Ｔｈｉｓ　is regression test for my project (JIT of mruby). I think this test is useful for developer optimizing VM of mruby.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3202,2016-09-02T15:42:48Z,2016-09-05T04:06:40Z,2016-09-05T04:06:40Z,MERGED,True,6,3,1,https://github.com/pbosetti,"In mrbgem_spec.rake, added support for @mrblib_dir @objs_dir, so that a gem can have custom source directory names",1,[],https://github.com/mruby/mruby/pull/3202,https://github.com/pbosetti,1,https://github.com/mruby/mruby/pull/3202,"This can be useful, for example, in order to simplify the setup of ""universal"" gems, i.e. gems that can be built both for standard ruby and for mruby. The mrbgem.rake file, for example, could explicitly set a different base name for ruby and C source files.","This can be useful, for example, in order to simplify the setup of ""universal"" gems, i.e. gems that can be built both for standard ruby and for mruby. The mrbgem.rake file, for example, could explicitly set a different base name for ruby and C source files.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3203,2016-09-04T13:43:06Z,2016-09-05T04:02:32Z,2016-09-06T14:20:27Z,MERGED,True,5,1,1,https://github.com/nozomiS,Fix mrbc_filename leak,1,[],https://github.com/mruby/mruby/pull/3203,https://github.com/nozomiS,1,https://github.com/mruby/mruby/pull/3203,"Hi there,
I'm very new to mruby.
I encountered a small memory leak when using mruby-eval,
it was small(maybe 8bytes for once for glibc)
but ate all physical memory on my system after one day of stress test.
I've dug it and found mrbc_context.filename is not freed when
the context is freed. I know this conversion has been closed at #1878 and
I understand this behavior never cause problem if application creates
only one mrb_context for one mrb_state.
However, mruby-eval allows to create many contexts in one mrb_state.
This pull request tries to fix the memory leak, I'm not sure it's correct or not
but it works for me.","Hi there,
I'm very new to mruby.
I encountered a small memory leak when using mruby-eval,
it was small(maybe 8bytes for once for glibc)
but ate all physical memory on my system after one day of stress test.
I've dug it and found mrbc_context.filename is not freed when
the context is freed. I know this conversion has been closed at #1878 and
I understand this behavior never cause problem if application creates
only one mrb_context for one mrb_state.
However, mruby-eval allows to create many contexts in one mrb_state.
This pull request tries to fix the memory leak, I'm not sure it's correct or not
but it works for me.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3204,2016-09-05T13:21:43Z,2016-09-05T13:36:19Z,2016-09-05T13:36:31Z,MERGED,True,1,0,1,https://github.com/ksss,Should clear method name,1,[],https://github.com/mruby/mruby/pull/3204,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3204,"This patch fix two issue if callinfo over CALLINFO_INIT_SIZE(32)

Fix method name in top-level
Fix SEGV when call Exception#backtrace

1.times{1.times{1.times{1.times{1.times{1.times{1.times{1.times{
1.times{1.times{1.times{1.times{1.times{1.times{1.times{1.times{
  begin
    eval('raise')
  rescue => e
    print e.backtrace
  end
}}}}}}}}
}}}}}}}}
This code have rundom results.
$ mruby t.rb
[""(eval):1:in Object.rand"", ""t.rb:6:in Object.call"", ""mruby/mrblib/numeric.rb:77:in Integral#times"", ... , ""t.rb:3""]

Object.rand never call in script and this string sometimes chenge Object.__attached__, Object.INFINITY or SEGV.
$ mruby t.rb
[1]    41204 segmentation fault  mruby t.rb
This issue's reasone is here.
https://github.com/ksss/mruby/blob/501e1ef2605541b98b6f0d2ba2fec69ff068f1cf/src/vm.c#L226
mrb_calloc clean up memory by 0. But mrb_realloc is nothing.
This line was called if callinfo over CALLINFO_INIT_SIZE(32).
Kernel#eval call mrb_top_run and push none cleared mid to callinfo.
I think it should clear by 0.

$ uname -v
Darwin Kernel Version 15.6.0: Mon Aug 29 20:21:34 PDT 2016; root:xnu-3248.60.11~1/RELEASE_X86_64

$ clang -v
Apple LLVM version 7.3.0 (clang-703.0.31)
Target: x86_64-apple-darwin15.6.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin","This patch fix two issue if callinfo over CALLINFO_INIT_SIZE(32)

Fix method name in top-level
Fix SEGV when call Exception#backtrace

1.times{1.times{1.times{1.times{1.times{1.times{1.times{1.times{
1.times{1.times{1.times{1.times{1.times{1.times{1.times{1.times{
  begin
    eval('raise')
  rescue => e
    print e.backtrace
  end
}}}}}}}}
}}}}}}}}
This code have rundom results.
$ mruby t.rb
[""(eval):1:in Object.rand"", ""t.rb:6:in Object.call"", ""mruby/mrblib/numeric.rb:77:in Integral#times"", ... , ""t.rb:3""]

Object.rand never call in script and this string sometimes chenge Object.__attached__, Object.INFINITY or SEGV.
$ mruby t.rb
[1]    41204 segmentation fault  mruby t.rb
This issue's reasone is here.
https://github.com/ksss/mruby/blob/501e1ef2605541b98b6f0d2ba2fec69ff068f1cf/src/vm.c#L226
mrb_calloc clean up memory by 0. But mrb_realloc is nothing.
This line was called if callinfo over CALLINFO_INIT_SIZE(32).
Kernel#eval call mrb_top_run and push none cleared mid to callinfo.
I think it should clear by 0.

$ uname -v
Darwin Kernel Version 15.6.0: Mon Aug 29 20:21:34 PDT 2016; root:xnu-3248.60.11~1/RELEASE_X86_64

$ clang -v
Apple LLVM version 7.3.0 (clang-703.0.31)
Target: x86_64-apple-darwin15.6.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin",True,{}
mruby/mruby,https://github.com/mruby/mruby,3205,2016-09-06T13:46:37Z,2016-09-06T14:14:25Z,2016-09-06T14:14:25Z,MERGED,True,1,1,1,https://github.com/yurie,surpress warning when MRB_DISABLE_STDIO,1,[],https://github.com/mruby/mruby/pull/3205,https://github.com/yurie,1,https://github.com/mruby/mruby/pull/3205,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3206,2016-09-06T13:48:07Z,2016-09-06T14:13:58Z,2016-09-06T23:08:33Z,MERGED,True,2,0,1,https://github.com/ksss,Fix SEGV when unshared env,1,[],https://github.com/mruby/mruby/pull/3206,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3206,"I'm trying project what run ruby/spec by mruby. (https://github.com/ksss/mruby-spec)
I encountered SEGV on spec for /language.
On get_closure_irep in eval.c, It is a possibility that unshare stack env (cioff=-1) comes.
And It will read mrb->c->cibase[-1].

  
    
      mruby/mrbgems/mruby-eval/src/eval.c
    
    
         Line 29
      in
      9040086
    
  
  
    

        
          
           proc = c->cibase[e->cioff].proc; 
        
    
  


How to reproduce
def m
  Proc.new { eval('raise') }
end

1.times{1.times{1.times{1.times{1.times{1.times{1.times{1.times{
1.times{1.times{1.times{1.times{1.times{1.times{1.times{1.times{
  m.call
}}}}}}}}
}}}}}}}}","I'm trying project what run ruby/spec by mruby. (https://github.com/ksss/mruby-spec)
I encountered SEGV on spec for /language.
On get_closure_irep in eval.c, It is a possibility that unshare stack env (cioff=-1) comes.
And It will read mrb->c->cibase[-1].

  
    
      mruby/mrbgems/mruby-eval/src/eval.c
    
    
         Line 29
      in
      9040086
    
  
  
    

        
          
           proc = c->cibase[e->cioff].proc; 
        
    
  


How to reproduce
def m
  Proc.new { eval('raise') }
end

1.times{1.times{1.times{1.times{1.times{1.times{1.times{1.times{
1.times{1.times{1.times{1.times{1.times{1.times{1.times{1.times{
  m.call
}}}}}}}}
}}}}}}}}",True,{}
mruby/mruby,https://github.com/mruby/mruby,3207,2016-09-08T07:40:26Z,2016-09-08T12:13:12Z,2016-09-08T12:48:49Z,MERGED,True,50,3,2,https://github.com/ksss,Fix SEGV when splat object,2,[],https://github.com/mruby/mruby/pull/3207,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3207,"Currently, These code got segmentation fault.
o = Object.new
def o.to_a
  nil
end
a = *o
o = Object.new
def o.to_a
  nil
end
a = case o
when *o
  1
end
Splat operation should return an array.
And should raise an error if result of convert by to_a is not array or nil.
This behavior same with CRuby.
This fix have an incompatibility for mrb_ary_splat.
But I'm believing this is a good way for mruby.","Currently, These code got segmentation fault.
o = Object.new
def o.to_a
  nil
end
a = *o
o = Object.new
def o.to_a
  nil
end
a = case o
when *o
  1
end
Splat operation should return an array.
And should raise an error if result of convert by to_a is not array or nil.
This behavior same with CRuby.
This fix have an incompatibility for mrb_ary_splat.
But I'm believing this is a good way for mruby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3209,2016-09-15T15:08:41Z,2016-09-15T15:33:50Z,2016-09-15T15:34:09Z,MERGED,True,158,146,1,https://github.com/felixjones,Re-written android.rake task for latest Android NDK clang. Currently …,1,[],https://github.com/mruby/mruby/pull/3209,https://github.com/felixjones,1,https://github.com/mruby/mruby/pull/3209,"…loses support for GCC and mips, mips64. Addresses issue #3208","…loses support for GCC and mips, mips64. Addresses issue #3208",True,{}
mruby/mruby,https://github.com/mruby/mruby,3209,2016-09-15T15:08:41Z,2016-09-15T15:33:50Z,2016-09-15T15:34:09Z,MERGED,True,158,146,1,https://github.com/felixjones,Re-written android.rake task for latest Android NDK clang. Currently …,1,[],https://github.com/mruby/mruby/pull/3209,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3209#issuecomment-247363481,"…loses support for GCC and mips, mips64. Addresses issue #3208",Thank you for the contribution.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3210,2016-09-15T17:22:41Z,2016-09-15T23:33:01Z,2016-09-15T23:33:01Z,MERGED,True,27,27,1,https://github.com/felixjones,"Fixed regex order falling early in arch cases, causing x86_64 and arm…",1,[],https://github.com/mruby/mruby/pull/3210,https://github.com/felixjones,1,https://github.com/mruby/mruby/pull/3210,"…-v7a to use wrong target.
Continuation of #3208
Fixes a dumb error I left in the rule that caused x86_64 to be treated as x86 and armeabi-v7a treated as armeabi. Went unnoticed due to arm compatibility, however x86_64 build was failing on the NDK side of things.
Raises the discussion of using regex as the architecture types in the rule, I did this to mimic the original android rule, but perhaps strings would be a better case. My personal android.rake file uses symbols, but this fails where hyphens are used.","…-v7a to use wrong target.
Continuation of #3208
Fixes a dumb error I left in the rule that caused x86_64 to be treated as x86 and armeabi-v7a treated as armeabi. Went unnoticed due to arm compatibility, however x86_64 build was failing on the NDK side of things.
Raises the discussion of using regex as the architecture types in the rule, I did this to mimic the original android rule, but perhaps strings would be a better case. My personal android.rake file uses symbols, but this fails where hyphens are used.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3211,2016-09-17T21:13:54Z,2016-09-17T23:58:52Z,2016-09-18T10:40:40Z,MERGED,True,4,4,1,https://github.com/eregon,Fix a couple typos in limitations.md,1,[],https://github.com/mruby/mruby/pull/3211,https://github.com/eregon,1,https://github.com/mruby/mruby/pull/3211,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3213,2016-09-21T04:02:25Z,2016-09-21T15:41:04Z,2016-10-28T02:11:42Z,MERGED,True,6,2,1,https://github.com/unak,Visual C++ support of UTF-8 hack on mruby-print,3,[],https://github.com/mruby/mruby/pull/3213,https://github.com/unak,1,https://github.com/mruby/mruby/pull/3213,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3215,2016-09-23T02:00:40Z,2016-09-23T15:38:30Z,2016-09-25T12:50:12Z,CLOSED,False,1,1,1,https://github.com/kou,Add missing MRB_API,1,[],https://github.com/mruby/mruby/pull/3215,https://github.com/kou,1,https://github.com/mruby/mruby/pull/3215,"MRB_API is used implementation in load.c:
MRB_API mrb_irep*
mrb_read_irep_file(mrb_state *mrb, FILE* fp)","MRB_API is used implementation in load.c:
MRB_API mrb_irep*
mrb_read_irep_file(mrb_state *mrb, FILE* fp)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3215,2016-09-23T02:00:40Z,2016-09-23T15:38:30Z,2016-09-25T12:50:12Z,CLOSED,False,1,1,1,https://github.com/kou,Add missing MRB_API,1,[],https://github.com/mruby/mruby/pull/3215,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3215#issuecomment-249224808,"MRB_API is used implementation in load.c:
MRB_API mrb_irep*
mrb_read_irep_file(mrb_state *mrb, FILE* fp)",I considered mrb_read_irep_file() to be an internal function. Do you have any use-case of the function?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3215,2016-09-23T02:00:40Z,2016-09-23T15:38:30Z,2016-09-25T12:50:12Z,CLOSED,False,1,1,1,https://github.com/kou,Add missing MRB_API,1,[],https://github.com/mruby/mruby/pull/3215,https://github.com/kou,3,https://github.com/mruby/mruby/pull/3215#issuecomment-249226439,"MRB_API is used implementation in load.c:
MRB_API mrb_irep*
mrb_read_irep_file(mrb_state *mrb, FILE* fp)","I don't have any use-case. I just want to build (link) error.
Could you remove MRB_API in load.c?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3215,2016-09-23T02:00:40Z,2016-09-23T15:38:30Z,2016-09-25T12:50:12Z,CLOSED,False,1,1,1,https://github.com/kou,Add missing MRB_API,1,[],https://github.com/mruby/mruby/pull/3215,https://github.com/kou,4,https://github.com/mruby/mruby/pull/3215#issuecomment-249226762,"MRB_API is used implementation in load.c:
MRB_API mrb_irep*
mrb_read_irep_file(mrb_state *mrb, FILE* fp)","I just want to ""fix"" build (link) error...",True,{}
mruby/mruby,https://github.com/mruby/mruby,3215,2016-09-23T02:00:40Z,2016-09-23T15:38:30Z,2016-09-25T12:50:12Z,CLOSED,False,1,1,1,https://github.com/kou,Add missing MRB_API,1,[],https://github.com/mruby/mruby/pull/3215,https://github.com/matz,5,https://github.com/mruby/mruby/pull/3215#issuecomment-249294317,"MRB_API is used implementation in load.c:
MRB_API mrb_irep*
mrb_read_irep_file(mrb_state *mrb, FILE* fp)",I see inconsistency.  Will fix.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3215,2016-09-23T02:00:40Z,2016-09-23T15:38:30Z,2016-09-25T12:50:12Z,CLOSED,False,1,1,1,https://github.com/kou,Add missing MRB_API,1,[],https://github.com/mruby/mruby/pull/3215,https://github.com/kou,6,https://github.com/mruby/mruby/pull/3215#issuecomment-249420123,"MRB_API is used implementation in load.c:
MRB_API mrb_irep*
mrb_read_irep_file(mrb_state *mrb, FILE* fp)",Thanks. But I found more same cases. I created a new pull request as #3216.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3216,2016-09-25T12:49:42Z,2016-09-27T01:28:04Z,2016-09-27T03:42:42Z,MERGED,True,3,3,3,https://github.com/kou,Remove needless MRB_API,1,[],https://github.com/mruby/mruby/pull/3216,https://github.com/kou,1,https://github.com/mruby/mruby/pull/3216,"ref #3215
If a function (such as mrb_read_irep_file()) is declared without MRB_API
in header file (such as include/mruby/dump.h), implementation of the
function in source file (such as src/load.c) should also defined without
MRB_API.
If MRB_API is mismatch, Visual C++ reports link error with C2375 error
code: https://msdn.microsoft.com/en-us/library/5k6kw95a.aspx","ref #3215
If a function (such as mrb_read_irep_file()) is declared without MRB_API
in header file (such as include/mruby/dump.h), implementation of the
function in source file (such as src/load.c) should also defined without
MRB_API.
If MRB_API is mismatch, Visual C++ reports link error with C2375 error
code: https://msdn.microsoft.com/en-us/library/5k6kw95a.aspx",True,{}
mruby/mruby,https://github.com/mruby/mruby,3216,2016-09-25T12:49:42Z,2016-09-27T01:28:04Z,2016-09-27T03:42:42Z,MERGED,True,3,3,3,https://github.com/kou,Remove needless MRB_API,1,[],https://github.com/mruby/mruby/pull/3216,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3216#issuecomment-249743231,"ref #3215
If a function (such as mrb_read_irep_file()) is declared without MRB_API
in header file (such as include/mruby/dump.h), implementation of the
function in source file (such as src/load.c) should also defined without
MRB_API.
If MRB_API is mismatch, Visual C++ reports link error with C2375 error
code: https://msdn.microsoft.com/en-us/library/5k6kw95a.aspx",merged. But mrb_str_strlen() should be MRB_API. I will fix.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3216,2016-09-25T12:49:42Z,2016-09-27T01:28:04Z,2016-09-27T03:42:42Z,MERGED,True,3,3,3,https://github.com/kou,Remove needless MRB_API,1,[],https://github.com/mruby/mruby/pull/3216,https://github.com/kou,3,https://github.com/mruby/mruby/pull/3216#issuecomment-249756958,"ref #3215
If a function (such as mrb_read_irep_file()) is declared without MRB_API
in header file (such as include/mruby/dump.h), implementation of the
function in source file (such as src/load.c) should also defined without
MRB_API.
If MRB_API is mismatch, Visual C++ reports link error with C2375 error
code: https://msdn.microsoft.com/en-us/library/5k6kw95a.aspx","Thanks.
BTW, how about removing all MRB_API from **/*.c? They are optional. If we have MRB_API in **/*.h, we don't need to put MRB_API into **/*.c. If we only have MRB_API in **/*.h, we don't need to care about this problem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3216,2016-09-25T12:49:42Z,2016-09-27T01:28:04Z,2016-09-27T03:42:42Z,MERGED,True,3,3,3,https://github.com/kou,Remove needless MRB_API,1,[],https://github.com/mruby/mruby/pull/3216,https://github.com/zzak,4,https://github.com/mruby/mruby/pull/3216#issuecomment-249758701,"ref #3215
If a function (such as mrb_read_irep_file()) is declared without MRB_API
in header file (such as include/mruby/dump.h), implementation of the
function in source file (such as src/load.c) should also defined without
MRB_API.
If MRB_API is mismatch, Visual C++ reports link error with C2375 error
code: https://msdn.microsoft.com/en-us/library/5k6kw95a.aspx","👍 We shouldn't need extern only for declaration, not definition. But, I wonder if changing them all at once will have side-effects 💭",True,{}
mruby/mruby,https://github.com/mruby/mruby,3217,2016-09-26T03:37:46Z,2016-09-27T01:31:48Z,2016-09-27T04:38:45Z,MERGED,True,3,0,1,https://github.com/ksss,Fix unexpected behavior with break,1,[],https://github.com/mruby/mruby/pull/3217,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3217,"I found unexpected behavior.
def yie
  yield
end

def bre
  yie {
    1+1
    break
  }
end

p bre #=> display 2, but should be nil
You can check this behavior on ruby/spec/language/break_spec.rb
This patch fix 2 cases of specs
before:
F..FFF..F.FFF.FFEEE..FE.F.FEE.E
after:
...FFF....FFF.FFEEE..FE.F.FEE.E
Fixed specs:
https://github.com/ruby/spec/blob/d05fabfe0ba3774710d912d2802d6d235c1ed8ae/language/break_spec.rb#L10-L13
https://github.com/ruby/spec/blob/d05fabfe0ba3774710d912d2802d6d235c1ed8ae/language/break_spec.rb#L91-L94","I found unexpected behavior.
def yie
  yield
end

def bre
  yie {
    1+1
    break
  }
end

p bre #=> display 2, but should be nil
You can check this behavior on ruby/spec/language/break_spec.rb
This patch fix 2 cases of specs
before:
F..FFF..F.FFF.FFEEE..FE.F.FEE.E
after:
...FFF....FFF.FFEEE..FE.F.FEE.E
Fixed specs:
https://github.com/ruby/spec/blob/d05fabfe0ba3774710d912d2802d6d235c1ed8ae/language/break_spec.rb#L10-L13
https://github.com/ruby/spec/blob/d05fabfe0ba3774710d912d2802d6d235c1ed8ae/language/break_spec.rb#L91-L94",True,{}
mruby/mruby,https://github.com/mruby/mruby,3217,2016-09-26T03:37:46Z,2016-09-27T01:31:48Z,2016-09-27T04:38:45Z,MERGED,True,3,0,1,https://github.com/ksss,Fix unexpected behavior with break,1,[],https://github.com/mruby/mruby/pull/3217,https://github.com/ksss,2,https://github.com/mruby/mruby/pull/3217#issuecomment-249474959,"I found unexpected behavior.
def yie
  yield
end

def bre
  yie {
    1+1
    break
  }
end

p bre #=> display 2, but should be nil
You can check this behavior on ruby/spec/language/break_spec.rb
This patch fix 2 cases of specs
before:
F..FFF..F.FFF.FFEEE..FE.F.FEE.E
after:
...FFF....FFF.FFEEE..FE.F.FEE.E
Fixed specs:
https://github.com/ruby/spec/blob/d05fabfe0ba3774710d912d2802d6d235c1ed8ae/language/break_spec.rb#L10-L13
https://github.com/ruby/spec/blob/d05fabfe0ba3774710d912d2802d6d235c1ed8ae/language/break_spec.rb#L91-L94","Diff of the results of $ mruby -v t.rb(t.rb is above sample code)
--- a.txt   2016-09-26 12:09:09.000000000 +0900
+++ b.txt   2016-09-26 12:08:55.000000000 +0900
@@ -29,7 +29,7 @@
 00012         NODE_CALL:
 00012           NODE_SELF
 00012           method='bre' (681)
-irep 0x7f99f3d06c10 nregs=4 nlocals=1 pools=0 syms=3 reps=2
+irep 0x7fe370d10b90 nregs=4 nlocals=1 pools=0 syms=3 reps=2
 file: t.rb
     1 000 OP_TCLASS    R1
     1 001 OP_LAMBDA    R2  I(+1)   1
@@ -43,14 +43,14 @@
    12 009 OP_SEND  R1  :p  1
    12 010 OP_STOP

-irep 0x7f99f3d06ee0 nregs=3 nlocals=2 pools=0 syms=1 reps=0
+irep 0x7fe370d10e60 nregs=3 nlocals=2 pools=0 syms=1 reps=0
 file: t.rb
     1 000 OP_ENTER 0:0:0:0:0:0:0
     2 001 OP_BLKPUSH   R2  0:0:0:0
     2 002 OP_SEND  R2  :call   0
     2 003 OP_RETURN    R2  return

-irep 0x7f99f3d07000 nregs=4 nlocals=2 pools=0 syms=1 reps=1
+irep 0x7fe370d10f80 nregs=4 nlocals=2 pools=0 syms=1 reps=1
 file: t.rb
     5 000 OP_ENTER 0:0:0:0:0:0:0
     9 001 OP_LOADSELF  R2
@@ -58,10 +58,11 @@
     6 003 OP_SENDB R2  :yie    0
     6 004 OP_RETURN    R2  return

-irep 0x7f99f3d070a0 nregs=4 nlocals=1 pools=0 syms=1 reps=0
+irep 0x7fe370d11020 nregs=4 nlocals=1 pools=0 syms=1 reps=0
 file: t.rb
     7 000 OP_LOADI R1  1
     7 001 OP_ADDI  R1  :+  1
-    8 002 OP_RETURN    R1  break
+    8 002 OP_LOADNIL   R1
+    8 003 OP_RETURN    R1  break

-2
+nil",True,{}
mruby/mruby,https://github.com/mruby/mruby,3218,2016-09-28T03:30:48Z,2016-09-28T06:51:02Z,2016-09-29T04:44:55Z,MERGED,True,82,82,20,https://github.com/nobu,Removed trailing spaces,1,[],https://github.com/mruby/mruby/pull/3218,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3218,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3222,2016-10-07T21:33:51Z,2016-10-08T01:33:55Z,2016-10-08T01:33:55Z,MERGED,True,34,23,1,https://github.com/felixjones,Android mips/mips64 support,2,[],https://github.com/mruby/mruby/pull/3222,https://github.com/felixjones,1,https://github.com/mruby/mruby/pull/3222,"Added macOS NDK search paths.
The Android SDK now has NDK installation built in, so the task will now favour that if no ndk_home is set.
~/Library/Android is the default for macOS.
The gcc toolchain path has quotes now, this is a minor change but it fixes the possibility of spaces in that path - keeps it consistent with the use of quotes for other paths in the task.","Added macOS NDK search paths.
The Android SDK now has NDK installation built in, so the task will now favour that if no ndk_home is set.
~/Library/Android is the default for macOS.
The gcc toolchain path has quotes now, this is a minor change but it fixes the possibility of spaces in that path - keeps it consistent with the use of quotes for other paths in the task.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3222,2016-10-07T21:33:51Z,2016-10-08T01:33:55Z,2016-10-08T01:33:55Z,MERGED,True,34,23,1,https://github.com/felixjones,Android mips/mips64 support,2,[],https://github.com/mruby/mruby/pull/3222,https://github.com/felixjones,2,https://github.com/mruby/mruby/pull/3222#issuecomment-252384015,"Added macOS NDK search paths.
The Android SDK now has NDK installation built in, so the task will now favour that if no ndk_home is set.
~/Library/Android is the default for macOS.
The gcc toolchain path has quotes now, this is a minor change but it fixes the possibility of spaces in that path - keeps it consistent with the use of quotes for other paths in the task.",This pull request goes towards resolving issue #3208 with  the fixed mips/mips64 support,True,{}
mruby/mruby,https://github.com/mruby/mruby,3223,2016-10-08T14:19:53Z,2016-10-08T14:34:48Z,2016-10-08T14:34:48Z,MERGED,True,26,15,1,https://github.com/felixjones,Android Task GCC support re-added,3,[],https://github.com/mruby/mruby/pull/3223,https://github.com/felixjones,1,https://github.com/mruby/mruby/pull/3223,"This adds GCC compiler support back into the Android build rule. It is there for support, as the default for Android is now Clang (with GCC deprecated).
There are a few things omitted that were in the old Android task; namely hard/soft floating point support and the cortex a8 fix. These should probably be handled as cflags outside of the rule itself.","This adds GCC compiler support back into the Android build rule. It is there for support, as the default for Android is now Clang (with GCC deprecated).
There are a few things omitted that were in the old Android task; namely hard/soft floating point support and the cortex a8 fix. These should probably be handled as cflags outside of the rule itself.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3224,2016-10-12T13:22:14Z,2016-11-11T13:57:52Z,2016-11-12T06:27:22Z,MERGED,True,25,1,2,https://github.com/ksss,Module#define_method supports proc argument,1,[],https://github.com/mruby/mruby/pull/3224,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3224,"Module#define_method supports Proc object in CRuby.
How about supporting this behavior in mruby?","Module#define_method supports Proc object in CRuby.
How about supporting this behavior in mruby?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3228,2016-10-23T09:26:58Z,2016-10-23T16:27:14Z,2016-10-23T23:43:22Z,MERGED,True,1,1,1,https://github.com/ksss,Kernel#respond_to? should return true|false only,1,[],https://github.com/mruby/mruby/pull/3228,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3228,"t.rb
class A
  def respond_to_missing? method, bool
    p [method, bool]
  end
end
p A.new.respond_to?(:foo)
Actual
$ mruby t.rb
[:foo, false]
[:foo, false]

Expect
$ ruby t.rb
[:foo, false]
true","t.rb
class A
  def respond_to_missing? method, bool
    p [method, bool]
  end
end
p A.new.respond_to?(:foo)
Actual
$ mruby t.rb
[:foo, false]
[:foo, false]

Expect
$ ruby t.rb
[:foo, false]
true",True,{}
mruby/mruby,https://github.com/mruby/mruby,3229,2016-10-23T17:48:10Z,2016-10-23T20:55:02Z,2016-10-23T20:55:03Z,CLOSED,False,18,4,3,https://github.com/franckverrot,Make `class` & `module` return a symbol,1,[],https://github.com/mruby/mruby/pull/3229,https://github.com/franckverrot,1,https://github.com/mruby/mruby/pull/3229,"This commit makes the behavior of class and module consistent with how def
is currently working:
class A end      # => :A
class B < A; end # => :B
module M end     # => :M","This commit makes the behavior of class and module consistent with how def
is currently working:
class A end      # => :A
class B < A; end # => :B
module M end     # => :M",True,{}
mruby/mruby,https://github.com/mruby/mruby,3229,2016-10-23T17:48:10Z,2016-10-23T20:55:02Z,2016-10-23T20:55:03Z,CLOSED,False,18,4,3,https://github.com/franckverrot,Make `class` & `module` return a symbol,1,[],https://github.com/mruby/mruby/pull/3229,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3229#issuecomment-255613777,"This commit makes the behavior of class and module consistent with how def
is currently working:
class A end      # => :A
class B < A; end # => :B
module M end     # => :M","Interesting idea, but it's inconsistent with CRuby, so we have to reject now.
We had a similar proposal for CRuby in the past, but we rejected we could not define appropriate behavior for the return value from class Foo::Bar; end.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3232,2016-11-02T18:46:35Z,2016-11-03T04:39:24Z,2016-11-03T04:39:24Z,MERGED,True,3,2,1,https://github.com/lukaselmer,Update documentation of fetch,1,[],https://github.com/mruby/mruby/pull/3232,https://github.com/lukaselmer,1,https://github.com/mruby/mruby/pull/3232,The sentence Negative values of +index+ count from the end of the array. can be interpreted that it only holds if a block is given. Clarify it.,The sentence Negative values of +index+ count from the end of the array. can be interpreted that it only holds if a block is given. Clarify it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3234,2016-11-06T13:25:40Z,2016-11-10T23:24:53Z,2016-11-10T23:24:53Z,MERGED,True,67,6,6,https://github.com/felixjones,Add mrb_class_defined_under,8,[],https://github.com/mruby/mruby/pull/3234,https://github.com/felixjones,1,https://github.com/mruby/mruby/pull/3234,"Works the same way as mrb_class_defined but uses mrb_const_defined_at with a given outer class to test if an inner class is defined.
Example code for checking if an inner class of a module is defined:
void
mrb_example_gem_init(mrb_state* mrb) {
  struct RClass *example_outer, *example_inner;
  mrb_bool cd;

  example_outer = mrb_define_module(mrb, ""ExampleOuter"");

  example_inner = mrb_define_class_under(mrb, example_outer, ""ExampleInner"", mrb->object_class);
  cd = mrb_class_under_defined(mrb, example_outer, ""ExampleInner"");

  // If mrb_class_under_defined returns 1 then puts ""True""
  // If mrb_class_under_defined returns 0 then puts ""False""
  if (cd == 1){
    puts(""True"");
  }
  else {
    puts(""False"");
  }
}","Works the same way as mrb_class_defined but uses mrb_const_defined_at with a given outer class to test if an inner class is defined.
Example code for checking if an inner class of a module is defined:
void
mrb_example_gem_init(mrb_state* mrb) {
  struct RClass *example_outer, *example_inner;
  mrb_bool cd;

  example_outer = mrb_define_module(mrb, ""ExampleOuter"");

  example_inner = mrb_define_class_under(mrb, example_outer, ""ExampleInner"", mrb->object_class);
  cd = mrb_class_under_defined(mrb, example_outer, ""ExampleInner"");

  // If mrb_class_under_defined returns 1 then puts ""True""
  // If mrb_class_under_defined returns 0 then puts ""False""
  if (cd == 1){
    puts(""True"");
  }
  else {
    puts(""False"");
  }
}",True,{}
mruby/mruby,https://github.com/mruby/mruby,3234,2016-11-06T13:25:40Z,2016-11-10T23:24:53Z,2016-11-10T23:24:53Z,MERGED,True,67,6,6,https://github.com/felixjones,Add mrb_class_defined_under,8,[],https://github.com/mruby/mruby/pull/3234,https://github.com/felixjones,2,https://github.com/mruby/mruby/pull/3234#issuecomment-259414945,"Works the same way as mrb_class_defined but uses mrb_const_defined_at with a given outer class to test if an inner class is defined.
Example code for checking if an inner class of a module is defined:
void
mrb_example_gem_init(mrb_state* mrb) {
  struct RClass *example_outer, *example_inner;
  mrb_bool cd;

  example_outer = mrb_define_module(mrb, ""ExampleOuter"");

  example_inner = mrb_define_class_under(mrb, example_outer, ""ExampleInner"", mrb->object_class);
  cd = mrb_class_under_defined(mrb, example_outer, ""ExampleInner"");

  // If mrb_class_under_defined returns 1 then puts ""True""
  // If mrb_class_under_defined returns 0 then puts ""False""
  if (cd == 1){
    puts(""True"");
  }
  else {
    puts(""False"");
  }
}","One point to talk about is if this should be ""mrb_class_under_defined"" or ""mrb_class_defined_under"". The latter (which is not used in this PR) makes more sense when spoken aloud as ""if mrb_class_defined_under"", however the former treats classes defined under other classes as their own type as ""class_under"".",True,{}
mruby/mruby,https://github.com/mruby/mruby,3234,2016-11-06T13:25:40Z,2016-11-10T23:24:53Z,2016-11-10T23:24:53Z,MERGED,True,67,6,6,https://github.com/felixjones,Add mrb_class_defined_under,8,[],https://github.com/mruby/mruby/pull/3234,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3234#issuecomment-259787911,"Works the same way as mrb_class_defined but uses mrb_const_defined_at with a given outer class to test if an inner class is defined.
Example code for checking if an inner class of a module is defined:
void
mrb_example_gem_init(mrb_state* mrb) {
  struct RClass *example_outer, *example_inner;
  mrb_bool cd;

  example_outer = mrb_define_module(mrb, ""ExampleOuter"");

  example_inner = mrb_define_class_under(mrb, example_outer, ""ExampleInner"", mrb->object_class);
  cd = mrb_class_under_defined(mrb, example_outer, ""ExampleInner"");

  // If mrb_class_under_defined returns 1 then puts ""True""
  // If mrb_class_under_defined returns 0 then puts ""False""
  if (cd == 1){
    puts(""True"");
  }
  else {
    puts(""False"");
  }
}","I'd rather name it mrb_class_defined_under() according to CRuby naming convention.
Shall I modify your PR, or will you do it for yourself?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3234,2016-11-06T13:25:40Z,2016-11-10T23:24:53Z,2016-11-10T23:24:53Z,MERGED,True,67,6,6,https://github.com/felixjones,Add mrb_class_defined_under,8,[],https://github.com/mruby/mruby/pull/3234,https://github.com/felixjones,4,https://github.com/mruby/mruby/pull/3234#issuecomment-259788525,"Works the same way as mrb_class_defined but uses mrb_const_defined_at with a given outer class to test if an inner class is defined.
Example code for checking if an inner class of a module is defined:
void
mrb_example_gem_init(mrb_state* mrb) {
  struct RClass *example_outer, *example_inner;
  mrb_bool cd;

  example_outer = mrb_define_module(mrb, ""ExampleOuter"");

  example_inner = mrb_define_class_under(mrb, example_outer, ""ExampleInner"", mrb->object_class);
  cd = mrb_class_under_defined(mrb, example_outer, ""ExampleInner"");

  // If mrb_class_under_defined returns 1 then puts ""True""
  // If mrb_class_under_defined returns 0 then puts ""False""
  if (cd == 1){
    puts(""True"");
  }
  else {
    puts(""False"");
  }
}",I'll go ahead and do it,True,{}
mruby/mruby,https://github.com/mruby/mruby,3240,2016-11-10T12:20:08Z,2016-11-11T04:36:53Z,2016-11-22T09:47:53Z,MERGED,True,1,1,1,https://github.com/dabroz,test/assert.rb should not use puts,1,[],https://github.com/mruby/mruby/pull/3240,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3240,Is there a reason for test/assert.rb to use puts? This requires mruby-print gem to be always included in tests. We should be able to use t_print (which calls __t_printstr__ from test driver) instead.,Is there a reason for test/assert.rb to use puts? This requires mruby-print gem to be always included in tests. We should be able to use t_print (which calls __t_printstr__ from test driver) instead.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3246,2016-11-11T07:04:27Z,2016-11-11T11:43:22Z,2016-11-12T06:27:03Z,MERGED,True,33,23,2,https://github.com/ksss,Reimplement Enumerable#cycle ,2,[],https://github.com/mruby/mruby/pull/3246,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3246,"I tryed mruby-spec with enumerable and encountered infinite loop
Because this code run inifinity
class Empty
  include Enumerable
  def each
  end
end
Empty.new.cycle { break :nope }
So, I supported all specs in https://github.com/ruby/spec/blob/27960d06e0ce92c37f074450f0eab4b0519b118c/core/enumerable/cycle_spec.rb without Enumerable#size","I tryed mruby-spec with enumerable and encountered infinite loop
Because this code run inifinity
class Empty
  include Enumerable
  def each
  end
end
Empty.new.cycle { break :nope }
So, I supported all specs in https://github.com/ruby/spec/blob/27960d06e0ce92c37f074450f0eab4b0519b118c/core/enumerable/cycle_spec.rb without Enumerable#size",True,{}
mruby/mruby,https://github.com/mruby/mruby,3250,2016-11-16T14:49:46Z,2016-11-16T15:41:54Z,2016-11-22T09:46:55Z,MERGED,True,4,4,3,https://github.com/dabroz,Correct argument specifications for few methods,1,[],https://github.com/mruby/mruby/pull/3250,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3250,"Struct#values_at
Module#define_method
String#chop
String#chop!","Struct#values_at
Module#define_method
String#chop
String#chop!",True,{}
mruby/mruby,https://github.com/mruby/mruby,3251,2016-11-16T21:13:57Z,2016-11-17T08:21:11Z,2017-01-19T11:07:01Z,CLOSED,False,318,3,10,https://github.com/dabroz,Inline structure data type for mruby (MRB_TT_INLINE),1,[],https://github.com/mruby/mruby/pull/3251,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3251,"New data type MRB_TT_INLINE is introduced.
Inline structures have no instance variables, no finalizer, and offer as much space as possible in RBASIC object. This means 24 bytes on 64-bit platforms and 12 bytes on 32-bit platforms. Inline structures are always copied by value.
Only additions to core are 3 simple inline methods in inline.h. No extra classes are introduced. No C and/or Ruby gem code is added.
mruby-inline-struct gem is only provided for testing.
Fixes #3237.","New data type MRB_TT_INLINE is introduced.
Inline structures have no instance variables, no finalizer, and offer as much space as possible in RBASIC object. This means 24 bytes on 64-bit platforms and 12 bytes on 32-bit platforms. Inline structures are always copied by value.
Only additions to core are 3 simple inline methods in inline.h. No extra classes are introduced. No C and/or Ruby gem code is added.
mruby-inline-struct gem is only provided for testing.
Fixes #3237.",True,{'THUMBS_UP': ['https://github.com/rmosolgo']}
mruby/mruby,https://github.com/mruby/mruby,3251,2016-11-16T21:13:57Z,2016-11-17T08:21:11Z,2017-01-19T11:07:01Z,CLOSED,False,318,3,10,https://github.com/dabroz,Inline structure data type for mruby (MRB_TT_INLINE),1,[],https://github.com/mruby/mruby/pull/3251,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3251#issuecomment-261182808,"New data type MRB_TT_INLINE is introduced.
Inline structures have no instance variables, no finalizer, and offer as much space as possible in RBASIC object. This means 24 bytes on 64-bit platforms and 12 bytes on 32-bit platforms. Inline structures are always copied by value.
Only additions to core are 3 simple inline methods in inline.h. No extra classes are introduced. No C and/or Ruby gem code is added.
mruby-inline-struct gem is only provided for testing.
Fixes #3237.",Nice idea&implementation. I will merge this after small modifications.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3251,2016-11-16T21:13:57Z,2016-11-17T08:21:11Z,2017-01-19T11:07:01Z,CLOSED,False,318,3,10,https://github.com/dabroz,Inline structure data type for mruby (MRB_TT_INLINE),1,[],https://github.com/mruby/mruby/pull/3251,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3251#issuecomment-261183619,"New data type MRB_TT_INLINE is introduced.
Inline structures have no instance variables, no finalizer, and offer as much space as possible in RBASIC object. This means 24 bytes on 64-bit platforms and 12 bytes on 32-bit platforms. Inline structures are always copied by value.
Only additions to core are 3 simple inline methods in inline.h. No extra classes are introduced. No C and/or Ruby gem code is added.
mruby-inline-struct gem is only provided for testing.
Fixes #3237.",merged. thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3251,2016-11-16T21:13:57Z,2016-11-17T08:21:11Z,2017-01-19T11:07:01Z,CLOSED,False,318,3,10,https://github.com/dabroz,Inline structure data type for mruby (MRB_TT_INLINE),1,[],https://github.com/mruby/mruby/pull/3251,https://github.com/dabroz,4,https://github.com/mruby/mruby/pull/3251#issuecomment-261232053,"New data type MRB_TT_INLINE is introduced.
Inline structures have no instance variables, no finalizer, and offer as much space as possible in RBASIC object. This means 24 bytes on 64-bit platforms and 12 bytes on 32-bit platforms. Inline structures are always copied by value.
Only additions to core are 3 simple inline methods in inline.h. No extra classes are introduced. No C and/or Ruby gem code is added.
mruby-inline-struct gem is only provided for testing.
Fixes #3237.","Great! Thanks for including these changes so quickly.
I also measured performance boost in mruby-float4. In 64-bit mode (in 32-bit the space is too small to use), it executes bm_ao_render_float4 benchmark 15% faster using istruct!",True,{}
mruby/mruby,https://github.com/mruby/mruby,3251,2016-11-16T21:13:57Z,2016-11-17T08:21:11Z,2017-01-19T11:07:01Z,CLOSED,False,318,3,10,https://github.com/dabroz,Inline structure data type for mruby (MRB_TT_INLINE),1,[],https://github.com/mruby/mruby/pull/3251,https://github.com/matz,5,https://github.com/mruby/mruby/pull/3251#issuecomment-261269625,"New data type MRB_TT_INLINE is introduced.
Inline structures have no instance variables, no finalizer, and offer as much space as possible in RBASIC object. This means 24 bytes on 64-bit platforms and 12 bytes on 32-bit platforms. Inline structures are always copied by value.
Only additions to core are 3 simple inline methods in inline.h. No extra classes are introduced. No C and/or Ruby gem code is added.
mruby-inline-struct gem is only provided for testing.
Fixes #3237.",nice.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3251,2016-11-16T21:13:57Z,2016-11-17T08:21:11Z,2017-01-19T11:07:01Z,CLOSED,False,318,3,10,https://github.com/dabroz,Inline structure data type for mruby (MRB_TT_INLINE),1,[],https://github.com/mruby/mruby/pull/3251,https://github.com/dabroz,6,https://github.com/mruby/mruby/pull/3251#issuecomment-273746967,"New data type MRB_TT_INLINE is introduced.
Inline structures have no instance variables, no finalizer, and offer as much space as possible in RBASIC object. This means 24 bytes on 64-bit platforms and 12 bytes on 32-bit platforms. Inline structures are always copied by value.
Only additions to core are 3 simple inline methods in inline.h. No extra classes are introduced. No C and/or Ruby gem code is added.
mruby-inline-struct gem is only provided for testing.
Fixes #3237.",cc #3140,True,{}
mruby/mruby,https://github.com/mruby/mruby,3252,2016-11-17T00:41:50Z,2016-11-17T07:46:26Z,2016-11-17T10:24:34Z,MERGED,True,0,8,1,https://github.com/BanzaiMan,Remove webhook notification for Travis CI,1,[],https://github.com/mruby/mruby/pull/3252,https://github.com/BanzaiMan,1,https://github.com/mruby/mruby/pull/3252,"travis-rubies now uses 3 Mac jobs to create archives for various OS
releases.
This is a bit wasteful if multiple builds pass in a short period.
Instead, Travis CI is now running a nightly build of mruby-head
(around 22:30 UTC). This will happen regardless of the state of the
master branch.","travis-rubies now uses 3 Mac jobs to create archives for various OS
releases.
This is a bit wasteful if multiple builds pass in a short period.
Instead, Travis CI is now running a nightly build of mruby-head
(around 22:30 UTC). This will happen regardless of the state of the
master branch.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3253,2016-11-17T06:05:08Z,2016-11-17T07:44:58Z,2016-11-19T00:36:46Z,MERGED,True,5,0,2,https://github.com/ksss,Ranges should not rewrite,1,[],https://github.com/mruby/mruby/pull/3253,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3253,"In comments say ""Ranges are immutable, so that they should be initialized only once.""
But Range object can rewrite by Range#initialize.
$ mirb
mirb - Embeddable Interactive Ruby Shell

> range = (0..1)
 => 0..1
> range.send(:initialize, 1, 3)
 => 1..3
> range
 => 1..3
CRuby raise NameError in this case.
$ irb
irb(main):001:0> (0..1).send(:initialize, 1, 3)
NameError: `initialize' called twice","In comments say ""Ranges are immutable, so that they should be initialized only once.""
But Range object can rewrite by Range#initialize.
$ mirb
mirb - Embeddable Interactive Ruby Shell

> range = (0..1)
 => 0..1
> range.send(:initialize, 1, 3)
 => 1..3
> range
 => 1..3
CRuby raise NameError in this case.
$ irb
irb(main):001:0> (0..1).send(:initialize, 1, 3)
NameError: `initialize' called twice",True,{}
mruby/mruby,https://github.com/mruby/mruby,3254,2016-11-17T10:54:24Z,2016-11-17T15:02:58Z,2016-11-17T15:08:38Z,MERGED,True,207,8,2,https://github.com/herwinw,Doc,3,[],https://github.com/mruby/mruby/pull/3254,https://github.com/herwinw,1,https://github.com/mruby/mruby/pull/3254,"Just targeted the array and hash methods for now. Of course this is far from complete, but it is an improvement.","Just targeted the array and hash methods for now. Of course this is far from complete, but it is an improvement.",True,"{'THUMBS_UP': ['https://github.com/dabroz', 'https://github.com/0x1eef']}"
mruby/mruby,https://github.com/mruby/mruby,3255,2016-11-18T01:12:02Z,2016-11-18T02:48:49Z,2016-11-18T06:29:13Z,MERGED,True,5,4,2,https://github.com/ksss,Fix condition of Range#include?,1,[],https://github.com/mruby/mruby/pull/3255,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3255,"Expect
p (1...10).include?(9) #=> true
p (1...10).include?(10) #=> false
Actual
p (1...10).include?(9) #=> true
p (1...10).include?(10) #=> true
Maybe missed in be5986b","Expect
p (1...10).include?(9) #=> true
p (1...10).include?(10) #=> false
Actual
p (1...10).include?(9) #=> true
p (1...10).include?(10) #=> true
Maybe missed in be5986b",True,{}
mruby/mruby,https://github.com/mruby/mruby,3256,2016-11-18T18:18:22Z,2016-12-05T15:20:34Z,2016-12-05T15:20:34Z,CLOSED,False,452,9,7,https://github.com/bouk,Hash object_id to prevent programs from knowing pointers,1,[],https://github.com/mruby/mruby/pull/3256,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3256,"While running the Shopify bug bounty for mruby we noticed that a lot of exploits utilize the fact that object_id is directly related to the memory address of an object, which makes it very easy to construct arbitrary objects in memory.
This PR fixes the issue by applying a randomly seeded hash to object_id, resulting in object_ids being nondeterministic.
Results
Running this file after compiling with MRB_INT64 and MRB_WORD_BOXING
# id.rb
puts Object.new.object_id
puts Object.new.object_id
puts Object.new.object_id

Before this PR
~/src/github.com/mruby/mruby (master) bin/mruby ./id.rb
140338777833864
140338777833576
140338777833000
~/src/github.com/mruby/mruby (master) bin/mruby ./id.rb
140526011564424
140526011564136
140526011563560
~/src/github.com/mruby/mruby (master) bin/mruby ./id.rb
140254254219656
140254254219368
140254254218792

After this PR
~/src/github.com/mruby/mruby (hash-object-id) bin/mruby ./id.rb
-4501018806046184518
-2341758151096772472
-785186630034095801
~/src/github.com/mruby/mruby (hash-object-id) bin/mruby ./id.rb
552799609413634798
3966797781753601314
4531261121971834197
~/src/github.com/mruby/mruby (hash-object-id) bin/mruby ./id.rb
-962803763787832197
2853411265111984547
2087943745143658397

Choice of hash code
I decided to go with the libsodium implementations of siphash and cryptographically secure bytes, because libsodium is very widely used, and the code is released under ISC, which is compatible with MIT.
For review @fbogsany @matz","While running the Shopify bug bounty for mruby we noticed that a lot of exploits utilize the fact that object_id is directly related to the memory address of an object, which makes it very easy to construct arbitrary objects in memory.
This PR fixes the issue by applying a randomly seeded hash to object_id, resulting in object_ids being nondeterministic.
Results
Running this file after compiling with MRB_INT64 and MRB_WORD_BOXING
# id.rb
puts Object.new.object_id
puts Object.new.object_id
puts Object.new.object_id

Before this PR
~/src/github.com/mruby/mruby (master) bin/mruby ./id.rb
140338777833864
140338777833576
140338777833000
~/src/github.com/mruby/mruby (master) bin/mruby ./id.rb
140526011564424
140526011564136
140526011563560
~/src/github.com/mruby/mruby (master) bin/mruby ./id.rb
140254254219656
140254254219368
140254254218792

After this PR
~/src/github.com/mruby/mruby (hash-object-id) bin/mruby ./id.rb
-4501018806046184518
-2341758151096772472
-785186630034095801
~/src/github.com/mruby/mruby (hash-object-id) bin/mruby ./id.rb
552799609413634798
3966797781753601314
4531261121971834197
~/src/github.com/mruby/mruby (hash-object-id) bin/mruby ./id.rb
-962803763787832197
2853411265111984547
2087943745143658397

Choice of hash code
I decided to go with the libsodium implementations of siphash and cryptographically secure bytes, because libsodium is very widely used, and the code is released under ISC, which is compatible with MIT.
For review @fbogsany @matz",True,{}
mruby/mruby,https://github.com/mruby/mruby,3256,2016-11-18T18:18:22Z,2016-12-05T15:20:34Z,2016-12-05T15:20:34Z,CLOSED,False,452,9,7,https://github.com/bouk,Hash object_id to prevent programs from knowing pointers,1,[],https://github.com/mruby/mruby/pull/3256,https://github.com/isra17,2,https://github.com/mruby/mruby/pull/3256#issuecomment-261617678,"While running the Shopify bug bounty for mruby we noticed that a lot of exploits utilize the fact that object_id is directly related to the memory address of an object, which makes it very easy to construct arbitrary objects in memory.
This PR fixes the issue by applying a randomly seeded hash to object_id, resulting in object_ids being nondeterministic.
Results
Running this file after compiling with MRB_INT64 and MRB_WORD_BOXING
# id.rb
puts Object.new.object_id
puts Object.new.object_id
puts Object.new.object_id

Before this PR
~/src/github.com/mruby/mruby (master) bin/mruby ./id.rb
140338777833864
140338777833576
140338777833000
~/src/github.com/mruby/mruby (master) bin/mruby ./id.rb
140526011564424
140526011564136
140526011563560
~/src/github.com/mruby/mruby (master) bin/mruby ./id.rb
140254254219656
140254254219368
140254254218792

After this PR
~/src/github.com/mruby/mruby (hash-object-id) bin/mruby ./id.rb
-4501018806046184518
-2341758151096772472
-785186630034095801
~/src/github.com/mruby/mruby (hash-object-id) bin/mruby ./id.rb
552799609413634798
3966797781753601314
4531261121971834197
~/src/github.com/mruby/mruby (hash-object-id) bin/mruby ./id.rb
-962803763787832197
2853411265111984547
2087943745143658397

Choice of hash code
I decided to go with the libsodium implementations of siphash and cryptographically secure bytes, because libsodium is very widely used, and the code is released under ISC, which is compatible with MIT.
For review @fbogsany @matz","Does it really need to be hashed though? Generating a random seed stored in the mrb_value state and XORing it to an object pointer should be sufficient to avoid easy memory leak. At worst, it might allow an attacker to get hint about an object location relative to another, but should leave many ASLR bits unleakable. Faster and simpler implementation than hashing and no improbable, but possible collision on 32bits.
Class.new.to_s and Proc.new{}.to_s should also be addressed as they leak heap address as well.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3257,2016-11-19T00:55:48Z,2016-11-20T16:15:37Z,2016-11-20T23:58:14Z,MERGED,True,25,10,2,https://github.com/ksss,Fix Range#size results,2,[],https://github.com/mruby/mruby/pull/3257,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3257,"Actual
$ mirb
mirb - Embeddable Interactive Ruby Shell

> (1.0..15.9).size
 => 16
> (0..Float::INFINITY).size
 => -2147483648
Expect
$ irb
irb(main):001:0> (1.0..15.9).size
=> 15
irb(main):002:0> (0..Float::INFINITY).size
=> Infinity
This fix passed all specs of that https://github.com/ruby/spec/blob/66daf290cb49707190481b4cf24e700010cd53bf/core/range/size_spec.rb","Actual
$ mirb
mirb - Embeddable Interactive Ruby Shell

> (1.0..15.9).size
 => 16
> (0..Float::INFINITY).size
 => -2147483648
Expect
$ irb
irb(main):001:0> (1.0..15.9).size
=> 15
irb(main):002:0> (0..Float::INFINITY).size
=> Infinity
This fix passed all specs of that https://github.com/ruby/spec/blob/66daf290cb49707190481b4cf24e700010cd53bf/core/range/size_spec.rb",True,{}
mruby/mruby,https://github.com/mruby/mruby,3257,2016-11-19T00:55:48Z,2016-11-20T16:15:37Z,2016-11-20T23:58:14Z,MERGED,True,25,10,2,https://github.com/ksss,Fix Range#size results,2,[],https://github.com/mruby/mruby/pull/3257,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3257#issuecomment-261715293,"Actual
$ mirb
mirb - Embeddable Interactive Ruby Shell

> (1.0..15.9).size
 => 16
> (0..Float::INFINITY).size
 => -2147483648
Expect
$ irb
irb(main):001:0> (1.0..15.9).size
=> 15
irb(main):002:0> (0..Float::INFINITY).size
=> Infinity
This fix passed all specs of that https://github.com/ruby/spec/blob/66daf290cb49707190481b4cf24e700010cd53bf/core/range/size_spec.rb","mrb_float would be better, although I saw a lot of doubles in old code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3257,2016-11-19T00:55:48Z,2016-11-20T16:15:37Z,2016-11-20T23:58:14Z,MERGED,True,25,10,2,https://github.com/ksss,Fix Range#size results,2,[],https://github.com/mruby/mruby/pull/3257,https://github.com/ksss,3,https://github.com/mruby/mruby/pull/3257#issuecomment-261716871,"Actual
$ mirb
mirb - Embeddable Interactive Ruby Shell

> (1.0..15.9).size
 => 16
> (0..Float::INFINITY).size
 => -2147483648
Expect
$ irb
irb(main):001:0> (1.0..15.9).size
=> 15
irb(main):002:0> (0..Float::INFINITY).size
=> Infinity
This fix passed all specs of that https://github.com/ruby/spec/blob/66daf290cb49707190481b4cf24e700010cd53bf/core/range/size_spec.rb","Thank you, I fixed it!",True,{'THUMBS_UP': ['https://github.com/dabroz']}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3258,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.",True,{'THUMBS_UP': ['https://github.com/qnet-herwin']}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,2,https://github.com/mruby/mruby/pull/3258#issuecomment-261924114,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","With #3262, travis status increases from 13/96 correct builds to 15/96 correct builds. Fixed are:

compiler: gcc, os: osx, env: CFLAGS='-DMRB_NAN_BOXING=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-DMRB_NAN_BOXING=1' LDFLAGS=''",True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,3,https://github.com/mruby/mruby/pull/3258#issuecomment-262206259,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","With #3260, we now have 20/96 passing builds. Fixed are:

compiler: gcc, os: linux, env: CFLAGS='-m32 -DMRB_INT16=1' LDFLAGS='-m32'
compiler: gcc, os: linux, env: CFLAGS='-DMRB_INT16=1' LDFLAGS=''
compiler: gcc, os: osx, env: CFLAGS='-DMRB_INT16=1' LDFLAGS=''
compiler: clang, os: linux, env: CFLAGS='-DMRB_INT16=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-DMRB_INT16=1' LDFLAGS=''",True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,4,https://github.com/mruby/mruby/pull/3258#issuecomment-262483399,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","With #3267, we have 32 passing builds. Fixed are:

compiler: gcc, os: osx, env: CFLAGS='-m32 ' LDFLAGS='-m32'
compiler: gcc, os: osx, env: CFLAGS='-m32 -DMRB_NAN_BOXING=1' LDFLAGS='-m32'
compiler: gcc, os: osx, env: CFLAGS='-m32 -DMRB_INT16=1' LDFLAGS='-m32'
compiler: gcc, os: osx, env: CFLAGS='-m32 -DMRB_INT64=1' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-m32 ' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-m32 -DMRB_NAN_BOXING=1' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-m32 -DMRB_INT16=1' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-m32 -DMRB_INT64=1' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-m32 ' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-m32 -DMRB_NAN_BOXING=1' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-m32 -DMRB_INT16=1' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-m32 -DMRB_INT64=1' LDFLAGS='-m32'",True,"{'THUMBS_UP': ['https://github.com/bovi'], 'HOORAY': ['https://github.com/bovi']}"
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/bovi,5,https://github.com/mruby/mruby/pull/3258#issuecomment-262484445,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.",@dabroz this is amazing work!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,6,https://github.com/mruby/mruby/pull/3258#issuecomment-262485761,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","Thanks! :) I think that having so many configuration options is great, as long as we are testing compatibility for all of them. Otherwise it can be very easy (esp. for new users) to run into a rarely inspected corner.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,7,https://github.com/mruby/mruby/pull/3258#issuecomment-262766272,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","We are now at 44 passing builds. Fixed are:

compiler: gcc, os: linux, env: CFLAGS='-m32 -DMRB_WORD_BOXING=1' LDFLAGS='-m32'
compiler: gcc, os: linux, env: CFLAGS='-DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: gcc, os: linux, env: CFLAGS='-DMRB_INT64=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: gcc, os: osx, env: CFLAGS='-m32 -DMRB_WORD_BOXING=1' LDFLAGS='-m32'
compiler: gcc, os: osx, env: CFLAGS='-DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: gcc, os: osx, env: CFLAGS='-DMRB_INT64=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: clang, os: linux, env: CFLAGS='-m32 -DMRB_WORD_BOXING=1' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: clang, os: linux, env: CFLAGS='-DMRB_INT64=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-m32 -DMRB_WORD_BOXING=1' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-DMRB_INT64=1 -DMRB_WORD_BOXING=1' LDFLAGS=''",True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,8,https://github.com/mruby/mruby/pull/3258#issuecomment-262777283,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","With #3277 merged in, we now have 80/96 passing builds, yay!
Fixed are:

compiler: gcc, os: linux, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1' LDFLAGS='-m32'
compiler: gcc, os: linux, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_WORD_BOXING=1' LDFLAGS='-m32'
compiler: gcc, os: linux, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_INT16=1' LDFLAGS='-m32'
compiler: gcc, os: linux, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_INT64=1' LDFLAGS='-m32'
compiler: gcc, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1' LDFLAGS=''
compiler: gcc, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: gcc, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT16=1' LDFLAGS=''
compiler: gcc, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT64=1' LDFLAGS=''
compiler: gcc, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT64=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: gcc, os: osx, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1' LDFLAGS='-m32'
compiler: gcc, os: osx, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_WORD_BOXING=1' LDFLAGS='-m32'
compiler: gcc, os: osx, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_INT16=1' LDFLAGS='-m32'
compiler: gcc, os: osx, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_INT64=1' LDFLAGS='-m32'
compiler: gcc, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1' LDFLAGS=''
compiler: gcc, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: gcc, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT16=1' LDFLAGS=''
compiler: gcc, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT64=1' LDFLAGS=''
compiler: gcc, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT64=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: clang, os: linux, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_WORD_BOXING=1' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_INT16=1' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_INT64=1' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1' LDFLAGS=''
compiler: clang, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: clang, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT16=1' LDFLAGS=''
compiler: clang, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT64=1' LDFLAGS=''
compiler: clang, os: linux, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT64=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_WORD_BOXING=1' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_INT16=1' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-m32 -DMRB_USE_FLOAT=1 -DMRB_INT64=1' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_WORD_BOXING=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT16=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT64=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-DMRB_USE_FLOAT=1 -DMRB_INT64=1 -DMRB_WORD_BOXING=1' LDFLAGS=''",True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,9,https://github.com/mruby/mruby/pull/3258#issuecomment-263068515,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","With #3299 we now have 88/96 passing builds. Fixed are:

compiler: gcc, os: linux, env: CFLAGS='-m32 -DMRB_INT16=1 -DMRB_NAN_BOXING=1' LDFLAGS='-m32'
compiler: gcc, os: linux, env: CFLAGS='-DMRB_INT16=1 -DMRB_NAN_BOXING=1' LDFLAGS=''
compiler: gcc, os: osx, env: CFLAGS='-m32 -DMRB_INT16=1 -DMRB_NAN_BOXING=1' LDFLAGS='-m32'
compiler: gcc, os: osx, env: CFLAGS='-DMRB_INT16=1 -DMRB_NAN_BOXING=1' LDFLAGS=''
compiler: clang, os: linux, env: CFLAGS='-m32 -DMRB_INT16=1 -DMRB_NAN_BOXING=1' LDFLAGS='-m32'
compiler: clang, os: linux, env: CFLAGS='-DMRB_INT16=1 -DMRB_NAN_BOXING=1' LDFLAGS=''
compiler: clang, os: osx, env: CFLAGS='-m32 -DMRB_INT16=1 -DMRB_NAN_BOXING=1' LDFLAGS='-m32'
compiler: clang, os: osx, env: CFLAGS='-DMRB_INT16=1 -DMRB_NAN_BOXING=1' LDFLAGS=''",True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,10,https://github.com/mruby/mruby/pull/3258#issuecomment-263120199,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","These last 8 missing configurations were incorrect and a safeguard has been added in #3301.
Therefore, all configurations (88 jobs) are now passing.",True,{'HOORAY': ['https://github.com/rmosolgo']}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/matz,11,https://github.com/mruby/mruby/pull/3258#issuecomment-263120553,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","So now we can close this issue, can we?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,12,https://github.com/mruby/mruby/pull/3258#issuecomment-263121626,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.","I advocate to merge this. It significantly increases time required for Travis to complete checks on every future pull request, but prevents accidental breaking of some rarely-used build configuration (like NaN-boxed 32-bit build with 16-bit integers) - which is hard to do without CI.
However if that is unacceptable, we can simply re-run these tests periodically.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/matz,13,https://github.com/mruby/mruby/pull/3258#issuecomment-263121950,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.",The significant increase of test time is unacceptable.  Maybe we can add alternative build_config.rb for this combinational test so that I (or someone else) can run it time to time.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3258,2016-11-20T23:42:34Z,2016-11-27T13:27:22Z,2016-11-27T13:27:22Z,CLOSED,False,70,13,2,https://github.com/dabroz,Travis tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3258,https://github.com/dabroz,14,https://github.com/mruby/mruby/pull/3258#issuecomment-263122139,"mruby has many configuration options and I wanted to check how these configurations behave. So I've added support for multiple configurations in Travis testing, including:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
GCC/clang
Linux/OSX

with unsupported configurations like float + NaN boxing removed from the pool.
The results are not so good. Most non-standard configurations crash or fail tests. Of all 96 possible configurations, only 13 build and test correctly.
I'll try to submit patches where possible, and create issues for more complex problems.",OK. I'll try to devise an alternative method to run these tests.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3259,2016-11-20T23:43:33Z,2016-11-21T01:22:47Z,2016-11-21T11:05:43Z,MERGED,True,1,1,1,https://github.com/dabroz,Fix for sprintf test exceeding bounds with MRB_INT16,1,[],https://github.com/mruby/mruby/pull/3259,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3259,This is an artifact discovered during #3258. 1 << 15 is too big to fit a 16-bit int.,This is an artifact discovered during #3258. 1 << 15 is too big to fit a 16-bit int.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3261,2016-11-21T08:11:17Z,2016-11-22T07:38:24Z,2016-11-22T08:41:05Z,MERGED,True,32,27,3,https://github.com/ksss,Reimplements Range#first,1,[],https://github.com/mruby/mruby/pull/3261,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3261,"Range#first with argument works like Enumerable#take.
Range#first shouldn't call Range#to_a on infinity range.
$ mirb
mirb - Embeddable Interactive Ruby Shell

> (0..Float::INFINITY).first(3)
# ...infinite loop...
So, I reimplemented Range#first with Ruby code.
Because it hard to write break in iterator on C functions.
And this implementation passed specs of that https://github.com/ruby/spec/blob/66daf290cb49707190481b4cf24e700010cd53bf/core/range/first_spec.rb
(I know that it's a bit too strictly)","Range#first with argument works like Enumerable#take.
Range#first shouldn't call Range#to_a on infinity range.
$ mirb
mirb - Embeddable Interactive Ruby Shell

> (0..Float::INFINITY).first(3)
# ...infinite loop...
So, I reimplemented Range#first with Ruby code.
Because it hard to write break in iterator on C functions.
And this implementation passed specs of that https://github.com/ruby/spec/blob/66daf290cb49707190481b4cf24e700010cd53bf/core/range/first_spec.rb
(I know that it's a bit too strictly)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3262,2016-11-21T11:43:19Z,2016-11-22T07:36:43Z,2016-11-22T09:45:21Z,MERGED,True,38,16,4,https://github.com/dabroz,Fixed NaN boxing for 64-bit configrations,4,[],https://github.com/mruby/mruby/pull/3262,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3262,"This is an artifact discovered during #3258.
Fixed NaN boxing for 64-bit configrations on platforms that use full 48-bit usermode pointers
Definition of boxed pointer is following:
111111111111TTTT TTPPPPPPPPPPPPPP PPPPPPPPPPPPPPPP PPPPPPPPPPPPPPPP
Previously, only the last 32-bit were set, and remaining 14 bits were zeroed when setting ttt:
(o).value.ttt = (0xfff00000|(((tt)+1)<<14));
Currently, remaining 14 bits are preserved. Have also added architecture detection code and an assertion on pointer and type in mrb_obj_value.","This is an artifact discovered during #3258.
Fixed NaN boxing for 64-bit configrations on platforms that use full 48-bit usermode pointers
Definition of boxed pointer is following:
111111111111TTTT TTPPPPPPPPPPPPPP PPPPPPPPPPPPPPPP PPPPPPPPPPPPPPPP
Previously, only the last 32-bit were set, and remaining 14 bits were zeroed when setting ttt:
(o).value.ttt = (0xfff00000|(((tt)+1)<<14));
Currently, remaining 14 bits are preserved. Have also added architecture detection code and an assertion on pointer and type in mrb_obj_value.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3263,2016-11-21T16:34:37Z,2016-12-05T15:20:31Z,2016-12-05T15:20:31Z,CLOSED,False,325,6,6,https://github.com/bouk,Use xor with secret value to obfuscate object_id,1,[],https://github.com/mruby/mruby/pull/3263,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3263,"As an alternative to #3256 we can just hash the object_id with a randomly generated mrb_int, thanks for the suggestion @isra17
We will still need to fix mrb_ptr_to_str to not leak the pointer however","As an alternative to #3256 we can just hash the object_id with a randomly generated mrb_int, thanks for the suggestion @isra17
We will still need to fix mrb_ptr_to_str to not leak the pointer however",True,{}
mruby/mruby,https://github.com/mruby/mruby,3263,2016-11-21T16:34:37Z,2016-12-05T15:20:31Z,2016-12-05T15:20:31Z,CLOSED,False,325,6,6,https://github.com/bouk,Use xor with secret value to obfuscate object_id,1,[],https://github.com/mruby/mruby/pull/3263,https://github.com/dabroz,2,https://github.com/mruby/mruby/pull/3263#issuecomment-261993733,"As an alternative to #3256 we can just hash the object_id with a randomly generated mrb_int, thanks for the suggestion @isra17
We will still need to fix mrb_ptr_to_str to not leak the pointer however",How would this work on embedded systems without /dev/ filesystem?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3263,2016-11-21T16:34:37Z,2016-12-05T15:20:31Z,2016-12-05T15:20:31Z,CLOSED,False,325,6,6,https://github.com/bouk,Use xor with secret value to obfuscate object_id,1,[],https://github.com/mruby/mruby/pull/3263,https://github.com/bouk,3,https://github.com/mruby/mruby/pull/3263#issuecomment-262044054,"As an alternative to #3256 we can just hash the object_id with a randomly generated mrb_int, thanks for the suggestion @isra17
We will still need to fix mrb_ptr_to_str to not leak the pointer however","This wouldn't work on embedded systems, no",True,{}
mruby/mruby,https://github.com/mruby/mruby,3263,2016-11-21T16:34:37Z,2016-12-05T15:20:31Z,2016-12-05T15:20:31Z,CLOSED,False,325,6,6,https://github.com/bouk,Use xor with secret value to obfuscate object_id,1,[],https://github.com/mruby/mruby/pull/3263,https://github.com/Asmod4n,4,https://github.com/mruby/mruby/pull/3263#issuecomment-262077142,"As an alternative to #3256 we can just hash the object_id with a randomly generated mrb_int, thanks for the suggestion @isra17
We will still need to fix mrb_ptr_to_str to not leak the pointer however",Libsodium works just fine without a /dev filesystem if the kernel is new enough,True,{}
mruby/mruby,https://github.com/mruby/mruby,3264,2016-11-22T07:25:39Z,2016-11-22T07:34:46Z,2016-11-22T07:34:46Z,MERGED,True,1,1,1,https://github.com/naclyhara,Fix typo in test,1,[],https://github.com/mruby/mruby/pull/3264,https://github.com/naclyhara,1,https://github.com/mruby/mruby/pull/3264,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3265,2016-11-22T12:41:18Z,2016-11-22T13:22:47Z,2016-11-22T14:08:25Z,MERGED,True,2,6,1,https://github.com/dabroz,Fixed C declaration in re.h,1,[],https://github.com/mruby/mruby/pull/3265,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3265,"Fixed extern ""C"" to use MRB_BEGIN/END_DECL in re.h
(although we could also drop it entirely since all the files has is a single #define)","Fixed extern ""C"" to use MRB_BEGIN/END_DECL in re.h
(although we could also drop it entirely since all the files has is a single #define)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3267,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3267#issuecomment-262662454,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.",PR merged. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/kjunichi,3,https://github.com/mruby/mruby/pull/3267#issuecomment-269405867,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","これ、なんで取り込んだんですか？
既存のC++とCが混在しているmrbgemでリンクエラーになるんですけど。。
Why did you incorporate this?
I get a link error with mrbgem where existing C ++ and C are mixed. .",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3267#issuecomment-269421846,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","Ah, actually I thought it improve C++ linkage. If it makes handling C++ mrbgem worse, I will revert the PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/kjunichi,5,https://github.com/mruby/mruby/pull/3267#issuecomment-269428131,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","I'd like to use C ++ exceptions conveniently, but I would like you to revert.
That's for the following two reasons.

The author of mrbgem using existing C ++ needs to modify the declaration of extern ""C"".
If you want to put mrbgem using C ++, all other mrbgem written in C also needs to be C ++ compatible code.（As well as the modifications in the C code of the mruby itself in this patch）",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/dabroz,6,https://github.com/mruby/mruby/pull/3267#issuecomment-269463994,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","You don't need to use extern ""C"". Mruby has a macro MRB_BEGIN_DECL that adds an appropriate block if needed. Other than that you only need to ensure that the gem's code is also valid C++ - but that is usually simple to do (sometimes need to add type casts).
Without this patch, mruby is broken on many platforms.
You can also use mruby in C++ without using C++ exceptions, in such scenario mruby and gems' code would be compiled as C code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/kjunichi,7,https://github.com/mruby/mruby/pull/3267#issuecomment-269465695,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","？
I already made mrbgems .your patch makes me change my code!",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/dabroz,8,https://github.com/mruby/mruby/pull/3267#issuecomment-269486858,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","@kjunichi If you used previous version of mixed C/C++ mruby, and had C++ exceptions cross the language barrier (which is likely if you mix Ruby with C(++)), then you get undefined behavior. Some compilers permit it, but other compilers enforce it, and will result in segmentation fault in such case.
I'm not saying that the current handling of C/C++ mode is perfect, and likely should be refactored, but we need to choose a correct (in terms of language correctness) solution; even if it would require small code adjustments for gem authors.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/kjunichi,9,https://github.com/mruby/mruby/pull/3267#issuecomment-269538667,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","@dabroz
I already ran several mrbgems using multiple C ++ on multiple platforms such as Linux, macOS, windows without crashing.
From this experience I was unaware of the ""undefined behavior"" you said here.
This is because I have not written any code using any C ++ exception.

and had C++ exceptions

Now I understood.
I think we cannot stop using your patch even though there is fix for C only gem.
thanks for taking your time.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/matz,10,https://github.com/mruby/mruby/pull/3267#issuecomment-269790100,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","@dabroz could you elaborate the situation this PR fixes? What kind of problems on which platforms?
By seeing the info, we may be able to make a new workaround.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/dabroz,11,https://github.com/mruby/mruby/pull/3267#issuecomment-270359139,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","@matz: Sure.
Let's use following program, build with 2 source files. One of them is C, the other one is C++. To be able to use each others functions, C++ functions are declared as extern ""C"".
This is of course a simplified version of mruby code, where (before this patch) most of the codebase was C, and exception-related parts were C++ with C linkage.
// cpp_code.cpp
#include <stdio.h>

extern ""C"" void c_func();

extern ""C"" void cpp_func()
{
	throw 1;
}

int main()
{
	try
	{
		c_func();
	}
	catch (int exception)
	{
		fprintf(stderr, ""Exception correctly caught: %d\n"", exception);
	}
}
// c_code.c
void cpp_func();

void c_func()
{
	cpp_func();
}
Let's build them like this:
clang++ ${FLAGS} -c cpp_code.cpp -o cpp_code.o
clang   ${FLAGS} -c c_code.c     -o c_code.o
clang++ ${FLAGS} c_code.o cpp_code.o -o test
./test

Now, everything depends on FLAGS. If we run this with empty FLAGS, the compiler will default to 64-bit mode, and the code will run correctly:
Exception correctly caught: 1

However, if we set FLAGS to -m32, forcing 32-bit mode, the result will be very different:
libc++abi.dylib: terminating with uncaught exception of type int

The problem observable here is undefined behavior of C++ exceptions passing C code barrier. It may run correctly if the ABI supports is (which is the case under 64-bit OSX), but it doesn't need to (like 32-bit OSX) - and then the code will crash as soon as the exception crosses C/C++ barrier.
I am running these tests on OSX (10.12.2) with Apple LLVM version 8.0.0 (clang-800.0.42.1), but the same behavior is visible under other versions of Clang and also under Linux.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/kjunichi,12,https://github.com/mruby/mruby/pull/3267#issuecomment-270808518,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","Hi, @dabroz .
clang   ${FLAGS} c_code.o cpp_code.o -o test
is it a typo?
clang++  ${FLAGS} c_code.o cpp_code.o -o test
is a collect,isn' it?
In this case, you alse can use -fexception option for compiling C code.
export FLAGS=""-m32""
clang++ ${FLAGS} -c cpp_code.cpp -o cpp_code.o
clang   ${FLAGS} -fexceptions -c c_code.c     -o c_code.o
clang++  ${FLAGS} c_code.o cpp_code.o -o test
./test 
Exception correctly caught: 1

(I ran this on macOS.)
I'm not C/C++ expert, please see #2832 .
I think this is not related with murby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/dabroz,13,https://github.com/mruby/mruby/pull/3267#issuecomment-270891363,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.","@kjunichi you're right, linking target binary also needs clang++. Fixed.
-fexceptions seems to work well on 32-bit Mac targets. However I would recommend to leave compatibility fixes (pointer casts etc.) in place, as being able to compile whole mruby as C++ can also be useful in some scenarios (embedding).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/bggd,14,https://github.com/mruby/mruby/pull/3267#issuecomment-271061571,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.",Can We add an option like enable_c_as_cxx or force_compile_as_cxx or something to mruby's Rake?,True,"{'THUMBS_UP': ['https://github.com/yyamano', 'https://github.com/bovi']}"
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/matz,15,https://github.com/mruby/mruby/pull/3267#issuecomment-283054873,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.",@dabroz could you check if the recent commit (1a1f834) works OK for you?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3267,2016-11-23T10:51:57Z,2016-11-24T00:29:12Z,2017-03-02T19:52:27Z,CLOSED,False,52,15,15,https://github.com/dabroz,Compiling mruby as C++ code,7,[],https://github.com/mruby/mruby/pull/3267,https://github.com/dabroz,16,https://github.com/mruby/mruby/pull/3267#issuecomment-283760760,"This is an artifact discovered during #3258.
mruby offers a way to use C++ exceptions instead of C jumps. This is a great idea, especially given that C++ exceptions cost nothing on modern compilers.
However, this is made in such a way that most of mruby code is compiled as C, and only some special files (vm.c, error.c, etc.) are complied as C++, while still being defined as ""extern C"".
This is unfortunately an undefined behavior, and many compilers won't generate proper exception propagation code in functions defined as such. That includes both GCC and Clang on different platforms.
The proper solution is to compile all of mruby code as C++. This pull request deals with this issue in a following manner:

fixed few issues with code that was proper C but not C++ (ie. implicit void* casts)
added macros for C-style definitions like INT32_MAX, SIZE_MAX, etc.
added export declarations to MRBC outputs
changed the method of compiling mruby with C++ ABI to use -x c++

The last point should be reworked in the future (hacks for marking some files as C++ would no longer be needed), but it serves well for now, and increases the compatibility of mruby significantly.",@matz I'll check this update and see if tests can be updated to test all possible ABIs.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3268,2016-11-23T16:25:48Z,2016-11-24T00:13:34Z,2016-11-24T00:13:34Z,MERGED,True,14,1,2,https://github.com/bouk,Fix segfault in Array#sample,1,[],https://github.com/mruby/mruby/pull/3268,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3268,"Array#sample can segfault if the array is modified during mrb_get_args because the length is determined before the arguments are retrieved
@matz","Array#sample can segfault if the array is modified during mrb_get_args because the length is determined before the arguments are retrieved
@matz",True,{}
mruby/mruby,https://github.com/mruby/mruby,3269,2016-11-23T20:21:40Z,2016-11-24T00:16:43Z,2016-11-24T00:16:43Z,MERGED,True,24,0,2,https://github.com/bouk,Fix segfault when Fixnum#chr doesn't return a string,1,[],https://github.com/mruby/mruby/pull/3269,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3269,"This code can cause a segfault currently:
class Fixnum
  def chr
    nil
  end
end

""%c"" % 0
@matz","This code can cause a segfault currently:
class Fixnum
  def chr
    nil
  end
end

""%c"" % 0
@matz",True,{}
mruby/mruby,https://github.com/mruby/mruby,3271,2016-11-24T01:52:12Z,2016-11-24T02:31:28Z,2016-11-24T03:54:52Z,MERGED,True,5,4,1,https://github.com/ksss,Fix Enumeable#take some incompatibility,2,[],https://github.com/mruby/mruby/pull/3271,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3271,"Support object does'n have < method
class A
  def to_int
    3
  end
end
(0..10).take(A.new)
# CRuby(expect) => [0, 1, 2]
# mruby(actual) => undefined method '<' for #<A:0x7ffa390055a0> (NoMethodError)
Shouldn't call each method if size is 0
class B
  include Enumerable
  def each
    raise ""wow""
  end
end
B.new.take(0)
# CRuby(expect) => []
# mruby(actual) => wow (RuntimeError)
This fix passed all specs of that https://github.com/ruby/spec/blob/66daf290cb49707190481b4cf24e700010cd53bf/core/enumerable/shared/take.rb","Support object does'n have < method
class A
  def to_int
    3
  end
end
(0..10).take(A.new)
# CRuby(expect) => [0, 1, 2]
# mruby(actual) => undefined method '<' for #<A:0x7ffa390055a0> (NoMethodError)
Shouldn't call each method if size is 0
class B
  include Enumerable
  def each
    raise ""wow""
  end
end
B.new.take(0)
# CRuby(expect) => []
# mruby(actual) => wow (RuntimeError)
This fix passed all specs of that https://github.com/ruby/spec/blob/66daf290cb49707190481b4cf24e700010cd53bf/core/enumerable/shared/take.rb",True,{}
mruby/mruby,https://github.com/mruby/mruby,3276,2016-11-24T11:35:01Z,2016-11-24T12:28:55Z,2016-11-25T10:18:10Z,MERGED,True,1,0,1,https://github.com/dabroz,Update AUTHORS,1,[],https://github.com/mruby/mruby/pull/3276,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3276,Could you add me to AUTHORS?,Could you add me to AUTHORS?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3276,2016-11-24T11:35:01Z,2016-11-24T12:28:55Z,2016-11-25T10:18:10Z,MERGED,True,1,0,1,https://github.com/dabroz,Update AUTHORS,1,[],https://github.com/mruby/mruby/pull/3276,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3276#issuecomment-262765492,Could you add me to AUTHORS?,Of course!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3276,2016-11-24T11:35:01Z,2016-11-24T12:28:55Z,2016-11-25T10:18:10Z,MERGED,True,1,0,1,https://github.com/dabroz,Update AUTHORS,1,[],https://github.com/mruby/mruby/pull/3276,https://github.com/dabroz,3,https://github.com/mruby/mruby/pull/3276#issuecomment-262765670,Could you add me to AUTHORS?,Thanks!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3277,2016-11-24T11:52:29Z,2016-11-24T12:48:14Z,2016-11-24T13:05:58Z,MERGED,True,15,2,4,https://github.com/dabroz,Fixed float tolerance in tests when MRB_USE_FLOAT is set,2,[],https://github.com/mruby/mruby/pull/3277,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3277,"This is an artifact discovered during #3258.
When single-precision float is used, 1e-12 cannot be used as epsilon. New constant for the test driver is introduced.","This is an artifact discovered during #3258.
When single-precision float is used, 1e-12 cannot be used as epsilon. New constant for the test driver is introduced.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3278,2016-11-24T14:53:28Z,2016-11-29T18:52:56Z,2016-11-29T18:52:56Z,MERGED,True,9,0,2,https://github.com/bouk,Copy over INSTANCE_TT when duping class,1,[],https://github.com/mruby/mruby/pull/3278,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3278,"Otherwise the code in the test will segfault
@matz I'm not sure whether we need to copy over just the TT or all the flags","Otherwise the code in the test will segfault
@matz I'm not sure whether we need to copy over just the TT or all the flags",True,{}
mruby/mruby,https://github.com/mruby/mruby,3279,2016-11-24T14:57:08Z,2016-11-25T00:33:53Z,2016-11-25T01:26:59Z,MERGED,True,16,2,3,https://github.com/bouk,Fix nested empty heredoc causing segfault,1,[],https://github.com/mruby/mruby/pull/3279,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3279,As reported by https://hackerone.com/jpenalbae,As reported by https://hackerone.com/jpenalbae,True,{}
mruby/mruby,https://github.com/mruby/mruby,3280,2016-11-24T15:04:40Z,2016-11-25T00:15:57Z,2016-11-25T01:26:21Z,MERGED,True,22,1,2,https://github.com/bouk,Remove constant when a struct is redefined.,1,[],https://github.com/mruby/mruby/pull/3280,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3280,Otherwise this can cause a segfault,Otherwise this can cause a segfault,True,{}
mruby/mruby,https://github.com/mruby/mruby,3281,2016-11-24T15:05:53Z,2016-11-25T00:32:12Z,2016-11-25T01:26:56Z,MERGED,True,14,18,2,https://github.com/bouk,Don't allow array parameter in Struct.new,1,[],https://github.com/mruby/mruby/pull/3281,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3281,Otherwise this can lead to an out-of-bounds read and RCE,Otherwise this can lead to an out-of-bounds read and RCE,True,{}
mruby/mruby,https://github.com/mruby/mruby,3282,2016-11-24T15:06:42Z,2016-11-25T00:17:59Z,2016-11-25T01:26:23Z,MERGED,True,38,4,2,https://github.com/bouk,Fix segfault when defining class inside instance_exec on primitive,1,[],https://github.com/mruby/mruby/pull/3282,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3282,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3283,2016-11-24T15:10:21Z,2016-11-25T00:27:43Z,2016-11-25T01:26:52Z,MERGED,True,22,3,2,https://github.com/bouk,Fix segfault on method call with exactly 127 arguments,1,[],https://github.com/mruby/mruby/pull/3283,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3283,Reported by https://hackerone.com/dkasak,Reported by https://hackerone.com/dkasak,True,{}
mruby/mruby,https://github.com/mruby/mruby,3284,2016-11-24T15:14:32Z,2016-11-25T00:19:22Z,2016-11-25T01:26:28Z,MERGED,True,10,1,2,https://github.com/bouk,Fix segfault on remove_method with invalid argument,1,[],https://github.com/mruby/mruby/pull/3284,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3284,Reported by https://hackerone.com/jpenalbae,Reported by https://hackerone.com/jpenalbae,True,{}
mruby/mruby,https://github.com/mruby/mruby,3285,2016-11-24T15:19:28Z,2016-11-25T00:26:11Z,2016-11-25T01:26:44Z,MERGED,True,22,0,2,https://github.com/bouk,Fix codegen issue causing misaligned register,1,[],https://github.com/mruby/mruby/pull/3285,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3285,Reported by https://hackerone.com/haquaman,Reported by https://hackerone.com/haquaman,True,{}
mruby/mruby,https://github.com/mruby/mruby,3286,2016-11-24T15:21:13Z,2016-11-25T00:24:33Z,2016-11-25T01:26:34Z,MERGED,True,10,0,2,https://github.com/bouk,Fix segfault caused by empty condition in ternary,1,[],https://github.com/mruby/mruby/pull/3286,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3286,Reported by https://hackerone.com/jpenalbae,Reported by https://hackerone.com/jpenalbae,True,{}
mruby/mruby,https://github.com/mruby/mruby,3287,2016-11-24T15:23:49Z,2016-11-25T00:20:47Z,2016-11-25T01:26:30Z,MERGED,True,33,7,4,https://github.com/bouk,Fix calling .arity on Proc with undefined `initialize`,1,[],https://github.com/mruby/mruby/pull/3287,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3287,Reported by @bouk,Reported by @bouk,True,{}
mruby/mruby,https://github.com/mruby/mruby,3288,2016-11-24T15:29:20Z,2016-11-24T23:01:41Z,2016-11-25T01:25:31Z,MERGED,True,16,2,2,https://github.com/bouk,Get String length after args in String#chomp!,1,[],https://github.com/mruby/mruby/pull/3288,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3288,Fixes RCE issue,Fixes RCE issue,True,{}
mruby/mruby,https://github.com/mruby/mruby,3289,2016-11-24T15:31:33Z,2016-11-24T23:01:06Z,2016-11-25T01:25:28Z,MERGED,True,14,1,2,https://github.com/bouk,Read length after args in String#setbyte,1,[],https://github.com/mruby/mruby/pull/3289,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3289,"Prevents RCE
Reported by https://hackerone.com/raydot","Prevents RCE
Reported by https://hackerone.com/raydot",True,{}
mruby/mruby,https://github.com/mruby/mruby,3290,2016-11-24T15:33:10Z,2016-11-24T23:00:34Z,2016-11-25T01:25:24Z,MERGED,True,15,2,2,https://github.com/bouk,Fix unsafe peephole optimization,1,[],https://github.com/mruby/mruby/pull/3290,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3290,Reported by https://hackerone.com/dkasak,Reported by https://hackerone.com/dkasak,True,{}
mruby/mruby,https://github.com/mruby/mruby,3291,2016-11-24T15:57:35Z,2016-12-03T09:23:38Z,2016-12-03T09:23:38Z,MERGED,True,68,10,2,https://github.com/bouk,Fix instances where return value of mrb_method_search_vm is unchecked,1,[],https://github.com/mruby/mruby/pull/3291,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3291,"Can lead to segfault
Reported by @charliesome","Can lead to segfault
Reported by @charliesome",True,{}
mruby/mruby,https://github.com/mruby/mruby,3292,2016-11-24T16:07:18Z,2016-11-27T13:19:31Z,2016-12-06T19:28:16Z,CLOSED,False,28,3,2,https://github.com/bouk,Fix NoMethodError returning not an exception,1,[],https://github.com/mruby/mruby/pull/3292,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3292,Reported by https://hackerone.com/raydot,Reported by https://hackerone.com/raydot,True,{}
mruby/mruby,https://github.com/mruby/mruby,3293,2016-11-25T13:38:57Z,2016-11-26T00:59:50Z,2016-11-26T03:48:38Z,MERGED,True,16,9,1,https://github.com/ksss,Fix incompatibility for Enumerable#first,2,[],https://github.com/mruby/mruby/pull/3293,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3293,"Like a Enumerable#take
Enumerable#first with argument should be same as Enumerable#take
See also #3271
Argument more strictly
class A
  include Enumerable
  def each
    yield 1
  end
end
class B
  def ==(*)
    true
  end
end
A.new.first(B.new)
# CRuby(expect) => no implicit conversion of B into Integer (TypeError)
# mruby(actual) => 1
This fix passed all specs of that https://github.com/ruby/spec/blob/913edd49cd02424dcb3f2ead76e549d8bb4d92bd/core/enumerable/first_spec.rb","Like a Enumerable#take
Enumerable#first with argument should be same as Enumerable#take
See also #3271
Argument more strictly
class A
  include Enumerable
  def each
    yield 1
  end
end
class B
  def ==(*)
    true
  end
end
A.new.first(B.new)
# CRuby(expect) => no implicit conversion of B into Integer (TypeError)
# mruby(actual) => 1
This fix passed all specs of that https://github.com/ruby/spec/blob/913edd49cd02424dcb3f2ead76e549d8bb4d92bd/core/enumerable/first_spec.rb",True,{}
mruby/mruby,https://github.com/mruby/mruby,3294,2016-11-25T15:32:20Z,2016-11-29T18:39:09Z,2016-12-07T20:15:59Z,CLOSED,False,13,4,3,https://github.com/bouk,Put a reference to the range_class in mrb_state,1,[],https://github.com/mruby/mruby/pull/3294,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3294,Can cause segfaults otherwise,Can cause segfaults otherwise,True,{}
mruby/mruby,https://github.com/mruby/mruby,3294,2016-11-25T15:32:20Z,2016-11-29T18:39:09Z,2016-12-07T20:15:59Z,CLOSED,False,13,4,3,https://github.com/bouk,Put a reference to the range_class in mrb_state,1,[],https://github.com/mruby/mruby/pull/3294,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3294#issuecomment-263650364,Can cause segfaults otherwise,I don't want to increase the size of mrb_state if possible. Could you tell us how we can cause SEGV?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3294,2016-11-25T15:32:20Z,2016-11-29T18:39:09Z,2016-12-07T20:15:59Z,CLOSED,False,13,4,3,https://github.com/bouk,Put a reference to the range_class in mrb_state,1,[],https://github.com/mruby/mruby/pull/3294,https://github.com/bouk,3,https://github.com/mruby/mruby/pull/3294#issuecomment-263655121,Can cause segfaults otherwise,"If you look at the test, you can see that you can do Range = Array which will create a TT_RANGE with Array class. We could also save the range class as a global variable",True,{}
mruby/mruby,https://github.com/mruby/mruby,3294,2016-11-25T15:32:20Z,2016-11-29T18:39:09Z,2016-12-07T20:15:59Z,CLOSED,False,13,4,3,https://github.com/bouk,Put a reference to the range_class in mrb_state,1,[],https://github.com/mruby/mruby/pull/3294,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3294#issuecomment-263658101,Can cause segfaults otherwise,"Sorry, I found the error reproducing code in the PR.  I think I found the work around.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3295,2016-11-25T16:16:35Z,2016-11-26T00:57:48Z,2016-11-26T00:57:48Z,MERGED,True,13,2,2,https://github.com/bouk,Fix null pointer dereference in mrb_time_initialize,1,[],https://github.com/mruby/mruby/pull/3295,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3295,Reported by https://hackerone.com/raydot,Reported by https://hackerone.com/raydot,True,{}
mruby/mruby,https://github.com/mruby/mruby,3296,2016-11-25T16:18:38Z,2016-11-29T18:50:10Z,2016-11-29T18:50:10Z,CLOSED,False,15,1,2,https://github.com/bouk,Save struct class in internal global variable,1,[],https://github.com/mruby/mruby/pull/3296,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3296,"This ensures it can't be overwritten at runtime
Reported by @charliesome","This ensures it can't be overwritten at runtime
Reported by @charliesome",True,{}
mruby/mruby,https://github.com/mruby/mruby,3297,2016-11-25T16:53:51Z,2016-11-26T00:50:01Z,2016-11-26T00:50:01Z,CLOSED,False,40,43,5,https://github.com/bouk,Remove extra edges structure for RRange,1,[],https://github.com/mruby/mruby/pull/3297,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3297,"Fixes initialize issue reported by @charliesome
I'm guessing the reason struct has an extra struct is to make RVALUE smaller? If so, might it be a better alternative to implement RRange using RData, so we can have data structure checks everywhere? Currently there's a lot of unchecked access to r->edges which can always be null if the range wasn't initialized","Fixes initialize issue reported by @charliesome
I'm guessing the reason struct has an extra struct is to make RVALUE smaller? If so, might it be a better alternative to implement RRange using RData, so we can have data structure checks everywhere? Currently there's a lot of unchecked access to r->edges which can always be null if the range wasn't initialized",True,{}
mruby/mruby,https://github.com/mruby/mruby,3297,2016-11-25T16:53:51Z,2016-11-26T00:50:01Z,2016-11-26T00:50:01Z,CLOSED,False,40,43,5,https://github.com/bouk,Remove extra edges structure for RRange,1,[],https://github.com/mruby/mruby/pull/3297,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3297#issuecomment-263036087,"Fixes initialize issue reported by @charliesome
I'm guessing the reason struct has an extra struct is to make RVALUE smaller? If so, might it be a better alternative to implement RRange using RData, so we can have data structure checks everywhere? Currently there's a lot of unchecked access to r->edges which can always be null if the range wasn't initialized","This pull request is unacceptable because mrb_value*2 + int is bigger than 3 words.
Implementing Ranges using RData may be a good idea.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3298,2016-11-25T22:15:52Z,2016-11-26T00:50:37Z,2016-12-08T23:42:49Z,MERGED,True,1,1,1,https://github.com/dabroz,Fix typo in istruct.h,1,[],https://github.com/mruby/mruby/pull/3298,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3298,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3299,2016-11-26T12:12:00Z,2016-11-27T00:27:03Z,2016-12-08T23:42:49Z,MERGED,True,8,10,1,https://github.com/dabroz,Fixed NaN boxing when MRB_INT16 is set,1,[],https://github.com/mruby/mruby/pull/3299,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3299,"This is an artifact discovered during #3258.
Previously, a part of the mrb_value was left uninitialized with 16-bit integers.","This is an artifact discovered during #3258.
Previously, a part of the mrb_value was left uninitialized with 16-bit integers.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3300,2016-11-27T08:52:40Z,2016-11-27T11:46:58Z,2016-11-27T11:48:07Z,MERGED,True,58,0,1,https://github.com/herwinw,Added documentation on function for globals,1,[],https://github.com/mruby/mruby/pull/3300,https://github.com/herwinw,1,https://github.com/mruby/mruby/pull/3300,"It's not much, but still an improvement","It's not much, but still an improvement",True,{}
mruby/mruby,https://github.com/mruby/mruby,3301,2016-11-27T11:57:02Z,2016-11-27T12:00:34Z,2016-12-08T23:42:41Z,MERGED,True,4,0,1,https://github.com/dabroz,Safeguard against using MRB_INT64 with MRB_WORD_BOXING in 32-bit mode,1,[],https://github.com/mruby/mruby/pull/3301,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3301,"This is an artifact discovered during #3258.
32-bit void* conflicts with 64-bit mrb_int.","This is an artifact discovered during #3258.
32-bit void* conflicts with 64-bit mrb_int.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3303,2016-11-29T14:24:47Z,2016-11-29T17:52:40Z,2016-11-29T17:52:40Z,MERGED,True,10,1,2,https://github.com/bouk,Interpret argument in 'f ()' as nil instead of nothing,1,[],https://github.com/mruby/mruby/pull/3303,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3303,Otherwise there will be a segfault when it's used in void_expr_error,Otherwise there will be a segfault when it's used in void_expr_error,True,{}
mruby/mruby,https://github.com/mruby/mruby,3304,2016-11-29T15:41:29Z,2016-11-29T18:00:43Z,2016-11-29T18:00:43Z,MERGED,True,1,4,1,https://github.com/clayton-shopify,Use size_t to calculate bytes needed for array.,1,[],https://github.com/mruby/mruby/pull/3304,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3304,"@matz
The following code crashes MRuby when built in the default configuration:
[0]*300_000_000
This happens because the maximum array length is MRB_INT_MAX-1, and so an array could require up to (MRB_INT_MAX-1) * sizeof(mrb_value) bytes to store. This value can be larger than 32 bits, which overflows blen. To fix this problem, I've changed blen to a size_t. Since ARY_MAX_SIZE is no larger than SIZE_MAX / sizeof(mrb_value) no overflow can occur after this change.
The second overflow check is unnecessary, so I've removed it.
The bug was reported by Hugh Davenport (https://hackerone.com/haquaman).","@matz
The following code crashes MRuby when built in the default configuration:
[0]*300_000_000
This happens because the maximum array length is MRB_INT_MAX-1, and so an array could require up to (MRB_INT_MAX-1) * sizeof(mrb_value) bytes to store. This value can be larger than 32 bits, which overflows blen. To fix this problem, I've changed blen to a size_t. Since ARY_MAX_SIZE is no larger than SIZE_MAX / sizeof(mrb_value) no overflow can occur after this change.
The second overflow check is unnecessary, so I've removed it.
The bug was reported by Hugh Davenport (https://hackerone.com/haquaman).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3305,2016-11-30T02:34:41Z,2016-11-30T03:48:28Z,2016-11-30T04:12:13Z,MERGED,True,15,0,2,https://github.com/ksss,Implement Enumerable::Lazy#to_enum and enum_for,1,[],https://github.com/mruby/mruby/pull/3305,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3305,"When to_enum method called by Enumerable::Lazy object, It lost information for lazy.
I think It should keep.
Reproduction code
p (0..Float::INFINITY).lazy.to_enum(:each_slice, 2).map { |a| a.first * a.last }.first(4)
Actual
$ mruby t.rb
...inifinite loop...
Expect
$ ruby t.rb
[0, 6, 20, 42]","When to_enum method called by Enumerable::Lazy object, It lost information for lazy.
I think It should keep.
Reproduction code
p (0..Float::INFINITY).lazy.to_enum(:each_slice, 2).map { |a| a.first * a.last }.first(4)
Actual
$ mruby t.rb
...inifinite loop...
Expect
$ ruby t.rb
[0, 6, 20, 42]",True,{}
mruby/mruby,https://github.com/mruby/mruby,3306,2016-11-30T03:46:09Z,2016-11-30T03:54:40Z,2016-11-30T04:12:34Z,MERGED,True,10,8,4,https://github.com/ksss,Change Lazy class outer,1,[],https://github.com/mruby/mruby/pull/3306,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3306,"I think that Lazy class should be under Enumerator class instead of Enumerable module.
$ ruby -e 'p [].lazy.class'
Enumerator::Lazy","I think that Lazy class should be under Enumerator class instead of Enumerable module.
$ ruby -e 'p [].lazy.class'
Enumerator::Lazy",True,{}
mruby/mruby,https://github.com/mruby/mruby,3309,2016-11-30T19:08:08Z,2016-12-01T02:46:57Z,2016-12-07T21:51:58Z,MERGED,True,5,2,1,https://github.com/clayton-shopify,Prevent array size calculation overflows.,1,[],https://github.com/mruby/mruby/pull/3309,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3309,"@matz
There are a couple other places where an array size calculation can overflow. First, in ary_modify where the byte size should be calculated using size_t instead of mrb_int (much like #3304). And second, in ary_concat where the addition of the two array lengths can overflow.
The following input demonstrates a segfault in ary_concat:
a = [0]
31.times { a.concat(a) }
After this change it exits with array size too big (ArgumentError).","@matz
There are a couple other places where an array size calculation can overflow. First, in ary_modify where the byte size should be calculated using size_t instead of mrb_int (much like #3304). And second, in ary_concat where the addition of the two array lengths can overflow.
The following input demonstrates a segfault in ary_concat:
a = [0]
31.times { a.concat(a) }
After this change it exits with array size too big (ArgumentError).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3309,2016-11-30T19:08:08Z,2016-12-01T02:46:57Z,2016-12-07T21:51:58Z,MERGED,True,5,2,1,https://github.com/clayton-shopify,Prevent array size calculation overflows.,1,[],https://github.com/mruby/mruby/pull/3309,https://github.com/tsahara,2,https://github.com/mruby/mruby/pull/3309#issuecomment-264075211,"@matz
There are a couple other places where an array size calculation can overflow. First, in ary_modify where the byte size should be calculated using size_t instead of mrb_int (much like #3304). And second, in ary_concat where the addition of the two array lengths can overflow.
The following input demonstrates a segfault in ary_concat:
a = [0]
31.times { a.concat(a) }
After this change it exits with array size too big (ArgumentError).","CI fails.  Is compier option [-Werror=declaration-after-statement] too strict?
CC    src/array.c -> build/debug/src/array.o
/home/travis/build/mruby/mruby/src/array.c: In function ‘ary_concat’:
/home/travis/build/mruby/mruby/src/array.c:250:3: error: ISO C90 forbids mixed declarations and code [-Werror=declaration-after-statement]
cc1: some warnings being treated as errors",True,{}
mruby/mruby,https://github.com/mruby/mruby,3309,2016-11-30T19:08:08Z,2016-12-01T02:46:57Z,2016-12-07T21:51:58Z,MERGED,True,5,2,1,https://github.com/clayton-shopify,Prevent array size calculation overflows.,1,[],https://github.com/mruby/mruby/pull/3309,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3309#issuecomment-264125289,"@matz
There are a couple other places where an array size calculation can overflow. First, in ary_modify where the byte size should be calculated using size_t instead of mrb_int (much like #3304). And second, in ary_concat where the addition of the two array lengths can overflow.
The following input demonstrates a segfault in ary_concat:
a = [0]
31.times { a.concat(a) }
After this change it exits with array size too big (ArgumentError).","I know it's strict, but some compiler that is supported by mruby still complains mixed declaration.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3309,2016-11-30T19:08:08Z,2016-12-01T02:46:57Z,2016-12-07T21:51:58Z,MERGED,True,5,2,1,https://github.com/clayton-shopify,Prevent array size calculation overflows.,1,[],https://github.com/mruby/mruby/pull/3309,https://github.com/tsahara,4,https://github.com/mruby/mruby/pull/3309#issuecomment-264336319,"@matz
There are a couple other places where an array size calculation can overflow. First, in ary_modify where the byte size should be calculated using size_t instead of mrb_int (much like #3304). And second, in ary_concat where the addition of the two array lengths can overflow.
The following input demonstrates a segfault in ary_concat:
a = [0]
31.times { a.concat(a) }
After this change it exits with array size too big (ArgumentError).",Thanks nobu and matz.  I like traditional syntax better than C99.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3311,2016-12-01T01:46:03Z,2016-12-01T02:46:10Z,2016-12-01T03:16:03Z,MERGED,True,1,0,1,https://github.com/ksss,Support Enumerable methods,1,[],https://github.com/mruby/mruby/pull/3311,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3311,"Expect behavior.
$ ruby -e 'p Enumerator::Generator.new{|y| y << 1 << 2 << 3}.map{|i| i * i }'
[1, 4, 9]","Expect behavior.
$ ruby -e 'p Enumerator::Generator.new{|y| y << 1 << 2 << 3}.map{|i| i * i }'
[1, 4, 9]",True,{}
mruby/mruby,https://github.com/mruby/mruby,3312,2016-12-01T05:42:45Z,2016-12-01T09:42:40Z,2016-12-02T01:26:17Z,MERGED,True,80,58,3,https://github.com/nobu,Feature/multi unicode escape,4,[],https://github.com/mruby/mruby/pull/3312,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3312,"Support ""\u{xxxx xxxx xxxx}"" form.","Support ""\u{xxxx xxxx xxxx}"" form.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3313,2016-12-01T05:58:23Z,2016-12-01T09:41:23Z,2016-12-01T09:41:23Z,MERGED,True,52,0,4,https://github.com/yhara,Add test for recently fixed bugs,1,[],https://github.com/mruby/mruby/pull/3313,https://github.com/yhara,1,https://github.com/mruby/mruby/pull/3313,"This patch adds tests for recently fixed bugs which I reported.
refs #3235 #3236 #3239 #3272 #3273 #3274 #3302 #3275","This patch adds tests for recently fixed bugs which I reported.
refs #3235 #3236 #3239 #3272 #3273 #3274 #3302 #3275",True,{}
mruby/mruby,https://github.com/mruby/mruby,3314,2016-12-01T07:48:13Z,2016-12-01T09:40:18Z,2016-12-02T01:20:22Z,CLOSED,False,3,1,1,https://github.com/nobu,Fix compile error by #3309,1,[],https://github.com/mruby/mruby/pull/3314,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3314,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3314,2016-12-01T07:48:13Z,2016-12-01T09:40:18Z,2016-12-02T01:20:22Z,CLOSED,False,3,1,1,https://github.com/nobu,Fix compile error by #3309,1,[],https://github.com/mruby/mruby/pull/3314,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3314#issuecomment-264125773,,"Oops, I did exact same fix in ab4ab7c",True,{}
mruby/mruby,https://github.com/mruby/mruby,3315,2016-12-01T13:23:04Z,2016-12-03T02:58:39Z,2016-12-03T05:46:14Z,MERGED,True,13,4,2,https://github.com/ksss,Fix some incompatibility for Enumerator#with_index,2,[],https://github.com/mruby/mruby/pull/3315,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3315,"Support nil argument as no argument
p [1,2,3].each.with_index(nil).to_a
# CRuby(expect) => [[1, 0], [2, 1], [3, 2]]
# mruby(actual) => no implicit conversion of NilClass into Integer (TypeError)
Support svalue
a = []
[1,2,3].each.with_index(10).with_index(20) { |*i| a << i }
p a
# CRuby(expect) => [[[1, 10], 20], [[2, 11], 21], [[3, 12], 22]]
# mruby(actual) => [[[[1, 10], 20]], [[[2, 11], 21]], [[[3, 12], 22]]]","Support nil argument as no argument
p [1,2,3].each.with_index(nil).to_a
# CRuby(expect) => [[1, 0], [2, 1], [3, 2]]
# mruby(actual) => no implicit conversion of NilClass into Integer (TypeError)
Support svalue
a = []
[1,2,3].each.with_index(10).with_index(20) { |*i| a << i }
p a
# CRuby(expect) => [[[1, 10], 20], [[2, 11], 21], [[3, 12], 22]]
# mruby(actual) => [[[[1, 10], 20]], [[[2, 11], 21]], [[[3, 12], 22]]]",True,{}
mruby/mruby,https://github.com/mruby/mruby,3316,2016-12-01T16:39:17Z,2016-12-03T02:52:52Z,2016-12-03T02:52:52Z,MERGED,True,8,3,1,https://github.com/clayton-shopify,Fix more integer overflows.,1,[],https://github.com/mruby/mruby/pull/3316,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3316,"@matz
I found a couple more integer overflow issues, this time in ary_expand_capa and mrb_ary_unshift_m. The first can cause an infinite loop, which can be demonstrated by building MRuby with MRB_INT16 and executing puts [0] * 0x6000. The second allows an unshift to exceed the maximum array size.","@matz
I found a couple more integer overflow issues, this time in ary_expand_capa and mrb_ary_unshift_m. The first can cause an infinite loop, which can be demonstrated by building MRuby with MRB_INT16 and executing puts [0] * 0x6000. The second allows an unshift to exceed the maximum array size.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3317,2016-12-01T20:19:14Z,2016-12-03T03:01:43Z,2016-12-03T03:01:43Z,MERGED,True,16,1,2,https://github.com/bouk,Use mrb_ptr instead of mrb_cptr in Kernel#to_s,1,[],https://github.com/mruby/mruby/pull/3317,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3317,This is to avoid segfault when WORD_BOXING is enabled,This is to avoid segfault when WORD_BOXING is enabled,True,{}
mruby/mruby,https://github.com/mruby/mruby,3318,2016-12-01T20:23:27Z,2016-12-05T07:51:46Z,2016-12-05T15:05:26Z,MERGED,True,2,2,1,https://github.com/bouk,Fix stack move segfaulting in OP_ARYCAT,1,[],https://github.com/mruby/mruby/pull/3318,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3318,"Testcase (couldn't get it to work as a test):
def nil.b
  b *nil
end
nil.b","Testcase (couldn't get it to work as a test):
def nil.b
  b *nil
end
nil.b",True,{}
mruby/mruby,https://github.com/mruby/mruby,3318,2016-12-01T20:23:27Z,2016-12-05T07:51:46Z,2016-12-05T15:05:26Z,MERGED,True,2,2,1,https://github.com/bouk,Fix stack move segfaulting in OP_ARYCAT,1,[],https://github.com/mruby/mruby/pull/3318,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3318#issuecomment-264611941,"Testcase (couldn't get it to work as a test):
def nil.b
  b *nil
end
nil.b","Could you describe what you expect? It's a infinite recursion. On my Linux box, it says:
stack level too deep. (limit=(0x40000 - 128)) (SystemStackError)

And it's my expected behavior.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3318,2016-12-01T20:23:27Z,2016-12-05T07:51:46Z,2016-12-05T15:05:26Z,MERGED,True,2,2,1,https://github.com/bouk,Fix stack move segfaulting in OP_ARYCAT,1,[],https://github.com/mruby/mruby/pull/3318,https://github.com/ksss,3,https://github.com/mruby/mruby/pull/3318#issuecomment-264757991,"Testcase (couldn't get it to work as a test):
def nil.b
  b *nil
end
nil.b","I reproduced segmentation fault.
$ git reset --hard HEAD

$ git log -1 --oneline
43512cc Reorganize heredoc rules; fix #3273

$ uname -v
Darwin Kernel Version 15.6.0: Thu Sep  1 15:01:16 PDT 2016; root:xnu-3248.60.11~2/RELEASE_X86_64

$ make clean && make
...

$ lldb ./build/host/bin/mruby
(lldb) target create ""./build/host/bin/mruby""
Current executable set to './build/host/bin/mruby' (x86_64).
(lldb) run t.rb                                                                                                                                    Process 17957 launched: './build/host/bin/mruby' (x86_64)
t.rb:2:3: '*' interpreted as argument prefix
Process 17957 stopped
* thread #1: tid = 0x2aa274, 0x0000000100044c6f mruby`mrb_vm_exec(mrb=0x0000000100202a40, proc=0x0000000100805300, pc=0x00000001002344b0) + 25855 at vm.c:2164, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x1001fffc0)
    frame #0: 0x0000000100044c6f mruby`mrb_vm_exec(mrb=0x0000000100202a40, proc=0x0000000100805300, pc=0x00000001002344b0) + 25855 at vm.c:2164
   2161
   2162	    CASE(OP_ARYCAT) {
   2163	      /* A B            mrb_ary_concat(R(A),R(B)) */
-> 2164	      mrb_ary_concat(mrb, regs[GETARG_A(i)],
   2165	                     mrb_ary_splat(mrb, regs[GETARG_B(i)]));
   2166	      ARENA_RESTORE(mrb, ai);
   2167	      NEXT;",True,{}
mruby/mruby,https://github.com/mruby/mruby,3318,2016-12-01T20:23:27Z,2016-12-05T07:51:46Z,2016-12-05T15:05:26Z,MERGED,True,2,2,1,https://github.com/bouk,Fix stack move segfaulting in OP_ARYCAT,1,[],https://github.com/mruby/mruby/pull/3318,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3318#issuecomment-264788053,"Testcase (couldn't get it to work as a test):
def nil.b
  b *nil
end
nil.b","@ksss I am not sure whether your problem was caused by this issue.
But now I understand the intention of the PR (regs may be modified in the call).
I will merge this anyway.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3318,2016-12-01T20:23:27Z,2016-12-05T07:51:46Z,2016-12-05T15:05:26Z,MERGED,True,2,2,1,https://github.com/bouk,Fix stack move segfaulting in OP_ARYCAT,1,[],https://github.com/mruby/mruby/pull/3318,https://github.com/ksss,5,https://github.com/mruby/mruby/pull/3318#issuecomment-264795487,"Testcase (couldn't get it to work as a test):
def nil.b
  b *nil
end
nil.b","I don't know why it caused ...
I confirmed that it was fixed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3318,2016-12-01T20:23:27Z,2016-12-05T07:51:46Z,2016-12-05T15:05:26Z,MERGED,True,2,2,1,https://github.com/bouk,Fix stack move segfaulting in OP_ARYCAT,1,[],https://github.com/mruby/mruby/pull/3318,https://github.com/bouk,6,https://github.com/mruby/mruby/pull/3318#issuecomment-264877111,"Testcase (couldn't get it to work as a test):
def nil.b
  b *nil
end
nil.b","Thanks, sorry for the poor PR description",True,{}
mruby/mruby,https://github.com/mruby/mruby,3319,2016-12-01T20:51:00Z,2016-12-03T03:53:21Z,2016-12-03T03:53:21Z,MERGED,True,12,1,2,https://github.com/bouk,Fix segfault when using result of rest assignment,1,[],https://github.com/mruby/mruby/pull/3319,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3319,Reported by https://hackerone.com/haquaman,Reported by https://hackerone.com/haquaman,True,{}
mruby/mruby,https://github.com/mruby/mruby,3319,2016-12-01T20:51:00Z,2016-12-03T03:53:21Z,2016-12-03T03:53:21Z,MERGED,True,12,1,2,https://github.com/bouk,Fix segfault when using result of rest assignment,1,[],https://github.com/mruby/mruby/pull/3319,https://github.com/bouk,2,https://github.com/mruby/mruby/pull/3319#issuecomment-264290994,Reported by https://hackerone.com/haquaman,This would segfault because the stack would get misaligned,True,{}
mruby/mruby,https://github.com/mruby/mruby,3320,2016-12-02T14:33:53Z,2016-12-03T03:41:04Z,2016-12-03T03:41:04Z,CLOSED,False,40,43,5,https://github.com/clayton-shopify,Fix segfault in Range without initialize_copy,1,[],https://github.com/mruby/mruby/pull/3320,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3320,"@matz
The following code results in a null pointer dereference, since an uninitialized Range object is used:
Range.remove_method(:initialize_copy)
(1..2).dup.to_s
This patch solves the issue by getting rid of the mrb_range_edges struct, so that initialization can be safely skipped.
This issue was reported by https://hackerone.com/charliesome.","@matz
The following code results in a null pointer dereference, since an uninitialized Range object is used:
Range.remove_method(:initialize_copy)
(1..2).dup.to_s
This patch solves the issue by getting rid of the mrb_range_edges struct, so that initialization can be safely skipped.
This issue was reported by https://hackerone.com/charliesome.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3320,2016-12-02T14:33:53Z,2016-12-03T03:41:04Z,2016-12-03T03:41:04Z,CLOSED,False,40,43,5,https://github.com/clayton-shopify,Fix segfault in Range without initialize_copy,1,[],https://github.com/mruby/mruby/pull/3320,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3320#issuecomment-264611428,"@matz
The following code results in a null pointer dereference, since an uninitialized Range object is used:
Range.remove_method(:initialize_copy)
(1..2).dup.to_s
This patch solves the issue by getting rid of the mrb_range_edges struct, so that initialization can be safely skipped.
This issue was reported by https://hackerone.com/charliesome.","This patch increases the size of RVALUE (object slot) thus increasing memory consumption.
I don't think it's acceptable.  I understand the issue. I will fix it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3321,2016-12-02T14:41:50Z,2016-12-03T02:54:22Z,2016-12-03T02:54:22Z,MERGED,True,17,1,2,https://github.com/clayton-shopify,Fix segfault in mrb_proc_copy.,1,[],https://github.com/mruby/mruby/pull/3321,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3321,"@matz
The following code results in a crash:
Proc.remove_method(:initialize)
a = Proc.new {}
b = Proc.new {}
a.initialize_copy(b)
This patch corrects the problem by checking a->body.irep before dereferencing it.
This issue was reported by https://hackerone.com/brakhane.","@matz
The following code results in a crash:
Proc.remove_method(:initialize)
a = Proc.new {}
b = Proc.new {}
a.initialize_copy(b)
This patch corrects the problem by checking a->body.irep before dereferencing it.
This issue was reported by https://hackerone.com/brakhane.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3323,2016-12-06T19:27:42Z,2017-01-12T06:30:22Z,2017-01-12T06:30:22Z,CLOSED,False,21,2,2,https://github.com/bouk,Fix 36fc1f14 not checking in the right location,1,[],https://github.com/mruby/mruby/pull/3323,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3323,"36fc1f1 should've added the exception class check in the mrb_exc_raise function, as the check in mrb_exc_set doesn't work if the value is nil. I also added the test that was originally in #3292 (which was failing on master)","36fc1f1 should've added the exception class check in the mrb_exc_raise function, as the check in mrb_exc_set doesn't work if the value is nil. I also added the test that was originally in #3292 (which was failing on master)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3323,2016-12-06T19:27:42Z,2017-01-12T06:30:22Z,2017-01-12T06:30:22Z,CLOSED,False,21,2,2,https://github.com/bouk,Fix 36fc1f14 not checking in the right location,1,[],https://github.com/mruby/mruby/pull/3323,https://github.com/clayton-shopify,2,https://github.com/mruby/mruby/pull/3323#issuecomment-271672467,"36fc1f1 should've added the exception class check in the mrb_exc_raise function, as the check in mrb_exc_set doesn't work if the value is nil. I also added the test that was originally in #3292 (which was failing on master)",@matz Have you had a chance to look at this?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3323,2016-12-06T19:27:42Z,2017-01-12T06:30:22Z,2017-01-12T06:30:22Z,CLOSED,False,21,2,2,https://github.com/bouk,Fix 36fc1f14 not checking in the right location,1,[],https://github.com/mruby/mruby/pull/3323,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3323#issuecomment-271755274,"36fc1f1 should've added the exception class check in the mrb_exc_raise function, as the check in mrb_exc_set doesn't work if the value is nil. I also added the test that was originally in #3292 (which was failing on master)","The patch seems OK, but I don't know why Appveyor failed.
That's my concern.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3323,2016-12-06T19:27:42Z,2017-01-12T06:30:22Z,2017-01-12T06:30:22Z,CLOSED,False,21,2,2,https://github.com/bouk,Fix 36fc1f14 not checking in the right location,1,[],https://github.com/mruby/mruby/pull/3323,https://github.com/clayton-shopify,4,https://github.com/mruby/mruby/pull/3323#issuecomment-271877305,"36fc1f1 should've added the exception class check in the mrb_exc_raise function, as the check in mrb_exc_set doesn't work if the value is nil. I also added the test that was originally in #3292 (which was failing on master)","@bouk is away, but I'll rebase this and open a new PR to see if it fixes the AppVeyor problem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3323,2016-12-06T19:27:42Z,2017-01-12T06:30:22Z,2017-01-12T06:30:22Z,CLOSED,False,21,2,2,https://github.com/bouk,Fix 36fc1f14 not checking in the right location,1,[],https://github.com/mruby/mruby/pull/3323,https://github.com/matz,5,https://github.com/mruby/mruby/pull/3323#issuecomment-272087264,"36fc1f1 should've added the exception class check in the mrb_exc_raise function, as the check in mrb_exc_set doesn't work if the value is nil. I also added the test that was originally in #3292 (which was failing on master)",#3394 merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3324,2016-12-06T21:02:45Z,2016-12-10T06:56:14Z,2016-12-10T06:56:14Z,MERGED,True,14,0,2,https://github.com/bouk,Don't generate code for NODE_NEGATE if the result isn't used,1,[],https://github.com/mruby/mruby/pull/3324,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3324,"As reported by https://hackerone.com/haquaman
The current code for NODE_NEGATE can cause a register misalignment, as it pushes values onto the stack even when its return value isn't used. This PR fixes it with a short circuit if the result isn't used (which leads to the code being optimized away entirely if the tree is NODE_FLOAT or NODE_INT)","As reported by https://hackerone.com/haquaman
The current code for NODE_NEGATE can cause a register misalignment, as it pushes values onto the stack even when its return value isn't used. This PR fixes it with a short circuit if the result isn't used (which leads to the code being optimized away entirely if the tree is NODE_FLOAT or NODE_INT)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3325,2016-12-07T06:34:22Z,2016-12-07T11:15:36Z,2016-12-07T11:15:36Z,MERGED,True,4,1,1,https://github.com/kazuho,set `MRB_64BIT` if the sizeof(size_t) is 8,1,[],https://github.com/mruby/mruby/pull/3325,https://github.com/kazuho,1,https://github.com/mruby/mruby/pull/3325,"Detect 64-bit arch. by checking the size of size_t, instead of using a hard-coded list.","Detect 64-bit arch. by checking the size of size_t, instead of using a hard-coded list.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3327,2016-12-07T12:55:27Z,2016-12-07T16:02:27Z,2016-12-07T16:02:27Z,MERGED,True,3,4,1,https://github.com/felixjones,Removed the errno declaration from string.c,2,[],https://github.com/mruby/mruby/pull/3327,https://github.com/felixjones,1,https://github.com/mruby/mruby/pull/3327,"…lt errno macro
Addresses issue #3326 specifically for platforms that define errno as a macro.","…lt errno macro
Addresses issue #3326 specifically for platforms that define errno as a macro.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3328,2016-12-07T13:43:30Z,2016-12-07T16:04:25Z,2016-12-07T16:04:25Z,MERGED,True,17,1,2,https://github.com/shugo,Copy default_proc by Hash#dup.,1,[],https://github.com/mruby/mruby/pull/3328,https://github.com/shugo,1,https://github.com/mruby/mruby/pull/3328,"Hash#dup copies default_proc in CRuby:
$ ruby -e 'h = Hash.new {|h,k| 123}; p h.dup[0]'       
123

So default_proc should also be copied in mruby.","Hash#dup copies default_proc in CRuby:
$ ruby -e 'h = Hash.new {|h,k| 123}; p h.dup[0]'       
123

So default_proc should also be copied in mruby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3329,2016-12-07T16:05:11Z,2016-12-10T07:02:47Z,2016-12-10T07:02:47Z,MERGED,True,34,0,2,https://github.com/bouk,Mark all the built-in classes during GC sweep,1,[],https://github.com/mruby/mruby/pull/3329,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3329,"This fixes an issue where a built-in class can get garbage collected, put onto the freelist, and reused. This can lead to instantiating an object with an MRB_TT that doesn't match its class.","This fixes an issue where a built-in class can get garbage collected, put onto the freelist, and reused. This can lead to instantiating an object with an MRB_TT that doesn't match its class.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3329,2016-12-07T16:05:11Z,2016-12-10T07:02:47Z,2016-12-10T07:02:47Z,MERGED,True,34,0,2,https://github.com/bouk,Mark all the built-in classes during GC sweep,1,[],https://github.com/mruby/mruby/pull/3329,https://github.com/bouk,2,https://github.com/mruby/mruby/pull/3329#issuecomment-265563690,"This fixes an issue where a built-in class can get garbage collected, put onto the freelist, and reused. This can lead to instantiating an object with an MRB_TT that doesn't match its class.",I'm unsure where this appveyor issue is coming from,True,{}
mruby/mruby,https://github.com/mruby/mruby,3329,2016-12-07T16:05:11Z,2016-12-10T07:02:47Z,2016-12-10T07:02:47Z,MERGED,True,34,0,2,https://github.com/bouk,Mark all the built-in classes during GC sweep,1,[],https://github.com/mruby/mruby/pull/3329,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3329#issuecomment-265646913,"This fixes an issue where a built-in class can get garbage collected, put onto the freelist, and reused. This can lead to instantiating an object with an MRB_TT that doesn't match its class.",Appvoyer issue is caused by #3270. I don't know how to fix it yet.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3329,2016-12-07T16:05:11Z,2016-12-10T07:02:47Z,2016-12-10T07:02:47Z,MERGED,True,34,0,2,https://github.com/bouk,Mark all the built-in classes during GC sweep,1,[],https://github.com/mruby/mruby/pull/3329,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3329#issuecomment-266183905,"This fixes an issue where a built-in class can get garbage collected, put onto the freelist, and reused. This can lead to instantiating an object with an MRB_TT that doesn't match its class.","The patch looks good to me, but I worry a bit that the test may not be portable.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3329,2016-12-07T16:05:11Z,2016-12-10T07:02:47Z,2016-12-10T07:02:47Z,MERGED,True,34,0,2,https://github.com/bouk,Mark all the built-in classes during GC sweep,1,[],https://github.com/mruby/mruby/pull/3329,https://github.com/matz,5,https://github.com/mruby/mruby/pull/3329#issuecomment-266184019,"This fixes an issue where a built-in class can get garbage collected, put onto the freelist, and reused. This can lead to instantiating an object with an MRB_TT that doesn't match its class.","Ah, but existing tests already uses the same approach.  OK, I'll merge it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3330,2016-12-07T20:05:13Z,2017-03-11T22:03:31Z,2017-03-11T22:03:31Z,CLOSED,False,249,2,11,https://github.com/dabroz,Support override of + - * / for Fixnum and Float (rebased),5,[],https://github.com/mruby/mruby/pull/3330,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3330,I've rebased #2579 (Support override of + - * / for Fixnum and Float) and added tests. Could we add this to mruby? It would be useful for most numeric gems (like Bignum or float4).,I've rebased #2579 (Support override of + - * / for Fixnum and Float) and added tests. Could we add this to mruby? It would be useful for most numeric gems (like Bignum or float4).,True,{}
mruby/mruby,https://github.com/mruby/mruby,3330,2016-12-07T20:05:13Z,2017-03-11T22:03:31Z,2017-03-11T22:03:31Z,CLOSED,False,249,2,11,https://github.com/dabroz,Support override of + - * / for Fixnum and Float (rebased),5,[],https://github.com/mruby/mruby/pull/3330,https://github.com/dabroz,2,https://github.com/mruby/mruby/pull/3330#issuecomment-265986951,I've rebased #2579 (Support override of + - * / for Fixnum and Float) and added tests. Could we add this to mruby? It would be useful for most numeric gems (like Bignum or float4).,@matz: what do you need to consider this pull request? I am not against making this optional (new flag in mrbconf.h) if you think that including this by default is not necessary.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3330,2016-12-07T20:05:13Z,2017-03-11T22:03:31Z,2017-03-11T22:03:31Z,CLOSED,False,249,2,11,https://github.com/dabroz,Support override of + - * / for Fixnum and Float (rebased),5,[],https://github.com/mruby/mruby/pull/3330,https://github.com/dabroz,3,https://github.com/mruby/mruby/pull/3330#issuecomment-270911589,I've rebased #2579 (Support override of + - * / for Fixnum and Float) and added tests. Could we add this to mruby? It would be useful for most numeric gems (like Bignum or float4).,"I made some progress on this (configuration and tests), but it seems that I misunderstood the actual mruby limitation. It looks like there always was a possibility to use Fixnum/Float +-*/ with custom classes.
The current version has a configuration flag MRB_ENABLE_NUMERIC_OVERRIDE (disabled by default). However, there are still limitations coming from the fact that + and other operators are not actual methods (you can't use super or alias_method, for example).
Therefore I am leaving my latest changes here for all of you to decide what the next step should be.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3331,2016-12-07T20:13:36Z,2016-12-08T06:22:07Z,2016-12-18T02:18:17Z,MERGED,True,5,4,2,https://github.com/dabroz,Promote load_exec to mruby API as mrb_load_exec (fixes #3248),1,[],https://github.com/mruby/mruby/pull/3331,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3331,"Rationale: you would no longer need to parse Ruby scripts twice to catch parse errors.
Fixes #3248","Rationale: you would no longer need to parse Ruby scripts twice to catch parse errors.
Fixes #3248",True,{}
mruby/mruby,https://github.com/mruby/mruby,3331,2016-12-07T20:13:36Z,2016-12-08T06:22:07Z,2016-12-18T02:18:17Z,MERGED,True,5,4,2,https://github.com/dabroz,Promote load_exec to mruby API as mrb_load_exec (fixes #3248),1,[],https://github.com/mruby/mruby/pull/3331,https://github.com/jmhmccr,2,https://github.com/mruby/mruby/pull/3331#issuecomment-267799208,"Rationale: you would no longer need to parse Ruby scripts twice to catch parse errors.
Fixes #3248",Suggest adding this to 1.3 notes: #3140,True,{}
mruby/mruby,https://github.com/mruby/mruby,3332,2016-12-07T20:29:24Z,2016-12-07T20:31:21Z,2016-12-08T16:00:58Z,CLOSED,False,1,1,1,https://github.com/dabroz,[WIP] fix for Windows builds in C++ mode,1,[],https://github.com/mruby/mruby/pull/3332,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3332,This is caused by the latest change in mrb_float_read,This is caused by the latest change in mrb_float_read,True,{}
mruby/mruby,https://github.com/mruby/mruby,3333,2016-12-08T02:18:47Z,2016-12-08T03:50:39Z,2016-12-08T03:50:40Z,MERGED,True,4,5,1,https://github.com/kazuho,fix issues of mrb_gc_unregister introduced in 09b1185,1,[],https://github.com/mruby/mruby/pull/3333,https://github.com/kazuho,1,https://github.com/mruby/mruby/pull/3333,"fixes partial copy of objects in GC root array (due to missing * sizeof(mrb_value))
restores the behavior that permitted an unregistered object to be used as an argument

The issues were detected while trying to update the mruby used by H2O in h2o/h2o#1135.","fixes partial copy of objects in GC root array (due to missing * sizeof(mrb_value))
restores the behavior that permitted an unregistered object to be used as an argument

The issues were detected while trying to update the mruby used by H2O in h2o/h2o#1135.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3334,2016-12-08T04:52:11Z,2016-12-08T04:53:18Z,2016-12-08T04:53:26Z,CLOSED,False,1,0,1,https://github.com/mattn,fix build,1,[],https://github.com/mruby/mruby/pull/3334,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3334,https://ci.appveyor.com/project/matz/mruby/build/334/job/98mcdisekvrh09jj,https://ci.appveyor.com/project/matz/mruby/build/334/job/98mcdisekvrh09jj,True,{}
mruby/mruby,https://github.com/mruby/mruby,3334,2016-12-08T04:52:11Z,2016-12-08T04:53:18Z,2016-12-08T04:53:26Z,CLOSED,False,1,0,1,https://github.com/mattn,fix build,1,[],https://github.com/mruby/mruby/pull/3334,https://github.com/mattn,2,https://github.com/mruby/mruby/pull/3334#issuecomment-265652726,https://ci.appveyor.com/project/matz/mruby/build/334/job/98mcdisekvrh09jj,Sorry still bad.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3335,2016-12-08T06:38:52Z,2016-12-08T07:48:09Z,2016-12-08T07:52:01Z,MERGED,True,6,1,3,https://github.com/mattn,fix build on vs2013-vs2015,2,[],https://github.com/mruby/mruby/pull/3335,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3335,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3335,2016-12-08T06:38:52Z,2016-12-08T07:48:09Z,2016-12-08T07:52:01Z,MERGED,True,6,1,3,https://github.com/mattn,fix build on vs2013-vs2015,2,[],https://github.com/mruby/mruby/pull/3335,https://github.com/mattn,2,https://github.com/mruby/mruby/pull/3335#issuecomment-265665397,,"Hmm, still not. I have no idea. :(",True,{}
mruby/mruby,https://github.com/mruby/mruby,3335,2016-12-08T06:38:52Z,2016-12-08T07:48:09Z,2016-12-08T07:52:01Z,MERGED,True,6,1,3,https://github.com/mattn,fix build on vs2013-vs2015,2,[],https://github.com/mruby/mruby/pull/3335,https://github.com/mattn,3,https://github.com/mruby/mruby/pull/3335#issuecomment-265667948,,"I figure out why appveyor fail.
#  define const
(in src/string.c)
This is wrong. This break signature for mrb_float_read.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3335,2016-12-08T06:38:52Z,2016-12-08T07:48:09Z,2016-12-08T07:52:01Z,MERGED,True,6,1,3,https://github.com/mattn,fix build on vs2013-vs2015,2,[],https://github.com/mruby/mruby/pull/3335,https://github.com/mattn,4,https://github.com/mruby/mruby/pull/3335#issuecomment-265668460,,"@matz Is this required?
#ifndef __STDC__
# ifdef __GNUC__
#  define const __const__
# else
#  define const
# endif
#endif
(in src/string.c)
If you don't have meaning for adding #define const, I'll remove this.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3335,2016-12-08T06:38:52Z,2016-12-08T07:48:09Z,2016-12-08T07:52:01Z,MERGED,True,6,1,3,https://github.com/mattn,fix build on vs2013-vs2015,2,[],https://github.com/mruby/mruby/pull/3335,https://github.com/matz,5,https://github.com/mruby/mruby/pull/3335#issuecomment-265674916,,It was copied from ruby1.8/missing. Probably for compatibility with old compilers.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3336,2016-12-08T12:40:56Z,2016-12-08T17:57:03Z,2016-12-08T17:57:03Z,MERGED,True,0,8,1,https://github.com/felixjones,Removed unnecessary const macro - const keyword is already a dependency,1,[],https://github.com/mruby/mruby/pull/3336,https://github.com/felixjones,1,https://github.com/mruby/mruby/pull/3336,"const is already used at the top of string.c, so we can guarantee that the compiler supports the const keyword at this position of the code.
This macro also does not work for circumstances where __STDC__ is not defined and your compiler has not definition (the default is to disable the const keyword, this does not sound like intentional behaviour).","const is already used at the top of string.c, so we can guarantee that the compiler supports the const keyword at this position of the code.
This macro also does not work for circumstances where __STDC__ is not defined and your compiler has not definition (the default is to disable the const keyword, this does not sound like intentional behaviour).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3336,2016-12-08T12:40:56Z,2016-12-08T17:57:03Z,2016-12-08T17:57:03Z,MERGED,True,0,8,1,https://github.com/felixjones,Removed unnecessary const macro - const keyword is already a dependency,1,[],https://github.com/mruby/mruby/pull/3336,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3336#issuecomment-265808105,"const is already used at the top of string.c, so we can guarantee that the compiler supports the const keyword at this position of the code.
This macro also does not work for circumstances where __STDC__ is not defined and your compiler has not definition (the default is to disable the const keyword, this does not sound like intentional behaviour).",You are right.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3337,2016-12-08T20:48:15Z,2016-12-09T07:42:54Z,2016-12-09T07:42:54Z,MERGED,True,30,2,2,https://github.com/bouk,Fix segfault when undef is called with more than 126 arguments,1,[],https://github.com/mruby/mruby/pull/3337,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3337,"The issue is that when there are more than 126 arguments an array needs
to be created to pass the arguments on with.
Reported by https://hackerone.com/revskills","The issue is that when there are more than 126 arguments an array needs
to be created to pass the arguments on with.
Reported by https://hackerone.com/revskills",True,{}
mruby/mruby,https://github.com/mruby/mruby,3338,2016-12-09T15:37:14Z,2016-12-10T02:21:54Z,2016-12-10T02:21:54Z,MERGED,True,8,2,2,https://github.com/bouk,Fix segfault in gen_values with NOVAL and more than 127 args,1,[],https://github.com/mruby/mruby/pull/3338,https://github.com/bouk,1,https://github.com/mruby/mruby/pull/3338,"There seemed to be some unused code leftover in gen_values that can cause a segmentation fault if gen_values is used with more than 127 arguments in a NOVAL context.
This fixes that issue by removing the unused code","There seemed to be some unused code leftover in gen_values that can cause a segmentation fault if gen_values is used with more than 127 arguments in a NOVAL context.
This fixes that issue by removing the unused code",True,{}
mruby/mruby,https://github.com/mruby/mruby,3339,2016-12-10T06:17:36Z,2016-12-10T06:32:55Z,2016-12-10T06:32:55Z,MERGED,True,12,6,1,https://github.com/kazuho,do not destroy a page with an active TT_ENV,1,[],https://github.com/mruby/mruby/pull/3339,https://github.com/kazuho,1,https://github.com/mruby/mruby/pull/3339,"When a dead TT_FIBER object refers to a dead-and-shared TT_ENV object, both of the two gets collected, since neither of them are marked.
In such case, if the TT_ENV object is freed before the TT_FIBER object, a pointer within the TT_FIBER object referring to the TT_ENV object becomes invalid, which leads to freed memory access or segmentation fault if the page that contained the TT_ENV object was released prior to the destruction of the TT_FIBER object.","When a dead TT_FIBER object refers to a dead-and-shared TT_ENV object, both of the two gets collected, since neither of them are marked.
In such case, if the TT_ENV object is freed before the TT_FIBER object, a pointer within the TT_FIBER object referring to the TT_ENV object becomes invalid, which leads to freed memory access or segmentation fault if the page that contained the TT_ENV object was released prior to the destruction of the TT_FIBER object.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3340,2016-12-10T18:38:49Z,2016-12-11T15:49:23Z,2016-12-18T02:21:13Z,MERGED,True,45,20,10,https://github.com/k0kubun,Implement Object#freeze,1,[],https://github.com/mruby/mruby/pull/3340,https://github.com/k0kubun,1,https://github.com/mruby/mruby/pull/3340,"close #2028
I want to use Object#freeze for Array and Hash to make them read-only. It's convenient to restrict regions in which you can modify a value. It improves maintainability because it makes easier to search where a value is modified.","close #2028
I want to use Object#freeze for Array and Hash to make them read-only. It's convenient to restrict regions in which you can modify a value. It improves maintainability because it makes easier to search where a value is modified.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3340,2016-12-10T18:38:49Z,2016-12-11T15:49:23Z,2016-12-18T02:21:13Z,MERGED,True,45,20,10,https://github.com/k0kubun,Implement Object#freeze,1,[],https://github.com/mruby/mruby/pull/3340,https://github.com/jmhmccr,2,https://github.com/mruby/mruby/pull/3340#issuecomment-267799295,"close #2028
I want to use Object#freeze for Array and Hash to make them read-only. It's convenient to restrict regions in which you can modify a value. It improves maintainability because it makes easier to search where a value is modified.",Suggest adding this to 1.3 notes: #3140,True,{}
mruby/mruby,https://github.com/mruby/mruby,3341,2016-12-11T12:38:48Z,2016-12-11T16:07:27Z,2016-12-12T00:34:33Z,MERGED,True,16,0,1,https://github.com/kou,Support pkg-config in mrbgem.rake,1,[],https://github.com/mruby/mruby/pull/3341,https://github.com/kou,1,https://github.com/mruby/mruby/pull/3341,"Example usage:
MRuby::Gem::Specification.new('mruby-onig-regexp') do |spec|
  # ...
  if spec.search_package('onigmo')
    # Use onigmo.h when onigmo.pc exist.
    spec.cc.defines += [""HAVE_ONIGMO_H""]
  elsif spec.search_package('oniguruma')
    # Use oniguruma.h when oniguruma.pc exist.
    spec.cc.defines += [""HAVE_ONIGURUMA_H""]
  else
    # Use bundled Onigmo otherwise.
    # ...
  end
end","Example usage:
MRuby::Gem::Specification.new('mruby-onig-regexp') do |spec|
  # ...
  if spec.search_package('onigmo')
    # Use onigmo.h when onigmo.pc exist.
    spec.cc.defines += [""HAVE_ONIGMO_H""]
  elsif spec.search_package('oniguruma')
    # Use oniguruma.h when oniguruma.pc exist.
    spec.cc.defines += [""HAVE_ONIGURUMA_H""]
  else
    # Use bundled Onigmo otherwise.
    # ...
  end
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,3342,2016-12-12T18:09:23Z,2016-12-13T01:55:14Z,2016-12-27T19:03:01Z,CLOSED,False,4,4,1,https://github.com/clayton-shopify,Fix calculation of new string capacity.,1,[],https://github.com/mruby/mruby/pull/3342,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3342,"@matz
If MRuby is compiled with MRB_INT16, then the following code causes a crash:
loop { ([0]*10000).to_s }
This happens because str_buf_cat incorrectly computes the new string capacity, choosing a capacity which is 1/4096 of the needed value: 
  
    
      mruby/src/string.c
    
    
         Line 166
      in
      9cef265
    
  
  
    

        
          
           capa = (total + 4095) / 4096; 
        
    
  


To fix this I'm proposing to change the capacity calculation to match what's done for arrays: 
  
    
      mruby/src/array.c
    
    
        Lines 180 to 184
      in
      647ad29
    
  
  
    

        
          
           if (capa <= ARY_MAX_SIZE / 2) { 
        

        
          
             capa *= 2; 
        

        
          
           } else { 
        

        
          
             capa = ARY_MAX_SIZE; 
        

        
          
           }","@matz
If MRuby is compiled with MRB_INT16, then the following code causes a crash:
loop { ([0]*10000).to_s }
This happens because str_buf_cat incorrectly computes the new string capacity, choosing a capacity which is 1/4096 of the needed value: 
  
    
      mruby/src/string.c
    
    
         Line 166
      in
      9cef265
    
  
  
    

        
          
           capa = (total + 4095) / 4096; 
        
    
  


To fix this I'm proposing to change the capacity calculation to match what's done for arrays: 
  
    
      mruby/src/array.c
    
    
        Lines 180 to 184
      in
      647ad29
    
  
  
    

        
          
           if (capa <= ARY_MAX_SIZE / 2) { 
        

        
          
             capa *= 2; 
        

        
          
           } else { 
        

        
          
             capa = ARY_MAX_SIZE; 
        

        
          
           }",True,{}
mruby/mruby,https://github.com/mruby/mruby,3342,2016-12-12T18:09:23Z,2016-12-13T01:55:14Z,2016-12-27T19:03:01Z,CLOSED,False,4,4,1,https://github.com/clayton-shopify,Fix calculation of new string capacity.,1,[],https://github.com/mruby/mruby/pull/3342,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3342#issuecomment-266612523,"@matz
If MRuby is compiled with MRB_INT16, then the following code causes a crash:
loop { ([0]*10000).to_s }
This happens because str_buf_cat incorrectly computes the new string capacity, choosing a capacity which is 1/4096 of the needed value: 
  
    
      mruby/src/string.c
    
    
         Line 166
      in
      9cef265
    
  
  
    

        
          
           capa = (total + 4095) / 4096; 
        
    
  


To fix this I'm proposing to change the capacity calculation to match what's done for arrays: 
  
    
      mruby/src/array.c
    
    
        Lines 180 to 184
      in
      647ad29
    
  
  
    

        
          
           if (capa <= ARY_MAX_SIZE / 2) { 
        

        
          
             capa *= 2; 
        

        
          
           } else { 
        

        
          
             capa = ARY_MAX_SIZE; 
        

        
          
           }",The PR cause infinite loops on some condition. I fixed it in 3a7c369,True,{}
mruby/mruby,https://github.com/mruby/mruby,3342,2016-12-12T18:09:23Z,2016-12-13T01:55:14Z,2016-12-27T19:03:01Z,CLOSED,False,4,4,1,https://github.com/clayton-shopify,Fix calculation of new string capacity.,1,[],https://github.com/mruby/mruby/pull/3342,https://github.com/Asmod4n,3,https://github.com/mruby/mruby/pull/3342#issuecomment-269368105,"@matz
If MRuby is compiled with MRB_INT16, then the following code causes a crash:
loop { ([0]*10000).to_s }
This happens because str_buf_cat incorrectly computes the new string capacity, choosing a capacity which is 1/4096 of the needed value: 
  
    
      mruby/src/string.c
    
    
         Line 166
      in
      9cef265
    
  
  
    

        
          
           capa = (total + 4095) / 4096; 
        
    
  


To fix this I'm proposing to change the capacity calculation to match what's done for arrays: 
  
    
      mruby/src/array.c
    
    
        Lines 180 to 184
      in
      647ad29
    
  
  
    

        
          
           if (capa <= ARY_MAX_SIZE / 2) { 
        

        
          
             capa *= 2; 
        

        
          
           } else { 
        

        
          
             capa = ARY_MAX_SIZE; 
        

        
          
           }","@matz capa = MRB_INT_MAX; looks a bit ""funny"".. because its getting multiplied by 2 in the next step?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3345,2016-12-13T15:29:15Z,2016-12-13T16:19:49Z,2016-12-14T17:08:26Z,MERGED,True,2,1,1,https://github.com/clayton-shopify,Check type before calling mrb_range_ptr.,1,[],https://github.com/mruby/mruby/pull/3345,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3345,"@matz
Without this, the following snippets segfault:
[].values_at true
Struct.new.new.values_at true
The issue was reported by https://hackerone.com/dkasak, who also provided the patch.","@matz
Without this, the following snippets segfault:
[].values_at true
Struct.new.new.values_at true
The issue was reported by https://hackerone.com/dkasak, who also provided the patch.",True,{'THUMBS_UP': ['https://github.com/dkasak']}
mruby/mruby,https://github.com/mruby/mruby,3346,2016-12-15T14:44:04Z,2016-12-17T03:18:35Z,2017-01-03T20:43:18Z,MERGED,True,12,1,2,https://github.com/clayton-shopify,Fix crash when exponent is -2147483648,1,[],https://github.com/mruby/mruby/pull/3346,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3346,"@matz
Currently, the following inputs (and others) crash MRuby:
'1e-2147483648'.to_f
'1e2147483648'.to_f
This happens because exp is equal to -2147483648 here:

  
    
      mruby/src/string.c
    
    
         Line 2943
      in
      73cc087
    
  
  
    

        
          
           exp = -exp; 
        
    
  


Negating exp there leaves it as -2147483648 (since 2147483648 = -2147483648 for 32-bit signed integers). This then results in an out-of-bounds read from powersOf10 a few lines later.
I've tried to solve the problem by limiting fracExp and exp to reasonable values. (MRI also limits the exponent to 19999.)
This issue was reported by https://hackerone.com/revskills.","@matz
Currently, the following inputs (and others) crash MRuby:
'1e-2147483648'.to_f
'1e2147483648'.to_f
This happens because exp is equal to -2147483648 here:

  
    
      mruby/src/string.c
    
    
         Line 2943
      in
      73cc087
    
  
  
    

        
          
           exp = -exp; 
        
    
  


Negating exp there leaves it as -2147483648 (since 2147483648 = -2147483648 for 32-bit signed integers). This then results in an out-of-bounds read from powersOf10 a few lines later.
I've tried to solve the problem by limiting fracExp and exp to reasonable values. (MRI also limits the exponent to 19999.)
This issue was reported by https://hackerone.com/revskills.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3358,2016-12-20T16:07:24Z,2016-12-20T19:03:35Z,2016-12-20T19:03:35Z,MERGED,True,82,0,1,https://github.com/takjn,Added example for cross-compiling on Renesas RX630,1,[],https://github.com/mruby/mruby/pull/3358,https://github.com/takjn,1,https://github.com/mruby/mruby/pull/3358,"There are some ""Gadget Renesas Boards"" which can run mruby.
This example is for them.","There are some ""Gadget Renesas Boards"" which can run mruby.
This example is for them.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3362,2016-12-21T06:27:29Z,2017-01-17T15:09:27Z,2017-01-22T02:13:50Z,MERGED,True,21,44,3,https://github.com/ksss,Proc shouldn't have `initialize` method,2,[],https://github.com/mruby/mruby/pull/3362,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3362,"CRuby's Proc class does't have initialize method.
And It raises some issues when it called Proc.remove_method(:initialize)
I think, Proc class shouldn't have initialize method in mruby too.
ref: #3356","CRuby's Proc class does't have initialize method.
And It raises some issues when it called Proc.remove_method(:initialize)
I think, Proc class shouldn't have initialize method in mruby too.
ref: #3356",True,{}
mruby/mruby,https://github.com/mruby/mruby,3362,2016-12-21T06:27:29Z,2017-01-17T15:09:27Z,2017-01-22T02:13:50Z,MERGED,True,21,44,3,https://github.com/ksss,Proc shouldn't have `initialize` method,2,[],https://github.com/mruby/mruby/pull/3362,https://github.com/jmhmccr,2,https://github.com/mruby/mruby/pull/3362#issuecomment-274302583,"CRuby's Proc class does't have initialize method.
And It raises some issues when it called Proc.remove_method(:initialize)
I think, Proc class shouldn't have initialize method in mruby too.
ref: #3356",Suggest adding this to 1.3 notes: #3140,True,{}
mruby/mruby,https://github.com/mruby/mruby,3363,2016-12-23T14:16:47Z,2016-12-24T15:43:02Z,2016-12-25T07:05:07Z,MERGED,True,3,0,1,https://github.com/ksss,Do nothing when empty string,1,[],https://github.com/mruby/mruby/pull/3363,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3363,Fix #3361,Fix #3361,True,{}
mruby/mruby,https://github.com/mruby/mruby,3364,2016-12-23T14:32:15Z,2016-12-24T16:35:45Z,2016-12-25T07:05:30Z,MERGED,True,3,0,1,https://github.com/ksss,Check overflow string length,1,[],https://github.com/mruby/mruby/pull/3364,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3364,Fix #3360,Fix #3360,True,{}
mruby/mruby,https://github.com/mruby/mruby,3365,2016-12-24T13:59:57Z,2016-12-26T09:12:45Z,2016-12-27T01:06:53Z,MERGED,True,18,3,2,https://github.com/ksss,Fix segv when primitive value,1,[],https://github.com/mruby/mruby/pull/3365,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3365,Fix #3352,Fix #3352,True,{}
mruby/mruby,https://github.com/mruby/mruby,3366,2016-12-27T06:50:25Z,2016-12-28T04:00:14Z,2016-12-28T04:10:00Z,MERGED,True,4,0,1,https://github.com/ksss,Check array max size,1,[],https://github.com/mruby/mruby/pull/3366,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3366,Fix #3354,Fix #3354,True,{}
mruby/mruby,https://github.com/mruby/mruby,3367,2017-01-02T08:24:20Z,2017-01-02T08:48:28Z,2017-04-05T06:18:54Z,MERGED,True,13,9,1,https://github.com/ksss,Fix segv on str_buf_cat,2,[],https://github.com/mruby/mruby/pull/3367,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3367,"mruby master branch was failed
https://travis-ci.org/mruby/mruby/builds/187911505
This test was failed on my Mac OSX.

  
    
      mruby/mrbgems/mruby-struct/test/struct.rb
    
    
        Lines 125 to 129
      in
      07167b8
    
  
  
    

        
          
           assert('struct inspect') do 
        

        
          
             c = Struct.new(:m1, :m2, :m3, :m4, :m5) 
        

        
          
             cc = c.new(1,2,3,4,5) 
        

        
          
             assert_equal ""#<struct m1=1, m2=2, m3=3, m4=4, m5=5>"", cc.inspect 
        

        
          
           end 
        
    
  


assert('struct inspect') do
  c = Struct.new(:m1, :m2, :m3, :m4, :m5)
  cc = c.new(1,2,3,4,5)
  assert_equal ""#<struct m1=1, m2=2, m3=3, m4=4, m5=5>"", cc.inspect
end
$ mruby -e 'c = Struct.new(:m1, :m2, :m3, :m4, :m5); cc = c.new(1,2,3,4,5); p cc.inspect'
""#<struct m1=1, 3=3, m4=4, m5=5>""

Investigation results
On mrb_str_inspect,

  
    
      mruby/src/string.c
    
    
        Lines 2613 to 2678
      in
      07167b8
    
  
  
    

        
          
           mrb_value 
        

        
          
           mrb_str_inspect(mrb_state *mrb, mrb_value str) 
        

        
          
           { 
        

        
          
             const char *p, *pend; 
        

        
          
             char buf[CHAR_ESC_LEN + 1]; 
        

        
          
             mrb_value result = mrb_str_new_lit(mrb, ""\""""); 
        

        
          
            
        

        
          
             p = RSTRING_PTR(str); pend = RSTRING_END(str); 
        

        
          
             for (;p < pend; p++) { 
        

        
          
               unsigned char c, cc; 
        

        
          
           #ifdef MRB_UTF8_STRING 
        

        
          
               mrb_int clen; 
        

        
          
            
        

        
          
               clen = utf8len(p, pend); 
        

        
          
               if (clen > 1) { 
        

        
          
                 mrb_int i; 
        

        
          
            
        

        
          
                 for (i=0; i<clen; i++) { 
        

        
          
                   buf[i] = p[i]; 
        

        
          
                 } 
        

        
          
                 mrb_str_cat(mrb, result, buf, clen); 
        

        
          
                 p += clen-1; 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
           #endif 
        

        
          
               c = *p; 
        

        
          
               if (c == '""'|| c == '\\' || (c == '#' && IS_EVSTR(p, pend))) { 
        

        
          
                 buf[0] = '\\'; buf[1] = c; 
        

        
          
                 mrb_str_cat(mrb, result, buf, 2); 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
               if (ISPRINT(c)) { 
        

        
          
                 buf[0] = c; 
        

        
          
                 mrb_str_cat(mrb, result, buf, 1); 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
               switch (c) { 
        

        
          
                 case '\n': cc = 'n'; break; 
        

        
          
                 case '\r': cc = 'r'; break; 
        

        
          
                 case '\t': cc = 't'; break; 
        

        
          
                 case '\f': cc = 'f'; break; 
        

        
          
                 case '\013': cc = 'v'; break; 
        

        
          
                 case '\010': cc = 'b'; break; 
        

        
          
                 case '\007': cc = 'a'; break; 
        

        
          
                 case 033: cc = 'e'; break; 
        

        
          
                 default: cc = 0; break; 
        

        
          
               } 
        

        
          
               if (cc) { 
        

        
          
                 buf[0] = '\\'; 
        

        
          
                 buf[1] = (char)cc; 
        

        
          
                 mrb_str_cat(mrb, result, buf, 2); 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
               else { 
        

        
          
                 buf[0] = '\\'; 
        

        
          
                 buf[3] = '0' + c % 8; c /= 8; 
        

        
          
                 buf[2] = '0' + c % 8; c /= 8; 
        

        
          
                 buf[1] = '0' + c % 8; 
        

        
          
                 mrb_str_cat(mrb, result, buf, 4); 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
             } 
        

        
          
             mrb_str_cat_lit(mrb, result, ""\""""); 
        

        
          
            
        

        
          
             return result; 
        

        
          
           } 
        
    
  



mrb_str_new_lit makes nofree string.
And then, mrb_str_modify change from nofree to normal rstring in mrb_str_cat. But this rstring's malloced size is 1.
And then, memcpy append chars to rstring(It's already wrong)
And then, realloc clashed with this rstring ptr(I don't know why).


Backtrace
$ lldb ./build/test/bin/mrbtest
(lldb) target create ""./build/test/bin/mrbtest""
Current executable set to './build/test/bin/mrbtest' (x86_64).
(lldb) run
Process 6344 launched: './build/test/bin/mrbtest' (x86_64)
mrbtest - Embeddable Ruby Test

mrbtest(6344,0x7fff76097000) malloc: *** error for object 0x10072af00: incorrect checksum for freed object - object was probably modified after being freed.
*** set a breakpoint in malloc_error_break to debug
...................................................................................Process 6344 stopped
* thread #1: tid = 0x1443df, 0x00007fff8b130f06 libsystem_kernel.dylib`__pthread_kill + 10, queue = 'com.apple.main-thread', stop reason = signal SIGABRT
    frame #0: 0x00007fff8b130f06 libsystem_kernel.dylib`__pthread_kill + 10
libsystem_kernel.dylib`__pthread_kill:
->  0x7fff8b130f06 <+10>: jae    0x7fff8b130f10            ; <+20>
    0x7fff8b130f08 <+12>: movq   %rax, %rdi
    0x7fff8b130f0b <+15>: jmp    0x7fff8b12b7cd            ; cerror_nocancel
    0x7fff8b130f10 <+20>: retq
(lldb) bt
warning: could not load any Objective-C class information. This will significantly reduce the quality of type information available.
* thread #1: tid = 0x1443df, 0x00007fff8b130f06 libsystem_kernel.dylib`__pthread_kill + 10, queue = 'com.apple.main-thread', stop reason = signal SIGABRT
  * frame #0: 0x00007fff8b130f06 libsystem_kernel.dylib`__pthread_kill + 10
    frame #1: 0x00007fff95efd4ec libsystem_pthread.dylib`pthread_kill + 90
    frame #2: 0x00007fff842376df libsystem_c.dylib`abort + 129
    frame #3: 0x00007fff983f5396 libsystem_malloc.dylib`szone_error + 626
    frame #4: 0x00007fff983eb5f4 libsystem_malloc.dylib`tiny_free_list_remove_ptr + 289
    frame #5: 0x00007fff983ebf97 libsystem_malloc.dylib`szone_realloc + 1915
    frame #6: 0x00007fff983eb7eb libsystem_malloc.dylib`malloc_zone_realloc + 78
    frame #7: 0x00007fff983eb70a libsystem_malloc.dylib`realloc + 214
    frame #8: 0x0000000100036046 mrbtest`mrb_default_allocf(mrb=0x0000000100708fd0, p=0x000000010072aef0, size=25, ud=0x0000000000000000) + 70 at state.c:60
    frame #9: 0x0000000100021bdd mrbtest`mrb_realloc_simple(mrb=0x0000000100708fd0, p=0x000000010072aef0, len=25) + 61 at gc.c:201
    frame #10: 0x0000000100021d95 mrbtest`mrb_realloc(mrb=0x0000000100708fd0, p=0x000000010072aef0, len=25) + 37 at gc.c:215
    frame #11: 0x000000010003794b mrbtest`resize_capa(mrb=0x0000000100708fd0, s=0x000000010201b1a0, capacity=24) + 379 at string.c:139
    frame #12: 0x000000010003b97d mrbtest`str_buf_cat(mrb=0x0000000100708fd0, s=0x000000010201b1a0, ptr=""3\x02\x01"", len=1) + 701 at string.c:181
    frame #13: 0x000000010003b69f mrbtest`mrb_str_cat(mrb=0x0000000100708fd0, str=mrb_value @ 0x00007fff5fbfe600, ptr=""3\x02\x01"", len=1) + 47 at string.c:2577
    frame #14: 0x000000010003c048 mrbtest`mrb_str_inspect(mrb=0x0000000100708fd0, str=mrb_value @ 0x00007fff5fbfe6f8) + 520 at string.c:2646
    frame #15: 0x0000000100049dae mrbtest`mrb_vm_exec(mrb=0x0000000100708fd0, proc=0x00000001020034e0, pc=0x0000000100065e7c) + 6878 at vm.c:1174
    frame #16: 0x00000001000482b7 mrbtest`mrb_vm_run(mrb=0x0000000100708fd0, proc=0x0000000102002520, self=mrb_value @ 0x00007fff5fbff400, stack_keep=0) + 135 at vm.c:772
    frame #17: 0x0000000100050934 mrbtest`mrb_top_run(mrb=0x0000000100708fd0, proc=0x0000000102002520, self=mrb_value @ 0x00007fff5fbff470, stack_keep=0) + 100 at vm.c:2490
    frame #18: 0x000000010002beae mrbtest`mrb_load_irep_cxt(mrb=0x0000000100708fd0, bin=""ETIR0003\x84\x1c"", c=0x0000000000000000) + 222 at load.c:638
    frame #19: 0x000000010002c07d mrbtest`mrb_load_irep(mrb=0x0000000100708fd0, bin=""ETIR0003\x84\x1c"") + 29 at load.c:644
    frame #20: 0x0000000100002b23 mrbtest`GENERATED_TMP_mrb_mruby_sprintf_gem_test(mrb=0x0000000100400390) + 2611 at gem_test.c:145
    frame #21: 0x0000000100002019 mrbtest`mrbgemtest_init(mrb=0x0000000100400390) + 57 at mrbtest.c:80
    frame #22: 0x0000000100001fa7 mrbtest`mrb_init_mrbtest(mrb=0x0000000100400390) + 247 at mrbtest.c:38
    frame #23: 0x0000000100001ce8 mrbtest`main(argc=1, argv=0x00007fff5fbff6d0) + 184 at driver.c:167
    frame #24: 0x00007fff8c0305ad libdyld.dylib`start + 1


The ways of fix

No fix mrb_str_modify. And care it memory and rstring modes.
mrb_str_modify makes embed string(resize_capa supported embed rstring).

So, I choose 2.
Concern
Shared rstring also have this issue. But I couldn't error cases.","mruby master branch was failed
https://travis-ci.org/mruby/mruby/builds/187911505
This test was failed on my Mac OSX.

  
    
      mruby/mrbgems/mruby-struct/test/struct.rb
    
    
        Lines 125 to 129
      in
      07167b8
    
  
  
    

        
          
           assert('struct inspect') do 
        

        
          
             c = Struct.new(:m1, :m2, :m3, :m4, :m5) 
        

        
          
             cc = c.new(1,2,3,4,5) 
        

        
          
             assert_equal ""#<struct m1=1, m2=2, m3=3, m4=4, m5=5>"", cc.inspect 
        

        
          
           end 
        
    
  


assert('struct inspect') do
  c = Struct.new(:m1, :m2, :m3, :m4, :m5)
  cc = c.new(1,2,3,4,5)
  assert_equal ""#<struct m1=1, m2=2, m3=3, m4=4, m5=5>"", cc.inspect
end
$ mruby -e 'c = Struct.new(:m1, :m2, :m3, :m4, :m5); cc = c.new(1,2,3,4,5); p cc.inspect'
""#<struct m1=1, 3=3, m4=4, m5=5>""

Investigation results
On mrb_str_inspect,

  
    
      mruby/src/string.c
    
    
        Lines 2613 to 2678
      in
      07167b8
    
  
  
    

        
          
           mrb_value 
        

        
          
           mrb_str_inspect(mrb_state *mrb, mrb_value str) 
        

        
          
           { 
        

        
          
             const char *p, *pend; 
        

        
          
             char buf[CHAR_ESC_LEN + 1]; 
        

        
          
             mrb_value result = mrb_str_new_lit(mrb, ""\""""); 
        

        
          
            
        

        
          
             p = RSTRING_PTR(str); pend = RSTRING_END(str); 
        

        
          
             for (;p < pend; p++) { 
        

        
          
               unsigned char c, cc; 
        

        
          
           #ifdef MRB_UTF8_STRING 
        

        
          
               mrb_int clen; 
        

        
          
            
        

        
          
               clen = utf8len(p, pend); 
        

        
          
               if (clen > 1) { 
        

        
          
                 mrb_int i; 
        

        
          
            
        

        
          
                 for (i=0; i<clen; i++) { 
        

        
          
                   buf[i] = p[i]; 
        

        
          
                 } 
        

        
          
                 mrb_str_cat(mrb, result, buf, clen); 
        

        
          
                 p += clen-1; 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
           #endif 
        

        
          
               c = *p; 
        

        
          
               if (c == '""'|| c == '\\' || (c == '#' && IS_EVSTR(p, pend))) { 
        

        
          
                 buf[0] = '\\'; buf[1] = c; 
        

        
          
                 mrb_str_cat(mrb, result, buf, 2); 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
               if (ISPRINT(c)) { 
        

        
          
                 buf[0] = c; 
        

        
          
                 mrb_str_cat(mrb, result, buf, 1); 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
               switch (c) { 
        

        
          
                 case '\n': cc = 'n'; break; 
        

        
          
                 case '\r': cc = 'r'; break; 
        

        
          
                 case '\t': cc = 't'; break; 
        

        
          
                 case '\f': cc = 'f'; break; 
        

        
          
                 case '\013': cc = 'v'; break; 
        

        
          
                 case '\010': cc = 'b'; break; 
        

        
          
                 case '\007': cc = 'a'; break; 
        

        
          
                 case 033: cc = 'e'; break; 
        

        
          
                 default: cc = 0; break; 
        

        
          
               } 
        

        
          
               if (cc) { 
        

        
          
                 buf[0] = '\\'; 
        

        
          
                 buf[1] = (char)cc; 
        

        
          
                 mrb_str_cat(mrb, result, buf, 2); 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
               else { 
        

        
          
                 buf[0] = '\\'; 
        

        
          
                 buf[3] = '0' + c % 8; c /= 8; 
        

        
          
                 buf[2] = '0' + c % 8; c /= 8; 
        

        
          
                 buf[1] = '0' + c % 8; 
        

        
          
                 mrb_str_cat(mrb, result, buf, 4); 
        

        
          
                 continue; 
        

        
          
               } 
        

        
          
             } 
        

        
          
             mrb_str_cat_lit(mrb, result, ""\""""); 
        

        
          
            
        

        
          
             return result; 
        

        
          
           } 
        
    
  



mrb_str_new_lit makes nofree string.
And then, mrb_str_modify change from nofree to normal rstring in mrb_str_cat. But this rstring's malloced size is 1.
And then, memcpy append chars to rstring(It's already wrong)
And then, realloc clashed with this rstring ptr(I don't know why).


Backtrace
$ lldb ./build/test/bin/mrbtest
(lldb) target create ""./build/test/bin/mrbtest""
Current executable set to './build/test/bin/mrbtest' (x86_64).
(lldb) run
Process 6344 launched: './build/test/bin/mrbtest' (x86_64)
mrbtest - Embeddable Ruby Test

mrbtest(6344,0x7fff76097000) malloc: *** error for object 0x10072af00: incorrect checksum for freed object - object was probably modified after being freed.
*** set a breakpoint in malloc_error_break to debug
...................................................................................Process 6344 stopped
* thread #1: tid = 0x1443df, 0x00007fff8b130f06 libsystem_kernel.dylib`__pthread_kill + 10, queue = 'com.apple.main-thread', stop reason = signal SIGABRT
    frame #0: 0x00007fff8b130f06 libsystem_kernel.dylib`__pthread_kill + 10
libsystem_kernel.dylib`__pthread_kill:
->  0x7fff8b130f06 <+10>: jae    0x7fff8b130f10            ; <+20>
    0x7fff8b130f08 <+12>: movq   %rax, %rdi
    0x7fff8b130f0b <+15>: jmp    0x7fff8b12b7cd            ; cerror_nocancel
    0x7fff8b130f10 <+20>: retq
(lldb) bt
warning: could not load any Objective-C class information. This will significantly reduce the quality of type information available.
* thread #1: tid = 0x1443df, 0x00007fff8b130f06 libsystem_kernel.dylib`__pthread_kill + 10, queue = 'com.apple.main-thread', stop reason = signal SIGABRT
  * frame #0: 0x00007fff8b130f06 libsystem_kernel.dylib`__pthread_kill + 10
    frame #1: 0x00007fff95efd4ec libsystem_pthread.dylib`pthread_kill + 90
    frame #2: 0x00007fff842376df libsystem_c.dylib`abort + 129
    frame #3: 0x00007fff983f5396 libsystem_malloc.dylib`szone_error + 626
    frame #4: 0x00007fff983eb5f4 libsystem_malloc.dylib`tiny_free_list_remove_ptr + 289
    frame #5: 0x00007fff983ebf97 libsystem_malloc.dylib`szone_realloc + 1915
    frame #6: 0x00007fff983eb7eb libsystem_malloc.dylib`malloc_zone_realloc + 78
    frame #7: 0x00007fff983eb70a libsystem_malloc.dylib`realloc + 214
    frame #8: 0x0000000100036046 mrbtest`mrb_default_allocf(mrb=0x0000000100708fd0, p=0x000000010072aef0, size=25, ud=0x0000000000000000) + 70 at state.c:60
    frame #9: 0x0000000100021bdd mrbtest`mrb_realloc_simple(mrb=0x0000000100708fd0, p=0x000000010072aef0, len=25) + 61 at gc.c:201
    frame #10: 0x0000000100021d95 mrbtest`mrb_realloc(mrb=0x0000000100708fd0, p=0x000000010072aef0, len=25) + 37 at gc.c:215
    frame #11: 0x000000010003794b mrbtest`resize_capa(mrb=0x0000000100708fd0, s=0x000000010201b1a0, capacity=24) + 379 at string.c:139
    frame #12: 0x000000010003b97d mrbtest`str_buf_cat(mrb=0x0000000100708fd0, s=0x000000010201b1a0, ptr=""3\x02\x01"", len=1) + 701 at string.c:181
    frame #13: 0x000000010003b69f mrbtest`mrb_str_cat(mrb=0x0000000100708fd0, str=mrb_value @ 0x00007fff5fbfe600, ptr=""3\x02\x01"", len=1) + 47 at string.c:2577
    frame #14: 0x000000010003c048 mrbtest`mrb_str_inspect(mrb=0x0000000100708fd0, str=mrb_value @ 0x00007fff5fbfe6f8) + 520 at string.c:2646
    frame #15: 0x0000000100049dae mrbtest`mrb_vm_exec(mrb=0x0000000100708fd0, proc=0x00000001020034e0, pc=0x0000000100065e7c) + 6878 at vm.c:1174
    frame #16: 0x00000001000482b7 mrbtest`mrb_vm_run(mrb=0x0000000100708fd0, proc=0x0000000102002520, self=mrb_value @ 0x00007fff5fbff400, stack_keep=0) + 135 at vm.c:772
    frame #17: 0x0000000100050934 mrbtest`mrb_top_run(mrb=0x0000000100708fd0, proc=0x0000000102002520, self=mrb_value @ 0x00007fff5fbff470, stack_keep=0) + 100 at vm.c:2490
    frame #18: 0x000000010002beae mrbtest`mrb_load_irep_cxt(mrb=0x0000000100708fd0, bin=""ETIR0003\x84\x1c"", c=0x0000000000000000) + 222 at load.c:638
    frame #19: 0x000000010002c07d mrbtest`mrb_load_irep(mrb=0x0000000100708fd0, bin=""ETIR0003\x84\x1c"") + 29 at load.c:644
    frame #20: 0x0000000100002b23 mrbtest`GENERATED_TMP_mrb_mruby_sprintf_gem_test(mrb=0x0000000100400390) + 2611 at gem_test.c:145
    frame #21: 0x0000000100002019 mrbtest`mrbgemtest_init(mrb=0x0000000100400390) + 57 at mrbtest.c:80
    frame #22: 0x0000000100001fa7 mrbtest`mrb_init_mrbtest(mrb=0x0000000100400390) + 247 at mrbtest.c:38
    frame #23: 0x0000000100001ce8 mrbtest`main(argc=1, argv=0x00007fff5fbff6d0) + 184 at driver.c:167
    frame #24: 0x00007fff8c0305ad libdyld.dylib`start + 1


The ways of fix

No fix mrb_str_modify. And care it memory and rstring modes.
mrb_str_modify makes embed string(resize_capa supported embed rstring).

So, I choose 2.
Concern
Shared rstring also have this issue. But I couldn't error cases.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3369,2017-01-04T05:11:14Z,2017-01-05T08:40:39Z,2017-01-05T12:33:54Z,MERGED,True,14,39,2,https://github.com/ksss,Rewrite String#prepend with Ruby,1,[],https://github.com/mruby/mruby/pull/3369,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3369,"String#prepend have unexpected behavior.
s = ""abcdefghijkl""
p s.prepend(s)
#=> ""abcdefghijkl\000\000\000\360\002\000\000\000\000\000\000\360""
I think it will be able to write more simply.
And fix #3357","String#prepend have unexpected behavior.
s = ""abcdefghijkl""
p s.prepend(s)
#=> ""abcdefghijkl\000\000\000\360\002\000\000\000\000\000\000\360""
I think it will be able to write more simply.
And fix #3357",True,"{'THUMBS_UP': ['https://github.com/dabroz', 'https://github.com/syucream']}"
mruby/mruby,https://github.com/mruby/mruby,3369,2017-01-04T05:11:14Z,2017-01-05T08:40:39Z,2017-01-05T12:33:54Z,MERGED,True,14,39,2,https://github.com/ksss,Rewrite String#prepend with Ruby,1,[],https://github.com/mruby/mruby/pull/3369,https://github.com/ksss,2,https://github.com/mruby/mruby/pull/3369#issuecomment-270297570,"String#prepend have unexpected behavior.
s = ""abcdefghijkl""
p s.prepend(s)
#=> ""abcdefghijkl\000\000\000\360\002\000\000\000\000\000\000\360""
I think it will be able to write more simply.
And fix #3357","I think, Argument should try convert to string when none String object on String#[]=.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3371,2017-01-05T14:02:48Z,2017-01-06T05:35:11Z,2017-01-06T13:25:07Z,MERGED,True,4,4,1,https://github.com/takjn,Removed ununnecessary escape character '\' in libmruby.flags.mak,1,[],https://github.com/mruby/mruby/pull/3371,https://github.com/takjn,1,https://github.com/mruby/mruby/pull/3371,"There seems to be an unnecessary escape character '' in libmruby.flags.mak.
I think #800 is the cause.","There seems to be an unnecessary escape character '' in libmruby.flags.mak.
I think #800 is the cause.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3376,2017-01-06T06:29:52Z,2017-01-06T09:52:23Z,2017-01-06T09:52:23Z,MERGED,True,2,2,2,https://github.com/bovi,Update Copyright to 2017,1,[],https://github.com/mruby/mruby/pull/3376,https://github.com/bovi,1,https://github.com/mruby/mruby/pull/3376,The yearly update of Copyright information.,The yearly update of Copyright information.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3377,2017-01-06T07:30:58Z,2017-01-06T09:56:40Z,2017-01-06T11:02:20Z,MERGED,True,5,2,1,https://github.com/ksss,Check intern object returned by mrb_check_string_type,1,[],https://github.com/mruby/mruby/pull/3377,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3377,Fix #3372,Fix #3372,True,{}
mruby/mruby,https://github.com/mruby/mruby,3380,2017-01-07T09:14:51Z,2017-01-07T10:37:56Z,2017-01-07T11:38:45Z,MERGED,True,2,1,1,https://github.com/syucream,Pass when assert returns a false value,1,[],https://github.com/mruby/mruby/pull/3380,https://github.com/syucream,1,https://github.com/mruby/mruby/pull/3380,"I'd like to pass when assert block returns a false value because the block may be tested sufficiently by assert_*.
If doesn't pass the value, test code will be failed unexpectedly. For example, my mrbgem's test:
assert 'K2Hash#open' do
  ...
  db = K2Hash.new(...
  assert_true db.empty?
  db.close #=> nil
end
It fails and the reason isn't told.
$ ./minirake test
...
Fail: K2Hash#open (mrbgems: mruby-k2hash)
Skip: Module#prepend super in alias  super does not currently work in aliased methods
Total: 964
   OK: 963
   KO: 1
Crash: 0
 Time: 0.52 seconds
rake aborted!
Command Failed: [""build/host/bin/mrbtest""]
Rakefile:119:in `block (2 levels) in <top (required)>'","I'd like to pass when assert block returns a false value because the block may be tested sufficiently by assert_*.
If doesn't pass the value, test code will be failed unexpectedly. For example, my mrbgem's test:
assert 'K2Hash#open' do
  ...
  db = K2Hash.new(...
  assert_true db.empty?
  db.close #=> nil
end
It fails and the reason isn't told.
$ ./minirake test
...
Fail: K2Hash#open (mrbgems: mruby-k2hash)
Skip: Module#prepend super in alias  super does not currently work in aliased methods
Total: 964
   OK: 963
   KO: 1
Crash: 0
 Time: 0.52 seconds
rake aborted!
Command Failed: [""build/host/bin/mrbtest""]
Rakefile:119:in `block (2 levels) in <top (required)>'",True,{}
mruby/mruby,https://github.com/mruby/mruby,3381,2017-01-09T01:11:24Z,2017-01-09T01:25:34Z,2017-01-09T01:26:15Z,MERGED,True,1,1,1,https://github.com/sorah,Put package's libs flag after %{objs},1,[],https://github.com/mruby/mruby/pull/3381,https://github.com/sorah,1,https://github.com/mruby/mruby/pull/3381,"In case LDFLAG contains -Wl,--as-needed or --as-needed is enabled by default, -l flags should appear after objs specifiction.

For instance, try building mruby tool includes mattn/mruby-onig-regexp with LDFLAG=""-Wl,--as-needed"".","In case LDFLAG contains -Wl,--as-needed or --as-needed is enabled by default, -l flags should appear after objs specifiction.

For instance, try building mruby tool includes mattn/mruby-onig-regexp with LDFLAG=""-Wl,--as-needed"".",True,{'THUMBS_UP': ['https://github.com/007lva']}
mruby/mruby,https://github.com/mruby/mruby,3393,2017-01-11T14:08:05Z,2017-01-12T06:31:33Z,2017-01-12T06:31:33Z,MERGED,True,1,1,1,https://github.com/clayton-shopify,Fix broken MRB_INT64,1,[],https://github.com/mruby/mruby/pull/3393,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3393,"@matz
Fixes this: 7523cdf#commitcomment-20436148","@matz
Fixes this: 7523cdf#commitcomment-20436148",True,{}
mruby/mruby,https://github.com/mruby/mruby,3393,2017-01-11T14:08:05Z,2017-01-12T06:31:33Z,2017-01-12T06:31:33Z,MERGED,True,1,1,1,https://github.com/clayton-shopify,Fix broken MRB_INT64,1,[],https://github.com/mruby/mruby/pull/3393,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3393#issuecomment-272087397,"@matz
Fixes this: 7523cdf#commitcomment-20436148",Right. Thank you.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3394,2017-01-11T14:12:59Z,2017-01-12T06:29:02Z,2017-01-23T13:33:31Z,MERGED,True,21,2,2,https://github.com/clayton-shopify,Fix 36fc1f14 not checking in the right location,1,[],https://github.com/mruby/mruby/pull/3394,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3394,"@matz
This is a rebase of #3323 to see if the AppVeyor problem goes away.","@matz
This is a rebase of #3323 to see if the AppVeyor problem goes away.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3394,2017-01-11T14:12:59Z,2017-01-12T06:29:02Z,2017-01-23T13:33:31Z,MERGED,True,21,2,2,https://github.com/clayton-shopify,Fix 36fc1f14 not checking in the right location,1,[],https://github.com/mruby/mruby/pull/3394,https://github.com/clayton-shopify,2,https://github.com/mruby/mruby/pull/3394#issuecomment-271882378,"@matz
This is a rebase of #3323 to see if the AppVeyor problem goes away.",Looks like everything is good now.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3395,2017-01-11T15:13:57Z,2017-01-12T06:04:14Z,2017-01-12T06:04:14Z,MERGED,True,1,1,1,https://github.com/hhc0null,Fix a typo in string.h.,1,[],https://github.com/mruby/mruby/pull/3395,https://github.com/hhc0null,1,https://github.com/mruby/mruby/pull/3395,"Change RSTR_ENBED_LEN(RSTRING(s)) to RSTR_EMBED_LEN(RSTRING(s)).
It's a trap of macro in C.","Change RSTR_ENBED_LEN(RSTRING(s)) to RSTR_EMBED_LEN(RSTRING(s)).
It's a trap of macro in C.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3395,2017-01-11T15:13:57Z,2017-01-12T06:04:14Z,2017-01-12T06:04:14Z,MERGED,True,1,1,1,https://github.com/hhc0null,Fix a typo in string.h.,1,[],https://github.com/mruby/mruby/pull/3395,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3395#issuecomment-272083894,"Change RSTR_ENBED_LEN(RSTRING(s)) to RSTR_EMBED_LEN(RSTRING(s)).
It's a trap of macro in C.",Agreed.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3399,2017-01-14T04:23:25Z,2017-01-16T08:11:48Z,2017-01-17T02:45:30Z,MERGED,True,88,0,2,https://github.com/ksss,Implement Kernel.#caller,2,[],https://github.com/mruby/mruby/pull/3399,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3399,"I implemented Kernel.#caller in my free time.
I think it useful for debugging.
If you don't agree to add this to mruby/mruby, I'll be able to make another repository as mrbgem.","I implemented Kernel.#caller in my free time.
I think it useful for debugging.
If you don't agree to add this to mruby/mruby, I'll be able to make another repository as mrbgem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3399,2017-01-14T04:23:25Z,2017-01-16T08:11:48Z,2017-01-17T02:45:30Z,MERGED,True,88,0,2,https://github.com/ksss,Implement Kernel.#caller,2,[],https://github.com/mruby/mruby/pull/3399,https://github.com/zzak,2,https://github.com/mruby/mruby/pull/3399#issuecomment-272815874,"I implemented Kernel.#caller in my free time.
I think it useful for debugging.
If you don't agree to add this to mruby/mruby, I'll be able to make another repository as mrbgem.",/cc #3140,True,{}
mruby/mruby,https://github.com/mruby/mruby,3402,2017-01-20T23:44:14Z,2017-01-21T02:15:15Z,2017-01-21T14:48:30Z,MERGED,True,1,5,1,https://github.com/clayton-shopify,Remove problematic optimization from NODE_MASGN codegen,1,[],https://github.com/mruby/mruby/pull/3402,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3402,"@matz
Fixes #3390.
An explanation of the problem is here: #3390 (comment)","@matz
Fixes #3390.
An explanation of the problem is here: #3390 (comment)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3404,2017-01-21T14:10:24Z,2017-01-21T14:52:26Z,2017-01-23T16:47:19Z,MERGED,True,1,1,1,https://github.com/clayton-shopify,Fix incorrect parsing of block parameters.,1,[],https://github.com/mruby/mruby/pull/3404,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3404,"@matz
Fixes #3403.","@matz
Fixes #3403.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3409,2017-01-22T08:48:25Z,2017-01-23T01:28:10Z,2017-01-23T03:55:12Z,MERGED,True,32,20,1,https://github.com/ksss,Rewrite mrb_ary_splice,1,[],https://github.com/mruby/mruby/pull/3409,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3409,"Referenced to CRuby's array.c(rb_ary_splice)
fix #3405
ary = Array.new(1024)
ary[0x7ffffc00,1024] = Array.new(1024)
#=> index 2147482624 too big (IndexError)
It's also passed #3354
ary = Array.new(1023)
ary[0x7ffffc00,0] = Array.new(1024)
#=> index 2147482624 too big (IndexError)
And count of fails in mruby-spec doesn't change(5 fails).
I'm not confident about GC... Please review.","Referenced to CRuby's array.c(rb_ary_splice)
fix #3405
ary = Array.new(1024)
ary[0x7ffffc00,1024] = Array.new(1024)
#=> index 2147482624 too big (IndexError)
It's also passed #3354
ary = Array.new(1023)
ary[0x7ffffc00,0] = Array.new(1024)
#=> index 2147482624 too big (IndexError)
And count of fails in mruby-spec doesn't change(5 fails).
I'm not confident about GC... Please review.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3410,2017-01-22T11:52:30Z,2017-01-22T15:24:01Z,2017-01-23T00:15:37Z,MERGED,True,1,0,1,https://github.com/ksss,Should raise RuntimeError when object frozen,1,[],https://github.com/mruby/mruby/pull/3410,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3410,"It's a small change.
before
a = [].freeze
a[0] = 1 #=> can't modify frozen array (RuntimeError)
a[:b] = 1 #=> can't convert Symbol into Integer (TypeError)
after
a = [].freeze
a[0] = 1 #=> can't modify frozen array (RuntimeError)
a[:b] = 1 #=> can't modify frozen array (RuntimeError)","It's a small change.
before
a = [].freeze
a[0] = 1 #=> can't modify frozen array (RuntimeError)
a[:b] = 1 #=> can't convert Symbol into Integer (TypeError)
after
a = [].freeze
a[0] = 1 #=> can't modify frozen array (RuntimeError)
a[:b] = 1 #=> can't modify frozen array (RuntimeError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3412,2017-01-23T06:20:59Z,2017-01-23T06:24:57Z,2017-01-23T06:27:07Z,MERGED,True,2,4,1,https://github.com/ksss,Refactoring: Use array_copy instead of for loop,1,[],https://github.com/mruby/mruby/pull/3412,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3412,Fix for fdec607,Fix for fdec607,True,{}
mruby/mruby,https://github.com/mruby/mruby,3420,2017-02-01T11:06:30Z,2017-02-03T00:30:23Z,2017-02-03T03:43:06Z,MERGED,True,1,1,1,https://github.com/udzura,Fix usage of Class#name in mruby-bin-mruby's bintest,1,[],https://github.com/mruby/mruby/pull/3420,https://github.com/udzura,1,https://github.com/mruby/mruby/pull/3420,"I found that the mruby-bin's bintest case added at this commit requires Class(Module)#name, which is defined at mruby-class-ext mgem, not at core.
This would not break mruby's upstream test, but breaks bintests of binary tools(such as mruby-cli ones) which create a mruby binary additionally.
ref: f7a891f#diff-1d3b69d05e6068fdd48537dda6e5cb62R55","I found that the mruby-bin's bintest case added at this commit requires Class(Module)#name, which is defined at mruby-class-ext mgem, not at core.
This would not break mruby's upstream test, but breaks bintests of binary tools(such as mruby-cli ones) which create a mruby binary additionally.
ref: f7a891f#diff-1d3b69d05e6068fdd48537dda6e5cb62R55",True,{'THUMBS_UP': ['https://github.com/matsumotory']}
mruby/mruby,https://github.com/mruby/mruby,3420,2017-02-01T11:06:30Z,2017-02-03T00:30:23Z,2017-02-03T03:43:06Z,MERGED,True,1,1,1,https://github.com/udzura,Fix usage of Class#name in mruby-bin-mruby's bintest,1,[],https://github.com/mruby/mruby/pull/3420,https://github.com/ksss,2,https://github.com/mruby/mruby/pull/3420#issuecomment-276837862,"I found that the mruby-bin's bintest case added at this commit requires Class(Module)#name, which is defined at mruby-class-ext mgem, not at core.
This would not break mruby's upstream test, but breaks bintests of binary tools(such as mruby-cli ones) which create a mruby binary additionally.
ref: f7a891f#diff-1d3b69d05e6068fdd48537dda6e5cb62R55","How about to use Module#to_s instead of Module#name ?
It not need dependency.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3420,2017-02-01T11:06:30Z,2017-02-03T00:30:23Z,2017-02-03T03:43:06Z,MERGED,True,1,1,1,https://github.com/udzura,Fix usage of Class#name in mruby-bin-mruby's bintest,1,[],https://github.com/mruby/mruby/pull/3420,https://github.com/udzura,3,https://github.com/mruby/mruby/pull/3420#issuecomment-276872652,"I found that the mruby-bin's bintest case added at this commit requires Class(Module)#name, which is defined at mruby-class-ext mgem, not at core.
This would not break mruby's upstream test, but breaks bintests of binary tools(such as mruby-cli ones) which create a mruby binary additionally.
ref: f7a891f#diff-1d3b69d05e6068fdd48537dda6e5cb62R55",This sounds good!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3420,2017-02-01T11:06:30Z,2017-02-03T00:30:23Z,2017-02-03T03:43:06Z,MERGED,True,1,1,1,https://github.com/udzura,Fix usage of Class#name in mruby-bin-mruby's bintest,1,[],https://github.com/mruby/mruby/pull/3420,https://github.com/zzak,4,https://github.com/mruby/mruby/pull/3420#issuecomment-276893883,"I found that the mruby-bin's bintest case added at this commit requires Class(Module)#name, which is defined at mruby-class-ext mgem, not at core.
This would not break mruby's upstream test, but breaks bintests of binary tools(such as mruby-cli ones) which create a mruby binary additionally.
ref: f7a891f#diff-1d3b69d05e6068fdd48537dda6e5cb62R55",LGTM,True,{}
mruby/mruby,https://github.com/mruby/mruby,3420,2017-02-01T11:06:30Z,2017-02-03T00:30:23Z,2017-02-03T03:43:06Z,MERGED,True,1,1,1,https://github.com/udzura,Fix usage of Class#name in mruby-bin-mruby's bintest,1,[],https://github.com/mruby/mruby/pull/3420,https://github.com/zzak,5,https://github.com/mruby/mruby/pull/3420#issuecomment-276893932,"I found that the mruby-bin's bintest case added at this commit requires Class(Module)#name, which is defined at mruby-class-ext mgem, not at core.
This would not break mruby's upstream test, but breaks bintests of binary tools(such as mruby-cli ones) which create a mruby binary additionally.
ref: f7a891f#diff-1d3b69d05e6068fdd48537dda6e5cb62R55",Can you squash?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3420,2017-02-01T11:06:30Z,2017-02-03T00:30:23Z,2017-02-03T03:43:06Z,MERGED,True,1,1,1,https://github.com/udzura,Fix usage of Class#name in mruby-bin-mruby's bintest,1,[],https://github.com/mruby/mruby/pull/3420,https://github.com/udzura,6,https://github.com/mruby/mruby/pull/3420#issuecomment-276903653,"I found that the mruby-bin's bintest case added at this commit requires Class(Module)#name, which is defined at mruby-class-ext mgem, not at core.
This would not break mruby's upstream test, but breaks bintests of binary tools(such as mruby-cli ones) which create a mruby binary additionally.
ref: f7a891f#diff-1d3b69d05e6068fdd48537dda6e5cb62R55",@zzak OK!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3420,2017-02-01T11:06:30Z,2017-02-03T00:30:23Z,2017-02-03T03:43:06Z,MERGED,True,1,1,1,https://github.com/udzura,Fix usage of Class#name in mruby-bin-mruby's bintest,1,[],https://github.com/mruby/mruby/pull/3420,https://github.com/udzura,7,https://github.com/mruby/mruby/pull/3420#issuecomment-277157247,"I found that the mruby-bin's bintest case added at this commit requires Class(Module)#name, which is defined at mruby-class-ext mgem, not at core.
This would not break mruby's upstream test, but breaks bintests of binary tools(such as mruby-cli ones) which create a mruby binary additionally.
ref: f7a891f#diff-1d3b69d05e6068fdd48537dda6e5cb62R55",Thanks!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3427,2017-02-02T21:50:04Z,2017-02-03T00:29:47Z,2017-02-03T15:08:37Z,MERGED,True,2,1,1,https://github.com/clayton-shopify,Fetch arguments earlier in mrb_random_init to avoid a crash.,1,[],https://github.com/mruby/mruby/pull/3427,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3427,"The following input demonstrates a crash due to a null pointer dereference:
$r = Random.new
a = Object.new
def a.to_int
    $r.rand
end

$r.initialize a
This happens because this line calls mrb_get_args, which can execute Ruby code: 
  
    
      mruby/mrbgems/mruby-random/src/random.c
    
    
         Line 137
      in
      6420951
    
  
  
    

        
          
           seed = get_opt(mrb); 
        
    
  


This allows mrb_random_rand to be called at a time when the object's data pointer is still NULL.
I've fixed that by moving the get_opt call to the top of mrb_random_init.
This issue was reported by https://hackerone.com/eboda","The following input demonstrates a crash due to a null pointer dereference:
$r = Random.new
a = Object.new
def a.to_int
    $r.rand
end

$r.initialize a
This happens because this line calls mrb_get_args, which can execute Ruby code: 
  
    
      mruby/mrbgems/mruby-random/src/random.c
    
    
         Line 137
      in
      6420951
    
  
  
    

        
          
           seed = get_opt(mrb); 
        
    
  


This allows mrb_random_rand to be called at a time when the object's data pointer is still NULL.
I've fixed that by moving the get_opt call to the top of mrb_random_init.
This issue was reported by https://hackerone.com/eboda",True,{}
mruby/mruby,https://github.com/mruby/mruby,3430,2017-02-06T02:18:39Z,2017-02-06T06:58:53Z,2017-02-06T09:19:57Z,MERGED,True,9,9,2,https://github.com/ksss,Kernel#local_variables: Make result array unique,1,[],https://github.com/mruby/mruby/pull/3430,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3430,"a = 1
Proc.new { |a| Kernel.local_variables }.call(2)
# Before => [:a, :a]
# After => [:a]","a = 1
Proc.new { |a| Kernel.local_variables }.call(2)
# Before => [:a, :a]
# After => [:a]",True,{}
mruby/mruby,https://github.com/mruby/mruby,3437,2017-02-07T12:38:43Z,2017-02-07T23:58:42Z,2017-02-07T23:58:42Z,MERGED,True,1,1,1,https://github.com/eboda,Fix interpolation escaping in String.inspect,1,[],https://github.com/mruby/mruby/pull/3437,https://github.com/eboda,1,https://github.com/mruby/mruby/pull/3437,"The following example produces an incorrect output:
$s = ""Test \#{x}""
puts $s.inspect
This outputs ""Test #{x}"", whereas the correct output would be ""Test \#{x}"".
The problem is that the parameter for IS_EVSTR is off by one, since *p is the current character (i.e. c), not the next one.","The following example produces an incorrect output:
$s = ""Test \#{x}""
puts $s.inspect
This outputs ""Test #{x}"", whereas the correct output would be ""Test \#{x}"".
The problem is that the parameter for IS_EVSTR is off by one, since *p is the current character (i.e. c), not the next one.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3446,2017-02-10T05:40:38Z,2017-02-10T12:22:01Z,2017-02-10T12:32:19Z,MERGED,True,1,0,1,https://github.com/ksss,Fix build error when trace mode,1,[],https://github.com/mruby/mruby/pull/3446,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3446,"Referenced https://github.com/ruby/rake/blob/af15762f972a3f8322a9b5904d56fe2ff3dd8352/lib/rake/file_task.rb#L21
Reproduction
Rakefile
file ""a.txt"" do
  system ""echo hello > a.txt""
end

file ""b.txt"" => ""a.txt"" do
  system ""cp a.txt b.txt""
end

task :default => ""b.txt""

$ touch b.txt
$ ruby minirake --trace
Invoke default (already=[], needed=[true])
rake aborted!
No such file or directory @ rb_file_s_stat - a.txt
minirake:241:in `stat'
minirake:241:in `timestamp'
minirake:233:in `block in needed?'
minirake:233:in `collect'
minirake:233:in `needed?'
minirake:91:in `invoke'
minirake:95:in `block in invoke'
minirake:95:in `each'
minirake:95:in `invoke'
minirake:467:in `block in run'
minirake:466:in `each'
minirake:466:in `run'
minirake:484:in `<main>'

Expect
$ rake --trace
** Invoke default (first_time)
** Invoke b.txt (first_time)
** Invoke a.txt (first_time)
** Execute a.txt
** Execute b.txt
** Execute default","Referenced https://github.com/ruby/rake/blob/af15762f972a3f8322a9b5904d56fe2ff3dd8352/lib/rake/file_task.rb#L21
Reproduction
Rakefile
file ""a.txt"" do
  system ""echo hello > a.txt""
end

file ""b.txt"" => ""a.txt"" do
  system ""cp a.txt b.txt""
end

task :default => ""b.txt""

$ touch b.txt
$ ruby minirake --trace
Invoke default (already=[], needed=[true])
rake aborted!
No such file or directory @ rb_file_s_stat - a.txt
minirake:241:in `stat'
minirake:241:in `timestamp'
minirake:233:in `block in needed?'
minirake:233:in `collect'
minirake:233:in `needed?'
minirake:91:in `invoke'
minirake:95:in `block in invoke'
minirake:95:in `each'
minirake:95:in `invoke'
minirake:467:in `block in run'
minirake:466:in `each'
minirake:466:in `run'
minirake:484:in `<main>'

Expect
$ rake --trace
** Invoke default (first_time)
** Invoke b.txt (first_time)
** Invoke a.txt (first_time)
** Execute a.txt
** Execute b.txt
** Execute default",True,{}
mruby/mruby,https://github.com/mruby/mruby,3447,2017-02-10T11:59:36Z,2017-02-10T12:20:26Z,2017-02-11T22:01:50Z,MERGED,True,112,46,3,https://github.com/dabroz,String#ljust and String#rjust reimplementation (fix #3445),1,[],https://github.com/mruby/mruby/pull/3447,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3447,"String#ljust and String#rjust are now C functions to improve performance
infinite loop because of an empty padding argument is now prevented (ArgumentError is raised)
extra tests for ljust/rjust added

Fixes #3445.
Before (d0ecf86):
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        8.26 real         8.16 user         0.05 sys

After (981105b):
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        0.22 real         0.20 user         0.01 sys","String#ljust and String#rjust are now C functions to improve performance
infinite loop because of an empty padding argument is now prevented (ArgumentError is raised)
extra tests for ljust/rjust added

Fixes #3445.
Before (d0ecf86):
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        8.26 real         8.16 user         0.05 sys

After (981105b):
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        0.22 real         0.20 user         0.01 sys",True,{}
mruby/mruby,https://github.com/mruby/mruby,3449,2017-02-10T14:36:45Z,2017-02-11T01:26:09Z,2017-02-11T22:01:44Z,MERGED,True,71,93,4,https://github.com/dabroz,String#ljust and String#rjust reimplemented with optimized Ruby,3,[],https://github.com/mruby/mruby/pull/3449,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3449,"Unfortunately, #3447 breaks ljust/rjust for UTF-8 strings.
I've tried fixing this in C, but managing UTF-8 strings in C is quite error-prone. So, I've tried to re-implement them again in Ruby, but in a more optimized way.
I've also added a small optimization to String#*.
Without MRB_UTF8_STRING:
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        0.04 real         0.02 user         0.01 sys

With MRB_UTF8_STRING:
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        0.51 real         0.48 user         0.02 sys

Also, #3448 was discovered while working on this fix.","Unfortunately, #3447 breaks ljust/rjust for UTF-8 strings.
I've tried fixing this in C, but managing UTF-8 strings in C is quite error-prone. So, I've tried to re-implement them again in Ruby, but in a more optimized way.
I've also added a small optimization to String#*.
Without MRB_UTF8_STRING:
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        0.04 real         0.02 user         0.01 sys

With MRB_UTF8_STRING:
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        0.51 real         0.48 user         0.02 sys

Also, #3448 was discovered while working on this fix.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3449,2017-02-10T14:36:45Z,2017-02-11T01:26:09Z,2017-02-11T22:01:44Z,MERGED,True,71,93,4,https://github.com/dabroz,String#ljust and String#rjust reimplemented with optimized Ruby,3,[],https://github.com/mruby/mruby/pull/3449,https://github.com/0x1eef,2,https://github.com/mruby/mruby/pull/3449#issuecomment-279127599,"Unfortunately, #3447 breaks ljust/rjust for UTF-8 strings.
I've tried fixing this in C, but managing UTF-8 strings in C is quite error-prone. So, I've tried to re-implement them again in Ruby, but in a more optimized way.
I've also added a small optimization to String#*.
Without MRB_UTF8_STRING:
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        0.04 real         0.02 user         0.01 sys

With MRB_UTF8_STRING:
$ echo '"""".ljust(10000000);"""".rjust(10000000)' | time bin/mruby
        0.51 real         0.48 user         0.02 sys

Also, #3448 was discovered while working on this fix.","very good 👍
the pure version is almost as fast as C, and much faster than the original version written in Ruby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3450,2017-02-11T07:42:48Z,2017-02-11T07:50:07Z,2017-02-11T07:50:07Z,MERGED,True,1,3,1,https://github.com/0x1eef,remove skip that shouldn't be necessary anymore.,1,[],https://github.com/mruby/mruby/pull/3450,https://github.com/0x1eef,1,https://github.com/mruby/mruby/pull/3450,the test should pass after 8f4a929.,the test should pass after 8f4a929.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3451,2017-02-11T12:05:10Z,2017-02-11T13:49:21Z,2017-02-11T22:01:30Z,MERGED,True,1,3,1,https://github.com/dabroz,"Revert ""Optimization for String#* for 1-byte strings""",1,[],https://github.com/mruby/mruby/pull/3451,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3451,"This reverts commit d1bc7ca.
I've compared both versions and it seems that this optimization is unnecessary, so I'm reverting it to simplify the code. It was also mistakenly checking for len, where in fact it should check n (and later repeat the same char len times).","This reverts commit d1bc7ca.
I've compared both versions and it seems that this optimization is unnecessary, so I'm reverting it to simplify the code. It was also mistakenly checking for len, where in fact it should check n (and later repeat the same char len times).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3452,2017-02-12T10:19:26Z,2017-02-12T11:46:10Z,2017-02-12T11:46:10Z,MERGED,True,1,1,1,https://github.com/dabroz,Fixed aspec for Kernel#caller,1,[],https://github.com/mruby/mruby/pull/3452,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3452,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3453,2017-02-13T18:12:00Z,2017-02-14T00:09:35Z,2017-02-14T00:09:35Z,MERGED,True,4,0,1,https://github.com/palkan,Separate compilers setup from config setup,1,[],https://github.com/mruby/mruby/pull/3453,https://github.com/palkan,1,https://github.com/mruby/mruby/pull/3453,"Fixes #3418.
I've tried to make the fix as small as possible.
Previously we had 2 places where compilers were configured (Specification#setup –  config options – and List#check – include paths).
That caused a problem when someone tries to use gem table only to build the dependencies (as in #3418) and does not want to define compilers rules.
From the other hand, we already configure compilers in List#check method, so, I think, it make sense to define rules there too.","Fixes #3418.
I've tried to make the fix as small as possible.
Previously we had 2 places where compilers were configured (Specification#setup –  config options – and List#check – include paths).
That caused a problem when someone tries to use gem table only to build the dependencies (as in #3418) and does not want to define compilers rules.
From the other hand, we already configure compilers in List#check method, so, I think, it make sense to define rules there too.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3453,2017-02-13T18:12:00Z,2017-02-14T00:09:35Z,2017-02-14T00:09:35Z,MERGED,True,4,0,1,https://github.com/palkan,Separate compilers setup from config setup,1,[],https://github.com/mruby/mruby/pull/3453,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3453#issuecomment-279565153,"Fixes #3418.
I've tried to make the fix as small as possible.
Previously we had 2 places where compilers were configured (Specification#setup –  config options – and List#check – include paths).
That caused a problem when someone tries to use gem table only to build the dependencies (as in #3418) and does not want to define compilers rules.
From the other hand, we already configure compilers in List#check method, so, I think, it make sense to define rules there too.",I will merge it to see how it works.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3455,2017-02-15T01:14:45Z,2017-02-15T01:30:27Z,2017-02-15T15:50:21Z,MERGED,True,93,10,3,https://github.com/crimsonwoods,Update android build script.,4,[],https://github.com/mruby/mruby/pull/3455,https://github.com/crimsonwoods,1,https://github.com/mruby/mruby/pull/3455,"This PR updates build script for Android.
In usual case, required LDFLAGS and CFLAGS should be set by default.
If anyone need overwriting these flags, it can be done in build_config.rb.
I think, for many mruby users/developers, no requiring many flags to build mruby is good.
NOTE:

Please use Android NDK r12b or later (recommended is latest r13b)
When use Android NDK r11c, cannot build mruby by gcc for mips64 (by clang is okay)
Security flags (e.g. -Wa,--noexecstack) is omitted (please set in your build_config.rb if needed).","This PR updates build script for Android.
In usual case, required LDFLAGS and CFLAGS should be set by default.
If anyone need overwriting these flags, it can be done in build_config.rb.
I think, for many mruby users/developers, no requiring many flags to build mruby is good.
NOTE:

Please use Android NDK r12b or later (recommended is latest r13b)
When use Android NDK r11c, cannot build mruby by gcc for mips64 (by clang is okay)
Security flags (e.g. -Wa,--noexecstack) is omitted (please set in your build_config.rb if needed).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3455,2017-02-15T01:14:45Z,2017-02-15T01:30:27Z,2017-02-15T15:50:21Z,MERGED,True,93,10,3,https://github.com/crimsonwoods,Update android build script.,4,[],https://github.com/mruby/mruby/pull/3455,https://github.com/crimsonwoods,2,https://github.com/mruby/mruby/pull/3455#issuecomment-279889421,"This PR updates build script for Android.
In usual case, required LDFLAGS and CFLAGS should be set by default.
If anyone need overwriting these flags, it can be done in build_config.rb.
I think, for many mruby users/developers, no requiring many flags to build mruby is good.
NOTE:

Please use Android NDK r12b or later (recommended is latest r13b)
When use Android NDK r11c, cannot build mruby by gcc for mips64 (by clang is okay)
Security flags (e.g. -Wa,--noexecstack) is omitted (please set in your build_config.rb if needed).","Hello, @felixjones
What do you think about this change?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3455,2017-02-15T01:14:45Z,2017-02-15T01:30:27Z,2017-02-15T15:50:21Z,MERGED,True,93,10,3,https://github.com/crimsonwoods,Update android build script.,4,[],https://github.com/mruby/mruby/pull/3455,https://github.com/felixjones,3,https://github.com/mruby/mruby/pull/3455#issuecomment-279904253,"This PR updates build script for Android.
In usual case, required LDFLAGS and CFLAGS should be set by default.
If anyone need overwriting these flags, it can be done in build_config.rb.
I think, for many mruby users/developers, no requiring many flags to build mruby is good.
NOTE:

Please use Android NDK r12b or later (recommended is latest r13b)
When use Android NDK r11c, cannot build mruby by gcc for mips64 (by clang is okay)
Security flags (e.g. -Wa,--noexecstack) is omitted (please set in your build_config.rb if needed).","@crimsonwoods I left out adding default flags because I wanted that responsibility given to the user's personal configuration of the script. However, I actually use pretty much all of these flags in my personal build script, so if everyone's going to be using them because there's a clear benefit with zero draw-backs (and are completely necessary with cases like fix-cortex-a8) then I'm happy including them in the base toolchain script.
I am generally skeptical about making decisions on behalf of the end user, you can probably tell this from the TODO consideration at the top concerning selecting a default target architecture, so my original thinking was let the user define their switches.

The examples are nice and contribute to the promotion of MRuby being used on Android. You can probably tell I constructed the revised Android toolchain script from pulling apart and piecing together the old one, so I was not comfortable including my personal build scripts as examples. Your examples are far more simpler and clear than my personal scripts - perhaps moving compile flags into the base script has helped simplify things here.
I am hesitant about selecting platform 24 as a target in the examples, part of my goal with the revised base toolchain was to have the Android platform automatically select the latest installed via the ::platform method.
If I were to change anything it would be to comment out the :platform => 'android-24' so it is left there for the user to see it as a potential option in the example, or alternatively rename the example files to ""build_config_android_24_armeabi.rb"" and ""build_config_android_24_arm64-v8a.rb"" to describe that they will specifically target platform 24.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3455,2017-02-15T01:14:45Z,2017-02-15T01:30:27Z,2017-02-15T15:50:21Z,MERGED,True,93,10,3,https://github.com/crimsonwoods,Update android build script.,4,[],https://github.com/mruby/mruby/pull/3455,https://github.com/felixjones,4,https://github.com/mruby/mruby/pull/3455#issuecomment-279909718,"This PR updates build script for Android.
In usual case, required LDFLAGS and CFLAGS should be set by default.
If anyone need overwriting these flags, it can be done in build_config.rb.
I think, for many mruby users/developers, no requiring many flags to build mruby is good.
NOTE:

Please use Android NDK r12b or later (recommended is latest r13b)
When use Android NDK r11c, cannot build mruby by gcc for mips64 (by clang is okay)
Security flags (e.g. -Wa,--noexecstack) is omitted (please set in your build_config.rb if needed).","May I ask what is the motivation for selecting mips64r6 as opposed to mips64? I thought mips32 and mips64 are aliases for mips32r2 and mips64r6 with Android's clang compiler.
Also, what are your thoughts on having 'armeabi-v7a' with -mfpu neon and -mfloat-abi=hard as additional architectures? I noticed in the original script there was 'armeabi-v7a-hard' - but with me removing the compile switches from the base script that became unnecessary.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3455,2017-02-15T01:14:45Z,2017-02-15T01:30:27Z,2017-02-15T15:50:21Z,MERGED,True,93,10,3,https://github.com/crimsonwoods,Update android build script.,4,[],https://github.com/mruby/mruby/pull/3455,https://github.com/crimsonwoods,5,https://github.com/mruby/mruby/pull/3455#issuecomment-280038270,"This PR updates build script for Android.
In usual case, required LDFLAGS and CFLAGS should be set by default.
If anyone need overwriting these flags, it can be done in build_config.rb.
I think, for many mruby users/developers, no requiring many flags to build mruby is good.
NOTE:

Please use Android NDK r12b or later (recommended is latest r13b)
When use Android NDK r11c, cannot build mruby by gcc for mips64 (by clang is okay)
Security flags (e.g. -Wa,--noexecstack) is omitted (please set in your build_config.rb if needed).","mips64r6
""mips64r6"" is required to build mruby (using NDK r13b) for mips64 architecture on my environment.
On my environment, linker outputs below error:
libmruby.a(mt19937ar.o): linking mips:isa64 module with previous mips:isa64r6 modules
libmruby.a(mt19937ar.o): linking -mnan=legacy module with previous -mnan=2008 modules

So, due to avoid these errors, I changed ""-march"" option from ""mips64"" to ""mips64r6"".
-mfpu neon
I think that to support neon is not required for mruby.  Because, as far as I know, mruby has no optimized code for neon.
But, maybe, some mrbgems contained optimized code for neon.
-mfloat-abi=hard
According to 'setup.mk' bundled with NDK, I added ""-mfloat-abi=softfp"".
But I think that ""-mfloat-abi=hard"" should be able to select to improve performance.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3455,2017-02-15T01:14:45Z,2017-02-15T01:30:27Z,2017-02-15T15:50:21Z,MERGED,True,93,10,3,https://github.com/crimsonwoods,Update android build script.,4,[],https://github.com/mruby/mruby/pull/3455,https://github.com/felixjones,6,https://github.com/mruby/mruby/pull/3455#issuecomment-280042865,"This PR updates build script for Android.
In usual case, required LDFLAGS and CFLAGS should be set by default.
If anyone need overwriting these flags, it can be done in build_config.rb.
I think, for many mruby users/developers, no requiring many flags to build mruby is good.
NOTE:

Please use Android NDK r12b or later (recommended is latest r13b)
When use Android NDK r11c, cannot build mruby by gcc for mips64 (by clang is okay)
Security flags (e.g. -Wa,--noexecstack) is omitted (please set in your build_config.rb if needed).","The neon case I was specifically thinking about potential mrbgems, the more I think about it the more I think the option should be there.
Perhaps it is worth moving these switches to be parameters specific for the armeabi.
MRuby::CrossBuild.new('android-armeabi-v7a-neon') do |conf|
  params = { 
    :arch => 'armeabi-v7a', 
    :mfpu => 'neon',
    # :mfloat_abi => 'hard',
  }
  toolchain :android, params

  conf.gembox 'default'
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,3455,2017-02-15T01:14:45Z,2017-02-15T01:30:27Z,2017-02-15T15:50:21Z,MERGED,True,93,10,3,https://github.com/crimsonwoods,Update android build script.,4,[],https://github.com/mruby/mruby/pull/3455,https://github.com/crimsonwoods,7,https://github.com/mruby/mruby/pull/3455#issuecomment-280048567,"This PR updates build script for Android.
In usual case, required LDFLAGS and CFLAGS should be set by default.
If anyone need overwriting these flags, it can be done in build_config.rb.
I think, for many mruby users/developers, no requiring many flags to build mruby is good.
NOTE:

Please use Android NDK r12b or later (recommended is latest r13b)
When use Android NDK r11c, cannot build mruby by gcc for mips64 (by clang is okay)
Security flags (e.g. -Wa,--noexecstack) is omitted (please set in your build_config.rb if needed).",I agree with you. It looks good to me.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3456,2017-02-16T01:21:44Z,2017-02-16T01:51:42Z,2017-02-16T01:51:43Z,CLOSED,False,24,18,2,https://github.com/christopheraue,Fixed not properly returning calls of #eval,1,[],https://github.com/mruby/mruby/pull/3456,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3456,Fixes the eval(string) issue of #3429. The generated proc is executed by the same code that's used by Object#instance_eval(&block). Calling eval('Fiber.yield') (#3415) works.,Fixes the eval(string) issue of #3429. The generated proc is executed by the same code that's used by Object#instance_eval(&block). Calling eval('Fiber.yield') (#3415) works.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3456,2017-02-16T01:21:44Z,2017-02-16T01:51:42Z,2017-02-16T01:51:43Z,CLOSED,False,24,18,2,https://github.com/christopheraue,Fixed not properly returning calls of #eval,1,[],https://github.com/mruby/mruby/pull/3456,https://github.com/christopheraue,2,https://github.com/mruby/mruby/pull/3456#issuecomment-280204656,Fixes the eval(string) issue of #3429. The generated proc is executed by the same code that's used by Object#instance_eval(&block). Calling eval('Fiber.yield') (#3415) works.,Wooops. Doesn't work after all...,True,{}
mruby/mruby,https://github.com/mruby/mruby,3457,2017-02-16T12:46:29Z,2017-02-16T14:21:59Z,2017-02-16T14:21:59Z,MERGED,True,10,0,1,https://github.com/dabroz,Build fix for 32-bit clang 3.8/3.9 with MRB_INT64,1,[],https://github.com/mruby/mruby/pull/3457,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3457,"Clang 3.8 and 3.9 have problem compiling mruby in 32-bit mode, when MRB_INT64 is set because of missing __mulodi4 and similar functions in its runtime. We need to use custom checked arithmetic implementation for them.","Clang 3.8 and 3.9 have problem compiling mruby in 32-bit mode, when MRB_INT64 is set because of missing __mulodi4 and similar functions in its runtime. We need to use custom checked arithmetic implementation for them.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3458,2017-02-16T13:01:17Z,2017-02-26T23:59:34Z,2017-02-26T23:59:34Z,MERGED,True,3334,0,3,https://github.com/dabroz,GitLab.com tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3458,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3458,"Previously I've proposed #3258 as a method to test mruby on different build configurations (and found many bugs with rarely used combinations). However that method vastly increased Travis build times which is unfortunate. I was thinking about a way to enforce compatibility without such side-effect. Lately I was experimenting with GitLab CI and found it to be an excellent candidate for such testing.
I've created a mirror of the official mruby repository, which is automatically updated every 24h:
https://gitlab.com/dabroz/mruby
This patch introduces Gitlab testing, using GitLab CI, to test many different configurations:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
ASCII/UTF8

using various compilers:

gcc-4.7
gcc-4.8
gcc-4.9
gcc-5
gcc-6
clang-3.5
clang-3.6
clang-3.7
clang-3.8
clang-3.9

#3457 is required for this to pass all tests on GitLab.
This has no impact on GitHub/Travis builds/testing/pull requests etc.
What is currently missing in GitLab testing is Windows/OSX platforms, since GitLab.com shared runners only support Docker (Linux) builds. I will try to devise a way to add different platforms to this testing procedure in the future.","Previously I've proposed #3258 as a method to test mruby on different build configurations (and found many bugs with rarely used combinations). However that method vastly increased Travis build times which is unfortunate. I was thinking about a way to enforce compatibility without such side-effect. Lately I was experimenting with GitLab CI and found it to be an excellent candidate for such testing.
I've created a mirror of the official mruby repository, which is automatically updated every 24h:
https://gitlab.com/dabroz/mruby
This patch introduces Gitlab testing, using GitLab CI, to test many different configurations:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
ASCII/UTF8

using various compilers:

gcc-4.7
gcc-4.8
gcc-4.9
gcc-5
gcc-6
clang-3.5
clang-3.6
clang-3.7
clang-3.8
clang-3.9

#3457 is required for this to pass all tests on GitLab.
This has no impact on GitHub/Travis builds/testing/pull requests etc.
What is currently missing in GitLab testing is Windows/OSX platforms, since GitLab.com shared runners only support Docker (Linux) builds. I will try to devise a way to add different platforms to this testing procedure in the future.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3458,2017-02-16T13:01:17Z,2017-02-26T23:59:34Z,2017-02-26T23:59:34Z,MERGED,True,3334,0,3,https://github.com/dabroz,GitLab.com tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3458,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3458#issuecomment-280343959,"Previously I've proposed #3258 as a method to test mruby on different build configurations (and found many bugs with rarely used combinations). However that method vastly increased Travis build times which is unfortunate. I was thinking about a way to enforce compatibility without such side-effect. Lately I was experimenting with GitLab CI and found it to be an excellent candidate for such testing.
I've created a mirror of the official mruby repository, which is automatically updated every 24h:
https://gitlab.com/dabroz/mruby
This patch introduces Gitlab testing, using GitLab CI, to test many different configurations:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
ASCII/UTF8

using various compilers:

gcc-4.7
gcc-4.8
gcc-4.9
gcc-5
gcc-6
clang-3.5
clang-3.6
clang-3.7
clang-3.8
clang-3.9

#3457 is required for this to pass all tests on GitLab.
This has no impact on GitHub/Travis builds/testing/pull requests etc.
What is currently missing in GitLab testing is Windows/OSX platforms, since GitLab.com shared runners only support Docker (Linux) builds. I will try to devise a way to add different platforms to this testing procedure in the future.","Thank you. But I am worried about heavy workload to Gitlab.com. If they are OK, I'd like to merge the PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3458,2017-02-16T13:01:17Z,2017-02-26T23:59:34Z,2017-02-26T23:59:34Z,MERGED,True,3334,0,3,https://github.com/dabroz,GitLab.com tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3458,https://github.com/dabroz,3,https://github.com/mruby/mruby/pull/3458#issuecomment-280348483,"Previously I've proposed #3258 as a method to test mruby on different build configurations (and found many bugs with rarely used combinations). However that method vastly increased Travis build times which is unfortunate. I was thinking about a way to enforce compatibility without such side-effect. Lately I was experimenting with GitLab CI and found it to be an excellent candidate for such testing.
I've created a mirror of the official mruby repository, which is automatically updated every 24h:
https://gitlab.com/dabroz/mruby
This patch introduces Gitlab testing, using GitLab CI, to test many different configurations:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
ASCII/UTF8

using various compilers:

gcc-4.7
gcc-4.8
gcc-4.9
gcc-5
gcc-6
clang-3.5
clang-3.6
clang-3.7
clang-3.8
clang-3.9

#3457 is required for this to pass all tests on GitLab.
This has no impact on GitHub/Travis builds/testing/pull requests etc.
What is currently missing in GitLab testing is Windows/OSX platforms, since GitLab.com shared runners only support Docker (Linux) builds. I will try to devise a way to add different platforms to this testing procedure in the future.",This is a good point. I've created a support ticket at GitLab.com: https://gitlab.com/gitlab-com/support-forum/issues/1549,True,{}
mruby/mruby,https://github.com/mruby/mruby,3458,2017-02-16T13:01:17Z,2017-02-26T23:59:34Z,2017-02-26T23:59:34Z,MERGED,True,3334,0,3,https://github.com/dabroz,GitLab.com tests for multiple configurations,1,[],https://github.com/mruby/mruby/pull/3458,https://github.com/dabroz,4,https://github.com/mruby/mruby/pull/3458#issuecomment-282568406,"Previously I've proposed #3258 as a method to test mruby on different build configurations (and found many bugs with rarely used combinations). However that method vastly increased Travis build times which is unfortunate. I was thinking about a way to enforce compatibility without such side-effect. Lately I was experimenting with GitLab CI and found it to be an excellent candidate for such testing.
I've created a mirror of the official mruby repository, which is automatically updated every 24h:
https://gitlab.com/dabroz/mruby
This patch introduces Gitlab testing, using GitLab CI, to test many different configurations:

32/64 bit architecture
float/double
16/32/64 bit int size
none/NaN/word boxing
ASCII/UTF8

using various compilers:

gcc-4.7
gcc-4.8
gcc-4.9
gcc-5
gcc-6
clang-3.5
clang-3.6
clang-3.7
clang-3.8
clang-3.9

#3457 is required for this to pass all tests on GitLab.
This has no impact on GitHub/Travis builds/testing/pull requests etc.
What is currently missing in GitLab testing is Windows/OSX platforms, since GitLab.com shared runners only support Docker (Linux) builds. I will try to devise a way to add different platforms to this testing procedure in the future.","@matz I've got a reply in that thread:

Please proceed, we plan to continue to provide unlimited build minutes for open source projects

So we should be OK.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3459,2017-02-16T13:33:39Z,2017-02-16T13:51:34Z,2017-02-16T13:51:41Z,CLOSED,False,4,0,1,https://github.com/christopheraue,Fixed not properly returning calls of #eval,1,[],https://github.com/mruby/mruby/pull/3459,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3459,Fixes issue #3429.,Fixes issue #3429.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3459,2017-02-16T13:33:39Z,2017-02-16T13:51:34Z,2017-02-16T13:51:41Z,CLOSED,False,4,0,1,https://github.com/christopheraue,Fixed not properly returning calls of #eval,1,[],https://github.com/mruby/mruby/pull/3459,https://github.com/christopheraue,2,https://github.com/mruby/mruby/pull/3459#issuecomment-280335197,Fixes issue #3429.,fixed by 097da23,True,{}
mruby/mruby,https://github.com/mruby/mruby,3460,2017-02-16T15:15:13Z,2017-02-16T16:13:38Z,2017-02-16T16:13:39Z,MERGED,True,87,19,2,https://github.com/felixjones,Additional options for Android build script.,4,[],https://github.com/mruby/mruby/pull/3460,https://github.com/felixjones,1,https://github.com/mruby/mruby/pull/3460,"As discussed in the comments for PR #3455 (comment)
This adds support for the supplied Android build script to configure the hardware floating point for armeabi-v7a.
MRuby::CrossBuild.new('android-armeabi-v7a-neon-hard') do |conf|
  params = { 
    :arch => 'armeabi-v7a', 
    :mfpu => 'neon',
    :mfloat_abi => 'hard',
  }
  toolchain :android, params

  conf.gembox 'default'
end
This also adds a new example build script demonstrating this usage.","As discussed in the comments for PR #3455 (comment)
This adds support for the supplied Android build script to configure the hardware floating point for armeabi-v7a.
MRuby::CrossBuild.new('android-armeabi-v7a-neon-hard') do |conf|
  params = { 
    :arch => 'armeabi-v7a', 
    :mfpu => 'neon',
    :mfloat_abi => 'hard',
  }
  toolchain :android, params

  conf.gembox 'default'
end
This also adds a new example build script demonstrating this usage.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3460,2017-02-16T15:15:13Z,2017-02-16T16:13:38Z,2017-02-16T16:13:39Z,MERGED,True,87,19,2,https://github.com/felixjones,Additional options for Android build script.,4,[],https://github.com/mruby/mruby/pull/3460,https://github.com/felixjones,2,https://github.com/mruby/mruby/pull/3460#issuecomment-280360738,"As discussed in the comments for PR #3455 (comment)
This adds support for the supplied Android build script to configure the hardware floating point for armeabi-v7a.
MRuby::CrossBuild.new('android-armeabi-v7a-neon-hard') do |conf|
  params = { 
    :arch => 'armeabi-v7a', 
    :mfpu => 'neon',
    :mfloat_abi => 'hard',
  }
  toolchain :android, params

  conf.gembox 'default'
end
This also adds a new example build script demonstrating this usage.","I am not 100% happy with the usage of --no-warn-mismatch. This option seems to be the generally accepted thing to use to allow hardware float vector unit operations to be utilised (avoids a linking error), but I am concerned that it may be hiding potentially fatal compatibility problems.
The current behaviour will only activate --no-warn-mismatch if neither the 'soft' or 'softfp' mfloat-abi switches are used.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3460,2017-02-16T15:15:13Z,2017-02-16T16:13:38Z,2017-02-16T16:13:39Z,MERGED,True,87,19,2,https://github.com/felixjones,Additional options for Android build script.,4,[],https://github.com/mruby/mruby/pull/3460,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3460#issuecomment-280376520,"As discussed in the comments for PR #3455 (comment)
This adds support for the supplied Android build script to configure the hardware floating point for armeabi-v7a.
MRuby::CrossBuild.new('android-armeabi-v7a-neon-hard') do |conf|
  params = { 
    :arch => 'armeabi-v7a', 
    :mfpu => 'neon',
    :mfloat_abi => 'hard',
  }
  toolchain :android, params

  conf.gembox 'default'
end
This also adds a new example build script demonstrating this usage.","I will merge this PR. If we see any problem, we might revert the patch.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3461,2017-02-24T03:26:19Z,2017-02-24T09:39:21Z,2017-04-12T04:07:13Z,MERGED,True,39,39,2,https://github.com/tsahara,Build with byacc,1,[],https://github.com/mruby/mruby/pull/3461,https://github.com/tsahara,1,https://github.com/mruby/mruby/pull/3461,"With this small change, parse.y can be compiled with yacc on NetBSD6.  Yacc uses a variable named ""yylval"" in generated code and it conflicts with the macro this patch renames.","With this small change, parse.y can be compiled with yacc on NetBSD6.  Yacc uses a variable named ""yylval"" in generated code and it conflicts with the macro this patch renames.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3468,2017-02-25T07:10:50Z,2021-02-25T12:15:27Z,2021-02-26T01:44:34Z,MERGED,True,117,25,7,https://github.com/ksss,Try Binding class,1,[],https://github.com/mruby/mruby/pull/3468,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3468,"I'm trying to implement CRuby's Binding class.
Binding#local_variables is easy.
But I couldn't implement Binding#eval because it's too difficult.
It failed in this case.
class A
  class << self
    def b
      @a = 42
      b = 'local_variable'
      binding
    end
  end
end
p A.b.eval(""[@a, b]"")
# Expect: [42, ""local_variable""]
# Actual(This branch): [42, []]
Does anyone have a good idea?","I'm trying to implement CRuby's Binding class.
Binding#local_variables is easy.
But I couldn't implement Binding#eval because it's too difficult.
It failed in this case.
class A
  class << self
    def b
      @a = 42
      b = 'local_variable'
      binding
    end
  end
end
p A.b.eval(""[@a, b]"")
# Expect: [42, ""local_variable""]
# Actual(This branch): [42, []]
Does anyone have a good idea?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3468,2017-02-25T07:10:50Z,2021-02-25T12:15:27Z,2021-02-26T01:44:34Z,MERGED,True,117,25,7,https://github.com/ksss,Try Binding class,1,[],https://github.com/mruby/mruby/pull/3468,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/3468#issuecomment-376360832,"I'm trying to implement CRuby's Binding class.
Binding#local_variables is easy.
But I couldn't implement Binding#eval because it's too difficult.
It failed in this case.
class A
  class << self
    def b
      @a = 42
      b = 'local_variable'
      binding
    end
  end
end
p A.b.eval(""[@a, b]"")
# Expect: [42, ""local_variable""]
# Actual(This branch): [42, []]
Does anyone have a good idea?",Maybe recording the struct RProc* and pc of the previous stack frame could save the binding.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3468,2017-02-25T07:10:50Z,2021-02-25T12:15:27Z,2021-02-26T01:44:34Z,MERGED,True,117,25,7,https://github.com/ksss,Try Binding class,1,[],https://github.com/mruby/mruby/pull/3468,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/3468#issuecomment-716133468,"I'm trying to implement CRuby's Binding class.
Binding#local_variables is easy.
But I couldn't implement Binding#eval because it's too difficult.
It failed in this case.
class A
  class << self
    def b
      @a = 42
      b = 'local_variable'
      binding
    end
  end
end
p A.b.eval(""[@a, b]"")
# Expect: [42, ""local_variable""]
# Actual(This branch): [42, []]
Does anyone have a good idea?","@ksss, by saving the REnv object, the tests contained in your pull request will pass.
https://github.com/dearblue/mruby/tree/binding
This working branch is now the mruby HEAD (07224f8).
Is it possible for you to continue the work you are planning?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3468,2017-02-25T07:10:50Z,2021-02-25T12:15:27Z,2021-02-26T01:44:34Z,MERGED,True,117,25,7,https://github.com/ksss,Try Binding class,1,[],https://github.com/mruby/mruby/pull/3468,https://github.com/ksss,4,https://github.com/mruby/mruby/pull/3468#issuecomment-716152523,"I'm trying to implement CRuby's Binding class.
Binding#local_variables is easy.
But I couldn't implement Binding#eval because it's too difficult.
It failed in this case.
class A
  class << self
    def b
      @a = 42
      b = 'local_variable'
      binding
    end
  end
end
p A.b.eval(""[@a, b]"")
# Expect: [42, ""local_variable""]
# Actual(This branch): [42, []]
Does anyone have a good idea?","@dearblue Hi.
Thank you for finding this PR.
But I've forgotten what this PR is all about and I have no motivation to continue with it.
I'm glad. If you will take over this project.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3468,2017-02-25T07:10:50Z,2021-02-25T12:15:27Z,2021-02-26T01:44:34Z,MERGED,True,117,25,7,https://github.com/ksss,Try Binding class,1,[],https://github.com/mruby/mruby/pull/3468,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/3468#issuecomment-716160657,"I'm trying to implement CRuby's Binding class.
Binding#local_variables is easy.
But I couldn't implement Binding#eval because it's too difficult.
It failed in this case.
class A
  class << self
    def b
      @a = 42
      b = 'local_variable'
      binding
    end
  end
end
p A.b.eval(""[@a, b]"")
# Expect: [42, ""local_variable""]
# Actual(This branch): [42, []]
Does anyone have a good idea?","I see.
Perhaps there are some parts that can not be implemented due to mruby restrictions, but I will issue a new pull request someday by adding methods that are lacking compared to CRuby.
Thank you for your reply.",True,{'HEART': ['https://github.com/ksss']}
mruby/mruby,https://github.com/mruby/mruby,3468,2017-02-25T07:10:50Z,2021-02-25T12:15:27Z,2021-02-26T01:44:34Z,MERGED,True,117,25,7,https://github.com/ksss,Try Binding class,1,[],https://github.com/mruby/mruby/pull/3468,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/3468#issuecomment-783449901,"I'm trying to implement CRuby's Binding class.
Binding#local_variables is easy.
But I couldn't implement Binding#eval because it's too difficult.
It failed in this case.
class A
  class << self
    def b
      @a = 42
      b = 'local_variable'
      binding
    end
  end
end
p A.b.eval(""[@a, b]"")
# Expect: [42, ""local_variable""]
# Actual(This branch): [42, []]
Does anyone have a good idea?","I have implemented anything but Binding#irb and created a pull request as #5362.
If you have any concerns, please ask them there.",True,{'THUMBS_UP': ['https://github.com/jethrodaniel']}
mruby/mruby,https://github.com/mruby/mruby,3468,2017-02-25T07:10:50Z,2021-02-25T12:15:27Z,2021-02-26T01:44:34Z,MERGED,True,117,25,7,https://github.com/ksss,Try Binding class,1,[],https://github.com/mruby/mruby/pull/3468,https://github.com/ksss,7,https://github.com/mruby/mruby/pull/3468#issuecomment-786351394,"I'm trying to implement CRuby's Binding class.
Binding#local_variables is easy.
But I couldn't implement Binding#eval because it's too difficult.
It failed in this case.
class A
  class << self
    def b
      @a = 42
      b = 'local_variable'
      binding
    end
  end
end
p A.b.eval(""[@a, b]"")
# Expect: [42, ""local_variable""]
# Actual(This branch): [42, []]
Does anyone have a good idea?",@dearblue Great Job!!!! 🎉,True,"{'HOORAY': ['https://github.com/yhara'], 'THUMBS_UP': ['https://github.com/dearblue']}"
mruby/mruby,https://github.com/mruby/mruby,3483,2017-03-05T05:23:15Z,2017-03-05T11:27:29Z,2017-03-05T12:03:04Z,MERGED,True,3,1,2,https://github.com/ksss,"String#index shouldn't return nil when """".index """"",1,[],https://github.com/mruby/mruby/pull/3483,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3483,"$ cat t.rb
p """".index """"
p ""hello"".index("""", 5)

$ mruby t.rb
nil
nil

$ ruby -v t.rb
ruby 2.5.0dev (2017-01-12 trunk 57313) [x86_64-darwin16]
0
5","$ cat t.rb
p """".index """"
p ""hello"".index("""", 5)

$ mruby t.rb
nil
nil

$ ruby -v t.rb
ruby 2.5.0dev (2017-01-12 trunk 57313) [x86_64-darwin16]
0
5",True,{}
mruby/mruby,https://github.com/mruby/mruby,3484,2017-03-05T14:05:48Z,2017-03-05T22:38:57Z,2017-03-05T23:15:56Z,MERGED,True,6,0,2,https://github.com/ksss,Check modifiable for String `bang' methods,1,[],https://github.com/mruby/mruby/pull/3484,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3484,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3494,2017-03-09T02:23:11Z,2017-03-10T13:09:25Z,2017-03-10T13:10:10Z,CLOSED,False,3,0,1,https://github.com/ksss,Avoid setup duplication,1,[],https://github.com/mruby/mruby/pull/3494,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3494,"I encountered build issue.
zzak/mruby-uri#6
https://travis-ci.org/zzak/mruby-uri/jobs/207632178
Strangely, It built twice mruby-onig-regexp.
But, It built once when wrote conf.gem 'mruby-onig-regexp' at build_config.rb.
Because mruby-test called MRuby::Gem::Specification#setup to resolve this dependency from here 
  
    
      mruby/mrbgems/mruby-test/mrbgem.rake
    
    
         Line 36
      in
      63dbed0
    
  
  
    

        
          
           gem_table = build.gems.generate_gem_table build 
        
    
  


But when wrote conf.gem, it was skipped.
I think, it doesn't expected behavior.
So, I proposed to avoid setup duplication.
How do you think?
ref mattn/mruby-onig-regexp#53","I encountered build issue.
zzak/mruby-uri#6
https://travis-ci.org/zzak/mruby-uri/jobs/207632178
Strangely, It built twice mruby-onig-regexp.
But, It built once when wrote conf.gem 'mruby-onig-regexp' at build_config.rb.
Because mruby-test called MRuby::Gem::Specification#setup to resolve this dependency from here 
  
    
      mruby/mrbgems/mruby-test/mrbgem.rake
    
    
         Line 36
      in
      63dbed0
    
  
  
    

        
          
           gem_table = build.gems.generate_gem_table build 
        
    
  


But when wrote conf.gem, it was skipped.
I think, it doesn't expected behavior.
So, I proposed to avoid setup duplication.
How do you think?
ref mattn/mruby-onig-regexp#53",True,{}
mruby/mruby,https://github.com/mruby/mruby,3494,2017-03-09T02:23:11Z,2017-03-10T13:09:25Z,2017-03-10T13:10:10Z,CLOSED,False,3,0,1,https://github.com/ksss,Avoid setup duplication,1,[],https://github.com/mruby/mruby/pull/3494,https://github.com/ksss,2,https://github.com/mruby/mruby/pull/3494#issuecomment-285235308,"I encountered build issue.
zzak/mruby-uri#6
https://travis-ci.org/zzak/mruby-uri/jobs/207632178
Strangely, It built twice mruby-onig-regexp.
But, It built once when wrote conf.gem 'mruby-onig-regexp' at build_config.rb.
Because mruby-test called MRuby::Gem::Specification#setup to resolve this dependency from here 
  
    
      mruby/mrbgems/mruby-test/mrbgem.rake
    
    
         Line 36
      in
      63dbed0
    
  
  
    

        
          
           gem_table = build.gems.generate_gem_table build 
        
    
  


But when wrote conf.gem, it was skipped.
I think, it doesn't expected behavior.
So, I proposed to avoid setup duplication.
How do you think?
ref mattn/mruby-onig-regexp#53",@take-cheeze Would you review this?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3494,2017-03-09T02:23:11Z,2017-03-10T13:09:25Z,2017-03-10T13:10:10Z,CLOSED,False,3,0,1,https://github.com/ksss,Avoid setup duplication,1,[],https://github.com/mruby/mruby/pull/3494,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/3494#issuecomment-285299938,"I encountered build issue.
zzak/mruby-uri#6
https://travis-ci.org/zzak/mruby-uri/jobs/207632178
Strangely, It built twice mruby-onig-regexp.
But, It built once when wrote conf.gem 'mruby-onig-regexp' at build_config.rb.
Because mruby-test called MRuby::Gem::Specification#setup to resolve this dependency from here 
  
    
      mruby/mrbgems/mruby-test/mrbgem.rake
    
    
         Line 36
      in
      63dbed0
    
  
  
    

        
          
           gem_table = build.gems.generate_gem_table build 
        
    
  


But when wrote conf.gem, it was skipped.
I think, it doesn't expected behavior.
So, I proposed to avoid setup duplication.
How do you think?
ref mattn/mruby-onig-regexp#53","@ksss  It seems like it's building twice because there is two MRuby::Build(host and test) in build_config.rb.
As far as I know about mruby-onig-regexp, it should build onig[mo|uruma] per each MRuby::Build.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3494,2017-03-09T02:23:11Z,2017-03-10T13:09:25Z,2017-03-10T13:10:10Z,CLOSED,False,3,0,1,https://github.com/ksss,Avoid setup duplication,1,[],https://github.com/mruby/mruby/pull/3494,https://github.com/ksss,4,https://github.com/mruby/mruby/pull/3494#issuecomment-285308339,"I encountered build issue.
zzak/mruby-uri#6
https://travis-ci.org/zzak/mruby-uri/jobs/207632178
Strangely, It built twice mruby-onig-regexp.
But, It built once when wrote conf.gem 'mruby-onig-regexp' at build_config.rb.
Because mruby-test called MRuby::Gem::Specification#setup to resolve this dependency from here 
  
    
      mruby/mrbgems/mruby-test/mrbgem.rake
    
    
         Line 36
      in
      63dbed0
    
  
  
    

        
          
           gem_table = build.gems.generate_gem_table build 
        
    
  


But when wrote conf.gem, it was skipped.
I think, it doesn't expected behavior.
So, I proposed to avoid setup duplication.
How do you think?
ref mattn/mruby-onig-regexp#53","@take-cheeze  Thank you for reviewing.
I didn't make it clear enough.
It built twice in MRuby::Build.new('test')
So, rake test built three times in total.
https://travis-ci.org/zzak/mruby-uri/jobs/207632178#L196-L201",True,{}
mruby/mruby,https://github.com/mruby/mruby,3494,2017-03-09T02:23:11Z,2017-03-10T13:09:25Z,2017-03-10T13:10:10Z,CLOSED,False,3,0,1,https://github.com/ksss,Avoid setup duplication,1,[],https://github.com/mruby/mruby/pull/3494,https://github.com/take-cheeze,5,https://github.com/mruby/mruby/pull/3494#issuecomment-285607025,"I encountered build issue.
zzak/mruby-uri#6
https://travis-ci.org/zzak/mruby-uri/jobs/207632178
Strangely, It built twice mruby-onig-regexp.
But, It built once when wrote conf.gem 'mruby-onig-regexp' at build_config.rb.
Because mruby-test called MRuby::Gem::Specification#setup to resolve this dependency from here 
  
    
      mruby/mrbgems/mruby-test/mrbgem.rake
    
    
         Line 36
      in
      63dbed0
    
  
  
    

        
          
           gem_table = build.gems.generate_gem_table build 
        
    
  


But when wrote conf.gem, it was skipped.
I think, it doesn't expected behavior.
So, I proposed to avoid setup duplication.
How do you think?
ref mattn/mruby-onig-regexp#53","@ksss
You were worrying about double setup of mrbgem. Got it.
At the time when I wrote the minimum dependencies testing feature, it wasn't a mrbgem.
And I felt it shouldn't be a mrbgem like mruby compiler at that time.
Anyway I think at least dependencies solving shouldn't be done when setup method(and the block passed to gem spec) is evaluated.
Since dependencies won't be completed until all setup method of each mrbgems is evaluated.
So it should be moved to rake file of mruby build system or dependencies solving should be done in rake task that compiles mruby test code and generates C code.
(About this patch:)
I feel  setup method should only be called in tasks/mrbgems.rake to reduce call order complexity.
Instead of ignoring it, it should raise some error on double evaluation of it to check build script errors.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3494,2017-03-09T02:23:11Z,2017-03-10T13:09:25Z,2017-03-10T13:10:10Z,CLOSED,False,3,0,1,https://github.com/ksss,Avoid setup duplication,1,[],https://github.com/mruby/mruby/pull/3494,https://github.com/ksss,6,https://github.com/mruby/mruby/pull/3494#issuecomment-285665119,"I encountered build issue.
zzak/mruby-uri#6
https://travis-ci.org/zzak/mruby-uri/jobs/207632178
Strangely, It built twice mruby-onig-regexp.
But, It built once when wrote conf.gem 'mruby-onig-regexp' at build_config.rb.
Because mruby-test called MRuby::Gem::Specification#setup to resolve this dependency from here 
  
    
      mruby/mrbgems/mruby-test/mrbgem.rake
    
    
         Line 36
      in
      63dbed0
    
  
  
    

        
          
           gem_table = build.gems.generate_gem_table build 
        
    
  


But when wrote conf.gem, it was skipped.
I think, it doesn't expected behavior.
So, I proposed to avoid setup duplication.
How do you think?
ref mattn/mruby-onig-regexp#53","@take-cheeze Thank you for your kindness.
OK, I understood that this patch is not good.
I'll try another way to fix this problem.
Thanks.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3496,2017-03-10T04:27:28Z,2017-03-11T01:22:35Z,2017-03-11T01:22:35Z,MERGED,True,16,10,2,https://github.com/ksss,Avoid infinity loop when empty string pattern,2,[],https://github.com/mruby/mruby/pull/3496,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3496,"String#gsub have an infinite loop pattern.
""hello"".gsub("""", ""."")
# Expect => "".h.e.l.l.o.""
# Actual => infinite loop
I rewrote String#gsub in case of args.length == 2.","String#gsub have an infinite loop pattern.
""hello"".gsub("""", ""."")
# Expect => "".h.e.l.l.o.""
# Actual => infinite loop
I rewrote String#gsub in case of args.length == 2.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3497,2017-03-10T13:29:20Z,2017-03-11T01:20:00Z,2017-03-11T01:20:00Z,MERGED,True,3,0,2,https://github.com/ksss,\1 sequences as empty strings,1,[],https://github.com/mruby/mruby/pull/3497,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3497,"String#gsub supports only string pattern argument.
Corresponding captures never used in this case.","String#gsub supports only string pattern argument.
Corresponding captures never used in this case.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3503,2017-03-13T15:01:22Z,2017-03-14T00:07:07Z,2017-03-14T13:01:04Z,MERGED,True,12,0,2,https://github.com/nobu,Fix out-of-bound access,1,[],https://github.com/mruby/mruby/pull/3503,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3503,"Get rid of out-of-bound access when single % at the end.
The latter test case doesn't fail with cruby, because shared sub-strings are not allowed in the middle, right now.","Get rid of out-of-bound access when single % at the end.
The latter test case doesn't fail with cruby, because shared sub-strings are not allowed in the middle, right now.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3510,2017-03-15T08:05:04Z,2017-03-16T13:18:16Z,2017-04-03T04:02:14Z,MERGED,True,16,5,2,https://github.com/ksss,Some update for `String#each_line`,3,[],https://github.com/mruby/mruby/pull/3510,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3510,"Use duplicated object for block args
Suuport custom separator
Support to return enumerator when no block given","Use duplicated object for block args
Suuport custom separator
Support to return enumerator when no block given",True,{}
mruby/mruby,https://github.com/mruby/mruby,3524,2017-03-17T03:38:45Z,2017-03-17T07:00:51Z,2017-03-18T06:58:57Z,MERGED,True,1,2,1,https://github.com/ksss,MiniRake::Task#timestamp should use Time.now only,1,[],https://github.com/mruby/mruby/pull/3524,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3524,"$ cat t.rake
require 'fileutils'

file ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

task ""b.txt"" => ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

file ""c.txt"" => ""b.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end
$ rm -f {a,b,c}.txt

$ rake c.txt -f t.rake
""a.txt""
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ touch b.txt

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

I think, minirake should call ""c.txt"" file task block","$ cat t.rake
require 'fileutils'

file ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

task ""b.txt"" => ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

file ""c.txt"" => ""b.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end
$ rm -f {a,b,c}.txt

$ rake c.txt -f t.rake
""a.txt""
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ touch b.txt

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

I think, minirake should call ""c.txt"" file task block",True,{}
mruby/mruby,https://github.com/mruby/mruby,3524,2017-03-17T03:38:45Z,2017-03-17T07:00:51Z,2017-03-18T06:58:57Z,MERGED,True,1,2,1,https://github.com/ksss,MiniRake::Task#timestamp should use Time.now only,1,[],https://github.com/mruby/mruby/pull/3524,https://github.com/ksss,2,https://github.com/mruby/mruby/pull/3524#issuecomment-287258842,"$ cat t.rake
require 'fileutils'

file ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

task ""b.txt"" => ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

file ""c.txt"" => ""b.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end
$ rm -f {a,b,c}.txt

$ rake c.txt -f t.rake
""a.txt""
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ touch b.txt

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

I think, minirake should call ""c.txt"" file task block",Referenced by https://github.com/ruby/rake/blob/af15762f972a3f8322a9b5904d56fe2ff3dd8352/lib/rake/task.rb#L261,True,{}
mruby/mruby,https://github.com/mruby/mruby,3524,2017-03-17T03:38:45Z,2017-03-17T07:00:51Z,2017-03-18T06:58:57Z,MERGED,True,1,2,1,https://github.com/ksss,MiniRake::Task#timestamp should use Time.now only,1,[],https://github.com/mruby/mruby/pull/3524,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3524#issuecomment-287281869,"$ cat t.rake
require 'fileutils'

file ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

task ""b.txt"" => ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

file ""c.txt"" => ""b.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end
$ rm -f {a,b,c}.txt

$ rake c.txt -f t.rake
""a.txt""
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ touch b.txt

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

I think, minirake should call ""c.txt"" file task block","I am not 100% sure, but I trust you.  Report if something happens.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3524,2017-03-17T03:38:45Z,2017-03-17T07:00:51Z,2017-03-18T06:58:57Z,MERGED,True,1,2,1,https://github.com/ksss,MiniRake::Task#timestamp should use Time.now only,1,[],https://github.com/mruby/mruby/pull/3524,https://github.com/ksss,4,https://github.com/mruby/mruby/pull/3524#issuecomment-287285289,"$ cat t.rake
require 'fileutils'

file ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

task ""b.txt"" => ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

file ""c.txt"" => ""b.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end
$ rm -f {a,b,c}.txt

$ rake c.txt -f t.rake
""a.txt""
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ touch b.txt

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

I think, minirake should call ""c.txt"" file task block","@matz Thank you for trust me.
What are the concerns? backward compatibility?
I'll revert if problems arise.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3524,2017-03-17T03:38:45Z,2017-03-17T07:00:51Z,2017-03-18T06:58:57Z,MERGED,True,1,2,1,https://github.com/ksss,MiniRake::Task#timestamp should use Time.now only,1,[],https://github.com/mruby/mruby/pull/3524,https://github.com/matz,5,https://github.com/mruby/mruby/pull/3524#issuecomment-287368118,"$ cat t.rake
require 'fileutils'

file ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

task ""b.txt"" => ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

file ""c.txt"" => ""b.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end
$ rm -f {a,b,c}.txt

$ rake c.txt -f t.rake
""a.txt""
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ touch b.txt

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

I think, minirake should call ""c.txt"" file task block",No specific concern. I have to confess I didn't understand the meaning of the change.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3524,2017-03-17T03:38:45Z,2017-03-17T07:00:51Z,2017-03-18T06:58:57Z,MERGED,True,1,2,1,https://github.com/ksss,MiniRake::Task#timestamp should use Time.now only,1,[],https://github.com/mruby/mruby/pull/3524,https://github.com/ksss,6,https://github.com/mruby/mruby/pull/3524#issuecomment-287521535,"$ cat t.rake
require 'fileutils'

file ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

task ""b.txt"" => ""a.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end

file ""c.txt"" => ""b.txt"" do |t|
  p t.name
  FileUtils.touch(t.name)
end
$ rm -f {a,b,c}.txt

$ rake c.txt -f t.rake
""a.txt""
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ touch b.txt

$ ./minirake c.txt -f t.rake
(in /Users/ksss/src/github.com/ksss/mruby)
""b.txt""

$ rake c.txt -f t.rake
""b.txt""
""c.txt""

I think, minirake should call ""c.txt"" file task block",I see.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3526,2017-03-18T13:11:32Z,2017-03-18T14:30:36Z,2017-03-18T22:54:38Z,MERGED,True,1,1,1,https://github.com/ksss,sprintf: Should use mrb_int for any object,1,[],https://github.com/mruby/mruby/pull/3526,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3526,"$ cat t.rb
o=Object.new
def o.to_int
  1
end
p ""%*d"" % [o, 1]

$ ruby t.rb
""1""

$ mruby t.rb
# prints very long white space....

The cause is that mrb_fixnum calls with any object(e.g. MRB_TT_OBJECT).","$ cat t.rb
o=Object.new
def o.to_int
  1
end
p ""%*d"" % [o, 1]

$ ruby t.rb
""1""

$ mruby t.rb
# prints very long white space....

The cause is that mrb_fixnum calls with any object(e.g. MRB_TT_OBJECT).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3527,2017-03-19T14:18:07Z,2017-03-19T17:23:12Z,2017-03-20T01:02:48Z,MERGED,True,31,19,2,https://github.com/ksss,Update String#gsub and String#gsub!,2,[],https://github.com/mruby/mruby/pull/3527,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3527,"This PR has 2 points for String#gsub and String#gsub!

Support to return Enumerator for String#gsub,gsub!
Callback should yield with pattern every time","This PR has 2 points for String#gsub and String#gsub!

Support to return Enumerator for String#gsub,gsub!
Callback should yield with pattern every time",True,{}
mruby/mruby,https://github.com/mruby/mruby,3529,2017-03-21T07:43:57Z,2017-03-22T16:14:47Z,2017-03-30T00:38:24Z,MERGED,True,16,4,2,https://github.com/kou,Hash sub class creates new sub class objects instead of Hash,1,[],https://github.com/mruby/mruby/pull/3529,https://github.com/kou,1,https://github.com/mruby/mruby/pull/3529,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3529,2017-03-21T07:43:57Z,2017-03-22T16:14:47Z,2017-03-30T00:38:24Z,MERGED,True,16,4,2,https://github.com/kou,Hash sub class creates new sub class objects instead of Hash,1,[],https://github.com/mruby/mruby/pull/3529,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3529#issuecomment-288064026,,I prefer self.new instead of new.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3529,2017-03-21T07:43:57Z,2017-03-22T16:14:47Z,2017-03-30T00:38:24Z,MERGED,True,16,4,2,https://github.com/kou,Hash sub class creates new sub class objects instead of Hash,1,[],https://github.com/mruby/mruby/pull/3529,https://github.com/kou,3,https://github.com/mruby/mruby/pull/3529#issuecomment-288094726,,OK. I changed to self.new.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3530,2017-03-21T11:42:05Z,2017-03-22T16:21:39Z,2017-03-22T16:23:29Z,CLOSED,False,1,1,1,https://github.com/felixjones,Replaced PRId64 with PRIdPTR for intptr_t snprintf,3,[],https://github.com/mruby/mruby/pull/3530,https://github.com/felixjones,1,https://github.com/mruby/mruby/pull/3530,"3703aed introduced the warning #3492 (comment)

mruby/mrbgems/mruby-compiler/core/codegen.c:2202:47:
warning: format specifies type 'long long' but the argument has type 'intptr_t' (aka 'long') [-Wformat]
snprintf(buf, sizeof(buf), ""$%"" PRId64, (intptr_t)tree);

PRIdPTR fixes this  (expands to the correct format for intptr_t)","3703aed introduced the warning #3492 (comment)

mruby/mrbgems/mruby-compiler/core/codegen.c:2202:47:
warning: format specifies type 'long long' but the argument has type 'intptr_t' (aka 'long') [-Wformat]
snprintf(buf, sizeof(buf), ""$%"" PRId64, (intptr_t)tree);

PRIdPTR fixes this  (expands to the correct format for intptr_t)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3530,2017-03-21T11:42:05Z,2017-03-22T16:21:39Z,2017-03-22T16:23:29Z,CLOSED,False,1,1,1,https://github.com/felixjones,Replaced PRId64 with PRIdPTR for intptr_t snprintf,3,[],https://github.com/mruby/mruby/pull/3530,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3530#issuecomment-288064963,"3703aed introduced the warning #3492 (comment)

mruby/mrbgems/mruby-compiler/core/codegen.c:2202:47:
warning: format specifies type 'long long' but the argument has type 'intptr_t' (aka 'long') [-Wformat]
snprintf(buf, sizeof(buf), ""$%"" PRId64, (intptr_t)tree);

PRIdPTR fixes this  (expands to the correct format for intptr_t)","I concern that PRIdPTR available on many (or all) platforms.
I should have cast to int not intptr_t, maybe, since the value must be 1 digit integer.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3530,2017-03-21T11:42:05Z,2017-03-22T16:21:39Z,2017-03-22T16:23:29Z,CLOSED,False,1,1,1,https://github.com/felixjones,Replaced PRId64 with PRIdPTR for intptr_t snprintf,3,[],https://github.com/mruby/mruby/pull/3530,https://github.com/felixjones,3,https://github.com/mruby/mruby/pull/3530#issuecomment-288067326,"3703aed introduced the warning #3492 (comment)

mruby/mrbgems/mruby-compiler/core/codegen.c:2202:47:
warning: format specifies type 'long long' but the argument has type 'intptr_t' (aka 'long') [-Wformat]
snprintf(buf, sizeof(buf), ""$%"" PRId64, (intptr_t)tree);

PRIdPTR fixes this  (expands to the correct format for intptr_t)","I thought PRIdPTR was a C99 definition as part of inttypes along with PRId64?
Casting to int would be more ideal if 1 digit will only ever be needed, %d can be straight used in this case.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3530,2017-03-21T11:42:05Z,2017-03-22T16:21:39Z,2017-03-22T16:23:29Z,CLOSED,False,1,1,1,https://github.com/felixjones,Replaced PRId64 with PRIdPTR for intptr_t snprintf,3,[],https://github.com/mruby/mruby/pull/3530,https://github.com/felixjones,4,https://github.com/mruby/mruby/pull/3530#issuecomment-288071169,"3703aed introduced the warning #3492 (comment)

mruby/mrbgems/mruby-compiler/core/codegen.c:2202:47:
warning: format specifies type 'long long' but the argument has type 'intptr_t' (aka 'long') [-Wformat]
snprintf(buf, sizeof(buf), ""$%"" PRId64, (intptr_t)tree);

PRIdPTR fixes this  (expands to the correct format for intptr_t)","If 1 digit is expected, then can we use %1d and resize char buf[32] to char buf[3] ?
EDIT: After testing, %1d does not specify the maximum digits output, only the minimum (is in effect equivalent to %d).
Reducing buf to 3 works fine, with the most significant number being used in the buffer, for single digit integers this will always be the units, I think this would be acceptable as long as the case tree < 10 && tree >= 0 is true.
EDIT2: I'm also wondering if snprintf is even needed if tree is expected to be a 1 digit integer.
Is this not equivalent?
case NODE_NTH_REF:
    tree = (node*)((intptr_t)tree + '0'); // Mutates tree to be within ASCII range 0..9
    /* fall through */

case NODE_BACK_REF:
    if (val) {
      char buf[3];
      int sym;

      buf[0] = '$';
      buf[1] = (char)(intptr_t)tree;
      buf[2] = 0;
      sym = new_sym(s, mrb_intern_cstr(s->mrb, buf));
      genop(s, MKOP_ABx(OP_GETGLOBAL, cursp(), sym));
      push();
    }
    break;
If snprintf is to be used, I feel it should be used for safety and type check reasons, in which case I'd argue that PRIdPTR with an intptr_t cast should be used to allow for cases where tree < 0 || tree > 9",True,{}
mruby/mruby,https://github.com/mruby/mruby,3530,2017-03-21T11:42:05Z,2017-03-22T16:21:39Z,2017-03-22T16:23:29Z,CLOSED,False,1,1,1,https://github.com/felixjones,Replaced PRId64 with PRIdPTR for intptr_t snprintf,3,[],https://github.com/mruby/mruby/pull/3530,https://github.com/matz,5,https://github.com/mruby/mruby/pull/3530#issuecomment-288455134,"3703aed introduced the warning #3492 (comment)

mruby/mrbgems/mruby-compiler/core/codegen.c:2202:47:
warning: format specifies type 'long long' but the argument has type 'intptr_t' (aka 'long') [-Wformat]
snprintf(buf, sizeof(buf), ""$%"" PRId64, (intptr_t)tree);

PRIdPTR fixes this  (expands to the correct format for intptr_t)","It can be more than 1 digit. $123456 is a valid variable name. Embarrassing.
I silenced the warning by 9eb0c11.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3536,2017-03-22T13:25:23Z,2017-03-22T15:49:07Z,2017-03-22T23:02:55Z,MERGED,True,33,7,2,https://github.com/ksss,Fix result if pattern is empty,1,[],https://github.com/mruby/mruby/pull/3536,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3536,"""abc"".sub("""", ""."")
#Expect => "".abc""
#Actual => ""a.bc""

""abc"".sub(""""){ ""."" }
#Expect => "".abc""
#Actual => ""a.bc""","""abc"".sub("""", ""."")
#Expect => "".abc""
#Actual => ""a.bc""

""abc"".sub(""""){ ""."" }
#Expect => "".abc""
#Actual => ""a.bc""",True,{}
mruby/mruby,https://github.com/mruby/mruby,3544,2017-03-25T06:42:24Z,2017-03-27T02:50:19Z,2017-03-27T02:55:19Z,MERGED,True,3,0,2,https://github.com/ksss,Fix lost lineno,1,[],https://github.com/mruby/mruby/pull/3544,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3544,"Kernel#caller result lost lineno from dcf6a41 .
Maybe, @matz forgot to fix it.","Kernel#caller result lost lineno from dcf6a41 .
Maybe, @matz forgot to fix it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3545,2017-03-26T03:55:59Z,2017-03-27T02:49:38Z,2017-03-30T07:37:57Z,MERGED,True,1,0,1,https://github.com/keizo042,Ignore file generated by ctags,1,[],https://github.com/mruby/mruby/pull/3545,https://github.com/keizo042,1,https://github.com/mruby/mruby/pull/3545,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3552,2017-03-28T02:02:22Z,2017-03-28T05:47:23Z,2017-03-28T06:05:59Z,MERGED,True,31,3,2,https://github.com/ksss,Fix infinity loop ref #3546,1,[],https://github.com/mruby/mruby/pull/3552,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3552,And some cases should raise FloatDomainError,And some cases should raise FloatDomainError,True,{}
mruby/mruby,https://github.com/mruby/mruby,3552,2017-03-28T02:02:22Z,2017-03-28T05:47:23Z,2017-03-28T06:05:59Z,MERGED,True,31,3,2,https://github.com/ksss,Fix infinity loop ref #3546,1,[],https://github.com/mruby/mruby/pull/3552,https://github.com/ksss,2,https://github.com/mruby/mruby/pull/3552#issuecomment-289672486,And some cases should raise FloatDomainError,ref #3546,True,{}
mruby/mruby,https://github.com/mruby/mruby,3553,2017-03-28T06:13:08Z,2017-03-28T06:24:53Z,2017-03-28T06:27:00Z,MERGED,True,100,0,2,https://github.com/okkez,Implement Array#slice!,1,[],https://github.com/mruby/mruby/pull/3553,https://github.com/okkez,1,https://github.com/mruby/mruby/pull/3553,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3558,2017-03-28T14:12:00Z,2017-03-29T03:50:43Z,2017-03-29T03:54:47Z,MERGED,True,18,12,3,https://github.com/ksss,Should raise FloatDomainError,1,[],https://github.com/mruby/mruby/pull/3558,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3558,"I'm concerned about this use case.
mrb_value v = mrb_funcall(mrb, num, ""to_i"", 0)
mrb_int i = mrb_fixnum(v);

if (i == 0) {
  // ...
example: https://github.com/iij/mruby-pack/blob/88a7fedea413568a1ff0410e109ff55a03b63a5f/src/pack.c#L1022
If num is Float::INFINITY, then i is 0.
But I think, It's not expected value.
This behavior is compatible with CRuby.
$ ruby -e 'Float::INFINITY.to_i'
	from -e:1:in `<main>'
-e:1:in `to_i': Infinity (FloatDomainError)","I'm concerned about this use case.
mrb_value v = mrb_funcall(mrb, num, ""to_i"", 0)
mrb_int i = mrb_fixnum(v);

if (i == 0) {
  // ...
example: https://github.com/iij/mruby-pack/blob/88a7fedea413568a1ff0410e109ff55a03b63a5f/src/pack.c#L1022
If num is Float::INFINITY, then i is 0.
But I think, It's not expected value.
This behavior is compatible with CRuby.
$ ruby -e 'Float::INFINITY.to_i'
	from -e:1:in `<main>'
-e:1:in `to_i': Infinity (FloatDomainError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3558,2017-03-28T14:12:00Z,2017-03-29T03:50:43Z,2017-03-29T03:54:47Z,MERGED,True,18,12,3,https://github.com/ksss,Should raise FloatDomainError,1,[],https://github.com/mruby/mruby/pull/3558,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3558#issuecomment-289947771,"I'm concerned about this use case.
mrb_value v = mrb_funcall(mrb, num, ""to_i"", 0)
mrb_int i = mrb_fixnum(v);

if (i == 0) {
  // ...
example: https://github.com/iij/mruby-pack/blob/88a7fedea413568a1ff0410e109ff55a03b63a5f/src/pack.c#L1022
If num is Float::INFINITY, then i is 0.
But I think, It's not expected value.
This behavior is compatible with CRuby.
$ ruby -e 'Float::INFINITY.to_i'
	from -e:1:in `<main>'
-e:1:in `to_i': Infinity (FloatDomainError)",check_num_exact() should have propoer prefix e.g. mrb_,True,{}
mruby/mruby,https://github.com/mruby/mruby,3558,2017-03-28T14:12:00Z,2017-03-29T03:50:43Z,2017-03-29T03:54:47Z,MERGED,True,18,12,3,https://github.com/ksss,Should raise FloatDomainError,1,[],https://github.com/mruby/mruby/pull/3558,https://github.com/ksss,3,https://github.com/mruby/mruby/pull/3558#issuecomment-289967684,"I'm concerned about this use case.
mrb_value v = mrb_funcall(mrb, num, ""to_i"", 0)
mrb_int i = mrb_fixnum(v);

if (i == 0) {
  // ...
example: https://github.com/iij/mruby-pack/blob/88a7fedea413568a1ff0410e109ff55a03b63a5f/src/pack.c#L1022
If num is Float::INFINITY, then i is 0.
But I think, It's not expected value.
This behavior is compatible with CRuby.
$ ruby -e 'Float::INFINITY.to_i'
	from -e:1:in `<main>'
-e:1:in `to_i': Infinity (FloatDomainError)","Thank you for reviewings.
I rebased branch.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3563,2017-03-28T20:35:39Z,2017-03-29T00:43:33Z,2017-04-03T19:46:05Z,MERGED,True,2,1,1,https://github.com/clayton-shopify,Renumber hash keys during dup since there may be duplicates.,1,[],https://github.com/mruby/mruby/pull/3563,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3563,"@matz
Fixes #3562.","@matz
Fixes #3562.",True,{'HOORAY': ['https://github.com/lalithr95']}
mruby/mruby,https://github.com/mruby/mruby,3564,2017-03-28T23:04:30Z,2017-03-29T00:40:44Z,2017-03-30T00:36:08Z,MERGED,True,15,2,2,https://github.com/okkez,Set proper class to subclass of Array,1,[],https://github.com/mruby/mruby/pull/3564,https://github.com/okkez,1,https://github.com/mruby/mruby/pull/3564,More compatibility to CRuby.,More compatibility to CRuby.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3564,2017-03-28T23:04:30Z,2017-03-29T00:40:44Z,2017-03-30T00:36:08Z,MERGED,True,15,2,2,https://github.com/okkez,Set proper class to subclass of Array,1,[],https://github.com/mruby/mruby/pull/3564,https://github.com/okkez,2,https://github.com/mruby/mruby/pull/3564#issuecomment-290267396,More compatibility to CRuby.,Thanks!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3566,2017-03-30T01:57:44Z,2017-03-30T05:49:34Z,2017-03-30T06:18:41Z,MERGED,True,9,2,2,https://github.com/okkez,Fix Enumerator#each_with_index with block,1,[],https://github.com/mruby/mruby/pull/3566,https://github.com/okkez,1,https://github.com/mruby/mruby/pull/3566,"In previous version,
a = [3, 2, 1]
e = a.each
e.sort_by(&:to_i) # => []

In this version,
a = [3, 2, 1]
e = a.each
e.sort_by(&:to_i) # => [1, 2, 3]","In previous version,
a = [3, 2, 1]
e = a.each
e.sort_by(&:to_i) # => []

In this version,
a = [3, 2, 1]
e = a.each
e.sort_by(&:to_i) # => [1, 2, 3]",True,{}
mruby/mruby,https://github.com/mruby/mruby,3570,2017-03-30T07:33:39Z,2017-03-30T08:09:44Z,2017-03-30T08:27:29Z,MERGED,True,27,4,2,https://github.com/keizo042,Modify class variable definition in singleton class; fix #3539,1,[],https://github.com/mruby/mruby/pull/3570,https://github.com/keizo042,1,https://github.com/mruby/mruby/pull/3570,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3570,2017-03-30T07:33:39Z,2017-03-30T08:09:44Z,2017-03-30T08:27:29Z,MERGED,True,27,4,2,https://github.com/keizo042,Modify class variable definition in singleton class; fix #3539,1,[],https://github.com/mruby/mruby/pull/3570,https://github.com/keizo042,2,https://github.com/mruby/mruby/pull/3570#issuecomment-290339308,,Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3571,2017-03-31T04:45:49Z,2017-03-31T07:39:21Z,2017-03-31T07:48:10Z,MERGED,True,12,1,2,https://github.com/keizo042,Modify to get constant of parent module in singleton class; fix #3568,1,[],https://github.com/mruby/mruby/pull/3571,https://github.com/keizo042,1,https://github.com/mruby/mruby/pull/3571,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3573,2017-04-02T14:37:41Z,2017-04-02T14:54:30Z,2017-04-02T22:34:47Z,MERGED,True,11,7,2,https://github.com/ksss,Fix parameters when noname rest,2,[],https://github.com/mruby/mruby/pull/3573,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3573,"p lambda { |*| }.parameters
# Actual => [[:rest, :""""]]
# Expect => [[:rest]]","p lambda { |*| }.parameters
# Actual => [[:rest, :""""]]
# Expect => [[:rest]]",True,{}
mruby/mruby,https://github.com/mruby/mruby,3576,2017-04-03T07:43:39Z,2017-04-03T09:04:33Z,2017-04-03T09:04:33Z,MERGED,True,3,1,2,https://github.com/okkez,Change return value of Enumberable#each_cons,1,[],https://github.com/mruby/mruby/pull/3576,https://github.com/okkez,1,https://github.com/mruby/mruby/pull/3576,More compatibility to CRuby.,More compatibility to CRuby.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3577,2017-04-03T07:48:04Z,2017-04-03T09:04:58Z,2017-04-03T09:04:58Z,MERGED,True,3,1,2,https://github.com/okkez,Change return value of Enumerable#each_slice,1,[],https://github.com/mruby/mruby/pull/3577,https://github.com/okkez,1,https://github.com/mruby/mruby/pull/3577,More compatibility to CRuby.,More compatibility to CRuby.,True,{'THUMBS_UP': ['https://github.com/dabroz']}
mruby/mruby,https://github.com/mruby/mruby,3578,2017-04-03T11:43:32Z,2017-04-03T12:48:24Z,2017-04-03T12:48:24Z,MERGED,True,1,1,1,https://github.com/bggd,Change AppVeyor's clone_depth,1,[],https://github.com/mruby/mruby/pull/3578,https://github.com/bggd,1,https://github.com/mruby/mruby/pull/3578,"A too small depth size will fail git checkout in the old AppVeyor's CI Queue.
This commit change the depth size from 1 to 50(Travis CI's default).","A too small depth size will fail git checkout in the old AppVeyor's CI Queue.
This commit change the depth size from 1 to 50(Travis CI's default).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3579,2017-04-03T18:34:01Z,2017-04-04T02:17:11Z,2017-04-04T02:17:11Z,MERGED,True,1,1,1,https://github.com/clayton-shopify,Correctly handle large negative usec value.,1,[],https://github.com/mruby/mruby/pull/3579,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3579,"@matz The fix for #3561 produces incorrect results when usec is a large negative value:
> Time.at(0, -1e16)
 => Fri Mar 23 07:26:39 1336

The correct value (as reported by CRuby) is:
irb(main):001:0> Time.at(0, -1e16)
=> 1653-02-10 01:13:20 -0500

The reason for this is that floating point inaccuracy can leave tm->usec with a value that is larger than 1000000 after the first if statement, which causes the second if statement to execute as well. To solve this problem, I've added an else so that only one of the cases can execute. This produces the correct result:
> Time.at(0, -1e16)
 => Mon Feb 10 01:13:19 1653","@matz The fix for #3561 produces incorrect results when usec is a large negative value:
> Time.at(0, -1e16)
 => Fri Mar 23 07:26:39 1336

The correct value (as reported by CRuby) is:
irb(main):001:0> Time.at(0, -1e16)
=> 1653-02-10 01:13:20 -0500

The reason for this is that floating point inaccuracy can leave tm->usec with a value that is larger than 1000000 after the first if statement, which causes the second if statement to execute as well. To solve this problem, I've added an else so that only one of the cases can execute. This produces the correct result:
> Time.at(0, -1e16)
 => Mon Feb 10 01:13:19 1653",True,{}
mruby/mruby,https://github.com/mruby/mruby,3583,2017-04-04T03:22:06Z,2017-07-28T22:15:25Z,2017-09-14T09:51:32Z,MERGED,True,8,6,6,https://github.com/udzura,[Proposal] Moving class definitions for tasks under lib/ directory?,3,[],https://github.com/mruby/mruby/pull/3583,https://github.com/udzura,1,https://github.com/mruby/mruby/pull/3583,"Current status: Classes/Modules used in mruby compilation tasks are defined in the same directory as tasks, with .rake extension.
I suppose this is confusing for average Rubyists, who are interested in mruby and its maintenance!","Current status: Classes/Modules used in mruby compilation tasks are defined in the same directory as tasks, with .rake extension.
I suppose this is confusing for average Rubyists, who are interested in mruby and its maintenance!",True,{'THUMBS_UP': ['https://github.com/matsumotory']}
mruby/mruby,https://github.com/mruby/mruby,3583,2017-04-04T03:22:06Z,2017-07-28T22:15:25Z,2017-09-14T09:51:32Z,MERGED,True,8,6,6,https://github.com/udzura,[Proposal] Moving class definitions for tasks under lib/ directory?,3,[],https://github.com/mruby/mruby/pull/3583,https://github.com/udzura,2,https://github.com/mruby/mruby/pull/3583#issuecomment-291383567,"Current status: Classes/Modules used in mruby compilation tasks are defined in the same directory as tasks, with .rake extension.
I suppose this is confusing for average Rubyists, who are interested in mruby and its maintenance!","One more question: How about ./mrblib/mrblib.rake and ./src/mruby_core.rake files?
This is natural when thinking they are Makefile alternatives, but strange when this is a Ruby project (I guess tasks are recommended to be in the same tasks or lib/tasks directory)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3594,2017-04-06T14:35:32Z,2017-04-07T02:39:11Z,2017-04-10T06:50:59Z,MERGED,True,24,1,2,https://github.com/keizo042,Get constant of parent class even if child class is defined in signle…,1,[],https://github.com/mruby/mruby/pull/3594,https://github.com/keizo042,1,https://github.com/mruby/mruby/pull/3594,…ton class; fix #3575,…ton class; fix #3575,True,{}
mruby/mruby,https://github.com/mruby/mruby,3594,2017-04-06T14:35:32Z,2017-04-07T02:39:11Z,2017-04-10T06:50:59Z,MERGED,True,24,1,2,https://github.com/keizo042,Get constant of parent class even if child class is defined in signle…,1,[],https://github.com/mruby/mruby/pull/3594,https://github.com/tsahara,2,https://github.com/mruby/mruby/pull/3594#issuecomment-292864163,…ton class; fix #3575,Thank you for fixing #3575.  But I found a variant of the issue and reported it as #3598.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3595,2017-04-08T02:22:56Z,2017-04-08T08:47:21Z,2017-04-08T08:47:21Z,MERGED,True,10,2,1,https://github.com/keizo042,Attach a name to  embbeded value of rescue/ensure stack size,1,[],https://github.com/mruby/mruby/pull/3595,https://github.com/keizo042,1,https://github.com/mruby/mruby/pull/3595,"it allow compiler modify stack size with -D option, for debugging purpose mainly.","it allow compiler modify stack size with -D option, for debugging purpose mainly.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3604,2017-04-12T13:45:28Z,2017-04-12T15:42:27Z,2017-04-12T15:44:09Z,MERGED,True,4,4,1,https://github.com/keizo042,Find Class/Module in nested singleton class; fix #3598,2,[],https://github.com/mruby/mruby/pull/3604,https://github.com/keizo042,1,https://github.com/mruby/mruby/pull/3604,,,True,{'THUMBS_UP': ['https://github.com/ksss']}
mruby/mruby,https://github.com/mruby/mruby,3604,2017-04-12T13:45:28Z,2017-04-12T15:42:27Z,2017-04-12T15:44:09Z,MERGED,True,4,4,1,https://github.com/keizo042,Find Class/Module in nested singleton class; fix #3598,2,[],https://github.com/mruby/mruby/pull/3604,https://github.com/keizo042,2,https://github.com/mruby/mruby/pull/3604#issuecomment-293595044,,"Thank you for the review.
I updated.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3608,2017-04-13T14:57:12Z,2017-04-13T22:07:52Z,2017-10-20T21:40:03Z,MERGED,True,1,1,1,https://github.com/clayton-shopify,Fix an off-by-one causing a buffer overflow in mirb.,1,[],https://github.com/mruby/mruby/pull/3608,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3608,"If MRuby is built without libreadline, then a buffer overflow occurs in mirb when a line 1023 characters or longer is read:
$ ruby -e 'puts ""0""*1023' | bin/mirb
mirb - Embeddable Interactive Ruby Shell

> Segmentation fault (core dumped)

This happens because mirb reads into a 1024-byte buffer, but doesn't leave enough space for the \n and \0 that will be appended to the input. This PR fixes the off-by one.
This issue was reported by https://hackerone.com/geeknik","If MRuby is built without libreadline, then a buffer overflow occurs in mirb when a line 1023 characters or longer is read:
$ ruby -e 'puts ""0""*1023' | bin/mirb
mirb - Embeddable Interactive Ruby Shell

> Segmentation fault (core dumped)

This happens because mirb reads into a 1024-byte buffer, but doesn't leave enough space for the \n and \0 that will be appended to the input. This PR fixes the off-by one.
This issue was reported by https://hackerone.com/geeknik",True,{}
mruby/mruby,https://github.com/mruby/mruby,3608,2017-04-13T14:57:12Z,2017-04-13T22:07:52Z,2017-10-20T21:40:03Z,MERGED,True,1,1,1,https://github.com/clayton-shopify,Fix an off-by-one causing a buffer overflow in mirb.,1,[],https://github.com/mruby/mruby/pull/3608,https://github.com/clayton-shopify,2,https://github.com/mruby/mruby/pull/3608#issuecomment-293927836,"If MRuby is built without libreadline, then a buffer overflow occurs in mirb when a line 1023 characters or longer is read:
$ ruby -e 'puts ""0""*1023' | bin/mirb
mirb - Embeddable Interactive Ruby Shell

> Segmentation fault (core dumped)

This happens because mirb reads into a 1024-byte buffer, but doesn't leave enough space for the \n and \0 that will be appended to the input. This PR fixes the off-by one.
This issue was reported by https://hackerone.com/geeknik","To reproduce this without removing the libreadline headers, you can just add && false to this line and rebuild: 
  
    
      mruby/mrbgems/mruby-bin-mirb/mrbgem.rake
    
    
         Line 6
      in
      045e78c
    
  
  
    

        
          
           if spec.build.cc.search_header_path 'readline/readline.h'",True,{}
mruby/mruby,https://github.com/mruby/mruby,3615,2017-04-18T15:24:53Z,2017-04-18T22:07:03Z,2017-04-18T22:09:57Z,MERGED,True,6,1,1,https://github.com/clayton-shopify,Check if sc->mt is initialized before copying it.,1,[],https://github.com/mruby/mruby/pull/3615,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3615,"The following input demonstrates a null pointer dereference:
class X < Module
  def initialize
  end
end

X.new.clone
ASAN report:
==27567==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000105e43143 bp 0x7fff59ddab50 sp 0x7fff59ddaa80 T0)
==27567==The signal is caused by a READ memory access.
==27567==Hint: address points to the zero page.
    #0 0x105e43142 in kh_copy_mt class.c:19
    #1 0x105ed2315 in copy_class kernel.c:244
    #2 0x105ebf207 in init_copy kernel.c:255
    #3 0x105ebd840 in mrb_obj_clone kernel.c:315
    #4 0x105f8c618 in mrb_vm_exec vm.c:1279
    #5 0x105f8179f in mrb_vm_run vm.c:829
    #6 0x105fb48b9 in mrb_top_run vm.c:2674
    #7 0x106085ba5 in mrb_load_exec parse.y:5780
    #8 0x1060864f5 in mrb_load_file_cxt parse.y:5789
    #9 0x105e1d9e6 in main mruby.c:227
    #10 0x7fffbbbba234 in start (libdyld.dylib:x86_64+0x5234)

==27567==Register values:
rax = 0x0000000000000000  rbx = 0x00007fff59ddac40  rcx = 0x0000000000000000  rdx = 0x0000100000000000
rdi = 0x000061400001b100  rsi = 0x0000100000000000  rbp = 0x00007fff59ddab50  rsp = 0x00007fff59ddaa80
 r8 = 0x00001c0800003d3c   r9 = 0x0000100000000000  r10 = 0x0000000000000080  r11 = 0x0000000000000000
r12 = 0xf2f20000f1f1f1f1  r13 = 0x00001fffeb3bc470  r14 = 0x00007fff59ddac00  r15 = 0x00007fff59ddac20
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV class.c:19 in kh_copy_mt
==27567==ABORTING
Abort trap: 6

This occurs because copy_class does not check whether sc->mt is initialized before copying it. I've fixed this by adding a check similar to the one already present in mrb_singleton_class_clone: 
  
    
      mruby/src/kernel.c
    
    
        Lines 213 to 218
      in
      79e0314
    
  
  
    

        
          
           if (klass->mt) { 
        

        
          
             clone->mt = kh_copy(mt, mrb, klass->mt); 
        

        
          
           } 
        

        
          
           else { 
        

        
          
             clone->mt = kh_init(mt, mrb); 
        

        
          
           } 
        
    
  


This issue was reported by https://hackerone.com/ssarong","The following input demonstrates a null pointer dereference:
class X < Module
  def initialize
  end
end

X.new.clone
ASAN report:
==27567==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000105e43143 bp 0x7fff59ddab50 sp 0x7fff59ddaa80 T0)
==27567==The signal is caused by a READ memory access.
==27567==Hint: address points to the zero page.
    #0 0x105e43142 in kh_copy_mt class.c:19
    #1 0x105ed2315 in copy_class kernel.c:244
    #2 0x105ebf207 in init_copy kernel.c:255
    #3 0x105ebd840 in mrb_obj_clone kernel.c:315
    #4 0x105f8c618 in mrb_vm_exec vm.c:1279
    #5 0x105f8179f in mrb_vm_run vm.c:829
    #6 0x105fb48b9 in mrb_top_run vm.c:2674
    #7 0x106085ba5 in mrb_load_exec parse.y:5780
    #8 0x1060864f5 in mrb_load_file_cxt parse.y:5789
    #9 0x105e1d9e6 in main mruby.c:227
    #10 0x7fffbbbba234 in start (libdyld.dylib:x86_64+0x5234)

==27567==Register values:
rax = 0x0000000000000000  rbx = 0x00007fff59ddac40  rcx = 0x0000000000000000  rdx = 0x0000100000000000
rdi = 0x000061400001b100  rsi = 0x0000100000000000  rbp = 0x00007fff59ddab50  rsp = 0x00007fff59ddaa80
 r8 = 0x00001c0800003d3c   r9 = 0x0000100000000000  r10 = 0x0000000000000080  r11 = 0x0000000000000000
r12 = 0xf2f20000f1f1f1f1  r13 = 0x00001fffeb3bc470  r14 = 0x00007fff59ddac00  r15 = 0x00007fff59ddac20
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV class.c:19 in kh_copy_mt
==27567==ABORTING
Abort trap: 6

This occurs because copy_class does not check whether sc->mt is initialized before copying it. I've fixed this by adding a check similar to the one already present in mrb_singleton_class_clone: 
  
    
      mruby/src/kernel.c
    
    
        Lines 213 to 218
      in
      79e0314
    
  
  
    

        
          
           if (klass->mt) { 
        

        
          
             clone->mt = kh_copy(mt, mrb, klass->mt); 
        

        
          
           } 
        

        
          
           else { 
        

        
          
             clone->mt = kh_init(mt, mrb); 
        

        
          
           } 
        
    
  


This issue was reported by https://hackerone.com/ssarong",True,{}
mruby/mruby,https://github.com/mruby/mruby,3623,2017-04-21T08:29:09Z,2017-04-21T13:28:33Z,2017-07-17T23:52:26Z,MERGED,True,25,2,2,https://github.com/take-cheeze,Support `freeze` method in `Struct`.,1,[],https://github.com/mruby/mruby/pull/3623,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3623,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3624,2017-04-21T08:33:52Z,2017-04-21T13:27:53Z,2017-04-21T13:27:53Z,MERGED,True,2,2,2,https://github.com/yyamano,Fix typo in usage message.,1,[],https://github.com/mruby/mruby/pull/3624,https://github.com/yyamano,1,https://github.com/mruby/mruby/pull/3624,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3625,2017-04-21T08:40:22Z,2017-04-21T13:27:33Z,2017-05-02T07:37:50Z,MERGED,True,4,0,1,https://github.com/take-cheeze,Align pool allocator with 8 byte in 64-bit environment.,1,[],https://github.com/mruby/mruby/pull/3625,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3625,"To avoid warnings from undefined behavior sanitizer.
( https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html )","To avoid warnings from undefined behavior sanitizer.
( https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html )",True,{}
mruby/mruby,https://github.com/mruby/mruby,3626,2017-04-21T08:58:47Z,2017-04-21T13:27:08Z,2017-05-02T07:37:48Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Add missing `arg_i++` to fix bug of `s!` in mrb_get_args.,1,[],https://github.com/mruby/mruby/pull/3626,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3626,"BTW, isn't arg_i and i always same in mrb_get_args?
I don't want two same variables if those are always same.","BTW, isn't arg_i and i always same in mrb_get_args?
I don't want two same variables if those are always same.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3628,2017-04-22T05:30:54Z,2017-04-22T06:16:57Z,2017-04-22T06:16:57Z,MERGED,True,11,1,4,https://github.com/yyamano,Add --libmruby-path support to mruby-bin-mruby-config.,1,[],https://github.com/mruby/mruby/pull/3628,https://github.com/yyamano,1,https://github.com/mruby/mruby/pull/3628,"It makes possible to add dependency to libmruby	to my app's Makefile as	below:
LIBMRUBY_PATH=`mruby-config --libmruby-path`

myapp : $(OBJS) $(LIBMRUBY_PATH)
	# link stuff","It makes possible to add dependency to libmruby	to my app's Makefile as	below:
LIBMRUBY_PATH=`mruby-config --libmruby-path`

myapp : $(OBJS) $(LIBMRUBY_PATH)
	# link stuff",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3629,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.",True,"{'HEART': ['https://github.com/ksss', 'https://github.com/katzer', 'https://github.com/Asmod4n', 'https://github.com/i110', 'https://github.com/hanachin']}"
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/ksss,2,https://github.com/mruby/mruby/pull/3629#issuecomment-296375060,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","Great works!
I fount some incompatibility with CRuby.
$ ruby -e 'p ->(a:){}.arity'
1

$ mruby -e 'p ->(a:){}.arity'
0

$ ruby -e 'p ->(a:1){}.arity'
-1

$ mruby -e 'p ->(a:1){}.arity'
0

$ ruby -e 'p ->(**){}.arity'
-1

$ mruby -e 'p ->(**){}.arity'
0

$ ruby -e 'p ->(a, b:){}.call(1, b: 2)'
nil

$ mruby -e 'p ->(a, b:){}.call(1, b: 2)'
trace:
	[0] -e:1
-e:1: unhandled keyword arguments found: {:b=>2} (ArgumentError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/3629#issuecomment-296417458,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","@ksss @miura1729
Fixed some bugs and add some improvements mrb_callinfo.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/ksss,4,https://github.com/mruby/mruby/pull/3629#issuecomment-296424073,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","@take-cheeze I found another bugs may about GC.
$ ruby -e 'p ->(a:, **k) { [a, k] }.call(a: 1, b: 2, c: 3)'
[1, {:b=>2, :c=>3}]

$ mruby -e 'p ->(a:, **k) { [a, k] }.call(a: 1, b: 2, c: 3)'
[1, {:b=>2}]
And interpretation for argument.
$ ruby -e 'p ->(a = nil, **k) { [a, k] }.call({a: 1}, {})'
[{:a=>1}, {}]

$ mruby -e 'p ->(a = nil, **k) { [a, k] }.call({a: 1}, {})'
trace:
	[0] -e:1
-e:1: 'call': wrong number of arguments (2 for 0) (ArgumentError)
mruby: e7bab50
build_config.rb
MRuby::Build.new do |conf|
  toolchain :gcc
  enable_debug
  conf.gembox 'default'
  conf.cc.defines << %w(MRB_GC_STRESS)
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/take-cheeze,5,https://github.com/mruby/mruby/pull/3629#issuecomment-296433326,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.",@ksss Should be fixed with updates.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/ksss,6,https://github.com/mruby/mruby/pull/3629#issuecomment-296442665,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","@take-cheeze Great!
I found more diffs. (using fedae3f)
$ cat t.rb
p [""-> (a:, b:) { }.arity"", -> (a:, b:) { }.arity]
p [""-> (a, b, c:, d: 1) { }.arity"", -> (a, b, c:, d: 1) { }.arity]
p [""-> (a, b=1, *c, d:, e:, f: 2, **k, &l) { }.arity"", -> (a, b=1, *c, d:, e:, f: 2, **k, &l) { }.arity]

$ ruby t.rb
[""-> (a:, b:) { }.arity"", 1]
[""-> (a, b, c:, d: 1) { }.arity"", 3]
[""-> (a, b=1, *c, d:, e:, f: 2, **k, &l) { }.arity"", -3]

$ mruby t.rb
[""-> (a:, b:) { }.arity"", 2]
[""-> (a, b, c:, d: 1) { }.arity"", -4]
[""-> (a, b=1, *c, d:, e:, f: 2, **k, &l) { }.arity"", -4]
See also
https://github.com/ruby/spec/blob/50357ca5ac97798a4eeb3cfb41680e1982510f9e/core/proc/arity_spec.rb#L44
https://github.com/ruby/spec/blob/50357ca5ac97798a4eeb3cfb41680e1982510f9e/core/proc/arity_spec.rb#L62
https://github.com/ruby/spec/blob/50357ca5ac97798a4eeb3cfb41680e1982510f9e/core/proc/arity_spec.rb#L203",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/take-cheeze,7,https://github.com/mruby/mruby/pull/3629#issuecomment-296498686,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","@ksss I should read description of Proc#arity more closely.
Should be fixed with update.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/ksss,8,https://github.com/mruby/mruby/pull/3629#issuecomment-296506303,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","@take-cheeze Thank you for responding.
I could't find bugs about kw_args anymore!",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/take-cheeze,9,https://github.com/mruby/mruby/pull/3629#issuecomment-296515975,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","@ksss That's nice!
Thank you for many reviews!",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/take-cheeze,10,https://github.com/mruby/mruby/pull/3629#issuecomment-298302754,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.",Rebased and fixed a GC issue in C function.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/katzer,11,https://github.com/mruby/mruby/pull/3629#issuecomment-408383409,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.",@matz @take-cheeze What's the status about keyword arguments? It was announced that they will arrive with 1.4.0 and 1.4.1 is out already but without them.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/take-cheeze,12,https://github.com/mruby/mruby/pull/3629#issuecomment-408388780,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.",@katzer I don't know the detailed progress but this can't be applied without an incompatible changes to VM instructions so I'm waiting for the new VM instruction sets to come.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/matz,13,https://github.com/mruby/mruby/pull/3629#issuecomment-408400032,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","We are going to make big changes in the next release and name it mruby 2.0!
The keyword arguments will be among those changes.  It is working on my machine.",True,"{'THUMBS_UP': ['https://github.com/thbar', 'https://github.com/longbeardman', 'https://github.com/katzer', 'https://github.com/007lva', 'https://github.com/Hir0', 'https://github.com/ksss', 'https://github.com/blacktm']}"
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/katzer,14,https://github.com/mruby/mruby/pull/3629#issuecomment-408537426,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.",Whats the big picture for mruby 2.0?,True,{'HEART': ['https://github.com/007lva']}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/matz,15,https://github.com/mruby/mruby/pull/3629#issuecomment-408553333,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","The current plan is:

bytecode, instead of word instruction
new mrb binary format
keyword arguments",True,"{'HEART': ['https://github.com/007lva', 'https://github.com/miura1729', 'https://github.com/ksss'], 'HOORAY': ['https://github.com/007lva', 'https://github.com/Hir0'], 'THUMBS_UP': ['https://github.com/katzer']}"
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/katzer,16,https://github.com/mruby/mruby/pull/3629#issuecomment-409157964,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","That sounds all great, however what about better threading support?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/matz,17,https://github.com/mruby/mruby/pull/3629#issuecomment-409411905,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","@katzer Unfortunately there's no plan for the better threading support. Some platforms mruby supports do not provide threading functionality (e.g. small devices without OS). That means mruby cannot support threading by the core, which is needed for the better treading support, in my opinion.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3629,2017-04-22T08:15:18Z,2018-08-01T00:41:55Z,2018-08-01T00:41:55Z,CLOSED,False,1285,325,17,https://github.com/take-cheeze,Add support of keyword arguments.,32,[],https://github.com/mruby/mruby/pull/3629,https://github.com/matz,18,https://github.com/mruby/mruby/pull/3629#issuecomment-409412004,"Thank @keizo042 and @ksss for sending me Ruby Under a Microscope via amazon.co.jp. The book helped a lot to start implementing this.
This PR isn't squashed since its modification is too big and may need more changes.

The parser is mostly ported from CRuby's parse.y. Thanks to CRuby developers.

Though AST generating is completely different since data structure of mruby AST is different from CRuby.


Most test from ruby/spec is passing.
Before Optimize keyword arguments., I've implemented handling keyword arguments only with Hash.

After adding OP_SENDK, it uses Array to handle passed keyword arguments instead. Though the old way is still used to handle arguments with OP_SEND or OP_SENDB opcode.
struct mrb_callinfo size is increased for optimization.
I've re-reduced size of mrb_callinfo by reducing size of acc field since it's always 9-bit integer(GETARG_A). Thanks to @miura1729 for some advice.
And kwds is removed since it's value is from kdict.


Some codedump.c improvements is added to know what is on the stack.

Name block, rest arguments, keyword rest arguments with &, *, ** when there is no specific variable name.
Print local variable names with VM code dumps.


This PR breaks VM compatibilities mostly in 4 opcodes(3 new and 1 changed).

OP_KARG and OP_KDICT's behavior is changed from the previous documentation to make keyword arguments handling easier. See updated documents for detail.
OP_SENDK is added to call method with optimized keyword arguments passing.

Instead of building hash, it creates array of keyword symbol and value pairs terminated with nil object.
In OP_KARG keyword is linear searched instead of mrb_hash_get.


OP_ENTER's arguments specifier's layout has changed. And now maybe it's got a big VM instruction.

In old layout there was no difference between required keyword and keyword with default argument.
Post required arguments is decreased to 4 bit(max: 31 -> 15).
Required keyword arguments and optional keyword arguments is 3 bit (max: 7) each.
After changing it I've noticed that adding another opcode like OP_ENTERK may make VM compatible.




Differences between CRuby:

Hash#fetch(implemented in mruby-hash-ext), Hash#delete, Hash#key? isn't used to handle keyword arguments. So Hash methods overwriting example in Ruby Under a Microscope can't be reproduced in this implementation.


mrb_get_args can only handle keyword arguments with last hash argument.

Should we add another C API equivalent to OP_KARG and OP_KDICT?.","Since the keyword argument is merged in the mruby2-draft branch, I close this issue.",True,{'HOORAY': ['https://github.com/007lva']}
mruby/mruby,https://github.com/mruby/mruby,3630,2017-04-23T00:56:21Z,2017-04-24T00:06:58Z,2017-04-24T00:06:58Z,MERGED,True,70,22,2,https://github.com/nobu,Fix space flag with inf/nan,2,[],https://github.com/mruby/mruby/pull/3630,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3630,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3631,2017-04-23T02:44:15Z,2017-04-24T00:06:12Z,2017-04-26T10:50:58Z,MERGED,True,10,1,2,https://github.com/nobu,Fix embedded document with unterminated terminator,1,[],https://github.com/mruby/mruby/pull/3631,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3631,"skips() is mrb_bool function, should return FALSE at EOF, not EOF.","skips() is mrb_bool function, should return FALSE at EOF, not EOF.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3637,2017-04-24T22:00:36Z,2017-04-25T13:03:50Z,2017-04-25T13:03:50Z,MERGED,True,4,4,1,https://github.com/dabroz,Restore 32-bit OSX builds,1,[],https://github.com/mruby/mruby/pull/3637,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3637,"This reverts commit a1d32af.
I am unsure about specifics of this change, but it seems to break building 32-bit version of mruby on my OSX setup:
Process 46763 launched: './mruby/build/test-32bit/bin/mrbtest' (i386)
mrbtest - Embeddable Ruby Test

Process 46763 stopped
* thread #1: tid = 0xeb10d8, 0x00056500 mrbtest`mrb_class(mrb=0x01900000, v=mrb_value @ 0xbfffe9d4) + 192 at class.h:50, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x4)
    frame #0: 0x00056500 mrbtest`mrb_class(mrb=0x01900000, v=mrb_value @ 0xbfffe9d4) + 192 at class.h:50
   47  	  case MRB_TT_ENV:
   48  	    return NULL;
   49  	  default:
-> 50  	    return mrb_obj_ptr(v)->c;
   51  	  }
   52  	}
   53  	
(lldb) bt
* thread #1: tid = 0xeb10d8, 0x00056500 mrbtest`mrb_class(mrb=0x01900000, v=mrb_value @ 0xbfffe9d4) + 192 at class.h:50, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x4)
  * frame #0: 0x00056500 mrbtest`mrb_class(mrb=0x01900000, v=mrb_value @ 0xbfffe9d4) + 192 at class.h:50
    frame #1: 0x00059176 mrbtest`mrb_vm_exec(mrb=0x01900000, proc=0x028069b8, pc=0x0021fed8) + 6198 at vm.c:1257
    frame #2: 0x000578fc mrbtest`mrb_vm_run(mrb=0x01900000, proc=0x02803940, self=mrb_value @ 0xbffff53c, stack_keep=4) + 188 at vm.c:857
    frame #3: 0x0006074b mrbtest`mrb_top_run(mrb=0x01900000, proc=0x02803940, self=mrb_value @ 0xbffff5ac, stack_keep=0) + 139 at vm.c:2730
    frame #4: 0x00036593 mrbtest`mrb_load_irep_cxt(mrb=0x01900000, bin=""ETIR0003\x17?, c=0x00000000) + 291 at load.c:638
    frame #5: 0x00036805 mrbtest`mrb_load_irep(mrb=0x01900000, bin=""ETIR0003\x17?) + 53 at load.c:644
    frame #6: 0x00004905 mrbtest`GENERATED_TMP_mrb_mruby_sprintf_gem_test(mrb=0x00500190) + 7349 at gem_test.c:309
    frame #7: 0x00002b6f mrbtest`mrbgemtest_init(mrb=0x00500190) + 111 at mrbtest.c:86
    frame #8: 0x00002abc mrbtest`mrb_init_mrbtest(mrb=0x00500190) + 332 at mrbtest.c:38
    frame #9: 0x0000273e mrbtest`main(argc=1, argv=0xbffff7f4) + 206 at driver.c:167
    frame #10: 0x994ba6ad libdyld.dylib`start + 1

You can test the config by trying to build mruby-float4 on OSX (https://github.com/dabroz/mruby-float4.git -> rake test).","This reverts commit a1d32af.
I am unsure about specifics of this change, but it seems to break building 32-bit version of mruby on my OSX setup:
Process 46763 launched: './mruby/build/test-32bit/bin/mrbtest' (i386)
mrbtest - Embeddable Ruby Test

Process 46763 stopped
* thread #1: tid = 0xeb10d8, 0x00056500 mrbtest`mrb_class(mrb=0x01900000, v=mrb_value @ 0xbfffe9d4) + 192 at class.h:50, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x4)
    frame #0: 0x00056500 mrbtest`mrb_class(mrb=0x01900000, v=mrb_value @ 0xbfffe9d4) + 192 at class.h:50
   47  	  case MRB_TT_ENV:
   48  	    return NULL;
   49  	  default:
-> 50  	    return mrb_obj_ptr(v)->c;
   51  	  }
   52  	}
   53  	
(lldb) bt
* thread #1: tid = 0xeb10d8, 0x00056500 mrbtest`mrb_class(mrb=0x01900000, v=mrb_value @ 0xbfffe9d4) + 192 at class.h:50, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x4)
  * frame #0: 0x00056500 mrbtest`mrb_class(mrb=0x01900000, v=mrb_value @ 0xbfffe9d4) + 192 at class.h:50
    frame #1: 0x00059176 mrbtest`mrb_vm_exec(mrb=0x01900000, proc=0x028069b8, pc=0x0021fed8) + 6198 at vm.c:1257
    frame #2: 0x000578fc mrbtest`mrb_vm_run(mrb=0x01900000, proc=0x02803940, self=mrb_value @ 0xbffff53c, stack_keep=4) + 188 at vm.c:857
    frame #3: 0x0006074b mrbtest`mrb_top_run(mrb=0x01900000, proc=0x02803940, self=mrb_value @ 0xbffff5ac, stack_keep=0) + 139 at vm.c:2730
    frame #4: 0x00036593 mrbtest`mrb_load_irep_cxt(mrb=0x01900000, bin=""ETIR0003\x17?, c=0x00000000) + 291 at load.c:638
    frame #5: 0x00036805 mrbtest`mrb_load_irep(mrb=0x01900000, bin=""ETIR0003\x17?) + 53 at load.c:644
    frame #6: 0x00004905 mrbtest`GENERATED_TMP_mrb_mruby_sprintf_gem_test(mrb=0x00500190) + 7349 at gem_test.c:309
    frame #7: 0x00002b6f mrbtest`mrbgemtest_init(mrb=0x00500190) + 111 at mrbtest.c:86
    frame #8: 0x00002abc mrbtest`mrb_init_mrbtest(mrb=0x00500190) + 332 at mrbtest.c:38
    frame #9: 0x0000273e mrbtest`main(argc=1, argv=0xbffff7f4) + 206 at driver.c:167
    frame #10: 0x994ba6ad libdyld.dylib`start + 1

You can test the config by trying to build mruby-float4 on OSX (https://github.com/dabroz/mruby-float4.git -> rake test).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3639,2017-04-25T18:36:15Z,2017-04-25T22:49:15Z,2017-04-25T22:49:15Z,MERGED,True,9,0,1,https://github.com/Asmod4n,Add macOS support to mrb_ro_data_p,1,[],https://github.com/mruby/mruby/pull/3639,https://github.com/Asmod4n,1,https://github.com/mruby/mruby/pull/3639,"This adds macOS support to mrb_ro_data_p, fixes #3636.","This adds macOS support to mrb_ro_data_p, fixes #3636.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3645,2017-04-29T01:36:27Z,2017-04-29T04:10:34Z,2017-04-30T03:54:29Z,MERGED,True,14,36,1,https://github.com/nobu,Sprintf refactor,2,[],https://github.com/mruby/mruby/pull/3645,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3645,Simplify and check an error.,Simplify and check an error.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3647,2017-05-05T05:23:25Z,2017-05-05T12:35:00Z,2017-05-05T12:49:19Z,MERGED,True,2,1,1,https://github.com/ksss,Adjust to the optimum type,1,[],https://github.com/mruby/mruby/pull/3647,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3647,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3649,2017-05-08T14:24:41Z,2017-05-08T22:40:09Z,2017-05-08T23:43:29Z,MERGED,True,14,8,2,https://github.com/ksss,Fix segmentation fault ref: #3648,1,[],https://github.com/mruby/mruby/pull/3649,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3649,"Fix #3648
ruby/spec results
spec/core/string/modulo_spec.rb
before:
Clash on https://github.com/ruby/spec/blob/562cc9a0a8b9d2782474a5bd75c619d6cd285a32/core/string/modulo_spec.rb#L306
after:
1 file, 111 examples, 466 expectations, 37 failures, 16 errors, 0 tagged (It was able to run to the end!)
ref: https://github.com/ruby/ruby/blob/15196f4c6df6859f825cd16c90d8c27fdcf2400b/sprintf.c#L1018-L1027","Fix #3648
ruby/spec results
spec/core/string/modulo_spec.rb
before:
Clash on https://github.com/ruby/spec/blob/562cc9a0a8b9d2782474a5bd75c619d6cd285a32/core/string/modulo_spec.rb#L306
after:
1 file, 111 examples, 466 expectations, 37 failures, 16 errors, 0 tagged (It was able to run to the end!)
ref: https://github.com/ruby/ruby/blob/15196f4c6df6859f825cd16c90d8c27fdcf2400b/sprintf.c#L1018-L1027",True,{}
mruby/mruby,https://github.com/mruby/mruby,3656,2017-05-12T18:46:31Z,2017-05-13T00:37:35Z,2017-05-15T13:31:32Z,MERGED,True,1,1,1,https://github.com/clayton-shopify,Change return back to break in the default case.,1,[],https://github.com/mruby/mruby/pull/3656,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3656,"@matz
Fixes #3642 as suggested by https://hackerone.com/avisaven in #3642 (comment)","@matz
Fixes #3642 as suggested by https://hackerone.com/avisaven in #3642 (comment)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3657,2017-05-13T14:10:43Z,2017-05-13T15:28:32Z,2017-05-13T23:31:50Z,MERGED,True,10,3,1,https://github.com/ksss,Make string embad from shared,1,[],https://github.com/mruby/mruby/pull/3657,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3657,"Problem
I found heap-buffer-overflow pattern. (mruby: 011e0bb )
$ mruby -e '([""a""].join[0].."""").to_s'
=================================================================
==24826==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200001f192 at pc 0x00010ad174ca bp 0x7fff552f3a20 sp 0x7fff552f31d0
WRITE of size 2 at 0x60200001f192 thread T0
    #0 0x10ad174c9 in __asan_memcpy (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4d4c9)
    #1 0x10aa182ea in str_buf_cat string.c:184
    #2 0x10aa176cc in mrb_str_cat string.c:2591
    #3 0x10a9f9e00 in range_to_s range.c:301
    #4 0x10aa741bf in mrb_vm_exec vm.c:1314
    #5 0x10aa6907f in mrb_vm_run vm.c:860
    #6 0x10aa9ccf9 in mrb_top_run vm.c:2733
    #7 0x10ab101c5 in mrb_load_exec parse.y:5780
    #8 0x10ab11037 in mrb_load_nstring_cxt parse.y:5802
    #9 0x10ab11556 in mrb_load_string_cxt parse.y:5814
    #10 0x10a903e81 in main mruby.c:232
    #11 0x7fff92fbb234 in start (libdyld.dylib:x86_64+0x5234)

0x60200001f192 is located 0 bytes to the right of 2-byte region [0x60200001f190,0x60200001f192)
allocated by thread T0 here:
    #0 0x10ad20520 in wrap_realloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x56520)
    #1 0x10a9fce95 in mrb_default_allocf state.c:60
    #2 0x10a97d6a8 in mrb_realloc_simple gc.c:203
    #3 0x10a97ddfe in mrb_realloc gc.c:217
    #4 0x10a97e883 in mrb_malloc gc.c:238
    #5 0x10aa024ef in mrb_str_modify string.c:688
    #6 0x10aa177ff in str_buf_cat string.c:153
    #7 0x10aa176cc in mrb_str_cat string.c:2591
    #8 0x10a9f9e00 in range_to_s range.c:301
    #9 0x10aa741bf in mrb_vm_exec vm.c:1314
    #10 0x10aa6907f in mrb_vm_run vm.c:860
    #11 0x10aa9ccf9 in mrb_top_run vm.c:2733
    #12 0x10ab101c5 in mrb_load_exec parse.y:5780
    #13 0x10ab11037 in mrb_load_nstring_cxt parse.y:5802
    #14 0x10ab11556 in mrb_load_string_cxt parse.y:5814
    #15 0x10a903e81 in main mruby.c:232
    #16 0x7fff92fbb234 in start (libdyld.dylib:x86_64+0x5234)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4d4c9) in __asan_memcpy
Shadow bytes around the buggy address:
  0x1c0400003de0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400003df0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400003e00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400003e10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400003e20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x1c0400003e30: fa fa[02]fa fa fa 02 fa fa fa 00 00 fa fa 03 fa
  0x1c0400003e40: fa fa 00 fa fa fa 00 04 fa fa 00 00 fa fa fd fd
  0x1c0400003e50: fa fa fd fd fa fa 03 fa fa fa fd fd fa fa 03 fa
  0x1c0400003e60: fa fa 05 fa fa fa 00 fa fa fa 00 fa fa fa 00 00
  0x1c0400003e70: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa fd fa
  0x1c0400003e80: fa fa 06 fa fa fa 00 fa fa fa 00 00 fa fa 06 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==24826==ABORTING
[2]    24826 abort      mruby -e '([""a""].join[0].."""").to_s'

lldb
frame #5: 0x00000001001162eb mruby`str_buf_cat(mrb=0x000061400000a440, s=0x000062f000003130, ptr=""..."", len=2) at string.c:184
   181 	  if (off != -1) {
   182 	      ptr = RSTR_PTR(s) + off;
   183 	  }
-> 184 	  memcpy(RSTR_PTR(s) + RSTR_LEN(s), ptr, len);
   185 	  mrb_assert_int_fit(size_t, total, mrb_int, MRB_INT_MAX);
   186 	  RSTR_SET_LEN(s, total);
   187 	  RSTR_PTR(s)[total] = '\0';   /* sentinel */
(lldb) p *s
(RString) $1 = {
  tt = MRB_TT_STRING
  color = 1
  flags = 0
  c = 0x000062f00000a3f0
  gcnext = 0x0000000000000000
  as = {
    heap = {
      len = 1
      aux = {
        capa = 1
        shared = 0x0000603000000001
      }
      ptr = 0x000060200001f170 ""a""
    }
    ary = {
      [0] = '\x01'
      [1] = '\0'
      [2] = '\0'
      [3] = '\0'
      [4] = '\0'
      [5] = '\0'
      [6] = '\0'
      [7] = '\0'
      [8] = '\x01'
      [9] = '\0'
      [10] = '\0'
      [11] = '\0'
      [12] = '0'
      [13] = '`'
      [14] = '\0'
      [15] = '\0'
      [16] = 'p'
      [17] = '�'
      [18] = '\x01'
      [19] = '\0'
      [20] = ' '
      [21] = '`'
      [22] = '\0'
      [23] = '\0'
    }
  }
}

The capacity of s is 1.
But it will copy memory more than it's capacity.
Proposal
Make string embed if small and shared.
This technique not only fixes the problem but also reduces malloc/free at certain conditions.
Concern

I think, it should remove maybe  
  
    
      mruby/src/string.c
    
    
        Lines 159 to 160
      in
      171e732
    
  
  
    

        
          
           if (capa <= RSTRING_EMBED_LEN_MAX) 
        

        
          
             capa = RSTRING_EMBED_LEN_MAX+1; 
        
    
  


I can't reproduce this block 
  
    
      mruby/src/string.c
    
    
        Lines 677 to 680
      in
      171e732
    
  
  
    

        
          
           s->as.heap.ptr = shared->ptr; 
        

        
          
           s->as.heap.aux.capa = shared->len; 
        

        
          
           RSTR_PTR(s)[s->as.heap.len] = '\0'; 
        

        
          
           mrb_free(mrb, shared); 
        
    
  



ref: #3651","Problem
I found heap-buffer-overflow pattern. (mruby: 011e0bb )
$ mruby -e '([""a""].join[0].."""").to_s'
=================================================================
==24826==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200001f192 at pc 0x00010ad174ca bp 0x7fff552f3a20 sp 0x7fff552f31d0
WRITE of size 2 at 0x60200001f192 thread T0
    #0 0x10ad174c9 in __asan_memcpy (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4d4c9)
    #1 0x10aa182ea in str_buf_cat string.c:184
    #2 0x10aa176cc in mrb_str_cat string.c:2591
    #3 0x10a9f9e00 in range_to_s range.c:301
    #4 0x10aa741bf in mrb_vm_exec vm.c:1314
    #5 0x10aa6907f in mrb_vm_run vm.c:860
    #6 0x10aa9ccf9 in mrb_top_run vm.c:2733
    #7 0x10ab101c5 in mrb_load_exec parse.y:5780
    #8 0x10ab11037 in mrb_load_nstring_cxt parse.y:5802
    #9 0x10ab11556 in mrb_load_string_cxt parse.y:5814
    #10 0x10a903e81 in main mruby.c:232
    #11 0x7fff92fbb234 in start (libdyld.dylib:x86_64+0x5234)

0x60200001f192 is located 0 bytes to the right of 2-byte region [0x60200001f190,0x60200001f192)
allocated by thread T0 here:
    #0 0x10ad20520 in wrap_realloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x56520)
    #1 0x10a9fce95 in mrb_default_allocf state.c:60
    #2 0x10a97d6a8 in mrb_realloc_simple gc.c:203
    #3 0x10a97ddfe in mrb_realloc gc.c:217
    #4 0x10a97e883 in mrb_malloc gc.c:238
    #5 0x10aa024ef in mrb_str_modify string.c:688
    #6 0x10aa177ff in str_buf_cat string.c:153
    #7 0x10aa176cc in mrb_str_cat string.c:2591
    #8 0x10a9f9e00 in range_to_s range.c:301
    #9 0x10aa741bf in mrb_vm_exec vm.c:1314
    #10 0x10aa6907f in mrb_vm_run vm.c:860
    #11 0x10aa9ccf9 in mrb_top_run vm.c:2733
    #12 0x10ab101c5 in mrb_load_exec parse.y:5780
    #13 0x10ab11037 in mrb_load_nstring_cxt parse.y:5802
    #14 0x10ab11556 in mrb_load_string_cxt parse.y:5814
    #15 0x10a903e81 in main mruby.c:232
    #16 0x7fff92fbb234 in start (libdyld.dylib:x86_64+0x5234)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4d4c9) in __asan_memcpy
Shadow bytes around the buggy address:
  0x1c0400003de0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400003df0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400003e00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400003e10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400003e20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x1c0400003e30: fa fa[02]fa fa fa 02 fa fa fa 00 00 fa fa 03 fa
  0x1c0400003e40: fa fa 00 fa fa fa 00 04 fa fa 00 00 fa fa fd fd
  0x1c0400003e50: fa fa fd fd fa fa 03 fa fa fa fd fd fa fa 03 fa
  0x1c0400003e60: fa fa 05 fa fa fa 00 fa fa fa 00 fa fa fa 00 00
  0x1c0400003e70: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa fd fa
  0x1c0400003e80: fa fa 06 fa fa fa 00 fa fa fa 00 00 fa fa 06 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==24826==ABORTING
[2]    24826 abort      mruby -e '([""a""].join[0].."""").to_s'

lldb
frame #5: 0x00000001001162eb mruby`str_buf_cat(mrb=0x000061400000a440, s=0x000062f000003130, ptr=""..."", len=2) at string.c:184
   181 	  if (off != -1) {
   182 	      ptr = RSTR_PTR(s) + off;
   183 	  }
-> 184 	  memcpy(RSTR_PTR(s) + RSTR_LEN(s), ptr, len);
   185 	  mrb_assert_int_fit(size_t, total, mrb_int, MRB_INT_MAX);
   186 	  RSTR_SET_LEN(s, total);
   187 	  RSTR_PTR(s)[total] = '\0';   /* sentinel */
(lldb) p *s
(RString) $1 = {
  tt = MRB_TT_STRING
  color = 1
  flags = 0
  c = 0x000062f00000a3f0
  gcnext = 0x0000000000000000
  as = {
    heap = {
      len = 1
      aux = {
        capa = 1
        shared = 0x0000603000000001
      }
      ptr = 0x000060200001f170 ""a""
    }
    ary = {
      [0] = '\x01'
      [1] = '\0'
      [2] = '\0'
      [3] = '\0'
      [4] = '\0'
      [5] = '\0'
      [6] = '\0'
      [7] = '\0'
      [8] = '\x01'
      [9] = '\0'
      [10] = '\0'
      [11] = '\0'
      [12] = '0'
      [13] = '`'
      [14] = '\0'
      [15] = '\0'
      [16] = 'p'
      [17] = '�'
      [18] = '\x01'
      [19] = '\0'
      [20] = ' '
      [21] = '`'
      [22] = '\0'
      [23] = '\0'
    }
  }
}

The capacity of s is 1.
But it will copy memory more than it's capacity.
Proposal
Make string embed if small and shared.
This technique not only fixes the problem but also reduces malloc/free at certain conditions.
Concern

I think, it should remove maybe  
  
    
      mruby/src/string.c
    
    
        Lines 159 to 160
      in
      171e732
    
  
  
    

        
          
           if (capa <= RSTRING_EMBED_LEN_MAX) 
        

        
          
             capa = RSTRING_EMBED_LEN_MAX+1; 
        
    
  


I can't reproduce this block 
  
    
      mruby/src/string.c
    
    
        Lines 677 to 680
      in
      171e732
    
  
  
    

        
          
           s->as.heap.ptr = shared->ptr; 
        

        
          
           s->as.heap.aux.capa = shared->len; 
        

        
          
           RSTR_PTR(s)[s->as.heap.len] = '\0'; 
        

        
          
           mrb_free(mrb, shared); 
        
    
  



ref: #3651",True,{}
mruby/mruby,https://github.com/mruby/mruby,3659,2017-05-16T00:50:40Z,2017-05-16T01:04:20Z,2017-05-16T01:04:20Z,MERGED,True,1,1,1,https://github.com/craiglrock,Avoid call to_s during backtrace traversal,1,[],https://github.com/mruby/mruby/pull/3659,https://github.com/craiglrock,1,https://github.com/mruby/mruby/pull/3659,"Calling mrb_format(mrb, ""%S:%S"", str, mrb_fixnum_value(loc->lineno)) with a fixnum results in the vm calling to_s to convert the fixnum to a string. This produces a bug where mrb_callinfo changes during retrieval of backtrace.
To fix this, the fixnum can be converted to a string before being passed to mrb_format.","Calling mrb_format(mrb, ""%S:%S"", str, mrb_fixnum_value(loc->lineno)) with a fixnum results in the vm calling to_s to convert the fixnum to a string. This produces a bug where mrb_callinfo changes during retrieval of backtrace.
To fix this, the fixnum can be converted to a string before being passed to mrb_format.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3661,2017-05-21T01:34:13Z,2017-05-21T13:53:02Z,2017-05-21T13:58:15Z,MERGED,True,18,7,2,https://github.com/ksss,String#concat: Try to convert when not string,1,[],https://github.com/mruby/mruby/pull/3661,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3661,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3701,2017-06-14T08:27:47Z,2017-06-16T02:51:49Z,2017-06-16T03:18:56Z,MERGED,True,136,44,4,https://github.com/ksss,Reimplement String#upto,3,[],https://github.com/mruby/mruby/pull/3701,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3701,"The documented code didn't working as expected.
""9"".upto(""11"").to_a   #=> []
""25"".upto(""5"").to_a   #=> [""25""]
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
I've fixed like this.
""9"".upto(""11"").to_a   #=> [""9"", ""10"", ""11""]
""25"".upto(""5"").to_a   #=> []
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
The ruby/spec for String#upto passed all without Enumerator#size (using by mruby-spec)
https://github.com/ruby/spec/blob/97fe8c7cfd7a7e4833ae2edab4df21e3ea6bc093/core/string/upto_spec.rb
before
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto doesn't call block with self even if self is less than stop but stop length is less than self length FAILED
Expected [""25""] to equal []
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:20:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

2)
String#upto tries to convert other to string using to_str ERROR
TypeError: non float value
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrbgems/mruby-string-ext/mrblib/string.rb:341:in upto
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:51:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

3)
String#upto returns non-alphabetic characters in the ASCII range for single letters FAILED
Expected [""9""] to equal [""9"", "":"", "";"", ""<"", ""="", "">"", ""?"", ""@"", ""A""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:66:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

4)
String#upto on sequence of numbers calls the block as Integer#upto FAILED
Expected [] to equal [""8"", ""9"", ""10"", ""11""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:79:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

5)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7fa215023510>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      3     F      2     E

Finished in 0.012235 seconds

1 file, 15 examples, 16 expectations, 3 failures, 2 errors, 0 tagged
make: *** [run] Error 1

after
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7ff048057300>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      0     F      1     E

Finished in 0.007707 seconds

1 file, 15 examples, 19 expectations, 0 failures, 1 error, 0 tagged
make: *** [run] Error 1","The documented code didn't working as expected.
""9"".upto(""11"").to_a   #=> []
""25"".upto(""5"").to_a   #=> [""25""]
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
I've fixed like this.
""9"".upto(""11"").to_a   #=> [""9"", ""10"", ""11""]
""25"".upto(""5"").to_a   #=> []
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
The ruby/spec for String#upto passed all without Enumerator#size (using by mruby-spec)
https://github.com/ruby/spec/blob/97fe8c7cfd7a7e4833ae2edab4df21e3ea6bc093/core/string/upto_spec.rb
before
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto doesn't call block with self even if self is less than stop but stop length is less than self length FAILED
Expected [""25""] to equal []
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:20:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

2)
String#upto tries to convert other to string using to_str ERROR
TypeError: non float value
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrbgems/mruby-string-ext/mrblib/string.rb:341:in upto
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:51:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

3)
String#upto returns non-alphabetic characters in the ASCII range for single letters FAILED
Expected [""9""] to equal [""9"", "":"", "";"", ""<"", ""="", "">"", ""?"", ""@"", ""A""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:66:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

4)
String#upto on sequence of numbers calls the block as Integer#upto FAILED
Expected [] to equal [""8"", ""9"", ""10"", ""11""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:79:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

5)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7fa215023510>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      3     F      2     E

Finished in 0.012235 seconds

1 file, 15 examples, 16 expectations, 3 failures, 2 errors, 0 tagged
make: *** [run] Error 1

after
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7ff048057300>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      0     F      1     E

Finished in 0.007707 seconds

1 file, 15 examples, 19 expectations, 0 failures, 1 error, 0 tagged
make: *** [run] Error 1",True,{}
mruby/mruby,https://github.com/mruby/mruby,3701,2017-06-14T08:27:47Z,2017-06-16T02:51:49Z,2017-06-16T03:18:56Z,MERGED,True,136,44,4,https://github.com/ksss,Reimplement String#upto,3,[],https://github.com/mruby/mruby/pull/3701,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3701#issuecomment-308422578,"The documented code didn't working as expected.
""9"".upto(""11"").to_a   #=> []
""25"".upto(""5"").to_a   #=> [""25""]
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
I've fixed like this.
""9"".upto(""11"").to_a   #=> [""9"", ""10"", ""11""]
""25"".upto(""5"").to_a   #=> []
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
The ruby/spec for String#upto passed all without Enumerator#size (using by mruby-spec)
https://github.com/ruby/spec/blob/97fe8c7cfd7a7e4833ae2edab4df21e3ea6bc093/core/string/upto_spec.rb
before
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto doesn't call block with self even if self is less than stop but stop length is less than self length FAILED
Expected [""25""] to equal []
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:20:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

2)
String#upto tries to convert other to string using to_str ERROR
TypeError: non float value
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrbgems/mruby-string-ext/mrblib/string.rb:341:in upto
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:51:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

3)
String#upto returns non-alphabetic characters in the ASCII range for single letters FAILED
Expected [""9""] to equal [""9"", "":"", "";"", ""<"", ""="", "">"", ""?"", ""@"", ""A""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:66:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

4)
String#upto on sequence of numbers calls the block as Integer#upto FAILED
Expected [] to equal [""8"", ""9"", ""10"", ""11""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:79:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

5)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7fa215023510>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      3     F      2     E

Finished in 0.012235 seconds

1 file, 15 examples, 16 expectations, 3 failures, 2 errors, 0 tagged
make: *** [run] Error 1

after
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7ff048057300>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      0     F      1     E

Finished in 0.007707 seconds

1 file, 15 examples, 19 expectations, 0 failures, 1 error, 0 tagged
make: *** [run] Error 1","Thank you. But under the current implementation, we want to avoid using mrb_yield from C code. Using break within a block may cause unexpected result.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3701,2017-06-14T08:27:47Z,2017-06-16T02:51:49Z,2017-06-16T03:18:56Z,MERGED,True,136,44,4,https://github.com/ksss,Reimplement String#upto,3,[],https://github.com/mruby/mruby/pull/3701,https://github.com/ksss,3,https://github.com/mruby/mruby/pull/3701#issuecomment-308436631,"The documented code didn't working as expected.
""9"".upto(""11"").to_a   #=> []
""25"".upto(""5"").to_a   #=> [""25""]
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
I've fixed like this.
""9"".upto(""11"").to_a   #=> [""9"", ""10"", ""11""]
""25"".upto(""5"").to_a   #=> []
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
The ruby/spec for String#upto passed all without Enumerator#size (using by mruby-spec)
https://github.com/ruby/spec/blob/97fe8c7cfd7a7e4833ae2edab4df21e3ea6bc093/core/string/upto_spec.rb
before
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto doesn't call block with self even if self is less than stop but stop length is less than self length FAILED
Expected [""25""] to equal []
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:20:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

2)
String#upto tries to convert other to string using to_str ERROR
TypeError: non float value
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrbgems/mruby-string-ext/mrblib/string.rb:341:in upto
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:51:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

3)
String#upto returns non-alphabetic characters in the ASCII range for single letters FAILED
Expected [""9""] to equal [""9"", "":"", "";"", ""<"", ""="", "">"", ""?"", ""@"", ""A""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:66:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

4)
String#upto on sequence of numbers calls the block as Integer#upto FAILED
Expected [] to equal [""8"", ""9"", ""10"", ""11""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:79:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

5)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7fa215023510>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      3     F      2     E

Finished in 0.012235 seconds

1 file, 15 examples, 16 expectations, 3 failures, 2 errors, 0 tagged
make: *** [run] Error 1

after
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7ff048057300>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      0     F      1     E

Finished in 0.007707 seconds

1 file, 15 examples, 19 expectations, 0 failures, 1 error, 0 tagged
make: *** [run] Error 1","@matz Should I write in Ruby?
It's somewhat inefficient.
class String
  def upto(other_str, excl=false, &block)
    return to_enum :upto, other_str, excl unless block
    unless other_str = String.try_convert(other_str)
      raise TypeError, ""no implicit conversion of #{other_str.class} into String""
    end

    # single character
    if bytesize == 1 && other_str.bytesize == 1
      c = bytes[0]
      e = other_str.bytes[0]
      return self if c > e || excl && c == e
      while 1
        block.call(c.chr)
        break if !excl && c == e
        c += 1
        break if excl && c == e
      end

      return self
    end

    # both edges are all digits
    if self != ""0"" && other_str != ""0"" && (b = self.to_i) > 0 && (e = other_str.to_i) > 0
      min_width = length
      max_width = other_str.length
      while b <= e
        break if excl && b == e
        bs = b.to_s
        bs = ""#{""0"" * (min_width - bs.length)}#{bs}"" if min_width > bs.length
        block.call(bs)
        b += 1
      end

      return self
    end

    # normal case
    n = self <=> other_str
    return self if n > 0 || (excl && n == 0)
    after_end = other_str.succ
    current = dup
    while current != after_end
      nxt = nil
      nxt = current.succ if excl || current != other_str
      block.call(current)
      break if nxt.nil?
      current = nxt
      break if excl && current == other_str
      break if current.length > other_str.length || current.empty?
    end

    self
  end
end
t.rb
t = Time.now
""000001"".upto(""100000"").each {}
p Time.now - t

t = Time.now
""aaa"".upto(""zzz"").each {}
p Time.now - t
C implementation
$ mruby t.rb
0.112704
0.056333

Ruby implementation
$ mruby t.rb
0.416623
0.121773",True,{}
mruby/mruby,https://github.com/mruby/mruby,3701,2017-06-14T08:27:47Z,2017-06-16T02:51:49Z,2017-06-16T03:18:56Z,MERGED,True,136,44,4,https://github.com/ksss,Reimplement String#upto,3,[],https://github.com/mruby/mruby/pull/3701,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3701#issuecomment-308458897,"The documented code didn't working as expected.
""9"".upto(""11"").to_a   #=> []
""25"".upto(""5"").to_a   #=> [""25""]
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
I've fixed like this.
""9"".upto(""11"").to_a   #=> [""9"", ""10"", ""11""]
""25"".upto(""5"").to_a   #=> []
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
The ruby/spec for String#upto passed all without Enumerator#size (using by mruby-spec)
https://github.com/ruby/spec/blob/97fe8c7cfd7a7e4833ae2edab4df21e3ea6bc093/core/string/upto_spec.rb
before
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto doesn't call block with self even if self is less than stop but stop length is less than self length FAILED
Expected [""25""] to equal []
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:20:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

2)
String#upto tries to convert other to string using to_str ERROR
TypeError: non float value
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrbgems/mruby-string-ext/mrblib/string.rb:341:in upto
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:51:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

3)
String#upto returns non-alphabetic characters in the ASCII range for single letters FAILED
Expected [""9""] to equal [""9"", "":"", "";"", ""<"", ""="", "">"", ""?"", ""@"", ""A""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:66:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

4)
String#upto on sequence of numbers calls the block as Integer#upto FAILED
Expected [] to equal [""8"", ""9"", ""10"", ""11""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:79:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

5)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7fa215023510>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      3     F      2     E

Finished in 0.012235 seconds

1 file, 15 examples, 16 expectations, 3 failures, 2 errors, 0 tagged
make: *** [run] Error 1

after
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7ff048057300>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      0     F      1     E

Finished in 0.007707 seconds

1 file, 15 examples, 19 expectations, 0 failures, 1 error, 0 tagged
make: *** [run] Error 1","I am trying to solve the issue, but at the moment, I don't recommend to use mrb_yield in your C code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3701,2017-06-14T08:27:47Z,2017-06-16T02:51:49Z,2017-06-16T03:18:56Z,MERGED,True,136,44,4,https://github.com/ksss,Reimplement String#upto,3,[],https://github.com/mruby/mruby/pull/3701,https://github.com/matz,5,https://github.com/mruby/mruby/pull/3701#issuecomment-308459217,"The documented code didn't working as expected.
""9"".upto(""11"").to_a   #=> []
""25"".upto(""5"").to_a   #=> [""25""]
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
I've fixed like this.
""9"".upto(""11"").to_a   #=> [""9"", ""10"", ""11""]
""25"".upto(""5"").to_a   #=> []
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
The ruby/spec for String#upto passed all without Enumerator#size (using by mruby-spec)
https://github.com/ruby/spec/blob/97fe8c7cfd7a7e4833ae2edab4df21e3ea6bc093/core/string/upto_spec.rb
before
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto doesn't call block with self even if self is less than stop but stop length is less than self length FAILED
Expected [""25""] to equal []
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:20:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

2)
String#upto tries to convert other to string using to_str ERROR
TypeError: non float value
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrbgems/mruby-string-ext/mrblib/string.rb:341:in upto
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:51:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

3)
String#upto returns non-alphabetic characters in the ASCII range for single letters FAILED
Expected [""9""] to equal [""9"", "":"", "";"", ""<"", ""="", "">"", ""?"", ""@"", ""A""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:66:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

4)
String#upto on sequence of numbers calls the block as Integer#upto FAILED
Expected [] to equal [""8"", ""9"", ""10"", ""11""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:79:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

5)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7fa215023510>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      3     F      2     E

Finished in 0.012235 seconds

1 file, 15 examples, 16 expectations, 3 failures, 2 errors, 0 tagged
make: *** [run] Error 1

after
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7ff048057300>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      0     F      1     E

Finished in 0.007707 seconds

1 file, 15 examples, 19 expectations, 0 failures, 1 error, 0 tagged
make: *** [run] Error 1",I am talking about #3359,True,{}
mruby/mruby,https://github.com/mruby/mruby,3701,2017-06-14T08:27:47Z,2017-06-16T02:51:49Z,2017-06-16T03:18:56Z,MERGED,True,136,44,4,https://github.com/ksss,Reimplement String#upto,3,[],https://github.com/mruby/mruby/pull/3701,https://github.com/ksss,6,https://github.com/mruby/mruby/pull/3701#issuecomment-308922268,"The documented code didn't working as expected.
""9"".upto(""11"").to_a   #=> []
""25"".upto(""5"").to_a   #=> [""25""]
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
I've fixed like this.
""9"".upto(""11"").to_a   #=> [""9"", ""10"", ""11""]
""25"".upto(""5"").to_a   #=> []
""07"".upto(""11"").to_a  #=> [""07"", ""08"", ""09"", ""10"", ""11""]
The ruby/spec for String#upto passed all without Enumerator#size (using by mruby-spec)
https://github.com/ruby/spec/blob/97fe8c7cfd7a7e4833ae2edab4df21e3ea6bc093/core/string/upto_spec.rb
before
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto doesn't call block with self even if self is less than stop but stop length is less than self length FAILED
Expected [""25""] to equal []
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:20:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

2)
String#upto tries to convert other to string using to_str ERROR
TypeError: non float value
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrbgems/mruby-string-ext/mrblib/string.rb:341:in upto
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:51:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

3)
String#upto returns non-alphabetic characters in the ASCII range for single letters FAILED
Expected [""9""] to equal [""9"", "":"", "";"", ""<"", ""="", "">"", ""?"", ""@"", ""A""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:66:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

4)
String#upto on sequence of numbers calls the block as Integer#upto FAILED
Expected [] to equal [""8"", ""9"", ""10"", ""11""]
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:79:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each

5)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7fa215023510>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      3     F      2     E

Finished in 0.012235 seconds

1 file, 15 examples, 16 expectations, 3 failures, 2 errors, 0 tagged
make: *** [run] Error 1

after
$ make TESTS=spec/core/string/upto
...
mruby 1.2.0 (2015-11-17)

1)
String#upto when no block is given returned Enumerator size should return nil ERROR
NoMethodError: undefined method 'size' for #<Enumerator:0x7ff048057300>
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:93:in protect
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/enum.rb:26:in all?
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/numeric.rb:77:in times
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
/Users/ksss/src/github.com/ksss/mruby-spec/spec/core/string/upto_spec.rb:98
/Users/ksss/src/github.com/ksss/mruby-spec/mruby/mrblib/array.rb:17:in each
[- | ==================100%================== | 00:00:00]      0     F      1     E

Finished in 0.007707 seconds

1 file, 15 examples, 19 expectations, 0 failures, 1 error, 0 tagged
make: *** [run] Error 1",Thank you so much!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3706,2017-06-16T15:07:39Z,2017-06-16T23:40:58Z,2017-06-16T23:40:58Z,MERGED,True,1,1,1,https://github.com/MasahikoSawada,Fix a typo in gc.c.,1,[],https://github.com/mruby/mruby/pull/3706,https://github.com/MasahikoSawada,1,https://github.com/mruby/mruby/pull/3706,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3713,2017-06-19T18:27:45Z,2017-06-20T00:16:39Z,2017-06-20T00:16:39Z,MERGED,True,1,1,1,https://github.com/Asmod4n,Save gc_arena after buffer got allocated,1,[],https://github.com/mruby/mruby/pull/3713,https://github.com/Asmod4n,1,https://github.com/mruby/mruby/pull/3713,"Latest fix was freeing the buffer while it was still in use.
Fixes #3712","Latest fix was freeing the buffer while it was still in use.
Fixes #3712",True,{}
mruby/mruby,https://github.com/mruby/mruby,3713,2017-06-19T18:27:45Z,2017-06-20T00:16:39Z,2017-06-20T00:16:39Z,MERGED,True,1,1,1,https://github.com/Asmod4n,Save gc_arena after buffer got allocated,1,[],https://github.com/mruby/mruby/pull/3713,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3713#issuecomment-309608220,"Latest fix was freeing the buffer while it was still in use.
Fixes #3712",Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3718,2017-06-20T03:52:33Z,2017-06-20T07:18:08Z,2017-06-20T07:18:08Z,MERGED,True,4,0,1,https://github.com/miura1729,#3711 fix,1,[],https://github.com/mruby/mruby/pull/3718,https://github.com/miura1729,1,https://github.com/mruby/mruby/pull/3718,May stack extend in ensure block. So stk update if stack extend.,May stack extend in ensure block. So stk update if stack extend.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3726,2017-07-04T00:46:41Z,2017-07-04T06:46:39Z,2017-07-04T06:46:39Z,MERGED,True,16,16,5,https://github.com/mimaki,mruby-1.3.0,2,[],https://github.com/mruby/mruby/pull/3726,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3726,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3726,2017-07-04T00:46:41Z,2017-07-04T06:46:39Z,2017-07-04T06:46:39Z,MERGED,True,16,16,5,https://github.com/mimaki,mruby-1.3.0,2,[],https://github.com/mruby/mruby/pull/3726,https://github.com/zzak,2,https://github.com/mruby/mruby/pull/3726#issuecomment-312769184,,LGTM,True,{}
mruby/mruby,https://github.com/mruby/mruby,3726,2017-07-04T00:46:41Z,2017-07-04T06:46:39Z,2017-07-04T06:46:39Z,MERGED,True,16,16,5,https://github.com/mimaki,mruby-1.3.0,2,[],https://github.com/mruby/mruby/pull/3726,https://github.com/zzak,3,https://github.com/mruby/mruby/pull/3726#issuecomment-312770363,,mruby/mruby.github.io#52,True,{}
mruby/mruby,https://github.com/mruby/mruby,3739,2017-07-09T08:55:39Z,2017-07-09T10:58:11Z,2017-07-09T11:20:12Z,MERGED,True,13,3,2,https://github.com/ksss,Should only check frozen fix #3737,3,[],https://github.com/mruby/mruby/pull/3739,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3739,"before ( ce6c056 )
$ time ./build/host/bin/mruby benchmark/bm_so_lists.rb
./build/host/bin/mruby benchmark/bm_so_lists.rb  52.75s user 0.75s system 97% cpu 54.662 total

after
$ time ./build/host/bin/mruby benchmark/bm_so_lists.rb
./build/host/bin/mruby benchmark/bm_so_lists.rb  8.52s user 0.18s system 99% cpu 8.733 total","before ( ce6c056 )
$ time ./build/host/bin/mruby benchmark/bm_so_lists.rb
./build/host/bin/mruby benchmark/bm_so_lists.rb  52.75s user 0.75s system 97% cpu 54.662 total

after
$ time ./build/host/bin/mruby benchmark/bm_so_lists.rb
./build/host/bin/mruby benchmark/bm_so_lists.rb  8.52s user 0.18s system 99% cpu 8.733 total",True,{}
mruby/mruby,https://github.com/mruby/mruby,3740,2017-07-11T10:57:48Z,2017-07-11T23:24:03Z,2017-07-12T08:56:28Z,MERGED,True,2,2,1,https://github.com/christopheraue,fixed printing failed assertions,1,[],https://github.com/mruby/mruby/pull/3740,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3740,The msg outside the block was not modified since it was shadowed by msg inside the block.,The msg outside the block was not modified since it was shadowed by msg inside the block.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3740,2017-07-11T10:57:48Z,2017-07-11T23:24:03Z,2017-07-12T08:56:28Z,MERGED,True,2,2,1,https://github.com/christopheraue,fixed printing failed assertions,1,[],https://github.com/mruby/mruby/pull/3740,https://github.com/christopheraue,2,https://github.com/mruby/mruby/pull/3740#issuecomment-314412255,The msg outside the block was not modified since it was shadowed by msg inside the block.,"Well, how this patch could break AppVeyor is beyond me...",True,{}
mruby/mruby,https://github.com/mruby/mruby,3740,2017-07-11T10:57:48Z,2017-07-11T23:24:03Z,2017-07-12T08:56:28Z,MERGED,True,2,2,1,https://github.com/christopheraue,fixed printing failed assertions,1,[],https://github.com/mruby/mruby/pull/3740,https://github.com/bovi,3,https://github.com/mruby/mruby/pull/3740#issuecomment-314536814,The msg outside the block was not modified since it was shadowed by msg inside the block.,@christopheraue I think this is a bug of AppVeyor. I can't even find the build (https://ci.appveyor.com/project/matz/mruby)...,True,{}
mruby/mruby,https://github.com/mruby/mruby,3742,2017-07-16T20:36:51Z,2017-07-17T00:16:26Z,2017-07-17T09:58:24Z,MERGED,True,61,0,1,https://github.com/christopheraue,added basic tests for while/until/break/next,1,[],https://github.com/mruby/mruby/pull/3742,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3742,re #3735,re #3735,True,{}
mruby/mruby,https://github.com/mruby/mruby,3743,2017-07-16T20:38:09Z,2017-07-17T00:17:25Z,2017-07-17T09:55:22Z,MERGED,True,6,0,1,https://github.com/christopheraue,added tests for #3736,1,[],https://github.com/mruby/mruby/pull/3743,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3743,re #3736,re #3736,True,{}
mruby/mruby,https://github.com/mruby/mruby,3746,2017-07-18T18:56:54Z,2017-07-19T00:08:11Z,2017-07-19T08:39:14Z,MERGED,True,17,0,2,https://github.com/christopheraue,Implemented Module#singleton_class?,1,[],https://github.com/mruby/mruby/pull/3746,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3746,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3747,2017-07-18T20:42:34Z,2017-07-19T00:05:27Z,2017-07-19T08:40:55Z,MERGED,True,43,8,3,https://github.com/christopheraue,Fixed Module#to_s and #name for #const_set modules,1,[],https://github.com/mruby/mruby/pull/3747,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3747,"Placing a module inside a namespace with Module#const_set was not factored in when calling Module#to_s:
module Namespace
  const_set :Mod, Module.new
end
Namespace::Mod.to_s # => ""#<Module:0x155cdf0>
This patch fixes it, so that:
Namespace::Mod.to_s # => ""Namespace::Mod""","Placing a module inside a namespace with Module#const_set was not factored in when calling Module#to_s:
module Namespace
  const_set :Mod, Module.new
end
Namespace::Mod.to_s # => ""#<Module:0x155cdf0>
This patch fixes it, so that:
Namespace::Mod.to_s # => ""Namespace::Mod""",True,{}
mruby/mruby,https://github.com/mruby/mruby,3748,2017-07-19T16:08:15Z,,2021-06-03T07:47:52Z,OPEN,False,101,2,12,https://github.com/palkan,Specify Ruby files order through magic comments,2,[],https://github.com/mruby/mruby/pull/3748,https://github.com/palkan,1,https://github.com/mruby/mruby/pull/3748,"Disclaimer
I marked this PR as Experimental to emphasize that it's the main purpose is to discuss the problem (or this is not a problem at all?).
The problem
Currently, Ruby files are loaded and compiled in lexicographical order. Thus we have to use such tricks as using file prefixes just to control this (even in mruby core). And that's an example from my lib (which inspired me to write this).
So, there is no way (other then naming hacks) to specify dependencies (usually we need it when using modules with shared logic).
The Idea
I was thinking of how to tell the builder to compile Ruby files in the specified order and came up with the following idea: let's use magic comments to declare dependencies:
# require: utils/logging

class Base
  include Utils::Logging
  ...
end
Looks like Sprockets 😏
Pros: easy to use/read, backward-compatible.
Cons: that differs from Ruby.
Other ideas
Another option I see is to specify the build order hints somewhere in config:
# Load specified files first, then everything else
conf.compile_first = %w(utils/**/*.rb zzz.rb)
Pros: no language changes.
Cons: harder to maintain (maybe, that's OK for mRuby libs, 'cause they're usually not too big).","Disclaimer
I marked this PR as Experimental to emphasize that it's the main purpose is to discuss the problem (or this is not a problem at all?).
The problem
Currently, Ruby files are loaded and compiled in lexicographical order. Thus we have to use such tricks as using file prefixes just to control this (even in mruby core). And that's an example from my lib (which inspired me to write this).
So, there is no way (other then naming hacks) to specify dependencies (usually we need it when using modules with shared logic).
The Idea
I was thinking of how to tell the builder to compile Ruby files in the specified order and came up with the following idea: let's use magic comments to declare dependencies:
# require: utils/logging

class Base
  include Utils::Logging
  ...
end
Looks like Sprockets 😏
Pros: easy to use/read, backward-compatible.
Cons: that differs from Ruby.
Other ideas
Another option I see is to specify the build order hints somewhere in config:
# Load specified files first, then everything else
conf.compile_first = %w(utils/**/*.rb zzz.rb)
Pros: no language changes.
Cons: harder to maintain (maybe, that's OK for mRuby libs, 'cause they're usually not too big).",True,"{'THUMBS_UP': ['https://github.com/bovi', 'https://github.com/sponomarev', 'https://github.com/jethrodaniel']}"
mruby/mruby,https://github.com/mruby/mruby,3748,2017-07-19T16:08:15Z,,2021-06-03T07:47:52Z,OPEN,False,101,2,12,https://github.com/palkan,Specify Ruby files order through magic comments,2,[],https://github.com/mruby/mruby/pull/3748,https://github.com/bovi,2,https://github.com/mruby/mruby/pull/3748#issuecomment-316440532,"Disclaimer
I marked this PR as Experimental to emphasize that it's the main purpose is to discuss the problem (or this is not a problem at all?).
The problem
Currently, Ruby files are loaded and compiled in lexicographical order. Thus we have to use such tricks as using file prefixes just to control this (even in mruby core). And that's an example from my lib (which inspired me to write this).
So, there is no way (other then naming hacks) to specify dependencies (usually we need it when using modules with shared logic).
The Idea
I was thinking of how to tell the builder to compile Ruby files in the specified order and came up with the following idea: let's use magic comments to declare dependencies:
# require: utils/logging

class Base
  include Utils::Logging
  ...
end
Looks like Sprockets 😏
Pros: easy to use/read, backward-compatible.
Cons: that differs from Ruby.
Other ideas
Another option I see is to specify the build order hints somewhere in config:
# Load specified files first, then everything else
conf.compile_first = %w(utils/**/*.rb zzz.rb)
Pros: no language changes.
Cons: harder to maintain (maybe, that's OK for mRuby libs, 'cause they're usually not too big).",I agree that this is an annoying problem. I actually fall several times over this. Yet I don't like the magic comment. The load specific config file on the other side I like.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3748,2017-07-19T16:08:15Z,,2021-06-03T07:47:52Z,OPEN,False,101,2,12,https://github.com/palkan,Specify Ruby files order through magic comments,2,[],https://github.com/mruby/mruby/pull/3748,https://github.com/christopheraue,3,https://github.com/mruby/mruby/pull/3748#issuecomment-316462602,"Disclaimer
I marked this PR as Experimental to emphasize that it's the main purpose is to discuss the problem (or this is not a problem at all?).
The problem
Currently, Ruby files are loaded and compiled in lexicographical order. Thus we have to use such tricks as using file prefixes just to control this (even in mruby core). And that's an example from my lib (which inspired me to write this).
So, there is no way (other then naming hacks) to specify dependencies (usually we need it when using modules with shared logic).
The Idea
I was thinking of how to tell the builder to compile Ruby files in the specified order and came up with the following idea: let's use magic comments to declare dependencies:
# require: utils/logging

class Base
  include Utils::Logging
  ...
end
Looks like Sprockets 😏
Pros: easy to use/read, backward-compatible.
Cons: that differs from Ruby.
Other ideas
Another option I see is to specify the build order hints somewhere in config:
# Load specified files first, then everything else
conf.compile_first = %w(utils/**/*.rb zzz.rb)
Pros: no language changes.
Cons: harder to maintain (maybe, that's OK for mRuby libs, 'cause they're usually not too big).","Well, you can already use
conf.rbfiles = Dir[""#{conf.dir}/mrblib/utils/**/*.rb""] + Dir[""#{conf.dir}/mrblib/zzz.rb""]
in the gemspec. As long as your files are still placed in the mrblib/ folder this should make sure that the files are loaded in the given order. I had a similar problem with my gem where I did this.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3748,2017-07-19T16:08:15Z,,2021-06-03T07:47:52Z,OPEN,False,101,2,12,https://github.com/palkan,Specify Ruby files order through magic comments,2,[],https://github.com/mruby/mruby/pull/3748,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3748#issuecomment-316882989,"Disclaimer
I marked this PR as Experimental to emphasize that it's the main purpose is to discuss the problem (or this is not a problem at all?).
The problem
Currently, Ruby files are loaded and compiled in lexicographical order. Thus we have to use such tricks as using file prefixes just to control this (even in mruby core). And that's an example from my lib (which inspired me to write this).
So, there is no way (other then naming hacks) to specify dependencies (usually we need it when using modules with shared logic).
The Idea
I was thinking of how to tell the builder to compile Ruby files in the specified order and came up with the following idea: let's use magic comments to declare dependencies:
# require: utils/logging

class Base
  include Utils::Logging
  ...
end
Looks like Sprockets 😏
Pros: easy to use/read, backward-compatible.
Cons: that differs from Ruby.
Other ideas
Another option I see is to specify the build order hints somewhere in config:
# Load specified files first, then everything else
conf.compile_first = %w(utils/**/*.rb zzz.rb)
Pros: no language changes.
Cons: harder to maintain (maybe, that's OK for mRuby libs, 'cause they're usually not too big).",I prefer magic comment. I care about maintainability.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3748,2017-07-19T16:08:15Z,,2021-06-03T07:47:52Z,OPEN,False,101,2,12,https://github.com/palkan,Specify Ruby files order through magic comments,2,[],https://github.com/mruby/mruby/pull/3748,https://github.com/palkan,5,https://github.com/mruby/mruby/pull/3748#issuecomment-317771960,"Disclaimer
I marked this PR as Experimental to emphasize that it's the main purpose is to discuss the problem (or this is not a problem at all?).
The problem
Currently, Ruby files are loaded and compiled in lexicographical order. Thus we have to use such tricks as using file prefixes just to control this (even in mruby core). And that's an example from my lib (which inspired me to write this).
So, there is no way (other then naming hacks) to specify dependencies (usually we need it when using modules with shared logic).
The Idea
I was thinking of how to tell the builder to compile Ruby files in the specified order and came up with the following idea: let's use magic comments to declare dependencies:
# require: utils/logging

class Base
  include Utils::Logging
  ...
end
Looks like Sprockets 😏
Pros: easy to use/read, backward-compatible.
Cons: that differs from Ruby.
Other ideas
Another option I see is to specify the build order hints somewhere in config:
# Load specified files first, then everything else
conf.compile_first = %w(utils/**/*.rb zzz.rb)
Pros: no language changes.
Cons: harder to maintain (maybe, that's OK for mRuby libs, 'cause they're usually not too big).","Ok. If we are going with magic comments, how they should work?
Current implementation ideologically works similar to MRI magic comments (at least, encoding, as I see here): we read source code line by line, ignore blank lines, parse magic ""require"" comments, scan until we find a line that do not match the magic comment (see test examples included in PR).
Not sure what to add/remove/improve.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3748,2017-07-19T16:08:15Z,,2021-06-03T07:47:52Z,OPEN,False,101,2,12,https://github.com/palkan,Specify Ruby files order through magic comments,2,[],https://github.com/mruby/mruby/pull/3748,https://github.com/palkan,6,https://github.com/mruby/mruby/pull/3748#issuecomment-320906159,"Disclaimer
I marked this PR as Experimental to emphasize that it's the main purpose is to discuss the problem (or this is not a problem at all?).
The problem
Currently, Ruby files are loaded and compiled in lexicographical order. Thus we have to use such tricks as using file prefixes just to control this (even in mruby core). And that's an example from my lib (which inspired me to write this).
So, there is no way (other then naming hacks) to specify dependencies (usually we need it when using modules with shared logic).
The Idea
I was thinking of how to tell the builder to compile Ruby files in the specified order and came up with the following idea: let's use magic comments to declare dependencies:
# require: utils/logging

class Base
  include Utils::Logging
  ...
end
Looks like Sprockets 😏
Pros: easy to use/read, backward-compatible.
Cons: that differs from Ruby.
Other ideas
Another option I see is to specify the build order hints somewhere in config:
# Load specified files first, then everything else
conf.compile_first = %w(utils/**/*.rb zzz.rb)
Pros: no language changes.
Cons: harder to maintain (maybe, that's OK for mRuby libs, 'cause they're usually not too big).","Update:

Rebased/refactored on the top of the recent master changes (moving build utils to lib/)
Added libtest task (to test build utils)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3748,2017-07-19T16:08:15Z,,2021-06-03T07:47:52Z,OPEN,False,101,2,12,https://github.com/palkan,Specify Ruby files order through magic comments,2,[],https://github.com/mruby/mruby/pull/3748,https://github.com/palkan,7,https://github.com/mruby/mruby/pull/3748#issuecomment-422095001,"Disclaimer
I marked this PR as Experimental to emphasize that it's the main purpose is to discuss the problem (or this is not a problem at all?).
The problem
Currently, Ruby files are loaded and compiled in lexicographical order. Thus we have to use such tricks as using file prefixes just to control this (even in mruby core). And that's an example from my lib (which inspired me to write this).
So, there is no way (other then naming hacks) to specify dependencies (usually we need it when using modules with shared logic).
The Idea
I was thinking of how to tell the builder to compile Ruby files in the specified order and came up with the following idea: let's use magic comments to declare dependencies:
# require: utils/logging

class Base
  include Utils::Logging
  ...
end
Looks like Sprockets 😏
Pros: easy to use/read, backward-compatible.
Cons: that differs from Ruby.
Other ideas
Another option I see is to specify the build order hints somewhere in config:
# Load specified files first, then everything else
conf.compile_first = %w(utils/**/*.rb zzz.rb)
Pros: no language changes.
Cons: harder to maintain (maybe, that's OK for mRuby libs, 'cause they're usually not too big).","🆙
Hey everyone!
Are we still interested in this feature? Maybe it's time to re-visit it?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3749,2017-07-19T18:07:29Z,2017-07-20T14:14:34Z,2017-07-29T12:06:17Z,MERGED,True,3,3,1,https://github.com/christopheraue,Fixed setting custom rbfiles in gemspec,1,[],https://github.com/mruby/mruby/pull/3749,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3749,"Currently, the root folder containing the ruby files of a gem to compile (mrblib/) cannot be customized. The gemspec offers methods like mrblib_dir= and rbfiles=, but that's of little value: The gemspec is evaluated in mrbgem_spec.rake#L84 but the file list using mrblib_dir is already compiled in mrbgem_spec.rake#L61. Also, the file list is already used in mrbgem_spec.rake#L66.
To be able to at least set the files with rbfiles=, lines 66 and 67 have to happen after evaluation of the gemspec. And that's what this patch does.","Currently, the root folder containing the ruby files of a gem to compile (mrblib/) cannot be customized. The gemspec offers methods like mrblib_dir= and rbfiles=, but that's of little value: The gemspec is evaluated in mrbgem_spec.rake#L84 but the file list using mrblib_dir is already compiled in mrbgem_spec.rake#L61. Also, the file list is already used in mrbgem_spec.rake#L66.
To be able to at least set the files with rbfiles=, lines 66 and 67 have to happen after evaluation of the gemspec. And that's what this patch does.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3755,2017-07-28T15:22:42Z,2017-07-28T22:01:54Z,2017-07-28T22:23:49Z,MERGED,True,81,25,2,https://github.com/christopheraue,Added Array#bsearch_index,3,[],https://github.com/mruby/mruby/pull/3755,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3755,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3756,2017-07-28T15:43:08Z,2017-07-28T21:53:06Z,2017-07-28T22:24:18Z,MERGED,True,19,1,2,https://github.com/christopheraue,Fixed return value of Module#include and #prepend,1,[],https://github.com/mruby/mruby/pull/3756,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3756,Module#include and #prepend returned the list of included modules instead of the module instance.,Module#include and #prepend returned the list of included modules instead of the module instance.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3757,2017-07-28T21:09:35Z,2017-07-28T22:05:37Z,2017-07-28T22:24:29Z,MERGED,True,68,16,4,https://github.com/christopheraue,Extended Module#const_get to support class paths,2,[],https://github.com/mruby/mruby/pull/3757,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3757,I hope I got the method names right in c7018ea. I tried to follow the naming conventions I saw in the code base.,I hope I got the method names right in c7018ea. I tried to follow the naming conventions I saw in the code base.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3758,2017-07-30T11:29:10Z,2017-07-30T22:26:46Z,2017-07-30T23:23:50Z,MERGED,True,49,48,7,https://github.com/christopheraue,Improved speed of enumeration methods,1,[],https://github.com/mruby/mruby/pull/3758,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3758,"Replaced yield if block_given? with block.call if block because the latter is ~20% faster than the former:
$ time build/bench/bin/mruby -e '
  def m
    yield if block_given?
  end

  i = 10_000_000
  while i > 0; m{}; i -= 1 end'

real    0m1.899s
user    0m1.899s
sys     0m0.000s

$ time build/bench/bin/mruby -e '
  def m(&b)
    b.call if b
  end

  i = 10_000_000
  while i > 0; m{}; i -= 1 end'

real    0m1.511s
user    0m1.510s
sys     0m0.001s","Replaced yield if block_given? with block.call if block because the latter is ~20% faster than the former:
$ time build/bench/bin/mruby -e '
  def m
    yield if block_given?
  end

  i = 10_000_000
  while i > 0; m{}; i -= 1 end'

real    0m1.899s
user    0m1.899s
sys     0m0.000s

$ time build/bench/bin/mruby -e '
  def m(&b)
    b.call if b
  end

  i = 10_000_000
  while i > 0; m{}; i -= 1 end'

real    0m1.511s
user    0m1.510s
sys     0m0.001s",True,{}
mruby/mruby,https://github.com/mruby/mruby,3758,2017-07-30T11:29:10Z,2017-07-30T22:26:46Z,2017-07-30T23:23:50Z,MERGED,True,49,48,7,https://github.com/christopheraue,Improved speed of enumeration methods,1,[],https://github.com/mruby/mruby/pull/3758,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3758#issuecomment-318900298,"Replaced yield if block_given? with block.call if block because the latter is ~20% faster than the former:
$ time build/bench/bin/mruby -e '
  def m
    yield if block_given?
  end

  i = 10_000_000
  while i > 0; m{}; i -= 1 end'

real    0m1.899s
user    0m1.899s
sys     0m0.000s

$ time build/bench/bin/mruby -e '
  def m(&b)
    b.call if b
  end

  i = 10_000_000
  while i > 0; m{}; i -= 1 end'

real    0m1.511s
user    0m1.510s
sys     0m0.001s",Thank you. You may want to add your name to AUTHORS file.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3758,2017-07-30T11:29:10Z,2017-07-30T22:26:46Z,2017-07-30T23:23:50Z,MERGED,True,49,48,7,https://github.com/christopheraue,Improved speed of enumeration methods,1,[],https://github.com/mruby/mruby/pull/3758,https://github.com/christopheraue,3,https://github.com/mruby/mruby/pull/3758#issuecomment-318905030,"Replaced yield if block_given? with block.call if block because the latter is ~20% faster than the former:
$ time build/bench/bin/mruby -e '
  def m
    yield if block_given?
  end

  i = 10_000_000
  while i > 0; m{}; i -= 1 end'

real    0m1.899s
user    0m1.899s
sys     0m0.000s

$ time build/bench/bin/mruby -e '
  def m(&b)
    b.call if b
  end

  i = 10_000_000
  while i > 0; m{}; i -= 1 end'

real    0m1.511s
user    0m1.510s
sys     0m0.001s",Thanks for the invitation: #3759,True,{}
mruby/mruby,https://github.com/mruby/mruby,3759,2017-07-30T14:22:43Z,2017-07-30T22:27:05Z,2017-07-30T23:23:18Z,MERGED,True,1,0,1,https://github.com/christopheraue,Updated AUTHORS,1,[],https://github.com/mruby/mruby/pull/3759,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3759,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3763,2017-08-04T08:26:32Z,2017-08-04T14:41:15Z,2017-08-07T05:40:55Z,MERGED,True,6,2,1,https://github.com/mimaki,Fixed a invalid source path name on mruby debugger.,1,[],https://github.com/mruby/mruby/pull/3763,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3763,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3764,2017-08-04T20:17:37Z,2017-08-06T16:48:40Z,2017-08-06T18:27:25Z,MERGED,True,2,4,1,https://github.com/christopheraue,Improved speed of creating new hash tables,2,[],https://github.com/mruby/mruby/pull/3764,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3764,"This patch cuts the time to create new hashes almost in half:
Before:
$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {}
  i -= 1
end""
real    0m2.136s
user    0m2.123s
sys     0m0.007s

$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {a:1, b:2, c:3, d:4}
  i -= 1
end""
real    0m4.248s
user    0m4.248s
sys     0m0.000s

After:
$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {}
  i -= 1
end""
real    0m1.377s
user    0m1.374s
sys     0m0.003s

$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {a:1, b:2, c:3, d:4}
  i -= 1
end""
real    0m2.272s
user    0m2.261s
sys     0m0.003s","This patch cuts the time to create new hashes almost in half:
Before:
$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {}
  i -= 1
end""
real    0m2.136s
user    0m2.123s
sys     0m0.007s

$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {a:1, b:2, c:3, d:4}
  i -= 1
end""
real    0m4.248s
user    0m4.248s
sys     0m0.000s

After:
$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {}
  i -= 1
end""
real    0m1.377s
user    0m1.374s
sys     0m0.003s

$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {a:1, b:2, c:3, d:4}
  i -= 1
end""
real    0m2.272s
user    0m2.261s
sys     0m0.003s",True,{}
mruby/mruby,https://github.com/mruby/mruby,3764,2017-08-04T20:17:37Z,2017-08-06T16:48:40Z,2017-08-06T18:27:25Z,MERGED,True,2,4,1,https://github.com/christopheraue,Improved speed of creating new hash tables,2,[],https://github.com/mruby/mruby/pull/3764,https://github.com/christopheraue,2,https://github.com/mruby/mruby/pull/3764#issuecomment-320465043,"This patch cuts the time to create new hashes almost in half:
Before:
$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {}
  i -= 1
end""
real    0m2.136s
user    0m2.123s
sys     0m0.007s

$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {a:1, b:2, c:3, d:4}
  i -= 1
end""
real    0m4.248s
user    0m4.248s
sys     0m0.000s

After:
$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {}
  i -= 1
end""
real    0m1.377s
user    0m1.374s
sys     0m0.003s

$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {a:1, b:2, c:3, d:4}
  i -= 1
end""
real    0m2.272s
user    0m2.261s
sys     0m0.003s","I found another inefficiency related to the patch from yesterday. Hashes with sizes in ranges 7..8, 13..16, 25..32, 49..64 and so on showed noticeable worse times compared to hashes of neighboring sizes. The times are shown in the ""Before"" column in the table below.
This is caused by creating the underlying khash with the same size as the hash. On the other hand, the khash is always kept big enough to have at least 1/4 empty buckets (
  
    
      mruby/include/mruby/khash.h
    
    
         Line 177
      in
      065966d
    
  
  
    

        
          
           if (h->n_occupied >= khash_upper_bound(h)) {                        \ 
        
    
  

). This resizes the khashes directly after creation when they are filled with items. To prevent this the khash is initialized with 4/3 the size of the hash.
The resulting times are shown in the ""After"" column below. They are smaller for hashes in said size ranges and grow more linear in general.

SizeBeforeAfter

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
...
23
24
25
26
...
31
32
33
34
...
47
48
49
50
...
63
64
65
66

0.218s
0.290s
0.322s
0.351s
0.324s
0.390s
0.607s
0.690s
0.418s
0.425s
0.469s
0.508s
0.900s
0.870s
1.031s
1.114s
0.775s
0.772s
...
1.010s
1.106s
1.551s
1.641s
...
1.810s
1.866s
1.318s
1.468s
...
1.875s
1.915s
2.796s
2.830s
...
3.259s
3.322s
2.601s
2.584s

0.201s
0.296s
0.291s
0.316s
0.382s
0.401s
0.440s
0.469s
0.524s
0.530s
0.587s
0.631s
0.642s
0.735s
0.682s
0.820s
0.870s
0.805s
...
1.142s
1.004s
1.061s
1.132s
...
1.419s
1.436s
1.388s
1.479s
...
1.869s
1.766s
2.033s
2.093s
...
2.472s
2.506s
2.458s
2.584s


Script to reproduce the measurement:
[*(1..18), *(23..26), *(31..34), *(47..50), *(63..66)].each do |size|
  time = `{ time build/bench/bin/mruby -e '
    i = 1_000_000
    while i > 0
      h = #{Array.new(size){ |i| [i,i] }.to_h.inspect}
      i -= 1
    end
  '; } 2>&1`.strip.split(""\n"").first.split.last[2..-1]
  puts ""#{size} #{time}""
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,3764,2017-08-04T20:17:37Z,2017-08-06T16:48:40Z,2017-08-06T18:27:25Z,MERGED,True,2,4,1,https://github.com/christopheraue,Improved speed of creating new hash tables,2,[],https://github.com/mruby/mruby/pull/3764,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3764#issuecomment-320518255,"This patch cuts the time to create new hashes almost in half:
Before:
$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {}
  i -= 1
end""
real    0m2.136s
user    0m2.123s
sys     0m0.007s

$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {a:1, b:2, c:3, d:4}
  i -= 1
end""
real    0m4.248s
user    0m4.248s
sys     0m0.000s

After:
$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {}
  i -= 1
end""
real    0m1.377s
user    0m1.374s
sys     0m0.003s

$ time build/bench/bin/mruby -e ""
i = 10_000_000
while i > 0
  h = {a:1, b:2, c:3, d:4}
  i -= 1
end""
real    0m2.272s
user    0m2.261s
sys     0m0.003s",Nice improvement. Thank you.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3769,2017-08-09T10:27:10Z,2017-08-09T12:21:47Z,2017-08-09T22:58:54Z,MERGED,True,48,0,2,https://github.com/vvakame,"add method(compact, compact!) and test of Hash to mruby-hash-ext",1,[],https://github.com/mruby/mruby/pull/3769,https://github.com/vvakame,1,https://github.com/mruby/mruby/pull/3769,"I was implement Hash#compact and Hash#compact! to mruby-hash-ext.
I saw this document and code.

http://ruby-doc.org/core-2.4.1/Hash.html#method-i-compact

  
    
      mruby/mrbgems/mruby-array-ext/mrblib/array.rb
    
    
        Lines 218 to 251
      in
      f9c3ebd
    
  
  
    

        
          
           ## 
        

        
          
           # call-seq: 
        

        
          
           #    ary.compact     -> new_ary 
        

        
          
           # 
        

        
          
           # Returns a copy of +self+ with all +nil+ elements removed. 
        

        
          
           # 
        

        
          
           #    [ ""a"", nil, ""b"", nil, ""c"", nil ].compact 
        

        
          
           #                      #=> [ ""a"", ""b"", ""c"" ] 
        

        
          
           # 
        

        
          
           def compact 
        

        
          
             result = self.dup 
        

        
          
             result.compact! 
        

        
          
             result 
        

        
          
           end 
        

        
          
            
        

        
          
           ## 
        

        
          
           # call-seq: 
        

        
          
           #    ary.compact!    -> ary  or  nil 
        

        
          
           # 
        

        
          
           # Removes +nil+ elements from the array. 
        

        
          
           # Returns +nil+ if no changes were made, otherwise returns 
        

        
          
           # <i>ary</i>. 
        

        
          
           # 
        

        
          
           #    [ ""a"", nil, ""b"", nil, ""c"" ].compact! #=> [ ""a"", ""b"", ""c"" ] 
        

        
          
           #    [ ""a"", ""b"", ""c"" ].compact!           #=> nil 
        

        
          
           # 
        

        
          
           def compact! 
        

        
          
             result = self.select { |e| !e.nil? } 
        

        
          
             if result.size == self.size 
        

        
          
               nil 
        

        
          
             else 
        

        
          
               self.replace(result) 
        

        
          
             end 
        

        
          
           end 
        
    
  



and exec below code.
$ irb -v
irb 0.9.6(09/06/30)
$ ruby -v
ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]
$ irb
irb(main):001:0> {:a => true, :b => nil}.compact!
=> {:a=>true}
irb(main):002:0> {:a => true}.compact!
=> nil

CRuby document says.
Array http://ruby-doc.org/core-2.4.1/Array.html#method-i-compact

compact! → ary or nil
Removes nil elements from the array.
Returns nil if no changes were made, otherwise returns the array.

Hash http://ruby-doc.org/core-2.4.1/Hash.html#method-i-compact

compact! → hsh
Removes all nil values from the hash. Returns the hash.

Hash document is not pointing to something like Returns nil if no changes were made, otherwise returns the hash....
Is my implementation right?","I was implement Hash#compact and Hash#compact! to mruby-hash-ext.
I saw this document and code.

http://ruby-doc.org/core-2.4.1/Hash.html#method-i-compact

  
    
      mruby/mrbgems/mruby-array-ext/mrblib/array.rb
    
    
        Lines 218 to 251
      in
      f9c3ebd
    
  
  
    

        
          
           ## 
        

        
          
           # call-seq: 
        

        
          
           #    ary.compact     -> new_ary 
        

        
          
           # 
        

        
          
           # Returns a copy of +self+ with all +nil+ elements removed. 
        

        
          
           # 
        

        
          
           #    [ ""a"", nil, ""b"", nil, ""c"", nil ].compact 
        

        
          
           #                      #=> [ ""a"", ""b"", ""c"" ] 
        

        
          
           # 
        

        
          
           def compact 
        

        
          
             result = self.dup 
        

        
          
             result.compact! 
        

        
          
             result 
        

        
          
           end 
        

        
          
            
        

        
          
           ## 
        

        
          
           # call-seq: 
        

        
          
           #    ary.compact!    -> ary  or  nil 
        

        
          
           # 
        

        
          
           # Removes +nil+ elements from the array. 
        

        
          
           # Returns +nil+ if no changes were made, otherwise returns 
        

        
          
           # <i>ary</i>. 
        

        
          
           # 
        

        
          
           #    [ ""a"", nil, ""b"", nil, ""c"" ].compact! #=> [ ""a"", ""b"", ""c"" ] 
        

        
          
           #    [ ""a"", ""b"", ""c"" ].compact!           #=> nil 
        

        
          
           # 
        

        
          
           def compact! 
        

        
          
             result = self.select { |e| !e.nil? } 
        

        
          
             if result.size == self.size 
        

        
          
               nil 
        

        
          
             else 
        

        
          
               self.replace(result) 
        

        
          
             end 
        

        
          
           end 
        
    
  



and exec below code.
$ irb -v
irb 0.9.6(09/06/30)
$ ruby -v
ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]
$ irb
irb(main):001:0> {:a => true, :b => nil}.compact!
=> {:a=>true}
irb(main):002:0> {:a => true}.compact!
=> nil

CRuby document says.
Array http://ruby-doc.org/core-2.4.1/Array.html#method-i-compact

compact! → ary or nil
Removes nil elements from the array.
Returns nil if no changes were made, otherwise returns the array.

Hash http://ruby-doc.org/core-2.4.1/Hash.html#method-i-compact

compact! → hsh
Removes all nil values from the hash. Returns the hash.

Hash document is not pointing to something like Returns nil if no changes were made, otherwise returns the hash....
Is my implementation right?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3769,2017-08-09T10:27:10Z,2017-08-09T12:21:47Z,2017-08-09T22:58:54Z,MERGED,True,48,0,2,https://github.com/vvakame,"add method(compact, compact!) and test of Hash to mruby-hash-ext",1,[],https://github.com/mruby/mruby/pull/3769,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3769#issuecomment-321404291,"I was implement Hash#compact and Hash#compact! to mruby-hash-ext.
I saw this document and code.

http://ruby-doc.org/core-2.4.1/Hash.html#method-i-compact

  
    
      mruby/mrbgems/mruby-array-ext/mrblib/array.rb
    
    
        Lines 218 to 251
      in
      f9c3ebd
    
  
  
    

        
          
           ## 
        

        
          
           # call-seq: 
        

        
          
           #    ary.compact     -> new_ary 
        

        
          
           # 
        

        
          
           # Returns a copy of +self+ with all +nil+ elements removed. 
        

        
          
           # 
        

        
          
           #    [ ""a"", nil, ""b"", nil, ""c"", nil ].compact 
        

        
          
           #                      #=> [ ""a"", ""b"", ""c"" ] 
        

        
          
           # 
        

        
          
           def compact 
        

        
          
             result = self.dup 
        

        
          
             result.compact! 
        

        
          
             result 
        

        
          
           end 
        

        
          
            
        

        
          
           ## 
        

        
          
           # call-seq: 
        

        
          
           #    ary.compact!    -> ary  or  nil 
        

        
          
           # 
        

        
          
           # Removes +nil+ elements from the array. 
        

        
          
           # Returns +nil+ if no changes were made, otherwise returns 
        

        
          
           # <i>ary</i>. 
        

        
          
           # 
        

        
          
           #    [ ""a"", nil, ""b"", nil, ""c"" ].compact! #=> [ ""a"", ""b"", ""c"" ] 
        

        
          
           #    [ ""a"", ""b"", ""c"" ].compact!           #=> nil 
        

        
          
           # 
        

        
          
           def compact! 
        

        
          
             result = self.select { |e| !e.nil? } 
        

        
          
             if result.size == self.size 
        

        
          
               nil 
        

        
          
             else 
        

        
          
               self.replace(result) 
        

        
          
             end 
        

        
          
           end 
        
    
  



and exec below code.
$ irb -v
irb 0.9.6(09/06/30)
$ ruby -v
ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]
$ irb
irb(main):001:0> {:a => true, :b => nil}.compact!
=> {:a=>true}
irb(main):002:0> {:a => true}.compact!
=> nil

CRuby document says.
Array http://ruby-doc.org/core-2.4.1/Array.html#method-i-compact

compact! → ary or nil
Removes nil elements from the array.
Returns nil if no changes were made, otherwise returns the array.

Hash http://ruby-doc.org/core-2.4.1/Hash.html#method-i-compact

compact! → hsh
Removes all nil values from the hash. Returns the hash.

Hash document is not pointing to something like Returns nil if no changes were made, otherwise returns the hash....
Is my implementation right?",You may want to add your name to the AUTHORS file.  Send a pull request.,True,"{'LAUGH': ['https://github.com/vvakame'], 'THUMBS_UP': ['https://github.com/udzura']}"
mruby/mruby,https://github.com/mruby/mruby,3770,2017-08-09T19:44:56Z,2017-08-09T22:59:50Z,2017-08-18T02:07:26Z,MERGED,True,127,129,8,https://github.com/christopheraue,Replaced tabs with spaces,1,[],https://github.com/mruby/mruby/pull/3770,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3770,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3772,2017-08-10T00:22:36Z,2017-08-10T00:50:09Z,2017-08-10T06:58:25Z,MERGED,True,1,0,1,https://github.com/vvakame,Updated AUTHORS,1,[],https://github.com/mruby/mruby/pull/3772,https://github.com/vvakame,1,https://github.com/mruby/mruby/pull/3772,via #3769 (comment),via #3769 (comment),True,{}
mruby/mruby,https://github.com/mruby/mruby,3776,2017-08-10T22:04:47Z,2017-08-11T04:17:29Z,2017-08-11T08:23:32Z,MERGED,True,25,30,1,https://github.com/christopheraue,Fixed calling missing method through super with 126 args,1,[],https://github.com/mruby/mruby/pull/3776,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3776,"The following input raised an error that it shouldn't:
$ bin/mruby -e 'class SCls
  def method_missing(m, *)
    puts ""calling missing #{m}""
  end
end

class Cls < SCls
  def unknown
    super(
      1,2,3,4,5,6,7,8,9,0,
      11,2,3,4,5,6,7,8,9,0,
      21,2,3,4,5,6,7,8,9,0,
      31,2,3,4,5,6,7,8,9,0,
      41,2,3,4,5,6,7,8,9,0,
      51,2,3,4,5,6,7,8,9,0,
      61,2,3,4,5,6,7,8,9,0,
      71,2,3,4,5,6,7,8,9,0,
      81,2,3,4,5,6,7,8,9,0,
      91,2,3,4,5,6,7,8,9,0,
      101,2,3,4,5,6,7,8,9,0,
      111,2,3,4,5,6,7,8,9,0,
      121,2,3,4,5,6)
  end
end
Cls.new.unknown'
trace:
        [0] -e:25
-e:25: can't convert Fixnum into Proc (TypeError)

To blame was:
if (n == CALL_MAXARGS-1) {
  [...]
  n++;
}
[...]
if (n == CALL_MAXARGS) {
  bidx = a+2;
}
[...]
blk = regs[bidx];

This got the third register instead of the last one with the block and tried to convert it into a proc. The solution was to recreate the control flow of OP_SEND: First getting the block and then use it to create the regs for method missing.","The following input raised an error that it shouldn't:
$ bin/mruby -e 'class SCls
  def method_missing(m, *)
    puts ""calling missing #{m}""
  end
end

class Cls < SCls
  def unknown
    super(
      1,2,3,4,5,6,7,8,9,0,
      11,2,3,4,5,6,7,8,9,0,
      21,2,3,4,5,6,7,8,9,0,
      31,2,3,4,5,6,7,8,9,0,
      41,2,3,4,5,6,7,8,9,0,
      51,2,3,4,5,6,7,8,9,0,
      61,2,3,4,5,6,7,8,9,0,
      71,2,3,4,5,6,7,8,9,0,
      81,2,3,4,5,6,7,8,9,0,
      91,2,3,4,5,6,7,8,9,0,
      101,2,3,4,5,6,7,8,9,0,
      111,2,3,4,5,6,7,8,9,0,
      121,2,3,4,5,6)
  end
end
Cls.new.unknown'
trace:
        [0] -e:25
-e:25: can't convert Fixnum into Proc (TypeError)

To blame was:
if (n == CALL_MAXARGS-1) {
  [...]
  n++;
}
[...]
if (n == CALL_MAXARGS) {
  bidx = a+2;
}
[...]
blk = regs[bidx];

This got the third register instead of the last one with the block and tried to convert it into a proc. The solution was to recreate the control flow of OP_SEND: First getting the block and then use it to create the regs for method missing.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3776,2017-08-10T22:04:47Z,2017-08-11T04:17:29Z,2017-08-11T08:23:32Z,MERGED,True,25,30,1,https://github.com/christopheraue,Fixed calling missing method through super with 126 args,1,[],https://github.com/mruby/mruby/pull/3776,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3776#issuecomment-321708840,"The following input raised an error that it shouldn't:
$ bin/mruby -e 'class SCls
  def method_missing(m, *)
    puts ""calling missing #{m}""
  end
end

class Cls < SCls
  def unknown
    super(
      1,2,3,4,5,6,7,8,9,0,
      11,2,3,4,5,6,7,8,9,0,
      21,2,3,4,5,6,7,8,9,0,
      31,2,3,4,5,6,7,8,9,0,
      41,2,3,4,5,6,7,8,9,0,
      51,2,3,4,5,6,7,8,9,0,
      61,2,3,4,5,6,7,8,9,0,
      71,2,3,4,5,6,7,8,9,0,
      81,2,3,4,5,6,7,8,9,0,
      91,2,3,4,5,6,7,8,9,0,
      101,2,3,4,5,6,7,8,9,0,
      111,2,3,4,5,6,7,8,9,0,
      121,2,3,4,5,6)
  end
end
Cls.new.unknown'
trace:
        [0] -e:25
-e:25: can't convert Fixnum into Proc (TypeError)

To blame was:
if (n == CALL_MAXARGS-1) {
  [...]
  n++;
}
[...]
if (n == CALL_MAXARGS) {
  bidx = a+2;
}
[...]
blk = regs[bidx];

This got the third register instead of the last one with the block and tried to convert it into a proc. The solution was to recreate the control flow of OP_SEND: First getting the block and then use it to create the regs for method missing.",CI fails. Due to changes in L1382 and L1407 (mid was updated).,True,{}
mruby/mruby,https://github.com/mruby/mruby,3776,2017-08-10T22:04:47Z,2017-08-11T04:17:29Z,2017-08-11T08:23:32Z,MERGED,True,25,30,1,https://github.com/christopheraue,Fixed calling missing method through super with 126 args,1,[],https://github.com/mruby/mruby/pull/3776,https://github.com/christopheraue,3,https://github.com/mruby/mruby/pull/3776#issuecomment-321755263,"The following input raised an error that it shouldn't:
$ bin/mruby -e 'class SCls
  def method_missing(m, *)
    puts ""calling missing #{m}""
  end
end

class Cls < SCls
  def unknown
    super(
      1,2,3,4,5,6,7,8,9,0,
      11,2,3,4,5,6,7,8,9,0,
      21,2,3,4,5,6,7,8,9,0,
      31,2,3,4,5,6,7,8,9,0,
      41,2,3,4,5,6,7,8,9,0,
      51,2,3,4,5,6,7,8,9,0,
      61,2,3,4,5,6,7,8,9,0,
      71,2,3,4,5,6,7,8,9,0,
      81,2,3,4,5,6,7,8,9,0,
      91,2,3,4,5,6,7,8,9,0,
      101,2,3,4,5,6,7,8,9,0,
      111,2,3,4,5,6,7,8,9,0,
      121,2,3,4,5,6)
  end
end
Cls.new.unknown'
trace:
        [0] -e:25
-e:25: can't convert Fixnum into Proc (TypeError)

To blame was:
if (n == CALL_MAXARGS-1) {
  [...]
  n++;
}
[...]
if (n == CALL_MAXARGS) {
  bidx = a+2;
}
[...]
blk = regs[bidx];

This got the third register instead of the last one with the block and tried to convert it into a proc. The solution was to recreate the control flow of OP_SEND: First getting the block and then use it to create the regs for method missing.",Argh! Sorry for my inability to properly run the tests -.-,True,{}
mruby/mruby,https://github.com/mruby/mruby,3777,2017-08-11T11:45:25Z,2017-08-11T13:35:41Z,2017-08-11T14:18:48Z,MERGED,True,20,0,1,https://github.com/christopheraue,Added basic test for calling a missing method through super,1,[],https://github.com/mruby/mruby/pull/3777,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3777,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3778,2017-08-11T11:46:54Z,2017-08-11T13:38:33Z,2017-08-11T14:18:35Z,MERGED,True,23,72,1,https://github.com/christopheraue,Refactored OP_SEND and OP_SUPER and calculate argc right at the top,1,[],https://github.com/mruby/mruby/pull/3778,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3778,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3779,2017-08-12T13:20:30Z,2017-08-12T22:11:21Z,2017-08-12T22:16:56Z,MERGED,True,26,54,1,https://github.com/christopheraue,Some more vm refactorings,4,[],https://github.com/mruby/mruby/pull/3779,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3779,"One additional thing: While going through the code I was wondering if sections:

  
    
      mruby/src/vm.c
    
    
        Lines 1366 to 1369
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


and

  
    
      mruby/src/vm.c
    
    
        Lines 1560 to 1563
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


are needed or could be removed.
In both cases the stack should have room for the block. Actually, the stack was just accessed at the block's offset a few lines earlier. Removing those lines does not break any tests.","One additional thing: While going through the code I was wondering if sections:

  
    
      mruby/src/vm.c
    
    
        Lines 1366 to 1369
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


and

  
    
      mruby/src/vm.c
    
    
        Lines 1560 to 1563
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


are needed or could be removed.
In both cases the stack should have room for the block. Actually, the stack was just accessed at the block's offset a few lines earlier. Removing those lines does not break any tests.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3779,2017-08-12T13:20:30Z,2017-08-12T22:11:21Z,2017-08-12T22:16:56Z,MERGED,True,26,54,1,https://github.com/christopheraue,Some more vm refactorings,4,[],https://github.com/mruby/mruby/pull/3779,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3779#issuecomment-321988136,"One additional thing: While going through the code I was wondering if sections:

  
    
      mruby/src/vm.c
    
    
        Lines 1366 to 1369
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


and

  
    
      mruby/src/vm.c
    
    
        Lines 1560 to 1563
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


are needed or could be removed.
In both cases the stack should have room for the block. Actually, the stack was just accessed at the block's offset a few lines earlier. Removing those lines does not break any tests.","The first check was added by 5513fce. It seems to be added for no reason (you may remove it).
The second check was added by 93d8029 related to #3551. According to #3551 bidx may be bigger than ci->nregs, so we have to check before accessing regs[bidx].",True,{}
mruby/mruby,https://github.com/mruby/mruby,3779,2017-08-12T13:20:30Z,2017-08-12T22:11:21Z,2017-08-12T22:16:56Z,MERGED,True,26,54,1,https://github.com/christopheraue,Some more vm refactorings,4,[],https://github.com/mruby/mruby/pull/3779,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3779#issuecomment-321989394,"One additional thing: While going through the code I was wondering if sections:

  
    
      mruby/src/vm.c
    
    
        Lines 1366 to 1369
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


and

  
    
      mruby/src/vm.c
    
    
        Lines 1560 to 1563
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


are needed or could be removed.
In both cases the stack should have room for the block. Actually, the stack was just accessed at the block's offset a few lines earlier. Removing those lines does not break any tests.","I made the following change:
diff --git a/src/vm.c b/src/vm.c
index 9c427772..e1471051 100644
--- a/src/vm.c
+++ b/src/vm.c
@@ -1201,13 +1201,13 @@ RETRY_TRY_BLOCK:
       if (GET_OPCODE(i) != OP_SENDB) {
         SET_NIL_VALUE(regs[bidx]);
       }
+      else if (bidx >= mrb->c->ci->nregs) {
+        stack_extend(mrb, bidx+1);
+        mrb->c->ci->nregs = bidx+1;
+      }
       else {
         mrb_value blk = regs[bidx];
         if (!mrb_nil_p(blk) && mrb_type(blk) != MRB_TT_PROC) {
-          if (bidx >= mrb->c->ci->nregs) {
-            stack_extend(mrb, bidx+1);
-            mrb->c->ci->nregs = bidx+1;
-          }
           regs[bidx] = mrb_convert_type(mrb, blk, MRB_TT_PROC, ""Proc"", ""to_proc"");
         }
       }
@@ -1383,7 +1383,6 @@ RETRY_TRY_BLOCK:
       mrb_sym mid = ci->mid;
       int a = GETARG_A(i);
       int n = GETARG_C(i);
-      mrb_value blk;
       int bidx;
 
       if (mid == 0 || !ci->target_class) {
@@ -1430,13 +1429,16 @@ RETRY_TRY_BLOCK:
       else {
         bidx = a+n+1;
       }
-      blk = regs[bidx];
-      if (!mrb_nil_p(blk) && mrb_type(blk) != MRB_TT_PROC) {
-        if (bidx >= ci->nregs) {
-          stack_extend(mrb, bidx+1);
-          ci->nregs = bidx+1;
+      if (bidx >= ci->nregs) {
+        stack_extend(mrb, bidx+1);
+        ci->nregs = bidx+1;
+      }
+      else {
+        mrb_value blk = regs[bidx];
+
+        if (!mrb_nil_p(blk) && mrb_type(blk) != MRB_TT_PROC) {
+          regs[bidx] = mrb_convert_type(mrb, blk, MRB_TT_PROC, ""Proc"", ""to_proc"");
         }
-        regs[bidx] = mrb_convert_type(mrb, blk, MRB_TT_PROC, ""Proc"", ""to_proc"");
       }
 
       /* push callinfo */",True,{}
mruby/mruby,https://github.com/mruby/mruby,3779,2017-08-12T13:20:30Z,2017-08-12T22:11:21Z,2017-08-12T22:16:56Z,MERGED,True,26,54,1,https://github.com/christopheraue,Some more vm refactorings,4,[],https://github.com/mruby/mruby/pull/3779,https://github.com/christopheraue,4,https://github.com/mruby/mruby/pull/3779#issuecomment-322007987,"One additional thing: While going through the code I was wondering if sections:

  
    
      mruby/src/vm.c
    
    
        Lines 1366 to 1369
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


and

  
    
      mruby/src/vm.c
    
    
        Lines 1560 to 1563
      in
      8bf492f
    
  
  
    

        
          
           if (bidx >= ci->nregs) { 
        

        
          
             stack_extend(mrb, bidx+1); 
        

        
          
             ci->nregs = bidx+1; 
        

        
          
           } 
        
    
  


are needed or could be removed.
In both cases the stack should have room for the block. Actually, the stack was just accessed at the block's offset a few lines earlier. Removing those lines does not break any tests.","Alright, I also investigated some more.
Like you said, because of #3504 the ci->nregs = bidx+1 was introduced in b64f087. This led to the follow up error #3551 whose fix introduced the if (bidx >= ci->nregs) check in 071164b and the stack_extend(mrb, ci->nregs) in 93d8029.
Then, the code causing #3504 reappeared again in #3590. The fix for it moved the code dealing with the block in OP_SUPER from below the cipush  to above the cipush (d9fb8b6). The if (bidx >= ci->nregs) { ... } from then on works with the original callinfo and not the pushed one. ci->nregs needed to be modified for the pushed one because it is initialized to 0. But for the original ci it is propertly set and a check is not needed.
It looks to me, that getting the block before cipush seems to be the proper fix for the issues. Checking out d9fb8b6 and removing the if (bidx >= ci->nregs) blocks does not crash with the code given in #3504, #3551 and #3590. master does not crash either.
I'm going to add a commit with the checks removed. Just leave it out if I missed something.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3781,2017-08-17T16:19:22Z,2017-08-18T13:13:34Z,2017-08-18T13:17:46Z,MERGED,True,1,0,1,https://github.com/clayton-shopify,Check whether internal khash is initialized in Hash#compact!,1,[],https://github.com/mruby/mruby/pull/3781,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/3781,"The new C version of Hash#compact! (introduced in 6c61a60) does not check whether the internal khash is initialized before operating on it. As a result, code such as the following causes a null pointer dereference:
class X < Hash
    def initialize
    end 
end
X.new.compact!
I've fixed the issue by adding a null check.
This issue was reported by Dinko Galetic & Denis Kasak (https://hackerone.com/dgaletic).","The new C version of Hash#compact! (introduced in 6c61a60) does not check whether the internal khash is initialized before operating on it. As a result, code such as the following causes a null pointer dereference:
class X < Hash
    def initialize
    end 
end
X.new.compact!
I've fixed the issue by adding a null check.
This issue was reported by Dinko Galetic & Denis Kasak (https://hackerone.com/dgaletic).",True,{}
mruby/mruby,https://github.com/mruby/mruby,3785,2017-08-18T11:15:14Z,2017-08-18T11:37:32Z,2017-08-18T11:37:32Z,MERGED,True,7,10,2,https://github.com/miura1729,Improve Array structure,1,[],https://github.com/mruby/mruby/pull/3785,https://github.com/miura1729,1,https://github.com/mruby/mruby/pull/3785,This patch makes reduce code size (about 2048bytes in 32bit Cygwin) and a little speed up (about 1% in best benchmark test).,This patch makes reduce code size (about 2048bytes in 32bit Cygwin) and a little speed up (about 1% in best benchmark test).,True,{}
mruby/mruby,https://github.com/mruby/mruby,3786,2017-08-18T11:18:20Z,2017-08-18T13:17:33Z,2017-08-18T13:24:17Z,MERGED,True,6,5,1,https://github.com/christopheraue,Reset ci in OP_SUPER after potential realloc,1,[],https://github.com/mruby/mruby/pull/3786,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3786,re #3784,re #3784,True,{}
mruby/mruby,https://github.com/mruby/mruby,3788,2017-08-23T16:24:16Z,2017-08-24T05:38:03Z,2017-08-24T08:37:25Z,MERGED,True,168,48,3,https://github.com/christopheraue,Fixed register windows of OP_SENDs generated during codegen,8,[],https://github.com/mruby/mruby/pull/3788,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3788,re #3783,re #3783,True,{}
mruby/mruby,https://github.com/mruby/mruby,3790,2017-08-25T12:04:05Z,2017-08-25T17:05:09Z,2017-08-25T17:05:31Z,CLOSED,False,2,3,1,https://github.com/dabroz,Fix clang warnings,1,[],https://github.com/mruby/mruby/pull/3790,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3790,"Warning fix.
Before:
CC    src/vm.c -> build/host-debug/src/vm.o
@mruby/src/vm.c:2315:22: warning: variable 'f' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized]
            else if (x < 0) f = -INFINITY;
                     ^~~~~
@mruby/src/vm.c:2320:41: note: uninitialized use occurs here
          SET_FLOAT_VALUE(mrb, regs[a], f);
                                        ^
@mruby/include/mruby/boxing_no.h:42:78: note: expanded from macro 'SET_FLOAT_VALUE'
#define SET_FLOAT_VALUE(mrb,r,v) BOXNIX_SET_VALUE(r, MRB_TT_FLOAT, value.f, (v))
                                                                             ^
@mruby/include/mruby/boxing_no.h:34:14: note: expanded from macro 'BOXNIX_SET_VALUE'
  (o).attr = v;\
             ^
@mruby/src/vm.c:2315:18: note: remove the 'if' if its condition is always true
            else if (x < 0) f = -INFINITY;
                 ^~~~~~~~~~~
@mruby/src/vm.c:2311:19: note: initialize the variable 'f' to silence this warning
          double f;
                  ^
                   = 0.0
1 warning generated.","Warning fix.
Before:
CC    src/vm.c -> build/host-debug/src/vm.o
@mruby/src/vm.c:2315:22: warning: variable 'f' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized]
            else if (x < 0) f = -INFINITY;
                     ^~~~~
@mruby/src/vm.c:2320:41: note: uninitialized use occurs here
          SET_FLOAT_VALUE(mrb, regs[a], f);
                                        ^
@mruby/include/mruby/boxing_no.h:42:78: note: expanded from macro 'SET_FLOAT_VALUE'
#define SET_FLOAT_VALUE(mrb,r,v) BOXNIX_SET_VALUE(r, MRB_TT_FLOAT, value.f, (v))
                                                                             ^
@mruby/include/mruby/boxing_no.h:34:14: note: expanded from macro 'BOXNIX_SET_VALUE'
  (o).attr = v;\
             ^
@mruby/src/vm.c:2315:18: note: remove the 'if' if its condition is always true
            else if (x < 0) f = -INFINITY;
                 ^~~~~~~~~~~
@mruby/src/vm.c:2311:19: note: initialize the variable 'f' to silence this warning
          double f;
                  ^
                   = 0.0
1 warning generated.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3790,2017-08-25T12:04:05Z,2017-08-25T17:05:09Z,2017-08-25T17:05:31Z,CLOSED,False,2,3,1,https://github.com/dabroz,Fix clang warnings,1,[],https://github.com/mruby/mruby/pull/3790,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3790#issuecomment-324980142,"Warning fix.
Before:
CC    src/vm.c -> build/host-debug/src/vm.o
@mruby/src/vm.c:2315:22: warning: variable 'f' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized]
            else if (x < 0) f = -INFINITY;
                     ^~~~~
@mruby/src/vm.c:2320:41: note: uninitialized use occurs here
          SET_FLOAT_VALUE(mrb, regs[a], f);
                                        ^
@mruby/include/mruby/boxing_no.h:42:78: note: expanded from macro 'SET_FLOAT_VALUE'
#define SET_FLOAT_VALUE(mrb,r,v) BOXNIX_SET_VALUE(r, MRB_TT_FLOAT, value.f, (v))
                                                                             ^
@mruby/include/mruby/boxing_no.h:34:14: note: expanded from macro 'BOXNIX_SET_VALUE'
  (o).attr = v;\
             ^
@mruby/src/vm.c:2315:18: note: remove the 'if' if its condition is always true
            else if (x < 0) f = -INFINITY;
                 ^~~~~~~~~~~
@mruby/src/vm.c:2311:19: note: initialize the variable 'f' to silence this warning
          double f;
                  ^
                   = 0.0
1 warning generated.",I have already addressed the issue yesterday (60104ce) but thank you anyway.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3791,2017-08-25T12:19:33Z,2017-08-25T16:55:00Z,2017-08-25T16:55:00Z,MERGED,True,7,7,1,https://github.com/dabroz,Fix MSVC warnings in fmt_fp.c,7,[],https://github.com/mruby/mruby/pull/3791,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3791,"Fixes:
C:\projects\mruby\src\fmt_fp.c(123) : warning C4244: 'return' : conversion from 'ptrdiff_t' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(178) : warning C4244: 'return' : conversion from 'ptrdiff_t' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(206) : warning C4244: 'initializing' : conversion from 'ptrdiff_t' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(220) : warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(224) : warning C4244: '=' : conversion from 'ptrdiff_t' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(251) : warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(329) : warning C4244: 'return' : conversion from 'ptrdiff_t' to 'int', possible loss of data","Fixes:
C:\projects\mruby\src\fmt_fp.c(123) : warning C4244: 'return' : conversion from 'ptrdiff_t' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(178) : warning C4244: 'return' : conversion from 'ptrdiff_t' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(206) : warning C4244: 'initializing' : conversion from 'ptrdiff_t' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(220) : warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(224) : warning C4244: '=' : conversion from 'ptrdiff_t' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(251) : warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data
C:\projects\mruby\src\fmt_fp.c(329) : warning C4244: 'return' : conversion from 'ptrdiff_t' to 'int', possible loss of data",True,{}
mruby/mruby,https://github.com/mruby/mruby,3792,2017-08-25T12:37:33Z,2017-08-25T17:00:30Z,2017-08-25T17:00:30Z,MERGED,True,1,1,1,https://github.com/dabroz,Fix string test with 16-bit integers,1,[],https://github.com/mruby/mruby/pull/3792,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3792,"Fixed test:
$ CFLAGS='-DMRB_INT16=1' rake test
[...]
ArgumentError: String#% %d => number (100000) too big for integer (mrbgems: mruby-sprintf)
Skip: Struct.new removes existing constant  redefining Struct with same name cause warnings
Skip: Module#prepend super in alias  super does not currently work in aliased methods
Total: 970
   OK: 969
   KO: 0
Crash: 1
 Time: 0.27 seconds
rake aborted!
Command failed with status (1): [""build/test/bin/mrbtest""...]
[...]","Fixed test:
$ CFLAGS='-DMRB_INT16=1' rake test
[...]
ArgumentError: String#% %d => number (100000) too big for integer (mrbgems: mruby-sprintf)
Skip: Struct.new removes existing constant  redefining Struct with same name cause warnings
Skip: Module#prepend super in alias  super does not currently work in aliased methods
Total: 970
   OK: 969
   KO: 0
Crash: 1
 Time: 0.27 seconds
rake aborted!
Command failed with status (1): [""build/test/bin/mrbtest""...]
[...]",True,{}
mruby/mruby,https://github.com/mruby/mruby,3794,2017-08-26T10:13:12Z,2017-08-26T13:29:01Z,2017-08-26T13:29:01Z,MERGED,True,3,0,1,https://github.com/dabroz,Fix building with MRB_USE_FLOAT=1,1,[],https://github.com/mruby/mruby/pull/3794,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3794,"Fixes:
/builds/dabroz/mruby/mrbgems/mruby-range-ext/src/range.c:142:71: error: use of undeclared identifier 'FLT_EPSILON'
    mrb_float err = (fabs(beg_f) + fabs(end_f) + fabs(end_f-beg_f)) * MRB_FLOAT_EPSILON;
                                                                      ^
/builds/dabroz/mruby/include/mruby.h:76:27: note: expanded from macro 'MRB_FLOAT_EPSILON'
#define MRB_FLOAT_EPSILON FLT_EPSILON
                          ^
1 error generated.","Fixes:
/builds/dabroz/mruby/mrbgems/mruby-range-ext/src/range.c:142:71: error: use of undeclared identifier 'FLT_EPSILON'
    mrb_float err = (fabs(beg_f) + fabs(end_f) + fabs(end_f-beg_f)) * MRB_FLOAT_EPSILON;
                                                                      ^
/builds/dabroz/mruby/include/mruby.h:76:27: note: expanded from macro 'MRB_FLOAT_EPSILON'
#define MRB_FLOAT_EPSILON FLT_EPSILON
                          ^
1 error generated.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3795,2017-08-26T13:59:49Z,2017-08-26T23:56:42Z,2017-08-26T23:56:42Z,MERGED,True,49,25,2,https://github.com/christopheraue,Array refactorings and speed improvements,3,[],https://github.com/mruby/mruby/pull/3795,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3795,,,True,{'THUMBS_UP': ['https://github.com/0x1eef']}
mruby/mruby,https://github.com/mruby/mruby,3799,2017-08-29T21:29:53Z,2017-08-30T05:47:13Z,2017-08-30T15:32:12Z,MERGED,True,32,43,2,https://github.com/christopheraue,Refactored #assert_raise and #assert_nothing_raised,1,[],https://github.com/mruby/mruby/pull/3799,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3799,assert_nothing_raised didn't check the given exceptions anyway.,assert_nothing_raised didn't check the given exceptions anyway.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3799,2017-08-29T21:29:53Z,2017-08-30T05:47:13Z,2017-08-30T15:32:12Z,MERGED,True,32,43,2,https://github.com/christopheraue,Refactored #assert_raise and #assert_nothing_raised,1,[],https://github.com/mruby/mruby/pull/3799,https://github.com/tsahara,2,https://github.com/mruby/mruby/pull/3799#issuecomment-325918047,assert_nothing_raised didn't check the given exceptions anyway.,"assert_raise API is changed accidentally.  Before this pull request was merged, assert_raise checked that the raised exception was one of the arguments of assert_raise.  Now we can specify only one exception class.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3799,2017-08-29T21:29:53Z,2017-08-30T05:47:13Z,2017-08-30T15:32:12Z,MERGED,True,32,43,2,https://github.com/christopheraue,Refactored #assert_raise and #assert_nothing_raised,1,[],https://github.com/mruby/mruby/pull/3799,https://github.com/christopheraue,3,https://github.com/mruby/mruby/pull/3799#issuecomment-325927292,assert_nothing_raised didn't check the given exceptions anyway.,"Ok, I'm going to fix that. But I'm curious in which cases you use it that way. Because only the first raised exception will be catched in assert_raise anyway.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3799,2017-08-29T21:29:53Z,2017-08-30T05:47:13Z,2017-08-30T15:32:12Z,MERGED,True,32,43,2,https://github.com/christopheraue,Refactored #assert_raise and #assert_nothing_raised,1,[],https://github.com/mruby/mruby/pull/3799,https://github.com/tsahara,4,https://github.com/mruby/mruby/pull/3799#issuecomment-326018467,assert_nothing_raised didn't check the given exceptions anyway.,"This test case (a regression test for #2800) raises TypeError on master and 1.3.0 but ArgumentError on 1.2.0 and our stable version of mruby based on 1.1.0.  It should accept both TypeError and ArgumentError to run it on multiple versions of mruby.
Thanks for the fix!",True,{}
mruby/mruby,https://github.com/mruby/mruby,3799,2017-08-29T21:29:53Z,2017-08-30T05:47:13Z,2017-08-30T15:32:12Z,MERGED,True,32,43,2,https://github.com/christopheraue,Refactored #assert_raise and #assert_nothing_raised,1,[],https://github.com/mruby/mruby/pull/3799,https://github.com/christopheraue,5,https://github.com/mruby/mruby/pull/3799#issuecomment-326028572,assert_nothing_raised didn't check the given exceptions anyway.,"Ah, ok. Thanks for clearing that up.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3801,2017-08-30T09:07:02Z,2017-08-30T09:57:00Z,2017-08-30T09:57:00Z,MERGED,True,4,2,1,https://github.com/christopheraue,Allowed to pass multiple exceptions to assert_raise,1,[],https://github.com/mruby/mruby/pull/3801,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3801,re #3799 (comment),re #3799 (comment),True,{}
mruby/mruby,https://github.com/mruby/mruby,3802,2017-08-30T10:29:20Z,2017-09-02T13:19:16Z,2017-09-02T14:08:40Z,MERGED,True,18,0,2,https://github.com/christopheraue,Tested local jump errors caused by break in a proc,1,[],https://github.com/mruby/mruby/pull/3802,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3802,re #3798,re #3798,True,{}
mruby/mruby,https://github.com/mruby/mruby,3805,2017-09-02T16:29:25Z,2017-09-02T22:48:34Z,2017-09-02T22:48:34Z,MERGED,True,1,0,1,https://github.com/fl0l0u,Update print.c,1,[],https://github.com/mruby/mruby/pull/3805,https://github.com/fl0l0u,1,https://github.com/mruby/mruby/pull/3805,"Strings not containing a newline are not printed synchronously
ex. bin/mruby -e '[""a"", ""b"", ""c"", ""\n"", ""d"", ""e"", ""f"", ""\n""].each {|e| print e ; usleep 200000}'","Strings not containing a newline are not printed synchronously
ex. bin/mruby -e '[""a"", ""b"", ""c"", ""\n"", ""d"", ""e"", ""f"", ""\n""].each {|e| print e ; usleep 200000}'",True,{}
mruby/mruby,https://github.com/mruby/mruby,3806,2017-09-02T16:29:27Z,2017-09-02T22:51:13Z,2017-09-02T23:23:45Z,MERGED,True,5,1,1,None,Trying to make the code more readable,1,[],https://github.com/mruby/mruby/pull/3806,None,1,https://github.com/mruby/mruby/pull/3806,"Hi all,
I'm running some C code analysis tool that pointed me to this small code fragment. I'm suggesting this patch to try to make the source code more understandable by removing mixing of ternary if statements with attributions.
Would you guys agree with this type of changes? The tools pointed me to almost 20 cases like this one in the source code of mruby.","Hi all,
I'm running some C code analysis tool that pointed me to this small code fragment. I'm suggesting this patch to try to make the source code more understandable by removing mixing of ternary if statements with attributions.
Would you guys agree with this type of changes? The tools pointed me to almost 20 cases like this one in the source code of mruby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3806,2017-09-02T16:29:27Z,2017-09-02T22:51:13Z,2017-09-02T23:23:45Z,MERGED,True,5,1,1,None,Trying to make the code more readable,1,[],https://github.com/mruby/mruby/pull/3806,https://github.com/christopheraue,2,https://github.com/mruby/mruby/pull/3806#issuecomment-326762249,"Hi all,
I'm running some C code analysis tool that pointed me to this small code fragment. I'm suggesting this patch to try to make the source code more understandable by removing mixing of ternary if statements with attributions.
Would you guys agree with this type of changes? The tools pointed me to almost 20 cases like this one in the source code of mruby.","I'm not a fan of these one-short-line-per-branch if statements. They have too much visual weight for the single operation they mostly only do. In this case, the ternary version also better emphasizes the assignment because it starts with it. But that's just my view...",True,"{'THUMBS_UP': ['https://github.com/fundamental', 'https://github.com/dabroz']}"
mruby/mruby,https://github.com/mruby/mruby,3813,2017-09-25T11:14:03Z,2017-09-25T11:19:14Z,2017-09-25T11:19:14Z,MERGED,True,3,3,1,https://github.com/dabroz,Change DISABLE_STDIO to MRB_DISABLE_STDIO in mruby-time/time.c,1,[],https://github.com/mruby/mruby/pull/3813,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3813,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3814,2017-09-25T11:19:47Z,2021-05-13T10:33:49Z,2021-05-13T10:33:49Z,CLOSED,False,23,2,2,https://github.com/dabroz,allow to override default printing function,1,[],https://github.com/mruby/mruby/pull/3814,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3814,"mrb_state now features a mrb_print_func callback, that allows to use custom printing function to be used instead of the default fprintf implementation, like __android_log_print (Android) or OutputDebugString (Win32).
Fixes #3734","mrb_state now features a mrb_print_func callback, that allows to use custom printing function to be used instead of the default fprintf implementation, like __android_log_print (Android) or OutputDebugString (Win32).
Fixes #3734",True,"{'THUMBS_UP': ['https://github.com/fundamental', 'https://github.com/fourmond', 'https://github.com/ppibburr']}"
mruby/mruby,https://github.com/mruby/mruby,3814,2017-09-25T11:19:47Z,2021-05-13T10:33:49Z,2021-05-13T10:33:49Z,CLOSED,False,23,2,2,https://github.com/dabroz,allow to override default printing function,1,[],https://github.com/mruby/mruby/pull/3814,https://github.com/dabroz,2,https://github.com/mruby/mruby/pull/3814#issuecomment-335294901,"mrb_state now features a mrb_print_func callback, that allows to use custom printing function to be used instead of the default fprintf implementation, like __android_log_print (Android) or OutputDebugString (Win32).
Fixes #3734",@matz any comment on this?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3814,2017-09-25T11:19:47Z,2021-05-13T10:33:49Z,2021-05-13T10:33:49Z,CLOSED,False,23,2,2,https://github.com/dabroz,allow to override default printing function,1,[],https://github.com/mruby/mruby/pull/3814,https://github.com/fourmond,3,https://github.com/mruby/mruby/pull/3814#issuecomment-335296790,"mrb_state now features a mrb_print_func callback, that allows to use custom printing function to be used instead of the default fprintf implementation, like __android_log_print (Android) or OutputDebugString (Win32).
Fixes #3734","This would definitely come in useful for me, someday.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3815,2017-09-25T15:31:21Z,2017-09-28T15:18:40Z,2017-09-28T15:18:40Z,MERGED,True,92,66,31,https://github.com/dabroz,Fix MSVC 14.0 warnings,58,[],https://github.com/mruby/mruby/pull/3815,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3815,"I fixed all warnings exposed by Appveyor MSVC 14.0, except one related to exception handling. Mostly fixing int vs mrb_int casts.","I fixed all warnings exposed by Appveyor MSVC 14.0, except one related to exception handling. Mostly fixing int vs mrb_int casts.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3815,2017-09-25T15:31:21Z,2017-09-28T15:18:40Z,2017-09-28T15:18:40Z,MERGED,True,92,66,31,https://github.com/dabroz,Fix MSVC 14.0 warnings,58,[],https://github.com/mruby/mruby/pull/3815,https://github.com/dabroz,2,https://github.com/mruby/mruby/pull/3815#issuecomment-332509801,"I fixed all warnings exposed by Appveyor MSVC 14.0, except one related to exception handling. Mostly fixing int vs mrb_int casts.",Fixed all mentioned issues.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3820,2017-10-04T14:08:00Z,2017-12-12T15:23:11Z,2017-12-12T15:23:11Z,CLOSED,False,149,12,5,https://github.com/christopheraue,Improved Kernel#raise,3,[],https://github.com/mruby/mruby/pull/3820,https://github.com/christopheraue,1,https://github.com/mruby/mruby/pull/3820,"raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.","raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3820,2017-10-04T14:08:00Z,2017-12-12T15:23:11Z,2017-12-12T15:23:11Z,CLOSED,False,149,12,5,https://github.com/christopheraue,Improved Kernel#raise,3,[],https://github.com/mruby/mruby/pull/3820,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3820#issuecomment-334173201,"raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.",Unfortunately AppVeyor build failed.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3820,2017-10-04T14:08:00Z,2017-12-12T15:23:11Z,2017-12-12T15:23:11Z,CLOSED,False,149,12,5,https://github.com/christopheraue,Improved Kernel#raise,3,[],https://github.com/mruby/mruby/pull/3820,https://github.com/christopheraue,3,https://github.com/mruby/mruby/pull/3820#issuecomment-334174564,"raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.","Yep, all builds failed. Wasn't considering running tests in a non-debug environment for a start...",True,{}
mruby/mruby,https://github.com/mruby/mruby,3820,2017-10-04T14:08:00Z,2017-12-12T15:23:11Z,2017-12-12T15:23:11Z,CLOSED,False,149,12,5,https://github.com/christopheraue,Improved Kernel#raise,3,[],https://github.com/mruby/mruby/pull/3820,https://github.com/christopheraue,4,https://github.com/mruby/mruby/pull/3820#issuecomment-334200793,"raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.","Builds with Linux, OSX and Visual Studio 14 are now fixed. But there is still a kind of strange failing test for Visual Studio 12. Despite the fact that it reports equal things as not equal the changes here do not have anything to do with mruby-eval. Any ideas?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3820,2017-10-04T14:08:00Z,2017-12-12T15:23:11Z,2017-12-12T15:23:11Z,CLOSED,False,149,12,5,https://github.com/christopheraue,Improved Kernel#raise,3,[],https://github.com/mruby/mruby/pull/3820,https://github.com/ksss,5,https://github.com/mruby/mruby/pull/3820#issuecomment-334368443,"raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.","Why did you chose NotImplementedError instead of RuntimeError when raise with no arguments?
It seems different from ISO definition and CRuby behavior.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3820,2017-10-04T14:08:00Z,2017-12-12T15:23:11Z,2017-12-12T15:23:11Z,CLOSED,False,149,12,5,https://github.com/christopheraue,Improved Kernel#raise,3,[],https://github.com/mruby/mruby/pull/3820,https://github.com/christopheraue,6,https://github.com/mruby/mruby/pull/3820#issuecomment-334388728,"raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.","Because I've looked at it from the re-raise perspective only:
begin
  raise StandardError, 'error'
rescue
  raise
end

This is not supported by mruby. I've actually had this in my mruby code and wondered where the hell the RuntimeError without message came from. With no hint, that this is an mruby limitation. With that in mind I simply forgot that just a raise outside a rescue block should raise a RuntimeError without a message.
I'll differentiate between a raise inside and outside a rescue block. I just have to figure out how...",True,{}
mruby/mruby,https://github.com/mruby/mruby,3820,2017-10-04T14:08:00Z,2017-12-12T15:23:11Z,2017-12-12T15:23:11Z,CLOSED,False,149,12,5,https://github.com/christopheraue,Improved Kernel#raise,3,[],https://github.com/mruby/mruby/pull/3820,https://github.com/christopheraue,7,https://github.com/mruby/mruby/pull/3820#issuecomment-334541076,"raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.","Distinguishing between the inside and outside of rescue blocks involves too much work for now. I removed the commit that changed the behavior of raise without arguments.
assert_raise_msg has been renamed to assert_raise_with_message.
Visual Studio 12 is still complaining.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3820,2017-10-04T14:08:00Z,2017-12-12T15:23:11Z,2017-12-12T15:23:11Z,CLOSED,False,149,12,5,https://github.com/christopheraue,Improved Kernel#raise,3,[],https://github.com/mruby/mruby/pull/3820,https://github.com/Asmod4n,8,https://github.com/mruby/mruby/pull/3820#issuecomment-335222806,"raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.","eval is currently broken (i believe), see #3817",True,{}
mruby/mruby,https://github.com/mruby/mruby,3820,2017-10-04T14:08:00Z,2017-12-12T15:23:11Z,2017-12-12T15:23:11Z,CLOSED,False,149,12,5,https://github.com/christopheraue,Improved Kernel#raise,3,[],https://github.com/mruby/mruby/pull/3820,https://github.com/christopheraue,9,https://github.com/mruby/mruby/pull/3820#issuecomment-341660156,"raise with no arguments now raises a NotImplementedError with a proper message. (removed, see below)
Re-raised errors now keep their backtrace like in CRuby. (already added by #3840 in the meantime)
raise exc, msg, backtrace with a backtrace as third argument is now supported.","With the recent changes on master and #3817 fixed I rebased this PR on the latest master. All tests pass now.
Also, #3840 already fixed keeping backtraces in the meantime so I removed my changes in this regard.",True,{'THUMBS_UP': ['https://github.com/take-cheeze']}
mruby/mruby,https://github.com/mruby/mruby,3824,2017-10-09T00:02:28Z,2017-10-09T03:39:14Z,2017-10-09T03:39:14Z,MERGED,True,4,3,1,https://github.com/nobu,Bug/paren arg,2,[],https://github.com/mruby/mruby/pull/3824,https://github.com/nobu,1,https://github.com/mruby/mruby/pull/3824,"trick2013/yhara/entry.rb has a conditional operator ? just followed by a local variable,String===x ?x.upcase:.
mruby parses it as a string literal.
$ ~-/bin/mruby -v -c sample/trick2013/yhara/entry.rb 
mruby 1.3.0 (2017-7-4) 
sample/trick2013/yhara/entry.rb:1:37: syntax error, unexpected tCHAR, expecting keyword_do or '{' or '('
sample/trick2013/yhara/entry.rb:1:45: syntax error, unexpected ':', expecting ')'
SyntaxError: syntax error","trick2013/yhara/entry.rb has a conditional operator ? just followed by a local variable,String===x ?x.upcase:.
mruby parses it as a string literal.
$ ~-/bin/mruby -v -c sample/trick2013/yhara/entry.rb 
mruby 1.3.0 (2017-7-4) 
sample/trick2013/yhara/entry.rb:1:37: syntax error, unexpected tCHAR, expecting keyword_do or '{' or '('
sample/trick2013/yhara/entry.rb:1:45: syntax error, unexpected ':', expecting ')'
SyntaxError: syntax error",True,{}
mruby/mruby,https://github.com/mruby/mruby,3826,2017-10-10T16:43:44Z,2017-10-17T06:24:21Z,2017-10-17T06:24:21Z,MERGED,True,41,12,2,https://github.com/dabroz,correctly handle *splat arguments in mrb_get_argc,1,[],https://github.com/mruby/mruby/pull/3826,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3826,"also add mrb_vm_get_argc and mrb_get_argv
Fixes #3825
It doesn't look like the original version of mrb_get_argc was used anywhere in mruby.","also add mrb_vm_get_argc and mrb_get_argv
Fixes #3825
It doesn't look like the original version of mrb_get_argc was used anywhere in mruby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3827,2017-10-11T11:32:40Z,2017-11-04T03:33:23Z,2019-01-03T02:40:36Z,MERGED,True,448,61,48,https://github.com/pandax381,Add MRB_WITHOUT_FLOAT option,11,[],https://github.com/mruby/mruby/pull/3827,https://github.com/pandax381,1,https://github.com/mruby/mruby/pull/3827,"This option removes floating point numbers from mruby.
It makes mruby easier to handle in ""Microcontroller without FPU"" and ""Kernel Space"".
configuration
MRuby::Build.new do |conf|
  toolchain :gcc

  enable_debug

  conf.cc do |cc|
    cc.defines << %w(MRB_WITHOUT_FLOAT)
  end

  conf.enable_test

  conf.gem :core => ""mruby-print""
  conf.gem :core => ""mruby-bin-mirb""
end

This option only supports minimal mgems.
Therefore, conf.gembox 'default' can not be specified.
results
$ MRUBY_CONFIG=custom_config.rb make test

...(snip)...

Build summary:

================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc, mrbtest
    Included Gems:
             mruby-print - standard print/puts/p
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-bin-mrbc - mruby compiler executable
             mruby-test - mruby test
================================================

>>> Test host <<<
mrbtest - Embeddable Ruby Test


Skip: Module#prepend super in alias  super does not currently work in aliased methods
Skip: Direct superclass of Float 15.2.9.2 Float isn't defined
Total: 593
   OK: 593
   KO: 0
Crash: 0

confirm by default setting
$ make test

...(snip)...

Build summary:

================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-bin-mrbc - mruby compiler executable
================================================

================================================
      Config Name: host-debug
 Output Directory: build/host-debug
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-eval - standard Kernel#eval method
             mruby-bin-debugger - mruby debugger command
               - Binaries: mrdb
================================================

================================================
      Config Name: test
 Output Directory: build/test
         Binaries: mrbtest
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-test - mruby test
================================================

================================================
      Config Name: bench
 Output Directory: build/bench
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
================================================

>>> Test test <<<
mrbtest - Embeddable Ruby Test


Skip: Struct.new removes existing constant  redefining Struct with same name cause warnings
Skip: Module#prepend super in alias  super does not currently work in aliased methods
Total: 974
   OK: 974
   KO: 0
Crash: 0
 Time: 0.39 seconds

................
Total: 16
   OK: 16
   KO: 0
Crash: 0
 Time: 0.4 seconds","This option removes floating point numbers from mruby.
It makes mruby easier to handle in ""Microcontroller without FPU"" and ""Kernel Space"".
configuration
MRuby::Build.new do |conf|
  toolchain :gcc

  enable_debug

  conf.cc do |cc|
    cc.defines << %w(MRB_WITHOUT_FLOAT)
  end

  conf.enable_test

  conf.gem :core => ""mruby-print""
  conf.gem :core => ""mruby-bin-mirb""
end

This option only supports minimal mgems.
Therefore, conf.gembox 'default' can not be specified.
results
$ MRUBY_CONFIG=custom_config.rb make test

...(snip)...

Build summary:

================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc, mrbtest
    Included Gems:
             mruby-print - standard print/puts/p
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-bin-mrbc - mruby compiler executable
             mruby-test - mruby test
================================================

>>> Test host <<<
mrbtest - Embeddable Ruby Test


Skip: Module#prepend super in alias  super does not currently work in aliased methods
Skip: Direct superclass of Float 15.2.9.2 Float isn't defined
Total: 593
   OK: 593
   KO: 0
Crash: 0

confirm by default setting
$ make test

...(snip)...

Build summary:

================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-bin-mrbc - mruby compiler executable
================================================

================================================
      Config Name: host-debug
 Output Directory: build/host-debug
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-eval - standard Kernel#eval method
             mruby-bin-debugger - mruby debugger command
               - Binaries: mrdb
================================================

================================================
      Config Name: test
 Output Directory: build/test
         Binaries: mrbtest
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-test - mruby test
================================================

================================================
      Config Name: bench
 Output Directory: build/bench
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
================================================

>>> Test test <<<
mrbtest - Embeddable Ruby Test


Skip: Struct.new removes existing constant  redefining Struct with same name cause warnings
Skip: Module#prepend super in alias  super does not currently work in aliased methods
Total: 974
   OK: 974
   KO: 0
Crash: 0
 Time: 0.39 seconds

................
Total: 16
   OK: 16
   KO: 0
Crash: 0
 Time: 0.4 seconds",True,{}
mruby/mruby,https://github.com/mruby/mruby,3827,2017-10-11T11:32:40Z,2017-11-04T03:33:23Z,2019-01-03T02:40:36Z,MERGED,True,448,61,48,https://github.com/pandax381,Add MRB_WITHOUT_FLOAT option,11,[],https://github.com/mruby/mruby/pull/3827,https://github.com/christopheraue,2,https://github.com/mruby/mruby/pull/3827#issuecomment-335801240,"This option removes floating point numbers from mruby.
It makes mruby easier to handle in ""Microcontroller without FPU"" and ""Kernel Space"".
configuration
MRuby::Build.new do |conf|
  toolchain :gcc

  enable_debug

  conf.cc do |cc|
    cc.defines << %w(MRB_WITHOUT_FLOAT)
  end

  conf.enable_test

  conf.gem :core => ""mruby-print""
  conf.gem :core => ""mruby-bin-mirb""
end

This option only supports minimal mgems.
Therefore, conf.gembox 'default' can not be specified.
results
$ MRUBY_CONFIG=custom_config.rb make test

...(snip)...

Build summary:

================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc, mrbtest
    Included Gems:
             mruby-print - standard print/puts/p
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-bin-mrbc - mruby compiler executable
             mruby-test - mruby test
================================================

>>> Test host <<<
mrbtest - Embeddable Ruby Test


Skip: Module#prepend super in alias  super does not currently work in aliased methods
Skip: Direct superclass of Float 15.2.9.2 Float isn't defined
Total: 593
   OK: 593
   KO: 0
Crash: 0

confirm by default setting
$ make test

...(snip)...

Build summary:

================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-bin-mrbc - mruby compiler executable
================================================

================================================
      Config Name: host-debug
 Output Directory: build/host-debug
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-eval - standard Kernel#eval method
             mruby-bin-debugger - mruby debugger command
               - Binaries: mrdb
================================================

================================================
      Config Name: test
 Output Directory: build/test
         Binaries: mrbtest
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-test - mruby test
================================================

================================================
      Config Name: bench
 Output Directory: build/bench
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
================================================

>>> Test test <<<
mrbtest - Embeddable Ruby Test


Skip: Struct.new removes existing constant  redefining Struct with same name cause warnings
Skip: Module#prepend super in alias  super does not currently work in aliased methods
Total: 974
   OK: 974
   KO: 0
Crash: 0
 Time: 0.39 seconds

................
Total: 16
   OK: 16
   KO: 0
Crash: 0
 Time: 0.4 seconds","Had a look a the failing AppVeyor build
Fail: rest arguments of eval (mrbgems: mruby-eval)
 - Assertion[2] Failed: Expected to be equal
    Expected: [""test"", ""test.rb"", 10]
      Actual: [""test"", ""test.rb"", 10]

FYI, this also happened in #3820 recently. mruby-eval currently probably has a memory referencing issue. This is to be fixed elsewhere.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3827,2017-10-11T11:32:40Z,2017-11-04T03:33:23Z,2019-01-03T02:40:36Z,MERGED,True,448,61,48,https://github.com/pandax381,Add MRB_WITHOUT_FLOAT option,11,[],https://github.com/mruby/mruby/pull/3827,https://github.com/pandax381,3,https://github.com/mruby/mruby/pull/3827#issuecomment-341764289,"This option removes floating point numbers from mruby.
It makes mruby easier to handle in ""Microcontroller without FPU"" and ""Kernel Space"".
configuration
MRuby::Build.new do |conf|
  toolchain :gcc

  enable_debug

  conf.cc do |cc|
    cc.defines << %w(MRB_WITHOUT_FLOAT)
  end

  conf.enable_test

  conf.gem :core => ""mruby-print""
  conf.gem :core => ""mruby-bin-mirb""
end

This option only supports minimal mgems.
Therefore, conf.gembox 'default' can not be specified.
results
$ MRUBY_CONFIG=custom_config.rb make test

...(snip)...

Build summary:

================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc, mrbtest
    Included Gems:
             mruby-print - standard print/puts/p
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-bin-mrbc - mruby compiler executable
             mruby-test - mruby test
================================================

>>> Test host <<<
mrbtest - Embeddable Ruby Test


Skip: Module#prepend super in alias  super does not currently work in aliased methods
Skip: Direct superclass of Float 15.2.9.2 Float isn't defined
Total: 593
   OK: 593
   KO: 0
Crash: 0

confirm by default setting
$ make test

...(snip)...

Build summary:

================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-bin-mrbc - mruby compiler executable
================================================

================================================
      Config Name: host-debug
 Output Directory: build/host-debug
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-eval - standard Kernel#eval method
             mruby-bin-debugger - mruby debugger command
               - Binaries: mrdb
================================================

================================================
      Config Name: test
 Output Directory: build/test
         Binaries: mrbtest
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
             mruby-test - mruby test
================================================

================================================
      Config Name: bench
 Output Directory: build/bench
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - Object class extension
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - Kernel module extension
             mruby-class-ext - class/module extension
================================================

>>> Test test <<<
mrbtest - Embeddable Ruby Test


Skip: Struct.new removes existing constant  redefining Struct with same name cause warnings
Skip: Module#prepend super in alias  super does not currently work in aliased methods
Total: 974
   OK: 974
   KO: 0
Crash: 0
 Time: 0.39 seconds

................
Total: 16
   OK: 16
   KO: 0
Crash: 0
 Time: 0.4 seconds",All tests passed.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3828,2017-10-12T08:00:29Z,2017-10-12T11:19:25Z,2017-10-12T11:19:25Z,MERGED,True,1,1,1,https://github.com/asfluido,Correct a small error in parse.y,1,[],https://github.com/mruby/mruby/pull/3828,https://github.com/asfluido,1,https://github.com/mruby/mruby/pull/3828,"While running mruby with address sanitizer, it detected a small error in parse.y where some bytes are copied from an unallocated area. This practically causes no harm because the location is immediately rewritten with correct data, but I had to correct it in order to continue with my debugging.
You may want to fix it in the official repo.","While running mruby with address sanitizer, it detected a small error in parse.y where some bytes are copied from an unallocated area. This practically causes no harm because the location is immediately rewritten with correct data, but I had to correct it in order to continue with my debugging.
You may want to fix it in the official repo.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3830,2017-10-15T16:46:35Z,2017-10-16T09:45:53Z,2018-12-23T09:12:01Z,MERGED,True,11,18,1,https://github.com/dearblue,fix alias for Struct accessors,1,[],https://github.com/mruby/mruby/pull/3830,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/3830,"Fix alias for Struct accessors.
Currently:
X = Struct.new(:a, :set_to_)
class X
  alias set_to_a a=
end

p x = X.new(1, 2)
# => #<struct a=1, set_to_=2>

x.set_to_a :CHANGED

p x
# => #<struct a=1, set_to_=:CHANGED>

Patched:
X = Struct.new(:a, :set_to_)
class X
  alias set_to_a a=
end

p x = X.new(1, 2)
# => #<struct a=1, set_to_=2>

x.set_to_a :CHANGED

p x
# => #<struct a=:CHANGED, set_to_=2>


Different object size by clang-4.0 on FreeBSD 11.1R amd64:
$ readelf -s build/host/mrbgems/mruby-struct/src/struct.o


Currently:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     5: 0000000000001d20   408 FUNC    LOCAL  DEFAULT    2 make_struct_define_accessors
    24: 0000000000002140    76 FUNC    LOCAL  DEFAULT    2 mrb_struct_ref
    27: 0000000000002230   158 FUNC    LOCAL  DEFAULT    2 mrb_struct_set_m



Patched:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     5: 0000000000001d20   502 FUNC    LOCAL  DEFAULT    2 make_struct_define_accessors
    24: 00000000000021d0   133 FUNC    LOCAL  DEFAULT    2 mrb_struct_ref
    27: 0000000000002260   189 FUNC    LOCAL  DEFAULT    2 mrb_struct_set_m



Thank you.","Fix alias for Struct accessors.
Currently:
X = Struct.new(:a, :set_to_)
class X
  alias set_to_a a=
end

p x = X.new(1, 2)
# => #<struct a=1, set_to_=2>

x.set_to_a :CHANGED

p x
# => #<struct a=1, set_to_=:CHANGED>

Patched:
X = Struct.new(:a, :set_to_)
class X
  alias set_to_a a=
end

p x = X.new(1, 2)
# => #<struct a=1, set_to_=2>

x.set_to_a :CHANGED

p x
# => #<struct a=:CHANGED, set_to_=2>


Different object size by clang-4.0 on FreeBSD 11.1R amd64:
$ readelf -s build/host/mrbgems/mruby-struct/src/struct.o


Currently:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     5: 0000000000001d20   408 FUNC    LOCAL  DEFAULT    2 make_struct_define_accessors
    24: 0000000000002140    76 FUNC    LOCAL  DEFAULT    2 mrb_struct_ref
    27: 0000000000002230   158 FUNC    LOCAL  DEFAULT    2 mrb_struct_set_m



Patched:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     5: 0000000000001d20   502 FUNC    LOCAL  DEFAULT    2 make_struct_define_accessors
    24: 00000000000021d0   133 FUNC    LOCAL  DEFAULT    2 mrb_struct_ref
    27: 0000000000002260   189 FUNC    LOCAL  DEFAULT    2 mrb_struct_set_m



Thank you.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3833,2017-10-24T13:24:48Z,2017-10-24T15:31:45Z,2017-10-24T15:31:45Z,MERGED,True,15,4,2,https://github.com/bggd,Appveyor Improvements,3,[],https://github.com/mruby/mruby/pull/3833,https://github.com/bggd,1,https://github.com/mruby/mruby/pull/3833,"Current appveyor.yml uses PATH to add Cygwin's bin directory for using bison. If Cygwin's ruby overrides AppVeyor's default Ruby, It might be bad for bintest of mruby.","Current appveyor.yml uses PATH to add Cygwin's bin directory for using bison. If Cygwin's ruby overrides AppVeyor's default Ruby, It might be bad for bintest of mruby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3836,2017-10-28T07:53:57Z,2017-10-28T14:37:35Z,2017-10-29T04:07:08Z,CLOSED,False,0,1,1,https://github.com/ukrainskiysergey,Remove one of the lines that did the same thing,1,[],https://github.com/mruby/mruby/pull/3836,https://github.com/ukrainskiysergey,1,https://github.com/mruby/mruby/pull/3836,"This line is apparently useless, because a bit lower there is almost the same line.","This line is apparently useless, because a bit lower there is almost the same line.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3836,2017-10-28T07:53:57Z,2017-10-28T14:37:35Z,2017-10-29T04:07:08Z,CLOSED,False,0,1,1,https://github.com/ukrainskiysergey,Remove one of the lines that did the same thing,1,[],https://github.com/mruby/mruby/pull/3836,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3836#issuecomment-340195757,"This line is apparently useless, because a bit lower there is almost the same line.",I' d rather remove the other line.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3840,2017-11-02T06:59:15Z,2017-11-02T12:36:27Z,2017-11-02T14:37:53Z,MERGED,True,6,2,2,https://github.com/tsahara,don't strip away backtrace info when an exception is re-thrown,1,[],https://github.com/mruby/mruby/pull/3840,https://github.com/tsahara,1,https://github.com/mruby/mruby/pull/3840,"When an exception is not caught by rescue cluases of the current block, mruby re-throw it using OP_RAISE.  ButOP_RAISE overwrites backtrace information of the exception unconditionally so a part of backtrace information is stripped away.
% cat a.rb
def fun
  begin
    xyzzy
  rescue NoMemoryError
  end
end

fun
% bin/mruby a.rb
trace:
        [0] a.rb:8
a.rb:8: undefined method 'xyzzy' for main (NoMethodError)

The backtrace output above does not point to the location where an exception was originally thrown, but the caller of the procedure.  With this patch, mruby points to the correct location.
% bin/mruby a.rb
trace:
        [0] a.rb:8
        [1] a.rb:3:in fun
a.rb:3: undefined method 'xyzzy' for main (NoMethodError)","When an exception is not caught by rescue cluases of the current block, mruby re-throw it using OP_RAISE.  ButOP_RAISE overwrites backtrace information of the exception unconditionally so a part of backtrace information is stripped away.
% cat a.rb
def fun
  begin
    xyzzy
  rescue NoMemoryError
  end
end

fun
% bin/mruby a.rb
trace:
        [0] a.rb:8
a.rb:8: undefined method 'xyzzy' for main (NoMethodError)

The backtrace output above does not point to the location where an exception was originally thrown, but the caller of the procedure.  With this patch, mruby points to the correct location.
% bin/mruby a.rb
trace:
        [0] a.rb:8
        [1] a.rb:3:in fun
a.rb:3: undefined method 'xyzzy' for main (NoMethodError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,3851,2017-11-17T10:49:06Z,2017-11-17T11:04:38Z,2017-11-17T11:04:40Z,MERGED,True,3,3,1,https://github.com/ukrainskiysergey,Cosmetic changes in variable.c,2,[],https://github.com/mruby/mruby/pull/3851,https://github.com/ukrainskiysergey,1,https://github.com/mruby/mruby/pull/3851,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3851,2017-11-17T10:49:06Z,2017-11-17T11:04:38Z,2017-11-17T11:04:40Z,MERGED,True,3,3,1,https://github.com/ukrainskiysergey,Cosmetic changes in variable.c,2,[],https://github.com/mruby/mruby/pull/3851,https://github.com/apps/propr,2,https://github.com/mruby/mruby/pull/3851#issuecomment-345214391,,"Please provide your feedback on this pull request here.
Privacy statement: We don't store any personal information such as your email address or name. We ask for GitHub authentication as an anonymous identifier to account for duplicate feedback entries and to see people specific preferences.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3852,2017-11-17T11:40:41Z,2017-11-17T12:50:35Z,2017-11-17T12:50:37Z,MERGED,True,39,0,2,https://github.com/dabroz,implement Array.transpose,1,[],https://github.com/mruby/mruby/pull/3852,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3852,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3852,2017-11-17T11:40:41Z,2017-11-17T12:50:35Z,2017-11-17T12:50:37Z,MERGED,True,39,0,2,https://github.com/dabroz,implement Array.transpose,1,[],https://github.com/mruby/mruby/pull/3852,https://github.com/apps/propr,2,https://github.com/mruby/mruby/pull/3852#issuecomment-345235668,,"Please provide your feedback on this pull request here.
Privacy statement: We don't store any personal information such as your email address or name. We ask for GitHub authentication as an anonymous identifier to account for duplicate feedback entries and to see people specific preferences.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3853,2017-11-17T13:52:46Z,2017-11-17T15:03:51Z,2017-11-18T19:58:17Z,MERGED,True,2,4,1,https://github.com/ukrainskiysergey,XccRemoved useless conditionccc,1,[],https://github.com/mruby/mruby/pull/3853,https://github.com/ukrainskiysergey,1,https://github.com/mruby/mruby/pull/3853,"It seems that checking base does not make sense, because:

It looks like all calls of const_get implicitly guarantee that base is not null.
Neither mrb_obj_value nor mrb_funcall_argv does not seem to support null as an argument, so a segfault will occur anyway.","It seems that checking base does not make sense, because:

It looks like all calls of const_get implicitly guarantee that base is not null.
Neither mrb_obj_value nor mrb_funcall_argv does not seem to support null as an argument, so a segfault will occur anyway.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3853,2017-11-17T13:52:46Z,2017-11-17T15:03:51Z,2017-11-18T19:58:17Z,MERGED,True,2,4,1,https://github.com/ukrainskiysergey,XccRemoved useless conditionccc,1,[],https://github.com/mruby/mruby/pull/3853,https://github.com/apps/propr,2,https://github.com/mruby/mruby/pull/3853#issuecomment-345267768,"It seems that checking base does not make sense, because:

It looks like all calls of const_get implicitly guarantee that base is not null.
Neither mrb_obj_value nor mrb_funcall_argv does not seem to support null as an argument, so a segfault will occur anyway.","Please provide your feedback on this pull request here.
Privacy statement: We don't store any personal information such as your email address or name. We ask for GitHub authentication as an anonymous identifier to account for duplicate feedback entries and to see people specific preferences.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3868,2017-12-04T16:23:29Z,2017-12-04T21:47:22Z,2018-01-09T01:27:27Z,MERGED,True,1,1,1,https://github.com/bamchoh,Revise MRB_METHOD_PROC macro's argument,1,[],https://github.com/mruby/mruby/pull/3868,https://github.com/bamchoh,1,https://github.com/mruby/mruby/pull/3868,I revised MRB_METHOD_PROC macro's argument fn to m.,I revised MRB_METHOD_PROC macro's argument fn to m.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3868,2017-12-04T16:23:29Z,2017-12-04T21:47:22Z,2018-01-09T01:27:27Z,MERGED,True,1,1,1,https://github.com/bamchoh,Revise MRB_METHOD_PROC macro's argument,1,[],https://github.com/mruby/mruby/pull/3868,https://github.com/apps/propr,2,https://github.com/mruby/mruby/pull/3868#issuecomment-349117018,I revised MRB_METHOD_PROC macro's argument fn to m.,"Please provide your feedback on this pull request here.
Privacy statement: We don't store any personal information such as your email address or name. We ask for GitHub authentication as an anonymous identifier to account for duplicate feedback entries and to see people specific preferences.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3872,2017-12-08T02:49:05Z,2017-12-08T02:58:33Z,2018-01-24T10:28:01Z,CLOSED,False,31,6,4,https://github.com/take-cheeze,[WIP] Add sanitizer support in gcc like toolchain.,3,[],https://github.com/mruby/mruby/pull/3872,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3872,"Travis build of macos takes too much time to fix...
Is there any fast starting macos CI service?

 Define enable_sanitizer method in gcc like toolchain(including clang).
 Fix leak of mruby-socket test caused by tempnam.
 Need to fix travis osx build error.","Travis build of macos takes too much time to fix...
Is there any fast starting macos CI service?

 Define enable_sanitizer method in gcc like toolchain(including clang).
 Fix leak of mruby-socket test caused by tempnam.
 Need to fix travis osx build error.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3872,2017-12-08T02:49:05Z,2017-12-08T02:58:33Z,2018-01-24T10:28:01Z,CLOSED,False,31,6,4,https://github.com/take-cheeze,[WIP] Add sanitizer support in gcc like toolchain.,3,[],https://github.com/mruby/mruby/pull/3872,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3872#issuecomment-350158747,"Travis build of macos takes too much time to fix...
Is there any fast starting macos CI service?

 Define enable_sanitizer method in gcc like toolchain(including clang).
 Fix leak of mruby-socket test caused by tempnam.
 Need to fix travis osx build error.",We cannot accept this bundle of multi patches. Please resubmit.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3872,2017-12-08T02:49:05Z,2017-12-08T02:58:33Z,2018-01-24T10:28:01Z,CLOSED,False,31,6,4,https://github.com/take-cheeze,[WIP] Add sanitizer support in gcc like toolchain.,3,[],https://github.com/mruby/mruby/pull/3872,https://github.com/apps/propr,3,https://github.com/mruby/mruby/pull/3872#issuecomment-350158752,"Travis build of macos takes too much time to fix...
Is there any fast starting macos CI service?

 Define enable_sanitizer method in gcc like toolchain(including clang).
 Fix leak of mruby-socket test caused by tempnam.
 Need to fix travis osx build error.","Please provide your feedback on this pull request here.
Privacy statement: We don't store any personal information such as your email address or name. We ask for GitHub authentication as an anonymous identifier to account for duplicate feedback entries and to see people specific preferences.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3873,2017-12-08T03:15:43Z,2017-12-08T05:33:50Z,2017-12-08T06:24:38Z,MERGED,True,5,1,1,https://github.com/take-cheeze,Fix memory leak found by leak sanitizer.,1,[],https://github.com/mruby/mruby/pull/3873,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3873,I know it's only used in tests but just to avoid noise.,I know it's only used in tests but just to avoid noise.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3874,2017-12-08T04:00:26Z,2017-12-08T05:34:10Z,2018-04-13T03:59:23Z,MERGED,True,2,0,1,https://github.com/mimaki,Fixed compile error of `mruby-io` gem on MinGW.,1,[],https://github.com/mruby/mruby/pull/3874,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3874,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3876,2017-12-08T17:13:30Z,2017-12-09T04:15:10Z,2018-01-09T01:25:26Z,MERGED,True,3,2,1,https://github.com/bamchoh,Use same format between Fail and Skip,1,[],https://github.com/mruby/mruby/pull/3876,https://github.com/bamchoh,1,https://github.com/mruby/mruby/pull/3876,We can see gem name in skip message by this fix,We can see gem name in skip message by this fix,True,{}
mruby/mruby,https://github.com/mruby/mruby,3877,2017-12-08T18:27:17Z,2017-12-09T05:16:20Z,2018-01-09T01:25:58Z,MERGED,True,4,0,1,https://github.com/bamchoh,"Skip ""File.readlink fails"" test on MSVC",1,[],https://github.com/mruby/mruby/pull/3877,https://github.com/bamchoh,1,https://github.com/mruby/mruby/pull/3877,"When MSVC, ""File.readlink fails with non-symlink"" test was failed even if raising NotImplementedError","When MSVC, ""File.readlink fails with non-symlink"" test was failed even if raising NotImplementedError",True,{}
mruby/mruby,https://github.com/mruby/mruby,3878,2017-12-09T09:46:53Z,2017-12-13T15:09:18Z,2017-12-13T16:49:15Z,CLOSED,False,39,13,5,https://github.com/take-cheeze,Fix socket closing,2,[],https://github.com/mruby/mruby/pull/3878,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3878,"Seems like it needs to call closesocket instead of close in Windows.
https://msdn.microsoft.com/en-us/library/windows/desktop/ms737582(v=vs.85).aspx
BasicSocket#close does support it but in mruby-io it isn't.","Seems like it needs to call closesocket instead of close in Windows.
https://msdn.microsoft.com/en-us/library/windows/desktop/ms737582(v=vs.85).aspx
BasicSocket#close does support it but in mruby-io it isn't.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3878,2017-12-09T09:46:53Z,2017-12-13T15:09:18Z,2017-12-13T16:49:15Z,CLOSED,False,39,13,5,https://github.com/take-cheeze,Fix socket closing,2,[],https://github.com/mruby/mruby/pull/3878,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/3878#issuecomment-351299241,"Seems like it needs to call closesocket instead of close in Windows.
https://msdn.microsoft.com/en-us/library/windows/desktop/ms737582(v=vs.85).aspx
BasicSocket#close does support it but in mruby-io it isn't.",After some rethinking BasicSocket#is_socket= should be renamed to _is_socket= since it's for internal use.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3878,2017-12-09T09:46:53Z,2017-12-13T15:09:18Z,2017-12-13T16:49:15Z,CLOSED,False,39,13,5,https://github.com/take-cheeze,Fix socket closing,2,[],https://github.com/mruby/mruby/pull/3878,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3878#issuecomment-351418878,"Seems like it needs to call closesocket instead of close in Windows.
https://msdn.microsoft.com/en-us/library/windows/desktop/ms737582(v=vs.85).aspx
BasicSocket#close does support it but in mruby-io it isn't.",#3878 merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3880,2017-12-11T10:36:59Z,2017-12-11T14:23:11Z,2017-12-11T14:23:18Z,MERGED,True,1,1,1,https://github.com/matz,Update .travis.yml,2,[],https://github.com/mruby/mruby/pull/3880,https://github.com/matz,1,https://github.com/mruby/mruby/pull/3880,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3881,2017-12-11T15:48:35Z,2017-12-11T22:49:31Z,2017-12-11T22:49:31Z,MERGED,True,18,0,2,https://github.com/mame,Support MRB_WITHOUT_FLOAT to mruby-io and mruby-pack,1,[],https://github.com/mruby/mruby/pull/3881,https://github.com/mame,1,https://github.com/mruby/mruby/pull/3881,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3882,2017-12-12T07:11:14Z,2017-12-12T13:27:26Z,2017-12-12T13:46:01Z,MERGED,True,5,3,2,https://github.com/mattn,use filename in locale,3,[],https://github.com/mruby/mruby/pull/3882,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3882,filename should be string in locale,filename should be string in locale,True,{}
mruby/mruby,https://github.com/mruby/mruby,3883,2017-12-12T07:48:18Z,2017-12-12T08:31:27Z,2017-12-12T09:10:09Z,MERGED,True,2,0,1,https://github.com/mattn,fix build on mingw,1,[],https://github.com/mruby/mruby/pull/3883,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3883,mingw have ssize_t defined in windows.h,mingw have ssize_t defined in windows.h,True,{}
mruby/mruby,https://github.com/mruby/mruby,3884,2017-12-12T07:59:31Z,2017-12-12T13:21:09Z,2018-04-13T03:58:29Z,MERGED,True,38,28,3,https://github.com/mimaki,Fixed mruby-io test failure on Windows platform.,1,[],https://github.com/mruby/mruby/pull/3884,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3884,"Fixed mruby-io test failure on Windows platform.
Tested on MSVC and MinGW.","Fixed mruby-io test failure on Windows platform.
Tested on MSVC and MinGW.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3885,2017-12-12T08:31:16Z,2017-12-12T13:34:11Z,2017-12-12T13:34:11Z,MERGED,True,1,0,1,https://github.com/Shokuji,fixed mruby-io so that the test passes on cygwin,1,[],https://github.com/mruby/mruby/pull/3885,https://github.com/Shokuji,1,https://github.com/mruby/mruby/pull/3885,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3886,2017-12-12T09:08:46Z,2017-12-12T22:56:25Z,2017-12-12T22:56:25Z,MERGED,True,151,11,3,https://github.com/mattn,implement popen/flock on Windows,10,[],https://github.com/mruby/mruby/pull/3886,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3886,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3886,2017-12-12T09:08:46Z,2017-12-12T22:56:25Z,2017-12-12T22:56:25Z,MERGED,True,151,11,3,https://github.com/mattn,implement popen/flock on Windows,10,[],https://github.com/mruby/mruby/pull/3886,https://github.com/mattn,2,https://github.com/mruby/mruby/pull/3886#issuecomment-350989710,,also added close_write,True,{}
mruby/mruby,https://github.com/mruby/mruby,3886,2017-12-12T09:08:46Z,2017-12-12T22:56:25Z,2017-12-12T22:56:25Z,MERGED,True,151,11,3,https://github.com/mattn,implement popen/flock on Windows,10,[],https://github.com/mruby/mruby/pull/3886,https://github.com/mattn,3,https://github.com/mruby/mruby/pull/3886#issuecomment-351055514,,kick appveyor,True,{}
mruby/mruby,https://github.com/mruby/mruby,3887,2017-12-12T12:15:25Z,2017-12-12T13:33:23Z,2017-12-12T13:33:23Z,CLOSED,False,1,1,1,https://github.com/dabroz,fix typo in Travis CI configuration for OSX,1,[],https://github.com/mruby/mruby/pull/3887,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3887,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3887,2017-12-12T12:15:25Z,2017-12-12T13:33:23Z,2017-12-12T13:33:23Z,CLOSED,False,1,1,1,https://github.com/dabroz,fix typo in Travis CI configuration for OSX,1,[],https://github.com/mruby/mruby/pull/3887,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3887#issuecomment-351051330,,"Ah, thank you. But I am going to revert use gcc-6 patch altogether.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3887,2017-12-12T12:15:25Z,2017-12-12T13:33:23Z,2017-12-12T13:33:23Z,CLOSED,False,1,1,1,https://github.com/dabroz,fix typo in Travis CI configuration for OSX,1,[],https://github.com/mruby/mruby/pull/3887,https://github.com/matz,3,https://github.com/mruby/mruby/pull/3887#issuecomment-351052299,,Closed by c6ea948,True,{}
mruby/mruby,https://github.com/mruby/mruby,3888,2017-12-13T01:18:40Z,2017-12-13T01:24:53Z,2017-12-13T01:24:53Z,MERGED,True,74,25,2,https://github.com/mattn,fix path locales,1,[],https://github.com/mruby/mruby/pull/3888,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3888,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3889,2017-12-13T03:50:06Z,2017-12-13T05:10:44Z,2017-12-13T06:25:22Z,MERGED,True,0,2,1,https://github.com/mattn,fix crash bug on Windows,1,[],https://github.com/mruby/mruby/pull/3889,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3889,"Sorry, this is my wrong.","Sorry, this is my wrong.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3890,2017-12-13T04:06:05Z,2017-12-13T04:59:29Z,2018-04-13T03:58:02Z,MERGED,True,2,0,1,https://github.com/mimaki,Skip tests on Windows platform,1,[],https://github.com/mruby/mruby/pull/3890,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3890,"Skiped below tests on Windows platform.

Addrinfo.unix
Addrinfo#afamily","Skiped below tests on Windows platform.

Addrinfo.unix
Addrinfo#afamily",True,{}
mruby/mruby,https://github.com/mruby/mruby,3891,2017-12-13T05:45:06Z,2017-12-13T14:00:26Z,2018-04-13T03:57:43Z,MERGED,True,4,0,1,https://github.com/mimaki,Set protocol of AddrInfo,1,[],https://github.com/mruby/mruby/pull/3891,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3891,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3892,2017-12-13T07:00:02Z,2017-12-13T15:09:45Z,2018-04-13T03:57:23Z,MERGED,True,152,152,2,https://github.com/mimaki,Use IPPROTO enum values on WinSock.,1,[],https://github.com/mruby/mruby/pull/3892,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3892,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3893,2017-12-13T07:07:29Z,2017-12-13T15:00:10Z,2018-04-13T03:56:30Z,MERGED,True,3,0,3,https://github.com/mimaki,Added mrbgem's summary.,1,[],https://github.com/mruby/mruby/pull/3893,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3893,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3894,2017-12-13T13:29:56Z,2017-12-13T14:11:50Z,2017-12-13T15:50:52Z,MERGED,True,10,3,1,https://github.com/mattn,fix locale message in mirb,1,[],https://github.com/mruby/mruby/pull/3894,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3894,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3894,2017-12-13T13:29:56Z,2017-12-13T14:11:50Z,2017-12-13T15:50:52Z,MERGED,True,10,3,1,https://github.com/mattn,fix locale message in mirb,1,[],https://github.com/mruby/mruby/pull/3894,https://github.com/mattn,2,https://github.com/mruby/mruby/pull/3894#issuecomment-351432240,,"Oh, red...",True,{}
mruby/mruby,https://github.com/mruby/mruby,3895,2017-12-13T15:44:25Z,2017-12-13T15:46:20Z,2017-12-13T15:46:20Z,MERGED,True,11,2,1,https://github.com/mattn,fix mkstemp implementation for MSVC,1,[],https://github.com/mruby/mruby/pull/3895,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3895,"Maybe, appveyor will be green.","Maybe, appveyor will be green.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3896,2017-12-13T16:18:32Z,2017-12-13T16:27:51Z,2017-12-16T16:02:52Z,CLOSED,False,1,0,1,https://github.com/mattn,fix compilation error on VS2017,1,[],https://github.com/mruby/mruby/pull/3896,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3896,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3896,2017-12-13T16:18:32Z,2017-12-13T16:27:51Z,2017-12-16T16:02:52Z,CLOSED,False,1,0,1,https://github.com/mattn,fix compilation error on VS2017,1,[],https://github.com/mruby/mruby/pull/3896,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3896#issuecomment-351444104,,I committed similar fix in 5b304c1,True,{}
mruby/mruby,https://github.com/mruby/mruby,3897,2017-12-14T03:37:34Z,2017-12-14T04:58:28Z,2018-04-13T03:55:55Z,MERGED,True,1,0,1,https://github.com/mimaki,Initialized mrb_io.is_socket,1,[],https://github.com/mruby/mruby/pull/3897,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3897,,,True,"{'THUMBS_UP': ['https://github.com/take-cheeze', 'https://github.com/mattn']}"
mruby/mruby,https://github.com/mruby/mruby,3903,2017-12-17T05:55:15Z,2017-12-18T01:58:13Z,2017-12-18T06:06:21Z,MERGED,True,79,1,3,https://github.com/ksss,Implement IO#initialize_copy,1,[],https://github.com/mruby/mruby/pull/3903,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3903,This is ported PR from iij/mruby-io#27,This is ported PR from iij/mruby-io#27,True,{}
mruby/mruby,https://github.com/mruby/mruby,3903,2017-12-17T05:55:15Z,2017-12-18T01:58:13Z,2017-12-18T06:06:21Z,MERGED,True,79,1,3,https://github.com/ksss,Implement IO#initialize_copy,1,[],https://github.com/mruby/mruby/pull/3903,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3903#issuecomment-352313617,This is ported PR from iij/mruby-io#27,@tsahara I think I addressed the leakage issues.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3903,2017-12-17T05:55:15Z,2017-12-18T01:58:13Z,2017-12-18T06:06:21Z,MERGED,True,79,1,3,https://github.com/ksss,Implement IO#initialize_copy,1,[],https://github.com/mruby/mruby/pull/3903,https://github.com/ksss,3,https://github.com/mruby/mruby/pull/3903#issuecomment-352314520,This is ported PR from iij/mruby-io#27,Thank you for reviewing and fixing.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3903,2017-12-17T05:55:15Z,2017-12-18T01:58:13Z,2017-12-18T06:06:21Z,MERGED,True,79,1,3,https://github.com/ksss,Implement IO#initialize_copy,1,[],https://github.com/mruby/mruby/pull/3903,https://github.com/tsahara,4,https://github.com/mruby/mruby/pull/3903#issuecomment-352334266,This is ported PR from iij/mruby-io#27,@matz The fixes look good.  Thanks.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3904,2017-12-18T02:26:27Z,2017-12-18T02:59:37Z,2017-12-18T03:05:03Z,MERGED,True,947,0,7,https://github.com/ksss,Add mruby-method,4,[],https://github.com/mruby/mruby/pull/3904,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3904,"I've been implemented mruby-method mrbgem.
https://github.com/ksss/mruby-method
I think, This library should be added to mruby/mruby.

Method and UnboundMethod are embedded CRuby.
Nothing dependency to environments.
Sometimes developers say ""Is there no Method and UnboundMethod class in mruby?""","I've been implemented mruby-method mrbgem.
https://github.com/ksss/mruby-method
I think, This library should be added to mruby/mruby.

Method and UnboundMethod are embedded CRuby.
Nothing dependency to environments.
Sometimes developers say ""Is there no Method and UnboundMethod class in mruby?""",True,{}
mruby/mruby,https://github.com/mruby/mruby,3907,2017-12-20T13:44:29Z,2017-12-20T13:58:55Z,2018-11-29T15:42:28Z,CLOSED,False,6,0,1,https://github.com/dabroz,let mruby-math compile with MRB_WITHOUT_FLOAT,1,[],https://github.com/mruby/mruby/pull/3907,https://github.com/dabroz,1,https://github.com/mruby/mruby/pull/3907,"This may seem silly as inclusion of the gem does nothing, but it allows to use default gembox with MRB_WITHOUT_FLOAT.","This may seem silly as inclusion of the gem does nothing, but it allows to use default gembox with MRB_WITHOUT_FLOAT.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3907,2017-12-20T13:44:29Z,2017-12-20T13:58:55Z,2018-11-29T15:42:28Z,CLOSED,False,6,0,1,https://github.com/dabroz,let mruby-math compile with MRB_WITHOUT_FLOAT,1,[],https://github.com/mruby/mruby/pull/3907,https://github.com/ebkalderon,2,https://github.com/mruby/mruby/pull/3907#issuecomment-442880418,"This may seem silly as inclusion of the gem does nothing, but it allows to use default gembox with MRB_WITHOUT_FLOAT.",Would you mind elaborating why this PR was closed? It appears that mruby-math still cannot compile with MRB_WITHOUT_FLOAT set in the default gembox.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3913,2017-12-23T00:15:23Z,2017-12-23T00:44:01Z,2017-12-23T00:44:01Z,MERGED,True,25,26,6,https://github.com/llothar,Make source compilable with C++17,1,[],https://github.com/mruby/mruby/pull/3913,https://github.com/llothar,1,https://github.com/mruby/mruby/pull/3913,"Changes applied:

Removing ""register"" keyword
Fixing const pointer to pointer assignments
Adding type casts to rb_malloc calls","Changes applied:

Removing ""register"" keyword
Fixing const pointer to pointer assignments
Adding type casts to rb_malloc calls",True,{}
mruby/mruby,https://github.com/mruby/mruby,3915,2017-12-24T05:37:42Z,2018-02-12T00:32:35Z,2018-02-12T00:32:35Z,MERGED,True,10,9,1,https://github.com/llothar,Uncommented the Visual Studio version check ,1,[],https://github.com/mruby/mruby/pull/3915,https://github.com/llothar,1,https://github.com/mruby/mruby/pull/3915,"The code does not work with internationalized versions of Visual Studio.
It will capture the returned string in the local codepage encoding and make ruby exit
with an invalid UTF8 error message.
Also the word ""Version"" might be translated and not appear in the output.","The code does not work with internationalized versions of Visual Studio.
It will capture the returned string in the local codepage encoding and make ruby exit
with an invalid UTF8 error message.
Also the word ""Version"" might be translated and not appear in the output.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3916,2017-12-26T02:18:02Z,2017-12-26T06:51:19Z,2018-04-13T03:55:38Z,MERGED,True,13,2,3,https://github.com/mimaki,Passed mruby-test on Cygwin.,2,[],https://github.com/mruby/mruby/pull/3916,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3916,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3918,2018-01-01T02:03:15Z,2018-02-02T06:08:46Z,2018-02-02T08:24:21Z,CLOSED,False,183,89,7,https://github.com/miura1729,Safe METHOD_INLINE_TABLE,5,[],https://github.com/mruby/mruby/pull/3918,https://github.com/miura1729,1,https://github.com/mruby/mruby/pull/3918,see #3917,see #3917,True,{}
mruby/mruby,https://github.com/mruby/mruby,3918,2018-01-01T02:03:15Z,2018-02-02T06:08:46Z,2018-02-02T08:24:21Z,CLOSED,False,183,89,7,https://github.com/miura1729,Safe METHOD_INLINE_TABLE,5,[],https://github.com/mruby/mruby/pull/3918,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3918#issuecomment-362495853,see #3917,I addressed the portability issue by 83f2654 that requires --align-functions=n (n>1). It's not portable but it works where you can specify function alignment.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3918,2018-01-01T02:03:15Z,2018-02-02T06:08:46Z,2018-02-02T08:24:21Z,CLOSED,False,183,89,7,https://github.com/miura1729,Safe METHOD_INLINE_TABLE,5,[],https://github.com/mruby/mruby/pull/3918,https://github.com/miura1729,3,https://github.com/mruby/mruby/pull/3918#issuecomment-362518075,see #3917,Oh! I didn't know --align-functions=n  . Using this option is better than my idea.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3921,2018-01-04T02:48:59Z,2018-01-24T13:04:05Z,2018-01-24T13:41:42Z,MERGED,True,20,8,2,https://github.com/ksss,Should be true for close_on_exec flag,3,[],https://github.com/mruby/mruby/pull/3921,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3921,"close_on_exec flag of duplicated object should be true.
And I think, It is not need that close fd when failed.
Because fd and fd2 will close by GC on fptr_finalize.","close_on_exec flag of duplicated object should be true.
And I think, It is not need that close fd when failed.
Because fd and fd2 will close by GC on fptr_finalize.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3923,2018-01-08T07:54:49Z,2018-01-31T02:58:49Z,2018-01-31T04:42:03Z,MERGED,True,37,6,1,https://github.com/ksss,Shouldn't use tempnam,1,[],https://github.com/mruby/mruby/pull/3923,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3923,"This warning was displayed when building.
/Users/ksss/src/github.com/ksss/mruby/mrbgems/mruby-socket/test/sockettest.c:13:15: warning: 'tempnam' is
      deprecated: This function is provided for compatibility reasons only. Due to security concerns
      inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.
      [-Wdeprecated-declarations]
  char *tmp = tempnam(NULL, ""mruby-socket"");
              ^
/usr/include/stdio.h:395:1: note: 'tempnam' has been explicitly marked deprecated here
__deprecated_msg(""This function is provided for compatibility reasons only.  Due to security conc...
^
/usr/include/sys/cdefs.h:180:48: note: expanded from macro '__deprecated_msg'
        #define __deprecated_msg(_msg) __attribute__((deprecated(_msg)))","This warning was displayed when building.
/Users/ksss/src/github.com/ksss/mruby/mrbgems/mruby-socket/test/sockettest.c:13:15: warning: 'tempnam' is
      deprecated: This function is provided for compatibility reasons only. Due to security concerns
      inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.
      [-Wdeprecated-declarations]
  char *tmp = tempnam(NULL, ""mruby-socket"");
              ^
/usr/include/stdio.h:395:1: note: 'tempnam' has been explicitly marked deprecated here
__deprecated_msg(""This function is provided for compatibility reasons only.  Due to security conc...
^
/usr/include/sys/cdefs.h:180:48: note: expanded from macro '__deprecated_msg'
        #define __deprecated_msg(_msg) __attribute__((deprecated(_msg)))",True,{}
mruby/mruby,https://github.com/mruby/mruby,3923,2018-01-08T07:54:49Z,2018-01-31T02:58:49Z,2018-01-31T04:42:03Z,MERGED,True,37,6,1,https://github.com/ksss,Shouldn't use tempnam,1,[],https://github.com/mruby/mruby/pull/3923,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3923#issuecomment-360124253,"This warning was displayed when building.
/Users/ksss/src/github.com/ksss/mruby/mrbgems/mruby-socket/test/sockettest.c:13:15: warning: 'tempnam' is
      deprecated: This function is provided for compatibility reasons only. Due to security concerns
      inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.
      [-Wdeprecated-declarations]
  char *tmp = tempnam(NULL, ""mruby-socket"");
              ^
/usr/include/stdio.h:395:1: note: 'tempnam' has been explicitly marked deprecated here
__deprecated_msg(""This function is provided for compatibility reasons only.  Due to security conc...
^
/usr/include/sys/cdefs.h:180:48: note: expanded from macro '__deprecated_msg'
        #define __deprecated_msg(_msg) __attribute__((deprecated(_msg)))","This change does not make the test secure.
We used tempnam to avoid potential file name crash. tempnam is not encouraged because it is possible to guess scrambled file name before opening it. Your fix does not scramble at all, that means the attacker does not needs to guess.
We may need to fix the code to remove tempnam, but not this way.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3923,2018-01-08T07:54:49Z,2018-01-31T02:58:49Z,2018-01-31T04:42:03Z,MERGED,True,37,6,1,https://github.com/ksss,Shouldn't use tempnam,1,[],https://github.com/mruby/mruby/pull/3923,https://github.com/ksss,3,https://github.com/mruby/mruby/pull/3923#issuecomment-361803871,"This warning was displayed when building.
/Users/ksss/src/github.com/ksss/mruby/mrbgems/mruby-socket/test/sockettest.c:13:15: warning: 'tempnam' is
      deprecated: This function is provided for compatibility reasons only. Due to security concerns
      inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.
      [-Wdeprecated-declarations]
  char *tmp = tempnam(NULL, ""mruby-socket"");
              ^
/usr/include/stdio.h:395:1: note: 'tempnam' has been explicitly marked deprecated here
__deprecated_msg(""This function is provided for compatibility reasons only.  Due to security conc...
^
/usr/include/sys/cdefs.h:180:48: note: expanded from macro '__deprecated_msg'
        #define __deprecated_msg(_msg) __attribute__((deprecated(_msg)))","OK, I fixed to use mkstemp like mruby-io/test",True,{}
mruby/mruby,https://github.com/mruby/mruby,3923,2018-01-08T07:54:49Z,2018-01-31T02:58:49Z,2018-01-31T04:42:03Z,MERGED,True,37,6,1,https://github.com/ksss,Shouldn't use tempnam,1,[],https://github.com/mruby/mruby/pull/3923,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3923#issuecomment-361808332,"This warning was displayed when building.
/Users/ksss/src/github.com/ksss/mruby/mrbgems/mruby-socket/test/sockettest.c:13:15: warning: 'tempnam' is
      deprecated: This function is provided for compatibility reasons only. Due to security concerns
      inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.
      [-Wdeprecated-declarations]
  char *tmp = tempnam(NULL, ""mruby-socket"");
              ^
/usr/include/stdio.h:395:1: note: 'tempnam' has been explicitly marked deprecated here
__deprecated_msg(""This function is provided for compatibility reasons only.  Due to security conc...
^
/usr/include/sys/cdefs.h:180:48: note: expanded from macro '__deprecated_msg'
        #define __deprecated_msg(_msg) __attribute__((deprecated(_msg)))","Security-wise, it's not ideal (as bad as mruby-io test), but acceptable.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3923,2018-01-08T07:54:49Z,2018-01-31T02:58:49Z,2018-01-31T04:42:03Z,MERGED,True,37,6,1,https://github.com/ksss,Shouldn't use tempnam,1,[],https://github.com/mruby/mruby/pull/3923,https://github.com/mattn,5,https://github.com/mruby/mruby/pull/3923#issuecomment-361809536,"This warning was displayed when building.
/Users/ksss/src/github.com/ksss/mruby/mrbgems/mruby-socket/test/sockettest.c:13:15: warning: 'tempnam' is
      deprecated: This function is provided for compatibility reasons only. Due to security concerns
      inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.
      [-Wdeprecated-declarations]
  char *tmp = tempnam(NULL, ""mruby-socket"");
              ^
/usr/include/stdio.h:395:1: note: 'tempnam' has been explicitly marked deprecated here
__deprecated_msg(""This function is provided for compatibility reasons only.  Due to security conc...
^
/usr/include/sys/cdefs.h:180:48: note: expanded from macro '__deprecated_msg'
        #define __deprecated_msg(_msg) __attribute__((deprecated(_msg)))",I'll send fix in later.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3923,2018-01-08T07:54:49Z,2018-01-31T02:58:49Z,2018-01-31T04:42:03Z,MERGED,True,37,6,1,https://github.com/ksss,Shouldn't use tempnam,1,[],https://github.com/mruby/mruby/pull/3923,https://github.com/matz,6,https://github.com/mruby/mruby/pull/3923#issuecomment-361810166,"This warning was displayed when building.
/Users/ksss/src/github.com/ksss/mruby/mrbgems/mruby-socket/test/sockettest.c:13:15: warning: 'tempnam' is
      deprecated: This function is provided for compatibility reasons only. Due to security concerns
      inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.
      [-Wdeprecated-declarations]
  char *tmp = tempnam(NULL, ""mruby-socket"");
              ^
/usr/include/stdio.h:395:1: note: 'tempnam' has been explicitly marked deprecated here
__deprecated_msg(""This function is provided for compatibility reasons only.  Due to security conc...
^
/usr/include/sys/cdefs.h:180:48: note: expanded from macro '__deprecated_msg'
        #define __deprecated_msg(_msg) __attribute__((deprecated(_msg)))",I fixed it in f7ff2d0,True,{'THUMBS_UP': ['https://github.com/mattn']}
mruby/mruby,https://github.com/mruby/mruby,3923,2018-01-08T07:54:49Z,2018-01-31T02:58:49Z,2018-01-31T04:42:03Z,MERGED,True,37,6,1,https://github.com/ksss,Shouldn't use tempnam,1,[],https://github.com/mruby/mruby/pull/3923,https://github.com/ksss,7,https://github.com/mruby/mruby/pull/3923#issuecomment-361821997,"This warning was displayed when building.
/Users/ksss/src/github.com/ksss/mruby/mrbgems/mruby-socket/test/sockettest.c:13:15: warning: 'tempnam' is
      deprecated: This function is provided for compatibility reasons only. Due to security concerns
      inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.
      [-Wdeprecated-declarations]
  char *tmp = tempnam(NULL, ""mruby-socket"");
              ^
/usr/include/stdio.h:395:1: note: 'tempnam' has been explicitly marked deprecated here
__deprecated_msg(""This function is provided for compatibility reasons only.  Due to security conc...
^
/usr/include/sys/cdefs.h:180:48: note: expanded from macro '__deprecated_msg'
        #define __deprecated_msg(_msg) __attribute__((deprecated(_msg)))",Thank you for fixing.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3924,2018-01-09T09:41:19Z,2018-01-25T05:27:40Z,2019-11-20T23:36:44Z,CLOSED,False,4,0,1,https://github.com/yamori813,add MRB_WITHOUT_METHOD_TABLE_INLINE option,1,[],https://github.com/mruby/mruby/pull/3924,https://github.com/yamori813,1,https://github.com/mruby/mruby/pull/3924,"RTL8196 (mips big endian soc) platform don't work method table inline at cross compile by linux gcc. This option is force don't use  MRB_METHOD_TABLE_INLINE on linux gcc.
my gcc is this.
% mips-cc -v
Using built-in specs.
Target: mips-linux
Configured with: RSDK Builder release 1.5
Thread model: posix
gcc version 4.4.5-1.5.5p4 (GCC)
日本語ですみません。
このオプションを指定する事で動くようにはなるのですが、今ひとつ釈然としないところがあります。MRB_METHOD_TABLE_INLINEはMSBすなわちBig endianのプラットフォームで利用するとコメントにありますが、Big endianのRTL8196で指定すると動かなくなるのはコメントが間違っているような気もします。またLinuxの場合のLittle endianでもこのオプションは指定される事になり、そもそもendianに起因した設定では無いような気もします。
Embededな環境でこの件のデバッグはかなり手間がかかったので、可能であれば自動的に設定できた方が良いかとも思います。","RTL8196 (mips big endian soc) platform don't work method table inline at cross compile by linux gcc. This option is force don't use  MRB_METHOD_TABLE_INLINE on linux gcc.
my gcc is this.
% mips-cc -v
Using built-in specs.
Target: mips-linux
Configured with: RSDK Builder release 1.5
Thread model: posix
gcc version 4.4.5-1.5.5p4 (GCC)
日本語ですみません。
このオプションを指定する事で動くようにはなるのですが、今ひとつ釈然としないところがあります。MRB_METHOD_TABLE_INLINEはMSBすなわちBig endianのプラットフォームで利用するとコメントにありますが、Big endianのRTL8196で指定すると動かなくなるのはコメントが間違っているような気もします。またLinuxの場合のLittle endianでもこのオプションは指定される事になり、そもそもendianに起因した設定では無いような気もします。
Embededな環境でこの件のデバッグはかなり手間がかかったので、可能であれば自動的に設定できた方が良いかとも思います。",True,{}
mruby/mruby,https://github.com/mruby/mruby,3924,2018-01-09T09:41:19Z,2018-01-25T05:27:40Z,2019-11-20T23:36:44Z,CLOSED,False,4,0,1,https://github.com/yamori813,add MRB_WITHOUT_METHOD_TABLE_INLINE option,1,[],https://github.com/mruby/mruby/pull/3924,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3924#issuecomment-356287827,"RTL8196 (mips big endian soc) platform don't work method table inline at cross compile by linux gcc. This option is force don't use  MRB_METHOD_TABLE_INLINE on linux gcc.
my gcc is this.
% mips-cc -v
Using built-in specs.
Target: mips-linux
Configured with: RSDK Builder release 1.5
Thread model: posix
gcc version 4.4.5-1.5.5p4 (GCC)
日本語ですみません。
このオプションを指定する事で動くようにはなるのですが、今ひとつ釈然としないところがあります。MRB_METHOD_TABLE_INLINEはMSBすなわちBig endianのプラットフォームで利用するとコメントにありますが、Big endianのRTL8196で指定すると動かなくなるのはコメントが間違っているような気もします。またLinuxの場合のLittle endianでもこのオプションは指定される事になり、そもそもendianに起因した設定では無いような気もします。
Embededな環境でこの件のデバッグはかなり手間がかかったので、可能であれば自動的に設定できた方が良いかとも思います。","Sorry if I am wrong. You are cross compiling on linux using gcc-mips. And your target is RTL8196 (mips big endian) running linux?
確認ですが、linux上でgcc-mipsを使ってRTL8196向けにコンパイルしたということですよね。で、RTL8196はLinuxで動作しているという理解で正しいですか。もし、RTL8196がbare metalで動作しているならtarget: mips-linuxはおかしいと思いますが。",True,{}
mruby/mruby,https://github.com/mruby/mruby,3924,2018-01-09T09:41:19Z,2018-01-25T05:27:40Z,2019-11-20T23:36:44Z,CLOSED,False,4,0,1,https://github.com/yamori813,add MRB_WITHOUT_METHOD_TABLE_INLINE option,1,[],https://github.com/mruby/mruby/pull/3924,https://github.com/yamori813,3,https://github.com/mruby/mruby/pull/3924#issuecomment-356293025,"RTL8196 (mips big endian soc) platform don't work method table inline at cross compile by linux gcc. This option is force don't use  MRB_METHOD_TABLE_INLINE on linux gcc.
my gcc is this.
% mips-cc -v
Using built-in specs.
Target: mips-linux
Configured with: RSDK Builder release 1.5
Thread model: posix
gcc version 4.4.5-1.5.5p4 (GCC)
日本語ですみません。
このオプションを指定する事で動くようにはなるのですが、今ひとつ釈然としないところがあります。MRB_METHOD_TABLE_INLINEはMSBすなわちBig endianのプラットフォームで利用するとコメントにありますが、Big endianのRTL8196で指定すると動かなくなるのはコメントが間違っているような気もします。またLinuxの場合のLittle endianでもこのオプションは指定される事になり、そもそもendianに起因した設定では無いような気もします。
Embededな環境でこの件のデバッグはかなり手間がかかったので、可能であれば自動的に設定できた方が良いかとも思います。",クロスコンパイルで使っているgcc-mipsはlinuxのELFでREALTEKから提供された物で、FreeBSD上でlinuxエミュレーションを使って動かしています。ターゲットはRTL8196のBare Metalです。,True,{}
mruby/mruby,https://github.com/mruby/mruby,3924,2018-01-09T09:41:19Z,2018-01-25T05:27:40Z,2019-11-20T23:36:44Z,CLOSED,False,4,0,1,https://github.com/yamori813,add MRB_WITHOUT_METHOD_TABLE_INLINE option,1,[],https://github.com/mruby/mruby/pull/3924,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3924#issuecomment-356503985,"RTL8196 (mips big endian soc) platform don't work method table inline at cross compile by linux gcc. This option is force don't use  MRB_METHOD_TABLE_INLINE on linux gcc.
my gcc is this.
% mips-cc -v
Using built-in specs.
Target: mips-linux
Configured with: RSDK Builder release 1.5
Thread model: posix
gcc version 4.4.5-1.5.5p4 (GCC)
日本語ですみません。
このオプションを指定する事で動くようにはなるのですが、今ひとつ釈然としないところがあります。MRB_METHOD_TABLE_INLINEはMSBすなわちBig endianのプラットフォームで利用するとコメントにありますが、Big endianのRTL8196で指定すると動かなくなるのはコメントが間違っているような気もします。またLinuxの場合のLittle endianでもこのオプションは指定される事になり、そもそもendianに起因した設定では無いような気もします。
Embededな環境でこの件のデバッグはかなり手間がかかったので、可能であれば自動的に設定できた方が良いかとも思います。","That's strange. If your target doesn't run on Linux, it shouldn't be mips-linux. I think that's the source of the issue.
おかしいですね。ターゲットがLinuxで動作していないならmips-linuxはおかしいと思います。問題の原因はそこにあるのではないでしょうか。関数ポインタのレイアウトはOSに依存するのでLinuxなら大丈夫だと判断したのですが、LinuxじゃないのにLinuxと判断されちゃうコンパイラがあるとすると考えものですね。この問題が解決しても別の問題に悩まされそうです。
あと、MSBはMost Significant Bit(最上位ビット)の略でエンディアンは関係ありません。",True,{}
mruby/mruby,https://github.com/mruby/mruby,3924,2018-01-09T09:41:19Z,2018-01-25T05:27:40Z,2019-11-20T23:36:44Z,CLOSED,False,4,0,1,https://github.com/yamori813,add MRB_WITHOUT_METHOD_TABLE_INLINE option,1,[],https://github.com/mruby/mruby/pull/3924,https://github.com/yamori813,5,https://github.com/mruby/mruby/pull/3924#issuecomment-357095028,"RTL8196 (mips big endian soc) platform don't work method table inline at cross compile by linux gcc. This option is force don't use  MRB_METHOD_TABLE_INLINE on linux gcc.
my gcc is this.
% mips-cc -v
Using built-in specs.
Target: mips-linux
Configured with: RSDK Builder release 1.5
Thread model: posix
gcc version 4.4.5-1.5.5p4 (GCC)
日本語ですみません。
このオプションを指定する事で動くようにはなるのですが、今ひとつ釈然としないところがあります。MRB_METHOD_TABLE_INLINEはMSBすなわちBig endianのプラットフォームで利用するとコメントにありますが、Big endianのRTL8196で指定すると動かなくなるのはコメントが間違っているような気もします。またLinuxの場合のLittle endianでもこのオプションは指定される事になり、そもそもendianに起因した設定では無いような気もします。
Embededな環境でこの件のデバッグはかなり手間がかかったので、可能であれば自動的に設定できた方が良いかとも思います。",mips系のメーカーの提供するSDKはu-bootのようなBareMetalで動作するプログラムと、OSのLinuxをコンパイルするためのgccは同じ物で提供されています。このためBareMetalのコードのコンパイルであってもlinuxとしてコンパイルされる事になります。関数ポインターはCPUやコンパイライプションによっても変わってくるような気がするのですがどうでしょうか？もしそうであればLinux && (i386 || amd64)とかの方が安全ではないでしょうか？,True,{}
mruby/mruby,https://github.com/mruby/mruby,3924,2018-01-09T09:41:19Z,2018-01-25T05:27:40Z,2019-11-20T23:36:44Z,CLOSED,False,4,0,1,https://github.com/yamori813,add MRB_WITHOUT_METHOD_TABLE_INLINE option,1,[],https://github.com/mruby/mruby/pull/3924,https://github.com/matz,6,https://github.com/mruby/mruby/pull/3924#issuecomment-357106038,"RTL8196 (mips big endian soc) platform don't work method table inline at cross compile by linux gcc. This option is force don't use  MRB_METHOD_TABLE_INLINE on linux gcc.
my gcc is this.
% mips-cc -v
Using built-in specs.
Target: mips-linux
Configured with: RSDK Builder release 1.5
Thread model: posix
gcc version 4.4.5-1.5.5p4 (GCC)
日本語ですみません。
このオプションを指定する事で動くようにはなるのですが、今ひとつ釈然としないところがあります。MRB_METHOD_TABLE_INLINEはMSBすなわちBig endianのプラットフォームで利用するとコメントにありますが、Big endianのRTL8196で指定すると動かなくなるのはコメントが間違っているような気もします。またLinuxの場合のLittle endianでもこのオプションは指定される事になり、そもそもendianに起因した設定では無いような気もします。
Embededな環境でこの件のデバッグはかなり手間がかかったので、可能であれば自動的に設定できた方が良いかとも思います。","I understood the situation. Let me consider.
事情は分かりました。ちょっと考えてみます。",True,{}
mruby/mruby,https://github.com/mruby/mruby,3924,2018-01-09T09:41:19Z,2018-01-25T05:27:40Z,2019-11-20T23:36:44Z,CLOSED,False,4,0,1,https://github.com/yamori813,add MRB_WITHOUT_METHOD_TABLE_INLINE option,1,[],https://github.com/mruby/mruby/pull/3924,https://github.com/yamori813,7,https://github.com/mruby/mruby/pull/3924#issuecomment-556550048,"RTL8196 (mips big endian soc) platform don't work method table inline at cross compile by linux gcc. This option is force don't use  MRB_METHOD_TABLE_INLINE on linux gcc.
my gcc is this.
% mips-cc -v
Using built-in specs.
Target: mips-linux
Configured with: RSDK Builder release 1.5
Thread model: posix
gcc version 4.4.5-1.5.5p4 (GCC)
日本語ですみません。
このオプションを指定する事で動くようにはなるのですが、今ひとつ釈然としないところがあります。MRB_METHOD_TABLE_INLINEはMSBすなわちBig endianのプラットフォームで利用するとコメントにありますが、Big endianのRTL8196で指定すると動かなくなるのはコメントが間違っているような気もします。またLinuxの場合のLittle endianでもこのオプションは指定される事になり、そもそもendianに起因した設定では無いような気もします。
Embededな環境でこの件のデバッグはかなり手間がかかったので、可能であれば自動的に設定できた方が良いかとも思います。","Sorry closed issue comment.
I have unknown exception again on my Bare Metal port.
This commit is change to default.
2256bb0
I set MRB_METHOD_T_STRUCT.
Thanks",True,{}
mruby/mruby,https://github.com/mruby/mruby,3930,2018-01-16T05:03:46Z,2018-01-16T06:07:54Z,2018-01-16T06:07:54Z,MERGED,True,15,15,6,https://github.com/mimaki,Set the mruby-1.4.0 release date to `2018-1-16`.,1,[],https://github.com/mruby/mruby/pull/3930,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3930,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3932,2018-01-20T13:59:10Z,2018-01-21T12:10:02Z,2018-01-21T12:10:02Z,MERGED,True,16,2,2,https://github.com/ken-mu,mruby-time: Fix mruby specific timegm() cannot return minus,2,[],https://github.com/mruby/mruby/pull/3932,https://github.com/ken-mu,1,https://github.com/mruby/mruby/pull/3932,"Test env: gcc 4.8.5 (Linux)
Current mruby specific timegm() at mrbgems/mruby-time/src/time.c cannot returns minus value.
I tested with following Ruby code and result is following:
assert('Time.new with Dec 31 23:59:59 1969 raise ArgumentError') do
  assert_raise(ArgumentError) {Time.new(1969, 12, 31, 23, 59, 59)} # Passed
end
 
assert('Time.gm with Dec 31 23:59:59 1969 raise ArgumentError') do
  assert_raise(ArgumentError) {Time.gm(1969, 12, 31, 23, 59, 59)} # Failed
end

I still cannot understand why ArgumentError is raised at Dec 31 23:59:59 1969,
but if Time.gm is called with older than 1970, returns unix time ""31535999"" internally
and behave differently with Time.new.
I changed timegm() can returns minus value when older than 1970 is input with TIme.new and TIme.gm.
Test code details is following (I checked also leepyear):
#include <stdio.h>
#include <time.h>
#include <assert.h>

static unsigned int
is_leapyear(unsigned int y)
{
  return (y % 4) == 0 && ((y % 100) != 0 || (y % 400) == 0);
}

static time_t
timegm(struct tm *tm)
{
  static const unsigned int ndays[2][12] = {
    {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},
    {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}
  };
  time_t r = 0;
  int i;
  unsigned int *nday = (unsigned int*) ndays[is_leapyear(tm->tm_year+1900)];

  static const int epoch_year = 70;
  if(tm->tm_year >= epoch_year) {
    for (i = epoch_year; i < tm->tm_year; ++i)
      r += is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;
  } else {
    for (i = tm->tm_year; i < epoch_year; ++i)
      r -= is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;
  }
  for (i = 0; i < tm->tm_mon; ++i)
    r += nday[i] * 24 * 60 * 60;
  r += (tm->tm_mday - 1) * 24 * 60 * 60;
  r += tm->tm_hour * 60 * 60;
  r += tm->tm_min * 60;
  r += tm->tm_sec;
  return r;
}

int main()
{
    struct tm tt = {0};
    tt.tm_year = 1969 - 1900;
    tt.tm_mon = 12 - 1;
    tt.tm_mday = 31;
    tt.tm_hour = 23;
    tt.tm_min = 59;
    tt.tm_sec = 59;
    tt.tm_isdst = -1;
    
    printf(""%d\n"", timegm(&tt));
    printf(""%d\n"", mktime(&tt));
    assert(timegm(&tt) == -1);
    
    tt.tm_sec = 58;
    assert(timegm(&tt) == -2);
    
    tt.tm_year = 1968 - 1900;
    tt.tm_mon = 2 - 1;
    tt.tm_mday = 29;
    tt.tm_hour = 0;
    tt.tm_min = 0;
    tt.tm_sec = 0;
    assert(timegm(&tt) == -58060800);
    
    return 0;
}

I have 2 questions:

mruby specific timegm() don't need to return minus? If it's no, this change is needed.
ArgumentError below is correct behavior? I think if you want to limit minus input, you also need to limit less than Dec 31 23:59:58 1969. If it's no, I'll confirm correct spec and change code again.

FInally,
This pull request is first for me,
so if something is wrong, could you tell me that?","Test env: gcc 4.8.5 (Linux)
Current mruby specific timegm() at mrbgems/mruby-time/src/time.c cannot returns minus value.
I tested with following Ruby code and result is following:
assert('Time.new with Dec 31 23:59:59 1969 raise ArgumentError') do
  assert_raise(ArgumentError) {Time.new(1969, 12, 31, 23, 59, 59)} # Passed
end
 
assert('Time.gm with Dec 31 23:59:59 1969 raise ArgumentError') do
  assert_raise(ArgumentError) {Time.gm(1969, 12, 31, 23, 59, 59)} # Failed
end

I still cannot understand why ArgumentError is raised at Dec 31 23:59:59 1969,
but if Time.gm is called with older than 1970, returns unix time ""31535999"" internally
and behave differently with Time.new.
I changed timegm() can returns minus value when older than 1970 is input with TIme.new and TIme.gm.
Test code details is following (I checked also leepyear):
#include <stdio.h>
#include <time.h>
#include <assert.h>

static unsigned int
is_leapyear(unsigned int y)
{
  return (y % 4) == 0 && ((y % 100) != 0 || (y % 400) == 0);
}

static time_t
timegm(struct tm *tm)
{
  static const unsigned int ndays[2][12] = {
    {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},
    {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}
  };
  time_t r = 0;
  int i;
  unsigned int *nday = (unsigned int*) ndays[is_leapyear(tm->tm_year+1900)];

  static const int epoch_year = 70;
  if(tm->tm_year >= epoch_year) {
    for (i = epoch_year; i < tm->tm_year; ++i)
      r += is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;
  } else {
    for (i = tm->tm_year; i < epoch_year; ++i)
      r -= is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;
  }
  for (i = 0; i < tm->tm_mon; ++i)
    r += nday[i] * 24 * 60 * 60;
  r += (tm->tm_mday - 1) * 24 * 60 * 60;
  r += tm->tm_hour * 60 * 60;
  r += tm->tm_min * 60;
  r += tm->tm_sec;
  return r;
}

int main()
{
    struct tm tt = {0};
    tt.tm_year = 1969 - 1900;
    tt.tm_mon = 12 - 1;
    tt.tm_mday = 31;
    tt.tm_hour = 23;
    tt.tm_min = 59;
    tt.tm_sec = 59;
    tt.tm_isdst = -1;
    
    printf(""%d\n"", timegm(&tt));
    printf(""%d\n"", mktime(&tt));
    assert(timegm(&tt) == -1);
    
    tt.tm_sec = 58;
    assert(timegm(&tt) == -2);
    
    tt.tm_year = 1968 - 1900;
    tt.tm_mon = 2 - 1;
    tt.tm_mday = 29;
    tt.tm_hour = 0;
    tt.tm_min = 0;
    tt.tm_sec = 0;
    assert(timegm(&tt) == -58060800);
    
    return 0;
}

I have 2 questions:

mruby specific timegm() don't need to return minus? If it's no, this change is needed.
ArgumentError below is correct behavior? I think if you want to limit minus input, you also need to limit less than Dec 31 23:59:58 1969. If it's no, I'll confirm correct spec and change code again.

FInally,
This pull request is first for me,
so if something is wrong, could you tell me that?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3932,2018-01-20T13:59:10Z,2018-01-21T12:10:02Z,2018-01-21T12:10:02Z,MERGED,True,16,2,2,https://github.com/ken-mu,mruby-time: Fix mruby specific timegm() cannot return minus,2,[],https://github.com/mruby/mruby/pull/3932,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3932#issuecomment-359175156,"Test env: gcc 4.8.5 (Linux)
Current mruby specific timegm() at mrbgems/mruby-time/src/time.c cannot returns minus value.
I tested with following Ruby code and result is following:
assert('Time.new with Dec 31 23:59:59 1969 raise ArgumentError') do
  assert_raise(ArgumentError) {Time.new(1969, 12, 31, 23, 59, 59)} # Passed
end
 
assert('Time.gm with Dec 31 23:59:59 1969 raise ArgumentError') do
  assert_raise(ArgumentError) {Time.gm(1969, 12, 31, 23, 59, 59)} # Failed
end

I still cannot understand why ArgumentError is raised at Dec 31 23:59:59 1969,
but if Time.gm is called with older than 1970, returns unix time ""31535999"" internally
and behave differently with Time.new.
I changed timegm() can returns minus value when older than 1970 is input with TIme.new and TIme.gm.
Test code details is following (I checked also leepyear):
#include <stdio.h>
#include <time.h>
#include <assert.h>

static unsigned int
is_leapyear(unsigned int y)
{
  return (y % 4) == 0 && ((y % 100) != 0 || (y % 400) == 0);
}

static time_t
timegm(struct tm *tm)
{
  static const unsigned int ndays[2][12] = {
    {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},
    {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}
  };
  time_t r = 0;
  int i;
  unsigned int *nday = (unsigned int*) ndays[is_leapyear(tm->tm_year+1900)];

  static const int epoch_year = 70;
  if(tm->tm_year >= epoch_year) {
    for (i = epoch_year; i < tm->tm_year; ++i)
      r += is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;
  } else {
    for (i = tm->tm_year; i < epoch_year; ++i)
      r -= is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;
  }
  for (i = 0; i < tm->tm_mon; ++i)
    r += nday[i] * 24 * 60 * 60;
  r += (tm->tm_mday - 1) * 24 * 60 * 60;
  r += tm->tm_hour * 60 * 60;
  r += tm->tm_min * 60;
  r += tm->tm_sec;
  return r;
}

int main()
{
    struct tm tt = {0};
    tt.tm_year = 1969 - 1900;
    tt.tm_mon = 12 - 1;
    tt.tm_mday = 31;
    tt.tm_hour = 23;
    tt.tm_min = 59;
    tt.tm_sec = 59;
    tt.tm_isdst = -1;
    
    printf(""%d\n"", timegm(&tt));
    printf(""%d\n"", mktime(&tt));
    assert(timegm(&tt) == -1);
    
    tt.tm_sec = 58;
    assert(timegm(&tt) == -2);
    
    tt.tm_year = 1968 - 1900;
    tt.tm_mon = 2 - 1;
    tt.tm_mday = 29;
    tt.tm_hour = 0;
    tt.tm_min = 0;
    tt.tm_sec = 0;
    assert(timegm(&tt) == -58060800);
    
    return 0;
}

I have 2 questions:

mruby specific timegm() don't need to return minus? If it's no, this change is needed.
ArgumentError below is correct behavior? I think if you want to limit minus input, you also need to limit less than Dec 31 23:59:58 1969. If it's no, I'll confirm correct spec and change code again.

FInally,
This pull request is first for me,
so if something is wrong, could you tell me that?","On some platform (particularly Windows), gmtime() does not accept negative time_t. I am not sure if mruby Time class should prohibit negative time_t. But at least negative time_t is not portable and your test fails on Windows.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3932,2018-01-20T13:59:10Z,2018-01-21T12:10:02Z,2018-01-21T12:10:02Z,MERGED,True,16,2,2,https://github.com/ken-mu,mruby-time: Fix mruby specific timegm() cannot return minus,2,[],https://github.com/mruby/mruby/pull/3932,https://github.com/ken-mu,3,https://github.com/mruby/mruby/pull/3932#issuecomment-359178156,"Test env: gcc 4.8.5 (Linux)
Current mruby specific timegm() at mrbgems/mruby-time/src/time.c cannot returns minus value.
I tested with following Ruby code and result is following:
assert('Time.new with Dec 31 23:59:59 1969 raise ArgumentError') do
  assert_raise(ArgumentError) {Time.new(1969, 12, 31, 23, 59, 59)} # Passed
end
 
assert('Time.gm with Dec 31 23:59:59 1969 raise ArgumentError') do
  assert_raise(ArgumentError) {Time.gm(1969, 12, 31, 23, 59, 59)} # Failed
end

I still cannot understand why ArgumentError is raised at Dec 31 23:59:59 1969,
but if Time.gm is called with older than 1970, returns unix time ""31535999"" internally
and behave differently with Time.new.
I changed timegm() can returns minus value when older than 1970 is input with TIme.new and TIme.gm.
Test code details is following (I checked also leepyear):
#include <stdio.h>
#include <time.h>
#include <assert.h>

static unsigned int
is_leapyear(unsigned int y)
{
  return (y % 4) == 0 && ((y % 100) != 0 || (y % 400) == 0);
}

static time_t
timegm(struct tm *tm)
{
  static const unsigned int ndays[2][12] = {
    {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},
    {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}
  };
  time_t r = 0;
  int i;
  unsigned int *nday = (unsigned int*) ndays[is_leapyear(tm->tm_year+1900)];

  static const int epoch_year = 70;
  if(tm->tm_year >= epoch_year) {
    for (i = epoch_year; i < tm->tm_year; ++i)
      r += is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;
  } else {
    for (i = tm->tm_year; i < epoch_year; ++i)
      r -= is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;
  }
  for (i = 0; i < tm->tm_mon; ++i)
    r += nday[i] * 24 * 60 * 60;
  r += (tm->tm_mday - 1) * 24 * 60 * 60;
  r += tm->tm_hour * 60 * 60;
  r += tm->tm_min * 60;
  r += tm->tm_sec;
  return r;
}

int main()
{
    struct tm tt = {0};
    tt.tm_year = 1969 - 1900;
    tt.tm_mon = 12 - 1;
    tt.tm_mday = 31;
    tt.tm_hour = 23;
    tt.tm_min = 59;
    tt.tm_sec = 59;
    tt.tm_isdst = -1;
    
    printf(""%d\n"", timegm(&tt));
    printf(""%d\n"", mktime(&tt));
    assert(timegm(&tt) == -1);
    
    tt.tm_sec = 58;
    assert(timegm(&tt) == -2);
    
    tt.tm_year = 1968 - 1900;
    tt.tm_mon = 2 - 1;
    tt.tm_mday = 29;
    tt.tm_hour = 0;
    tt.tm_min = 0;
    tt.tm_sec = 0;
    assert(timegm(&tt) == -58060800);
    
    return 0;
}

I have 2 questions:

mruby specific timegm() don't need to return minus? If it's no, this change is needed.
ArgumentError below is correct behavior? I think if you want to limit minus input, you also need to limit less than Dec 31 23:59:58 1969. If it's no, I'll confirm correct spec and change code again.

FInally,
This pull request is first for me,
so if something is wrong, could you tell me that?","I understood that negative time_t acceptance is due to platform and Ruby test code I added cannot be contained.
I think mruby Time class should not limit to input negative value if below is not sure,
but current some code limit negative value like that:
  if (nowsecs == (time_t)-1) {
    mrb_raise(mrb, E_ARGUMENT_ERROR, ""Not a valid time."");
  }

And how about time.c changing? At least this timegm() is used by default, so some platforms which negative time_t support (e.g. GCC) might have trouble.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3936,2018-01-28T03:19:46Z,2018-01-30T03:42:49Z,2018-01-30T03:42:50Z,MERGED,True,15,2,2,https://github.com/ken-mu,mruby-time: support time_t is uint,2,[],https://github.com/mruby/mruby/pull/3936,https://github.com/ken-mu,1,https://github.com/mruby/mruby/pull/3936,"Background
Some embedded platforms support time_t as uint32. Following problems are occurred if these platforms use current Time :

Time.gm, Time.local, Time.new: ArgumentError is raised if more than 2038/1/19 3:14:8 is input (In case of time_t is uint32_t)

Changes

Add new macro MRB_TIME_T_UINT
uint specific value is returned if MRB_TIME_T_UINT is defined

Test
Define macro MRB_TIME_T_UINT on the platform time_t is uint like following:
conf.cc.defines = %w(MRB_TIME_T_UINT)

test code is following (test code is not pushed because following is not portable):
assert('Time.at lower than 1970 (for time_t is uint)') do
  assert_raise(ArgumentError){ Time.at(-1) }
end

assert('Time.at 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.at(4294967295)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.gm 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.new 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.gm(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.at higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  assert_raise(ArgumentError){ Time.at(4294967296) }
end

assert('Time.new higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 16)
  assert_equal t.year, 1970
  assert_equal t.mon, 1
  assert_equal t.mday, 1
  assert_equal t.hour, 0
  assert_equal t.min, 0
  assert_equal t.sec, 0
end","Background
Some embedded platforms support time_t as uint32. Following problems are occurred if these platforms use current Time :

Time.gm, Time.local, Time.new: ArgumentError is raised if more than 2038/1/19 3:14:8 is input (In case of time_t is uint32_t)

Changes

Add new macro MRB_TIME_T_UINT
uint specific value is returned if MRB_TIME_T_UINT is defined

Test
Define macro MRB_TIME_T_UINT on the platform time_t is uint like following:
conf.cc.defines = %w(MRB_TIME_T_UINT)

test code is following (test code is not pushed because following is not portable):
assert('Time.at lower than 1970 (for time_t is uint)') do
  assert_raise(ArgumentError){ Time.at(-1) }
end

assert('Time.at 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.at(4294967295)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.gm 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.new 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.gm(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.at higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  assert_raise(ArgumentError){ Time.at(4294967296) }
end

assert('Time.new higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 16)
  assert_equal t.year, 1970
  assert_equal t.mon, 1
  assert_equal t.mday, 1
  assert_equal t.hour, 0
  assert_equal t.min, 0
  assert_equal t.sec, 0
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,3936,2018-01-28T03:19:46Z,2018-01-30T03:42:49Z,2018-01-30T03:42:50Z,MERGED,True,15,2,2,https://github.com/ken-mu,mruby-time: support time_t is uint,2,[],https://github.com/mruby/mruby/pull/3936,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3936#issuecomment-361039366,"Background
Some embedded platforms support time_t as uint32. Following problems are occurred if these platforms use current Time :

Time.gm, Time.local, Time.new: ArgumentError is raised if more than 2038/1/19 3:14:8 is input (In case of time_t is uint32_t)

Changes

Add new macro MRB_TIME_T_UINT
uint specific value is returned if MRB_TIME_T_UINT is defined

Test
Define macro MRB_TIME_T_UINT on the platform time_t is uint like following:
conf.cc.defines = %w(MRB_TIME_T_UINT)

test code is following (test code is not pushed because following is not portable):
assert('Time.at lower than 1970 (for time_t is uint)') do
  assert_raise(ArgumentError){ Time.at(-1) }
end

assert('Time.at 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.at(4294967295)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.gm 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.new 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.gm(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.at higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  assert_raise(ArgumentError){ Time.at(4294967296) }
end

assert('Time.new higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 16)
  assert_equal t.year, 1970
  assert_equal t.mon, 1
  assert_equal t.mday, 1
  assert_equal t.hour, 0
  assert_equal t.min, 0
  assert_equal t.sec, 0
end",mktime is supposed to return time_t and -1 for errors. How does it behave on platforms with unsigned time_t?,True,{}
mruby/mruby,https://github.com/mruby/mruby,3936,2018-01-28T03:19:46Z,2018-01-30T03:42:49Z,2018-01-30T03:42:50Z,MERGED,True,15,2,2,https://github.com/ken-mu,mruby-time: support time_t is uint,2,[],https://github.com/mruby/mruby/pull/3936,https://github.com/ken-mu,3,https://github.com/mruby/mruby/pull/3936#issuecomment-361194369,"Background
Some embedded platforms support time_t as uint32. Following problems are occurred if these platforms use current Time :

Time.gm, Time.local, Time.new: ArgumentError is raised if more than 2038/1/19 3:14:8 is input (In case of time_t is uint32_t)

Changes

Add new macro MRB_TIME_T_UINT
uint specific value is returned if MRB_TIME_T_UINT is defined

Test
Define macro MRB_TIME_T_UINT on the platform time_t is uint like following:
conf.cc.defines = %w(MRB_TIME_T_UINT)

test code is following (test code is not pushed because following is not portable):
assert('Time.at lower than 1970 (for time_t is uint)') do
  assert_raise(ArgumentError){ Time.at(-1) }
end

assert('Time.at 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.at(4294967295)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.gm 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.new 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.gm(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.at higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  assert_raise(ArgumentError){ Time.at(4294967296) }
end

assert('Time.new higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 16)
  assert_equal t.year, 1970
  assert_equal t.mon, 1
  assert_equal t.mday, 1
  assert_equal t.hour, 0
  assert_equal t.min, 0
  assert_equal t.sec, 0
end","I had not understand why range error is raised when time is -1.
I think C language mktime need to return -1 (0xFFFFFFFF...) if calender time cannot be represented even if time_t is uint, so I removed ifdef from above error handling.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3936,2018-01-28T03:19:46Z,2018-01-30T03:42:49Z,2018-01-30T03:42:50Z,MERGED,True,15,2,2,https://github.com/ken-mu,mruby-time: support time_t is uint,2,[],https://github.com/mruby/mruby/pull/3936,https://github.com/ken-mu,4,https://github.com/mruby/mruby/pull/3936#issuecomment-361244321,"Background
Some embedded platforms support time_t as uint32. Following problems are occurred if these platforms use current Time :

Time.gm, Time.local, Time.new: ArgumentError is raised if more than 2038/1/19 3:14:8 is input (In case of time_t is uint32_t)

Changes

Add new macro MRB_TIME_T_UINT
uint specific value is returned if MRB_TIME_T_UINT is defined

Test
Define macro MRB_TIME_T_UINT on the platform time_t is uint like following:
conf.cc.defines = %w(MRB_TIME_T_UINT)

test code is following (test code is not pushed because following is not portable):
assert('Time.at lower than 1970 (for time_t is uint)') do
  assert_raise(ArgumentError){ Time.at(-1) }
end

assert('Time.at 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.at(4294967295)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.gm 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.new 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.gm(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.at higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  assert_raise(ArgumentError){ Time.at(4294967296) }
end

assert('Time.new higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 16)
  assert_equal t.year, 1970
  assert_equal t.mon, 1
  assert_equal t.mday, 1
  assert_equal t.hour, 0
  assert_equal t.min, 0
  assert_equal t.sec, 0
end","On our platform with unsigned time_t, no error is returned.
e.g. If 2000/13/1 00:00:00 is input with mktime, returned 978307200 (2001/1/1 00:00:00).
I think above behavior is not satisfied C language specification,
so now we are contacting the manufacturer of the platform.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3936,2018-01-28T03:19:46Z,2018-01-30T03:42:49Z,2018-01-30T03:42:50Z,MERGED,True,15,2,2,https://github.com/ken-mu,mruby-time: support time_t is uint,2,[],https://github.com/mruby/mruby/pull/3936,https://github.com/ken-mu,5,https://github.com/mruby/mruby/pull/3936#issuecomment-361458688,"Background
Some embedded platforms support time_t as uint32. Following problems are occurred if these platforms use current Time :

Time.gm, Time.local, Time.new: ArgumentError is raised if more than 2038/1/19 3:14:8 is input (In case of time_t is uint32_t)

Changes

Add new macro MRB_TIME_T_UINT
uint specific value is returned if MRB_TIME_T_UINT is defined

Test
Define macro MRB_TIME_T_UINT on the platform time_t is uint like following:
conf.cc.defines = %w(MRB_TIME_T_UINT)

test code is following (test code is not pushed because following is not portable):
assert('Time.at lower than 1970 (for time_t is uint)') do
  assert_raise(ArgumentError){ Time.at(-1) }
end

assert('Time.at 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.at(4294967295)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.gm 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.new 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.gm(2106, 2, 7, 6, 28, 15)
  assert_equal t.year, 2106
  assert_equal t.mon, 2
  assert_equal t.mday, 7
  assert_equal t.hour, 6
  assert_equal t.min, 28
  assert_equal t.sec, 15
end

assert('Time.at higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  assert_raise(ArgumentError){ Time.at(4294967296) }
end

assert('Time.new higher than 2106/2/7 6:28:15 (for time_t is uint32_t)') do
  t = Time.new(2106, 2, 7, 6, 28, 16)
  assert_equal t.year, 1970
  assert_equal t.mon, 1
  assert_equal t.mday, 1
  assert_equal t.hour, 0
  assert_equal t.min, 0
  assert_equal t.sec, 0
end","Above test method was not correct.
I had misunderstood about the meaning of ""cannot be represented"".
I tested again and confirmed returning -1 if mktime cannot convert from tm to time_t.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3937,2018-01-30T07:03:08Z,2018-01-30T12:39:08Z,2018-01-30T12:39:09Z,MERGED,True,32,1,2,https://github.com/mattn,add File#mtime,1,[],https://github.com/mruby/mruby/pull/3937,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3937,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3938,2018-01-31T03:19:23Z,2018-01-31T03:32:24Z,2018-01-31T03:32:31Z,MERGED,True,4,0,1,https://github.com/mattn,include io.h on mingw,1,[],https://github.com/mruby/mruby/pull/3938,https://github.com/mattn,1,https://github.com/mruby/mruby/pull/3938,"Thanks f7ff2d0
But need one more fix.","Thanks f7ff2d0
But need one more fix.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3938,2018-01-31T03:19:23Z,2018-01-31T03:32:24Z,2018-01-31T03:32:31Z,MERGED,True,4,0,1,https://github.com/mattn,include io.h on mingw,1,[],https://github.com/mruby/mruby/pull/3938,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3938#issuecomment-361813099,"Thanks f7ff2d0
But need one more fix.",Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,3940,2018-02-02T04:31:27Z,2018-02-02T05:16:11Z,2018-02-02T05:42:27Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Fix possible memory access error.,1,[],https://github.com/mruby/mruby/pull/3940,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3940,...of fiber.,...of fiber.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3941,2018-02-03T05:59:10Z,2018-02-03T15:01:04Z,2018-02-03T15:18:26Z,MERGED,True,2,2,1,https://github.com/matsumotory,Depend mruby-io and mruby-pack in mruby core,1,[],https://github.com/mruby/mruby/pull/3941,https://github.com/matsumotory,1,https://github.com/mruby/mruby/pull/3941,spec.add_dependency search mruby-io and mruby-pack on mgem-list by other third-party mrbgems.,spec.add_dependency search mruby-io and mruby-pack on mgem-list by other third-party mrbgems.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3945,2018-02-10T14:27:45Z,2018-02-12T13:41:32Z,2018-02-12T13:41:53Z,MERGED,True,11,13,1,https://github.com/take-cheeze,Fix core dependencies resolving in dependencies gems.,1,[],https://github.com/mruby/mruby/pull/3945,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3945,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3945,2018-02-10T14:27:45Z,2018-02-12T13:41:32Z,2018-02-12T13:41:53Z,MERGED,True,11,13,1,https://github.com/take-cheeze,Fix core dependencies resolving in dependencies gems.,1,[],https://github.com/mruby/mruby/pull/3945,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3945#issuecomment-364749156,,"Can you explain about your ""core dependencies resolving in dependencies gems"" issue bit more?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3945,2018-02-10T14:27:45Z,2018-02-12T13:41:32Z,2018-02-12T13:41:53Z,MERGED,True,11,13,1,https://github.com/take-cheeze,Fix core dependencies resolving in dependencies gems.,1,[],https://github.com/mruby/mruby/pull/3945,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/3945#issuecomment-364924828,,":core dependencies resolving before :mgem deps only works on build_config.rb.
With this PR :core deps will be resolved in mrbgem.rake too.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3945,2018-02-10T14:27:45Z,2018-02-12T13:41:32Z,2018-02-12T13:41:53Z,MERGED,True,11,13,1,https://github.com/take-cheeze,Fix core dependencies resolving in dependencies gems.,1,[],https://github.com/mruby/mruby/pull/3945,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3945#issuecomment-364925365,,"OK, sounds reasonable.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3953,2018-02-16T14:46:57Z,2018-02-17T09:34:46Z,2018-02-17T09:34:46Z,MERGED,True,1,0,1,https://github.com/take-cheeze,Add verbose flag to cross test runner too.,1,[],https://github.com/mruby/mruby/pull/3953,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3953,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3956,2018-02-23T07:02:31Z,,2021-06-03T07:47:52Z,OPEN,False,391,166,14,https://github.com/take-cheeze,Native support of mruby-cli in mruby build system.,13,[],https://github.com/mruby/mruby/pull/3956,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3956,"Just for a proof of concept I've rewritten mruby-bin-strip only with ruby script for mruby-cli feature.
For mrb_irep section modifications, MRubyVM (subset of RubyVM in CRuby) is implemented too.
Since mruby-cli isn't catching up with recent mruby releases, we should support this with mrbgem build system.
~~ This is not complete because I need to add minimal dependency mrb_open for better testings too.  Symbol like mrb_open_cli must be generated. ~~
Now implemented: 34a3939
See #1676 for implementation detail.","Just for a proof of concept I've rewritten mruby-bin-strip only with ruby script for mruby-cli feature.
For mrb_irep section modifications, MRubyVM (subset of RubyVM in CRuby) is implemented too.
Since mruby-cli isn't catching up with recent mruby releases, we should support this with mrbgem build system.
~~ This is not complete because I need to add minimal dependency mrb_open for better testings too.  Symbol like mrb_open_cli must be generated. ~~
Now implemented: 34a3939
See #1676 for implementation detail.",True,"{'THUMBS_UP': ['https://github.com/katzer', 'https://github.com/ongaeshi', 'https://github.com/jiikko', 'https://github.com/icm7216', 'https://github.com/ksss', 'https://github.com/oda-i3']}"
mruby/mruby,https://github.com/mruby/mruby,3956,2018-02-23T07:02:31Z,,2021-06-03T07:47:52Z,OPEN,False,391,166,14,https://github.com/take-cheeze,Native support of mruby-cli in mruby build system.,13,[],https://github.com/mruby/mruby/pull/3956,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3956#issuecomment-374986309,"Just for a proof of concept I've rewritten mruby-bin-strip only with ruby script for mruby-cli feature.
For mrb_irep section modifications, MRubyVM (subset of RubyVM in CRuby) is implemented too.
Since mruby-cli isn't catching up with recent mruby releases, we should support this with mrbgem build system.
~~ This is not complete because I need to add minimal dependency mrb_open for better testings too.  Symbol like mrb_open_cli must be generated. ~~
Now implemented: 34a3939
See #1676 for implementation detail.","I am not sure the benefit of the proposed change. I try to read the diffs but they are huge.
Could you explain what we can expect from the change?
Besides that, this pull-request introduces 3 global variables. It's against our basic rule to avoid global variables.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3956,2018-02-23T07:02:31Z,,2021-06-03T07:47:52Z,OPEN,False,391,166,14,https://github.com/take-cheeze,Native support of mruby-cli in mruby build system.,13,[],https://github.com/mruby/mruby/pull/3956,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/3956#issuecomment-375153121,"Just for a proof of concept I've rewritten mruby-bin-strip only with ruby script for mruby-cli feature.
For mrb_irep section modifications, MRubyVM (subset of RubyVM in CRuby) is implemented too.
Since mruby-cli isn't catching up with recent mruby releases, we should support this with mrbgem build system.
~~ This is not complete because I need to add minimal dependency mrb_open for better testings too.  Symbol like mrb_open_cli must be generated. ~~
Now implemented: 34a3939
See #1676 for implementation detail.","@matz
This PR is mostly proof of concept so I'll split this into 3 PRs when approved:

modification of build system(Rakefile, tasks/cli.rake, tasks/cli/main.c, toolchain script)

Forgot to add option to use mrb_open instead of minimal dependencies mrb_open_cli for command like mruby. Will implement it too.


mrubyvm mrbgem which implements RubyVM class for mruby (related to: #3955 )
switchmruby-strip implementation to a mruby script

I want to know:

modification to build system is OK.(1st PR of above)
writing command line tools with mruby script is OK.

We need to know this feature works and all knows it's useful.
If OK I'll start splitting it to 3 PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3956,2018-02-23T07:02:31Z,,2021-06-03T07:47:52Z,OPEN,False,391,166,14,https://github.com/take-cheeze,Native support of mruby-cli in mruby build system.,13,[],https://github.com/mruby/mruby/pull/3956,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3956#issuecomment-375211081,"Just for a proof of concept I've rewritten mruby-bin-strip only with ruby script for mruby-cli feature.
For mrb_irep section modifications, MRubyVM (subset of RubyVM in CRuby) is implemented too.
Since mruby-cli isn't catching up with recent mruby releases, we should support this with mrbgem build system.
~~ This is not complete because I need to add minimal dependency mrb_open for better testings too.  Symbol like mrb_open_cli must be generated. ~~
Now implemented: 34a3939
See #1676 for implementation detail.","The proposed change sounds reasonable. It is OK to change the build system and writing command line tools in mruby.
But I don't want to add members to mrb_state unless they are absolutely necessary.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3957,2018-02-23T11:44:47Z,2018-03-16T05:34:44Z,2018-03-16T05:35:43Z,MERGED,True,3,2,1,https://github.com/take-cheeze,Pass same mode parameter to `IO.sysopen` and `IO.open` in `IO.read`.,1,[],https://github.com/mruby/mruby/pull/3957,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3957,"Since IO.read filename, mode: 'rb' won't work in windows .","Since IO.read filename, mode: 'rb' won't work in windows .",True,{}
mruby/mruby,https://github.com/mruby/mruby,3957,2018-02-23T11:44:47Z,2018-03-16T05:34:44Z,2018-03-16T05:35:43Z,MERGED,True,3,2,1,https://github.com/take-cheeze,Pass same mode parameter to `IO.sysopen` and `IO.open` in `IO.read`.,1,[],https://github.com/mruby/mruby/pull/3957,https://github.com/tsahara,2,https://github.com/mruby/mruby/pull/3957#issuecomment-373580262,"Since IO.read filename, mode: 'rb' won't work in windows .",LGTM.  Can I merge it? @matz,True,{}
mruby/mruby,https://github.com/mruby/mruby,3963,2018-03-04T13:58:50Z,2018-03-12T13:14:09Z,2018-12-23T09:12:02Z,MERGED,True,8,2,2,https://github.com/dearblue,Give me block by mrb_get_args() (forced block arguments),2,[],https://github.com/mruby/mruby/pull/3963,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/3963,"I added feature to mrb_get_args() function for forced block argument.
By giving two consecutive &, exception is raised if block is not given.
/* raise exception if no block given */
mrb_get_args(mrb, ""&&"", &block);
I tried to labor saving in the processing that required block. How is it?","I added feature to mrb_get_args() function for forced block argument.
By giving two consecutive &, exception is raised if block is not given.
/* raise exception if no block given */
mrb_get_args(mrb, ""&&"", &block);
I tried to labor saving in the processing that required block. How is it?",True,{}
mruby/mruby,https://github.com/mruby/mruby,3963,2018-03-04T13:58:50Z,2018-03-12T13:14:09Z,2018-12-23T09:12:02Z,MERGED,True,8,2,2,https://github.com/dearblue,Give me block by mrb_get_args() (forced block arguments),2,[],https://github.com/mruby/mruby/pull/3963,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3963#issuecomment-370232873,"I added feature to mrb_get_args() function for forced block argument.
By giving two consecutive &, exception is raised if block is not given.
/* raise exception if no block given */
mrb_get_args(mrb, ""&&"", &block);
I tried to labor saving in the processing that required block. How is it?",Interesting idea. But I don't like &&. How about &! (like other specifiers).,True,{}
mruby/mruby,https://github.com/mruby/mruby,3963,2018-03-04T13:58:50Z,2018-03-12T13:14:09Z,2018-12-23T09:12:02Z,MERGED,True,8,2,2,https://github.com/dearblue,Give me block by mrb_get_args() (forced block arguments),2,[],https://github.com/mruby/mruby/pull/3963,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/3963#issuecomment-370234952,"I added feature to mrb_get_args() function for forced block argument.
By giving two consecutive &, exception is raised if block is not given.
/* raise exception if no block given */
mrb_get_args(mrb, ""&&"", &block);
I tried to labor saving in the processing that required block. How is it?","! is used by other specifiers with nil.
I thought that consistency could be maintained if it was &&, and I did so.
I will fix it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3963,2018-03-04T13:58:50Z,2018-03-12T13:14:09Z,2018-12-23T09:12:02Z,MERGED,True,8,2,2,https://github.com/dearblue,Give me block by mrb_get_args() (forced block arguments),2,[],https://github.com/mruby/mruby/pull/3963,https://github.com/matz,4,https://github.com/mruby/mruby/pull/3963#issuecomment-370277152,"I added feature to mrb_get_args() function for forced block argument.
By giving two consecutive &, exception is raised if block is not given.
/* raise exception if no block given */
mrb_get_args(mrb, ""&&"", &block);
I tried to labor saving in the processing that required block. How is it?",There's non-nil usage of ! e.g. *!. Reverse meaning of &! from s! or a! might be a drawback.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3963,2018-03-04T13:58:50Z,2018-03-12T13:14:09Z,2018-12-23T09:12:02Z,MERGED,True,8,2,2,https://github.com/dearblue,Give me block by mrb_get_args() (forced block arguments),2,[],https://github.com/mruby/mruby/pull/3963,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/3963#issuecomment-370378300,"I added feature to mrb_get_args() function for forced block argument.
By giving two consecutive &, exception is raised if block is not given.
/* raise exception if no block given */
mrb_get_args(mrb, ""&&"", &block);
I tried to labor saving in the processing that required block. How is it?","Oops.
I just read in mruby.h document only for mrb_get_args().
I understand by your comment about !.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3963,2018-03-04T13:58:50Z,2018-03-12T13:14:09Z,2018-12-23T09:12:02Z,MERGED,True,8,2,2,https://github.com/dearblue,Give me block by mrb_get_args() (forced block arguments),2,[],https://github.com/mruby/mruby/pull/3963,https://github.com/matz,6,https://github.com/mruby/mruby/pull/3963#issuecomment-370454140,"I added feature to mrb_get_args() function for forced block argument.
By giving two consecutive &, exception is raised if block is not given.
/* raise exception if no block given */
mrb_get_args(mrb, ""&&"", &block);
I tried to labor saving in the processing that required block. How is it?","Oops, I should have updated mruby.h document too.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3964,2018-03-05T01:16:13Z,2018-03-05T01:26:03Z,2018-03-05T01:27:55Z,MERGED,True,2,0,2,https://github.com/take-cheeze,Close `mrb_state` before error exit.,2,[],https://github.com/mruby/mruby/pull/3964,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3964,Since in leak sanitizer all the memories allocated by mrb_state gets reported as leaked memories.,Since in leak sanitizer all the memories allocated by mrb_state gets reported as leaked memories.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3965,2018-03-05T01:41:54Z,2018-03-05T01:51:33Z,2018-03-05T01:57:27Z,MERGED,True,1,0,1,https://github.com/take-cheeze,Add same fix as #3964 to lib/mruby/gem.rb .,1,[],https://github.com/mruby/mruby/pull/3965,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3965,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3969,2018-03-15T15:19:18Z,2018-03-15T23:18:39Z,2018-03-16T02:34:24Z,MERGED,True,1,1,1,https://github.com/hfm,Fix tinytypo,1,[],https://github.com/mruby/mruby/pull/3969,https://github.com/hfm,1,https://github.com/mruby/mruby/pull/3969,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3972,2018-03-19T12:41:46Z,2018-03-20T14:15:38Z,2018-03-20T14:16:44Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Set array length after expanding capacity.,1,[],https://github.com/mruby/mruby/pull/3972,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3972,"Since it causes assertion failure in mruby-capacity.
In embedded array it checks the embedded array capacity and cause assertion failure before expanding capacity.
https://103.128.221.202.static.iijgio.jp/jenkins/view/0-master-mrbgem/job/master-mruby-capacity/1/console","Since it causes assertion failure in mruby-capacity.
In embedded array it checks the embedded array capacity and cause assertion failure before expanding capacity.
https://103.128.221.202.static.iijgio.jp/jenkins/view/0-master-mrbgem/job/master-mruby-capacity/1/console",True,{}
mruby/mruby,https://github.com/mruby/mruby,3974,2018-03-22T03:44:22Z,2018-03-22T08:06:32Z,2018-03-22T08:09:11Z,MERGED,True,10,3,2,https://github.com/take-cheeze,Add `:path` option for git repository.,1,[],https://github.com/mruby/mruby/pull/3974,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3974,To use newer core mrbgem.,To use newer core mrbgem.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3976,2018-03-22T14:08:19Z,,2021-06-03T07:47:52Z,OPEN,False,119,1,5,https://github.com/take-cheeze,Add support of CLI in mrbgem build system.,2,[],https://github.com/mruby/mruby/pull/3976,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3976,"See: #3956
@mrb_open_cli is added to check whether to generate mrb_open_cli function or to use mrb_open.","See: #3956
@mrb_open_cli is added to check whether to generate mrb_open_cli function or to use mrb_open.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3977,2018-03-22T14:17:23Z,2019-06-02T05:55:23Z,2019-06-02T05:55:23Z,CLOSED,False,18,10,2,https://github.com/take-cheeze,Add API `mrb_read_irep_flags` to read irep to dynamic memory.,1,[],https://github.com/mruby/mruby/pull/3977,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3977,"Related to: #3956.
Since in some cases we can't release memory allocated for symbols properly.","Related to: #3956.
Since in some cases we can't release memory allocated for symbols properly.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3977,2018-03-22T14:17:23Z,2019-06-02T05:55:23Z,2019-06-02T05:55:23Z,CLOSED,False,18,10,2,https://github.com/take-cheeze,Add API `mrb_read_irep_flags` to read irep to dynamic memory.,1,[],https://github.com/mruby/mruby/pull/3977,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/3977#issuecomment-497955648,"Related to: #3956.
Since in some cases we can't release memory allocated for symbols properly.","@take-cheeze
Because #4403 has been merged, can you be closed this PR?
For #3978, I think that replacing mrb_read_irep_flags() with mrb_read_irep_buf() will give the expected results.
diff --git a/mrbgems/mruby-mrubyvm/src/mruby_vm.c b/mrbgems/mruby-mrubyvm/src/mruby_vm.c
index 8479927b8..c36452e32 100644
--- a/mrbgems/mruby-mrubyvm/src/mruby_vm.c
+++ b/mrbgems/mruby-mrubyvm/src/mruby_vm.c
@@ -78,7 +78,7 @@ iseq_load_from_binary(mrb_state *mrb, mrb_value self)

   mrb_get_args(mrb, ""s"", &bin, &bin_len);

-  irep = mrb_read_irep_flags(mrb, (uint8_t const*)bin, MRB_READ_FLAG_SRC_MALLOC);
+  irep = mrb_read_irep_buf(mrb, bin, bin_len);

   if (!irep) {
     mrb_raisef(mrb, E_SCRIPT_ERROR, ""can't read irep"");",True,{}
mruby/mruby,https://github.com/mruby/mruby,3978,2018-03-22T14:52:22Z,,2021-06-03T07:47:52Z,OPEN,False,254,10,9,https://github.com/take-cheeze,Initial implementation of `RubyVM`.,2,[],https://github.com/mruby/mruby/pull/3978,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3978,"(Related to: #3956 )
Merge #3977 first.
VM stats are now optional with mrbconf.","(Related to: #3956 )
Merge #3977 first.
VM stats are now optional with mrbconf.",True,{}
mruby/mruby,https://github.com/mruby/mruby,3979,2018-03-22T15:23:46Z,2018-03-25T11:50:49Z,2018-03-25T11:52:05Z,CLOSED,False,93,93,1,https://github.com/take-cheeze,Add comment of opcode value.,1,[],https://github.com/mruby/mruby/pull/3979,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3979,For debugging VM on debuggers.,For debugging VM on debuggers.,True,{'THUMBS_UP': ['https://github.com/fundamental']}
mruby/mruby,https://github.com/mruby/mruby,3979,2018-03-22T15:23:46Z,2018-03-25T11:50:49Z,2018-03-25T11:52:05Z,CLOSED,False,93,93,1,https://github.com/take-cheeze,Add comment of opcode value.,1,[],https://github.com/mruby/mruby/pull/3979,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3979#issuecomment-375964516,For debugging VM on debuggers.,"I plan to overhaul opcode structure. So the code above will be removed anyway. I will improve here, by adding enum name for opcode so that we can cast to get opcode names e.g. p (enum mrb_opcode)0 #=> OP_NOP.",True,{'THUMBS_UP': ['https://github.com/take-cheeze']}
mruby/mruby,https://github.com/mruby/mruby,3982,2018-03-24T07:22:32Z,2018-03-24T07:27:23Z,2018-03-24T07:28:17Z,MERGED,True,2,1,2,https://github.com/take-cheeze,Return nil if type differ in `String#<=>`.,1,[],https://github.com/mruby/mruby/pull/3982,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3982,Since it raised TypeError from 1.3: https://wandbox.org/permlink/mQ6E4k3GNATbBZ31,Since it raised TypeError from 1.3: https://wandbox.org/permlink/mQ6E4k3GNATbBZ31,True,{}
mruby/mruby,https://github.com/mruby/mruby,3983,2018-03-25T09:15:54Z,2018-12-21T02:46:18Z,2018-12-21T02:50:23Z,CLOSED,False,2,2,1,https://github.com/take-cheeze,Fix test gem script.,2,[],https://github.com/mruby/mruby/pull/3983,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3983,To fix mruby-cfunc test build and others.,To fix mruby-cfunc test build and others.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3983,2018-03-25T09:15:54Z,2018-12-21T02:46:18Z,2018-12-21T02:50:23Z,CLOSED,False,2,2,1,https://github.com/take-cheeze,Fix test gem script.,2,[],https://github.com/mruby/mruby/pull/3983,https://github.com/matz,2,https://github.com/mruby/mruby/pull/3983#issuecomment-449222566,To fix mruby-cfunc test build and others.,Both commits are covered by b37b312 and 633599a respectively.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3984,2018-03-25T12:13:04Z,2018-03-25T13:25:15Z,2018-03-26T01:59:26Z,MERGED,True,4,0,1,https://github.com/take-cheeze,Catch up with latest mruby-socket.,2,[],https://github.com/mruby/mruby/pull/3984,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3984,iij/mruby-socket@36d016a,iij/mruby-socket@36d016a,True,{}
mruby/mruby,https://github.com/mruby/mruby,3984,2018-03-25T12:13:04Z,2018-03-25T13:25:15Z,2018-03-26T01:59:26Z,MERGED,True,4,0,1,https://github.com/take-cheeze,Catch up with latest mruby-socket.,2,[],https://github.com/mruby/mruby/pull/3984,https://github.com/tsahara,2,https://github.com/mruby/mruby/pull/3984#issuecomment-376024997,iij/mruby-socket@36d016a,This should be reverted.  The change was incorporated into mruby/mruby first then I have backported it to iij/mruby-socket.  There is no reason to set hints.ai_protocol twice here.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3984,2018-03-25T12:13:04Z,2018-03-25T13:25:15Z,2018-03-26T01:59:26Z,MERGED,True,4,0,1,https://github.com/take-cheeze,Catch up with latest mruby-socket.,2,[],https://github.com/mruby/mruby/pull/3984,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/3984#issuecomment-376025390,iij/mruby-socket@36d016a,Ah sorry will revert this. That's my mistake of subtree merging.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3985,2018-03-26T02:02:40Z,2018-03-26T02:07:50Z,2018-03-26T02:12:39Z,MERGED,True,0,4,1,https://github.com/take-cheeze,Revert #3984 .,1,[],https://github.com/mruby/mruby/pull/3985,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3985,#3984 (comment),#3984 (comment),True,{}
mruby/mruby,https://github.com/mruby/mruby,3986,2018-03-27T01:57:20Z,2018-03-27T04:52:14Z,2018-03-27T06:49:21Z,MERGED,True,37,6,2,https://github.com/ksss,Support block yielding for Enumerable#zip,2,[],https://github.com/mruby/mruby/pull/3986,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3986,"Support block yielding for Enumerable#zip
Argument should raise TypeError instead of NoMethodError","Support block yielding for Enumerable#zip
Argument should raise TypeError instead of NoMethodError",True,{}
mruby/mruby,https://github.com/mruby/mruby,3987,2018-03-27T01:58:59Z,2018-03-27T04:53:37Z,2018-03-27T06:49:31Z,MERGED,True,42,17,2,https://github.com/ksss,Reimplement `Enumerable#zip` with Enumerator,1,[],https://github.com/mruby/mruby/pull/3987,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3987,"for fix some specs

passes each element of the result array to a block and return nil if a block is given
converts arguments to arrays using #to_ary
converts arguments to enums using #to_enum
gathers whole arrays as elements when each yields multiple","for fix some specs

passes each element of the result array to a block and return nil if a block is given
converts arguments to arrays using #to_ary
converts arguments to enums using #to_enum
gathers whole arrays as elements when each yields multiple",True,{}
mruby/mruby,https://github.com/mruby/mruby,3988,2018-03-28T01:44:55Z,2018-03-28T05:50:42Z,2018-03-28T06:47:30Z,MERGED,True,1,3,1,https://github.com/ksss,Refactoring for `Enumerable#each_with_object`,1,[],https://github.com/mruby/mruby/pull/3988,https://github.com/ksss,1,https://github.com/mruby/mruby/pull/3988,each_with_object arity should be 1,each_with_object arity should be 1,True,{}
mruby/mruby,https://github.com/mruby/mruby,3990,2018-04-04T05:28:04Z,2018-04-04T06:44:49Z,2018-04-13T03:55:07Z,MERGED,True,13,13,2,https://github.com/mimaki,Fixed memory failure on mruby debugger.,2,[],https://github.com/mruby/mruby/pull/3990,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/3990,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,3991,2018-04-04T06:19:38Z,2018-04-05T06:44:25Z,2018-04-05T06:48:22Z,MERGED,True,12,0,1,https://github.com/take-cheeze,Fix possible heap use after free in `mrb_exec_irep` and stack expanding.,1,[],https://github.com/mruby/mruby/pull/3991,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/3991,"Since mrb_exec_irep doesn't overwrite ci->env it may causes use after free error with MRB_GC_STRESS, address sanitizer, iij/mruby-require.
To fix this REnv of RProc associated to callinfo needs to be adjusted too.
require loop check : .                                                                                                                                                                                                                                                                  
require nest : =================================================================                                                                                                                                                                                                        
==14524==ERROR: AddressSanitizer: heap-use-after-free on address 0x61d000047948 at pc 0x000000490a16 bp 0x7fff491a7440 sp 0x7fff491a7430                                                                                                                                                
READ of size 4 at 0x61d000047948 thread T0                                                                                                                                                                                                                                              
    #0 0x490a15 in gc_mark_children /home/takeshi/dev/mruby/src/gc.c:666                                                                                                                                                                                                                
    #1 0x492bbc in gc_gray_mark /home/takeshi/dev/mruby/src/gc.c:914                                                                                                                                                                                                                    
    #2 0x49359e in incremental_marking_phase /home/takeshi/dev/mruby/src/gc.c:1009                                                                                                                                                                                                      
    #3 0x4948af in incremental_gc /home/takeshi/dev/mruby/src/gc.c:1122                                                                                                                                                                                                                 
    #4 0x4949c7 in incremental_gc_until /home/takeshi/dev/mruby/src/gc.c:1147                                                                                                                                                                                                           
    #5 0x495986 in mrb_full_gc /home/takeshi/dev/mruby/src/gc.c:1247                                                                                                                                                                                                                    
    #6 0x48ed47 in mrb_obj_alloc /home/takeshi/dev/mruby/src/gc.c:513                                                                                                                                                                                                                   
    #7 0x4b423b in str_new /home/takeshi/dev/mruby/src/string.c:61                                                                                                                                                                                                                      
    #8 0x4b71e6 in byte_subseq /home/takeshi/dev/mruby/src/string.c:408                                                                                                                                                                                                                 
    #9 0x4b75ee in str_substr /home/takeshi/dev/mruby/src/string.c:453                                                                                                                                                                                                                  
    #10 0x4be49c in mrb_str_aref /home/takeshi/dev/mruby/src/string.c:1053                                                                                                                                                                                                              
    #11 0x4bec9c in mrb_str_aref_m /home/takeshi/dev/mruby/src/string.c:1147                                                                                                                                                                                                            
    #12 0x430d95 in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1462                                                                                                                                                                                                                   
    #13 0x425da1 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:935                                                                                                                                                                                                                     
    #14 0x45215f in mrb_top_run /home/takeshi/dev/mruby/src/vm.c:3000                                                                                                                                                                                                                   
    #15 0x419397 in load_irep /home/takeshi/dev/mruby/src/load.c:644                                                                                                                                                                                                                    
    #16 0x4193d6 in mrb_load_irep_cxt /home/takeshi/dev/mruby/src/load.c:650                                                                                                                                                                                                            
    #17 0x419400 in mrb_load_irep /home/takeshi/dev/mruby/src/load.c:656                                                                                                                                                                                                                
    #18 0x40514c in GENERATED_TMP_mrb_mruby_require_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-require/gem_test.c:976                                                                                                                                                    
    #19 0x404a49 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:79                                                                                                                                                                                  
    #20 0x40490a in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38                                                                                                                                                                                 
    #21 0x4047c2 in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170                                                                                                                                                                                                        
    #22 0x7f375646882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)                                                                                                                                                                                                   
    #23 0x402ff8 in _start (/home/takeshi/dev/mruby/build/host/bin/mrbtest+0x402ff8)                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                        
0x61d000047948 is located 1224 bytes inside of 2048-byte region [0x61d000047480,0x61d000047c80)                                                                                                                                                                                         
freed by thread T0 here:                                                                                                                                                                                                                                                                
    #0 0x7f37578d2961 in realloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98961)                                                                                                                                                                                                       
    #1 0x452ad8 in mrb_default_allocf /home/takeshi/dev/mruby/src/state.c:55                                                                                                                                                                                                            
    #2 0x48c41a in mrb_realloc_simple /home/takeshi/dev/mruby/src/gc.c:206                                                                                                                                                                                                              
    #3 0x48c58e in mrb_realloc /home/takeshi/dev/mruby/src/gc.c:220                                                                                                                                                                                                                     
    #4 0x41b5bd in stack_extend_alloc /home/takeshi/dev/mruby/src/vm.c:191                                                                                                                                                                                                              
    #5 0x41bad9 in stack_extend /home/takeshi/dev/mruby/src/vm.c:212                                                                                                                                                                                                                    
    #6 0x43308e in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1564                                                                                                                                                                                                                    
    #7 0x425da1 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:935                                                                                                                                                                                                                      
    #8 0x45215f in mrb_top_run /home/takeshi/dev/mruby/src/vm.c:3000                                                                                                                                                                                                                    
    #9 0x419397 in load_irep /home/takeshi/dev/mruby/src/load.c:644                                                                                                                                                                                                                     
    #10 0x4193d6 in mrb_load_irep_cxt /home/takeshi/dev/mruby/src/load.c:650                                                                                                                                                                                                            
    #11 0x419400 in mrb_load_irep /home/takeshi/dev/mruby/src/load.c:656                                                                                                                                                                                                                
    #12 0x40514c in GENERATED_TMP_mrb_mruby_require_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-require/gem_test.c:976                                                                                                                                                    
    #13 0x404a49 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:79                                                                                                                                                                                  
    #14 0x40490a in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38                                                                                                                                                                                 
    #15 0x4047c2 in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170                                                                                                                                                                                                        
    #16 0x7f375646882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                        
previously allocated by thread T0 here:                                                                                                                                                                                                                                                 
    #0 0x7f37578d2961 in realloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98961)                                                                                                                                                                                                       
    #1 0x452ad8 in mrb_default_allocf /home/takeshi/dev/mruby/src/state.c:55                                                                                                                                                                                                            
    #2 0x48c41a in mrb_realloc_simple /home/takeshi/dev/mruby/src/gc.c:206                                                                                                                                                                                                              
    #3 0x48c58e in mrb_realloc /home/takeshi/dev/mruby/src/gc.c:220                                                                                                                                                                                                                     
    #4 0x48c82d in mrb_malloc /home/takeshi/dev/mruby/src/gc.c:242                                                                                                                                                                                                                      
    #5 0x48c8cf in mrb_calloc /home/takeshi/dev/mruby/src/gc.c:260                                                                                                                                                                                                                      
    #6 0x41a9e1 in stack_init /home/takeshi/dev/mruby/src/vm.c:131                                                                                                                                                                                                                      
    #7 0x41eaf7 in mrb_funcall_with_block /home/takeshi/dev/mruby/src/vm.c:420                                                                                                                                                                                                          
    #8 0x41e5c2 in mrb_funcall_with_block /home/takeshi/dev/mruby/src/vm.c:398                                                                                                                                                                                                          
    #9 0x4206a4 in mrb_funcall_argv /home/takeshi/dev/mruby/src/vm.c:503                                                                                                                                                                                                                
    #10 0x4a972e in mrb_obj_new /home/takeshi/dev/mruby/src/class.c:1610                                                                                                                                                                                                                
    #11 0x487113 in mrb_exc_new_str /home/takeshi/dev/mruby/src/error.c:32                                                                                                                                                                                                              
    #12 0x48b20c in mrb_init_exception /home/takeshi/dev/mruby/src/error.c:507                                                                                                                                                                                                          
    #13 0x45f1ed in mrb_init_core /home/takeshi/dev/mruby/src/init.c:42                                                                                                                                                                                                                 
    #14 0x452a88 in mrb_open_core /home/takeshi/dev/mruby/src/state.c:42                                                                                                                                                                                                                
    #15 0x404df2 in GENERATED_TMP_mrb_mruby_require_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-require/gem_test.c:937                                                                                                                                                    
    #16 0x404a49 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:79                                                                                                                                                                                  
    #17 0x40490a in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38                                                                                                                                                                                 
    #18 0x4047c2 in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170                                                                                                                                                                                                        
    #19 0x7f375646882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                        
SUMMARY: AddressSanitizer: heap-use-after-free /home/takeshi/dev/mruby/src/gc.c:666 gc_mark_children                                                                                                                                                                                    
Shadow bytes around the buggy address:                                                                                                                                                                                                                                                  
  0x0c3a80000ed0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000ee0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000ef0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f00: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f10: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
=>0x0c3a80000f20: fd fd fd fd fd fd fd fd fd[fd]fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f30: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f40: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c3a80000f60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c3a80000f70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==14524==ABORTING
rake aborted!
Command Failed: [""build/host/bin/mrbtest"" -v]","Since mrb_exec_irep doesn't overwrite ci->env it may causes use after free error with MRB_GC_STRESS, address sanitizer, iij/mruby-require.
To fix this REnv of RProc associated to callinfo needs to be adjusted too.
require loop check : .                                                                                                                                                                                                                                                                  
require nest : =================================================================                                                                                                                                                                                                        
==14524==ERROR: AddressSanitizer: heap-use-after-free on address 0x61d000047948 at pc 0x000000490a16 bp 0x7fff491a7440 sp 0x7fff491a7430                                                                                                                                                
READ of size 4 at 0x61d000047948 thread T0                                                                                                                                                                                                                                              
    #0 0x490a15 in gc_mark_children /home/takeshi/dev/mruby/src/gc.c:666                                                                                                                                                                                                                
    #1 0x492bbc in gc_gray_mark /home/takeshi/dev/mruby/src/gc.c:914                                                                                                                                                                                                                    
    #2 0x49359e in incremental_marking_phase /home/takeshi/dev/mruby/src/gc.c:1009                                                                                                                                                                                                      
    #3 0x4948af in incremental_gc /home/takeshi/dev/mruby/src/gc.c:1122                                                                                                                                                                                                                 
    #4 0x4949c7 in incremental_gc_until /home/takeshi/dev/mruby/src/gc.c:1147                                                                                                                                                                                                           
    #5 0x495986 in mrb_full_gc /home/takeshi/dev/mruby/src/gc.c:1247                                                                                                                                                                                                                    
    #6 0x48ed47 in mrb_obj_alloc /home/takeshi/dev/mruby/src/gc.c:513                                                                                                                                                                                                                   
    #7 0x4b423b in str_new /home/takeshi/dev/mruby/src/string.c:61                                                                                                                                                                                                                      
    #8 0x4b71e6 in byte_subseq /home/takeshi/dev/mruby/src/string.c:408                                                                                                                                                                                                                 
    #9 0x4b75ee in str_substr /home/takeshi/dev/mruby/src/string.c:453                                                                                                                                                                                                                  
    #10 0x4be49c in mrb_str_aref /home/takeshi/dev/mruby/src/string.c:1053                                                                                                                                                                                                              
    #11 0x4bec9c in mrb_str_aref_m /home/takeshi/dev/mruby/src/string.c:1147                                                                                                                                                                                                            
    #12 0x430d95 in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1462                                                                                                                                                                                                                   
    #13 0x425da1 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:935                                                                                                                                                                                                                     
    #14 0x45215f in mrb_top_run /home/takeshi/dev/mruby/src/vm.c:3000                                                                                                                                                                                                                   
    #15 0x419397 in load_irep /home/takeshi/dev/mruby/src/load.c:644                                                                                                                                                                                                                    
    #16 0x4193d6 in mrb_load_irep_cxt /home/takeshi/dev/mruby/src/load.c:650                                                                                                                                                                                                            
    #17 0x419400 in mrb_load_irep /home/takeshi/dev/mruby/src/load.c:656                                                                                                                                                                                                                
    #18 0x40514c in GENERATED_TMP_mrb_mruby_require_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-require/gem_test.c:976                                                                                                                                                    
    #19 0x404a49 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:79                                                                                                                                                                                  
    #20 0x40490a in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38                                                                                                                                                                                 
    #21 0x4047c2 in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170                                                                                                                                                                                                        
    #22 0x7f375646882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)                                                                                                                                                                                                   
    #23 0x402ff8 in _start (/home/takeshi/dev/mruby/build/host/bin/mrbtest+0x402ff8)                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                        
0x61d000047948 is located 1224 bytes inside of 2048-byte region [0x61d000047480,0x61d000047c80)                                                                                                                                                                                         
freed by thread T0 here:                                                                                                                                                                                                                                                                
    #0 0x7f37578d2961 in realloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98961)                                                                                                                                                                                                       
    #1 0x452ad8 in mrb_default_allocf /home/takeshi/dev/mruby/src/state.c:55                                                                                                                                                                                                            
    #2 0x48c41a in mrb_realloc_simple /home/takeshi/dev/mruby/src/gc.c:206                                                                                                                                                                                                              
    #3 0x48c58e in mrb_realloc /home/takeshi/dev/mruby/src/gc.c:220                                                                                                                                                                                                                     
    #4 0x41b5bd in stack_extend_alloc /home/takeshi/dev/mruby/src/vm.c:191                                                                                                                                                                                                              
    #5 0x41bad9 in stack_extend /home/takeshi/dev/mruby/src/vm.c:212                                                                                                                                                                                                                    
    #6 0x43308e in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1564                                                                                                                                                                                                                    
    #7 0x425da1 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:935                                                                                                                                                                                                                      
    #8 0x45215f in mrb_top_run /home/takeshi/dev/mruby/src/vm.c:3000                                                                                                                                                                                                                    
    #9 0x419397 in load_irep /home/takeshi/dev/mruby/src/load.c:644                                                                                                                                                                                                                     
    #10 0x4193d6 in mrb_load_irep_cxt /home/takeshi/dev/mruby/src/load.c:650                                                                                                                                                                                                            
    #11 0x419400 in mrb_load_irep /home/takeshi/dev/mruby/src/load.c:656                                                                                                                                                                                                                
    #12 0x40514c in GENERATED_TMP_mrb_mruby_require_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-require/gem_test.c:976                                                                                                                                                    
    #13 0x404a49 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:79                                                                                                                                                                                  
    #14 0x40490a in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38                                                                                                                                                                                 
    #15 0x4047c2 in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170                                                                                                                                                                                                        
    #16 0x7f375646882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                        
previously allocated by thread T0 here:                                                                                                                                                                                                                                                 
    #0 0x7f37578d2961 in realloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98961)                                                                                                                                                                                                       
    #1 0x452ad8 in mrb_default_allocf /home/takeshi/dev/mruby/src/state.c:55                                                                                                                                                                                                            
    #2 0x48c41a in mrb_realloc_simple /home/takeshi/dev/mruby/src/gc.c:206                                                                                                                                                                                                              
    #3 0x48c58e in mrb_realloc /home/takeshi/dev/mruby/src/gc.c:220                                                                                                                                                                                                                     
    #4 0x48c82d in mrb_malloc /home/takeshi/dev/mruby/src/gc.c:242                                                                                                                                                                                                                      
    #5 0x48c8cf in mrb_calloc /home/takeshi/dev/mruby/src/gc.c:260                                                                                                                                                                                                                      
    #6 0x41a9e1 in stack_init /home/takeshi/dev/mruby/src/vm.c:131                                                                                                                                                                                                                      
    #7 0x41eaf7 in mrb_funcall_with_block /home/takeshi/dev/mruby/src/vm.c:420                                                                                                                                                                                                          
    #8 0x41e5c2 in mrb_funcall_with_block /home/takeshi/dev/mruby/src/vm.c:398                                                                                                                                                                                                          
    #9 0x4206a4 in mrb_funcall_argv /home/takeshi/dev/mruby/src/vm.c:503                                                                                                                                                                                                                
    #10 0x4a972e in mrb_obj_new /home/takeshi/dev/mruby/src/class.c:1610                                                                                                                                                                                                                
    #11 0x487113 in mrb_exc_new_str /home/takeshi/dev/mruby/src/error.c:32                                                                                                                                                                                                              
    #12 0x48b20c in mrb_init_exception /home/takeshi/dev/mruby/src/error.c:507                                                                                                                                                                                                          
    #13 0x45f1ed in mrb_init_core /home/takeshi/dev/mruby/src/init.c:42                                                                                                                                                                                                                 
    #14 0x452a88 in mrb_open_core /home/takeshi/dev/mruby/src/state.c:42                                                                                                                                                                                                                
    #15 0x404df2 in GENERATED_TMP_mrb_mruby_require_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-require/gem_test.c:937                                                                                                                                                    
    #16 0x404a49 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:79                                                                                                                                                                                  
    #17 0x40490a in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38                                                                                                                                                                                 
    #18 0x4047c2 in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170                                                                                                                                                                                                        
    #19 0x7f375646882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                        
SUMMARY: AddressSanitizer: heap-use-after-free /home/takeshi/dev/mruby/src/gc.c:666 gc_mark_children                                                                                                                                                                                    
Shadow bytes around the buggy address:                                                                                                                                                                                                                                                  
  0x0c3a80000ed0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000ee0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000ef0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f00: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f10: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
=>0x0c3a80000f20: fd fd fd fd fd fd fd fd fd[fd]fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f30: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f40: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c3a80000f60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c3a80000f70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==14524==ABORTING
rake aborted!
Command Failed: [""build/host/bin/mrbtest"" -v]",True,{}
mruby/mruby,https://github.com/mruby/mruby,3991,2018-04-04T06:19:38Z,2018-04-05T06:44:25Z,2018-04-05T06:48:22Z,MERGED,True,12,0,1,https://github.com/take-cheeze,Fix possible heap use after free in `mrb_exec_irep` and stack expanding.,1,[],https://github.com/mruby/mruby/pull/3991,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/3991#issuecomment-378807465,"Since mrb_exec_irep doesn't overwrite ci->env it may causes use after free error with MRB_GC_STRESS, address sanitizer, iij/mruby-require.
To fix this REnv of RProc associated to callinfo needs to be adjusted too.
require loop check : .                                                                                                                                                                                                                                                                  
require nest : =================================================================                                                                                                                                                                                                        
==14524==ERROR: AddressSanitizer: heap-use-after-free on address 0x61d000047948 at pc 0x000000490a16 bp 0x7fff491a7440 sp 0x7fff491a7430                                                                                                                                                
READ of size 4 at 0x61d000047948 thread T0                                                                                                                                                                                                                                              
    #0 0x490a15 in gc_mark_children /home/takeshi/dev/mruby/src/gc.c:666                                                                                                                                                                                                                
    #1 0x492bbc in gc_gray_mark /home/takeshi/dev/mruby/src/gc.c:914                                                                                                                                                                                                                    
    #2 0x49359e in incremental_marking_phase /home/takeshi/dev/mruby/src/gc.c:1009                                                                                                                                                                                                      
    #3 0x4948af in incremental_gc /home/takeshi/dev/mruby/src/gc.c:1122                                                                                                                                                                                                                 
    #4 0x4949c7 in incremental_gc_until /home/takeshi/dev/mruby/src/gc.c:1147                                                                                                                                                                                                           
    #5 0x495986 in mrb_full_gc /home/takeshi/dev/mruby/src/gc.c:1247                                                                                                                                                                                                                    
    #6 0x48ed47 in mrb_obj_alloc /home/takeshi/dev/mruby/src/gc.c:513                                                                                                                                                                                                                   
    #7 0x4b423b in str_new /home/takeshi/dev/mruby/src/string.c:61                                                                                                                                                                                                                      
    #8 0x4b71e6 in byte_subseq /home/takeshi/dev/mruby/src/string.c:408                                                                                                                                                                                                                 
    #9 0x4b75ee in str_substr /home/takeshi/dev/mruby/src/string.c:453                                                                                                                                                                                                                  
    #10 0x4be49c in mrb_str_aref /home/takeshi/dev/mruby/src/string.c:1053                                                                                                                                                                                                              
    #11 0x4bec9c in mrb_str_aref_m /home/takeshi/dev/mruby/src/string.c:1147                                                                                                                                                                                                            
    #12 0x430d95 in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1462                                                                                                                                                                                                                   
    #13 0x425da1 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:935                                                                                                                                                                                                                     
    #14 0x45215f in mrb_top_run /home/takeshi/dev/mruby/src/vm.c:3000                                                                                                                                                                                                                   
    #15 0x419397 in load_irep /home/takeshi/dev/mruby/src/load.c:644                                                                                                                                                                                                                    
    #16 0x4193d6 in mrb_load_irep_cxt /home/takeshi/dev/mruby/src/load.c:650                                                                                                                                                                                                            
    #17 0x419400 in mrb_load_irep /home/takeshi/dev/mruby/src/load.c:656                                                                                                                                                                                                                
    #18 0x40514c in GENERATED_TMP_mrb_mruby_require_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-require/gem_test.c:976                                                                                                                                                    
    #19 0x404a49 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:79                                                                                                                                                                                  
    #20 0x40490a in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38                                                                                                                                                                                 
    #21 0x4047c2 in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170                                                                                                                                                                                                        
    #22 0x7f375646882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)                                                                                                                                                                                                   
    #23 0x402ff8 in _start (/home/takeshi/dev/mruby/build/host/bin/mrbtest+0x402ff8)                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                        
0x61d000047948 is located 1224 bytes inside of 2048-byte region [0x61d000047480,0x61d000047c80)                                                                                                                                                                                         
freed by thread T0 here:                                                                                                                                                                                                                                                                
    #0 0x7f37578d2961 in realloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98961)                                                                                                                                                                                                       
    #1 0x452ad8 in mrb_default_allocf /home/takeshi/dev/mruby/src/state.c:55                                                                                                                                                                                                            
    #2 0x48c41a in mrb_realloc_simple /home/takeshi/dev/mruby/src/gc.c:206                                                                                                                                                                                                              
    #3 0x48c58e in mrb_realloc /home/takeshi/dev/mruby/src/gc.c:220                                                                                                                                                                                                                     
    #4 0x41b5bd in stack_extend_alloc /home/takeshi/dev/mruby/src/vm.c:191                                                                                                                                                                                                              
    #5 0x41bad9 in stack_extend /home/takeshi/dev/mruby/src/vm.c:212                                                                                                                                                                                                                    
    #6 0x43308e in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1564                                                                                                                                                                                                                    
    #7 0x425da1 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:935                                                                                                                                                                                                                      
    #8 0x45215f in mrb_top_run /home/takeshi/dev/mruby/src/vm.c:3000                                                                                                                                                                                                                    
    #9 0x419397 in load_irep /home/takeshi/dev/mruby/src/load.c:644                                                                                                                                                                                                                     
    #10 0x4193d6 in mrb_load_irep_cxt /home/takeshi/dev/mruby/src/load.c:650                                                                                                                                                                                                            
    #11 0x419400 in mrb_load_irep /home/takeshi/dev/mruby/src/load.c:656                                                                                                                                                                                                                
    #12 0x40514c in GENERATED_TMP_mrb_mruby_require_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-require/gem_test.c:976                                                                                                                                                    
    #13 0x404a49 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:79                                                                                                                                                                                  
    #14 0x40490a in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38                                                                                                                                                                                 
    #15 0x4047c2 in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170                                                                                                                                                                                                        
    #16 0x7f375646882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                        
previously allocated by thread T0 here:                                                                                                                                                                                                                                                 
    #0 0x7f37578d2961 in realloc (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x98961)                                                                                                                                                                                                       
    #1 0x452ad8 in mrb_default_allocf /home/takeshi/dev/mruby/src/state.c:55                                                                                                                                                                                                            
    #2 0x48c41a in mrb_realloc_simple /home/takeshi/dev/mruby/src/gc.c:206                                                                                                                                                                                                              
    #3 0x48c58e in mrb_realloc /home/takeshi/dev/mruby/src/gc.c:220                                                                                                                                                                                                                     
    #4 0x48c82d in mrb_malloc /home/takeshi/dev/mruby/src/gc.c:242                                                                                                                                                                                                                      
    #5 0x48c8cf in mrb_calloc /home/takeshi/dev/mruby/src/gc.c:260                                                                                                                                                                                                                      
    #6 0x41a9e1 in stack_init /home/takeshi/dev/mruby/src/vm.c:131                                                                                                                                                                                                                      
    #7 0x41eaf7 in mrb_funcall_with_block /home/takeshi/dev/mruby/src/vm.c:420                                                                                                                                                                                                          
    #8 0x41e5c2 in mrb_funcall_with_block /home/takeshi/dev/mruby/src/vm.c:398                                                                                                                                                                                                          
    #9 0x4206a4 in mrb_funcall_argv /home/takeshi/dev/mruby/src/vm.c:503                                                                                                                                                                                                                
    #10 0x4a972e in mrb_obj_new /home/takeshi/dev/mruby/src/class.c:1610                                                                                                                                                                                                                
    #11 0x487113 in mrb_exc_new_str /home/takeshi/dev/mruby/src/error.c:32                                                                                                                                                                                                              
    #12 0x48b20c in mrb_init_exception /home/takeshi/dev/mruby/src/error.c:507                                                                                                                                                                                                          
    #13 0x45f1ed in mrb_init_core /home/takeshi/dev/mruby/src/init.c:42                                                                                                                                                                                                                 
    #14 0x452a88 in mrb_open_core /home/takeshi/dev/mruby/src/state.c:42                                                                                                                                                                                                                
    #15 0x404df2 in GENERATED_TMP_mrb_mruby_require_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-require/gem_test.c:937                                                                                                                                                    
    #16 0x404a49 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:79                                                                                                                                                                                  
    #17 0x40490a in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38                                                                                                                                                                                 
    #18 0x4047c2 in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170                                                                                                                                                                                                        
    #19 0x7f375646882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)                                                                                                                                                                                                   
                                                                                                                                                                                                                                                                                        
SUMMARY: AddressSanitizer: heap-use-after-free /home/takeshi/dev/mruby/src/gc.c:666 gc_mark_children                                                                                                                                                                                    
Shadow bytes around the buggy address:                                                                                                                                                                                                                                                  
  0x0c3a80000ed0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000ee0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000ef0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f00: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f10: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
=>0x0c3a80000f20: fd fd fd fd fd fd fd fd fd[fd]fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f30: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f40: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd                                                                                                                                                                                                                       
  0x0c3a80000f50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c3a80000f60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c3a80000f70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==14524==ABORTING
rake aborted!
Command Failed: [""build/host/bin/mrbtest"" -v]",Updated with logs.,True,{}
mruby/mruby,https://github.com/mruby/mruby,3994,2018-04-10T06:27:25Z,2018-04-10T07:35:48Z,2018-04-10T07:39:15Z,MERGED,True,0,3,1,https://github.com/kou,Fix build error on Windows with MRB_BUILD_AS_DLL,1,[],https://github.com/mruby/mruby/pull/3994,https://github.com/kou,1,https://github.com/mruby/mruby/pull/3994,"Error message:
C:\projects\groonga\vendor\mruby-source\include\mruby.h(1098): error C2375: 'mrb_gc_arena_save' : redefinition; different linkage [C:\projects\groonga\vendor\mruby\mruby.vcxproj]
          C:\projects\groonga\vendor\mruby-source\include\mruby.h(1083) : see declaration of 'mrb_gc_arena_save'
C:\projects\groonga\vendor\mruby-source\include\mruby.h(1099): error C2375: 'mrb_gc_arena_restore' : redefinition; different linkage [C:\projects\groonga\vendor\mruby\mruby.vcxproj]
          C:\projects\groonga\vendor\mruby-source\include\mruby.h(1084) : see declaration of 'mrb_gc_arena_restore'

We may be able to fix this by just removing MRB_API but I didn't try it yet. Because  we already have static declarations of them.","Error message:
C:\projects\groonga\vendor\mruby-source\include\mruby.h(1098): error C2375: 'mrb_gc_arena_save' : redefinition; different linkage [C:\projects\groonga\vendor\mruby\mruby.vcxproj]
          C:\projects\groonga\vendor\mruby-source\include\mruby.h(1083) : see declaration of 'mrb_gc_arena_save'
C:\projects\groonga\vendor\mruby-source\include\mruby.h(1099): error C2375: 'mrb_gc_arena_restore' : redefinition; different linkage [C:\projects\groonga\vendor\mruby\mruby.vcxproj]
          C:\projects\groonga\vendor\mruby-source\include\mruby.h(1084) : see declaration of 'mrb_gc_arena_restore'

We may be able to fix this by just removing MRB_API but I didn't try it yet. Because  we already have static declarations of them.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4003,2018-04-17T14:02:34Z,2018-04-17T14:08:37Z,2018-04-17T14:21:24Z,MERGED,True,11,5,2,https://github.com/take-cheeze,Fallback to float when compiled binary with 64bit compiler.,1,[],https://github.com/mruby/mruby/pull/4003,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4003,"closes #3997.
In compiler built with MRB_INT64, it treats integer as Fixnum that doesn't fit to int32_t.","closes #3997.
In compiler built with MRB_INT64, it treats integer as Fixnum that doesn't fit to int32_t.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4003,2018-04-17T14:02:34Z,2018-04-17T14:08:37Z,2018-04-17T14:21:24Z,MERGED,True,11,5,2,https://github.com/take-cheeze,Fallback to float when compiled binary with 64bit compiler.,1,[],https://github.com/mruby/mruby/pull/4003,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4003#issuecomment-382006358,"closes #3997.
In compiler built with MRB_INT64, it treats integer as Fixnum that doesn't fit to int32_t.",I think we need to update the mrbc format not to depend on the mrb_int size of the platform in the future.,True,"{'THUMBS_UP': ['https://github.com/take-cheeze', 'https://github.com/kimushu']}"
mruby/mruby,https://github.com/mruby/mruby,4006,2018-04-23T03:07:52Z,2018-04-23T04:13:37Z,2018-04-23T04:21:37Z,MERGED,True,1,0,1,https://github.com/take-cheeze,Fix undefined error of pointer dereference.,1,[],https://github.com/mruby/mruby/pull/4006,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4006,"Since it's noisy and may cause an error in specific environment.
/home/takeshi/dev/mruby/src/backtrace.c:55:13: runtime error: pointer index expression with base 0x000000000000 overflowed to 0xfffffffffffffffc
    #0 0x801b29 in each_backtrace /home/takeshi/dev/mruby/src/backtrace.c:55:13
    #1 0x7fd347 in packed_backtrace /home/takeshi/dev/mruby/src/backtrace.c:206:3
    #2 0x7fc831 in mrb_keep_backtrace /home/takeshi/dev/mruby/src/backtrace.c:225:15
    #3 0x6bcbbc in mrb_exc_set /home/takeshi/dev/mruby/src/error.c:238:7
    #4 0x6be277 in mrb_exc_raise /home/takeshi/dev/mruby/src/error.c:249:3
    #5 0x7b1e74 in mrb_f_raise /home/takeshi/dev/mruby/src/kernel.c:903:5
    #6 0x5a8df9 in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1469:18
    #7 0x58aa70 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:947:12
    #8 0x57bbfc in mrb_run /home/takeshi/dev/mruby/src/vm.c:2988:12
    #9 0x613d59 in ecall /home/takeshi/dev/mruby/src/vm.c:367:3
    #10 0x5c665d in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1954:15
    #11 0x58aa70 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:947:12
    #12 0x615f38 in mrb_top_run /home/takeshi/dev/mruby/src/vm.c:3002:12
    #13 0x560b33 in load_irep /home/takeshi/dev/mruby/src/load.c:645:10
    #14 0x560345 in mrb_load_irep_cxt /home/takeshi/dev/mruby/src/load.c:651:10
    #15 0x560d6b in mrb_load_irep /home/takeshi/dev/mruby/src/load.c:657:10
    #16 0x557de5 in GENERATED_TMP_mrb_mruby_test_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/gem_test.c:18107:3
    #17 0x52f853 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:65:5
    #18 0x52f680 in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38:3
    #19 0x52e6ed in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170:3
    #20 0x7f429a5de82f in __libc_start_main /build/glibc-Cl5G7W/glibc-2.23/csu/../csu/libc-start.c:291
    #21 0x4232d8 in _start (/home/takeshi/dev/mruby/build/host/bin/mrbtest+0x4232d8)

SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /home/takeshi/dev/mruby/src/backtrace.c:55:13 in","Since it's noisy and may cause an error in specific environment.
/home/takeshi/dev/mruby/src/backtrace.c:55:13: runtime error: pointer index expression with base 0x000000000000 overflowed to 0xfffffffffffffffc
    #0 0x801b29 in each_backtrace /home/takeshi/dev/mruby/src/backtrace.c:55:13
    #1 0x7fd347 in packed_backtrace /home/takeshi/dev/mruby/src/backtrace.c:206:3
    #2 0x7fc831 in mrb_keep_backtrace /home/takeshi/dev/mruby/src/backtrace.c:225:15
    #3 0x6bcbbc in mrb_exc_set /home/takeshi/dev/mruby/src/error.c:238:7
    #4 0x6be277 in mrb_exc_raise /home/takeshi/dev/mruby/src/error.c:249:3
    #5 0x7b1e74 in mrb_f_raise /home/takeshi/dev/mruby/src/kernel.c:903:5
    #6 0x5a8df9 in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1469:18
    #7 0x58aa70 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:947:12
    #8 0x57bbfc in mrb_run /home/takeshi/dev/mruby/src/vm.c:2988:12
    #9 0x613d59 in ecall /home/takeshi/dev/mruby/src/vm.c:367:3
    #10 0x5c665d in mrb_vm_exec /home/takeshi/dev/mruby/src/vm.c:1954:15
    #11 0x58aa70 in mrb_vm_run /home/takeshi/dev/mruby/src/vm.c:947:12
    #12 0x615f38 in mrb_top_run /home/takeshi/dev/mruby/src/vm.c:3002:12
    #13 0x560b33 in load_irep /home/takeshi/dev/mruby/src/load.c:645:10
    #14 0x560345 in mrb_load_irep_cxt /home/takeshi/dev/mruby/src/load.c:651:10
    #15 0x560d6b in mrb_load_irep /home/takeshi/dev/mruby/src/load.c:657:10
    #16 0x557de5 in GENERATED_TMP_mrb_mruby_test_gem_test /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/gem_test.c:18107:3
    #17 0x52f853 in mrbgemtest_init /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:65:5
    #18 0x52f680 in mrb_init_mrbtest /home/takeshi/dev/mruby/build/host/mrbgems/mruby-test/mrbtest.c:38:3
    #19 0x52e6ed in main /home/takeshi/dev/mruby/mrbgems/mruby-test/driver.c:170:3
    #20 0x7f429a5de82f in __libc_start_main /build/glibc-Cl5G7W/glibc-2.23/csu/../csu/libc-start.c:291
    #21 0x4232d8 in _start (/home/takeshi/dev/mruby/build/host/bin/mrbtest+0x4232d8)

SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /home/takeshi/dev/mruby/src/backtrace.c:55:13 in",True,{}
mruby/mruby,https://github.com/mruby/mruby,4007,2018-04-23T03:46:58Z,2018-04-23T04:15:10Z,2018-04-23T07:43:35Z,MERGED,True,18,14,1,https://github.com/tsahara,sort method should not consume system stack.,1,[],https://github.com/mruby/mruby/pull/4007,https://github.com/tsahara,1,https://github.com/mruby/mruby/pull/4007,"Current implementation of Enumerable#sort is vulnerable to malicious input.  It should not consume system stack.
% bin/mruby -e 'a = 1.upto(600).to_a + 600.downto(1).to_a; a.map{ |i| [i] }.sort'

trace (most recent call last):
        [0] -e:1
        [1] /d/home/tsahara/src/mruby-master/mrblib/array.rb:234:in sort
        [2] /d/home/tsahara/src/mruby-master/mrblib/array.rb:228:in sort!
        [3] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [4] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [5] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [6] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [7] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [8] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
(snip)
        [511] /d/home/tsahara/src/mruby-master/mrblib/array.rb:205:in __sort_sub__
        [512] /d/home/tsahara/src/mruby-master/mrblib/array.rb:164:in <=>
/d/home/tsahara/src/mruby-master/mrblib/array.rb:164: stack level too deep (Syst
emStackError)

With attached patch, mruby uses a dynamically allocated array as a stack.","Current implementation of Enumerable#sort is vulnerable to malicious input.  It should not consume system stack.
% bin/mruby -e 'a = 1.upto(600).to_a + 600.downto(1).to_a; a.map{ |i| [i] }.sort'

trace (most recent call last):
        [0] -e:1
        [1] /d/home/tsahara/src/mruby-master/mrblib/array.rb:234:in sort
        [2] /d/home/tsahara/src/mruby-master/mrblib/array.rb:228:in sort!
        [3] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [4] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [5] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [6] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [7] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
        [8] /d/home/tsahara/src/mruby-master/mrblib/array.rb:216:in __sort_sub__
(snip)
        [511] /d/home/tsahara/src/mruby-master/mrblib/array.rb:205:in __sort_sub__
        [512] /d/home/tsahara/src/mruby-master/mrblib/array.rb:164:in <=>
/d/home/tsahara/src/mruby-master/mrblib/array.rb:164: stack level too deep (Syst
emStackError)

With attached patch, mruby uses a dynamically allocated array as a stack.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4010,2018-04-25T04:27:39Z,2018-04-25T06:59:57Z,2018-04-25T07:00:34Z,MERGED,True,10,0,2,https://github.com/take-cheeze,Fix array replace leak error in mruby-uri.,1,[],https://github.com/mruby/mruby/pull/4010,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4010,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4011,2018-04-26T06:28:38Z,2018-04-26T14:00:26Z,2018-04-26T20:12:12Z,MERGED,True,1,1,1,https://github.com/kou,Fix wrong the number of marked objects of MRB_TT_ENV in gray mark phase,1,[],https://github.com/mruby/mruby/pull/4011,https://github.com/kou,1,https://github.com/mruby/mruby/pull/4011,"If MRB_TT_ENV has stack shared flag or bidx flag, flags is too large
than the real stack size.","If MRB_TT_ENV has stack shared flag or bidx flag, flags is too large
than the real stack size.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4011,2018-04-26T06:28:38Z,2018-04-26T14:00:26Z,2018-04-26T20:12:12Z,MERGED,True,1,1,1,https://github.com/kou,Fix wrong the number of marked objects of MRB_TT_ENV in gray mark phase,1,[],https://github.com/mruby/mruby/pull/4011,https://github.com/kou,2,https://github.com/mruby/mruby/pull/4011#issuecomment-384533305,"If MRB_TT_ENV has stack shared flag or bidx flag, flags is too large
than the real stack size.","We should have done this in 93f5f22.
We may have more similar missing changes.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4011,2018-04-26T06:28:38Z,2018-04-26T14:00:26Z,2018-04-26T20:12:12Z,MERGED,True,1,1,1,https://github.com/kou,Fix wrong the number of marked objects of MRB_TT_ENV in gray mark phase,1,[],https://github.com/mruby/mruby/pull/4011,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4011#issuecomment-384669452,"If MRB_TT_ENV has stack shared flag or bidx flag, flags is too large
than the real stack size.","As far as I searched around the code tonight, I don't find such missing changes.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4011,2018-04-26T06:28:38Z,2018-04-26T14:00:26Z,2018-04-26T20:12:12Z,MERGED,True,1,1,1,https://github.com/kou,Fix wrong the number of marked objects of MRB_TT_ENV in gray mark phase,1,[],https://github.com/mruby/mruby/pull/4011,https://github.com/kou,4,https://github.com/mruby/mruby/pull/4011#issuecomment-384774030,"If MRB_TT_ENV has stack shared flag or bidx flag, flags is too large
than the real stack size.",Thanks for confirming it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4012,2018-04-27T01:49:10Z,2018-04-28T01:08:21Z,2018-04-28T01:24:25Z,MERGED,True,2,0,1,https://github.com/take-cheeze,Fix heap use after free on mruby-aws-sigv4.,1,[],https://github.com/mruby/mruby/pull/4012,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4012,"https://103.128.221.202.static.iijgio.jp/jenkins/view/0-master-mrbgem/job/master-mruby-aws-sigv4/37/consoleFull
BTW is modifying self value of env OK?","https://103.128.221.202.static.iijgio.jp/jenkins/view/0-master-mrbgem/job/master-mruby-aws-sigv4/37/consoleFull
BTW is modifying self value of env OK?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4012,2018-04-27T01:49:10Z,2018-04-28T01:08:21Z,2018-04-28T01:24:25Z,MERGED,True,2,0,1,https://github.com/take-cheeze,Fix heap use after free on mruby-aws-sigv4.,1,[],https://github.com/mruby/mruby/pull/4012,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4012#issuecomment-385128164,"https://103.128.221.202.static.iijgio.jp/jenkins/view/0-master-mrbgem/job/master-mruby-aws-sigv4/37/consoleFull
BTW is modifying self value of env OK?",It's OK for this case.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4013,2018-04-27T02:47:33Z,2018-04-28T02:28:10Z,2018-04-29T01:31:39Z,CLOSED,False,55,13,2,https://github.com/kimushu,Fix Enumerable#hash on non 32-bit integer conf.,1,[],https://github.com/mruby/mruby/pull/4013,https://github.com/kimushu,1,https://github.com/mruby/mruby/pull/4013,"Enumerable#hash is implemented on enum.rb with hard-coded range (0x7fffffff).
This does not work on the environments with small integer (31-bit or less).
This patch redefines Enumerable#hash on C side.","Enumerable#hash is implemented on enum.rb with hard-coded range (0x7fffffff).
This does not work on the environments with small integer (31-bit or less).
This patch redefines Enumerable#hash on C side.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4013,2018-04-27T02:47:33Z,2018-04-28T02:28:10Z,2018-04-29T01:31:39Z,CLOSED,False,55,13,2,https://github.com/kimushu,Fix Enumerable#hash on non 32-bit integer conf.,1,[],https://github.com/mruby/mruby/pull/4013,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4013#issuecomment-385133220,"Enumerable#hash is implemented on enum.rb with hard-coded range (0x7fffffff).
This does not work on the environments with small integer (31-bit or less).
This patch redefines Enumerable#hash on C side.",I merged and updated the patch. I fixed it not to use mrb_funcall which cause recursive calls to VM.,True,{'THUMBS_UP': ['https://github.com/kimushu']}
mruby/mruby,https://github.com/mruby/mruby,4013,2018-04-27T02:47:33Z,2018-04-28T02:28:10Z,2018-04-29T01:31:39Z,CLOSED,False,55,13,2,https://github.com/kimushu,Fix Enumerable#hash on non 32-bit integer conf.,1,[],https://github.com/mruby/mruby/pull/4013,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4013#issuecomment-385133374,"Enumerable#hash is implemented on enum.rb with hard-coded range (0x7fffffff).
This does not work on the environments with small integer (31-bit or less).
This patch redefines Enumerable#hash on C side.","I didn't run tests for MRB_INT16 environment. If I missed anything, let me know.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4013,2018-04-27T02:47:33Z,2018-04-28T02:28:10Z,2018-04-29T01:31:39Z,CLOSED,False,55,13,2,https://github.com/kimushu,Fix Enumerable#hash on non 32-bit integer conf.,1,[],https://github.com/mruby/mruby/pull/4013,https://github.com/kimushu,4,https://github.com/mruby/mruby/pull/4013#issuecomment-385167658,"Enumerable#hash is implemented on enum.rb with hard-coded range (0x7fffffff).
This does not work on the environments with small integer (31-bit or less).
This patch redefines Enumerable#hash on C side.","Thanks. This patch also works for MRB_INT16 environment.
However, I noticed that some gems failed with MRB_INT16. I'll write a new issue.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4014,2018-04-27T04:12:57Z,2018-04-28T01:08:57Z,2018-04-28T01:08:57Z,MERGED,True,12,12,4,https://github.com/mimaki,Set the mruby-1.4.1 release date to `2018-4-27`.,1,[],https://github.com/mruby/mruby/pull/4014,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4014,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4017,2018-05-02T11:54:35Z,2018-05-07T06:31:19Z,2018-05-10T01:54:19Z,MERGED,True,27,0,4,https://github.com/mimaki,Add `-d` option for `mruby` and `mirb`.,2,[],https://github.com/mruby/mruby/pull/4017,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4017,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4017,2018-05-02T11:54:35Z,2018-05-07T06:31:19Z,2018-05-10T01:54:19Z,MERGED,True,27,0,4,https://github.com/mimaki,Add `-d` option for `mruby` and `mirb`.,2,[],https://github.com/mruby/mruby/pull/4017,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4017#issuecomment-385981021,,"The CI build generated a few warnings and errors. Can you check?
Some of them might be caused by previous patches.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4022,2018-05-07T09:23:51Z,2018-05-09T10:31:34Z,2018-05-10T03:17:18Z,MERGED,True,143,9,4,https://github.com/mimaki,Add `-r` option for `mruby` and `mirb`. (mrbgem is not supported),2,[],https://github.com/mruby/mruby/pull/4022,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4022,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4022,2018-05-07T09:23:51Z,2018-05-09T10:31:34Z,2018-05-10T03:17:18Z,MERGED,True,143,9,4,https://github.com/mimaki,Add `-r` option for `mruby` and `mirb`. (mrbgem is not supported),2,[],https://github.com/mruby/mruby/pull/4022,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4022#issuecomment-387336829,,"First of all, why do we need -r for mirb and mruby? I can imagine mirb can load its initialize file before the session start, but have no idea for mruby.
Second, test suites failed. We need to pass tests before merging it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4022,2018-05-07T09:23:51Z,2018-05-09T10:31:34Z,2018-05-10T03:17:18Z,MERGED,True,143,9,4,https://github.com/mimaki,Add `-r` option for `mruby` and `mirb`. (mrbgem is not supported),2,[],https://github.com/mruby/mruby/pull/4022,https://github.com/mimaki,3,https://github.com/mruby/mruby/pull/4022#issuecomment-387674437,,"In the current mruby interpreter, require is not supported.
If the library and application source files are split, I need to merge the source code.
When trying various libraries ,it is convenient to have functions that can be used without merging into source code.
-r is a kind of require of Ruby.
Sorry for errors, I fixed them.",True,{'THUMBS_UP': ['https://github.com/take-cheeze']}
mruby/mruby,https://github.com/mruby/mruby,4022,2018-05-07T09:23:51Z,2018-05-09T10:31:34Z,2018-05-10T03:17:18Z,MERGED,True,143,9,4,https://github.com/mimaki,Add `-r` option for `mruby` and `mirb`. (mrbgem is not supported),2,[],https://github.com/mruby/mruby/pull/4022,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4022#issuecomment-387696207,,"OK, I understand.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4022,2018-05-07T09:23:51Z,2018-05-09T10:31:34Z,2018-05-10T03:17:18Z,MERGED,True,143,9,4,https://github.com/mimaki,Add `-r` option for `mruby` and `mirb`. (mrbgem is not supported),2,[],https://github.com/mruby/mruby/pull/4022,https://github.com/tsahara,5,https://github.com/mruby/mruby/pull/4022#issuecomment-387939701,,👍,True,{}
mruby/mruby,https://github.com/mruby/mruby,4023,2018-05-10T04:11:27Z,2018-05-11T01:34:02Z,2018-05-11T01:34:02Z,MERGED,True,2,2,1,https://github.com/iwamatsu,Fix test of mruby-pack with big-endian CPUs,1,[],https://github.com/mruby/mruby/pull/4023,https://github.com/iwamatsu,1,https://github.com/mruby/mruby/pull/4023,"When running the mruby-pack test with big endian, test data is incorrect,
so it will fail with ""i"" and ""I"".

Fail: pack/unpack ""i"" (mrbgems: mruby-pack)

Assertion[1] Failed: Expected to be equal
Expected: ""\xff\xff\xc7\xcf""
Actual: ""\xff\xff\xcf\xc7""
Assertion[2] Failed: Expected to be equal
Expected: [-12345]
Actual: [-14385]
Fail: pack/unpack ""I"" (mrbgems: mruby-pack)
Assertion[1] Failed: Expected to be equal
Expected: ""\x00\x0090""
Actual: ""\x00\x0009""
Assertion[2] Failed: Expected to be equal
Expected: [12345]
Actual: [14640]


This will fix the test data at big-endian.
Signed-off-by: Nobuhiro Iwamatsu iwamatsu@nigauri.org","When running the mruby-pack test with big endian, test data is incorrect,
so it will fail with ""i"" and ""I"".

Fail: pack/unpack ""i"" (mrbgems: mruby-pack)

Assertion[1] Failed: Expected to be equal
Expected: ""\xff\xff\xc7\xcf""
Actual: ""\xff\xff\xcf\xc7""
Assertion[2] Failed: Expected to be equal
Expected: [-12345]
Actual: [-14385]
Fail: pack/unpack ""I"" (mrbgems: mruby-pack)
Assertion[1] Failed: Expected to be equal
Expected: ""\x00\x0090""
Actual: ""\x00\x0009""
Assertion[2] Failed: Expected to be equal
Expected: [12345]
Actual: [14640]


This will fix the test data at big-endian.
Signed-off-by: Nobuhiro Iwamatsu iwamatsu@nigauri.org",True,{}
mruby/mruby,https://github.com/mruby/mruby,4024,2018-05-14T10:34:23Z,2018-11-03T00:44:22Z,2018-11-03T00:44:28Z,CLOSED,False,5,1,1,https://github.com/pyama86,closure At initialization time upper is not necessarily initialized,1,[],https://github.com/mruby/mruby/pull/4024,https://github.com/pyama86,1,https://github.com/mruby/mruby/pull/4024,"Hi!
When using mrb_closure_new, I encountered a case wherep -> upperis not necessarily initialized.
When it is not initialized, I ignore that value, but I can not understand well whether this patch is correct. Please tell me the role of upper if possible.
Japanese:
mrb_closure_new 利用時に、トップレベルでの呼び出しなど、必ずしも引数のprocオブジェクトの upper に値が入らないケースがあります。その場合には e = env_new(mrb, 0);　のように処理するようにしたのですが、このパッチが正しいのかはよくわかっていません。この場合、 env_new の第2引数に他にふさわしい値があれば教えてください。","Hi!
When using mrb_closure_new, I encountered a case wherep -> upperis not necessarily initialized.
When it is not initialized, I ignore that value, but I can not understand well whether this patch is correct. Please tell me the role of upper if possible.
Japanese:
mrb_closure_new 利用時に、トップレベルでの呼び出しなど、必ずしも引数のprocオブジェクトの upper に値が入らないケースがあります。その場合には e = env_new(mrb, 0);　のように処理するようにしたのですが、このパッチが正しいのかはよくわかっていません。この場合、 env_new の第2引数に他にふさわしい値があれば教えてください。",True,{}
mruby/mruby,https://github.com/mruby/mruby,4024,2018-05-14T10:34:23Z,2018-11-03T00:44:22Z,2018-11-03T00:44:28Z,CLOSED,False,5,1,1,https://github.com/pyama86,closure At initialization time upper is not necessarily initialized,1,[],https://github.com/mruby/mruby/pull/4024,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4024#issuecomment-434721176,"Hi!
When using mrb_closure_new, I encountered a case wherep -> upperis not necessarily initialized.
When it is not initialized, I ignore that value, but I can not understand well whether this patch is correct. Please tell me the role of upper if possible.
Japanese:
mrb_closure_new 利用時に、トップレベルでの呼び出しなど、必ずしも引数のprocオブジェクトの upper に値が入らないケースがあります。その場合には e = env_new(mrb, 0);　のように処理するようにしたのですが、このパッチが正しいのかはよくわかっていません。この場合、 env_new の第2引数に他にふさわしい値があれば教えてください。","I need more info. As far as I read the code, p->upper become NULL only when mrb->c->ci is NULL.
But in this case, if (ci->env) (proc.c:68) should crash even after this patch applied. Is there any other path, p->upper become NULL?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4024,2018-05-14T10:34:23Z,2018-11-03T00:44:22Z,2018-11-03T00:44:28Z,CLOSED,False,5,1,1,https://github.com/pyama86,closure At initialization time upper is not necessarily initialized,1,[],https://github.com/mruby/mruby/pull/4024,https://github.com/pyama86,3,https://github.com/mruby/mruby/pull/4024#issuecomment-434944629,"Hi!
When using mrb_closure_new, I encountered a case wherep -> upperis not necessarily initialized.
When it is not initialized, I ignore that value, but I can not understand well whether this patch is correct. Please tell me the role of upper if possible.
Japanese:
mrb_closure_new 利用時に、トップレベルでの呼び出しなど、必ずしも引数のprocオブジェクトの upper に値が入らないケースがあります。その場合には e = env_new(mrb, 0);　のように処理するようにしたのですが、このパッチが正しいのかはよくわかっていません。この場合、 env_new の第2引数に他にふさわしい値があれば教えてください。","Thank you for today!
I created an environment that can be reproduced.
https://github.com/pyama86/mruby-4024
(gdb) run test.rb
Starting program: /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/bin/mruby test.rb

Program received signal SIGSEGV, Segmentation fault.
closure_setup (p=<optimized out>, mrb=0x6a9010) at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/src/proc.c:74
74          e = env_new(mrb, up->body.irep->nlocals);
(gdb) bt
#0  closure_setup (p=<optimized out>, mrb=0x6a9010) at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/src/proc.c:74
#1  mrb_closure_new (mrb=mrb@entry=0x6a9010, irep=<optimized out>) at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/src/proc.c:91
#2  0x000000000046a99d in mrb_foo_proc (mrb=0x6a9010, self=...) at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/src/mrb_foo.c:31
#3  0x000000000040b5ef in mrb_vm_exec (mrb=mrb@entry=0x6a9010, proc=<optimized out>, proc@entry=0x6ac0c0, pc=<optimized out>)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/src/vm.c:1461
#4  0x000000000040df3c in mrb_vm_run (mrb=0x6a9010, proc=0x6ac0c0, self=..., stack_keep=<optimized out>)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/src/vm.c:935
#5  0x000000000040ff39 in mrb_top_run (mrb=mrb@entry=0x6a9010, proc=proc@entry=0x6ac0c0, self=..., stack_keep=stack_keep@entry=0)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/src/vm.c:2996
#6  0x000000000043d2f1 in mrb_load_exec (mrb=mrb@entry=0x6a9010, p=<optimized out>, c=c@entry=0x6ed3b0)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/mrbgems/mruby-compiler/core/parse.y:5840
#7  0x000000000043f2f5 in mrb_load_file_cxt (mrb=mrb@entry=0x6a9010, f=0x6ee9d0, c=c@entry=0x6ed3b0)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/mrbgems/mruby-compiler/core/parse.y:5849
#8  0x00000000004021ec in main (argc=<optimized out>, argv=<optimized out>)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:227
(gdb) p up
$1 = (struct RProc *) 0x0
Maybe it is caused by proc generated by mrb_generate_code..",True,{}
mruby/mruby,https://github.com/mruby/mruby,4024,2018-05-14T10:34:23Z,2018-11-03T00:44:22Z,2018-11-03T00:44:28Z,CLOSED,False,5,1,1,https://github.com/pyama86,closure At initialization time upper is not necessarily initialized,1,[],https://github.com/mruby/mruby/pull/4024,https://github.com/pyama86,4,https://github.com/mruby/mruby/pull/4024#issuecomment-435236110,"Hi!
When using mrb_closure_new, I encountered a case wherep -> upperis not necessarily initialized.
When it is not initialized, I ignore that value, but I can not understand well whether this patch is correct. Please tell me the role of upper if possible.
Japanese:
mrb_closure_new 利用時に、トップレベルでの呼び出しなど、必ずしも引数のprocオブジェクトの upper に値が入らないケースがあります。その場合には e = env_new(mrb, 0);　のように処理するようにしたのですが、このパッチが正しいのかはよくわかっていません。この場合、 env_new の第2引数に他にふさわしい値があれば教えてください。","proc->upper seems to be null in this case.
Breakpoint 1, mrb_generate_code (mrb=0x6af010, p=0x6f4d80)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/mrbgems/mruby-compiler/core/codegen.c:3050  
...
3070        if (mrb->c->cibase && mrb->c->cibase->proc == proc->upper) {
(gdb)
3071          proc->upper = NULL;
(gdb) p mrb->c->cibase->proc
$1 = (struct RProc *) 0x6b2180
(gdb) p proc->upper
$2 = (struct RProc *) 0x6b2180
(gdb) bt
#0  mrb_generate_code (mrb=0x6af010, p=0x6f4d80)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/mrbgems/mruby-compiler/core/codegen.c:3071
#1  0x000000000043f619 in mrb_load_exec (mrb=mrb@entry=0x6af010, p=0x6f4d80, c=c@entry=0x6f33b0)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/mrbgems/mruby-compiler/core/parse.y:5815
#2  0x00000000004416d5 in mrb_load_file_cxt (mrb=0x6af010, f=0x6f49d0, c=0x6f33b0)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/mrbgems/mruby-compiler/core/parse.y:5849
#3  0x000000000040253a in main (argc=2, argv=0x7fffffffe648)
    at /Users/pyama/src/github.com/matsumotory/mruby-mrbgem-template/mruby-4024/mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:227",True,{}
mruby/mruby,https://github.com/mruby/mruby,4024,2018-05-14T10:34:23Z,2018-11-03T00:44:22Z,2018-11-03T00:44:28Z,CLOSED,False,5,1,1,https://github.com/pyama86,closure At initialization time upper is not necessarily initialized,1,[],https://github.com/mruby/mruby/pull/4024,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4024#issuecomment-435280009,"Hi!
When using mrb_closure_new, I encountered a case wherep -> upperis not necessarily initialized.
When it is not initialized, I ignore that value, but I can not understand well whether this patch is correct. Please tell me the role of upper if possible.
Japanese:
mrb_closure_new 利用時に、トップレベルでの呼び出しなど、必ずしも引数のprocオブジェクトの upper に値が入らないケースがあります。その場合には e = env_new(mrb, 0);　のように処理するようにしたのですが、このパッチが正しいのかはよくわかっていません。この場合、 env_new の第2引数に他にふさわしい値があれば教えてください。","@pyama86 could you check 0419f07, please?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4024,2018-05-14T10:34:23Z,2018-11-03T00:44:22Z,2018-11-03T00:44:28Z,CLOSED,False,5,1,1,https://github.com/pyama86,closure At initialization time upper is not necessarily initialized,1,[],https://github.com/mruby/mruby/pull/4024,https://github.com/pyama86,6,https://github.com/mruby/mruby/pull/4024#issuecomment-435547252,"Hi!
When using mrb_closure_new, I encountered a case wherep -> upperis not necessarily initialized.
When it is not initialized, I ignore that value, but I can not understand well whether this patch is correct. Please tell me the role of upper if possible.
Japanese:
mrb_closure_new 利用時に、トップレベルでの呼び出しなど、必ずしも引数のprocオブジェクトの upper に値が入らないケースがあります。その場合には e = env_new(mrb, 0);　のように処理するようにしたのですが、このパッチが正しいのかはよくわかっていません。この場合、 env_new の第2引数に他にふさわしい値があれば教えてください。",I confirmed that it has been corrected. Thank you for your response!!1,True,{}
mruby/mruby,https://github.com/mruby/mruby,4031,2018-06-01T03:49:34Z,2018-06-01T11:29:46Z,2018-06-01T11:29:46Z,MERGED,True,1,2,1,https://github.com/i110,let Hash#merge keep ifnone value,1,[],https://github.com/mruby/mruby/pull/4031,https://github.com/i110,1,https://github.com/mruby/mruby/pull/4031,This PR fixes the problem mentioned in #4030 (comment),This PR fixes the problem mentioned in #4030 (comment),True,{}
mruby/mruby,https://github.com/mruby/mruby,4033,2018-06-03T11:26:28Z,2018-06-03T11:54:13Z,2018-06-03T11:55:35Z,MERGED,True,4,4,1,https://github.com/i110,fix env->stack misadjusting: fix #4029,1,[],https://github.com/mruby/mruby/pull/4033,https://github.com/i110,1,https://github.com/mruby/mruby/pull/4033,"Currently envadjust checks oldbase <= env->stack < oldbase + newsize, but it's wrong - we should use oldbase + oldsize as the upper bound.
After #3991, in one envadjust call, an env can be checked 2 times (when ci[0]->env and ci[1]->proc->e.env are identical). If newbase is allocated immediately after oldbase, env->stack pointer accidentally gets adjusted 2 times and refers out of range of the new stack area.
To reproduce, consume large amount of stack and then refer some lexical variable (x) in a closure.
def doit(depth)
  return if depth == 0
  v0, v1, v2, v3, v4, v5, v6, v7, v8, v9 = (1..10).map { 'BROKEN' }
  doit(depth - 1)
end

x = 'OK'
proc {
  doit(100)
  puts x
}.call
$ seq 10 | xargs  -n 1 build/host/bin/mruby repro.rb
OK
OK
OK
OK
OK
OK
BROKEN
OK
BROKEN
OK

As far as I checked, OSX seems to often reallocate a new buffer immediately after old buffer, but in Linux it's not so often.","Currently envadjust checks oldbase <= env->stack < oldbase + newsize, but it's wrong - we should use oldbase + oldsize as the upper bound.
After #3991, in one envadjust call, an env can be checked 2 times (when ci[0]->env and ci[1]->proc->e.env are identical). If newbase is allocated immediately after oldbase, env->stack pointer accidentally gets adjusted 2 times and refers out of range of the new stack area.
To reproduce, consume large amount of stack and then refer some lexical variable (x) in a closure.
def doit(depth)
  return if depth == 0
  v0, v1, v2, v3, v4, v5, v6, v7, v8, v9 = (1..10).map { 'BROKEN' }
  doit(depth - 1)
end

x = 'OK'
proc {
  doit(100)
  puts x
}.call
$ seq 10 | xargs  -n 1 build/host/bin/mruby repro.rb
OK
OK
OK
OK
OK
OK
BROKEN
OK
BROKEN
OK

As far as I checked, OSX seems to often reallocate a new buffer immediately after old buffer, but in Linux it's not so often.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4033,2018-06-03T11:26:28Z,2018-06-03T11:54:13Z,2018-06-03T11:55:35Z,MERGED,True,4,4,1,https://github.com/i110,fix env->stack misadjusting: fix #4029,1,[],https://github.com/mruby/mruby/pull/4033,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4033#issuecomment-394157064,"Currently envadjust checks oldbase <= env->stack < oldbase + newsize, but it's wrong - we should use oldbase + oldsize as the upper bound.
After #3991, in one envadjust call, an env can be checked 2 times (when ci[0]->env and ci[1]->proc->e.env are identical). If newbase is allocated immediately after oldbase, env->stack pointer accidentally gets adjusted 2 times and refers out of range of the new stack area.
To reproduce, consume large amount of stack and then refer some lexical variable (x) in a closure.
def doit(depth)
  return if depth == 0
  v0, v1, v2, v3, v4, v5, v6, v7, v8, v9 = (1..10).map { 'BROKEN' }
  doit(depth - 1)
end

x = 'OK'
proc {
  doit(100)
  puts x
}.call
$ seq 10 | xargs  -n 1 build/host/bin/mruby repro.rb
OK
OK
OK
OK
OK
OK
BROKEN
OK
BROKEN
OK

As far as I checked, OSX seems to often reallocate a new buffer immediately after old buffer, but in Linux it's not so often.",Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4034,2018-06-04T02:09:43Z,2019-07-17T01:36:00Z,2019-07-17T01:36:00Z,MERGED,True,23,25,7,https://github.com/i110,Let inspect recursion do the right thing,2,[],https://github.com/mruby/mruby/pull/4034,https://github.com/i110,1,https://github.com/mruby/mruby/pull/4034,"There are some problems around inspect of recursive objects.


Recursive hash only generates ""{...}""
{ ""foo"" => <hash itself> } generates {...}, but should be {""foo""=>{...}}


Recursive struct has the same problem as hash


Recursive array generates very long string
[ true, <array itself> ] generates [true, [true, [true, .... [..]]]]] ... ]. We want [true, [...]] instead


These behaviors are also bad from point of view of performance due to unnecessary tree traversing (especially recursive array consumes much more time and memory). Furthermore, we want to distinguish real SystemStackError from recursive inspection, but currently that error is hidden.","There are some problems around inspect of recursive objects.


Recursive hash only generates ""{...}""
{ ""foo"" => <hash itself> } generates {...}, but should be {""foo""=>{...}}


Recursive struct has the same problem as hash


Recursive array generates very long string
[ true, <array itself> ] generates [true, [true, [true, .... [..]]]]] ... ]. We want [true, [...]] instead


These behaviors are also bad from point of view of performance due to unnecessary tree traversing (especially recursive array consumes much more time and memory). Furthermore, we want to distinguish real SystemStackError from recursive inspection, but currently that error is hidden.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4034,2018-06-04T02:09:43Z,2019-07-17T01:36:00Z,2019-07-17T01:36:00Z,MERGED,True,23,25,7,https://github.com/i110,Let inspect recursion do the right thing,2,[],https://github.com/mruby/mruby/pull/4034,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4034#issuecomment-394238119,"There are some problems around inspect of recursive objects.


Recursive hash only generates ""{...}""
{ ""foo"" => <hash itself> } generates {...}, but should be {""foo""=>{...}}


Recursive struct has the same problem as hash


Recursive array generates very long string
[ true, <array itself> ] generates [true, [true, [true, .... [..]]]]] ... ]. We want [true, [...]] instead


These behaviors are also bad from point of view of performance due to unnecessary tree traversing (especially recursive array consumes much more time and memory). Furthermore, we want to distinguish real SystemStackError from recursive inspection, but currently that error is hidden.",Thank you for the patch. The reason behind the current behavior is memory consumption. Recursion record can be very big for object trees. I am not sure whether we should choose the right behavior at the cost of memory.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4034,2018-06-04T02:09:43Z,2019-07-17T01:36:00Z,2019-07-17T01:36:00Z,MERGED,True,23,25,7,https://github.com/i110,Let inspect recursion do the right thing,2,[],https://github.com/mruby/mruby/pull/4034,https://github.com/i110,3,https://github.com/mruby/mruby/pull/4034#issuecomment-394301105,"There are some problems around inspect of recursive objects.


Recursive hash only generates ""{...}""
{ ""foo"" => <hash itself> } generates {...}, but should be {""foo""=>{...}}


Recursive struct has the same problem as hash


Recursive array generates very long string
[ true, <array itself> ] generates [true, [true, [true, .... [..]]]]] ... ]. We want [true, [...]] instead


These behaviors are also bad from point of view of performance due to unnecessary tree traversing (especially recursive array consumes much more time and memory). Furthermore, we want to distinguish real SystemStackError from recursive inspection, but currently that error is hidden.","Thank you for the explanation. I'm not sure too which is good because I have no idea of memory restricted environments. But at least, I think Array#inspect should be fixed so that it behave as same as Hash's one (i.e. returns [...]) for consistency and performance.
For what it's worth, I just took a simple profile.
WIDTH, HEIGHT, PR = ARGV[0].to_i, ARGV[1].to_i, ARGV[2]
puts ""# of hashes: %d"" % [(WIDTH ** (HEIGHT + 1) - 1) / (HEIGHT - 1)]

def gen(depth)
  hash = {}
  return hash if depth == 0
  WIDTH.times {|i| hash[i] = gen(depth - 1) }
  hash
end

h = gen(HEIGHT)
recur = {} # protect from GC
str = PR ? h._inspect(recur) : h.inspect
puts ""recur.size: #{recur.size}""

GC.start
$stdin.gets
This script construct Hash Tree using specified witdh and depth, and before it exits I manually hit the following command to see RSS (because ObjectSpace doens't have memsize_of..)
ps aux | grep ""[m]ruby""

The result is as follows:



layout (WxH)
6x6
7x6
8x6
6x7
7x7
6x8




# of hashes
55987
137257
299593
335923
960800
2015539


recursion record size
9331
19608
37449
55987
137257
335923


master RSS (KB)
30892
64960
109628
175980
396540
791620


PR RSS (KB)
31628
65788
114344
181164
403016
809756


ratio (PR / master)
102.38%
101.27%
104.30%
102.95%
101.63%
102.29%



So roughly 1-4% momentary overhead are there I think. umm.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4035,2018-06-05T14:01:56Z,2018-06-07T07:03:14Z,2018-06-07T07:03:14Z,MERGED,True,2,2,1,https://github.com/katzer,[mruby-socket] Declare inet_ntop and inet_pton as static,1,[],https://github.com/mruby/mruby/pull/4035,https://github.com/katzer,1,https://github.com/mruby/mruby/pull/4035,"To avoid conflicts with multiple definitions of inet_ntop and inet_pton
C:/mingw-w64/x86_64-7.2.0-posix-seh-rt_v5-rev1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/7.2.0/../../../../x86_64-w64-mingw32/lib/../lib/libWs2_32.a(dghfs00169.o):(.text+0x0): multiple definition of `inet_pton'
722C:/projects/iss/mruby/build/host/lib/libmruby.a(socket.o):C:/projects/iss/mruby/mrbgems/mruby-socket/src/socket.c:80: first defined here

if compiled with:
# define _WIN32_WINNT _WIN32_WINNT_VISTA","To avoid conflicts with multiple definitions of inet_ntop and inet_pton
C:/mingw-w64/x86_64-7.2.0-posix-seh-rt_v5-rev1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/7.2.0/../../../../x86_64-w64-mingw32/lib/../lib/libWs2_32.a(dghfs00169.o):(.text+0x0): multiple definition of `inet_pton'
722C:/projects/iss/mruby/build/host/lib/libmruby.a(socket.o):C:/projects/iss/mruby/mrbgems/mruby-socket/src/socket.c:80: first defined here

if compiled with:
# define _WIN32_WINNT _WIN32_WINNT_VISTA",True,{}
mruby/mruby,https://github.com/mruby/mruby,4035,2018-06-05T14:01:56Z,2018-06-07T07:03:14Z,2018-06-07T07:03:14Z,MERGED,True,2,2,1,https://github.com/katzer,[mruby-socket] Declare inet_ntop and inet_pton as static,1,[],https://github.com/mruby/mruby/pull/4035,https://github.com/tsahara,2,https://github.com/mruby/mruby/pull/4035#issuecomment-395056760,"To avoid conflicts with multiple definitions of inet_ntop and inet_pton
C:/mingw-w64/x86_64-7.2.0-posix-seh-rt_v5-rev1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/7.2.0/../../../../x86_64-w64-mingw32/lib/../lib/libWs2_32.a(dghfs00169.o):(.text+0x0): multiple definition of `inet_pton'
722C:/projects/iss/mruby/build/host/lib/libmruby.a(socket.o):C:/projects/iss/mruby/mrbgems/mruby-socket/src/socket.c:80: first defined here

if compiled with:
# define _WIN32_WINNT _WIN32_WINNT_VISTA",LGTM.  I merged the same patch into iij/mruby-socket (iij/mruby-socket#44).,True,{'THUMBS_UP': ['https://github.com/katzer']}
mruby/mruby,https://github.com/mruby/mruby,4039,2018-06-06T06:10:34Z,2018-06-07T07:02:31Z,2018-06-07T07:02:31Z,MERGED,True,16,2,2,https://github.com/i110,fix broken lexical variables,2,[],https://github.com/mruby/mruby/pull/4039,https://github.com/i110,1,https://github.com/mruby/mruby/pull/4039,"As discussed in #4021, the commit 26e436e caused problems around ci->env. If I understand correctly, there're no reasons to set it in there.","As discussed in #4021, the commit 26e436e caused problems around ci->env. If I understand correctly, there're no reasons to set it in there.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4039,2018-06-06T06:10:34Z,2018-06-07T07:02:31Z,2018-06-07T07:02:31Z,MERGED,True,16,2,2,https://github.com/i110,fix broken lexical variables,2,[],https://github.com/mruby/mruby/pull/4039,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/4039#issuecomment-394952103,"As discussed in #4021, the commit 26e436e caused problems around ci->env. If I understand correctly, there're no reasons to set it in there.",@i110 Could you add the test code too?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4039,2018-06-06T06:10:34Z,2018-06-07T07:02:31Z,2018-06-07T07:02:31Z,MERGED,True,16,2,2,https://github.com/i110,fix broken lexical variables,2,[],https://github.com/mruby/mruby/pull/4039,https://github.com/i110,3,https://github.com/mruby/mruby/pull/4039#issuecomment-394952552,"As discussed in #4021, the commit 26e436e caused problems around ci->env. If I understand correctly, there're no reasons to set it in there.","okay, I'm searching where is the best place to add the tests under test/t/ ..",True,{}
mruby/mruby,https://github.com/mruby/mruby,4039,2018-06-06T06:10:34Z,2018-06-07T07:02:31Z,2018-06-07T07:02:31Z,MERGED,True,16,2,2,https://github.com/i110,fix broken lexical variables,2,[],https://github.com/mruby/mruby/pull/4039,https://github.com/take-cheeze,4,https://github.com/mruby/mruby/pull/4039#issuecomment-394952970,"As discussed in #4021, the commit 26e436e caused problems around ci->env. If I understand correctly, there're no reasons to set it in there.",@i110 you should place it to mruby-eval mrbgem if you use eval,True,{'THUMBS_UP': ['https://github.com/i110']}
mruby/mruby,https://github.com/mruby/mruby,4039,2018-06-06T06:10:34Z,2018-06-07T07:02:31Z,2018-06-07T07:02:31Z,MERGED,True,16,2,2,https://github.com/i110,fix broken lexical variables,2,[],https://github.com/mruby/mruby/pull/4039,https://github.com/i110,5,https://github.com/mruby/mruby/pull/4039#issuecomment-394956690,"As discussed in #4021, the commit 26e436e caused problems around ci->env. If I understand correctly, there're no reasons to set it in there.",@take-cheeze I added the test at 1dbeda5,True,{'THUMBS_UP': ['https://github.com/take-cheeze']}
mruby/mruby,https://github.com/mruby/mruby,4043,2018-06-13T14:36:19Z,2018-06-14T01:13:36Z,2018-06-14T01:14:13Z,MERGED,True,11,7,1,https://github.com/take-cheeze,Fix unnecessary rebuild of tests.,1,[],https://github.com/mruby/mruby/pull/4043,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4043,Compares gem list before writing it.,Compares gem list before writing it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4044,2018-06-14T04:48:34Z,2018-06-14T04:58:49Z,2018-06-15T01:36:12Z,MERGED,True,24,11,2,https://github.com/tsahara,incorporate fixes from iij/socket,4,[],https://github.com/mruby/mruby/pull/4044,https://github.com/tsahara,1,https://github.com/mruby/mruby/pull/4044,fix issues caused by variable length sockaddr_un.,fix issues caused by variable length sockaddr_un.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4046,2018-06-19T08:27:11Z,2018-06-19T10:32:19Z,2018-06-20T00:30:17Z,MERGED,True,5,5,3,https://github.com/kou,Fix wrong free function,1,[],https://github.com/mruby/mruby/pull/4046,https://github.com/kou,1,https://github.com/mruby/mruby/pull/4046,"mrb_locale_free() should be used for the return value of
mrb_locale_from_utf8().","mrb_locale_free() should be used for the return value of
mrb_locale_from_utf8().",True,{}
mruby/mruby,https://github.com/mruby/mruby,4047,2018-06-19T08:29:10Z,2018-06-19T10:33:37Z,2018-06-20T00:30:14Z,MERGED,True,7,4,1,https://github.com/kou,Stop to use freed value,1,[],https://github.com/mruby/mruby/pull/4047,https://github.com/kou,1,https://github.com/mruby/mruby/pull/4047,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4048,2018-06-20T02:58:56Z,2018-06-20T04:40:00Z,2018-06-20T05:19:20Z,MERGED,True,2,2,1,https://github.com/kou,Export mrb_utf8_from_locale() and mrb_locale_from_utf8(),1,[],https://github.com/mruby/mruby/pull/4048,https://github.com/kou,1,https://github.com/mruby/mruby/pull/4048,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4049,2018-06-20T09:16:47Z,2018-06-20T10:13:44Z,2018-06-21T01:22:40Z,MERGED,True,6,0,1,https://github.com/take-cheeze,Fix memory leaks in mirb.,1,[],https://github.com/mruby/mruby/pull/4049,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4049,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4050,2018-06-20T09:24:53Z,2018-06-20T11:42:54Z,2018-06-20T11:43:38Z,MERGED,True,17,12,5,https://github.com/take-cheeze,Fix build scripts.,6,[],https://github.com/mruby/mruby/pull/4050,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4050,Found by parallel minirake: #4051.,Found by parallel minirake: #4051.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4051,2018-06-20T09:27:13Z,2018-06-20T13:09:55Z,2018-06-21T01:22:38Z,MERGED,True,118,15,2,https://github.com/take-cheeze,Make minirake parallel.,3,[],https://github.com/mruby/mruby/pull/4051,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4051,"sh won't block until specific number of child processes with this change.
Needs #4050 to be merged.
Adds -j / --jobs option like make command.","sh won't block until specific number of child processes with this change.
Needs #4050 to be merged.
Adds -j / --jobs option like make command.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4051,2018-06-20T09:27:13Z,2018-06-20T13:09:55Z,2018-06-21T01:22:38Z,MERGED,True,118,15,2,https://github.com/take-cheeze,Make minirake parallel.,3,[],https://github.com/mruby/mruby/pull/4051,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4051#issuecomment-398721648,"sh won't block until specific number of child processes with this change.
Needs #4050 to be merged.
Adds -j / --jobs option like make command.","Unfortunately, CI fail.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4051,2018-06-20T09:27:13Z,2018-06-20T13:09:55Z,2018-06-21T01:22:38Z,MERGED,True,118,15,2,https://github.com/take-cheeze,Make minirake parallel.,3,[],https://github.com/mruby/mruby/pull/4051,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/4051#issuecomment-398737856,"sh won't block until specific number of child processes with this change.
Needs #4050 to be merged.
Adds -j / --jobs option like make command.",@matz I've rebased with #4050 . Seems like appveyor fails due to resource locking so keeping it with single jobs.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4052,2018-06-20T12:43:50Z,2018-06-20T14:19:53Z,2018-06-21T01:22:39Z,MERGED,True,2,2,1,https://github.com/take-cheeze,Use temporary file name for `File#mtime` test to avoid conflicts.,1,[],https://github.com/mruby/mruby/pull/4052,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4052,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4053,2018-06-21T02:31:16Z,2018-06-22T01:26:38Z,2018-06-22T01:28:15Z,MERGED,True,6,4,1,https://github.com/take-cheeze,Use Fiber#transfer instead in minirake.,2,[],https://github.com/mruby/mruby/pull/4053,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4053,To avoid conflict with other Fiber uses.,To avoid conflict with other Fiber uses.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4054,2018-06-21T02:33:04Z,2018-06-21T22:16:49Z,2018-06-21T22:16:49Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Show minirake backtrace in verbose mode.,1,[],https://github.com/mruby/mruby/pull/4054,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4054,Since -t is too noisy.,Since -t is too noisy.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4055,2018-06-21T02:34:04Z,2018-09-04T22:11:24Z,2018-09-04T22:11:24Z,MERGED,True,10,2,2,https://github.com/take-cheeze,Support verbose mode in bintest.,1,[],https://github.com/mruby/mruby/pull/4055,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4055,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4056,2018-06-21T04:30:35Z,2018-06-21T22:18:02Z,2018-06-22T00:26:57Z,MERGED,True,5,0,1,https://github.com/take-cheeze,Fix job waiter of minirake.,1,[],https://github.com/mruby/mruby/pull/4056,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4056,Seems job limiting wasn't working.,Seems job limiting wasn't working.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4056,2018-06-21T04:30:35Z,2018-06-21T22:18:02Z,2018-06-22T00:26:57Z,MERGED,True,5,0,1,https://github.com/take-cheeze,Fix job waiter of minirake.,1,[],https://github.com/mruby/mruby/pull/4056,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4056#issuecomment-399263554,Seems job limiting wasn't working.,"This patch makes minirake -j 2+ times slower. Actually, minirake seems not to work in parallel at all after this patch.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4057,2018-06-22T00:30:50Z,2018-06-22T01:19:17Z,2018-06-22T01:26:37Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Use `Thread.pass` instead of sleeping.,1,[],https://github.com/mruby/mruby/pull/4057,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4057,To fix blocking issue in #4056.,To fix blocking issue in #4056.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4057,2018-06-22T00:30:50Z,2018-06-22T01:19:17Z,2018-06-22T01:26:37Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Use `Thread.pass` instead of sleeping.,1,[],https://github.com/mruby/mruby/pull/4057,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4057#issuecomment-399292186,To fix blocking issue in #4056.,"By this patch, compilation became fast (and even faster) again. Thank you.",True,{'THUMBS_UP': ['https://github.com/take-cheeze']}
mruby/mruby,https://github.com/mruby/mruby,4058,2018-06-22T02:42:30Z,2018-06-22T03:01:34Z,2018-06-22T03:03:34Z,MERGED,True,6,3,1,https://github.com/take-cheeze,Increase sleep duration exponentially instead of `Thread.pass`.,1,[],https://github.com/mruby/mruby/pull/4058,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4058,Since with Thread.pass ruby process will eat up all the CPU times of a core.,Since with Thread.pass ruby process will eat up all the CPU times of a core.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4059,2018-06-22T02:44:26Z,2018-06-22T03:02:09Z,2018-06-22T03:03:30Z,MERGED,True,14,4,2,https://github.com/take-cheeze,Run tests parallelly for each target.,1,[],https://github.com/mruby/mruby/pull/4059,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4059,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4063,2018-06-27T12:22:14Z,2018-06-27T23:43:26Z,2018-06-27T23:43:26Z,MERGED,True,20,0,1,https://github.com/graywolf,Add information about Kernel#binding,1,[],https://github.com/mruby/mruby/pull/4063,https://github.com/graywolf,1,https://github.com/mruby/mruby/pull/4063,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4064,2018-07-02T01:50:05Z,2018-07-02T02:00:35Z,2018-07-02T02:00:35Z,MERGED,True,4,0,1,https://github.com/mame,Support MRB_WITHOUT_FLOAT to mruby-io,1,[],https://github.com/mruby/mruby/pull/4064,https://github.com/mame,1,https://github.com/mruby/mruby/pull/4064,"The current master does not build with MRB_WITHOUT_FLOAT.
This change allows to built it successfully.","The current master does not build with MRB_WITHOUT_FLOAT.
This change allows to built it successfully.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4065,2018-07-04T11:35:32Z,,2021-06-03T07:47:52Z,OPEN,False,319,124,13,https://github.com/take-cheeze,"[PoC] Reduce copy of C string to symbol in class, module and method definition.",1,[],https://github.com/mruby/mruby/pull/4065,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4065,"Since this is too big and breaks compatibility will split after reviews.
Most changes are to replace C function using const char* to macro and add _id suffix to it.
Some C function needs to have symbol for FFIs I've moved it to mruby-symbol-ext mrbgem.
For checking the improment I've added a feature to see how many symbol is static.
It seems most symbol can be static on launched VM.","Since this is too big and breaks compatibility will split after reviews.
Most changes are to replace C function using const char* to macro and add _id suffix to it.
Some C function needs to have symbol for FFIs I've moved it to mruby-symbol-ext mrbgem.
For checking the improment I've added a feature to see how many symbol is static.
It seems most symbol can be static on launched VM.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4065,2018-07-04T11:35:32Z,,2021-06-03T07:47:52Z,OPEN,False,319,124,13,https://github.com/take-cheeze,"[PoC] Reduce copy of C string to symbol in class, module and method definition.",1,[],https://github.com/mruby/mruby/pull/4065,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4065#issuecomment-402476979,"Since this is too big and breaks compatibility will split after reviews.
Most changes are to replace C function using const char* to macro and add _id suffix to it.
Some C function needs to have symbol for FFIs I've moved it to mruby-symbol-ext mrbgem.
For checking the improment I've added a feature to see how many symbol is static.
It seems most symbol can be static on launched VM.",Have you measured how much memory (or object allocation) this patch reduced?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4065,2018-07-04T11:35:32Z,,2021-06-03T07:47:52Z,OPEN,False,319,124,13,https://github.com/take-cheeze,"[PoC] Reduce copy of C string to symbol in class, module and method definition.",1,[],https://github.com/mruby/mruby/pull/4065,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/4065#issuecomment-402506010,"Since this is too big and breaks compatibility will split after reviews.
Most changes are to replace C function using const char* to macro and add _id suffix to it.
Some C function needs to have symbol for FFIs I've moved it to mruby-symbol-ext mrbgem.
For checking the improment I've added a feature to see how many symbol is static.
It seems most symbol can be static on launched VM.","config; https://gist.github.com/take-cheeze/36097cacd58bce1dd6ca2f430ceb9edf
time -v results(first half is master and second half is the patch applied):
https://gist.github.com/take-cheeze/d36108f43615dc172229ae4be121b4cd
Minor page faults occur on malloc-ed memory so seems it is 30 pages less when applied.
Page size is 4096 so 4096 * 30 = 120k less malloc-ed memory  usage.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4065,2018-07-04T11:35:32Z,,2021-06-03T07:47:52Z,OPEN,False,319,124,13,https://github.com/take-cheeze,"[PoC] Reduce copy of C string to symbol in class, module and method definition.",1,[],https://github.com/mruby/mruby/pull/4065,https://github.com/take-cheeze,4,https://github.com/mruby/mruby/pull/4065#issuecomment-402508056,"Since this is too big and breaks compatibility will split after reviews.
Most changes are to replace C function using const char* to macro and add _id suffix to it.
Some C function needs to have symbol for FFIs I've moved it to mruby-symbol-ext mrbgem.
For checking the improment I've added a feature to see how many symbol is static.
It seems most symbol can be static on launched VM.","Modification for time -v : https://gist.github.com/take-cheeze/24853d07dc694a34f7e3da9a57f5966e
mrbtest creates many VMs with full-core so maybe should compare mrb_open.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4065,2018-07-04T11:35:32Z,,2021-06-03T07:47:52Z,OPEN,False,319,124,13,https://github.com/take-cheeze,"[PoC] Reduce copy of C string to symbol in class, module and method definition.",1,[],https://github.com/mruby/mruby/pull/4065,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4065#issuecomment-402570996,"Since this is too big and breaks compatibility will split after reviews.
Most changes are to replace C function using const char* to macro and add _id suffix to it.
Some C function needs to have symbol for FFIs I've moved it to mruby-symbol-ext mrbgem.
For checking the improment I've added a feature to see how many symbol is static.
It seems most symbol can be static on launched VM.","Page faults are inaccurate and 30 minor page faults are less than 1.5% of total faults.
Could you measure the allocation amount by direct number, by using valgrind, for example?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4065,2018-07-04T11:35:32Z,,2021-06-03T07:47:52Z,OPEN,False,319,124,13,https://github.com/take-cheeze,"[PoC] Reduce copy of C string to symbol in class, module and method definition.",1,[],https://github.com/mruby/mruby/pull/4065,https://github.com/take-cheeze,6,https://github.com/mruby/mruby/pull/4065#issuecomment-402591257,"Since this is too big and breaks compatibility will split after reviews.
Most changes are to replace C function using const char* to macro and add _id suffix to it.
Some C function needs to have symbol for FFIs I've moved it to mruby-symbol-ext mrbgem.
For checking the improment I've added a feature to see how many symbol is static.
It seems most symbol can be static on launched VM.","valgrind doesn't work well with fmt_fp.c so instead I used address sanitizer's stat:
https://gist.github.com/take-cheeze/dd8a932e98f0193e67e3f0eac0049ba5
https://gist.github.com/take-cheeze/9714b1fda87d11dcd4262c14f90ec52b
(ASAN_OPTIONS env var atexit enabled. And removed full-core since it is noisy.)
malloc call is slightly less(10k decrease):
master:
  Stats: 13M malloced (3M for red zones) by 117681 calls
symbol_literals:
  Stats: 13M malloced (3M for red zones) by 107390 calls

mmap is less too(about 10 maps):
master:
Stats: 23M (23M-0M) mmaped; 374 maps, 0 unmaps
  mallocs by size class: 2:46204; 3:10197; 4:33281; 6:2466; 7:1854; 8:1285; 11:9876; 12:650; 13:221; 14:146; 15:4803; 16:34; 17:441; 18:114; 19:166; 20:95; 21:12; 22:66; 23:4500; 24:45; 25:58; 26:361; 27:48; 29:187; 30:178; 31:44; 32:44; 33:95; 34:47; 35:44; 37:48; 38:2; 47:68; 49:1; 

symbol_literals:
Stats: 22M (22M-0M) mmaped; 365 maps, 0 unmaps
  mallocs by size class: 2:36832; 3:9188; 4:33370; 6:2422; 7:1899; 8:1285; 11:9832; 12:606; 13:265; 14:190; 15:4803; 16:34; 17:441; 18:114; 19:166; 20:95; 21:12; 22:66; 23:4500; 24:45; 25:58; 26:361; 27:48; 29:187; 30:179; 31:44; 32:44; 33:95; 34:47; 35:44; 37:48; 38:2; 47:67; 49:1;",True,{}
mruby/mruby,https://github.com/mruby/mruby,4065,2018-07-04T11:35:32Z,,2021-06-03T07:47:52Z,OPEN,False,319,124,13,https://github.com/take-cheeze,"[PoC] Reduce copy of C string to symbol in class, module and method definition.",1,[],https://github.com/mruby/mruby/pull/4065,https://github.com/matz,7,https://github.com/mruby/mruby/pull/4065#issuecomment-403646547,"Since this is too big and breaks compatibility will split after reviews.
Most changes are to replace C function using const char* to macro and add _id suffix to it.
Some C function needs to have symbol for FFIs I've moved it to mruby-symbol-ext mrbgem.
For checking the improment I've added a feature to see how many symbol is static.
It seems most symbol can be static on launched VM.","I have read the patch:

mrb_funcall etc. may not take string literals.
if MRB_USE_ETEXT_EDATA is effective on the platform, should it reduce as much memory as this patch?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4065,2018-07-04T11:35:32Z,,2021-06-03T07:47:52Z,OPEN,False,319,124,13,https://github.com/take-cheeze,"[PoC] Reduce copy of C string to symbol in class, module and method definition.",1,[],https://github.com/mruby/mruby/pull/4065,https://github.com/take-cheeze,8,https://github.com/mruby/mruby/pull/4065#issuecomment-406576406,"Since this is too big and breaks compatibility will split after reviews.
Most changes are to replace C function using const char* to macro and add _id suffix to it.
Some C function needs to have symbol for FFIs I've moved it to mruby-symbol-ext mrbgem.
For checking the improment I've added a feature to see how many symbol is static.
It seems most symbol can be static on launched VM.","mrb_funcall etc. may not take string literals.

At least in the core mrbgems I only need to modify mruby-struct for the API changes.
And I think the API to use should be different with dynamic strings and static strings.
(If possible static lifetime of rust would be great.)

if MRB_USE_ETEXT_EDATA is effective on the platform, should it reduce as much memory as this patch?

In some environment for example

changing linker scripts is difficult
dynamic linked symbols

can't be used.
If things can be judged in compile time I prefer to judge it as much as possible.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4066,2018-07-04T12:00:30Z,2018-07-04T13:12:41Z,2018-07-04T13:12:41Z,MERGED,True,1,0,1,https://github.com/duangsuse,Added ~/Android/Sdk/ndk-bundle as default NDK home,1,[],https://github.com/mruby/mruby/pull/4066,https://github.com/duangsuse,1,https://github.com/mruby/mruby/pull/4066,"This PR adds more recent default AndroidStudio Linux Android NDK to default NDK search path
Since only one line of code added, I didn't create a new branch
No modification to core/mrbgems, so no test case needed
🍺","This PR adds more recent default AndroidStudio Linux Android NDK to default NDK search path
Since only one line of code added, I didn't create a new branch
No modification to core/mrbgems, so no test case needed
🍺",True,{}
mruby/mruby,https://github.com/mruby/mruby,4066,2018-07-04T12:00:30Z,2018-07-04T13:12:41Z,2018-07-04T13:12:41Z,MERGED,True,1,0,1,https://github.com/duangsuse,Added ~/Android/Sdk/ndk-bundle as default NDK home,1,[],https://github.com/mruby/mruby/pull/4066,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4066#issuecomment-402475252,"This PR adds more recent default AndroidStudio Linux Android NDK to default NDK search path
Since only one line of code added, I didn't create a new branch
No modification to core/mrbgems, so no test case needed
🍺","I don't use Android SDK, so I cannot decide if this is sufficient. If anyone sees the problem, I will revert this.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4067,2018-07-08T11:57:07Z,2018-07-08T23:19:13Z,2018-07-09T04:44:21Z,MERGED,True,3,3,1,https://github.com/katzer,[mruby-test] Fix task name is not necessarily a valid path,1,[],https://github.com/mruby/mruby/pull/4067,https://github.com/katzer,1,https://github.com/mruby/mruby/pull/4067,"About
I guess since 1d7c69a windows builds seem to be broken when enable_test is activated.
Errno::ENOENT: No such file or directory @ dir_s_mkdir - mruby:Z:/Documents
The fix makes sure that we pass a valid file path and not the name of the rake file task.
That seems to happen if the rake task has a namespace.","About
I guess since 1d7c69a windows builds seem to be broken when enable_test is activated.
Errno::ENOENT: No such file or directory @ dir_s_mkdir - mruby:Z:/Documents
The fix makes sure that we pass a valid file path and not the name of the rake file task.
That seems to happen if the rake task has a namespace.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4068,2018-07-09T17:10:58Z,2018-07-11T06:09:58Z,2018-07-11T06:09:58Z,MERGED,True,26,17,4,https://github.com/yurie,add mrbc option `--remove-lv`,3,[],https://github.com/mruby/mruby/pull/4068,https://github.com/yurie,1,https://github.com/mruby/mruby/pull/4068,"refactor: move irep_remove_lv from mruby-bin-strip gem to src/dump and rename to mrb_irep_remove_lv
add: mrbc option --remove-lv to remove LVAR section","refactor: move irep_remove_lv from mruby-bin-strip gem to src/dump and rename to mrb_irep_remove_lv
add: mrbc option --remove-lv to remove LVAR section",True,{}
mruby/mruby,https://github.com/mruby/mruby,4068,2018-07-09T17:10:58Z,2018-07-11T06:09:58Z,2018-07-11T06:09:58Z,MERGED,True,26,17,4,https://github.com/yurie,add mrbc option `--remove-lv`,3,[],https://github.com/mruby/mruby/pull/4068,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4068#issuecomment-403576870,"refactor: move irep_remove_lv from mruby-bin-strip gem to src/dump and rename to mrb_irep_remove_lv
add: mrbc option --remove-lv to remove LVAR section","The fundamental idea seems OK but is src/dump.c is the best place for mrb_irep_remove_lv?
It seems unnecessary for most of the cases. Maybe in codegen.c?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4068,2018-07-09T17:10:58Z,2018-07-11T06:09:58Z,2018-07-11T06:09:58Z,MERGED,True,26,17,4,https://github.com/yurie,add mrbc option `--remove-lv`,3,[],https://github.com/mruby/mruby/pull/4068,https://github.com/yurie,3,https://github.com/mruby/mruby/pull/4068#issuecomment-403721606,"refactor: move irep_remove_lv from mruby-bin-strip gem to src/dump and rename to mrb_irep_remove_lv
add: mrbc option --remove-lv to remove LVAR section","Updated.
Now declaration of the function is in dump.h. Should I move to irep.h or other file?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4068,2018-07-09T17:10:58Z,2018-07-11T06:09:58Z,2018-07-11T06:09:58Z,MERGED,True,26,17,4,https://github.com/yurie,add mrbc option `--remove-lv`,3,[],https://github.com/mruby/mruby/pull/4068,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4068#issuecomment-403728295,"refactor: move irep_remove_lv from mruby-bin-strip gem to src/dump and rename to mrb_irep_remove_lv
add: mrbc option --remove-lv to remove LVAR section","irep.h seems better. Besides that, should we provide an option to remove all debug information altogether, not just lv?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4068,2018-07-09T17:10:58Z,2018-07-11T06:09:58Z,2018-07-11T06:09:58Z,MERGED,True,26,17,4,https://github.com/yurie,add mrbc option `--remove-lv`,3,[],https://github.com/mruby/mruby/pull/4068,https://github.com/mimaki,5,https://github.com/mruby/mruby/pull/4068#issuecomment-404013569,"refactor: move irep_remove_lv from mruby-bin-strip gem to src/dump and rename to mrb_irep_remove_lv
add: mrbc option --remove-lv to remove LVAR section","I agree to remove debug information.

2018-07-10 16:30 GMT+09:00 matz <notifications@github.com>:
…
 irep.h seems better. Besides that, should we provide an option to remove
 all debug information altogether, not just lv?

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#4068 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAebnbFOaMysG_Ke_h6CEYT-HUXK7Y5jks5uFFgYgaJpZM4VIEzo>
 .",True,{}
mruby/mruby,https://github.com/mruby/mruby,4068,2018-07-09T17:10:58Z,2018-07-11T06:09:58Z,2018-07-11T06:09:58Z,MERGED,True,26,17,4,https://github.com/yurie,add mrbc option `--remove-lv`,3,[],https://github.com/mruby/mruby/pull/4068,https://github.com/yurie,6,https://github.com/mruby/mruby/pull/4068#issuecomment-404049658,"refactor: move irep_remove_lv from mruby-bin-strip gem to src/dump and rename to mrb_irep_remove_lv
add: mrbc option --remove-lv to remove LVAR section","moved to irep.h.
Summary of output debug information of mrbc with this patch:

(no option): IREP, LVAR sections
-g option: IREP, DBG, LVAR sections
--remove-lv option: IREP sections",True,{}
mruby/mruby,https://github.com/mruby/mruby,4072,2018-07-21T08:23:03Z,2018-07-21T11:07:38Z,2018-07-21T18:17:17Z,MERGED,True,6,6,2,https://github.com/katzer,[mruby-socket] Network services might not be available,1,[],https://github.com/mruby/mruby/pull/4072,https://github.com/katzer,1,https://github.com/mruby/mruby/pull/4072,"About
This PR fixes its own failing tests where requested services like smtp are not available resulting into error message like:
SocketError: Addrinfo.tcp => getaddrinfo: Servname not supported for ai_socktype (mrbgems: mruby-socket)","About
This PR fixes its own failing tests where requested services like smtp are not available resulting into error message like:
SocketError: Addrinfo.tcp => getaddrinfo: Servname not supported for ai_socktype (mrbgems: mruby-socket)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4074,2018-07-31T13:09:53Z,2018-08-01T00:26:24Z,2018-08-01T00:26:24Z,MERGED,True,2,2,1,https://github.com/znz,Remove unmatched quotation mark,1,[],https://github.com/mruby/mruby/pull/4074,https://github.com/znz,1,https://github.com/mruby/mruby/pull/4074,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4075,2018-08-04T11:24:44Z,2018-09-21T02:22:53Z,2018-09-21T02:22:53Z,MERGED,True,2,1,1,https://github.com/sbsoftware,Add compiler flag to disable direct threading,2,[],https://github.com/mruby/mruby/pull/4075,https://github.com/sbsoftware,1,https://github.com/mruby/mruby/pull/4075,"This is helpful for compilation targets that don't support computed gotos like, in my case, WebAssembly (which at least doesn't support it yet).
I am not sure if it is possible to test this automatically. I confirmed that the change is working on my local machine and ./minirake test works fine (which isn't suprising as I only added a new option which is not tested).
Please let me know if I missed something.","This is helpful for compilation targets that don't support computed gotos like, in my case, WebAssembly (which at least doesn't support it yet).
I am not sure if it is possible to test this automatically. I confirmed that the change is working on my local machine and ./minirake test works fine (which isn't suprising as I only added a new option which is not tested).
Please let me know if I missed something.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4076,2018-08-04T16:00:04Z,2018-12-23T09:14:08Z,2018-12-23T09:14:19Z,CLOSED,False,1038,3,8,https://github.com/dearblue,Add built-in symbols feature (EXPERIMENTAL!),3,[],https://github.com/mruby/mruby/pull/4076,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4076,"# Most English text is machine translation by Google translation. The Japanese text which becomes the original text is also written.
Summary
Add built-in symbols embedded in object code at build time.
ビルド時にオブジェクトコードへと埋め込まれる組み込みシンボルを追加します。
Description


Allocate strings as built-in symbols and arrays of symbol structures (symbol_name) as static const at build time.
組み込みシンボルとしての文字列、及びシンボルの構造体 (symbol_name) の配列を static const としてビルド時に確保します。


Collect the character strings as symbols. At this time, small strings matching the end of the large string are merged.
シンボルとなる文字列をまとめます。このとき大きい文字列の末端に一致する小さい文字列は統合されます。
e.g.:

""Object"" is included in ""BasicObject""
""RUBY_VERSION"" is included in ""MRUBY_VERSION""
""cmp"" and ""p"" are included in ""__ary_cmp""



If you create multiple mrb_state, you can share embedded symbols.
複数の mrb_state を作成した場合、組み込みシンボルを共有することが出来ます。


The symbols other than the built-in symbols (I call it runtime symbols at will) are placed in the struct symbol_name allocated in the heap as before.
組み込みシンボル以外のシンボル (僕は勝手に実行時シンボルと呼んでいます) は、これまで通りヒープに確保された struct symbol_name に置かれます。


Although the .text + .rodata section increases by about 10 KB, measurement by valgrind mruby - e '' decreased malloc from 181.6 KB to 147.8 KB.
In mrbtest, malloc has decreased by about 1.8 MB.
.text + .rodata セクションが約 10 KB 増えますが、valgrind mruby -e '' による計測では malloc が 181.6 KB から 147.8 KB へと減少しました。
mrbtest においては、malloc が約 1.8 MB 減少しました。


Files and APIs
Compatibility


The value of mrb_sym reaches the most significant bit.
mrb_sym の値が最上位ビットに到達します。


There are no changes to functions, macros, or structures that lose incompatibility.
互換性を失う関数やマクロ、構造体の変更はありません。


Appended configurations

MRB_ENABLE_BUILTIN_SYMBOLS
MRB_ENABLE_FORCE_INLINE (Provided by builtin-symbols-rev2 patch set)

Appended macros

MRB_BUILTIN_SYMBOLS_MAX (in include/mruby/value.h) - default is zero
MRB_FORCE_INLINE (in include/mruby.h) (Provided by builtin-symbols-rev2 patch set) - default is same as MRB_INLINE

Appended files


include/mruby/id.h - as a part of public mruby API


src/builtin_symbols.h - string table for symbols, and array of struct symbol_name


outsym.rb (NOT INCLUDED YET) - export all symbols
$ host/bin/mruby outsym.rb > symbols.yaml



mksymtbl.rb (NOT INCLUDED YET) - generate include/mruby/id.h and src/builtin_symbols.h files, and modify MRB_BUILTIN_SYMBOLS_MAX macro
$ ruby mksymtbl.rb < symbols.yaml



outsym.rb, mksymtbl.rb and symbols.yaml are currently in gist.

outsym.rb
mksymtbl.rb

How to implementation


It is expressed from the maximum value of mrb_sym (unsigned 32-bit integer value) using the necessary range for the number of built-in symbols.
mrb_sym (符号なし32ビット整数値) の最大値から組み込みシンボルの個数に必要な範囲を用いて表現しています。
/* from src/symbol.c */

#define MRB_BUILTIN_SYMBOLS_PIVOT (UINT32_MAX - MRB_BUILTIN_SYMBOLS_MAX)
#define MRB_BUILTIN_SYMBOL_P(sym) ((sym) > MRB_BUILTIN_SYMBOLS_PIVOT)


Considering it as the value of a built-in symbol, it refers to struct symbol_name builtin_symbols_table[] allocated as static const at the time of build.
組み込みシンボルの値とみなすと、ビルド時に static const として確保した struct symbol_name builtin_symbols_table[] を参照するようになります。


At this time, take a complement such as ~symbol, and make it an array subscript.
この時 ~symbol のように一の補数を取って、配列の添字とします。
mrb_sym symbol = ...;
const symbol_name *sname = &builtin_symbols_table[~symbol];


builtin_symbols_table is defined in src/builtin_symbols.h and #included from src/symbol.c.
builtin_symbols_table は src/builtin_symbols.h で定義され、src/symbol.c から #include されます。


mrb->symtbl will be initialized with mrb_init_symtbl() as a work area.
mrb->symtbl は作業領域として mrb_init_symtbl() で初期化されるようになります。


include/mruby/id.h, src/builtin_symbols.h, and include/mruby/value.h MRB_BUILTIN_SYMBOLS_MAX constants are automatically generated and rewritten by mksymtbl.rb I will.
We created host/bin/mruby with a smaller configuration, and all the symbols are included in the built-in symbols.
include/mruby/id.h と src/builtin_symbols.h、および include/mruby/value.h の MRB_BUILTIN_SYMBOLS_MAX 定数は、mksymtbl.rb によって自動生成・書き換えが行われます。
小さめの構成で host/bin/mruby を作成し、その全シンボルを組み込みシンボルの対象としています。
The configuration of host/bin/mruby is as follows:
MRuby::Build.new do |conf|
  toolchain :gcc
  conf.build_dir = ""host""
  enable_debug
  enable_test

  gem core: ""mruby-sprintf""
  gem core: ""mruby-print""
  gem core: ""mruby-symbol-ext""
  gem core: ""mruby-bin-mrbc""
  gem core: ""mruby-bin-mirb""
  gem core: ""mruby-bin-mruby""
end
================================================
      Config Name: host
 Output Directory: host
         Binaries: mrbc, mrbtest
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-symbol-ext - Symbol class extension
             mruby-compiler - mruby compiler library
             mruby-bin-mrbc - mruby compiler executable
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-test - mruby test
================================================

Execute outsym.rb with the created host/bin/mruby. By processing the result with mksymtbl.rb it is possible to generate include/mruby/id.h and src/builtin_symbols.h files and include/mruby/value.h MRB_BUILTIN_SYMBOLS_MAX constant Rewrite.
作成した host/bin/mruby で outsym.rb を実行します。その結果を mksymtbl.rb で処理することで include/mruby/id.h と src/builtin_symbols.h のファイル生成、および include/mruby/value.h の MRB_BUILTIN_SYMBOLS_MAX 定数を書き換えます。
$ build/host/bin/mruby outsym.rb > symbols.yaml
$ vim symbol.yaml  ## edit symbols if needed
$ ruby mksymtbl.rb < symbol.yaml

symbols.yaml is in gist at this time.


Problems & Issues for this patch


Built-in symbols are expressed from the maximum value using the range that becomes the number of built-in symbols required.
This reduces the available symbol space.
組み込みシンボルは最大値から必要とする組み込みシンボルの数となる範囲を用いて表現しています。
これにより利用可能なシンボル空間が減少しています。


At this stage, the total size of the literal character string is increased inversely in a state where the literal character string is doubly present.
To further promote, it is necessary to replace the definition of the method name or the like with the embedded symbol value.
現段階ではリテラル文字列が二重にあるような状態で、リテラル文字列の合計サイズを逆に増やすことになります。
さらに推し進める場合は、メソッド名などの定義を組み込みシンボル値に置き換える必要があります。
This result can be confirmed with the next patch set:


builtin-symbols-rev3
Replace mrb_intern_lit () contained in the src/* file with MRB_ID_XXX.
src/* のファイルに含まれる mrb_intern_lit() を MRB_ID_XXX に置き換えます。


builtin-symbols-rev4
In addition to builtin-symbols-rev3, replace mrb_define_method() with mrb_define_method_id() + MRB_ID_XXX.
If MRB_ENABLE_BUILTIN_SYMBOLS is not defined, it leads to an increase in object code, and it is likely to be MRB_ENABLE_BUILTIN_SYMBOLS.
builtin-symbols-rev3 に加えて、mrb_define_method() を mrb_define_method_id() + MRB_ID_XXX に置き換えます。
MRB_ENABLE_BUILTIN_SYMBOLS が定義されない場合はオブジェクトコードを増加させることにつながり、MRB_ENABLE_BUILTIN_SYMBOLS ありきとなりがちです。




Incorporating all the symbols generated by conf.gembox ""default"", we will occupy more ROM than necessary.
Also, since dynamically allocated khash tables for symbols grow larger, the effect of setting struct symbol_name [] to static const is lost.
It is necessary to pick up built-in symbols.
conf.gembox ""default"" で生成される全てのシンボルを組み込んだ場合、必要以上に ROM を専有することになります。
また、シンボルのための動的に確保される khash テーブルが大きくなるため、struct symbol_name[] を static const にした効果が失われます。
組み込みシンボルの収拾選択が必要です。


Performance impact and Memory usage


platform: FreeBSD 11.1 amd64 + AMD A4 5300 (down clocked to 1400 MHz)


compiler: gcc 8.2.0 (from FreeBSD pkg)


based mruby: 4713cd9


test configurations is dearblue/mruby-test-builtin-symbols:test_config.rb
Summary by YAML:
build:
  host-O:
    flags: -O
  host-Os:
    flags: -Os

common:
  gems:
  - :core: mruby-sprintf
  - :core: mruby-print
  - :core: mruby-bin-mruby
  - :github: dearblue/mruby-bin-mrbstat
These are used combination defines:



without MRB_USE_ETEXT_EDATA
with MRB_USE_ETEXT_EDATA




without MRB_ENABLE_BUILTIN_SYMBOLS
with MRB_ENABLE_BUILTIN_SYMBOLS
with MRB_ENABLE_BUILTIN_SYMBOLS + MRB_ENABLE_FORCE_INLINE





The builtin-symbols which is the pull request this time is the same as -rev1, and it continues with -rev2, -rev3, -rev4. See Questions for patch set.
今回プルリクエストとしたパッチセットである builtin-symbols は -rev1 と同じであり、-rev2、-rev3、-rev4 と続きます。パッチセットについては Questions を参照して下さい。
MRB_ENABLE_FORCE_INLINE is undefined -rev2 is the same as -rev1, replace it with the value of -rev1.
MRB_ENABLE_FORCE_INLINE が未定義である -rev2 は -rev1 と同じであるため、-rev1 の値と読み替えて下さい。
Performance of mruby -e '10000000.times { ""a"".intern }'
It measures 5 times and shows its median value (extract only -O).
5回計測し、その中央値を示します (-O のみを抜き出し)。
Please see gist (30.6 KB) for the complete result.
結果の完全なものについては gist (30.6 KB) を参照して下さい。
      user     system      total        real

  0.000143   0.000050   7.186242 (  7.207487)  @master/host-O/bin/mruby
  0.000149   0.000044   7.061115 (  7.094994)  @builtin-symbols-rev2/host-O/bin/mruby
  0.000000   0.000000   7.047000 (  7.067154)  @builtin-symbols-rev3/host-O/bin/mruby
  0.000141   0.000047   6.929714 (  6.954179)  @builtin-symbols-rev4/host-O/bin/mruby
  0.000145   0.000053   7.352164 (  7.377037)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mruby
  0.000139   0.000049   7.426029 (  7.454125)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mruby
  0.000163   0.000048   7.287756 (  7.324831)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mruby
  0.000137   0.000051   7.291583 (  7.316079)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mruby
  0.000159   0.000047   7.256669 (  7.295505)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mruby
  0.000151   0.000044   7.203337 (  7.249613)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mruby

  0.000135   0.000048   7.258186 (  7.279506)  @master/host-O+use_etext_edata/bin/mruby
  0.000175   0.000062   7.182969 (  7.205122)  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mruby
  0.000157   0.000000   7.184262 (  7.208478)  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mruby
  0.000000   0.000051   7.237211 (  7.256816)  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mruby
  0.000138   0.000000   7.389002 (  7.411611)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000194   0.000000   7.209597 (  7.256108)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000165   0.000000   7.114686 (  7.140975)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000000   0.000049   7.120446 (  7.152416)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  0.000000   0.000080   7.127909 (  7.156732)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  0.000000   0.000052   7.085389 (  7.107818)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby

It will be slightly late.
若干遅くなります。
It is a subtle matter whether there is any effect of MRB_ENABLE_FORCE_INLINE.
MRB_ENABLE_FORCE_INLINE の効果についてはあるのかないのか微妙なところです。
Performance of mruby -e '10000000.times { :a.to_s }'
There is little difference in the process of converting a symbol to a character string.
シンボルを文字列に変換する処理ではほとんど差異が見られません。
Please see gist (30.6 KB) for the complete result.
結果の完全なものについては gist (30.6 KB) を参照して下さい。
Memory usage of readelf -S mruby and valgrind mruby -e ''
Here is a summary of the results.
結果を整形した要約を示します。
Please see gist (248.7 KB) for the complete result.
結果の完全なものについては gist (248.7 KB) を参照して下さい。
text       rodata        malloc   (allocs)  binary

  278628 +   123664 with   281606 (  1283)  @master/host-O/bin/mruby
  278628 +   123664 with   281606 (  1283)  @builtin-symbols-rev2/host-O/bin/mruby
  278628 +   123664 with   281606 (  1283)  @builtin-symbols-rev3/host-O/bin/mruby
  283316 +   123664 with   279837 (  1088)  @builtin-symbols-rev4/host-O/bin/mruby
  279108 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mruby
  277748 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mruby
  277620 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mruby
  279220 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mruby
  277860 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mruby
  277732 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mruby

  278820 +   123664 with   279391 (  1049)  @master/host-O+use_etext_edata/bin/mruby
  278820 +   123664 with   279391 (  1049)  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mruby
  278820 +   123664 with   279391 (  1049)  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mruby
  283508 +   123664 with   279391 (  1049)  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mruby
  279300 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mruby
  277940 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mruby
  277812 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mruby
  279412 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  278052 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  277924 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby



Comparison of @master/host-O, @builtin-symbols-rev2/host-O and @builtin-symbols-rev3/host-O
These should eliminate the difference after the preprocessor and actually .text and .rodata are the same.
これらはプリプロセッサ後の差異が無くなるはずであり、実際に .text と .rodata は同じになっています。


Comparison of @master/host-O and @builtin-symbols-rev4/host-O
For example, since mrb_define_method() is decomposed into mrb_define_method_id() + mrb_intern_lit(), .text is incremented by the call to mrb_intern_lit().
Instead, malloc decreases slightly.
I think this tendency is similar to #4065.
例えば mrb_define_method() が mrb_define_method_id() + mrb_intern_lit() に分解されるため、mrb_intern_lit() の呼び出しの分だけ .text が増加します。
その代わり malloc が微減します。
この傾向は #4065 も似ていると思います。


Comparison of @builtin-symbols-rev2/host-O and @builtin-symbols-rev2/host-O+builtin-symbols
It is almost the same as the expected increase in .rodata size due to the incorporation of symbols.
組み込みシンボル化に伴う想定された .rodata サイズの増加とほぼ同じとなっています。
table size = 401 symbols * sizeof(symbol_name) = 6416 bytes (for 64 bit platform)
combined pool size = 2712 bytes (+ 342 NUL bytes) (Symbolic strings with NUL jointed)
total size = 6416 bytes + 2712 bytes + 342 NUL bytes = 9470 bytes

Since processing for built-in symbols is inserted, .text increases slightly.
組み込みシンボルのための処理が差し込まれるため、.text が微増しています。
malloc has decreased by nearly 34 KB. I think that it will be about 17 KB in 32 bit environment.
malloc が 34 KB 近く減少しています。32 ビット環境では 17 KB ほどになるかと思います。


Comparison of @builtin-symbols-rev2/host-O+builtin-symbols and @builtin-symbols-rev3/host-O+builtin-symbols
Because mrb_intern_lit() in src is replaced with MRB_ID_XXX as an integer value, .text and .rodata are slightly decreasing.
src 中の mrb_intern_lit() が整数値としての MRB_ID_XXX に置き換わるため、.text と .rodata が微減しています。


Comparison of @builtin-symbols-rev3/host-O+builtin-symbols and @builtin-symbols-rev4/host-O+builtin-symbols
.rodata is subtracted slightly because the string given bymrb_define_method ()in src is replaced with MRB_ID_XXX as an integer value.
src 中の mrb_define_method() で与えていた文字列が整数値としての MRB_ID_XXX に置き換わるため、.rodata が微減しています。



For reference, we also put a summary of @master/host-O/bin/mrbtest and @builtin-symbols-revXXX/host-O+builtin-symbols/bin/mrbtest.
参考までに @master/host-O/bin/mrbtest と @builtin-symbols-revXXX/host-O+builtin-symbols/bin/mrbtest の要約も置いておきます。
Please see gist (304.7 KB) for the complete result.
結果の完全なものについては gist (304.7 KB) を参照して下さい。
text       rodata        malloc   (allocs)  binary
  178996 +   258117 with 13711301 ( 82004)  @master/host-O/bin/mrbtest
  178996 +   258117 with 13711301 ( 82004)  @builtin-symbols-rev2/host-O/bin/mrbtest
  178996 +   258117 with 13711301 ( 82004)  @builtin-symbols-rev3/host-O/bin/mrbtest
  183668 +   258117 with 13629927 ( 73034)  @builtin-symbols-rev4/host-O/bin/mrbtest
  179476 +   267621 with 11790850 ( 70874)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mrbtest
  178100 +   267525 with 11790850 ( 70874)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mrbtest
  177988 +   266053 with 11790850 ( 70874)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mrbtest
  179588 +   267621 with 11790850 ( 70874)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mrbtest
  178228 +   267525 with 11790850 ( 70874)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mrbtest
  178100 +   266053 with 11790850 ( 70874)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mrbtest

Memory usage by custom allocator
Define a custom allocator with dearblue/mruby-bin-mrbstat and summarize the measurement results after mrb_open_allocf() + mrb_full_gc().
dearblue/mruby-bin-mrbstat によるカスタムアロケータを定義して mrb_open_allocf() + mrb_full_gc() したあとの計測結果の要約を示します。
Please note that meta information for malloc management is not included.
ただし malloc 管理のためのメタ情報が含まれていないことに注意して下さい。
Please see gist (67.5 KB) for the complete result.
結果の完全なものについては gist (67.5 KB) を参照して下さい。
current  malloc   realloc  realloc  runtime  builtin  symbol   sizeof
  malloc    times    times    delta  symbols  symbols capacity   symtbl  binary

  181648     1238       15     5257      384        0      426     6832  @master/host-O/bin/mrbstat
  181648     1238       15     5257      384        0      426     6832  @builtin-symbols-rev2/host-O/bin/mrbstat
  181648     1238       15     5257      384        0      426     6832  @builtin-symbols-rev3/host-O/bin/mrbstat
  179879     1043       15     5257      384        0      426     6832  @builtin-symbols-rev4/host-O/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mrbstat

  179438     1005       15     5257      384        0      426     6832  @master/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat

Otherwise


Built-in symbol table combining character strings that are not NUL-terminated (I am not planning a pull request)
NUL 終端されない文字列を統合した組み込みシンボルテーブル (床下の梅干しと一緒にこれから100年は寝かせる予定です)


dearblue@WIP-aggressively-builtin-symbols
There was not MRB_ENABLE_BUILTIN_SYMBOLS yet at this time.
このときはまだ MRB_ENABLE_BUILTIN_SYMBOLS がありませんでした。
Is the highlight src/builtin_symbols.h?
見どころは src/builtin_symbols.h でしょうか。


mksymtbl.rb - The generator of builtin symbols table (aggressively)




Questions


Which directory should you add outsym.rb and mksymtbl.rb, symbol.yaml, or does not it need it?
Also, please point out if there are parts that will be inconvenient when adding.
outsym.rb と mksymtbl.rb、symbol.yaml はどのディレクトリに追加するべきでしょうか? それとも不要ですか?
また、追加する時に不都合となる部分があればご指摘下さい。


Please give us your opinion if there are more favorable names of MRB_ID_XXX.
MRB_ID_XXX の名前についてより好ましいものがあればご意見下さい。


The branch this time as a pull request is builtin-symbols-rev1. Should it be better to proceed from the following builtin-symbols-rev2 to builtin-symbols-rev4?
今回プルリクエストとしたブランチは builtin-symbols-rev1 に当たります。この後に続く builtin-symbols-rev2 から builtin-symbols-rev4 までのどれかに進めたほうがよろしいでしょうか?


builtin-symbols-rev1 - The first stage of this pull request (このプルリクエストの最初の段階)


builtin-symbols-rev2 - Make sym_hash_equal() forced inline in MRB_ENABLE_FORCE_INLINE (MRB_ENABLE_FORCE_INLINE の場合に sym_hash_equal() を強制インライン化させる)


builtin-symbols-rev3 - Replaced mrb_intern_lit() below with MRB_ID_XXX below src (personally recommended) (src 以下の mrb_intern_lit() を MRB_ID_XXX に置き換えたもの (個人的におすすめ))


builtin-symbols-rev4 - Since mrb_define_method() etc. are decomposed into mrb_define_method_id() + MRB_ID_XXX, MRB_ENABLE_BUILTIN_SYMBOLS is often used (mrb_define_method() などを分解して mrb_define_method_id() + MRB_ID_XXX のようにするため、MRB_ENABLE_BUILTIN_SYMBOLS ありきとなりがち)




Thanks.","# Most English text is machine translation by Google translation. The Japanese text which becomes the original text is also written.
Summary
Add built-in symbols embedded in object code at build time.
ビルド時にオブジェクトコードへと埋め込まれる組み込みシンボルを追加します。
Description


Allocate strings as built-in symbols and arrays of symbol structures (symbol_name) as static const at build time.
組み込みシンボルとしての文字列、及びシンボルの構造体 (symbol_name) の配列を static const としてビルド時に確保します。


Collect the character strings as symbols. At this time, small strings matching the end of the large string are merged.
シンボルとなる文字列をまとめます。このとき大きい文字列の末端に一致する小さい文字列は統合されます。
e.g.:

""Object"" is included in ""BasicObject""
""RUBY_VERSION"" is included in ""MRUBY_VERSION""
""cmp"" and ""p"" are included in ""__ary_cmp""



If you create multiple mrb_state, you can share embedded symbols.
複数の mrb_state を作成した場合、組み込みシンボルを共有することが出来ます。


The symbols other than the built-in symbols (I call it runtime symbols at will) are placed in the struct symbol_name allocated in the heap as before.
組み込みシンボル以外のシンボル (僕は勝手に実行時シンボルと呼んでいます) は、これまで通りヒープに確保された struct symbol_name に置かれます。


Although the .text + .rodata section increases by about 10 KB, measurement by valgrind mruby - e '' decreased malloc from 181.6 KB to 147.8 KB.
In mrbtest, malloc has decreased by about 1.8 MB.
.text + .rodata セクションが約 10 KB 増えますが、valgrind mruby -e '' による計測では malloc が 181.6 KB から 147.8 KB へと減少しました。
mrbtest においては、malloc が約 1.8 MB 減少しました。


Files and APIs
Compatibility


The value of mrb_sym reaches the most significant bit.
mrb_sym の値が最上位ビットに到達します。


There are no changes to functions, macros, or structures that lose incompatibility.
互換性を失う関数やマクロ、構造体の変更はありません。


Appended configurations

MRB_ENABLE_BUILTIN_SYMBOLS
MRB_ENABLE_FORCE_INLINE (Provided by builtin-symbols-rev2 patch set)

Appended macros

MRB_BUILTIN_SYMBOLS_MAX (in include/mruby/value.h) - default is zero
MRB_FORCE_INLINE (in include/mruby.h) (Provided by builtin-symbols-rev2 patch set) - default is same as MRB_INLINE

Appended files


include/mruby/id.h - as a part of public mruby API


src/builtin_symbols.h - string table for symbols, and array of struct symbol_name


outsym.rb (NOT INCLUDED YET) - export all symbols
$ host/bin/mruby outsym.rb > symbols.yaml



mksymtbl.rb (NOT INCLUDED YET) - generate include/mruby/id.h and src/builtin_symbols.h files, and modify MRB_BUILTIN_SYMBOLS_MAX macro
$ ruby mksymtbl.rb < symbols.yaml



outsym.rb, mksymtbl.rb and symbols.yaml are currently in gist.

outsym.rb
mksymtbl.rb

How to implementation


It is expressed from the maximum value of mrb_sym (unsigned 32-bit integer value) using the necessary range for the number of built-in symbols.
mrb_sym (符号なし32ビット整数値) の最大値から組み込みシンボルの個数に必要な範囲を用いて表現しています。
/* from src/symbol.c */

#define MRB_BUILTIN_SYMBOLS_PIVOT (UINT32_MAX - MRB_BUILTIN_SYMBOLS_MAX)
#define MRB_BUILTIN_SYMBOL_P(sym) ((sym) > MRB_BUILTIN_SYMBOLS_PIVOT)


Considering it as the value of a built-in symbol, it refers to struct symbol_name builtin_symbols_table[] allocated as static const at the time of build.
組み込みシンボルの値とみなすと、ビルド時に static const として確保した struct symbol_name builtin_symbols_table[] を参照するようになります。


At this time, take a complement such as ~symbol, and make it an array subscript.
この時 ~symbol のように一の補数を取って、配列の添字とします。
mrb_sym symbol = ...;
const symbol_name *sname = &builtin_symbols_table[~symbol];


builtin_symbols_table is defined in src/builtin_symbols.h and #included from src/symbol.c.
builtin_symbols_table は src/builtin_symbols.h で定義され、src/symbol.c から #include されます。


mrb->symtbl will be initialized with mrb_init_symtbl() as a work area.
mrb->symtbl は作業領域として mrb_init_symtbl() で初期化されるようになります。


include/mruby/id.h, src/builtin_symbols.h, and include/mruby/value.h MRB_BUILTIN_SYMBOLS_MAX constants are automatically generated and rewritten by mksymtbl.rb I will.
We created host/bin/mruby with a smaller configuration, and all the symbols are included in the built-in symbols.
include/mruby/id.h と src/builtin_symbols.h、および include/mruby/value.h の MRB_BUILTIN_SYMBOLS_MAX 定数は、mksymtbl.rb によって自動生成・書き換えが行われます。
小さめの構成で host/bin/mruby を作成し、その全シンボルを組み込みシンボルの対象としています。
The configuration of host/bin/mruby is as follows:
MRuby::Build.new do |conf|
  toolchain :gcc
  conf.build_dir = ""host""
  enable_debug
  enable_test

  gem core: ""mruby-sprintf""
  gem core: ""mruby-print""
  gem core: ""mruby-symbol-ext""
  gem core: ""mruby-bin-mrbc""
  gem core: ""mruby-bin-mirb""
  gem core: ""mruby-bin-mruby""
end
================================================
      Config Name: host
 Output Directory: host
         Binaries: mrbc, mrbtest
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-symbol-ext - Symbol class extension
             mruby-compiler - mruby compiler library
             mruby-bin-mrbc - mruby compiler executable
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-test - mruby test
================================================

Execute outsym.rb with the created host/bin/mruby. By processing the result with mksymtbl.rb it is possible to generate include/mruby/id.h and src/builtin_symbols.h files and include/mruby/value.h MRB_BUILTIN_SYMBOLS_MAX constant Rewrite.
作成した host/bin/mruby で outsym.rb を実行します。その結果を mksymtbl.rb で処理することで include/mruby/id.h と src/builtin_symbols.h のファイル生成、および include/mruby/value.h の MRB_BUILTIN_SYMBOLS_MAX 定数を書き換えます。
$ build/host/bin/mruby outsym.rb > symbols.yaml
$ vim symbol.yaml  ## edit symbols if needed
$ ruby mksymtbl.rb < symbol.yaml

symbols.yaml is in gist at this time.


Problems & Issues for this patch


Built-in symbols are expressed from the maximum value using the range that becomes the number of built-in symbols required.
This reduces the available symbol space.
組み込みシンボルは最大値から必要とする組み込みシンボルの数となる範囲を用いて表現しています。
これにより利用可能なシンボル空間が減少しています。


At this stage, the total size of the literal character string is increased inversely in a state where the literal character string is doubly present.
To further promote, it is necessary to replace the definition of the method name or the like with the embedded symbol value.
現段階ではリテラル文字列が二重にあるような状態で、リテラル文字列の合計サイズを逆に増やすことになります。
さらに推し進める場合は、メソッド名などの定義を組み込みシンボル値に置き換える必要があります。
This result can be confirmed with the next patch set:


builtin-symbols-rev3
Replace mrb_intern_lit () contained in the src/* file with MRB_ID_XXX.
src/* のファイルに含まれる mrb_intern_lit() を MRB_ID_XXX に置き換えます。


builtin-symbols-rev4
In addition to builtin-symbols-rev3, replace mrb_define_method() with mrb_define_method_id() + MRB_ID_XXX.
If MRB_ENABLE_BUILTIN_SYMBOLS is not defined, it leads to an increase in object code, and it is likely to be MRB_ENABLE_BUILTIN_SYMBOLS.
builtin-symbols-rev3 に加えて、mrb_define_method() を mrb_define_method_id() + MRB_ID_XXX に置き換えます。
MRB_ENABLE_BUILTIN_SYMBOLS が定義されない場合はオブジェクトコードを増加させることにつながり、MRB_ENABLE_BUILTIN_SYMBOLS ありきとなりがちです。




Incorporating all the symbols generated by conf.gembox ""default"", we will occupy more ROM than necessary.
Also, since dynamically allocated khash tables for symbols grow larger, the effect of setting struct symbol_name [] to static const is lost.
It is necessary to pick up built-in symbols.
conf.gembox ""default"" で生成される全てのシンボルを組み込んだ場合、必要以上に ROM を専有することになります。
また、シンボルのための動的に確保される khash テーブルが大きくなるため、struct symbol_name[] を static const にした効果が失われます。
組み込みシンボルの収拾選択が必要です。


Performance impact and Memory usage


platform: FreeBSD 11.1 amd64 + AMD A4 5300 (down clocked to 1400 MHz)


compiler: gcc 8.2.0 (from FreeBSD pkg)


based mruby: 4713cd9


test configurations is dearblue/mruby-test-builtin-symbols:test_config.rb
Summary by YAML:
build:
  host-O:
    flags: -O
  host-Os:
    flags: -Os

common:
  gems:
  - :core: mruby-sprintf
  - :core: mruby-print
  - :core: mruby-bin-mruby
  - :github: dearblue/mruby-bin-mrbstat
These are used combination defines:



without MRB_USE_ETEXT_EDATA
with MRB_USE_ETEXT_EDATA




without MRB_ENABLE_BUILTIN_SYMBOLS
with MRB_ENABLE_BUILTIN_SYMBOLS
with MRB_ENABLE_BUILTIN_SYMBOLS + MRB_ENABLE_FORCE_INLINE





The builtin-symbols which is the pull request this time is the same as -rev1, and it continues with -rev2, -rev3, -rev4. See Questions for patch set.
今回プルリクエストとしたパッチセットである builtin-symbols は -rev1 と同じであり、-rev2、-rev3、-rev4 と続きます。パッチセットについては Questions を参照して下さい。
MRB_ENABLE_FORCE_INLINE is undefined -rev2 is the same as -rev1, replace it with the value of -rev1.
MRB_ENABLE_FORCE_INLINE が未定義である -rev2 は -rev1 と同じであるため、-rev1 の値と読み替えて下さい。
Performance of mruby -e '10000000.times { ""a"".intern }'
It measures 5 times and shows its median value (extract only -O).
5回計測し、その中央値を示します (-O のみを抜き出し)。
Please see gist (30.6 KB) for the complete result.
結果の完全なものについては gist (30.6 KB) を参照して下さい。
      user     system      total        real

  0.000143   0.000050   7.186242 (  7.207487)  @master/host-O/bin/mruby
  0.000149   0.000044   7.061115 (  7.094994)  @builtin-symbols-rev2/host-O/bin/mruby
  0.000000   0.000000   7.047000 (  7.067154)  @builtin-symbols-rev3/host-O/bin/mruby
  0.000141   0.000047   6.929714 (  6.954179)  @builtin-symbols-rev4/host-O/bin/mruby
  0.000145   0.000053   7.352164 (  7.377037)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mruby
  0.000139   0.000049   7.426029 (  7.454125)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mruby
  0.000163   0.000048   7.287756 (  7.324831)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mruby
  0.000137   0.000051   7.291583 (  7.316079)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mruby
  0.000159   0.000047   7.256669 (  7.295505)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mruby
  0.000151   0.000044   7.203337 (  7.249613)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mruby

  0.000135   0.000048   7.258186 (  7.279506)  @master/host-O+use_etext_edata/bin/mruby
  0.000175   0.000062   7.182969 (  7.205122)  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mruby
  0.000157   0.000000   7.184262 (  7.208478)  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mruby
  0.000000   0.000051   7.237211 (  7.256816)  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mruby
  0.000138   0.000000   7.389002 (  7.411611)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000194   0.000000   7.209597 (  7.256108)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000165   0.000000   7.114686 (  7.140975)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000000   0.000049   7.120446 (  7.152416)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  0.000000   0.000080   7.127909 (  7.156732)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  0.000000   0.000052   7.085389 (  7.107818)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby

It will be slightly late.
若干遅くなります。
It is a subtle matter whether there is any effect of MRB_ENABLE_FORCE_INLINE.
MRB_ENABLE_FORCE_INLINE の効果についてはあるのかないのか微妙なところです。
Performance of mruby -e '10000000.times { :a.to_s }'
There is little difference in the process of converting a symbol to a character string.
シンボルを文字列に変換する処理ではほとんど差異が見られません。
Please see gist (30.6 KB) for the complete result.
結果の完全なものについては gist (30.6 KB) を参照して下さい。
Memory usage of readelf -S mruby and valgrind mruby -e ''
Here is a summary of the results.
結果を整形した要約を示します。
Please see gist (248.7 KB) for the complete result.
結果の完全なものについては gist (248.7 KB) を参照して下さい。
text       rodata        malloc   (allocs)  binary

  278628 +   123664 with   281606 (  1283)  @master/host-O/bin/mruby
  278628 +   123664 with   281606 (  1283)  @builtin-symbols-rev2/host-O/bin/mruby
  278628 +   123664 with   281606 (  1283)  @builtin-symbols-rev3/host-O/bin/mruby
  283316 +   123664 with   279837 (  1088)  @builtin-symbols-rev4/host-O/bin/mruby
  279108 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mruby
  277748 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mruby
  277620 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mruby
  279220 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mruby
  277860 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mruby
  277732 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mruby

  278820 +   123664 with   279391 (  1049)  @master/host-O+use_etext_edata/bin/mruby
  278820 +   123664 with   279391 (  1049)  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mruby
  278820 +   123664 with   279391 (  1049)  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mruby
  283508 +   123664 with   279391 (  1049)  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mruby
  279300 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mruby
  277940 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mruby
  277812 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mruby
  279412 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  278052 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  277924 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby



Comparison of @master/host-O, @builtin-symbols-rev2/host-O and @builtin-symbols-rev3/host-O
These should eliminate the difference after the preprocessor and actually .text and .rodata are the same.
これらはプリプロセッサ後の差異が無くなるはずであり、実際に .text と .rodata は同じになっています。


Comparison of @master/host-O and @builtin-symbols-rev4/host-O
For example, since mrb_define_method() is decomposed into mrb_define_method_id() + mrb_intern_lit(), .text is incremented by the call to mrb_intern_lit().
Instead, malloc decreases slightly.
I think this tendency is similar to #4065.
例えば mrb_define_method() が mrb_define_method_id() + mrb_intern_lit() に分解されるため、mrb_intern_lit() の呼び出しの分だけ .text が増加します。
その代わり malloc が微減します。
この傾向は #4065 も似ていると思います。


Comparison of @builtin-symbols-rev2/host-O and @builtin-symbols-rev2/host-O+builtin-symbols
It is almost the same as the expected increase in .rodata size due to the incorporation of symbols.
組み込みシンボル化に伴う想定された .rodata サイズの増加とほぼ同じとなっています。
table size = 401 symbols * sizeof(symbol_name) = 6416 bytes (for 64 bit platform)
combined pool size = 2712 bytes (+ 342 NUL bytes) (Symbolic strings with NUL jointed)
total size = 6416 bytes + 2712 bytes + 342 NUL bytes = 9470 bytes

Since processing for built-in symbols is inserted, .text increases slightly.
組み込みシンボルのための処理が差し込まれるため、.text が微増しています。
malloc has decreased by nearly 34 KB. I think that it will be about 17 KB in 32 bit environment.
malloc が 34 KB 近く減少しています。32 ビット環境では 17 KB ほどになるかと思います。


Comparison of @builtin-symbols-rev2/host-O+builtin-symbols and @builtin-symbols-rev3/host-O+builtin-symbols
Because mrb_intern_lit() in src is replaced with MRB_ID_XXX as an integer value, .text and .rodata are slightly decreasing.
src 中の mrb_intern_lit() が整数値としての MRB_ID_XXX に置き換わるため、.text と .rodata が微減しています。


Comparison of @builtin-symbols-rev3/host-O+builtin-symbols and @builtin-symbols-rev4/host-O+builtin-symbols
.rodata is subtracted slightly because the string given bymrb_define_method ()in src is replaced with MRB_ID_XXX as an integer value.
src 中の mrb_define_method() で与えていた文字列が整数値としての MRB_ID_XXX に置き換わるため、.rodata が微減しています。



For reference, we also put a summary of @master/host-O/bin/mrbtest and @builtin-symbols-revXXX/host-O+builtin-symbols/bin/mrbtest.
参考までに @master/host-O/bin/mrbtest と @builtin-symbols-revXXX/host-O+builtin-symbols/bin/mrbtest の要約も置いておきます。
Please see gist (304.7 KB) for the complete result.
結果の完全なものについては gist (304.7 KB) を参照して下さい。
text       rodata        malloc   (allocs)  binary
  178996 +   258117 with 13711301 ( 82004)  @master/host-O/bin/mrbtest
  178996 +   258117 with 13711301 ( 82004)  @builtin-symbols-rev2/host-O/bin/mrbtest
  178996 +   258117 with 13711301 ( 82004)  @builtin-symbols-rev3/host-O/bin/mrbtest
  183668 +   258117 with 13629927 ( 73034)  @builtin-symbols-rev4/host-O/bin/mrbtest
  179476 +   267621 with 11790850 ( 70874)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mrbtest
  178100 +   267525 with 11790850 ( 70874)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mrbtest
  177988 +   266053 with 11790850 ( 70874)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mrbtest
  179588 +   267621 with 11790850 ( 70874)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mrbtest
  178228 +   267525 with 11790850 ( 70874)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mrbtest
  178100 +   266053 with 11790850 ( 70874)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mrbtest

Memory usage by custom allocator
Define a custom allocator with dearblue/mruby-bin-mrbstat and summarize the measurement results after mrb_open_allocf() + mrb_full_gc().
dearblue/mruby-bin-mrbstat によるカスタムアロケータを定義して mrb_open_allocf() + mrb_full_gc() したあとの計測結果の要約を示します。
Please note that meta information for malloc management is not included.
ただし malloc 管理のためのメタ情報が含まれていないことに注意して下さい。
Please see gist (67.5 KB) for the complete result.
結果の完全なものについては gist (67.5 KB) を参照して下さい。
current  malloc   realloc  realloc  runtime  builtin  symbol   sizeof
  malloc    times    times    delta  symbols  symbols capacity   symtbl  binary

  181648     1238       15     5257      384        0      426     6832  @master/host-O/bin/mrbstat
  181648     1238       15     5257      384        0      426     6832  @builtin-symbols-rev2/host-O/bin/mrbstat
  181648     1238       15     5257      384        0      426     6832  @builtin-symbols-rev3/host-O/bin/mrbstat
  179879     1043       15     5257      384        0      426     6832  @builtin-symbols-rev4/host-O/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mrbstat

  179438     1005       15     5257      384        0      426     6832  @master/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat

Otherwise


Built-in symbol table combining character strings that are not NUL-terminated (I am not planning a pull request)
NUL 終端されない文字列を統合した組み込みシンボルテーブル (床下の梅干しと一緒にこれから100年は寝かせる予定です)


dearblue@WIP-aggressively-builtin-symbols
There was not MRB_ENABLE_BUILTIN_SYMBOLS yet at this time.
このときはまだ MRB_ENABLE_BUILTIN_SYMBOLS がありませんでした。
Is the highlight src/builtin_symbols.h?
見どころは src/builtin_symbols.h でしょうか。


mksymtbl.rb - The generator of builtin symbols table (aggressively)




Questions


Which directory should you add outsym.rb and mksymtbl.rb, symbol.yaml, or does not it need it?
Also, please point out if there are parts that will be inconvenient when adding.
outsym.rb と mksymtbl.rb、symbol.yaml はどのディレクトリに追加するべきでしょうか? それとも不要ですか?
また、追加する時に不都合となる部分があればご指摘下さい。


Please give us your opinion if there are more favorable names of MRB_ID_XXX.
MRB_ID_XXX の名前についてより好ましいものがあればご意見下さい。


The branch this time as a pull request is builtin-symbols-rev1. Should it be better to proceed from the following builtin-symbols-rev2 to builtin-symbols-rev4?
今回プルリクエストとしたブランチは builtin-symbols-rev1 に当たります。この後に続く builtin-symbols-rev2 から builtin-symbols-rev4 までのどれかに進めたほうがよろしいでしょうか?


builtin-symbols-rev1 - The first stage of this pull request (このプルリクエストの最初の段階)


builtin-symbols-rev2 - Make sym_hash_equal() forced inline in MRB_ENABLE_FORCE_INLINE (MRB_ENABLE_FORCE_INLINE の場合に sym_hash_equal() を強制インライン化させる)


builtin-symbols-rev3 - Replaced mrb_intern_lit() below with MRB_ID_XXX below src (personally recommended) (src 以下の mrb_intern_lit() を MRB_ID_XXX に置き換えたもの (個人的におすすめ))


builtin-symbols-rev4 - Since mrb_define_method() etc. are decomposed into mrb_define_method_id() + MRB_ID_XXX, MRB_ENABLE_BUILTIN_SYMBOLS is often used (mrb_define_method() などを分解して mrb_define_method_id() + MRB_ID_XXX のようにするため、MRB_ENABLE_BUILTIN_SYMBOLS ありきとなりがち)




Thanks.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4076,2018-08-04T16:00:04Z,2018-12-23T09:14:08Z,2018-12-23T09:14:19Z,CLOSED,False,1038,3,8,https://github.com/dearblue,Add built-in symbols feature (EXPERIMENTAL!),3,[],https://github.com/mruby/mruby/pull/4076,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4076#issuecomment-410699439,"# Most English text is machine translation by Google translation. The Japanese text which becomes the original text is also written.
Summary
Add built-in symbols embedded in object code at build time.
ビルド時にオブジェクトコードへと埋め込まれる組み込みシンボルを追加します。
Description


Allocate strings as built-in symbols and arrays of symbol structures (symbol_name) as static const at build time.
組み込みシンボルとしての文字列、及びシンボルの構造体 (symbol_name) の配列を static const としてビルド時に確保します。


Collect the character strings as symbols. At this time, small strings matching the end of the large string are merged.
シンボルとなる文字列をまとめます。このとき大きい文字列の末端に一致する小さい文字列は統合されます。
e.g.:

""Object"" is included in ""BasicObject""
""RUBY_VERSION"" is included in ""MRUBY_VERSION""
""cmp"" and ""p"" are included in ""__ary_cmp""



If you create multiple mrb_state, you can share embedded symbols.
複数の mrb_state を作成した場合、組み込みシンボルを共有することが出来ます。


The symbols other than the built-in symbols (I call it runtime symbols at will) are placed in the struct symbol_name allocated in the heap as before.
組み込みシンボル以外のシンボル (僕は勝手に実行時シンボルと呼んでいます) は、これまで通りヒープに確保された struct symbol_name に置かれます。


Although the .text + .rodata section increases by about 10 KB, measurement by valgrind mruby - e '' decreased malloc from 181.6 KB to 147.8 KB.
In mrbtest, malloc has decreased by about 1.8 MB.
.text + .rodata セクションが約 10 KB 増えますが、valgrind mruby -e '' による計測では malloc が 181.6 KB から 147.8 KB へと減少しました。
mrbtest においては、malloc が約 1.8 MB 減少しました。


Files and APIs
Compatibility


The value of mrb_sym reaches the most significant bit.
mrb_sym の値が最上位ビットに到達します。


There are no changes to functions, macros, or structures that lose incompatibility.
互換性を失う関数やマクロ、構造体の変更はありません。


Appended configurations

MRB_ENABLE_BUILTIN_SYMBOLS
MRB_ENABLE_FORCE_INLINE (Provided by builtin-symbols-rev2 patch set)

Appended macros

MRB_BUILTIN_SYMBOLS_MAX (in include/mruby/value.h) - default is zero
MRB_FORCE_INLINE (in include/mruby.h) (Provided by builtin-symbols-rev2 patch set) - default is same as MRB_INLINE

Appended files


include/mruby/id.h - as a part of public mruby API


src/builtin_symbols.h - string table for symbols, and array of struct symbol_name


outsym.rb (NOT INCLUDED YET) - export all symbols
$ host/bin/mruby outsym.rb > symbols.yaml



mksymtbl.rb (NOT INCLUDED YET) - generate include/mruby/id.h and src/builtin_symbols.h files, and modify MRB_BUILTIN_SYMBOLS_MAX macro
$ ruby mksymtbl.rb < symbols.yaml



outsym.rb, mksymtbl.rb and symbols.yaml are currently in gist.

outsym.rb
mksymtbl.rb

How to implementation


It is expressed from the maximum value of mrb_sym (unsigned 32-bit integer value) using the necessary range for the number of built-in symbols.
mrb_sym (符号なし32ビット整数値) の最大値から組み込みシンボルの個数に必要な範囲を用いて表現しています。
/* from src/symbol.c */

#define MRB_BUILTIN_SYMBOLS_PIVOT (UINT32_MAX - MRB_BUILTIN_SYMBOLS_MAX)
#define MRB_BUILTIN_SYMBOL_P(sym) ((sym) > MRB_BUILTIN_SYMBOLS_PIVOT)


Considering it as the value of a built-in symbol, it refers to struct symbol_name builtin_symbols_table[] allocated as static const at the time of build.
組み込みシンボルの値とみなすと、ビルド時に static const として確保した struct symbol_name builtin_symbols_table[] を参照するようになります。


At this time, take a complement such as ~symbol, and make it an array subscript.
この時 ~symbol のように一の補数を取って、配列の添字とします。
mrb_sym symbol = ...;
const symbol_name *sname = &builtin_symbols_table[~symbol];


builtin_symbols_table is defined in src/builtin_symbols.h and #included from src/symbol.c.
builtin_symbols_table は src/builtin_symbols.h で定義され、src/symbol.c から #include されます。


mrb->symtbl will be initialized with mrb_init_symtbl() as a work area.
mrb->symtbl は作業領域として mrb_init_symtbl() で初期化されるようになります。


include/mruby/id.h, src/builtin_symbols.h, and include/mruby/value.h MRB_BUILTIN_SYMBOLS_MAX constants are automatically generated and rewritten by mksymtbl.rb I will.
We created host/bin/mruby with a smaller configuration, and all the symbols are included in the built-in symbols.
include/mruby/id.h と src/builtin_symbols.h、および include/mruby/value.h の MRB_BUILTIN_SYMBOLS_MAX 定数は、mksymtbl.rb によって自動生成・書き換えが行われます。
小さめの構成で host/bin/mruby を作成し、その全シンボルを組み込みシンボルの対象としています。
The configuration of host/bin/mruby is as follows:
MRuby::Build.new do |conf|
  toolchain :gcc
  conf.build_dir = ""host""
  enable_debug
  enable_test

  gem core: ""mruby-sprintf""
  gem core: ""mruby-print""
  gem core: ""mruby-symbol-ext""
  gem core: ""mruby-bin-mrbc""
  gem core: ""mruby-bin-mirb""
  gem core: ""mruby-bin-mruby""
end
================================================
      Config Name: host
 Output Directory: host
         Binaries: mrbc, mrbtest
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-symbol-ext - Symbol class extension
             mruby-compiler - mruby compiler library
             mruby-bin-mrbc - mruby compiler executable
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-test - mruby test
================================================

Execute outsym.rb with the created host/bin/mruby. By processing the result with mksymtbl.rb it is possible to generate include/mruby/id.h and src/builtin_symbols.h files and include/mruby/value.h MRB_BUILTIN_SYMBOLS_MAX constant Rewrite.
作成した host/bin/mruby で outsym.rb を実行します。その結果を mksymtbl.rb で処理することで include/mruby/id.h と src/builtin_symbols.h のファイル生成、および include/mruby/value.h の MRB_BUILTIN_SYMBOLS_MAX 定数を書き換えます。
$ build/host/bin/mruby outsym.rb > symbols.yaml
$ vim symbol.yaml  ## edit symbols if needed
$ ruby mksymtbl.rb < symbol.yaml

symbols.yaml is in gist at this time.


Problems & Issues for this patch


Built-in symbols are expressed from the maximum value using the range that becomes the number of built-in symbols required.
This reduces the available symbol space.
組み込みシンボルは最大値から必要とする組み込みシンボルの数となる範囲を用いて表現しています。
これにより利用可能なシンボル空間が減少しています。


At this stage, the total size of the literal character string is increased inversely in a state where the literal character string is doubly present.
To further promote, it is necessary to replace the definition of the method name or the like with the embedded symbol value.
現段階ではリテラル文字列が二重にあるような状態で、リテラル文字列の合計サイズを逆に増やすことになります。
さらに推し進める場合は、メソッド名などの定義を組み込みシンボル値に置き換える必要があります。
This result can be confirmed with the next patch set:


builtin-symbols-rev3
Replace mrb_intern_lit () contained in the src/* file with MRB_ID_XXX.
src/* のファイルに含まれる mrb_intern_lit() を MRB_ID_XXX に置き換えます。


builtin-symbols-rev4
In addition to builtin-symbols-rev3, replace mrb_define_method() with mrb_define_method_id() + MRB_ID_XXX.
If MRB_ENABLE_BUILTIN_SYMBOLS is not defined, it leads to an increase in object code, and it is likely to be MRB_ENABLE_BUILTIN_SYMBOLS.
builtin-symbols-rev3 に加えて、mrb_define_method() を mrb_define_method_id() + MRB_ID_XXX に置き換えます。
MRB_ENABLE_BUILTIN_SYMBOLS が定義されない場合はオブジェクトコードを増加させることにつながり、MRB_ENABLE_BUILTIN_SYMBOLS ありきとなりがちです。




Incorporating all the symbols generated by conf.gembox ""default"", we will occupy more ROM than necessary.
Also, since dynamically allocated khash tables for symbols grow larger, the effect of setting struct symbol_name [] to static const is lost.
It is necessary to pick up built-in symbols.
conf.gembox ""default"" で生成される全てのシンボルを組み込んだ場合、必要以上に ROM を専有することになります。
また、シンボルのための動的に確保される khash テーブルが大きくなるため、struct symbol_name[] を static const にした効果が失われます。
組み込みシンボルの収拾選択が必要です。


Performance impact and Memory usage


platform: FreeBSD 11.1 amd64 + AMD A4 5300 (down clocked to 1400 MHz)


compiler: gcc 8.2.0 (from FreeBSD pkg)


based mruby: 4713cd9


test configurations is dearblue/mruby-test-builtin-symbols:test_config.rb
Summary by YAML:
build:
  host-O:
    flags: -O
  host-Os:
    flags: -Os

common:
  gems:
  - :core: mruby-sprintf
  - :core: mruby-print
  - :core: mruby-bin-mruby
  - :github: dearblue/mruby-bin-mrbstat
These are used combination defines:



without MRB_USE_ETEXT_EDATA
with MRB_USE_ETEXT_EDATA




without MRB_ENABLE_BUILTIN_SYMBOLS
with MRB_ENABLE_BUILTIN_SYMBOLS
with MRB_ENABLE_BUILTIN_SYMBOLS + MRB_ENABLE_FORCE_INLINE





The builtin-symbols which is the pull request this time is the same as -rev1, and it continues with -rev2, -rev3, -rev4. See Questions for patch set.
今回プルリクエストとしたパッチセットである builtin-symbols は -rev1 と同じであり、-rev2、-rev3、-rev4 と続きます。パッチセットについては Questions を参照して下さい。
MRB_ENABLE_FORCE_INLINE is undefined -rev2 is the same as -rev1, replace it with the value of -rev1.
MRB_ENABLE_FORCE_INLINE が未定義である -rev2 は -rev1 と同じであるため、-rev1 の値と読み替えて下さい。
Performance of mruby -e '10000000.times { ""a"".intern }'
It measures 5 times and shows its median value (extract only -O).
5回計測し、その中央値を示します (-O のみを抜き出し)。
Please see gist (30.6 KB) for the complete result.
結果の完全なものについては gist (30.6 KB) を参照して下さい。
      user     system      total        real

  0.000143   0.000050   7.186242 (  7.207487)  @master/host-O/bin/mruby
  0.000149   0.000044   7.061115 (  7.094994)  @builtin-symbols-rev2/host-O/bin/mruby
  0.000000   0.000000   7.047000 (  7.067154)  @builtin-symbols-rev3/host-O/bin/mruby
  0.000141   0.000047   6.929714 (  6.954179)  @builtin-symbols-rev4/host-O/bin/mruby
  0.000145   0.000053   7.352164 (  7.377037)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mruby
  0.000139   0.000049   7.426029 (  7.454125)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mruby
  0.000163   0.000048   7.287756 (  7.324831)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mruby
  0.000137   0.000051   7.291583 (  7.316079)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mruby
  0.000159   0.000047   7.256669 (  7.295505)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mruby
  0.000151   0.000044   7.203337 (  7.249613)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mruby

  0.000135   0.000048   7.258186 (  7.279506)  @master/host-O+use_etext_edata/bin/mruby
  0.000175   0.000062   7.182969 (  7.205122)  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mruby
  0.000157   0.000000   7.184262 (  7.208478)  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mruby
  0.000000   0.000051   7.237211 (  7.256816)  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mruby
  0.000138   0.000000   7.389002 (  7.411611)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000194   0.000000   7.209597 (  7.256108)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000165   0.000000   7.114686 (  7.140975)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000000   0.000049   7.120446 (  7.152416)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  0.000000   0.000080   7.127909 (  7.156732)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  0.000000   0.000052   7.085389 (  7.107818)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby

It will be slightly late.
若干遅くなります。
It is a subtle matter whether there is any effect of MRB_ENABLE_FORCE_INLINE.
MRB_ENABLE_FORCE_INLINE の効果についてはあるのかないのか微妙なところです。
Performance of mruby -e '10000000.times { :a.to_s }'
There is little difference in the process of converting a symbol to a character string.
シンボルを文字列に変換する処理ではほとんど差異が見られません。
Please see gist (30.6 KB) for the complete result.
結果の完全なものについては gist (30.6 KB) を参照して下さい。
Memory usage of readelf -S mruby and valgrind mruby -e ''
Here is a summary of the results.
結果を整形した要約を示します。
Please see gist (248.7 KB) for the complete result.
結果の完全なものについては gist (248.7 KB) を参照して下さい。
text       rodata        malloc   (allocs)  binary

  278628 +   123664 with   281606 (  1283)  @master/host-O/bin/mruby
  278628 +   123664 with   281606 (  1283)  @builtin-symbols-rev2/host-O/bin/mruby
  278628 +   123664 with   281606 (  1283)  @builtin-symbols-rev3/host-O/bin/mruby
  283316 +   123664 with   279837 (  1088)  @builtin-symbols-rev4/host-O/bin/mruby
  279108 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mruby
  277748 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mruby
  277620 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mruby
  279220 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mruby
  277860 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mruby
  277732 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mruby

  278820 +   123664 with   279391 (  1049)  @master/host-O+use_etext_edata/bin/mruby
  278820 +   123664 with   279391 (  1049)  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mruby
  278820 +   123664 with   279391 (  1049)  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mruby
  283508 +   123664 with   279391 (  1049)  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mruby
  279300 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mruby
  277940 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mruby
  277812 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mruby
  279412 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  278052 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  277924 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby



Comparison of @master/host-O, @builtin-symbols-rev2/host-O and @builtin-symbols-rev3/host-O
These should eliminate the difference after the preprocessor and actually .text and .rodata are the same.
これらはプリプロセッサ後の差異が無くなるはずであり、実際に .text と .rodata は同じになっています。


Comparison of @master/host-O and @builtin-symbols-rev4/host-O
For example, since mrb_define_method() is decomposed into mrb_define_method_id() + mrb_intern_lit(), .text is incremented by the call to mrb_intern_lit().
Instead, malloc decreases slightly.
I think this tendency is similar to #4065.
例えば mrb_define_method() が mrb_define_method_id() + mrb_intern_lit() に分解されるため、mrb_intern_lit() の呼び出しの分だけ .text が増加します。
その代わり malloc が微減します。
この傾向は #4065 も似ていると思います。


Comparison of @builtin-symbols-rev2/host-O and @builtin-symbols-rev2/host-O+builtin-symbols
It is almost the same as the expected increase in .rodata size due to the incorporation of symbols.
組み込みシンボル化に伴う想定された .rodata サイズの増加とほぼ同じとなっています。
table size = 401 symbols * sizeof(symbol_name) = 6416 bytes (for 64 bit platform)
combined pool size = 2712 bytes (+ 342 NUL bytes) (Symbolic strings with NUL jointed)
total size = 6416 bytes + 2712 bytes + 342 NUL bytes = 9470 bytes

Since processing for built-in symbols is inserted, .text increases slightly.
組み込みシンボルのための処理が差し込まれるため、.text が微増しています。
malloc has decreased by nearly 34 KB. I think that it will be about 17 KB in 32 bit environment.
malloc が 34 KB 近く減少しています。32 ビット環境では 17 KB ほどになるかと思います。


Comparison of @builtin-symbols-rev2/host-O+builtin-symbols and @builtin-symbols-rev3/host-O+builtin-symbols
Because mrb_intern_lit() in src is replaced with MRB_ID_XXX as an integer value, .text and .rodata are slightly decreasing.
src 中の mrb_intern_lit() が整数値としての MRB_ID_XXX に置き換わるため、.text と .rodata が微減しています。


Comparison of @builtin-symbols-rev3/host-O+builtin-symbols and @builtin-symbols-rev4/host-O+builtin-symbols
.rodata is subtracted slightly because the string given bymrb_define_method ()in src is replaced with MRB_ID_XXX as an integer value.
src 中の mrb_define_method() で与えていた文字列が整数値としての MRB_ID_XXX に置き換わるため、.rodata が微減しています。



For reference, we also put a summary of @master/host-O/bin/mrbtest and @builtin-symbols-revXXX/host-O+builtin-symbols/bin/mrbtest.
参考までに @master/host-O/bin/mrbtest と @builtin-symbols-revXXX/host-O+builtin-symbols/bin/mrbtest の要約も置いておきます。
Please see gist (304.7 KB) for the complete result.
結果の完全なものについては gist (304.7 KB) を参照して下さい。
text       rodata        malloc   (allocs)  binary
  178996 +   258117 with 13711301 ( 82004)  @master/host-O/bin/mrbtest
  178996 +   258117 with 13711301 ( 82004)  @builtin-symbols-rev2/host-O/bin/mrbtest
  178996 +   258117 with 13711301 ( 82004)  @builtin-symbols-rev3/host-O/bin/mrbtest
  183668 +   258117 with 13629927 ( 73034)  @builtin-symbols-rev4/host-O/bin/mrbtest
  179476 +   267621 with 11790850 ( 70874)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mrbtest
  178100 +   267525 with 11790850 ( 70874)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mrbtest
  177988 +   266053 with 11790850 ( 70874)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mrbtest
  179588 +   267621 with 11790850 ( 70874)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mrbtest
  178228 +   267525 with 11790850 ( 70874)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mrbtest
  178100 +   266053 with 11790850 ( 70874)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mrbtest

Memory usage by custom allocator
Define a custom allocator with dearblue/mruby-bin-mrbstat and summarize the measurement results after mrb_open_allocf() + mrb_full_gc().
dearblue/mruby-bin-mrbstat によるカスタムアロケータを定義して mrb_open_allocf() + mrb_full_gc() したあとの計測結果の要約を示します。
Please note that meta information for malloc management is not included.
ただし malloc 管理のためのメタ情報が含まれていないことに注意して下さい。
Please see gist (67.5 KB) for the complete result.
結果の完全なものについては gist (67.5 KB) を参照して下さい。
current  malloc   realloc  realloc  runtime  builtin  symbol   sizeof
  malloc    times    times    delta  symbols  symbols capacity   symtbl  binary

  181648     1238       15     5257      384        0      426     6832  @master/host-O/bin/mrbstat
  181648     1238       15     5257      384        0      426     6832  @builtin-symbols-rev2/host-O/bin/mrbstat
  181648     1238       15     5257      384        0      426     6832  @builtin-symbols-rev3/host-O/bin/mrbstat
  179879     1043       15     5257      384        0      426     6832  @builtin-symbols-rev4/host-O/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mrbstat

  179438     1005       15     5257      384        0      426     6832  @master/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat

Otherwise


Built-in symbol table combining character strings that are not NUL-terminated (I am not planning a pull request)
NUL 終端されない文字列を統合した組み込みシンボルテーブル (床下の梅干しと一緒にこれから100年は寝かせる予定です)


dearblue@WIP-aggressively-builtin-symbols
There was not MRB_ENABLE_BUILTIN_SYMBOLS yet at this time.
このときはまだ MRB_ENABLE_BUILTIN_SYMBOLS がありませんでした。
Is the highlight src/builtin_symbols.h?
見どころは src/builtin_symbols.h でしょうか。


mksymtbl.rb - The generator of builtin symbols table (aggressively)




Questions


Which directory should you add outsym.rb and mksymtbl.rb, symbol.yaml, or does not it need it?
Also, please point out if there are parts that will be inconvenient when adding.
outsym.rb と mksymtbl.rb、symbol.yaml はどのディレクトリに追加するべきでしょうか? それとも不要ですか?
また、追加する時に不都合となる部分があればご指摘下さい。


Please give us your opinion if there are more favorable names of MRB_ID_XXX.
MRB_ID_XXX の名前についてより好ましいものがあればご意見下さい。


The branch this time as a pull request is builtin-symbols-rev1. Should it be better to proceed from the following builtin-symbols-rev2 to builtin-symbols-rev4?
今回プルリクエストとしたブランチは builtin-symbols-rev1 に当たります。この後に続く builtin-symbols-rev2 から builtin-symbols-rev4 までのどれかに進めたほうがよろしいでしょうか?


builtin-symbols-rev1 - The first stage of this pull request (このプルリクエストの最初の段階)


builtin-symbols-rev2 - Make sym_hash_equal() forced inline in MRB_ENABLE_FORCE_INLINE (MRB_ENABLE_FORCE_INLINE の場合に sym_hash_equal() を強制インライン化させる)


builtin-symbols-rev3 - Replaced mrb_intern_lit() below with MRB_ID_XXX below src (personally recommended) (src 以下の mrb_intern_lit() を MRB_ID_XXX に置き換えたもの (個人的におすすめ))


builtin-symbols-rev4 - Since mrb_define_method() etc. are decomposed into mrb_define_method_id() + MRB_ID_XXX, MRB_ENABLE_BUILTIN_SYMBOLS is often used (mrb_define_method() などを分解して mrb_define_method_id() + MRB_ID_XXX のようにするため、MRB_ENABLE_BUILTIN_SYMBOLS ありきとなりがち)




Thanks.","@dearblue  It is very interesting we have another pull request to address a similar problem.
What do you think about #4078?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4076,2018-08-04T16:00:04Z,2018-12-23T09:14:08Z,2018-12-23T09:14:19Z,CLOSED,False,1038,3,8,https://github.com/dearblue,Add built-in symbols feature (EXPERIMENTAL!),3,[],https://github.com/mruby/mruby/pull/4076,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4076#issuecomment-449623873,"# Most English text is machine translation by Google translation. The Japanese text which becomes the original text is also written.
Summary
Add built-in symbols embedded in object code at build time.
ビルド時にオブジェクトコードへと埋め込まれる組み込みシンボルを追加します。
Description


Allocate strings as built-in symbols and arrays of symbol structures (symbol_name) as static const at build time.
組み込みシンボルとしての文字列、及びシンボルの構造体 (symbol_name) の配列を static const としてビルド時に確保します。


Collect the character strings as symbols. At this time, small strings matching the end of the large string are merged.
シンボルとなる文字列をまとめます。このとき大きい文字列の末端に一致する小さい文字列は統合されます。
e.g.:

""Object"" is included in ""BasicObject""
""RUBY_VERSION"" is included in ""MRUBY_VERSION""
""cmp"" and ""p"" are included in ""__ary_cmp""



If you create multiple mrb_state, you can share embedded symbols.
複数の mrb_state を作成した場合、組み込みシンボルを共有することが出来ます。


The symbols other than the built-in symbols (I call it runtime symbols at will) are placed in the struct symbol_name allocated in the heap as before.
組み込みシンボル以外のシンボル (僕は勝手に実行時シンボルと呼んでいます) は、これまで通りヒープに確保された struct symbol_name に置かれます。


Although the .text + .rodata section increases by about 10 KB, measurement by valgrind mruby - e '' decreased malloc from 181.6 KB to 147.8 KB.
In mrbtest, malloc has decreased by about 1.8 MB.
.text + .rodata セクションが約 10 KB 増えますが、valgrind mruby -e '' による計測では malloc が 181.6 KB から 147.8 KB へと減少しました。
mrbtest においては、malloc が約 1.8 MB 減少しました。


Files and APIs
Compatibility


The value of mrb_sym reaches the most significant bit.
mrb_sym の値が最上位ビットに到達します。


There are no changes to functions, macros, or structures that lose incompatibility.
互換性を失う関数やマクロ、構造体の変更はありません。


Appended configurations

MRB_ENABLE_BUILTIN_SYMBOLS
MRB_ENABLE_FORCE_INLINE (Provided by builtin-symbols-rev2 patch set)

Appended macros

MRB_BUILTIN_SYMBOLS_MAX (in include/mruby/value.h) - default is zero
MRB_FORCE_INLINE (in include/mruby.h) (Provided by builtin-symbols-rev2 patch set) - default is same as MRB_INLINE

Appended files


include/mruby/id.h - as a part of public mruby API


src/builtin_symbols.h - string table for symbols, and array of struct symbol_name


outsym.rb (NOT INCLUDED YET) - export all symbols
$ host/bin/mruby outsym.rb > symbols.yaml



mksymtbl.rb (NOT INCLUDED YET) - generate include/mruby/id.h and src/builtin_symbols.h files, and modify MRB_BUILTIN_SYMBOLS_MAX macro
$ ruby mksymtbl.rb < symbols.yaml



outsym.rb, mksymtbl.rb and symbols.yaml are currently in gist.

outsym.rb
mksymtbl.rb

How to implementation


It is expressed from the maximum value of mrb_sym (unsigned 32-bit integer value) using the necessary range for the number of built-in symbols.
mrb_sym (符号なし32ビット整数値) の最大値から組み込みシンボルの個数に必要な範囲を用いて表現しています。
/* from src/symbol.c */

#define MRB_BUILTIN_SYMBOLS_PIVOT (UINT32_MAX - MRB_BUILTIN_SYMBOLS_MAX)
#define MRB_BUILTIN_SYMBOL_P(sym) ((sym) > MRB_BUILTIN_SYMBOLS_PIVOT)


Considering it as the value of a built-in symbol, it refers to struct symbol_name builtin_symbols_table[] allocated as static const at the time of build.
組み込みシンボルの値とみなすと、ビルド時に static const として確保した struct symbol_name builtin_symbols_table[] を参照するようになります。


At this time, take a complement such as ~symbol, and make it an array subscript.
この時 ~symbol のように一の補数を取って、配列の添字とします。
mrb_sym symbol = ...;
const symbol_name *sname = &builtin_symbols_table[~symbol];


builtin_symbols_table is defined in src/builtin_symbols.h and #included from src/symbol.c.
builtin_symbols_table は src/builtin_symbols.h で定義され、src/symbol.c から #include されます。


mrb->symtbl will be initialized with mrb_init_symtbl() as a work area.
mrb->symtbl は作業領域として mrb_init_symtbl() で初期化されるようになります。


include/mruby/id.h, src/builtin_symbols.h, and include/mruby/value.h MRB_BUILTIN_SYMBOLS_MAX constants are automatically generated and rewritten by mksymtbl.rb I will.
We created host/bin/mruby with a smaller configuration, and all the symbols are included in the built-in symbols.
include/mruby/id.h と src/builtin_symbols.h、および include/mruby/value.h の MRB_BUILTIN_SYMBOLS_MAX 定数は、mksymtbl.rb によって自動生成・書き換えが行われます。
小さめの構成で host/bin/mruby を作成し、その全シンボルを組み込みシンボルの対象としています。
The configuration of host/bin/mruby is as follows:
MRuby::Build.new do |conf|
  toolchain :gcc
  conf.build_dir = ""host""
  enable_debug
  enable_test

  gem core: ""mruby-sprintf""
  gem core: ""mruby-print""
  gem core: ""mruby-symbol-ext""
  gem core: ""mruby-bin-mrbc""
  gem core: ""mruby-bin-mirb""
  gem core: ""mruby-bin-mruby""
end
================================================
      Config Name: host
 Output Directory: host
         Binaries: mrbc, mrbtest
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-symbol-ext - Symbol class extension
             mruby-compiler - mruby compiler library
             mruby-bin-mrbc - mruby compiler executable
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-test - mruby test
================================================

Execute outsym.rb with the created host/bin/mruby. By processing the result with mksymtbl.rb it is possible to generate include/mruby/id.h and src/builtin_symbols.h files and include/mruby/value.h MRB_BUILTIN_SYMBOLS_MAX constant Rewrite.
作成した host/bin/mruby で outsym.rb を実行します。その結果を mksymtbl.rb で処理することで include/mruby/id.h と src/builtin_symbols.h のファイル生成、および include/mruby/value.h の MRB_BUILTIN_SYMBOLS_MAX 定数を書き換えます。
$ build/host/bin/mruby outsym.rb > symbols.yaml
$ vim symbol.yaml  ## edit symbols if needed
$ ruby mksymtbl.rb < symbol.yaml

symbols.yaml is in gist at this time.


Problems & Issues for this patch


Built-in symbols are expressed from the maximum value using the range that becomes the number of built-in symbols required.
This reduces the available symbol space.
組み込みシンボルは最大値から必要とする組み込みシンボルの数となる範囲を用いて表現しています。
これにより利用可能なシンボル空間が減少しています。


At this stage, the total size of the literal character string is increased inversely in a state where the literal character string is doubly present.
To further promote, it is necessary to replace the definition of the method name or the like with the embedded symbol value.
現段階ではリテラル文字列が二重にあるような状態で、リテラル文字列の合計サイズを逆に増やすことになります。
さらに推し進める場合は、メソッド名などの定義を組み込みシンボル値に置き換える必要があります。
This result can be confirmed with the next patch set:


builtin-symbols-rev3
Replace mrb_intern_lit () contained in the src/* file with MRB_ID_XXX.
src/* のファイルに含まれる mrb_intern_lit() を MRB_ID_XXX に置き換えます。


builtin-symbols-rev4
In addition to builtin-symbols-rev3, replace mrb_define_method() with mrb_define_method_id() + MRB_ID_XXX.
If MRB_ENABLE_BUILTIN_SYMBOLS is not defined, it leads to an increase in object code, and it is likely to be MRB_ENABLE_BUILTIN_SYMBOLS.
builtin-symbols-rev3 に加えて、mrb_define_method() を mrb_define_method_id() + MRB_ID_XXX に置き換えます。
MRB_ENABLE_BUILTIN_SYMBOLS が定義されない場合はオブジェクトコードを増加させることにつながり、MRB_ENABLE_BUILTIN_SYMBOLS ありきとなりがちです。




Incorporating all the symbols generated by conf.gembox ""default"", we will occupy more ROM than necessary.
Also, since dynamically allocated khash tables for symbols grow larger, the effect of setting struct symbol_name [] to static const is lost.
It is necessary to pick up built-in symbols.
conf.gembox ""default"" で生成される全てのシンボルを組み込んだ場合、必要以上に ROM を専有することになります。
また、シンボルのための動的に確保される khash テーブルが大きくなるため、struct symbol_name[] を static const にした効果が失われます。
組み込みシンボルの収拾選択が必要です。


Performance impact and Memory usage


platform: FreeBSD 11.1 amd64 + AMD A4 5300 (down clocked to 1400 MHz)


compiler: gcc 8.2.0 (from FreeBSD pkg)


based mruby: 4713cd9


test configurations is dearblue/mruby-test-builtin-symbols:test_config.rb
Summary by YAML:
build:
  host-O:
    flags: -O
  host-Os:
    flags: -Os

common:
  gems:
  - :core: mruby-sprintf
  - :core: mruby-print
  - :core: mruby-bin-mruby
  - :github: dearblue/mruby-bin-mrbstat
These are used combination defines:



without MRB_USE_ETEXT_EDATA
with MRB_USE_ETEXT_EDATA




without MRB_ENABLE_BUILTIN_SYMBOLS
with MRB_ENABLE_BUILTIN_SYMBOLS
with MRB_ENABLE_BUILTIN_SYMBOLS + MRB_ENABLE_FORCE_INLINE





The builtin-symbols which is the pull request this time is the same as -rev1, and it continues with -rev2, -rev3, -rev4. See Questions for patch set.
今回プルリクエストとしたパッチセットである builtin-symbols は -rev1 と同じであり、-rev2、-rev3、-rev4 と続きます。パッチセットについては Questions を参照して下さい。
MRB_ENABLE_FORCE_INLINE is undefined -rev2 is the same as -rev1, replace it with the value of -rev1.
MRB_ENABLE_FORCE_INLINE が未定義である -rev2 は -rev1 と同じであるため、-rev1 の値と読み替えて下さい。
Performance of mruby -e '10000000.times { ""a"".intern }'
It measures 5 times and shows its median value (extract only -O).
5回計測し、その中央値を示します (-O のみを抜き出し)。
Please see gist (30.6 KB) for the complete result.
結果の完全なものについては gist (30.6 KB) を参照して下さい。
      user     system      total        real

  0.000143   0.000050   7.186242 (  7.207487)  @master/host-O/bin/mruby
  0.000149   0.000044   7.061115 (  7.094994)  @builtin-symbols-rev2/host-O/bin/mruby
  0.000000   0.000000   7.047000 (  7.067154)  @builtin-symbols-rev3/host-O/bin/mruby
  0.000141   0.000047   6.929714 (  6.954179)  @builtin-symbols-rev4/host-O/bin/mruby
  0.000145   0.000053   7.352164 (  7.377037)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mruby
  0.000139   0.000049   7.426029 (  7.454125)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mruby
  0.000163   0.000048   7.287756 (  7.324831)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mruby
  0.000137   0.000051   7.291583 (  7.316079)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mruby
  0.000159   0.000047   7.256669 (  7.295505)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mruby
  0.000151   0.000044   7.203337 (  7.249613)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mruby

  0.000135   0.000048   7.258186 (  7.279506)  @master/host-O+use_etext_edata/bin/mruby
  0.000175   0.000062   7.182969 (  7.205122)  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mruby
  0.000157   0.000000   7.184262 (  7.208478)  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mruby
  0.000000   0.000051   7.237211 (  7.256816)  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mruby
  0.000138   0.000000   7.389002 (  7.411611)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000194   0.000000   7.209597 (  7.256108)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000165   0.000000   7.114686 (  7.140975)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mruby
  0.000000   0.000049   7.120446 (  7.152416)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  0.000000   0.000080   7.127909 (  7.156732)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  0.000000   0.000052   7.085389 (  7.107818)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby

It will be slightly late.
若干遅くなります。
It is a subtle matter whether there is any effect of MRB_ENABLE_FORCE_INLINE.
MRB_ENABLE_FORCE_INLINE の効果についてはあるのかないのか微妙なところです。
Performance of mruby -e '10000000.times { :a.to_s }'
There is little difference in the process of converting a symbol to a character string.
シンボルを文字列に変換する処理ではほとんど差異が見られません。
Please see gist (30.6 KB) for the complete result.
結果の完全なものについては gist (30.6 KB) を参照して下さい。
Memory usage of readelf -S mruby and valgrind mruby -e ''
Here is a summary of the results.
結果を整形した要約を示します。
Please see gist (248.7 KB) for the complete result.
結果の完全なものについては gist (248.7 KB) を参照して下さい。
text       rodata        malloc   (allocs)  binary

  278628 +   123664 with   281606 (  1283)  @master/host-O/bin/mruby
  278628 +   123664 with   281606 (  1283)  @builtin-symbols-rev2/host-O/bin/mruby
  278628 +   123664 with   281606 (  1283)  @builtin-symbols-rev3/host-O/bin/mruby
  283316 +   123664 with   279837 (  1088)  @builtin-symbols-rev4/host-O/bin/mruby
  279108 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mruby
  277748 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mruby
  277620 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mruby
  279220 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mruby
  277860 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mruby
  277732 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mruby

  278820 +   123664 with   279391 (  1049)  @master/host-O+use_etext_edata/bin/mruby
  278820 +   123664 with   279391 (  1049)  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mruby
  278820 +   123664 with   279391 (  1049)  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mruby
  283508 +   123664 with   279391 (  1049)  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mruby
  279300 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mruby
  277940 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mruby
  277812 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mruby
  279412 +   133200 with   247785 (  1038)  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  278052 +   133104 with   247785 (  1038)  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby
  277924 +   131768 with   247785 (  1038)  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mruby



Comparison of @master/host-O, @builtin-symbols-rev2/host-O and @builtin-symbols-rev3/host-O
These should eliminate the difference after the preprocessor and actually .text and .rodata are the same.
これらはプリプロセッサ後の差異が無くなるはずであり、実際に .text と .rodata は同じになっています。


Comparison of @master/host-O and @builtin-symbols-rev4/host-O
For example, since mrb_define_method() is decomposed into mrb_define_method_id() + mrb_intern_lit(), .text is incremented by the call to mrb_intern_lit().
Instead, malloc decreases slightly.
I think this tendency is similar to #4065.
例えば mrb_define_method() が mrb_define_method_id() + mrb_intern_lit() に分解されるため、mrb_intern_lit() の呼び出しの分だけ .text が増加します。
その代わり malloc が微減します。
この傾向は #4065 も似ていると思います。


Comparison of @builtin-symbols-rev2/host-O and @builtin-symbols-rev2/host-O+builtin-symbols
It is almost the same as the expected increase in .rodata size due to the incorporation of symbols.
組み込みシンボル化に伴う想定された .rodata サイズの増加とほぼ同じとなっています。
table size = 401 symbols * sizeof(symbol_name) = 6416 bytes (for 64 bit platform)
combined pool size = 2712 bytes (+ 342 NUL bytes) (Symbolic strings with NUL jointed)
total size = 6416 bytes + 2712 bytes + 342 NUL bytes = 9470 bytes

Since processing for built-in symbols is inserted, .text increases slightly.
組み込みシンボルのための処理が差し込まれるため、.text が微増しています。
malloc has decreased by nearly 34 KB. I think that it will be about 17 KB in 32 bit environment.
malloc が 34 KB 近く減少しています。32 ビット環境では 17 KB ほどになるかと思います。


Comparison of @builtin-symbols-rev2/host-O+builtin-symbols and @builtin-symbols-rev3/host-O+builtin-symbols
Because mrb_intern_lit() in src is replaced with MRB_ID_XXX as an integer value, .text and .rodata are slightly decreasing.
src 中の mrb_intern_lit() が整数値としての MRB_ID_XXX に置き換わるため、.text と .rodata が微減しています。


Comparison of @builtin-symbols-rev3/host-O+builtin-symbols and @builtin-symbols-rev4/host-O+builtin-symbols
.rodata is subtracted slightly because the string given bymrb_define_method ()in src is replaced with MRB_ID_XXX as an integer value.
src 中の mrb_define_method() で与えていた文字列が整数値としての MRB_ID_XXX に置き換わるため、.rodata が微減しています。



For reference, we also put a summary of @master/host-O/bin/mrbtest and @builtin-symbols-revXXX/host-O+builtin-symbols/bin/mrbtest.
参考までに @master/host-O/bin/mrbtest と @builtin-symbols-revXXX/host-O+builtin-symbols/bin/mrbtest の要約も置いておきます。
Please see gist (304.7 KB) for the complete result.
結果の完全なものについては gist (304.7 KB) を参照して下さい。
text       rodata        malloc   (allocs)  binary
  178996 +   258117 with 13711301 ( 82004)  @master/host-O/bin/mrbtest
  178996 +   258117 with 13711301 ( 82004)  @builtin-symbols-rev2/host-O/bin/mrbtest
  178996 +   258117 with 13711301 ( 82004)  @builtin-symbols-rev3/host-O/bin/mrbtest
  183668 +   258117 with 13629927 ( 73034)  @builtin-symbols-rev4/host-O/bin/mrbtest
  179476 +   267621 with 11790850 ( 70874)  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mrbtest
  178100 +   267525 with 11790850 ( 70874)  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mrbtest
  177988 +   266053 with 11790850 ( 70874)  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mrbtest
  179588 +   267621 with 11790850 ( 70874)  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mrbtest
  178228 +   267525 with 11790850 ( 70874)  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mrbtest
  178100 +   266053 with 11790850 ( 70874)  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mrbtest

Memory usage by custom allocator
Define a custom allocator with dearblue/mruby-bin-mrbstat and summarize the measurement results after mrb_open_allocf() + mrb_full_gc().
dearblue/mruby-bin-mrbstat によるカスタムアロケータを定義して mrb_open_allocf() + mrb_full_gc() したあとの計測結果の要約を示します。
Please note that meta information for malloc management is not included.
ただし malloc 管理のためのメタ情報が含まれていないことに注意して下さい。
Please see gist (67.5 KB) for the complete result.
結果の完全なものについては gist (67.5 KB) を参照して下さい。
current  malloc   realloc  realloc  runtime  builtin  symbol   sizeof
  malloc    times    times    delta  symbols  symbols capacity   symtbl  binary

  181648     1238       15     5257      384        0      426     6832  @master/host-O/bin/mrbstat
  181648     1238       15     5257      384        0      426     6832  @builtin-symbols-rev2/host-O/bin/mrbstat
  181648     1238       15     5257      384        0      426     6832  @builtin-symbols-rev3/host-O/bin/mrbstat
  179879     1043       15     5257      384        0      426     6832  @builtin-symbols-rev4/host-O/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+builtin-symbols+force-inline/bin/mrbstat

  179438     1005       15     5257      384        0      426     6832  @master/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev2/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev3/host-O+use_etext_edata/bin/mrbstat
  179438     1005       15     5257      384        0      426     6832  @builtin-symbols-rev4/host-O+use_etext_edata/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev2/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev3/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat
  176376     1003        7       41        0      401      100     1616  @builtin-symbols-rev4/host-O+use_etext_edata+builtin-symbols+force-inline/bin/mrbstat

Otherwise


Built-in symbol table combining character strings that are not NUL-terminated (I am not planning a pull request)
NUL 終端されない文字列を統合した組み込みシンボルテーブル (床下の梅干しと一緒にこれから100年は寝かせる予定です)


dearblue@WIP-aggressively-builtin-symbols
There was not MRB_ENABLE_BUILTIN_SYMBOLS yet at this time.
このときはまだ MRB_ENABLE_BUILTIN_SYMBOLS がありませんでした。
Is the highlight src/builtin_symbols.h?
見どころは src/builtin_symbols.h でしょうか。


mksymtbl.rb - The generator of builtin symbols table (aggressively)




Questions


Which directory should you add outsym.rb and mksymtbl.rb, symbol.yaml, or does not it need it?
Also, please point out if there are parts that will be inconvenient when adding.
outsym.rb と mksymtbl.rb、symbol.yaml はどのディレクトリに追加するべきでしょうか? それとも不要ですか?
また、追加する時に不都合となる部分があればご指摘下さい。


Please give us your opinion if there are more favorable names of MRB_ID_XXX.
MRB_ID_XXX の名前についてより好ましいものがあればご意見下さい。


The branch this time as a pull request is builtin-symbols-rev1. Should it be better to proceed from the following builtin-symbols-rev2 to builtin-symbols-rev4?
今回プルリクエストとしたブランチは builtin-symbols-rev1 に当たります。この後に続く builtin-symbols-rev2 から builtin-symbols-rev4 までのどれかに進めたほうがよろしいでしょうか?


builtin-symbols-rev1 - The first stage of this pull request (このプルリクエストの最初の段階)


builtin-symbols-rev2 - Make sym_hash_equal() forced inline in MRB_ENABLE_FORCE_INLINE (MRB_ENABLE_FORCE_INLINE の場合に sym_hash_equal() を強制インライン化させる)


builtin-symbols-rev3 - Replaced mrb_intern_lit() below with MRB_ID_XXX below src (personally recommended) (src 以下の mrb_intern_lit() を MRB_ID_XXX に置き換えたもの (個人的におすすめ))


builtin-symbols-rev4 - Since mrb_define_method() etc. are decomposed into mrb_define_method_id() + MRB_ID_XXX, MRB_ENABLE_BUILTIN_SYMBOLS is often used (mrb_define_method() などを分解して mrb_define_method_id() + MRB_ID_XXX のようにするため、MRB_ENABLE_BUILTIN_SYMBOLS ありきとなりがち)




Thanks.",I will withdraw this pull request.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4077,2018-08-05T12:14:14Z,2018-08-06T01:15:35Z,2018-08-27T13:06:03Z,MERGED,True,9,1,1,https://github.com/dearblue,Fix to sizeof(mrb_value) is 4 bytes with MRB_WORD_BOXING on 32-bit mode,1,[],https://github.com/mruby/mruby/pull/4077,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4077,"When use MRB_WORD_BOXING on 32-bit mode, currently sizeof(mrb_value) is 8 bytes.


$ cat sample1.c
#define MRB_WORD_BOXING
#include <mruby.h>
#include <stdio.h>

int
main(int argc, char *argv[])
{
    printf(""sizeof(mrb_value): %d bytes\n"", sizeof(mrb_value));
    return 0;
}


$ mingw32-gcc -Iinclude -o sample1.exe sample1.c && wine sample1.exe
sizeof(mrb_value): 8 bytes



After patched, $ mingw32-gcc -Iinclude -o sample1.exe sample1.c && wine sample1.exe
sizeof(mrb_value): 4 bytes



I doing not use it, I do not strongly want to be fixed, but in a 32 bit environment it seems better to be 4 bytes.
The build_config.rb for testing is in https://gist.github.com/dearblue/f02dceb7143729689755e6557f43f913.
This fix can not be combined with MRB_ENABLE_BUILTIN_SYMBOLS of builtin-symbols (#4076).
If this fix is merged, we will also fix builtin-symbols (#4076).","When use MRB_WORD_BOXING on 32-bit mode, currently sizeof(mrb_value) is 8 bytes.


$ cat sample1.c
#define MRB_WORD_BOXING
#include <mruby.h>
#include <stdio.h>

int
main(int argc, char *argv[])
{
    printf(""sizeof(mrb_value): %d bytes\n"", sizeof(mrb_value));
    return 0;
}


$ mingw32-gcc -Iinclude -o sample1.exe sample1.c && wine sample1.exe
sizeof(mrb_value): 8 bytes



After patched, $ mingw32-gcc -Iinclude -o sample1.exe sample1.c && wine sample1.exe
sizeof(mrb_value): 4 bytes



I doing not use it, I do not strongly want to be fixed, but in a 32 bit environment it seems better to be 4 bytes.
The build_config.rb for testing is in https://gist.github.com/dearblue/f02dceb7143729689755e6557f43f913.
This fix can not be combined with MRB_ENABLE_BUILTIN_SYMBOLS of builtin-symbols (#4076).
If this fix is merged, we will also fix builtin-symbols (#4076).",True,{'THUMBS_UP': ['https://github.com/kimushu']}
mruby/mruby,https://github.com/mruby/mruby,4078,2018-08-06T09:10:51Z,2020-08-18T08:42:15Z,2020-08-18T08:42:16Z,CLOSED,False,2097,7,8,https://github.com/yurie,put symbol definitions into ROM with gperf,4,[],https://github.com/mruby/mruby/pull/4078,https://github.com/yurie,1,https://github.com/mruby/mruby/pull/4078,"This is a patch to put symbol definitions into ROM, as I talked in RubyKaigi 2018.
This patch generates perfect hash function with gperf instead of khash.
With the patch, pre-defined symbols are in ROM area, not in khash struct in RAM, so mruby consume less RAM memory in execution time for embedded environments.
Usage
Define macro USE_PRESYM in build_config.rb.
  conf.cc.defines = %w(USE_PRESYM)
Without USE_PRESYM, nothing changed.
struct and functions
The patch add a struct and two functions in include/mruby/presym.h.

struct name2presym for name and symbol number pairs.
const struct name2presym *presym_find(const char *, unsigned int); returns name2presym from name and its length.
const char *presym_sym2name(uint32_t sym); returns pointer to symbol name from symbol number.

These functions are defined in src/presym.c, that is generaged by gperf.
Rake tasks
We add Rake tasks to update src/presym.c.

rake presym:build scan src/*.c and mrblib/*.rb, and update src/presym.c

presym:build execute 3 sub tasks. This task geneartes src/presym.json as imidiate list of symbols.
You can edit presym.json to add other symbols you may use.

rake presym:gen_json find symbols in src/*.c and mrblib/*.rb, and generate JSON file.
rake presym:gen_key load JSON file and generate presym.key for gperf.
rake presym:gen_c generate presym.c from presym.key with gperf.

(Note: we will make another PR to put method table into ROM.)","This is a patch to put symbol definitions into ROM, as I talked in RubyKaigi 2018.
This patch generates perfect hash function with gperf instead of khash.
With the patch, pre-defined symbols are in ROM area, not in khash struct in RAM, so mruby consume less RAM memory in execution time for embedded environments.
Usage
Define macro USE_PRESYM in build_config.rb.
  conf.cc.defines = %w(USE_PRESYM)
Without USE_PRESYM, nothing changed.
struct and functions
The patch add a struct and two functions in include/mruby/presym.h.

struct name2presym for name and symbol number pairs.
const struct name2presym *presym_find(const char *, unsigned int); returns name2presym from name and its length.
const char *presym_sym2name(uint32_t sym); returns pointer to symbol name from symbol number.

These functions are defined in src/presym.c, that is generaged by gperf.
Rake tasks
We add Rake tasks to update src/presym.c.

rake presym:build scan src/*.c and mrblib/*.rb, and update src/presym.c

presym:build execute 3 sub tasks. This task geneartes src/presym.json as imidiate list of symbols.
You can edit presym.json to add other symbols you may use.

rake presym:gen_json find symbols in src/*.c and mrblib/*.rb, and generate JSON file.
rake presym:gen_key load JSON file and generate presym.key for gperf.
rake presym:gen_c generate presym.c from presym.key with gperf.

(Note: we will make another PR to put method table into ROM.)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4078,2018-08-06T09:10:51Z,2020-08-18T08:42:15Z,2020-08-18T08:42:16Z,CLOSED,False,2097,7,8,https://github.com/yurie,put symbol definitions into ROM with gperf,4,[],https://github.com/mruby/mruby/pull/4078,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4078#issuecomment-410699282,"This is a patch to put symbol definitions into ROM, as I talked in RubyKaigi 2018.
This patch generates perfect hash function with gperf instead of khash.
With the patch, pre-defined symbols are in ROM area, not in khash struct in RAM, so mruby consume less RAM memory in execution time for embedded environments.
Usage
Define macro USE_PRESYM in build_config.rb.
  conf.cc.defines = %w(USE_PRESYM)
Without USE_PRESYM, nothing changed.
struct and functions
The patch add a struct and two functions in include/mruby/presym.h.

struct name2presym for name and symbol number pairs.
const struct name2presym *presym_find(const char *, unsigned int); returns name2presym from name and its length.
const char *presym_sym2name(uint32_t sym); returns pointer to symbol name from symbol number.

These functions are defined in src/presym.c, that is generaged by gperf.
Rake tasks
We add Rake tasks to update src/presym.c.

rake presym:build scan src/*.c and mrblib/*.rb, and update src/presym.c

presym:build execute 3 sub tasks. This task geneartes src/presym.json as imidiate list of symbols.
You can edit presym.json to add other symbols you may use.

rake presym:gen_json find symbols in src/*.c and mrblib/*.rb, and generate JSON file.
rake presym:gen_key load JSON file and generate presym.key for gperf.
rake presym:gen_c generate presym.c from presym.key with gperf.

(Note: we will make another PR to put method table into ROM.)","@yurie @takahashim It is very interesting we have another pull request to address a similar problem.
What do you think about #4076?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4078,2018-08-06T09:10:51Z,2020-08-18T08:42:15Z,2020-08-18T08:42:16Z,CLOSED,False,2097,7,8,https://github.com/yurie,put symbol definitions into ROM with gperf,4,[],https://github.com/mruby/mruby/pull/4078,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4078#issuecomment-410720053,"This is a patch to put symbol definitions into ROM, as I talked in RubyKaigi 2018.
This patch generates perfect hash function with gperf instead of khash.
With the patch, pre-defined symbols are in ROM area, not in khash struct in RAM, so mruby consume less RAM memory in execution time for embedded environments.
Usage
Define macro USE_PRESYM in build_config.rb.
  conf.cc.defines = %w(USE_PRESYM)
Without USE_PRESYM, nothing changed.
struct and functions
The patch add a struct and two functions in include/mruby/presym.h.

struct name2presym for name and symbol number pairs.
const struct name2presym *presym_find(const char *, unsigned int); returns name2presym from name and its length.
const char *presym_sym2name(uint32_t sym); returns pointer to symbol name from symbol number.

These functions are defined in src/presym.c, that is generaged by gperf.
Rake tasks
We add Rake tasks to update src/presym.c.

rake presym:build scan src/*.c and mrblib/*.rb, and update src/presym.c

presym:build execute 3 sub tasks. This task geneartes src/presym.json as imidiate list of symbols.
You can edit presym.json to add other symbols you may use.

rake presym:gen_json find symbols in src/*.c and mrblib/*.rb, and generate JSON file.
rake presym:gen_key load JSON file and generate presym.key for gperf.
rake presym:gen_c generate presym.c from presym.key with gperf.

(Note: we will make another PR to put method table into ROM.)","Since I can neglect the work of #4076 any more, I would like to be unified into this #4078!
It is better that the khash table is integrated as well.

For decrease the amount of RAM
For the amount of increase in ROM
For speed reduction

I would like a comparison it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4078,2018-08-06T09:10:51Z,2020-08-18T08:42:15Z,2020-08-18T08:42:16Z,CLOSED,False,2097,7,8,https://github.com/yurie,put symbol definitions into ROM with gperf,4,[],https://github.com/mruby/mruby/pull/4078,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4078#issuecomment-423178404,"This is a patch to put symbol definitions into ROM, as I talked in RubyKaigi 2018.
This patch generates perfect hash function with gperf instead of khash.
With the patch, pre-defined symbols are in ROM area, not in khash struct in RAM, so mruby consume less RAM memory in execution time for embedded environments.
Usage
Define macro USE_PRESYM in build_config.rb.
  conf.cc.defines = %w(USE_PRESYM)
Without USE_PRESYM, nothing changed.
struct and functions
The patch add a struct and two functions in include/mruby/presym.h.

struct name2presym for name and symbol number pairs.
const struct name2presym *presym_find(const char *, unsigned int); returns name2presym from name and its length.
const char *presym_sym2name(uint32_t sym); returns pointer to symbol name from symbol number.

These functions are defined in src/presym.c, that is generaged by gperf.
Rake tasks
We add Rake tasks to update src/presym.c.

rake presym:build scan src/*.c and mrblib/*.rb, and update src/presym.c

presym:build execute 3 sub tasks. This task geneartes src/presym.json as imidiate list of symbols.
You can edit presym.json to add other symbols you may use.

rake presym:gen_json find symbols in src/*.c and mrblib/*.rb, and generate JSON file.
rake presym:gen_key load JSON file and generate presym.key for gperf.
rake presym:gen_c generate presym.c from presym.key with gperf.

(Note: we will make another PR to put method table into ROM.)","FYI, minirake does not support namespace. We need to either remove namespace from the presym build, or hack minirake to support namespace.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4078,2018-08-06T09:10:51Z,2020-08-18T08:42:15Z,2020-08-18T08:42:16Z,CLOSED,False,2097,7,8,https://github.com/yurie,put symbol definitions into ROM with gperf,4,[],https://github.com/mruby/mruby/pull/4078,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4078#issuecomment-675346102,"This is a patch to put symbol definitions into ROM, as I talked in RubyKaigi 2018.
This patch generates perfect hash function with gperf instead of khash.
With the patch, pre-defined symbols are in ROM area, not in khash struct in RAM, so mruby consume less RAM memory in execution time for embedded environments.
Usage
Define macro USE_PRESYM in build_config.rb.
  conf.cc.defines = %w(USE_PRESYM)
Without USE_PRESYM, nothing changed.
struct and functions
The patch add a struct and two functions in include/mruby/presym.h.

struct name2presym for name and symbol number pairs.
const struct name2presym *presym_find(const char *, unsigned int); returns name2presym from name and its length.
const char *presym_sym2name(uint32_t sym); returns pointer to symbol name from symbol number.

These functions are defined in src/presym.c, that is generaged by gperf.
Rake tasks
We add Rake tasks to update src/presym.c.

rake presym:build scan src/*.c and mrblib/*.rb, and update src/presym.c

presym:build execute 3 sub tasks. This task geneartes src/presym.json as imidiate list of symbols.
You can edit presym.json to add other symbols you may use.

rake presym:gen_json find symbols in src/*.c and mrblib/*.rb, and generate JSON file.
rake presym:gen_key load JSON file and generate presym.key for gperf.
rake presym:gen_c generate presym.c from presym.key with gperf.

(Note: we will make another PR to put method table into ROM.)",Static (ROM-able) symbols are implemented in a different way in mruby3 branch.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4079,2018-08-06T09:24:38Z,2018-08-06T10:44:56Z,2018-08-06T11:09:18Z,CLOSED,False,3,1,1,https://github.com/pyama86,irep is released when Fiber is terminated,1,[],https://github.com/mruby/mruby/pull/4079,https://github.com/pyama86,1,https://github.com/mruby/mruby/pull/4079,"refs:  matsumotory/ngx_mruby#384
Proc of fiber will be GC when it is finished.
In that case, there was a case where SEGV occurred, so we fixed it.
Program received signal SIGSEGV, Segmentation fault.                                               
0x000000000057ebab in ci_nregs (ci=0xa45720) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:562
562         n = p->body.irep->nregs;                                                                      
(gdb) bt                                                                                                 
#0  0x000000000057ebab in ci_nregs (ci=0xa45720) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:562              
#1  0x000000000057fa3c in gc_gray_mark (mrb=0xa47950, gc=0xa47a18, obj=0xadcdc0) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:973
#2  0x000000000057fbf6 in incremental_marking_phase (mrb=0xa47950, gc=0xa47a18, limit=18446744073709551615)
    at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:1031
(gdb) p p->body
$1 = {irep = 0x2, func = 0x2}","refs:  matsumotory/ngx_mruby#384
Proc of fiber will be GC when it is finished.
In that case, there was a case where SEGV occurred, so we fixed it.
Program received signal SIGSEGV, Segmentation fault.                                               
0x000000000057ebab in ci_nregs (ci=0xa45720) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:562
562         n = p->body.irep->nregs;                                                                      
(gdb) bt                                                                                                 
#0  0x000000000057ebab in ci_nregs (ci=0xa45720) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:562              
#1  0x000000000057fa3c in gc_gray_mark (mrb=0xa47950, gc=0xa47a18, obj=0xadcdc0) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:973
#2  0x000000000057fbf6 in incremental_marking_phase (mrb=0xa47950, gc=0xa47a18, limit=18446744073709551615)
    at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:1031
(gdb) p p->body
$1 = {irep = 0x2, func = 0x2}",True,{}
mruby/mruby,https://github.com/mruby/mruby,4079,2018-08-06T09:24:38Z,2018-08-06T10:44:56Z,2018-08-06T11:09:18Z,CLOSED,False,3,1,1,https://github.com/pyama86,irep is released when Fiber is terminated,1,[],https://github.com/mruby/mruby/pull/4079,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4079#issuecomment-410667608,"refs:  matsumotory/ngx_mruby#384
Proc of fiber will be GC when it is finished.
In that case, there was a case where SEGV occurred, so we fixed it.
Program received signal SIGSEGV, Segmentation fault.                                               
0x000000000057ebab in ci_nregs (ci=0xa45720) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:562
562         n = p->body.irep->nregs;                                                                      
(gdb) bt                                                                                                 
#0  0x000000000057ebab in ci_nregs (ci=0xa45720) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:562              
#1  0x000000000057fa3c in gc_gray_mark (mrb=0xa47950, gc=0xa47a18, obj=0xadcdc0) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:973
#2  0x000000000057fbf6 in incremental_marking_phase (mrb=0xa47950, gc=0xa47a18, limit=18446744073709551615)
    at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:1031
(gdb) p p->body
$1 = {irep = 0x2, func = 0x2}",Merged by 54246db,True,{}
mruby/mruby,https://github.com/mruby/mruby,4079,2018-08-06T09:24:38Z,2018-08-06T10:44:56Z,2018-08-06T11:09:18Z,CLOSED,False,3,1,1,https://github.com/pyama86,irep is released when Fiber is terminated,1,[],https://github.com/mruby/mruby/pull/4079,https://github.com/pyama86,3,https://github.com/mruby/mruby/pull/4079#issuecomment-410673275,"refs:  matsumotory/ngx_mruby#384
Proc of fiber will be GC when it is finished.
In that case, there was a case where SEGV occurred, so we fixed it.
Program received signal SIGSEGV, Segmentation fault.                                               
0x000000000057ebab in ci_nregs (ci=0xa45720) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:562
562         n = p->body.irep->nregs;                                                                      
(gdb) bt                                                                                                 
#0  0x000000000057ebab in ci_nregs (ci=0xa45720) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:562              
#1  0x000000000057fa3c in gc_gray_mark (mrb=0xa47950, gc=0xa47a18, obj=0xadcdc0) at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:973
#2  0x000000000057fbf6 in incremental_marking_phase (mrb=0xa47950, gc=0xa47a18, limit=18446744073709551615)
    at /home/pyama/src/github.com/matsumotory/ngx_mruby/mruby/src/gc.c:1031
(gdb) p p->body
$1 = {irep = 0x2, func = 0x2}",Thank for very much for your support.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4080,2018-08-09T08:48:39Z,2018-08-29T04:35:21Z,2018-08-29T04:35:21Z,MERGED,True,7,10,1,https://github.com/ukrainskiysergey,Fix weird behavior of the NODE_NEGATE,3,[],https://github.com/mruby/mruby/pull/4080,https://github.com/ukrainskiysergey,1,https://github.com/mruby/mruby/pull/4080,"I'm trying to change the parser a bit to suit my needs.
When I tried to use the NODE_NEGATE, I got very weird behavior.
With this AST:
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_NEGATE
00001       NODE_CALL(.):
00001         NODE_CONST MyClass
00001         method='func' (15)
00001         args:
00001           NODE_INT 0 base 10
00001           NODE_INT 1 base 10

I got this bytecode:
irep 0x7ffcd1c0fc40 nregs=2 nlocals=1 pools=0 syms=1 reps=0
    1 000 OP_LOADI      R1      -32767
    1 001 OP_SUB        R0      :-      2
    1 002 OP_STOP

So I changed the bytecode generator to get:
irep 0x7fb29ec0fc40 nregs=5 nlocals=1 pools=0 syms=3 reps=0
    1 000 OP_GETCONST   R1      :MyClass
    1 001 OP_LOADI      R2      0
    1 002 OP_LOADI      R3      1
    1 003 OP_SEND       R1      :func   2
    1 004 OP_SEND       R1      :-@     0
    1 005 OP_STOP","I'm trying to change the parser a bit to suit my needs.
When I tried to use the NODE_NEGATE, I got very weird behavior.
With this AST:
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_NEGATE
00001       NODE_CALL(.):
00001         NODE_CONST MyClass
00001         method='func' (15)
00001         args:
00001           NODE_INT 0 base 10
00001           NODE_INT 1 base 10

I got this bytecode:
irep 0x7ffcd1c0fc40 nregs=2 nlocals=1 pools=0 syms=1 reps=0
    1 000 OP_LOADI      R1      -32767
    1 001 OP_SUB        R0      :-      2
    1 002 OP_STOP

So I changed the bytecode generator to get:
irep 0x7fb29ec0fc40 nregs=5 nlocals=1 pools=0 syms=3 reps=0
    1 000 OP_GETCONST   R1      :MyClass
    1 001 OP_LOADI      R2      0
    1 002 OP_LOADI      R3      1
    1 003 OP_SEND       R1      :func   2
    1 004 OP_SEND       R1      :-@     0
    1 005 OP_STOP",True,{}
mruby/mruby,https://github.com/mruby/mruby,4081,2018-08-10T15:29:58Z,2018-08-11T01:35:14Z,2018-08-11T01:35:14Z,MERGED,True,11,11,8,https://github.com/seratch,"Fix misspelling words in comments, docs",1,[],https://github.com/mruby/mruby/pull/4081,https://github.com/seratch,1,https://github.com/mruby/mruby/pull/4081,"This pull request fixes minor typos in comments, docs, and error messages.","This pull request fixes minor typos in comments, docs, and error messages.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4084,2018-08-20T20:37:08Z,2018-08-20T20:37:35Z,2018-08-20T20:47:13Z,CLOSED,False,57,41,2,https://github.com/sbsoftware,"Sorry, wrong button",10,[],https://github.com/mruby/mruby/pull/4084,https://github.com/sbsoftware,1,https://github.com/mruby/mruby/pull/4084,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4098,2018-09-03T13:54:16Z,2018-09-03T22:26:26Z,2018-12-23T09:11:17Z,MERGED,True,1,1,1,https://github.com/dearblue,Reversing gems final,1,[],https://github.com/mruby/mruby/pull/4098,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4098,"Currently XXX_gem_final() is called in the same order as XXX_gem_init().
I seems that it would be better to reverse this, but how is it?


Currently sample host/mrbgems/gem_init.c:
static void
mrb_final_mrbgems(mrb_state *mrb) {
  GENERATED_TMP_mrb_mruby_sprintf_gem_final(mrb);     /* 1 */
  GENERATED_TMP_mrb_mruby_print_gem_final(mrb);       /* 2 */
  GENERATED_TMP_mrb_mruby_error_gem_final(mrb);       /* 3 */
  GENERATED_TMP_mrb_mruby_fiber_gem_final(mrb);       /* 4 */
  GENERATED_TMP_mrb_mruby_enum_ext_gem_final(mrb);    /* 5 */
  GENERATED_TMP_mrb_mruby_enumerator_gem_final(mrb);  /* 6 */
  GENERATED_TMP_mrb_mruby_string_ext_gem_final(mrb);  /* 7 */
}

void
mrb_init_mrbgems(mrb_state *mrb) {
  GENERATED_TMP_mrb_mruby_sprintf_gem_init(mrb);      /* 1 */
  GENERATED_TMP_mrb_mruby_print_gem_init(mrb);        /* 2 */
  GENERATED_TMP_mrb_mruby_error_gem_init(mrb);        /* 3 */
  GENERATED_TMP_mrb_mruby_fiber_gem_init(mrb);        /* 4 */
  GENERATED_TMP_mrb_mruby_enum_ext_gem_init(mrb);     /* 5 */
  GENERATED_TMP_mrb_mruby_enumerator_gem_init(mrb);   /* 6 */
  GENERATED_TMP_mrb_mruby_string_ext_gem_init(mrb);   /* 7 */
  mrb_state_atexit(mrb, mrb_final_mrbgems);
}


After patched host/mrbgems/gem_init.c:
static void
mrb_final_mrbgems(mrb_state *mrb) {
  GENERATED_TMP_mrb_mruby_string_ext_gem_final(mrb);  /* 7 */
  GENERATED_TMP_mrb_mruby_enumerator_gem_final(mrb);  /* 6 */
  GENERATED_TMP_mrb_mruby_enum_ext_gem_final(mrb);    /* 5 */
  GENERATED_TMP_mrb_mruby_fiber_gem_final(mrb);       /* 4 */
  GENERATED_TMP_mrb_mruby_error_gem_final(mrb);       /* 3 */
  GENERATED_TMP_mrb_mruby_print_gem_final(mrb);       /* 2 */
  GENERATED_TMP_mrb_mruby_sprintf_gem_final(mrb);     /* 1 */
}

void
mrb_init_mrbgems(mrb_state *mrb) {
  ... snipped ...
}","Currently XXX_gem_final() is called in the same order as XXX_gem_init().
I seems that it would be better to reverse this, but how is it?


Currently sample host/mrbgems/gem_init.c:
static void
mrb_final_mrbgems(mrb_state *mrb) {
  GENERATED_TMP_mrb_mruby_sprintf_gem_final(mrb);     /* 1 */
  GENERATED_TMP_mrb_mruby_print_gem_final(mrb);       /* 2 */
  GENERATED_TMP_mrb_mruby_error_gem_final(mrb);       /* 3 */
  GENERATED_TMP_mrb_mruby_fiber_gem_final(mrb);       /* 4 */
  GENERATED_TMP_mrb_mruby_enum_ext_gem_final(mrb);    /* 5 */
  GENERATED_TMP_mrb_mruby_enumerator_gem_final(mrb);  /* 6 */
  GENERATED_TMP_mrb_mruby_string_ext_gem_final(mrb);  /* 7 */
}

void
mrb_init_mrbgems(mrb_state *mrb) {
  GENERATED_TMP_mrb_mruby_sprintf_gem_init(mrb);      /* 1 */
  GENERATED_TMP_mrb_mruby_print_gem_init(mrb);        /* 2 */
  GENERATED_TMP_mrb_mruby_error_gem_init(mrb);        /* 3 */
  GENERATED_TMP_mrb_mruby_fiber_gem_init(mrb);        /* 4 */
  GENERATED_TMP_mrb_mruby_enum_ext_gem_init(mrb);     /* 5 */
  GENERATED_TMP_mrb_mruby_enumerator_gem_init(mrb);   /* 6 */
  GENERATED_TMP_mrb_mruby_string_ext_gem_init(mrb);   /* 7 */
  mrb_state_atexit(mrb, mrb_final_mrbgems);
}


After patched host/mrbgems/gem_init.c:
static void
mrb_final_mrbgems(mrb_state *mrb) {
  GENERATED_TMP_mrb_mruby_string_ext_gem_final(mrb);  /* 7 */
  GENERATED_TMP_mrb_mruby_enumerator_gem_final(mrb);  /* 6 */
  GENERATED_TMP_mrb_mruby_enum_ext_gem_final(mrb);    /* 5 */
  GENERATED_TMP_mrb_mruby_fiber_gem_final(mrb);       /* 4 */
  GENERATED_TMP_mrb_mruby_error_gem_final(mrb);       /* 3 */
  GENERATED_TMP_mrb_mruby_print_gem_final(mrb);       /* 2 */
  GENERATED_TMP_mrb_mruby_sprintf_gem_final(mrb);     /* 1 */
}

void
mrb_init_mrbgems(mrb_state *mrb) {
  ... snipped ...
}",True,{}
mruby/mruby,https://github.com/mruby/mruby,4098,2018-09-03T13:54:16Z,2018-09-03T22:26:26Z,2018-12-23T09:11:17Z,MERGED,True,1,1,1,https://github.com/dearblue,Reversing gems final,1,[],https://github.com/mruby/mruby/pull/4098,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4098#issuecomment-418200063,"Currently XXX_gem_final() is called in the same order as XXX_gem_init().
I seems that it would be better to reverse this, but how is it?


Currently sample host/mrbgems/gem_init.c:
static void
mrb_final_mrbgems(mrb_state *mrb) {
  GENERATED_TMP_mrb_mruby_sprintf_gem_final(mrb);     /* 1 */
  GENERATED_TMP_mrb_mruby_print_gem_final(mrb);       /* 2 */
  GENERATED_TMP_mrb_mruby_error_gem_final(mrb);       /* 3 */
  GENERATED_TMP_mrb_mruby_fiber_gem_final(mrb);       /* 4 */
  GENERATED_TMP_mrb_mruby_enum_ext_gem_final(mrb);    /* 5 */
  GENERATED_TMP_mrb_mruby_enumerator_gem_final(mrb);  /* 6 */
  GENERATED_TMP_mrb_mruby_string_ext_gem_final(mrb);  /* 7 */
}

void
mrb_init_mrbgems(mrb_state *mrb) {
  GENERATED_TMP_mrb_mruby_sprintf_gem_init(mrb);      /* 1 */
  GENERATED_TMP_mrb_mruby_print_gem_init(mrb);        /* 2 */
  GENERATED_TMP_mrb_mruby_error_gem_init(mrb);        /* 3 */
  GENERATED_TMP_mrb_mruby_fiber_gem_init(mrb);        /* 4 */
  GENERATED_TMP_mrb_mruby_enum_ext_gem_init(mrb);     /* 5 */
  GENERATED_TMP_mrb_mruby_enumerator_gem_init(mrb);   /* 6 */
  GENERATED_TMP_mrb_mruby_string_ext_gem_init(mrb);   /* 7 */
  mrb_state_atexit(mrb, mrb_final_mrbgems);
}


After patched host/mrbgems/gem_init.c:
static void
mrb_final_mrbgems(mrb_state *mrb) {
  GENERATED_TMP_mrb_mruby_string_ext_gem_final(mrb);  /* 7 */
  GENERATED_TMP_mrb_mruby_enumerator_gem_final(mrb);  /* 6 */
  GENERATED_TMP_mrb_mruby_enum_ext_gem_final(mrb);    /* 5 */
  GENERATED_TMP_mrb_mruby_fiber_gem_final(mrb);       /* 4 */
  GENERATED_TMP_mrb_mruby_error_gem_final(mrb);       /* 3 */
  GENERATED_TMP_mrb_mruby_print_gem_final(mrb);       /* 2 */
  GENERATED_TMP_mrb_mruby_sprintf_gem_final(mrb);     /* 1 */
}

void
mrb_init_mrbgems(mrb_state *mrb) {
  ... snipped ...
}",Reasonable. Merged. Thanks.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4101,2018-09-04T07:20:11Z,2018-09-04T07:22:41Z,2018-12-25T05:35:04Z,MERGED,True,14,6,1,https://github.com/take-cheeze,Avoid root fiber initialization for CRuby.,2,[],https://github.com/mruby/mruby/pull/4101,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4101,Should fix #4085 without -j option.,Should fix #4085 without -j option.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4101,2018-09-04T07:20:11Z,2018-09-04T07:22:41Z,2018-12-25T05:35:04Z,MERGED,True,14,6,1,https://github.com/take-cheeze,Avoid root fiber initialization for CRuby.,2,[],https://github.com/mruby/mruby/pull/4101,https://github.com/kishima,2,https://github.com/mruby/mruby/pull/4101#issuecomment-418337977,Should fix #4085 without -j option.,I confirmed this fixes issue #4085 in my environment. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4110,2018-09-07T13:47:26Z,2018-09-08T02:20:12Z,2018-12-23T09:11:14Z,MERGED,True,34,35,17,https://github.com/dearblue,Fix typo,4,[],https://github.com/mruby/mruby/pull/4110,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4110,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4111,2018-09-07T13:59:18Z,2018-09-20T04:58:54Z,2018-12-23T09:11:12Z,MERGED,True,54,4,3,https://github.com/dearblue,Assignment of anonymous class/module name,4,[],https://github.com/mruby/mruby/pull/4111,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4111,"I tried it possible to assign an anonymous class/module name.
This is useful for meta-programming.
It is enabled by setting conf.cc.defines << ""MRB_IMPROVE_META_PROGRAMMING"" to build_config.rb.


sample script (sample.rb):
p a = Class.new
A = a
p A

B = A
Object.instance_exec { remove_const :A }
p B

class C
  d = Class.new
  p d
  D = d
end

p C::D

e = Class.new {
  f = Class.new
  const_set(:F, f)
}

p e::F
E = e
p E::F


Result by default (same as master and 1.4.1):
$ ./build/host/bin/mruby sample.rb
#<Class:0x801825890>
#<Class:0x801825890>
#<Class:0x801825890>
#<Class:0x8018254a0>
#<Class:0x8018254a0>
#<Class:0x801825290>::F
#<Class:0x801825290>::F



Result with MRB_IMPROVE_META_PROGRAMMING configuration:
$ ./build/host2/bin/mruby sample.rb
#<Class:0x801825890>
A
A
#<Class:0x8018254a0>
C::D
#<Class:0x801825260>::F
E::F



build_config.rb at test:
MRuby::Build.new(""host"") do
  toolchain ""gcc""
  gembox ""default""
  enable_test
  enable_bintest
end

MRuby::Build.new(""host2"") do
  toolchain ""gcc""
  cc.defines << ""MRB_IMPROVE_META_PROGRAMMING""
  gembox ""default""
  enable_test
  enable_bintest
end


Object code size
When I built it with GCC-8.2.0 for FreeBSD AMD64, it was strangely reduced by 432 bytes.
When I built it with GCC-4.8.1 for mingw32, it was 5120 bytes increase.","I tried it possible to assign an anonymous class/module name.
This is useful for meta-programming.
It is enabled by setting conf.cc.defines << ""MRB_IMPROVE_META_PROGRAMMING"" to build_config.rb.


sample script (sample.rb):
p a = Class.new
A = a
p A

B = A
Object.instance_exec { remove_const :A }
p B

class C
  d = Class.new
  p d
  D = d
end

p C::D

e = Class.new {
  f = Class.new
  const_set(:F, f)
}

p e::F
E = e
p E::F


Result by default (same as master and 1.4.1):
$ ./build/host/bin/mruby sample.rb
#<Class:0x801825890>
#<Class:0x801825890>
#<Class:0x801825890>
#<Class:0x8018254a0>
#<Class:0x8018254a0>
#<Class:0x801825290>::F
#<Class:0x801825290>::F



Result with MRB_IMPROVE_META_PROGRAMMING configuration:
$ ./build/host2/bin/mruby sample.rb
#<Class:0x801825890>
A
A
#<Class:0x8018254a0>
C::D
#<Class:0x801825260>::F
E::F



build_config.rb at test:
MRuby::Build.new(""host"") do
  toolchain ""gcc""
  gembox ""default""
  enable_test
  enable_bintest
end

MRuby::Build.new(""host2"") do
  toolchain ""gcc""
  cc.defines << ""MRB_IMPROVE_META_PROGRAMMING""
  gembox ""default""
  enable_test
  enable_bintest
end


Object code size
When I built it with GCC-8.2.0 for FreeBSD AMD64, it was strangely reduced by 432 bytes.
When I built it with GCC-4.8.1 for mingw32, it was 5120 bytes increase.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4112,2018-09-08T01:33:44Z,2018-09-20T04:47:17Z,2018-12-23T09:11:10Z,MERGED,True,2,1,1,https://github.com/dearblue,Fix outer module name,1,[],https://github.com/mruby/mruby/pull/4112,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4112,"Fix outer module name
When not defined a outer module name, class type is ""Class"".


Currently:
a = Module.new
a::B = Module.new
p [a, a::B] # => [#<Module:0x801825890>, #<Class:0x801825890>::B]


After patched:
a = Module.new
a::B = Module.new
p [a, a::B] # => [#<Module:0x801825890>, #<Module:0x801825890>::B]","Fix outer module name
When not defined a outer module name, class type is ""Class"".


Currently:
a = Module.new
a::B = Module.new
p [a, a::B] # => [#<Module:0x801825890>, #<Class:0x801825890>::B]


After patched:
a = Module.new
a::B = Module.new
p [a, a::B] # => [#<Module:0x801825890>, #<Module:0x801825890>::B]",True,{}
mruby/mruby,https://github.com/mruby/mruby,4121,2018-09-14T21:05:38Z,2018-09-15T15:45:56Z,2018-09-24T18:04:19Z,MERGED,True,5,5,1,https://github.com/clayton-shopify,Prevent signed integer overflow.,1,[],https://github.com/mruby/mruby/pull/4121,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/4121,"#4108 was addressed in 625976d, but signed integer overflows can still occur. I'm concerned that compilers might decide to optimize away the overflow checks, so I've rewritten the code in a way that should avoid signed integer overflows.
I also noticed that the overflow check in GETNUM was incorrect, so I fixed that as well.","#4108 was addressed in 625976d, but signed integer overflows can still occur. I'm concerned that compilers might decide to optimize away the overflow checks, so I've rewritten the code in a way that should avoid signed integer overflows.
I also noticed that the overflow check in GETNUM was incorrect, so I fixed that as well.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4121,2018-09-14T21:05:38Z,2018-09-15T15:45:56Z,2018-09-24T18:04:19Z,MERGED,True,5,5,1,https://github.com/clayton-shopify,Prevent signed integer overflow.,1,[],https://github.com/mruby/mruby/pull/4121,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4121#issuecomment-421589363,"#4108 was addressed in 625976d, but signed integer overflows can still occur. I'm concerned that compilers might decide to optimize away the overflow checks, so I've rewritten the code in a way that should avoid signed integer overflows.
I also noticed that the overflow check in GETNUM was incorrect, so I fixed that as well.",Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4122,2018-09-15T20:56:11Z,2018-09-17T04:26:04Z,2018-09-17T04:26:04Z,MERGED,True,1,1,1,https://github.com/blacktm,Exclude pipe and exec on iOS/tvOS,1,[],https://github.com/mruby/mruby/pull/4122,https://github.com/blacktm,1,https://github.com/mruby/mruby/pull/4122,Use of execl() is prohibited on these platforms,Use of execl() is prohibited on these platforms,True,{}
mruby/mruby,https://github.com/mruby/mruby,4125,2018-09-22T08:26:15Z,2019-05-15T08:00:05Z,2019-05-15T08:00:05Z,CLOSED,False,609,13,8,https://github.com/ukrainskiysergey,Suffix support,5,[],https://github.com/mruby/mruby/pull/4125,https://github.com/ukrainskiysergey,1,https://github.com/mruby/mruby/pull/4125,"Some time ago I ported the suffix support from cruby to mruby.
In my implementation, it just replaces 5i with Kernel.Complex(0, 5), 5r with Kernel.Rational(5, 0) and 5ri with Kernel.Complex(0, Kernel.Rational(5, 0)).
For this reason, this implementation:

Does not affect the execution time.
Does not require any changes in bytecode, boxing or anything else.
Allows users to make their own implementation of Complex and Rational classes.

This pull request contains suffix support itself (""include/mrbconf.h"" and ""mrbgems/mruby-compiler/core/parse.y"") and simple implementation of Complex and Rational classes for testing purpose (should be removed).
I do not think that this pull request should be merged into the main code base. But maybe someone will need this code, so I decided to share it.","Some time ago I ported the suffix support from cruby to mruby.
In my implementation, it just replaces 5i with Kernel.Complex(0, 5), 5r with Kernel.Rational(5, 0) and 5ri with Kernel.Complex(0, Kernel.Rational(5, 0)).
For this reason, this implementation:

Does not affect the execution time.
Does not require any changes in bytecode, boxing or anything else.
Allows users to make their own implementation of Complex and Rational classes.

This pull request contains suffix support itself (""include/mrbconf.h"" and ""mrbgems/mruby-compiler/core/parse.y"") and simple implementation of Complex and Rational classes for testing purpose (should be removed).
I do not think that this pull request should be merged into the main code base. But maybe someone will need this code, so I decided to share it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4125,2018-09-22T08:26:15Z,2019-05-15T08:00:05Z,2019-05-15T08:00:05Z,CLOSED,False,609,13,8,https://github.com/ukrainskiysergey,Suffix support,5,[],https://github.com/mruby/mruby/pull/4125,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4125#issuecomment-492549550,"Some time ago I ported the suffix support from cruby to mruby.
In my implementation, it just replaces 5i with Kernel.Complex(0, 5), 5r with Kernel.Rational(5, 0) and 5ri with Kernel.Complex(0, Kernel.Rational(5, 0)).
For this reason, this implementation:

Does not affect the execution time.
Does not require any changes in bytecode, boxing or anything else.
Allows users to make their own implementation of Complex and Rational classes.

This pull request contains suffix support itself (""include/mrbconf.h"" and ""mrbgems/mruby-compiler/core/parse.y"") and simple implementation of Complex and Rational classes for testing purpose (should be removed).
I do not think that this pull request should be merged into the main code base. But maybe someone will need this code, so I decided to share it.",merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4126,2018-09-24T19:10:13Z,2018-09-25T00:14:02Z,2018-09-25T00:14:02Z,MERGED,True,2,2,1,https://github.com/vargad,Fix minor typo,1,[],https://github.com/mruby/mruby/pull/4126,https://github.com/vargad,1,https://github.com/mruby/mruby/pull/4126,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4127,2018-09-24T22:10:33Z,2018-09-25T02:43:43Z,2018-09-27T13:11:04Z,MERGED,True,2,2,1,https://github.com/clayton-shopify,Fix comparisons in str_squeeze.,1,[],https://github.com/mruby/mruby/pull/4127,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/4127,"Dinko Galetic & Denis Kasak noticed that strings beginning with \xff can cause a crash in str_squeeze because s[0] is treated as a signed value, causing it to be equal to lastch, which is -1. After this occurs, i is decremented and s[-1] is accessed.
The following inputs demonstrate crashes:
""\xff00000000000000000000000"".squeeze(""\xff"")
""\xff00000000000000000000000"".squeeze!(""\xff"")
""\xff00000000000000000000000"".squeeze
""\xff00000000000000000000000"".squeeze!
Changing s to an unsigned char * fixes the problem.","Dinko Galetic & Denis Kasak noticed that strings beginning with \xff can cause a crash in str_squeeze because s[0] is treated as a signed value, causing it to be equal to lastch, which is -1. After this occurs, i is decremented and s[-1] is accessed.
The following inputs demonstrate crashes:
""\xff00000000000000000000000"".squeeze(""\xff"")
""\xff00000000000000000000000"".squeeze!(""\xff"")
""\xff00000000000000000000000"".squeeze
""\xff00000000000000000000000"".squeeze!
Changing s to an unsigned char * fixes the problem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4127,2018-09-24T22:10:33Z,2018-09-25T02:43:43Z,2018-09-27T13:11:04Z,MERGED,True,2,2,1,https://github.com/clayton-shopify,Fix comparisons in str_squeeze.,1,[],https://github.com/mruby/mruby/pull/4127,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4127#issuecomment-424573775,"Dinko Galetic & Denis Kasak noticed that strings beginning with \xff can cause a crash in str_squeeze because s[0] is treated as a signed value, causing it to be equal to lastch, which is -1. After this occurs, i is decremented and s[-1] is accessed.
The following inputs demonstrate crashes:
""\xff00000000000000000000000"".squeeze(""\xff"")
""\xff00000000000000000000000"".squeeze!(""\xff"")
""\xff00000000000000000000000"".squeeze
""\xff00000000000000000000000"".squeeze!
Changing s to an unsigned char * fixes the problem.",The issue is addressed by 9e3cbaa along with #4130. Reverted.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4127,2018-09-24T22:10:33Z,2018-09-25T02:43:43Z,2018-09-27T13:11:04Z,MERGED,True,2,2,1,https://github.com/clayton-shopify,Fix comparisons in str_squeeze.,1,[],https://github.com/mruby/mruby/pull/4127,https://github.com/dgaletic,3,https://github.com/mruby/mruby/pull/4127#issuecomment-425035107,"Dinko Galetic & Denis Kasak noticed that strings beginning with \xff can cause a crash in str_squeeze because s[0] is treated as a signed value, causing it to be equal to lastch, which is -1. After this occurs, i is decremented and s[-1] is accessed.
The following inputs demonstrate crashes:
""\xff00000000000000000000000"".squeeze(""\xff"")
""\xff00000000000000000000000"".squeeze!(""\xff"")
""\xff00000000000000000000000"".squeeze
""\xff00000000000000000000000"".squeeze!
Changing s to an unsigned char * fixes the problem.","str_squeeze mishandles the ÿ character after the revert. It gets deleted if it's the first character in a string, e.g. p ""ÿ"".squeeze prints an empty string.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4127,2018-09-24T22:10:33Z,2018-09-25T02:43:43Z,2018-09-27T13:11:04Z,MERGED,True,2,2,1,https://github.com/clayton-shopify,Fix comparisons in str_squeeze.,1,[],https://github.com/mruby/mruby/pull/4127,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4127#issuecomment-425084922,"Dinko Galetic & Denis Kasak noticed that strings beginning with \xff can cause a crash in str_squeeze because s[0] is treated as a signed value, causing it to be equal to lastch, which is -1. After this occurs, i is decremented and s[-1] is accessed.
The following inputs demonstrate crashes:
""\xff00000000000000000000000"".squeeze(""\xff"")
""\xff00000000000000000000000"".squeeze!(""\xff"")
""\xff00000000000000000000000"".squeeze
""\xff00000000000000000000000"".squeeze!
Changing s to an unsigned char * fixes the problem.","Ah, it doesn't work for ISO-8859-1 strings. Will be fixed soon.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4128,2018-09-25T02:50:43Z,2018-09-25T03:03:26Z,2018-09-25T03:03:26Z,MERGED,True,1,0,1,https://github.com/take-cheeze,Fix memory leak in `mrb_str_count`,1,[],https://github.com/mruby/mruby/pull/4128,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4128,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4129,2018-09-25T13:05:02Z,2020-10-18T11:49:03Z,2020-10-18T11:49:24Z,CLOSED,False,12,6,3,https://github.com/dearblue,Add weak dependency feature for mrbgems,4,[],https://github.com/mruby/mruby/pull/4129,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4129,"This feature is a hint to change the mrbgem inclusion order when specified by spec.add_dependency of mrbgem.rake.
It does not mean that it is depends directly, so it will not include mrbgem by itself.
To use this feature, give the weak: true argument to the MRuby::Gem::Specification#add_dependency method in mruby-XXX/mrbgem.rake.
spec.add_dependency ""mruby-sprintf"", :weak => true
Example with mruby-print and mruby-sprintf:


my_build_config.rb
configurations = {
  build: {
    host: {
      gems: [
        { core: ""mruby-sprintf"" },
        { core: ""mruby-print"" },
      ]
    },

    ### So far in the wrong mrbgems order
    host2: {
      gems: [
        { core: ""mruby-print"" },
        { core: ""mruby-sprintf"" }
      ]
    },

    ### Not including mruby-sprintf
    host3: {
      gems: [
        { core: ""mruby-print"" }
      ]
    },

    host4: {
      gems: [
        { core: ""mruby-sprintf"" }
      ]
    }
  }
}

configurations[:build].each do |name, conf|
  MRuby::Build.new(name.to_s) do |c|
    toolchain :gcc
    conf[:gems].each { |*g| gem *g }
  end
end


Build summary of MRUBY_CONFIG=my_build_config.rb ./minirake clean all
================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-compiler - mruby compiler library
             mruby-bin-mrbc - mruby compiler executable
================================================

### mruby-sprintf is weak dependency, so included mruby-sprintf before mruby-print
================================================
      Config Name: host2
 Output Directory: build/host2
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
================================================

### mruby-sprintf is weak dependency, but it is not specified directly, so included mruby-print only
================================================
      Config Name: host3
 Output Directory: build/host3
    Included Gems:
             mruby-print - standard print/puts/p
================================================

================================================
      Config Name: host4
 Output Directory: build/host4
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
================================================



Compatible problems for users
It is not backwards compatible. Also it will always be treated as dependent for previous mruby versions.
Therefore, it is necessary to decide by require ""mruby/source"" and MRuby::Source::MRUBY_RELEASE_NO.
e.g.:
# A part of mruby-XXX/mrbgem.rake

require ""mruby/source""

spec.add_dependency ""mruby-YYY"", weak: true if MRuby::Source::MRUBY_RELEASE_NO >= 20000","This feature is a hint to change the mrbgem inclusion order when specified by spec.add_dependency of mrbgem.rake.
It does not mean that it is depends directly, so it will not include mrbgem by itself.
To use this feature, give the weak: true argument to the MRuby::Gem::Specification#add_dependency method in mruby-XXX/mrbgem.rake.
spec.add_dependency ""mruby-sprintf"", :weak => true
Example with mruby-print and mruby-sprintf:


my_build_config.rb
configurations = {
  build: {
    host: {
      gems: [
        { core: ""mruby-sprintf"" },
        { core: ""mruby-print"" },
      ]
    },

    ### So far in the wrong mrbgems order
    host2: {
      gems: [
        { core: ""mruby-print"" },
        { core: ""mruby-sprintf"" }
      ]
    },

    ### Not including mruby-sprintf
    host3: {
      gems: [
        { core: ""mruby-print"" }
      ]
    },

    host4: {
      gems: [
        { core: ""mruby-sprintf"" }
      ]
    }
  }
}

configurations[:build].each do |name, conf|
  MRuby::Build.new(name.to_s) do |c|
    toolchain :gcc
    conf[:gems].each { |*g| gem *g }
  end
end


Build summary of MRUBY_CONFIG=my_build_config.rb ./minirake clean all
================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-compiler - mruby compiler library
             mruby-bin-mrbc - mruby compiler executable
================================================

### mruby-sprintf is weak dependency, so included mruby-sprintf before mruby-print
================================================
      Config Name: host2
 Output Directory: build/host2
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
================================================

### mruby-sprintf is weak dependency, but it is not specified directly, so included mruby-print only
================================================
      Config Name: host3
 Output Directory: build/host3
    Included Gems:
             mruby-print - standard print/puts/p
================================================

================================================
      Config Name: host4
 Output Directory: build/host4
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
================================================



Compatible problems for users
It is not backwards compatible. Also it will always be treated as dependent for previous mruby versions.
Therefore, it is necessary to decide by require ""mruby/source"" and MRuby::Source::MRUBY_RELEASE_NO.
e.g.:
# A part of mruby-XXX/mrbgem.rake

require ""mruby/source""

spec.add_dependency ""mruby-YYY"", weak: true if MRuby::Source::MRUBY_RELEASE_NO >= 20000",True,{}
mruby/mruby,https://github.com/mruby/mruby,4129,2018-09-25T13:05:02Z,2020-10-18T11:49:03Z,2020-10-18T11:49:24Z,CLOSED,False,12,6,3,https://github.com/dearblue,Add weak dependency feature for mrbgems,4,[],https://github.com/mruby/mruby/pull/4129,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4129#issuecomment-711156308,"This feature is a hint to change the mrbgem inclusion order when specified by spec.add_dependency of mrbgem.rake.
It does not mean that it is depends directly, so it will not include mrbgem by itself.
To use this feature, give the weak: true argument to the MRuby::Gem::Specification#add_dependency method in mruby-XXX/mrbgem.rake.
spec.add_dependency ""mruby-sprintf"", :weak => true
Example with mruby-print and mruby-sprintf:


my_build_config.rb
configurations = {
  build: {
    host: {
      gems: [
        { core: ""mruby-sprintf"" },
        { core: ""mruby-print"" },
      ]
    },

    ### So far in the wrong mrbgems order
    host2: {
      gems: [
        { core: ""mruby-print"" },
        { core: ""mruby-sprintf"" }
      ]
    },

    ### Not including mruby-sprintf
    host3: {
      gems: [
        { core: ""mruby-print"" }
      ]
    },

    host4: {
      gems: [
        { core: ""mruby-sprintf"" }
      ]
    }
  }
}

configurations[:build].each do |name, conf|
  MRuby::Build.new(name.to_s) do |c|
    toolchain :gcc
    conf[:gems].each { |*g| gem *g }
  end
end


Build summary of MRUBY_CONFIG=my_build_config.rb ./minirake clean all
================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-compiler - mruby compiler library
             mruby-bin-mrbc - mruby compiler executable
================================================

### mruby-sprintf is weak dependency, so included mruby-sprintf before mruby-print
================================================
      Config Name: host2
 Output Directory: build/host2
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
================================================

### mruby-sprintf is weak dependency, but it is not specified directly, so included mruby-print only
================================================
      Config Name: host3
 Output Directory: build/host3
    Included Gems:
             mruby-print - standard print/puts/p
================================================

================================================
      Config Name: host4
 Output Directory: build/host4
    Included Gems:
             mruby-sprintf - standard Kernel#sprintf method
================================================



Compatible problems for users
It is not backwards compatible. Also it will always be treated as dependent for previous mruby versions.
Therefore, it is necessary to decide by require ""mruby/source"" and MRuby::Source::MRUBY_RELEASE_NO.
e.g.:
# A part of mruby-XXX/mrbgem.rake

require ""mruby/source""

spec.add_dependency ""mruby-YYY"", weak: true if MRuby::Source::MRUBY_RELEASE_NO >= 20000","This pull request will be withdrawn for the following reasons:

Ruby allows undefined classes and methods to be written first.
For example, the Regexp or Complex class, or the sprintf in the printf method.
Weak dependency becomes unnecessary by cutting out the dependent part and creating another mrbgem and defining a clear dependency.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4131,2018-10-05T12:23:56Z,2018-10-05T13:10:52Z,2018-10-05T13:10:52Z,MERGED,True,1,2,1,https://github.com/junaruga,Refactor .travis.yml to remove duplicated env: MRUBY_CONFIG.,1,[],https://github.com/mruby/mruby/pull/4131,https://github.com/junaruga,1,https://github.com/mruby/mruby/pull/4131,"This PR is just for refactoring .travis.yml.
The result on my repository is here.
https://travis-ci.org/junaruga/mruby/builds/437593562","This PR is just for refactoring .travis.yml.
The result on my repository is here.
https://travis-ci.org/junaruga/mruby/builds/437593562",True,{}
mruby/mruby,https://github.com/mruby/mruby,4133,2018-10-10T07:58:36Z,2018-10-11T23:27:34Z,2018-10-12T05:53:29Z,CLOSED,False,2,2,1,https://github.com/asfluido,Modified behaviour of Hash.delete,1,[],https://github.com/mruby/mruby/pull/4133,https://github.com/asfluido,1,https://github.com/mruby/mruby/pull/4133,"Originally, Hash.delete, after deleting an element of the hash, returned the original value associated with the deleted key.
After commit e8dcfe1 (6 august), this was changed, so that the removed key was returned.
With this small patch I try to restore the previous behaviour, in the hope the change was not intentional (I use Hash.delete return values a lot in my code). I modified mrb_hash_delete_key because this was more immediate than modifying mrb_hash_delete, and I saw that mrb_hash_delete_key  is currently used only a couple of times:

once inside mrb_hash_delete
once in vm.c at line 1891, and the return value is not used.

If the change was intentional, please let me know, so I modify my code. Otherwise, you may want to implement a better patch instead of adopting mine.","Originally, Hash.delete, after deleting an element of the hash, returned the original value associated with the deleted key.
After commit e8dcfe1 (6 august), this was changed, so that the removed key was returned.
With this small patch I try to restore the previous behaviour, in the hope the change was not intentional (I use Hash.delete return values a lot in my code). I modified mrb_hash_delete_key because this was more immediate than modifying mrb_hash_delete, and I saw that mrb_hash_delete_key  is currently used only a couple of times:

once inside mrb_hash_delete
once in vm.c at line 1891, and the return value is not used.

If the change was intentional, please let me know, so I modify my code. Otherwise, you may want to implement a better patch instead of adopting mine.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4133,2018-10-10T07:58:36Z,2018-10-11T23:27:34Z,2018-10-12T05:53:29Z,CLOSED,False,2,2,1,https://github.com/asfluido,Modified behaviour of Hash.delete,1,[],https://github.com/mruby/mruby/pull/4133,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4133#issuecomment-429155008,"Originally, Hash.delete, after deleting an element of the hash, returned the original value associated with the deleted key.
After commit e8dcfe1 (6 august), this was changed, so that the removed key was returned.
With this small patch I try to restore the previous behaviour, in the hope the change was not intentional (I use Hash.delete return values a lot in my code). I modified mrb_hash_delete_key because this was more immediate than modifying mrb_hash_delete, and I saw that mrb_hash_delete_key  is currently used only a couple of times:

once inside mrb_hash_delete
once in vm.c at line 1891, and the return value is not used.

If the change was intentional, please let me know, so I modify my code. Otherwise, you may want to implement a better patch instead of adopting mine.",I fixed the issue in a different way. Thank you for the report.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4133,2018-10-10T07:58:36Z,2018-10-11T23:27:34Z,2018-10-12T05:53:29Z,CLOSED,False,2,2,1,https://github.com/asfluido,Modified behaviour of Hash.delete,1,[],https://github.com/mruby/mruby/pull/4133,https://github.com/asfluido,3,https://github.com/mruby/mruby/pull/4133#issuecomment-429212324,"Originally, Hash.delete, after deleting an element of the hash, returned the original value associated with the deleted key.
After commit e8dcfe1 (6 august), this was changed, so that the removed key was returned.
With this small patch I try to restore the previous behaviour, in the hope the change was not intentional (I use Hash.delete return values a lot in my code). I modified mrb_hash_delete_key because this was more immediate than modifying mrb_hash_delete, and I saw that mrb_hash_delete_key  is currently used only a couple of times:

once inside mrb_hash_delete
once in vm.c at line 1891, and the return value is not used.

If the change was intentional, please let me know, so I modify my code. Otherwise, you may want to implement a better patch instead of adopting mine.","Excellent, thanks",True,{}
mruby/mruby,https://github.com/mruby/mruby,4141,2018-10-15T05:50:43Z,2021-07-14T22:27:48Z,2021-07-14T22:27:48Z,MERGED,True,12,0,1,https://github.com/udzura,Add a testcase of #4137 fix,1,[],https://github.com/mruby/mruby/pull/4141,https://github.com/udzura,1,https://github.com/mruby/mruby/pull/4141,"Hi, thanks for the commit fdd5ce8.
I've added the test case of this.","Hi, thanks for the commit fdd5ce8.
I've added the test case of this.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4142,2018-10-18T04:57:24Z,2018-10-18T05:02:12Z,2018-10-18T07:22:44Z,MERGED,True,58,36,3,https://github.com/tsahara,replace quicksort with mergesort.,1,[],https://github.com/mruby/mruby/pull/4142,https://github.com/tsahara,1,https://github.com/mruby/mruby/pull/4142,"The current implementation of Array#sort! is quicksort.  It is known to be fast on average but very slow (""vulnerable"" in other words) for some inputs (cf. #4007).  Mergesort is fast enough for any inputs.  Another good point of mergesort is that it is a stable algorithm.   Quicksort is unstable.  In my opinion, the default sort algorithm should be easy to use and safe for any inputs.




quicksort
mergesort




average performance
O(nlogn)
O(nlogn) (a bit slower than quicksort)


worst case performance
O(n^2)
O(nlogn)


average memory usage
O(logn)
O(n)


worst case memory usage
O(n) [*1]
O(n)



[*1] it can be O(logn) in theory.","The current implementation of Array#sort! is quicksort.  It is known to be fast on average but very slow (""vulnerable"" in other words) for some inputs (cf. #4007).  Mergesort is fast enough for any inputs.  Another good point of mergesort is that it is a stable algorithm.   Quicksort is unstable.  In my opinion, the default sort algorithm should be easy to use and safe for any inputs.




quicksort
mergesort




average performance
O(nlogn)
O(nlogn) (a bit slower than quicksort)


worst case performance
O(n^2)
O(nlogn)


average memory usage
O(logn)
O(n)


worst case memory usage
O(n) [*1]
O(n)



[*1] it can be O(logn) in theory.",True,{'THUMBS_UP': ['https://github.com/take-cheeze']}
mruby/mruby,https://github.com/mruby/mruby,4142,2018-10-18T04:57:24Z,2018-10-18T05:02:12Z,2018-10-18T07:22:44Z,MERGED,True,58,36,3,https://github.com/tsahara,replace quicksort with mergesort.,1,[],https://github.com/mruby/mruby/pull/4142,https://github.com/tsahara,2,https://github.com/mruby/mruby/pull/4142#issuecomment-430902681,"The current implementation of Array#sort! is quicksort.  It is known to be fast on average but very slow (""vulnerable"" in other words) for some inputs (cf. #4007).  Mergesort is fast enough for any inputs.  Another good point of mergesort is that it is a stable algorithm.   Quicksort is unstable.  In my opinion, the default sort algorithm should be easy to use and safe for any inputs.




quicksort
mergesort




average performance
O(nlogn)
O(nlogn) (a bit slower than quicksort)


worst case performance
O(n^2)
O(nlogn)


average memory usage
O(logn)
O(n)


worst case memory usage
O(n) [*1]
O(n)



[*1] it can be O(logn) in theory.","without lary[0] = lary[0]
% /usr/bin/time -l bin/mruby -e 'a=(1..30000).sort'
        1.70 real         0.53 user         1.16 sys                            
     32120  maximum resident set size                                           
         0  average shared memory size                                          
         0  average unshared data size                                          
         0  average unshared stack size
    242219  minor page faults
         0  major page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
        18  involuntary context switches

with lary[0] = lary[0]
% /usr/bin/time -l bin/mruby -e 'a=(1..30000).sort'
        0.25 real         0.22 user         0.03 sys                           
      5004  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       851  minor page faults
         0  major page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
         2  involuntary context switches",True,{}
mruby/mruby,https://github.com/mruby/mruby,4145,2018-10-29T04:59:42Z,2018-10-29T06:10:36Z,2018-10-29T06:36:15Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Sort test script list too,1,[],https://github.com/mruby/mruby/pull/4145,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4145,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4146,2018-10-29T04:59:48Z,2018-10-29T06:11:07Z,2018-10-29T06:36:14Z,MERGED,True,2,2,1,https://github.com/take-cheeze,Suppress sleep test script warning,1,[],https://github.com/mruby/mruby/pull/4146,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4146,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4147,2018-10-29T04:59:51Z,2018-10-29T06:12:08Z,2018-10-29T06:36:12Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Add missing dependency of source code generator,1,[],https://github.com/mruby/mruby/pull/4147,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4147,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4148,2018-10-29T05:03:01Z,2018-10-29T06:13:25Z,2018-10-29T06:36:10Z,MERGED,True,30,19,11,https://github.com/take-cheeze,Rename `MRuby::Build#libmruby` stuff to avoid confusion,1,[],https://github.com/mruby/mruby/pull/4148,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4148,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4149,2018-10-29T05:03:40Z,2018-10-29T06:34:08Z,2018-10-29T06:36:08Z,MERGED,True,65,42,1,https://github.com/take-cheeze,Keep `tr_pattern` static if possible,1,[],https://github.com/mruby/mruby/pull/4149,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4149,To avoid malloc s.,To avoid malloc s.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4151,2018-10-29T10:18:15Z,2018-11-02T13:37:48Z,2018-11-02T13:40:55Z,MERGED,True,191,102,7,https://github.com/take-cheeze,Reduce instruction size,7,[],https://github.com/mruby/mruby/pull/4151,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4151,Implementation of #4150 .,Implementation of #4150 .,True,{}
mruby/mruby,https://github.com/mruby/mruby,4151,2018-10-29T10:18:15Z,2018-11-02T13:37:48Z,2018-11-02T13:40:55Z,MERGED,True,191,102,7,https://github.com/take-cheeze,Reduce instruction size,7,[],https://github.com/mruby/mruby/pull/4151,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/4151#issuecomment-433864927,Implementation of #4150 .,Implementation should be done.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4151,2018-10-29T10:18:15Z,2018-11-02T13:37:48Z,2018-11-02T13:40:55Z,MERGED,True,191,102,7,https://github.com/take-cheeze,Reduce instruction size,7,[],https://github.com/mruby/mruby/pull/4151,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4151#issuecomment-433895887,Implementation of #4150 .,mrb_reserved_symbols in symbol.h seems like premature optimization. They will be overridden when embedded symbols come. Plain mrb_intern should be enough for the time being.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4151,2018-10-29T10:18:15Z,2018-11-02T13:37:48Z,2018-11-02T13:40:55Z,MERGED,True,191,102,7,https://github.com/take-cheeze,Reduce instruction size,7,[],https://github.com/mruby/mruby/pull/4151,https://github.com/take-cheeze,4,https://github.com/mruby/mruby/pull/4151#issuecomment-434147613,Implementation of #4150 .,"Even if embedded symbols come, I think these reserved symbols is needed for symbols that is used in language feature.
Also they could be replaced with macro when its optimization doesn't match.
And code generator could be optimized with it too.
(I didn't modified it this time.)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4152,2018-10-29T11:10:50Z,2018-10-30T00:04:36Z,2018-10-30T00:24:43Z,MERGED,True,6,0,1,https://github.com/take-cheeze,Add debug flag to `MRuby::Build`,1,[],https://github.com/mruby/mruby/pull/4152,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4152,To check debug build from mrbgems.,To check debug build from mrbgems.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4155,2018-11-01T02:18:40Z,2018-11-01T13:31:32Z,2018-11-01T13:31:32Z,MERGED,True,1,1,1,https://github.com/mimaki,Fixed a bug in INIT_DISPATCH for non direct threading; fix #4153,1,[],https://github.com/mruby/mruby/pull/4155,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4155,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4158,2018-11-02T06:36:00Z,2018-11-02T11:59:20Z,2018-11-02T12:28:07Z,MERGED,True,6,38,2,https://github.com/take-cheeze,Fix dump and load with endianness,2,[],https://github.com/mruby/mruby/pull/4158,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4158,For new VM codes.,For new VM codes.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4160,2018-11-07T08:22:33Z,2018-11-07T09:22:14Z,2018-11-07T09:22:14Z,MERGED,True,1,1,1,https://github.com/mimaki,Wrong pool data length for negative floating value in a mrb file.,1,[],https://github.com/mruby/mruby/pull/4160,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4160,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4168,2018-11-21T02:52:26Z,2018-11-21T03:16:08Z,2018-11-21T03:19:14Z,MERGED,True,5,0,1,https://github.com/robfors,Add documentation to mrb_load_irep,1,[],https://github.com/mruby/mruby/pull/4168,https://github.com/robfors,1,https://github.com/mruby/mruby/pull/4168,"I spent a while trying to figure out why memory appeared to get corrupted when calling mrb_load_irep, but not when calling mrb_load_string_cxt. Problems with names having hex characters, when calling methods as such. I figured out that mrb_load_irep expected it's irep as a literal, were as I was supplying it temporally from the stack. This implementation makes sense for most applications.
Im not sure how obvious this problem would have been to everyone working with mruby, I might suggest adding some documentation to mrb_load_irep such as this PR.
Ill leave it to your discretion.","I spent a while trying to figure out why memory appeared to get corrupted when calling mrb_load_irep, but not when calling mrb_load_string_cxt. Problems with names having hex characters, when calling methods as such. I figured out that mrb_load_irep expected it's irep as a literal, were as I was supplying it temporally from the stack. This implementation makes sense for most applications.
Im not sure how obvious this problem would have been to everyone working with mruby, I might suggest adding some documentation to mrb_load_irep such as this PR.
Ill leave it to your discretion.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4174,2018-12-03T01:25:10Z,2018-12-03T23:09:19Z,2018-12-03T23:55:50Z,MERGED,True,93,0,2,https://github.com/robfors,Adds Module#< and Module#<=,1,[],https://github.com/mruby/mruby/pull/4174,https://github.com/robfors,1,https://github.com/mruby/mruby/pull/4174,I added these methods for my project and I figured I would see if you wanted to merge them.,I added these methods for my project and I figured I would see if you wanted to merge them.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4179,2018-12-05T16:57:32Z,2019-05-04T09:32:40Z,2019-05-14T18:42:00Z,MERGED,True,126,0,3,https://github.com/bshastry,ossfuzz: Add simple mruby compile test harness,3,[],https://github.com/mruby/mruby/pull/4179,https://github.com/bshastry,1,https://github.com/mruby/mruby/pull/4179,"I took the initiative to make a proposal to continuously fuzz mruby compiler with oss-fuzz. The plan is the following:

To kick things off, we add a simple libFuzzer style test harness called ossfuzz/mruby_fuzzer.c that

Takes input from the fuzzer
Creates a C string from this input and feeds it to the mruby compiler


There is also some boilerplate code for (de)initialization
Additionally, there is a directory called ossfuzz/config

mruby.dict is a fuzzing dictionary courtesy @bovi that is meant to assist the fuzzer discover interesting program paths
mruby_fuzzer.options is an oss-fuzz specific fuzzing configuration file



If this PR is approved, I will make a namesake PR to oss-fuzz that includes a build script for creating the fuzzing binary from this test harness. The rest (fuzz automation, bug reporting etc.) is taken care of by oss-fuzz itself.
I would also need a gmail address of the primary mruby contact point so that you can login to the fuzzer infrastructure offered by Google and view bug reports and the like. Optionally, you could add other contact points but for the additional persons, a gmail address is not necessary iirc.
Feedback welcome.","I took the initiative to make a proposal to continuously fuzz mruby compiler with oss-fuzz. The plan is the following:

To kick things off, we add a simple libFuzzer style test harness called ossfuzz/mruby_fuzzer.c that

Takes input from the fuzzer
Creates a C string from this input and feeds it to the mruby compiler


There is also some boilerplate code for (de)initialization
Additionally, there is a directory called ossfuzz/config

mruby.dict is a fuzzing dictionary courtesy @bovi that is meant to assist the fuzzer discover interesting program paths
mruby_fuzzer.options is an oss-fuzz specific fuzzing configuration file



If this PR is approved, I will make a namesake PR to oss-fuzz that includes a build script for creating the fuzzing binary from this test harness. The rest (fuzz automation, bug reporting etc.) is taken care of by oss-fuzz itself.
I would also need a gmail address of the primary mruby contact point so that you can login to the fuzzer infrastructure offered by Google and view bug reports and the like. Optionally, you could add other contact points but for the additional persons, a gmail address is not necessary iirc.
Feedback welcome.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4179,2018-12-05T16:57:32Z,2019-05-04T09:32:40Z,2019-05-14T18:42:00Z,MERGED,True,126,0,3,https://github.com/bshastry,ossfuzz: Add simple mruby compile test harness,3,[],https://github.com/mruby/mruby/pull/4179,https://github.com/bshastry,2,https://github.com/mruby/mruby/pull/4179#issuecomment-453424182,"I took the initiative to make a proposal to continuously fuzz mruby compiler with oss-fuzz. The plan is the following:

To kick things off, we add a simple libFuzzer style test harness called ossfuzz/mruby_fuzzer.c that

Takes input from the fuzzer
Creates a C string from this input and feeds it to the mruby compiler


There is also some boilerplate code for (de)initialization
Additionally, there is a directory called ossfuzz/config

mruby.dict is a fuzzing dictionary courtesy @bovi that is meant to assist the fuzzer discover interesting program paths
mruby_fuzzer.options is an oss-fuzz specific fuzzing configuration file



If this PR is approved, I will make a namesake PR to oss-fuzz that includes a build script for creating the fuzzing binary from this test harness. The rest (fuzz automation, bug reporting etc.) is taken care of by oss-fuzz itself.
I would also need a gmail address of the primary mruby contact point so that you can login to the fuzzer infrastructure offered by Google and view bug reports and the like. Optionally, you could add other contact points but for the additional persons, a gmail address is not necessary iirc.
Feedback welcome.","Hello everyone,
Any updates on this PR? Feedback appreciated CC @matz
Thank you.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4179,2018-12-05T16:57:32Z,2019-05-04T09:32:40Z,2019-05-14T18:42:00Z,MERGED,True,126,0,3,https://github.com/bshastry,ossfuzz: Add simple mruby compile test harness,3,[],https://github.com/mruby/mruby/pull/4179,https://github.com/bshastry,3,https://github.com/mruby/mruby/pull/4179#issuecomment-489015212,"I took the initiative to make a proposal to continuously fuzz mruby compiler with oss-fuzz. The plan is the following:

To kick things off, we add a simple libFuzzer style test harness called ossfuzz/mruby_fuzzer.c that

Takes input from the fuzzer
Creates a C string from this input and feeds it to the mruby compiler


There is also some boilerplate code for (de)initialization
Additionally, there is a directory called ossfuzz/config

mruby.dict is a fuzzing dictionary courtesy @bovi that is meant to assist the fuzzer discover interesting program paths
mruby_fuzzer.options is an oss-fuzz specific fuzzing configuration file



If this PR is approved, I will make a namesake PR to oss-fuzz that includes a build script for creating the fuzzing binary from this test harness. The rest (fuzz automation, bug reporting etc.) is taken care of by oss-fuzz itself.
I would also need a gmail address of the primary mruby contact point so that you can login to the fuzzer infrastructure offered by Google and view bug reports and the like. Optionally, you could add other contact points but for the additional persons, a gmail address is not necessary iirc.
Feedback welcome.","Hello,
Quick ping to get feedback on this PR: Would you be interested in continuously fuzzing the mruby interpreter? If not feel free to close this PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4179,2018-12-05T16:57:32Z,2019-05-04T09:32:40Z,2019-05-14T18:42:00Z,MERGED,True,126,0,3,https://github.com/bshastry,ossfuzz: Add simple mruby compile test harness,3,[],https://github.com/mruby/mruby/pull/4179,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4179#issuecomment-489311192,"I took the initiative to make a proposal to continuously fuzz mruby compiler with oss-fuzz. The plan is the following:

To kick things off, we add a simple libFuzzer style test harness called ossfuzz/mruby_fuzzer.c that

Takes input from the fuzzer
Creates a C string from this input and feeds it to the mruby compiler


There is also some boilerplate code for (de)initialization
Additionally, there is a directory called ossfuzz/config

mruby.dict is a fuzzing dictionary courtesy @bovi that is meant to assist the fuzzer discover interesting program paths
mruby_fuzzer.options is an oss-fuzz specific fuzzing configuration file



If this PR is approved, I will make a namesake PR to oss-fuzz that includes a build script for creating the fuzzing binary from this test harness. The rest (fuzz automation, bug reporting etc.) is taken care of by oss-fuzz itself.
I would also need a gmail address of the primary mruby contact point so that you can login to the fuzzer infrastructure offered by Google and view bug reports and the like. Optionally, you could add other contact points but for the additional persons, a gmail address is not necessary iirc.
Feedback welcome.","Sorry for being late. I still don't fully understand how ossfuzz works.
But it seems harmless to existing code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4179,2018-12-05T16:57:32Z,2019-05-04T09:32:40Z,2019-05-14T18:42:00Z,MERGED,True,126,0,3,https://github.com/bshastry,ossfuzz: Add simple mruby compile test harness,3,[],https://github.com/mruby/mruby/pull/4179,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4179#issuecomment-492166469,"I took the initiative to make a proposal to continuously fuzz mruby compiler with oss-fuzz. The plan is the following:

To kick things off, we add a simple libFuzzer style test harness called ossfuzz/mruby_fuzzer.c that

Takes input from the fuzzer
Creates a C string from this input and feeds it to the mruby compiler


There is also some boilerplate code for (de)initialization
Additionally, there is a directory called ossfuzz/config

mruby.dict is a fuzzing dictionary courtesy @bovi that is meant to assist the fuzzer discover interesting program paths
mruby_fuzzer.options is an oss-fuzz specific fuzzing configuration file



If this PR is approved, I will make a namesake PR to oss-fuzz that includes a build script for creating the fuzzing binary from this test harness. The rest (fuzz automation, bug reporting etc.) is taken care of by oss-fuzz itself.
I would also need a gmail address of the primary mruby contact point so that you can login to the fuzzer infrastructure offered by Google and view bug reports and the like. Optionally, you could add other contact points but for the additional persons, a gmail address is not necessary iirc.
Feedback welcome.",Checking by oss-fuzz has started. I have received several issues. But I have to sign in to the system using my google account but my registered address is not. @bshastry Is there any way to resolve this?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4179,2018-12-05T16:57:32Z,2019-05-04T09:32:40Z,2019-05-14T18:42:00Z,MERGED,True,126,0,3,https://github.com/bshastry,ossfuzz: Add simple mruby compile test harness,3,[],https://github.com/mruby/mruby/pull/4179,https://github.com/bshastry,6,https://github.com/mruby/mruby/pull/4179#issuecomment-492359939,"I took the initiative to make a proposal to continuously fuzz mruby compiler with oss-fuzz. The plan is the following:

To kick things off, we add a simple libFuzzer style test harness called ossfuzz/mruby_fuzzer.c that

Takes input from the fuzzer
Creates a C string from this input and feeds it to the mruby compiler


There is also some boilerplate code for (de)initialization
Additionally, there is a directory called ossfuzz/config

mruby.dict is a fuzzing dictionary courtesy @bovi that is meant to assist the fuzzer discover interesting program paths
mruby_fuzzer.options is an oss-fuzz specific fuzzing configuration file



If this PR is approved, I will make a namesake PR to oss-fuzz that includes a build script for creating the fuzzing binary from this test harness. The rest (fuzz automation, bug reporting etc.) is taken care of by oss-fuzz itself.
I would also need a gmail address of the primary mruby contact point so that you can login to the fuzzer infrastructure offered by Google and view bug reports and the like. Optionally, you could add other contact points but for the additional persons, a gmail address is not necessary iirc.
Feedback welcome.",Hello @matz. I can add your Gmail address. Could you please send it to me.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4180,2018-12-06T02:50:00Z,2019-08-21T08:17:31Z,2019-08-21T08:30:21Z,MERGED,True,65,21,4,https://github.com/take-cheeze,Support lock file for git.,1,[],https://github.com/mruby/mruby/pull/4180,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4180,"Inspired by https://udzura.hatenablog.jp/entry/2018/12/05/143801
Creates lock file to ""#{MRUBY_CONFIG}.lock.
When pulled or checksum_hash is set should be updated with it.
Lock file looks like:
---
builds:
  host:
    https://github.com/mattn/mruby-onig-regexp.git:
      url: https://github.com/mattn/mruby-onig-regexp.git
      branch: master
      commit: 354c0df670fe6822528d5a508fb7722233f4b920","Inspired by https://udzura.hatenablog.jp/entry/2018/12/05/143801
Creates lock file to ""#{MRUBY_CONFIG}.lock.
When pulled or checksum_hash is set should be updated with it.
Lock file looks like:
---
builds:
  host:
    https://github.com/mattn/mruby-onig-regexp.git:
      url: https://github.com/mattn/mruby-onig-regexp.git
      branch: master
      commit: 354c0df670fe6822528d5a508fb7722233f4b920",True,"{'THUMBS_UP': ['https://github.com/udzura', 'https://github.com/ksss']}"
mruby/mruby,https://github.com/mruby/mruby,4180,2018-12-06T02:50:00Z,2019-08-21T08:17:31Z,2019-08-21T08:30:21Z,MERGED,True,65,21,4,https://github.com/take-cheeze,Support lock file for git.,1,[],https://github.com/mruby/mruby/pull/4180,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/4180#issuecomment-444730392,"Inspired by https://udzura.hatenablog.jp/entry/2018/12/05/143801
Creates lock file to ""#{MRUBY_CONFIG}.lock.
When pulled or checksum_hash is set should be updated with it.
Lock file looks like:
---
builds:
  host:
    https://github.com/mattn/mruby-onig-regexp.git:
      url: https://github.com/mattn/mruby-onig-regexp.git
      branch: master
      commit: 354c0df670fe6822528d5a508fb7722233f4b920",Forgot to note that local repository won't be shared between different MRuby::Build with this too.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4180,2018-12-06T02:50:00Z,2019-08-21T08:17:31Z,2019-08-21T08:30:21Z,MERGED,True,65,21,4,https://github.com/take-cheeze,Support lock file for git.,1,[],https://github.com/mruby/mruby/pull/4180,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/4180#issuecomment-444730749,"Inspired by https://udzura.hatenablog.jp/entry/2018/12/05/143801
Creates lock file to ""#{MRUBY_CONFIG}.lock.
When pulled or checksum_hash is set should be updated with it.
Lock file looks like:
---
builds:
  host:
    https://github.com/mattn/mruby-onig-regexp.git:
      url: https://github.com/mattn/mruby-onig-regexp.git
      branch: master
      commit: 354c0df670fe6822528d5a508fb7722233f4b920",I want to use -C instead of --git-dir and --work-tree but seems like it's a new option: tensorflow/tensorflow#4580,True,{}
mruby/mruby,https://github.com/mruby/mruby,4180,2018-12-06T02:50:00Z,2019-08-21T08:17:31Z,2019-08-21T08:30:21Z,MERGED,True,65,21,4,https://github.com/take-cheeze,Support lock file for git.,1,[],https://github.com/mruby/mruby/pull/4180,https://github.com/udzura,4,https://github.com/mruby/mruby/pull/4180#issuecomment-523337009,"Inspired by https://udzura.hatenablog.jp/entry/2018/12/05/143801
Creates lock file to ""#{MRUBY_CONFIG}.lock.
When pulled or checksum_hash is set should be updated with it.
Lock file looks like:
---
builds:
  host:
    https://github.com/mattn/mruby-onig-regexp.git:
      url: https://github.com/mattn/mruby-onig-regexp.git
      branch: master
      commit: 354c0df670fe6822528d5a508fb7722233f4b920",I think this feature seems to be required by many many mrubyists!,True,"{'THUMBS_UP': ['https://github.com/unasuke', 'https://github.com/yuya-takeyama', 'https://github.com/take-cheeze']}"
mruby/mruby,https://github.com/mruby/mruby,4180,2018-12-06T02:50:00Z,2019-08-21T08:17:31Z,2019-08-21T08:30:21Z,MERGED,True,65,21,4,https://github.com/take-cheeze,Support lock file for git.,1,[],https://github.com/mruby/mruby/pull/4180,https://github.com/take-cheeze,5,https://github.com/mruby/mruby/pull/4180#issuecomment-523345644,"Inspired by https://udzura.hatenablog.jp/entry/2018/12/05/143801
Creates lock file to ""#{MRUBY_CONFIG}.lock.
When pulled or checksum_hash is set should be updated with it.
Lock file looks like:
---
builds:
  host:
    https://github.com/mattn/mruby-onig-regexp.git:
      url: https://github.com/mattn/mruby-onig-regexp.git
      branch: master
      commit: 354c0df670fe6822528d5a508fb7722233f4b920",TODO: Save version of mruby itself too,True,{}
mruby/mruby,https://github.com/mruby/mruby,4180,2018-12-06T02:50:00Z,2019-08-21T08:17:31Z,2019-08-21T08:30:21Z,MERGED,True,65,21,4,https://github.com/take-cheeze,Support lock file for git.,1,[],https://github.com/mruby/mruby/pull/4180,https://github.com/matz,6,https://github.com/mruby/mruby/pull/4180#issuecomment-523350183,"Inspired by https://udzura.hatenablog.jp/entry/2018/12/05/143801
Creates lock file to ""#{MRUBY_CONFIG}.lock.
When pulled or checksum_hash is set should be updated with it.
Lock file looks like:
---
builds:
  host:
    https://github.com/mattn/mruby-onig-regexp.git:
      url: https://github.com/mattn/mruby-onig-regexp.git
      branch: master
      commit: 354c0df670fe6822528d5a508fb7722233f4b920",OK,True,{}
mruby/mruby,https://github.com/mruby/mruby,4183,2018-12-11T02:03:47Z,2018-12-11T02:15:55Z,2018-12-11T02:15:55Z,CLOSED,False,13,13,6,https://github.com/mimaki,Release mruby 2.0.0.,2,[],https://github.com/mruby/mruby/pull/4183,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4183,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4183,2018-12-11T02:03:47Z,2018-12-11T02:15:55Z,2018-12-11T02:15:55Z,CLOSED,False,13,13,6,https://github.com/mimaki,Release mruby 2.0.0.,2,[],https://github.com/mruby/mruby/pull/4183,https://github.com/mimaki,2,https://github.com/mruby/mruby/pull/4183#issuecomment-446047177,,Canceled.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4184,2018-12-11T02:43:14Z,2018-12-11T02:52:33Z,2018-12-11T02:52:33Z,MERGED,True,14,13,7,https://github.com/mimaki,Release mruby 2.0.0,4,[],https://github.com/mruby/mruby/pull/4184,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4184,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4185,2018-12-11T16:09:43Z,2018-12-12T04:48:59Z,2018-12-12T04:48:59Z,MERGED,True,5,5,2,https://github.com/icm7216,Fix sleep example,2,[],https://github.com/mruby/mruby/pull/4185,https://github.com/icm7216,1,https://github.com/mruby/mruby/pull/4185,"I fixed the example code of mruby-sleep so that it works.

Sleep module is undefined. So, delete the module name.
Specify the core library instead of the external library.","I fixed the example code of mruby-sleep so that it works.

Sleep module is undefined. So, delete the module name.
Specify the core library instead of the external library.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4187,2018-12-13T07:49:01Z,2018-12-15T05:11:14Z,2018-12-15T08:33:01Z,CLOSED,False,28,26,3,https://github.com/dsh0416,Expose htable header,1,[],https://github.com/mruby/mruby/pull/4187,https://github.com/dsh0416,1,https://github.com/mruby/mruby/pull/4187,"As #4186 mentioned, the breaking changes of the removal khash structure have made some libraries not working. Shopify ESS uses the khash feature to serialize/deserialize mruby binaries by msgpack. The removal of the khash makes it impossible to work.
I here suggest that we could expose the htable header from the hash.c to htable.h, which makes it possible to call it from the C program directly. An example usage is shown below.
case MRB_TT_HASH: {
  auto *kh = RHASH_TBL(ruby_value);
  segment *seg;
  mrb_int i;

  if (kh) {
    auto size = size_t{};
    if (size > UINT32_MAX) {
      throw fatal_error(status_code::structure_too_deep);
    }
    packer.pack_map((uint32_t) size);

    seg = kh->rootseg;
    while (seg) {
      for (i=0; i<seg->size; i++) {
        if (!seg->next && i >= kh->last_len) {
          return;
        }
        if (mrb_undef_p(seg->e[i].key)) continue;

        emit_ruby_as_msgpack_rec(engine, seg->e[i].key, packer, depth + 1);
        emit_ruby_as_msgpack_rec(engine, seg->e[i].val, packer, depth + 1);
      }
      seg = seg->next;
    }
  } else {
    packer.pack_map(0);
  }
  return;
}","As #4186 mentioned, the breaking changes of the removal khash structure have made some libraries not working. Shopify ESS uses the khash feature to serialize/deserialize mruby binaries by msgpack. The removal of the khash makes it impossible to work.
I here suggest that we could expose the htable header from the hash.c to htable.h, which makes it possible to call it from the C program directly. An example usage is shown below.
case MRB_TT_HASH: {
  auto *kh = RHASH_TBL(ruby_value);
  segment *seg;
  mrb_int i;

  if (kh) {
    auto size = size_t{};
    if (size > UINT32_MAX) {
      throw fatal_error(status_code::structure_too_deep);
    }
    packer.pack_map((uint32_t) size);

    seg = kh->rootseg;
    while (seg) {
      for (i=0; i<seg->size; i++) {
        if (!seg->next && i >= kh->last_len) {
          return;
        }
        if (mrb_undef_p(seg->e[i].key)) continue;

        emit_ruby_as_msgpack_rec(engine, seg->e[i].key, packer, depth + 1);
        emit_ruby_as_msgpack_rec(engine, seg->e[i].val, packer, depth + 1);
      }
      seg = seg->next;
    }
  } else {
    packer.pack_map(0);
  }
  return;
}",True,"{'THUMBS_UP': ['https://github.com/jasl'], 'HOORAY': ['https://github.com/jasl']}"
mruby/mruby,https://github.com/mruby/mruby,4187,2018-12-13T07:49:01Z,2018-12-15T05:11:14Z,2018-12-15T08:33:01Z,CLOSED,False,28,26,3,https://github.com/dsh0416,Expose htable header,1,[],https://github.com/mruby/mruby/pull/4187,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/4187#issuecomment-446891721,"As #4186 mentioned, the breaking changes of the removal khash structure have made some libraries not working. Shopify ESS uses the khash feature to serialize/deserialize mruby binaries by msgpack. The removal of the khash makes it impossible to work.
I here suggest that we could expose the htable header from the hash.c to htable.h, which makes it possible to call it from the C program directly. An example usage is shown below.
case MRB_TT_HASH: {
  auto *kh = RHASH_TBL(ruby_value);
  segment *seg;
  mrb_int i;

  if (kh) {
    auto size = size_t{};
    if (size > UINT32_MAX) {
      throw fatal_error(status_code::structure_too_deep);
    }
    packer.pack_map((uint32_t) size);

    seg = kh->rootseg;
    while (seg) {
      for (i=0; i<seg->size; i++) {
        if (!seg->next && i >= kh->last_len) {
          return;
        }
        if (mrb_undef_p(seg->e[i].key)) continue;

        emit_ruby_as_msgpack_rec(engine, seg->e[i].key, packer, depth + 1);
        emit_ruby_as_msgpack_rec(engine, seg->e[i].val, packer, depth + 1);
      }
      seg = seg->next;
    }
  } else {
    packer.pack_map(0);
  }
  return;
}","The implementation of the associative array should be hidden so 👎  for this.
(And the names should be prefixed with mrb_ when it's going to be exposed.)
Use 
  
    
      mruby/include/mruby/hash.h
    
    
        Lines 214 to 215
      in
      265171a
    
  
  
    

        
          
           typedef int (mrb_hash_foreach_func)(mrb_state *mrb, mrb_value key, mrb_value val, void *data); 
        

        
          
           MRB_API void mrb_hash_foreach(mrb_state *mrb, struct RHash *hash, mrb_hash_foreach_func *func, void *p); 
        
    
  

 instead.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4187,2018-12-13T07:49:01Z,2018-12-15T05:11:14Z,2018-12-15T08:33:01Z,CLOSED,False,28,26,3,https://github.com/dsh0416,Expose htable header,1,[],https://github.com/mruby/mruby/pull/4187,https://github.com/dsh0416,3,https://github.com/mruby/mruby/pull/4187#issuecomment-446929409,"As #4186 mentioned, the breaking changes of the removal khash structure have made some libraries not working. Shopify ESS uses the khash feature to serialize/deserialize mruby binaries by msgpack. The removal of the khash makes it impossible to work.
I here suggest that we could expose the htable header from the hash.c to htable.h, which makes it possible to call it from the C program directly. An example usage is shown below.
case MRB_TT_HASH: {
  auto *kh = RHASH_TBL(ruby_value);
  segment *seg;
  mrb_int i;

  if (kh) {
    auto size = size_t{};
    if (size > UINT32_MAX) {
      throw fatal_error(status_code::structure_too_deep);
    }
    packer.pack_map((uint32_t) size);

    seg = kh->rootseg;
    while (seg) {
      for (i=0; i<seg->size; i++) {
        if (!seg->next && i >= kh->last_len) {
          return;
        }
        if (mrb_undef_p(seg->e[i].key)) continue;

        emit_ruby_as_msgpack_rec(engine, seg->e[i].key, packer, depth + 1);
        emit_ruby_as_msgpack_rec(engine, seg->e[i].val, packer, depth + 1);
      }
      seg = seg->next;
    }
  } else {
    packer.pack_map(0);
  }
  return;
}","@take-cheeze
I'm not quite sure about that, because none of the exposed structs are start with mrb_. The common used names are things like RType, and the previous implementation exposes all methods start with khash_. I agree with you that we could do this with the mrb_hash_foreach function, but I'm not sure if this could cover all the situations comparing to thre previous exposed khash APIs.
On the otherhand, it doesn't make any sense that we expose macros like
#define RHASH_TBL(h)          (RHASH(h)->ht)
inside the definition of hash.h, but we can do nothing about that table.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4187,2018-12-13T07:49:01Z,2018-12-15T05:11:14Z,2018-12-15T08:33:01Z,CLOSED,False,28,26,3,https://github.com/dsh0416,Expose htable header,1,[],https://github.com/mruby/mruby/pull/4187,https://github.com/jasl,4,https://github.com/mruby/mruby/pull/4187#issuecomment-447099540,"As #4186 mentioned, the breaking changes of the removal khash structure have made some libraries not working. Shopify ESS uses the khash feature to serialize/deserialize mruby binaries by msgpack. The removal of the khash makes it impossible to work.
I here suggest that we could expose the htable header from the hash.c to htable.h, which makes it possible to call it from the C program directly. An example usage is shown below.
case MRB_TT_HASH: {
  auto *kh = RHASH_TBL(ruby_value);
  segment *seg;
  mrb_int i;

  if (kh) {
    auto size = size_t{};
    if (size > UINT32_MAX) {
      throw fatal_error(status_code::structure_too_deep);
    }
    packer.pack_map((uint32_t) size);

    seg = kh->rootseg;
    while (seg) {
      for (i=0; i<seg->size; i++) {
        if (!seg->next && i >= kh->last_len) {
          return;
        }
        if (mrb_undef_p(seg->e[i].key)) continue;

        emit_ruby_as_msgpack_rec(engine, seg->e[i].key, packer, depth + 1);
        emit_ruby_as_msgpack_rec(engine, seg->e[i].val, packer, depth + 1);
      }
      seg = seg->next;
    }
  } else {
    packer.pack_map(0);
  }
  return;
}",And Hash C API don't have get its size which can simple get from htable->size,True,{}
mruby/mruby,https://github.com/mruby/mruby,4187,2018-12-13T07:49:01Z,2018-12-15T05:11:14Z,2018-12-15T08:33:01Z,CLOSED,False,28,26,3,https://github.com/dsh0416,Expose htable header,1,[],https://github.com/mruby/mruby/pull/4187,https://github.com/dsh0416,5,https://github.com/mruby/mruby/pull/4187#issuecomment-447538294,"As #4186 mentioned, the breaking changes of the removal khash structure have made some libraries not working. Shopify ESS uses the khash feature to serialize/deserialize mruby binaries by msgpack. The removal of the khash makes it impossible to work.
I here suggest that we could expose the htable header from the hash.c to htable.h, which makes it possible to call it from the C program directly. An example usage is shown below.
case MRB_TT_HASH: {
  auto *kh = RHASH_TBL(ruby_value);
  segment *seg;
  mrb_int i;

  if (kh) {
    auto size = size_t{};
    if (size > UINT32_MAX) {
      throw fatal_error(status_code::structure_too_deep);
    }
    packer.pack_map((uint32_t) size);

    seg = kh->rootseg;
    while (seg) {
      for (i=0; i<seg->size; i++) {
        if (!seg->next && i >= kh->last_len) {
          return;
        }
        if (mrb_undef_p(seg->e[i].key)) continue;

        emit_ruby_as_msgpack_rec(engine, seg->e[i].key, packer, depth + 1);
        emit_ruby_as_msgpack_rec(engine, seg->e[i].val, packer, depth + 1);
      }
      seg = seg->next;
    }
  } else {
    packer.pack_map(0);
  }
  return;
}","I believe that #4188 may be a better solution, so that I would close this pr here.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4188,2018-12-14T12:56:18Z,2018-12-17T06:59:32Z,2018-12-23T09:11:05Z,MERGED,True,23,4,2,https://github.com/dearblue,Add `mrb_hash_size()` function,1,[],https://github.com/mruby/mruby/pull/4188,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4188,refs #4186 and #4187,refs #4186 and #4187,True,{'THUMBS_UP': ['https://github.com/dsh0416']}
mruby/mruby,https://github.com/mruby/mruby,4189,2018-12-14T20:23:19Z,2018-12-17T07:29:01Z,2018-12-17T11:09:18Z,MERGED,True,8,2,1,https://github.com/sdottaka,Make mrb_ary_clear() function callable from C again,1,[],https://github.com/mruby/mruby/pull/4189,https://github.com/sdottaka,1,https://github.com/mruby/mruby/pull/4189,"Since mrb_get_args () is now called in mrb_ary_clear(), mrb_ary_clear () can not be called directly from the C language code.
This PR is a fix for it.","Since mrb_get_args () is now called in mrb_ary_clear(), mrb_ary_clear () can not be called directly from the C language code.
This PR is a fix for it.",True,{'THUMBS_UP': ['https://github.com/take-cheeze']}
mruby/mruby,https://github.com/mruby/mruby,4191,2018-12-18T14:35:32Z,2018-12-19T11:40:34Z,2018-12-23T09:11:03Z,MERGED,True,26,26,8,https://github.com/dearblue,Fix parenthesis for macros,2,[],https://github.com/mruby/mruby/pull/4191,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4191,I think that some macros and arguments are better to enclose in parenthesis.,I think that some macros and arguments are better to enclose in parenthesis.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4193,2018-12-21T15:11:34Z,2018-12-22T04:31:07Z,2018-12-23T09:11:01Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix undefined variable is using,1,[],https://github.com/mruby/mruby/pull/4193,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4193,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4194,2018-12-22T08:27:46Z,2018-12-22T13:47:27Z,2018-12-22T13:54:02Z,MERGED,True,2,2,1,https://github.com/shuujii,mirb: drop dependency on mruby-print in a test,1,[],https://github.com/mruby/mruby/pull/4194,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4194,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4195,2018-12-22T12:56:31Z,2018-12-22T13:47:04Z,2018-12-23T09:10:56Z,MERGED,True,12,1,2,https://github.com/dearblue,Fix byte order,2,[],https://github.com/mruby/mruby/pull/4195,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4195,"BYTE_ORDER and BIG_ENDIAN macros are not defined by clang and gcc on FreeBSD amd64, so defined MRB_ENDIAN_BIG always.


by GCC-8.2
$ gcc8 -dM -E -xc -o - /dev/null | egrep 'BYTE_ORDER|_ENDIAN' | sort
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_PDP_ENDIAN__ 3412



by clang-7.0
$ clang70 -dM -E -xc -o - /dev/null | egrep 'BYTE_ORDER|_ENDIAN' | sort
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __LITTLE_ENDIAN__ 1
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_PDP_ENDIAN__ 3412



I noticed it when building with MRB_NAN_BOXING.

Macros such as BYTE_ORDER are not defined by the standard.
I looked at FreeBSD / NetBSD / OpenBSD and it seems that you need #include <sys/endian.h> to use it.
Also, since it is #include <sys/endian.h> in <sys/types.h>, it can be used with # include <sys/types.h>.
OpenBSD also provides #include <endian.h>.","BYTE_ORDER and BIG_ENDIAN macros are not defined by clang and gcc on FreeBSD amd64, so defined MRB_ENDIAN_BIG always.


by GCC-8.2
$ gcc8 -dM -E -xc -o - /dev/null | egrep 'BYTE_ORDER|_ENDIAN' | sort
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_PDP_ENDIAN__ 3412



by clang-7.0
$ clang70 -dM -E -xc -o - /dev/null | egrep 'BYTE_ORDER|_ENDIAN' | sort
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __LITTLE_ENDIAN__ 1
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_PDP_ENDIAN__ 3412



I noticed it when building with MRB_NAN_BOXING.

Macros such as BYTE_ORDER are not defined by the standard.
I looked at FreeBSD / NetBSD / OpenBSD and it seems that you need #include <sys/endian.h> to use it.
Also, since it is #include <sys/endian.h> in <sys/types.h>, it can be used with # include <sys/types.h>.
OpenBSD also provides #include <endian.h>.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4196,2018-12-22T13:39:27Z,2018-12-22T13:49:15Z,2018-12-23T09:10:53Z,MERGED,True,2,2,1,https://github.com/dearblue,Append cflags for undefined macro,1,[],https://github.com/mruby/mruby/pull/4196,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4196,"The gcc and clang have -Wundef which warns undefined macros.
Since it is not included in -Wall, how about considering adding intentionally?

In MSVC, /w34668 will be similarly warned.
dearblue@82327b9
Since __STDC_VERSION__ is warned as undefined, it was not included in the patch.
https://ci.appveyor.com/project/dearblue/mruby/build/job/f3bjosftdol73vjj","The gcc and clang have -Wundef which warns undefined macros.
Since it is not included in -Wall, how about considering adding intentionally?

In MSVC, /w34668 will be similarly warned.
dearblue@82327b9
Since __STDC_VERSION__ is warned as undefined, it was not included in the patch.
https://ci.appveyor.com/project/dearblue/mruby/build/job/f3bjosftdol73vjj",True,{}
mruby/mruby,https://github.com/mruby/mruby,4197,2018-12-23T05:28:59Z,2018-12-23T13:26:56Z,2018-12-24T03:31:44Z,MERGED,True,1,1,1,https://github.com/shuujii,Suppress a struct initializer warning,1,[],https://github.com/mruby/mruby/pull/4197,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4197,"Suppress a compiler (clang) warning bellow:
src/vm.c:104:38: warning: suggest braces around initialization of
    subobject [-Wmissing-braces]
  const mrb_value mrb_value_zero = { 0 };
                                     ^
                                     {}","Suppress a compiler (clang) warning bellow:
src/vm.c:104:38: warning: suggest braces around initialization of
    subobject [-Wmissing-braces]
  const mrb_value mrb_value_zero = { 0 };
                                     ^
                                     {}",True,{}
mruby/mruby,https://github.com/mruby/mruby,4198,2018-12-23T09:02:37Z,2018-12-23T13:18:08Z,2018-12-25T11:17:50Z,MERGED,True,11,7,5,https://github.com/dearblue,Suppress missing macro warns,4,[],https://github.com/mruby/mruby/pull/4198,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4198,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4199,2018-12-24T03:24:13Z,2018-12-24T07:02:57Z,2018-12-30T02:22:47Z,MERGED,True,1,0,1,https://github.com/shuujii,Refine description for rake test tasks.,1,[],https://github.com/mruby/mruby/pull/4199,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4199,"Before:
$ rake -T test
rake test_test  # run all mruby tests

After:
$ rake -T test
rake test  # run all mruby tests","Before:
$ rake -T test
rake test_test  # run all mruby tests

After:
$ rake -T test
rake test  # run all mruby tests",True,{}
mruby/mruby,https://github.com/mruby/mruby,4200,2018-12-25T00:52:17Z,2018-12-25T00:55:32Z,2019-01-08T12:57:16Z,MERGED,True,1,0,1,https://github.com/shuujii,mruby-bin-mruby: Add test dependency.,1,[],https://github.com/mruby/mruby/pull/4200,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4200,Kernel#p etc are used.,Kernel#p etc are used.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4201,2018-12-25T05:38:08Z,2018-12-25T09:44:16Z,2018-12-25T14:10:15Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Fix `$rake_root_fiber` checking,1,[],https://github.com/mruby/mruby/pull/4201,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4201,#4101 (review),#4101 (review),True,{}
mruby/mruby,https://github.com/mruby/mruby,4202,2018-12-25T06:26:34Z,2018-12-25T09:43:45Z,2021-01-10T11:28:51Z,MERGED,True,1,4,1,https://github.com/shuujii,Simplify full-core.gembox,1,[],https://github.com/mruby/mruby/pull/4202,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4202,Dependencies order is auto detected.,Dependencies order is auto detected.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4202,2018-12-25T06:26:34Z,2018-12-25T09:43:45Z,2021-01-10T11:28:51Z,MERGED,True,1,4,1,https://github.com/shuujii,Simplify full-core.gembox,1,[],https://github.com/mruby/mruby/pull/4202,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4202#issuecomment-449842676,Dependencies order is auto detected.,"mruby-print and mruby-sprintf do not described their mutual dependencies.
Also, the order of filenames returned by the Dir.glob method is undefined.
Therefore, depending on the order, the Kernel # printf method will be unavailable ( mruby-sprintf must be before mruby-print).

  
    
      mruby/mrbgems/mruby-print/mrblib/print.rb
    
    
        Lines 51 to 54
      in
      45e8cb4
    
  
  
    

        
          
           unless Kernel.respond_to?(:sprintf) 
        

        
          
             def printf(*args) 
        

        
          
               raise NotImplementedError.new('printf not available') 
        

        
          
             end 
        
    
  


As a means of solving this, I proposing it in the form of ""weak dependency"" (#4129).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4202,2018-12-25T06:26:34Z,2018-12-25T09:43:45Z,2021-01-10T11:28:51Z,MERGED,True,1,4,1,https://github.com/shuujii,Simplify full-core.gembox,1,[],https://github.com/mruby/mruby/pull/4202,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4202#issuecomment-449853659,Dependencies order is auto detected.,"Ah, OK, I will revert this patch for now.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4202,2018-12-25T06:26:34Z,2018-12-25T09:43:45Z,2021-01-10T11:28:51Z,MERGED,True,1,4,1,https://github.com/shuujii,Simplify full-core.gembox,1,[],https://github.com/mruby/mruby/pull/4202,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4202#issuecomment-449902050,Dependencies order is auto detected.,Sorry for breaking. How about a this solution? (shuujii@778ea2a),True,{}
mruby/mruby,https://github.com/mruby/mruby,4202,2018-12-25T06:26:34Z,2018-12-25T09:43:45Z,2021-01-10T11:28:51Z,MERGED,True,1,4,1,https://github.com/shuujii,Simplify full-core.gembox,1,[],https://github.com/mruby/mruby/pull/4202,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4202#issuecomment-450090378,Dependencies order is auto detected.,I don't like dynamic dispatchin shuujii/mruby@778ea2a,True,{}
mruby/mruby,https://github.com/mruby/mruby,4202,2018-12-25T06:26:34Z,2018-12-25T09:43:45Z,2021-01-10T11:28:51Z,MERGED,True,1,4,1,https://github.com/shuujii,Simplify full-core.gembox,1,[],https://github.com/mruby/mruby/pull/4202,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/4202#issuecomment-538636771,Dependencies order is auto detected.,This PR can be re-merged because the dependency issue of mruby-print and mruby-sprintf was solved via 1d8456f.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4202,2018-12-25T06:26:34Z,2018-12-25T09:43:45Z,2021-01-10T11:28:51Z,MERGED,True,1,4,1,https://github.com/shuujii,Simplify full-core.gembox,1,[],https://github.com/mruby/mruby/pull/4202,https://github.com/dearblue,7,https://github.com/mruby/mruby/pull/4202#issuecomment-757448470,Dependencies order is auto detected.,"@shuujii, How about making a new pull request?
You can reapply it by doing git revert 37d795dec7b495d418dc2f9020cf980c158ba9ed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4202,2018-12-25T06:26:34Z,2018-12-25T09:43:45Z,2021-01-10T11:28:51Z,MERGED,True,1,4,1,https://github.com/shuujii,Simplify full-core.gembox,1,[],https://github.com/mruby/mruby/pull/4202,https://github.com/shuujii,8,https://github.com/mruby/mruby/pull/4202#issuecomment-757450720,Dependencies order is auto detected.,"Thank you for the comment. As I wrote in the comment above, I think that it can be merged as it is now, so I don't think it is necessary to make a new pull request.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4202,2018-12-25T06:26:34Z,2018-12-25T09:43:45Z,2021-01-10T11:28:51Z,MERGED,True,1,4,1,https://github.com/shuujii,Simplify full-core.gembox,1,[],https://github.com/mruby/mruby/pull/4202,https://github.com/matz,9,https://github.com/mruby/mruby/pull/4202#issuecomment-757460300,Dependencies order is auto detected.,OK. I will reapply.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4204,2018-12-29T01:51:15Z,2018-12-31T02:21:12Z,2019-05-04T06:31:10Z,MERGED,True,12,9,1,https://github.com/shuujii,Fix Yacc running multiple times.,2,[],https://github.com/mruby/mruby/pull/4204,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4204,"Example:
$ MRUBY_CONFIG=<(echo 'MRuby::Build.new{toolchain(:gcc);gem(core:""mruby-bin-mruby"");enable_test}') ./minirake

Before:
...
CC    build/host/mrbgems/gem_init.c -> build/host/mrbgems/gem_init.o
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
AR    build/host/lib/libmruby_core.a
...

After:
...
CC    build/host/mrbgems/gem_init.c -> build/host/mrbgems/gem_init.o
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
AR    build/host/lib/libmruby_core.a
...","Example:
$ MRUBY_CONFIG=<(echo 'MRuby::Build.new{toolchain(:gcc);gem(core:""mruby-bin-mruby"");enable_test}') ./minirake

Before:
...
CC    build/host/mrbgems/gem_init.c -> build/host/mrbgems/gem_init.o
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
AR    build/host/lib/libmruby_core.a
...

After:
...
CC    build/host/mrbgems/gem_init.c -> build/host/mrbgems/gem_init.o
YACC  mrbgems/mruby-compiler/core/parse.y -> build/host/mrbgems/mruby-compiler/core/y.tab.c
CC    build/host/mrbgems/mruby-compiler/core/y.tab.c -> build/host/mrbgems/mruby-compiler/core/y.tab.o
AR    build/host/lib/libmruby_core.a
...",True,{}
mruby/mruby,https://github.com/mruby/mruby,4205,2018-12-29T09:20:10Z,2018-12-30T00:42:50Z,2018-12-30T00:42:50Z,CLOSED,False,2,2,1,https://github.com/shuujii,mruby-enumerator: Refine accessors (obj/meth/args/fib).,1,[],https://github.com/mruby/mruby/pull/4205,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4205,"Writers are not used except args.
All accessors are used as public (e.g. in initialized_copy).","Writers are not used except args.
All accessors are used as public (e.g. in initialized_copy).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4206,2018-12-30T02:33:52Z,2018-12-31T02:22:12Z,2019-01-01T13:08:30Z,MERGED,True,2,2,1,https://github.com/shuujii,mruby-enumerator: Refine accessors (obj/meth/args/fib).,1,[],https://github.com/mruby/mruby/pull/4206,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4206,"fib= writer is not used.
All accessors are used as public (e.g. in initialized_copy).","fib= writer is not used.
All accessors are used as public (e.g. in initialized_copy).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4207,2019-01-01T02:04:00Z,2019-01-01T02:24:55Z,2019-01-01T13:08:49Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `__send__` instead of `send` in a Range test.,1,[],https://github.com/mruby/mruby/pull/4207,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4207,"This assertion is accidentaly passed because send was removed from mruby
core so NoMethodError is raised and NoMethodError is subclass of
NameError.","This assertion is accidentaly passed because send was removed from mruby
core so NoMethodError is raised and NoMethodError is subclass of
NameError.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4208,2019-01-01T11:46:14Z,2019-01-02T02:41:57Z,2019-01-02T09:13:28Z,MERGED,True,15,9,1,https://github.com/shuujii,io: Skip TTY test for environments that TTY device is unavailable.,1,[],https://github.com/mruby/mruby/pull/4208,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4208,e.g. GitLab CI,e.g. GitLab CI,True,{}
mruby/mruby,https://github.com/mruby/mruby,4209,2019-01-01T13:36:33Z,2019-01-02T02:40:33Z,2019-01-02T09:13:30Z,MERGED,True,147,90,5,https://github.com/shuujii,range: Embed edges in RRange on boxing environment.,1,[],https://github.com/mruby/mruby/pull/4209,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4209,"Breaking changes
Developers must use following APIs for accessing attributes of RRange
because RRange structure depends on boxing setting.

mrb_range_beg
mrb_range_end
mrb_range_excl_p","Breaking changes
Developers must use following APIs for accessing attributes of RRange
because RRange structure depends on boxing setting.

mrb_range_beg
mrb_range_end
mrb_range_excl_p",True,{}
mruby/mruby,https://github.com/mruby/mruby,4210,2019-01-03T09:53:42Z,2019-01-04T05:39:21Z,2019-01-27T01:16:54Z,MERGED,True,142,0,3,https://github.com/dearblue,Add enumerator chain feature (CRuby-2.6 compatible),2,[],https://github.com/mruby/mruby/pull/4210,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4210,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4211,2019-01-03T09:55:29Z,2019-01-04T05:32:20Z,2019-01-27T01:16:53Z,MERGED,True,48,0,4,https://github.com/dearblue,Add proc composition feature (CRuby-2.6 compatible),2,[],https://github.com/mruby/mruby/pull/4211,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4211,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4212,2019-01-03T10:26:52Z,2019-01-04T05:27:58Z,2019-01-16T14:58:02Z,MERGED,True,0,8,1,https://github.com/shuujii,pack: Remove redundant float check in pack_utf8(),1,[],https://github.com/mruby/mruby/pull/4212,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4212,The argument is converted to fixnum before calling.,The argument is converted to fixnum before calling.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4213,2019-01-03T11:11:00Z,2019-01-04T05:39:05Z,2019-01-16T14:57:53Z,MERGED,True,108,123,2,https://github.com/shuujii,range: Refactor range.h/range.c,1,[],https://github.com/mruby/mruby/pull/4213,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4213,"Functions order, name, linkage and so on.","Functions order, name, linkage and so on.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4215,2019-01-04T11:36:11Z,2019-01-04T11:49:43Z,2019-01-16T14:58:08Z,MERGED,True,5,14,3,https://github.com/shuujii,Integrate mrblib/float.rb into src/numeric.c,1,[],https://github.com/mruby/mruby/pull/4215,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4215,"Avoid hack for MRB_WITHOUT_FLOAT in build scripts
Avoid runtime dispatch for MRB_WITHOUT_FLOAT","Avoid hack for MRB_WITHOUT_FLOAT in build scripts
Avoid runtime dispatch for MRB_WITHOUT_FLOAT",True,{}
mruby/mruby,https://github.com/mruby/mruby,4216,2019-01-05T11:44:12Z,2019-01-06T11:59:23Z,2019-01-16T14:57:41Z,MERGED,True,28,2,3,https://github.com/shuujii,Add `assert_same` and `assert_not_same`,1,[],https://github.com/mruby/mruby/pull/4216,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4216,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4217,2019-01-06T14:17:00Z,2019-01-07T09:16:27Z,2019-01-16T14:57:39Z,MERGED,True,5,1,1,https://github.com/shuujii,Fix `0.0` and `-0.0` handling.,1,[],https://github.com/mruby/mruby/pull/4217,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4217,"Fix the following issue:
Good
$ bin/mruby -e 'p(-0.0)' #=> ""-0""

Bad
$ bin/mruby -e 'a=0.0; p(-0.0)' #=> ""0""","Fix the following issue:
Good
$ bin/mruby -e 'p(-0.0)' #=> ""-0""

Bad
$ bin/mruby -e 'a=0.0; p(-0.0)' #=> ""0""",True,{}
mruby/mruby,https://github.com/mruby/mruby,4217,2019-01-06T14:17:00Z,2019-01-07T09:16:27Z,2019-01-16T14:57:39Z,MERGED,True,5,1,1,https://github.com/shuujii,Fix `0.0` and `-0.0` handling.,1,[],https://github.com/mruby/mruby/pull/4217,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4217#issuecomment-451810958,"Fix the following issue:
Good
$ bin/mruby -e 'p(-0.0)' #=> ""-0""

Bad
$ bin/mruby -e 'a=0.0; p(-0.0)' #=> ""0""","Ruby, Python, Node distinguish 0.0 and -0.0. Should we unify positive and negative zeros?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4217,2019-01-06T14:17:00Z,2019-01-07T09:16:27Z,2019-01-16T14:57:39Z,MERGED,True,5,1,1,https://github.com/shuujii,Fix `0.0` and `-0.0` handling.,1,[],https://github.com/mruby/mruby/pull/4217,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4217#issuecomment-451829809,"Fix the following issue:
Good
$ bin/mruby -e 'p(-0.0)' #=> ""-0""

Bad
$ bin/mruby -e 'a=0.0; p(-0.0)' #=> ""0""","Oops, I made mistake. Let me review the patch again.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4218,2019-01-08T11:30:33Z,2019-01-08T12:35:51Z,2019-01-08T12:35:51Z,MERGED,True,34,9,2,https://github.com/take-cheeze,Add `Time` object creation API,1,[],https://github.com/mruby/mruby/pull/4218,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4218,Because the only way to create Time object is to call methods of mruby.,Because the only way to create Time object is to call methods of mruby.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4219,2019-01-08T11:59:09Z,2019-01-08T12:42:51Z,2019-01-16T14:57:44Z,MERGED,True,41,3,3,https://github.com/shuujii,Fix dump/load float literal evaluate to infinity,1,[],https://github.com/mruby/mruby/pull/4219,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4219,"Example:
# example.rb
p(2e308)
p(-2e308)
Good:
$ bin/mruby example.rb
inf
-inf

Bad:
$ bin/mrbc example.rb
$ bin/mruby -b example.mrb
0
-0

Cause:
Float infinity representation is inf on dump and it is converted by
corresponding String#to_f on load.
Treatment:

Introduce new representations (i: +infinity, I: -infinity)
Allow old representations (inf, -inf, infinity, -infinity) too
Raise error for unknown representations (use corresponding Kernel#Float)","Example:
# example.rb
p(2e308)
p(-2e308)
Good:
$ bin/mruby example.rb
inf
-inf

Bad:
$ bin/mrbc example.rb
$ bin/mruby -b example.mrb
0
-0

Cause:
Float infinity representation is inf on dump and it is converted by
corresponding String#to_f on load.
Treatment:

Introduce new representations (i: +infinity, I: -infinity)
Allow old representations (inf, -inf, infinity, -infinity) too
Raise error for unknown representations (use corresponding Kernel#Float)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4220,2019-01-09T11:01:16Z,2019-01-10T00:19:18Z,2019-01-13T00:31:29Z,MERGED,True,1,1,1,https://github.com/shuujii,"Change the order of ""expected"" and ""actual"" in test",1,[],https://github.com/mruby/mruby/pull/4220,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4220,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4221,2019-01-10T14:25:08Z,2019-01-10T23:47:03Z,2019-01-13T00:31:26Z,MERGED,True,2,7,1,https://github.com/shuujii,Remove duplicate code in numeric.c,1,[],https://github.com/mruby/mruby/pull/4221,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4221,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4222,2019-01-11T11:08:25Z,2019-01-14T10:13:49Z,2019-01-16T14:57:18Z,MERGED,True,2,2,1,https://github.com/shuujii,Use `%g` instead of `%e` for float representation in dump format,1,[],https://github.com/mruby/mruby/pull/4222,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4222,%g use shorter representation than %e.,%g use shorter representation than %e.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4224,2019-01-12T13:35:27Z,2019-01-12T23:03:15Z,2019-01-13T00:31:23Z,MERGED,True,2,2,1,https://github.com/shuujii,Use `__send__` instead of `send`; ref #4207,1,[],https://github.com/mruby/mruby/pull/4224,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4224,"By the way, I don't know whether __send__ is needed in the test ...","By the way, I don't know whether __send__ is needed in the test ...",True,{}
mruby/mruby,https://github.com/mruby/mruby,4225,2019-01-13T11:58:23Z,2019-01-14T10:13:09Z,2019-09-10T08:13:15Z,MERGED,True,81,4,3,https://github.com/shuujii,Improve compatibility to CRuby for `Float#to_s`,2,[],https://github.com/mruby/mruby/pull/4225,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4225,"Bfore:
p Float::INFINITY.to_s  #=> ""inf""
p 50.0.to_s             #=> ""50""
p 1e20.to_s             #=> ""1e+20""
After / CRuby:
p Float::INFINITY.to_s  #=> ""Infinity""
p 50.0.to_s             #=> ""50.0""
p 1e20.to_s             #=> ""1.0e+20""","Bfore:
p Float::INFINITY.to_s  #=> ""inf""
p 50.0.to_s             #=> ""50""
p 1e20.to_s             #=> ""1e+20""
After / CRuby:
p Float::INFINITY.to_s  #=> ""Infinity""
p 50.0.to_s             #=> ""50.0""
p 1e20.to_s             #=> ""1.0e+20""",True,{}
mruby/mruby,https://github.com/mruby/mruby,4225,2019-01-13T11:58:23Z,2019-01-14T10:13:09Z,2019-09-10T08:13:15Z,MERGED,True,81,4,3,https://github.com/shuujii,Improve compatibility to CRuby for `Float#to_s`,2,[],https://github.com/mruby/mruby/pull/4225,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/4225#issuecomment-528670361,"Bfore:
p Float::INFINITY.to_s  #=> ""inf""
p 50.0.to_s             #=> ""50""
p 1e20.to_s             #=> ""1e+20""
After / CRuby:
p Float::INFINITY.to_s  #=> ""Infinity""
p 50.0.to_s             #=> ""50.0""
p 1e20.to_s             #=> ""1.0e+20""","Not a revert request but we should be careful that mruby promotes overflowed integer since mruby doesn't have BigInt.
Related issues cause by this PR:
mattn/mruby-json#40
pepabo/mruby-msd#13
mattn/mruby-json#42",True,{}
mruby/mruby,https://github.com/mruby/mruby,4225,2019-01-13T11:58:23Z,2019-01-14T10:13:09Z,2019-09-10T08:13:15Z,MERGED,True,81,4,3,https://github.com/shuujii,Improve compatibility to CRuby for `Float#to_s`,2,[],https://github.com/mruby/mruby/pull/4225,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4225#issuecomment-528852982,"Bfore:
p Float::INFINITY.to_s  #=> ""inf""
p 50.0.to_s             #=> ""50""
p 1e20.to_s             #=> ""1e+20""
After / CRuby:
p Float::INFINITY.to_s  #=> ""Infinity""
p 50.0.to_s             #=> ""50.0""
p 1e20.to_s             #=> ""1.0e+20""","OK, I will revert part of this PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4225,2019-01-13T11:58:23Z,2019-01-14T10:13:09Z,2019-09-10T08:13:15Z,MERGED,True,81,4,3,https://github.com/shuujii,Improve compatibility to CRuby for `Float#to_s`,2,[],https://github.com/mruby/mruby/pull/4225,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4225#issuecomment-529108394,"Bfore:
p Float::INFINITY.to_s  #=> ""inf""
p 50.0.to_s             #=> ""50""
p 1e20.to_s             #=> ""1e+20""
After / CRuby:
p Float::INFINITY.to_s  #=> ""Infinity""
p 50.0.to_s             #=> ""50.0""
p 1e20.to_s             #=> ""1.0e+20""",So I removed explicit .0 addition at the end from Float#to_s. @take-cheeze could you check it solves mrbgems problems?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4225,2019-01-13T11:58:23Z,2019-01-14T10:13:09Z,2019-09-10T08:13:15Z,MERGED,True,81,4,3,https://github.com/shuujii,Improve compatibility to CRuby for `Float#to_s`,2,[],https://github.com/mruby/mruby/pull/4225,https://github.com/take-cheeze,5,https://github.com/mruby/mruby/pull/4225#issuecomment-529314164,"Bfore:
p Float::INFINITY.to_s  #=> ""inf""
p 50.0.to_s             #=> ""50""
p 1e20.to_s             #=> ""1e+20""
After / CRuby:
p Float::INFINITY.to_s  #=> ""Infinity""
p 50.0.to_s             #=> ""50.0""
p 1e20.to_s             #=> ""1.0e+20""",LGTM now,True,{}
mruby/mruby,https://github.com/mruby/mruby,4225,2019-01-13T11:58:23Z,2019-01-14T10:13:09Z,2019-09-10T08:13:15Z,MERGED,True,81,4,3,https://github.com/shuujii,Improve compatibility to CRuby for `Float#to_s`,2,[],https://github.com/mruby/mruby/pull/4225,https://github.com/matz,6,https://github.com/mruby/mruby/pull/4225#issuecomment-529440980,"Bfore:
p Float::INFINITY.to_s  #=> ""inf""
p 50.0.to_s             #=> ""50""
p 1e20.to_s             #=> ""1e+20""
After / CRuby:
p Float::INFINITY.to_s  #=> ""Infinity""
p 50.0.to_s             #=> ""50.0""
p 1e20.to_s             #=> ""1.0e+20""",Thank you.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4225,2019-01-13T11:58:23Z,2019-01-14T10:13:09Z,2019-09-10T08:13:15Z,MERGED,True,81,4,3,https://github.com/shuujii,Improve compatibility to CRuby for `Float#to_s`,2,[],https://github.com/mruby/mruby/pull/4225,https://github.com/shuujii,7,https://github.com/mruby/mruby/pull/4225#issuecomment-529823523,"Bfore:
p Float::INFINITY.to_s  #=> ""inf""
p 50.0.to_s             #=> ""50""
p 1e20.to_s             #=> ""1e+20""
After / CRuby:
p Float::INFINITY.to_s  #=> ""Infinity""
p 50.0.to_s             #=> ""50.0""
p 1e20.to_s             #=> ""1.0e+20""",Is it okay in the case of exponential notation? (e.g. 3.0e+45),True,{}
mruby/mruby,https://github.com/mruby/mruby,4225,2019-01-13T11:58:23Z,2019-01-14T10:13:09Z,2019-09-10T08:13:15Z,MERGED,True,81,4,3,https://github.com/shuujii,Improve compatibility to CRuby for `Float#to_s`,2,[],https://github.com/mruby/mruby/pull/4225,https://github.com/matz,8,https://github.com/mruby/mruby/pull/4225#issuecomment-529825034,"Bfore:
p Float::INFINITY.to_s  #=> ""inf""
p 50.0.to_s             #=> ""50""
p 1e20.to_s             #=> ""1e+20""
After / CRuby:
p Float::INFINITY.to_s  #=> ""Infinity""
p 50.0.to_s             #=> ""50.0""
p 1e20.to_s             #=> ""1.0e+20""","I think so. The only reason I tried to remove the trailing .0 is integer compatibility, so exponential notation is not included.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4226,2019-01-14T07:02:02Z,2019-01-15T02:00:05Z,2019-01-27T01:16:57Z,MERGED,True,1,3,1,https://github.com/dearblue,Build fails when set `conf.build_dir=<rel path>` and `conf.enable_cxx_exception`,1,[],https://github.com/mruby/mruby/pull/4226,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4226,"Build fails with the setting where conf.build_dir=<rel path> and conf.enable_cxx_exception are described in build_config.rb.


test_build_config.rb:
MRuby::Build.new do |conf|
  toolchain :gcc
  conf.build_dir = ""build/host""
  enable_cxx_exception
end


before patched:
$ MRUBY_CONFIG=test_build_config.rb ./minirake
(in /usr/home/dearblue/works/ruby/mruby.git)
rake aborted!
Don't know how to rake /usr/home/dearblue/works/ruby/mruby.git/build/host/mrbgems/mruby-compiler/core/y.tab.c



The MRuby::Build#compile_as_cxx method converts the path given as a rule to an absolute path, but this patch does not convert but gives it as it is.","Build fails with the setting where conf.build_dir=<rel path> and conf.enable_cxx_exception are described in build_config.rb.


test_build_config.rb:
MRuby::Build.new do |conf|
  toolchain :gcc
  conf.build_dir = ""build/host""
  enable_cxx_exception
end


before patched:
$ MRUBY_CONFIG=test_build_config.rb ./minirake
(in /usr/home/dearblue/works/ruby/mruby.git)
rake aborted!
Don't know how to rake /usr/home/dearblue/works/ruby/mruby.git/build/host/mrbgems/mruby-compiler/core/y.tab.c



The MRuby::Build#compile_as_cxx method converts the path given as a rule to an absolute path, but this patch does not convert but gives it as it is.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4227,2019-01-14T12:47:39Z,2019-01-15T01:57:45Z,2019-01-16T14:51:09Z,MERGED,True,3,0,1,https://github.com/shuujii,Ignore compiler temporary files (for `-save-temps` flag),1,[],https://github.com/mruby/mruby/pull/4227,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4227,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4228,2019-01-15T10:34:00Z,2019-01-15T11:09:00Z,2019-01-16T14:51:07Z,MERGED,True,11,8,1,https://github.com/shuujii,[ci skip] Sort `.gitignore`,1,[],https://github.com/mruby/mruby/pull/4228,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4228,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4230,2019-01-15T12:43:49Z,2019-01-15T13:27:41Z,2019-01-16T14:57:14Z,MERGED,True,41,18,3,https://github.com/shuujii,Fix coercing for first step counter in `Numeric#step`,1,[],https://github.com/mruby/mruby/pull/4230,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4230,"Before:
a=[]; 7.step(4, -3.0) { |c| a << c }; p a  #=> [7, 4.0]
After / Ruby:
a=[]; 7.step(4, -3.0) { |c| a << c }; p a  #=> [7.0, 4.0]","Before:
a=[]; 7.step(4, -3.0) { |c| a << c }; p a  #=> [7, 4.0]
After / Ruby:
a=[]; 7.step(4, -3.0) { |c| a << c }; p a  #=> [7.0, 4.0]",True,{}
mruby/mruby,https://github.com/mruby/mruby,4231,2019-01-16T10:46:07Z,2019-01-18T07:16:49Z,2019-01-25T01:54:27Z,MERGED,True,18,8,2,https://github.com/shuujii,Avoid runtime evaluation for `MRB_WITHOUT_FLOAT`,1,[],https://github.com/mruby/mruby/pull/4231,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4231,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4232,2019-01-16T10:48:09Z,2019-01-16T14:42:51Z,2019-01-16T14:51:00Z,CLOSED,False,1,5,2,https://github.com/shuujii,Remove special treatments for `MRB_WITHOUT_FLOAT` in build scripts,1,[],https://github.com/mruby/mruby/pull/4232,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4232,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4233,2019-01-16T14:55:43Z,2019-01-18T07:17:58Z,2019-01-25T01:54:24Z,MERGED,True,0,5,2,https://github.com/shuujii,Remove special treatments for `MRB_WITHOUT_FLOAT` in build scripts,1,[],https://github.com/mruby/mruby/pull/4233,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4233,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4234,2019-01-17T12:17:03Z,2019-01-18T07:16:20Z,2019-01-25T01:54:20Z,MERGED,True,7,9,1,https://github.com/shuujii,Fix assertion name for `Numeric#**` test,1,[],https://github.com/mruby/mruby/pull/4234,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4234,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4235,2019-01-18T14:33:19Z,2019-01-26T13:19:00Z,2019-01-27T04:11:30Z,MERGED,True,10,7,1,https://github.com/shuujii,Avoid a side effect when run Rake without execution of tasks,1,[],https://github.com/mruby/mruby/pull/4235,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4235,Avoid directory creation when run rake -T etc.,Avoid directory creation when run rake -T etc.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4236,2019-01-19T11:44:03Z,2019-01-20T01:30:13Z,2019-01-25T01:54:13Z,MERGED,True,0,0,2,https://github.com/shuujii,Remove `.gitkeep` files,1,[],https://github.com/mruby/mruby/pull/4236,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4236,"They are unneeded, I think.","They are unneeded, I think.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4237,2019-01-20T05:37:27Z,2019-01-26T13:33:23Z,2019-01-27T01:16:59Z,MERGED,True,3,2,1,https://github.com/dearblue,Fix memory leak `sval` when out of memory in `Data_Wrap_Struct()`,1,[],https://github.com/mruby/mruby/pull/4237,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4237,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4238,2019-01-20T11:00:51Z,2019-02-07T06:54:29Z,2019-02-08T00:35:46Z,MERGED,True,0,0,3,https://github.com/shuujii,Rename `mruby-bin-mruby-config` mrbgem to `mruby-bin-config`,1,[],https://github.com/mruby/mruby/pull/4238,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4238,"For brevity and consistency (e.g. mruby-bin-strip doesn't have mruby-
after bin-).","For brevity and consistency (e.g. mruby-bin-strip doesn't have mruby-
after bin-).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4240,2019-01-21T10:38:23Z,2019-01-25T13:47:56Z,2019-01-27T04:11:27Z,MERGED,True,4,25,1,https://github.com/shuujii,Use `assert_raise` and `assert_nothing_raised` in `mruby-sleep` tests,1,[],https://github.com/mruby/mruby/pull/4240,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4240,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4241,2019-01-22T10:39:27Z,2019-01-26T13:34:06Z,2019-01-27T04:11:24Z,MERGED,True,5,6,1,https://github.com/shuujii,Fix tests for `String#reverse` with `MRB_UTF8_STRING`,1,[],https://github.com/mruby/mruby/pull/4241,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4241,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4242,2019-01-23T12:20:55Z,2019-01-23T12:50:09Z,2019-01-25T01:54:06Z,MERGED,True,1,2,1,https://github.com/shuujii,[ci skip] Remove no meaning statement in `bm_app_lc_fizzbuzz.rb`,1,[],https://github.com/mruby/mruby/pull/4242,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4242,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4243,2019-01-24T11:47:42Z,2019-01-24T23:15:27Z,2019-01-28T02:15:27Z,MERGED,True,0,3,1,https://github.com/shuujii,Remove definition of `Kernel#sprintf` in `mruby-print`,1,[],https://github.com/mruby/mruby/pull/4243,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4243,Kernel#sprintf is defined in mruby-sprintf,Kernel#sprintf is defined in mruby-sprintf,True,{}
mruby/mruby,https://github.com/mruby/mruby,4243,2019-01-24T11:47:42Z,2019-01-24T23:15:27Z,2019-01-28T02:15:27Z,MERGED,True,0,3,1,https://github.com/shuujii,Remove definition of `Kernel#sprintf` in `mruby-print`,1,[],https://github.com/mruby/mruby/pull/4243,https://github.com/takahashim,2,https://github.com/mruby/mruby/pull/4243#issuecomment-457916935,Kernel#sprintf is defined in mruby-sprintf,"Kernel#sprintf is defined in mruby-sprintf

mruby-sprintf is just a mrbgem.  In some situations (such as bare metal environment with less memory, and only uses numeric values except debug logging to serial output), we may want to use mruby-print but not want to use mruby-sprintf.  So Kernel#sprintf might not be  defined, even if you can use puts and/or p in mruby-print.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4243,2019-01-24T11:47:42Z,2019-01-24T23:15:27Z,2019-01-28T02:15:27Z,MERGED,True,0,3,1,https://github.com/shuujii,Remove definition of `Kernel#sprintf` in `mruby-print`,1,[],https://github.com/mruby/mruby/pull/4243,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4243#issuecomment-457966586,Kernel#sprintf is defined in mruby-sprintf,"Yes, but we have no big reason to define sprintf in mruby-print gem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4243,2019-01-24T11:47:42Z,2019-01-24T23:15:27Z,2019-01-28T02:15:27Z,MERGED,True,0,3,1,https://github.com/shuujii,Remove definition of `Kernel#sprintf` in `mruby-print`,1,[],https://github.com/mruby/mruby/pull/4243,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4243#issuecomment-457979136,Kernel#sprintf is defined in mruby-sprintf,"sprintf in mruby-print merely raise NotImplementedError. Therefore there is no essential difference if the implementation isn't provided, I think.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4244,2019-01-24T11:54:43Z,2019-01-24T13:20:57Z,2019-01-25T01:54:02Z,MERGED,True,0,1,1,https://github.com/shuujii,Remove redundant `NULL` check for `mrb_malloc`,1,[],https://github.com/mruby/mruby/pull/4244,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4244,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4245,2019-01-25T11:03:44Z,2019-01-25T13:47:16Z,2019-01-27T04:11:20Z,MERGED,True,0,20,1,https://github.com/shuujii,Remove definition of `assert_nothing_raised` in `IO` test,1,[],https://github.com/mruby/mruby/pull/4245,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4245,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4246,2019-01-25T11:13:11Z,2019-01-25T13:46:13Z,2019-01-27T04:11:16Z,MERGED,True,8,8,1,https://github.com/shuujii,Use assertion methods in `File` test,1,[],https://github.com/mruby/mruby/pull/4246,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4246,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4247,2019-01-25T11:38:13Z,2019-01-25T13:45:09Z,2019-01-27T04:11:14Z,MERGED,True,0,4,1,https://github.com/shuujii,Remove unused file for `mruby-io` test,1,[],https://github.com/mruby/mruby/pull/4247,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4247,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4248,2019-01-26T09:54:04Z,2019-01-26T13:17:32Z,2019-01-27T04:11:05Z,MERGED,True,18,4,2,https://github.com/shuujii,Refine error message for time interval,1,[],https://github.com/mruby/mruby/pull/4248,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4248,"Time interval value can be zero, and float (in Kernel#sleep)","Time interval value can be zero, and float (in Kernel#sleep)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4249,2019-01-26T15:01:24Z,2019-01-27T02:41:31Z,2019-01-27T02:41:31Z,MERGED,True,2,2,1,https://github.com/takkaw,fix Time about carry-up and carry-down,1,[],https://github.com/mruby/mruby/pull/4249,https://github.com/takkaw,1,https://github.com/mruby/mruby/pull/4249,"The result of the following code are expected to be 0, but it is 1000000.

t = Time.utc 2015; 2000.times { t+=0.0005; } ; t.usec
=> 1000000
t = Time.utc 2015; 2000.times { t-=0.0005; } ; t.usec
=> 1000000

I change the used variables when carry-up and carry-down.","The result of the following code are expected to be 0, but it is 1000000.

t = Time.utc 2015; 2000.times { t+=0.0005; } ; t.usec
=> 1000000
t = Time.utc 2015; 2000.times { t-=0.0005; } ; t.usec
=> 1000000

I change the used variables when carry-up and carry-down.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4250,2019-01-27T01:10:38Z,2020-06-05T08:28:01Z,2020-06-05T14:55:21Z,CLOSED,False,245,49,9,https://github.com/dearblue,Fix problems with `mrb_open()` if occurs out of memory,18,[],https://github.com/mruby/mruby/pull/4250,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4250,"(This comment is a copied from #4239)
If out of memory occurs with mrb_open(), the process will be crashed by SIGABRT or SIGSEGV.
This behavior is undesirable for me as I try to generate multiple mrb_state.
This patch set corrects problems that occurred by simulating out of memory.
Thanks.
Potential issue
If mrb_XXX_gem_final() is called while initialization processing is not completed, problems may arise there.","(This comment is a copied from #4239)
If out of memory occurs with mrb_open(), the process will be crashed by SIGABRT or SIGSEGV.
This behavior is undesirable for me as I try to generate multiple mrb_state.
This patch set corrects problems that occurred by simulating out of memory.
Thanks.
Potential issue
If mrb_XXX_gem_final() is called while initialization processing is not completed, problems may arise there.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4250,2019-01-27T01:10:38Z,2020-06-05T08:28:01Z,2020-06-05T14:55:21Z,CLOSED,False,245,49,9,https://github.com/dearblue,Fix problems with `mrb_open()` if occurs out of memory,18,[],https://github.com/mruby/mruby/pull/4250,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4250#issuecomment-639336851,"(This comment is a copied from #4239)
If out of memory occurs with mrb_open(), the process will be crashed by SIGABRT or SIGSEGV.
This behavior is undesirable for me as I try to generate multiple mrb_state.
This patch set corrects problems that occurred by simulating out of memory.
Thanks.
Potential issue
If mrb_XXX_gem_final() is called while initialization processing is not completed, problems may arise there.",merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4251,2019-01-27T11:36:36Z,2019-02-07T22:19:41Z,2019-02-08T00:35:42Z,MERGED,True,4,28,3,https://github.com/shuujii,Remove no meaning statements in `mruby-io` tests,2,[],https://github.com/mruby/mruby/pull/4251,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4251,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4251,2019-01-27T11:36:36Z,2019-02-07T22:19:41Z,2019-02-08T00:35:42Z,MERGED,True,4,28,3,https://github.com/shuujii,Remove no meaning statements in `mruby-io` tests,2,[],https://github.com/mruby/mruby/pull/4251,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4251#issuecomment-457915845,,Let me check if CI failure was caused by the PR or instability of CI.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4252,2019-01-28T12:47:59Z,2019-01-28T14:14:22Z,2019-01-28T14:17:04Z,MERGED,True,28,5,3,https://github.com/shuujii,`class`/`module` expression  with empty body should return `nil`,1,[],https://github.com/mruby/mruby/pull/4252,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4252,"Before
p(class A end)          #=> A
p(class << self; end)   #=> #<Class:#<Object:0x7fdc3880e420>>
p(module B end)         #=> B
After/Ruby:
p(class A end)          #=> nil
p(class << self; end)   #=> nil
p(module B end)         #=> nil","Before
p(class A end)          #=> A
p(class << self; end)   #=> #<Class:#<Object:0x7fdc3880e420>>
p(module B end)         #=> B
After/Ruby:
p(class A end)          #=> nil
p(class << self; end)   #=> nil
p(module B end)         #=> nil",True,{}
mruby/mruby,https://github.com/mruby/mruby,4253,2019-01-29T11:24:02Z,2019-01-29T14:10:27Z,2019-02-08T00:35:40Z,MERGED,True,0,2,1,https://github.com/shuujii,Remove unused macro in `src/string.c`,1,[],https://github.com/mruby/mruby/pull/4253,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4253,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4254,2019-01-30T10:42:21Z,2019-01-31T07:20:12Z,2019-02-08T00:35:37Z,MERGED,True,1,1,1,https://github.com/shuujii,Remove unneeded `dup` in `Enumerator#initialize`,1,[],https://github.com/mruby/mruby/pull/4254,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4254,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4255,2019-01-31T12:28:49Z,2019-09-16T06:37:59Z,2019-09-23T00:37:33Z,MERGED,True,2,11,1,https://github.com/shuujii,`Enumerator#size` is not supported [ci skip],1,[],https://github.com/mruby/mruby/pull/4255,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4255,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4256,2019-02-01T07:03:03Z,2019-02-06T11:18:46Z,2019-02-08T00:35:36Z,MERGED,True,2,2,3,https://github.com/shuujii,Move `NONE` to `mrblib/enum.rb`,1,[],https://github.com/mruby/mruby/pull/4256,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4256,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4258,2019-02-02T10:06:06Z,2019-02-02T12:14:56Z,2019-02-02T23:36:02Z,MERGED,True,23,17,1,https://github.com/shuujii,Extend only when necessary in `lib/mruby-core-ext.rb`,1,[],https://github.com/mruby/mruby/pull/4258,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4258,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4258,2019-02-02T10:06:06Z,2019-02-02T12:14:56Z,2019-02-02T23:36:02Z,MERGED,True,23,17,1,https://github.com/shuujii,Extend only when necessary in `lib/mruby-core-ext.rb`,1,[],https://github.com/mruby/mruby/pull/4258,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4258#issuecomment-459960546,,Maybe we should drop 1.8 support soon. But thank you anyway.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4258,2019-02-02T10:06:06Z,2019-02-02T12:14:56Z,2019-02-02T23:36:02Z,MERGED,True,23,17,1,https://github.com/shuujii,Extend only when necessary in `lib/mruby-core-ext.rb`,1,[],https://github.com/mruby/mruby/pull/4258,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4258#issuecomment-460008936,,"Maybe we should drop 1.8 support soon.

That's good news for me 😄",True,{}
mruby/mruby,https://github.com/mruby/mruby,4259,2019-02-03T13:04:13Z,2019-02-03T22:35:01Z,2019-02-08T00:35:35Z,MERGED,True,2,2,2,https://github.com/shuujii,Use `mrb->eException_class` instead of `mrb_class_get()`,1,[],https://github.com/mruby/mruby/pull/4259,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4259,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4260,2019-02-04T10:17:50Z,2019-02-04T12:11:06Z,2019-02-08T00:35:24Z,MERGED,True,45,16,4,https://github.com/shuujii,Fix `Symbol#size` for multi-byte characters with `MRB_UTF8_STRING`,1,[],https://github.com/mruby/mruby/pull/4260,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4260,"Before:
p :あ.size  #=> 3
After:
p :あ.size  #=> 1","Before:
p :あ.size  #=> 3
After:
p :あ.size  #=> 1",True,{}
mruby/mruby,https://github.com/mruby/mruby,4261,2019-02-05T10:14:19Z,2019-02-05T13:50:57Z,2019-02-08T00:35:22Z,MERGED,True,6,22,1,https://github.com/shuujii,Fix markup and remove unneeded comment for doc in `src/string.c` [ci skip],1,[],https://github.com/mruby/mruby/pull/4261,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4261,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4262,2019-02-05T10:16:55Z,2019-02-05T13:51:27Z,2019-02-08T00:35:20Z,MERGED,True,0,1,1,https://github.com/shuujii,Remove old comment for `mrb_sym2name_len()` [ci skip],1,[],https://github.com/mruby/mruby/pull/4262,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4262,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4263,2019-02-06T10:29:41Z,2019-02-06T12:26:44Z,2019-02-08T00:35:18Z,CLOSED,False,0,14,1,https://github.com/shuujii,Remove definition of `MRuby::Build#exefile` in `mruby-bin-mruby-config`,1,[],https://github.com/mruby/mruby/pull/4263,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4263,It's defined in lib/mruby/build.rb.,It's defined in lib/mruby/build.rb.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4263,2019-02-06T10:29:41Z,2019-02-06T12:26:44Z,2019-02-08T00:35:18Z,CLOSED,False,0,14,1,https://github.com/shuujii,Remove definition of `MRuby::Build#exefile` in `mruby-bin-mruby-config`,1,[],https://github.com/mruby/mruby/pull/4263,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4263#issuecomment-460987889,It's defined in lib/mruby/build.rb.,appveyor reports an error. maybe we should update lib/mruby/build.rb as well?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4263,2019-02-06T10:29:41Z,2019-02-06T12:26:44Z,2019-02-08T00:35:18Z,CLOSED,False,0,14,1,https://github.com/shuujii,Remove definition of `MRuby::Build#exefile` in `mruby-bin-mruby-config`,1,[],https://github.com/mruby/mruby/pull/4263,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4263#issuecomment-461005648,It's defined in lib/mruby/build.rb.,"Sorry, I will fix it and recreate pull request.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4264,2019-02-06T13:24:43Z,2019-02-06T22:05:06Z,2019-02-08T00:35:18Z,MERGED,True,4,15,2,https://github.com/shuujii,Integrate definition of `MRuby::Build#exefile`,1,[],https://github.com/mruby/mruby/pull/4264,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4264,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4265,2019-02-07T14:55:34Z,2019-02-08T00:35:51Z,2019-02-08T00:55:23Z,MERGED,True,13,12,2,https://github.com/shuujii,Fix `Enumerator#(initialize|inspect)` for `nil`/`false`,1,[],https://github.com/mruby/mruby/pull/4265,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4265,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4265,2019-02-07T14:55:34Z,2019-02-08T00:35:51Z,2019-02-08T00:55:23Z,MERGED,True,13,12,2,https://github.com/shuujii,Fix `Enumerator#(initialize|inspect)` for `nil`/`false`,1,[],https://github.com/mruby/mruby/pull/4265,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4265#issuecomment-461644331,,"Enumerator.new(obj,method,args..) form has been deprecated. So I will remove this altogether. But thank you anyway.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4266,2019-02-08T09:32:25Z,2019-02-08T14:28:39Z,2019-02-10T11:08:56Z,MERGED,True,7,9,2,https://github.com/shuujii,Add `NoMethodError` tests to `mruby-enumerator`,1,[],https://github.com/mruby/mruby/pull/4266,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4266,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4268,2019-02-09T11:37:36Z,2019-02-09T23:58:11Z,2019-02-16T13:03:19Z,MERGED,True,1,0,1,https://github.com/dearblue,NULL safed `mrb_open_core()`,1,[],https://github.com/mruby/mruby/pull/4268,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4268,"I am lazy, so I'm happy if I can pass NULL to mrb_open_core().","I am lazy, so I'm happy if I can pass NULL to mrb_open_core().",True,{}
mruby/mruby,https://github.com/mruby/mruby,4269,2019-02-09T13:03:43Z,2019-02-12T22:10:14Z,2019-02-13T00:08:58Z,MERGED,True,13,25,1,https://github.com/shuujii,Always through `assert_true` for assertion methods in `test/assert.rb`,1,[],https://github.com/mruby/mruby/pull/4269,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4269,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4271,2019-02-10T11:14:07Z,2019-03-02T06:58:44Z,2019-03-02T07:19:19Z,CLOSED,False,2,2,1,https://github.com/shuujii,`bin=` should be an instance method in `MRuby::Gem::Specification`,1,[],https://github.com/mruby/mruby/pull/4271,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4271,"Array#flatten is unneeded because we should use bins= for passing an
array, I think.","Array#flatten is unneeded because we should use bins= for passing an
array, I think.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4271,2019-02-10T11:14:07Z,2019-03-02T06:58:44Z,2019-03-02T07:19:19Z,CLOSED,False,2,2,1,https://github.com/shuujii,`bin=` should be an instance method in `MRuby::Gem::Specification`,1,[],https://github.com/mruby/mruby/pull/4271,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4271#issuecomment-462124766,"Array#flatten is unneeded because we should use bins= for passing an
array, I think.","If we remove flatten, the assignment should be @bin = bin I think.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4271,2019-02-10T11:14:07Z,2019-03-02T06:58:44Z,2019-03-02T07:19:19Z,CLOSED,False,2,2,1,https://github.com/shuujii,`bin=` should be an instance method in `MRuby::Gem::Specification`,1,[],https://github.com/mruby/mruby/pull/4271,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4271#issuecomment-462198023,"Array#flatten is unneeded because we should use bins= for passing an
array, I think.","Thank you for your comment. I interpreted your comment as follows:

bin= should accept both one name (String) and multipule names (Array).
If we don't use flatten, the assignment must be @bins = bin etc for
an array.

But bin= accept both (one name and multiple names) and bins= (just an
attr writer) accept multiple names only is unnatural for me.
I think it should be one of the following:

bin= accept one name only and bins= accept multiple names only (this PR).
bins= accept both and we remove bin=.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4271,2019-02-10T11:14:07Z,2019-03-02T06:58:44Z,2019-03-02T07:19:19Z,CLOSED,False,2,2,1,https://github.com/shuujii,`bin=` should be an instance method in `MRuby::Gem::Specification`,1,[],https://github.com/mruby/mruby/pull/4271,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4271#issuecomment-468893214,"Array#flatten is unneeded because we should use bins= for passing an
array, I think.","Hmm, it seems no one uses bin= and uses bins << path instead. So I am going to remove the method.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4272,2019-02-11T12:25:19Z,2019-02-11T13:47:44Z,2019-02-13T00:08:51Z,MERGED,True,2,6,1,https://github.com/shuujii,Small refactoring in `codegen.c`,1,[],https://github.com/mruby/mruby/pull/4272,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4272,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4273,2019-02-12T12:49:54Z,2019-02-12T22:09:07Z,2019-02-13T00:08:53Z,MERGED,True,18,13,1,https://github.com/shuujii,Refine `mrbgems/mruby-bin-config/mrbgem.rake`,1,[],https://github.com/mruby/mruby/pull/4273,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4273,"Use MRuby::Gem::Specification
Fix a binary name is added to MRuby::Build#bins multiple times
Close file immediately (avoid using open(...).read)
Simplify","Use MRuby::Gem::Specification
Fix a binary name is added to MRuby::Build#bins multiple times
Close file immediately (avoid using open(...).read)
Simplify",True,{}
mruby/mruby,https://github.com/mruby/mruby,4274,2019-02-13T13:10:23Z,2019-02-14T04:10:49Z,2019-02-18T08:00:09Z,MERGED,True,75,68,1,https://github.com/shuujii,Lazy message/diff creation for assertion in `test/assert.rb`,1,[],https://github.com/mruby/mruby/pull/4274,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4274,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4274,2019-02-13T13:10:23Z,2019-02-14T04:10:49Z,2019-02-18T08:00:09Z,MERGED,True,75,68,1,https://github.com/shuujii,Lazy message/diff creation for assertion in `test/assert.rb`,1,[],https://github.com/mruby/mruby/pull/4274,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4274#issuecomment-463226961,,The commit message describes only part of the changes. Can you update?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4274,2019-02-13T13:10:23Z,2019-02-14T04:10:49Z,2019-02-18T08:00:09Z,MERGED,True,75,68,1,https://github.com/shuujii,Lazy message/diff creation for assertion in `test/assert.rb`,1,[],https://github.com/mruby/mruby/pull/4274,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4274#issuecomment-463434642,,I did force push for updating commit message. Please review it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4274,2019-02-13T13:10:23Z,2019-02-14T04:10:49Z,2019-02-18T08:00:09Z,MERGED,True,75,68,1,https://github.com/shuujii,Lazy message/diff creation for assertion in `test/assert.rb`,1,[],https://github.com/mruby/mruby/pull/4274,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4274#issuecomment-463481877,,Looks good now. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4275,2019-02-14T09:51:54Z,2019-02-14T11:12:04Z,2019-02-18T07:59:18Z,MERGED,True,2,2,1,https://github.com/shuujii,Add `const` to `pack_table` in `src/symbol.c`,1,[],https://github.com/mruby/mruby/pull/4275,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4275,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4276,2019-02-14T09:52:27Z,2019-02-15T07:34:18Z,2019-02-18T07:59:16Z,MERGED,True,3,3,1,https://github.com/shuujii,Use `mrb_assert()` for checking `sym` in `sym_inline_unpack()`,1,[],https://github.com/mruby/mruby/pull/4276,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4276,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4277,2019-02-15T11:10:42Z,2019-02-15T11:12:49Z,2019-02-18T07:59:13Z,MERGED,True,14,19,1,https://github.com/shuujii,Extract code fragment for unpacking into method in `sym_inline_unpack()`,1,[],https://github.com/mruby/mruby/pull/4277,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4277,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4278,2019-02-16T12:15:23Z,2019-02-16T12:52:40Z,2019-02-18T07:59:12Z,MERGED,True,8,21,1,https://github.com/shuujii,Add length argument for `sym_inline_unpack()`,1,[],https://github.com/mruby/mruby/pull/4278,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4278,"sym_inline_unpack_with_bit() is moved inside of sym_inline_unpack()
because this is used only one place.","sym_inline_unpack_with_bit() is moved inside of sym_inline_unpack()
because this is used only one place.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4279,2019-02-16T13:00:04Z,2019-02-17T13:13:22Z,2019-02-17T14:53:09Z,MERGED,True,9,2,2,https://github.com/dearblue,"Fix destroyed ""inline packed symbols"" on 32 bit mode with `MRB_WORD_BOXING`",3,[],https://github.com/mruby/mruby/pull/4279,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4279,"When building with MRB_WORD_BOXING in 32 bit mode, symbols are destroyed depending on the character string length.
$ build/host32-word/bin/mruby -e 'p [:zzzzzz, :ZZZZZ]'
[:zzzzb, :ZZZd]

In 32-bit mode with MRB_WORD_BOXING, only the value of mrb_sym is guaranteed 24 bits, there are only 4 spaces for lower case letters and 3 letters for numeral alphabet mixture.
For this reason, I restricted the length of the character string that can be inline packed symbols with this combination of configurations.
The ""inline packed symbols"" is nice idea 👍","When building with MRB_WORD_BOXING in 32 bit mode, symbols are destroyed depending on the character string length.
$ build/host32-word/bin/mruby -e 'p [:zzzzzz, :ZZZZZ]'
[:zzzzb, :ZZZd]

In 32-bit mode with MRB_WORD_BOXING, only the value of mrb_sym is guaranteed 24 bits, there are only 4 spaces for lower case letters and 3 letters for numeral alphabet mixture.
For this reason, I restricted the length of the character string that can be inline packed symbols with this combination of configurations.
The ""inline packed symbols"" is nice idea 👍",True,{}
mruby/mruby,https://github.com/mruby/mruby,4279,2019-02-16T13:00:04Z,2019-02-17T13:13:22Z,2019-02-17T14:53:09Z,MERGED,True,9,2,2,https://github.com/dearblue,"Fix destroyed ""inline packed symbols"" on 32 bit mode with `MRB_WORD_BOXING`",3,[],https://github.com/mruby/mruby/pull/4279,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4279#issuecomment-464345653,"When building with MRB_WORD_BOXING in 32 bit mode, symbols are destroyed depending on the character string length.
$ build/host32-word/bin/mruby -e 'p [:zzzzzz, :ZZZZZ]'
[:zzzzb, :ZZZd]

In 32-bit mode with MRB_WORD_BOXING, only the value of mrb_sym is guaranteed 24 bits, there are only 4 spaces for lower case letters and 3 letters for numeral alphabet mixture.
For this reason, I restricted the length of the character string that can be inline packed symbols with this combination of configurations.
The ""inline packed symbols"" is nice idea 👍",I don't see any reference to MRB_WORD_BOXING in the patch. Does this work OK for the case?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4279,2019-02-16T13:00:04Z,2019-02-17T13:13:22Z,2019-02-17T14:53:09Z,MERGED,True,9,2,2,https://github.com/dearblue,"Fix destroyed ""inline packed symbols"" on 32 bit mode with `MRB_WORD_BOXING`",3,[],https://github.com/mruby/mruby/pull/4279,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4279#issuecomment-464347468,"When building with MRB_WORD_BOXING in 32 bit mode, symbols are destroyed depending on the character string length.
$ build/host32-word/bin/mruby -e 'p [:zzzzzz, :ZZZZZ]'
[:zzzzb, :ZZZd]

In 32-bit mode with MRB_WORD_BOXING, only the value of mrb_sym is guaranteed 24 bits, there are only 4 spaces for lower case letters and 3 letters for numeral alphabet mixture.
For this reason, I restricted the length of the character string that can be inline packed symbols with this combination of configurations.
The ""inline packed symbols"" is nice idea 👍","MRB_SYMBOL_BITSIZE that I previously entered in #4077 is defined only when there is MRB_WORD_BOXING.
This patch includes commits that have been modified as always defined.
This should result in MRB_SYMBOL_BITSIZE = 24 for 32 bit mode + MRB_WORD_BOXING, otherwise 32.


build_config.rb
MRuby::Build.new do
  toolchain :clang
  cc.defines << %w(MRB_INT32 MRB_WORD_BOXING)
  cc.flags << ""-m32""
  linker.flags << ""-m32""
  gem core: ""mruby-bin-mruby""
  gem core: ""mruby-print""
end


exec test code
$ ./build/host/bin/mruby -e 'p [:zzzzzz, :ZZZZZ]'
[:zzzzzz, :ZZZZZ]",True,{}
mruby/mruby,https://github.com/mruby/mruby,4280,2019-02-17T07:10:39Z,2019-02-17T13:12:20Z,2019-02-18T07:59:06Z,MERGED,True,4,3,1,https://github.com/shuujii,Refine dependencies for `mruby-config`,1,[],https://github.com/mruby/mruby/pull/4280,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4280,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4281,2019-02-17T12:38:04Z,2019-02-17T13:11:32Z,2019-02-17T13:21:04Z,MERGED,True,2,2,1,https://github.com/yui-knk,Fix typos,1,[],https://github.com/mruby/mruby/pull/4281,https://github.com/yui-knk,1,https://github.com/mruby/mruby/pull/4281,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4282,2019-02-18T07:56:57Z,2019-02-18T08:24:17Z,2019-02-23T01:50:24Z,MERGED,True,0,1,1,https://github.com/shuujii,Remove unneeded `memset()` in `src/backtrace.c`,1,[],https://github.com/mruby/mruby/pull/4282,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4282,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4283,2019-02-18T07:58:17Z,2019-02-18T08:24:49Z,2019-02-23T01:50:20Z,MERGED,True,1,1,1,https://github.com/shuujii,Reorder members in `struct backtrace_location`,1,[],https://github.com/mruby/mruby/pull/4283,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4283,"sizeof(struct backtrace_location) is 24 bytes -> 16 bytes in LP64
data model etc.","sizeof(struct backtrace_location) is 24 bytes -> 16 bytes in LP64
data model etc.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4284,2019-02-18T12:26:52Z,2019-02-18T12:50:09Z,2019-02-23T01:50:18Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `assert_same` instead of `assert_equal` in `Enumerable#reverse_each` test,1,[],https://github.com/mruby/mruby/pull/4284,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4284,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4285,2019-02-18T12:38:30Z,2019-02-18T12:47:42Z,2019-02-23T01:50:15Z,MERGED,True,3,3,3,https://github.com/shuujii,Fix wrong assertion method in some tests,1,[],https://github.com/mruby/mruby/pull/4285,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4285,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4286,2019-02-19T09:43:56Z,2019-02-19T11:44:17Z,2019-02-19T11:44:17Z,MERGED,True,40,3,6,https://github.com/kimushu,"mrdb: add ""info locals"" command",1,[],https://github.com/mruby/mruby/pull/4286,https://github.com/kimushu,1,https://github.com/mruby/mruby/pull/4286,"Currently, we cannot get a list of local variables in mrdb because mrdb's eval command uses instance_eval to evaluate expressions.
To be more precise, eval local_variables always prints [:e] because evaluation is implemented as instance_eval(""begin\n#{expr}\nrescue => e\ne\nend"") in mrb_debug_eval()
$ cat test.rb
foo = :bar
$ ./bin/mrdb test.rb
(test.rb:1) eval local_variables
$1 = [:e]   #### This is NOT what we want...
(test.rb:1)

This PR adds info locals command, which can print expected names of local variables by evaluating local_variables directly.
$ cat test.rb
foo = :bar
$ ./bin/mrdb test.rb
(test.rb:1) info locals
$1 = [:foo]
(test.rb:1)","Currently, we cannot get a list of local variables in mrdb because mrdb's eval command uses instance_eval to evaluate expressions.
To be more precise, eval local_variables always prints [:e] because evaluation is implemented as instance_eval(""begin\n#{expr}\nrescue => e\ne\nend"") in mrb_debug_eval()
$ cat test.rb
foo = :bar
$ ./bin/mrdb test.rb
(test.rb:1) eval local_variables
$1 = [:e]   #### This is NOT what we want...
(test.rb:1)

This PR adds info locals command, which can print expected names of local variables by evaluating local_variables directly.
$ cat test.rb
foo = :bar
$ ./bin/mrdb test.rb
(test.rb:1) info locals
$1 = [:foo]
(test.rb:1)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4287,2019-02-19T11:23:58Z,2019-02-19T11:31:11Z,2019-02-23T01:50:13Z,MERGED,True,39,37,3,https://github.com/shuujii,Use more appropriate assertion methods,1,[],https://github.com/mruby/mruby/pull/4287,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4287,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4288,2019-02-20T10:16:34Z,2019-02-20T10:42:01Z,2019-02-23T01:50:11Z,MERGED,True,2,2,1,https://github.com/shuujii,`assert_true`/`assert_false` should pass when actual is only `true`/`false`,1,[],https://github.com/mruby/mruby/pull/4288,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4288,"For the following reasons:

Previous behavior is confusable because it's different from test/unit rubygem's assert_true
Tests may pass unintentionally in an inappropriate way; ref #4285 #4287","For the following reasons:

Previous behavior is confusable because it's different from test/unit rubygem's assert_true
Tests may pass unintentionally in an inappropriate way; ref #4285 #4287",True,{}
mruby/mruby,https://github.com/mruby/mruby,4288,2019-02-20T10:16:34Z,2019-02-20T10:42:01Z,2019-02-23T01:50:11Z,MERGED,True,2,2,1,https://github.com/shuujii,`assert_true`/`assert_false` should pass when actual is only `true`/`false`,1,[],https://github.com/mruby/mruby/pull/4288,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4288#issuecomment-465525166,"For the following reasons:

Previous behavior is confusable because it's different from test/unit rubygem's assert_true
Tests may pass unintentionally in an inappropriate way; ref #4285 #4287","This is a bit controversial. In Ruby, there's no boolean. Thus assert_true can accept any truthy value in theory. But since it can detect more errors (like #4285), I apply it anyway. Maybe reverted in the future.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4288,2019-02-20T10:16:34Z,2019-02-20T10:42:01Z,2019-02-23T01:50:11Z,MERGED,True,2,2,1,https://github.com/shuujii,`assert_true`/`assert_false` should pass when actual is only `true`/`false`,1,[],https://github.com/mruby/mruby/pull/4288,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4288#issuecomment-465601910,"For the following reasons:

Previous behavior is confusable because it's different from test/unit rubygem's assert_true
Tests may pass unintentionally in an inappropriate way; ref #4285 #4287","assert is provided as a method that accept truthy value in test/unit and
minitest rubygem, but mruby's assert is different behavior. Therefor we
should add other method (e.g. assert_truthy) for this purpose if
necessary, I think.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4288,2019-02-20T10:16:34Z,2019-02-20T10:42:01Z,2019-02-23T01:50:11Z,MERGED,True,2,2,1,https://github.com/shuujii,`assert_true`/`assert_false` should pass when actual is only `true`/`false`,1,[],https://github.com/mruby/mruby/pull/4288,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4288#issuecomment-465607120,"For the following reasons:

Previous behavior is confusable because it's different from test/unit rubygem's assert_true
Tests may pass unintentionally in an inappropriate way; ref #4285 #4287",Probably. I will revisit the issue when it (assert_truthy) is really needed.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4290,2019-02-21T09:05:18Z,2019-02-21T13:37:09Z,2019-02-23T01:50:08Z,MERGED,True,7,9,1,https://github.com/shuujii,Refactor exception handling in `assert`,1,[],https://github.com/mruby/mruby/pull/4290,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4290,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4291,2019-02-21T10:58:28Z,2019-02-21T13:40:18Z,2019-02-23T01:49:19Z,MERGED,True,5,5,1,https://github.com/shuujii,Fix typo in `lib/mruby/build/command.rb`,1,[],https://github.com/mruby/mruby/pull/4291,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4291,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4293,2019-02-22T11:53:05Z,2019-02-23T01:31:41Z,2019-02-23T01:49:17Z,MERGED,True,8,46,3,https://github.com/shuujii,Integrate `init_mrbtest.c` to `driver.c` in `mruby-test` mrbgem,1,[],https://github.com/mruby/mruby/pull/4293,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4293,"mrbgemtest_init() is needed if DISABLE_GEMS is enabled because core
tests are run as part of mruby-test mrbgem (moreover, DISABLE_GEMS is
disabled when enable_test is used in build config).
For the same reason mrb_open_core() etc for core tests is unneeded.","mrbgemtest_init() is needed if DISABLE_GEMS is enabled because core
tests are run as part of mruby-test mrbgem (moreover, DISABLE_GEMS is
disabled when enable_test is used in build config).
For the same reason mrb_open_core() etc for core tests is unneeded.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4294,2019-02-23T09:48:47Z,2019-02-25T14:49:17Z,2019-02-28T10:58:28Z,MERGED,True,3,7,4,https://github.com/shuujii,Remove explicit set of `DISABLE_GEMS`,1,[],https://github.com/mruby/mruby/pull/4294,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4294,DISABLE_GEMS is automatically set (or unset); ref #790,DISABLE_GEMS is automatically set (or unset); ref #790,True,{}
mruby/mruby,https://github.com/mruby/mruby,4295,2019-02-24T08:02:00Z,2019-02-24T09:13:56Z,2019-02-24T12:41:30Z,MERGED,True,15,16,1,https://github.com/wataash,Move `Object#dig` to `Struct#dig`,1,[],https://github.com/mruby/mruby/pull/4295,https://github.com/wataash,1,https://github.com/mruby/mruby/pull/4295,"This method seems to be mistakenly put into Object instead of Struct
since it's in struct.rb and daf8394 says:

add #dig to Array,Hash and Struct","This method seems to be mistakenly put into Object instead of Struct
since it's in struct.rb and daf8394 says:

add #dig to Array,Hash and Struct",True,{}
mruby/mruby,https://github.com/mruby/mruby,4296,2019-02-24T10:39:19Z,2019-02-25T14:48:05Z,2019-03-04T02:07:20Z,MERGED,True,1,1,1,https://github.com/shuujii,Refine mrbgem name in assertion failure/skip message for core test,1,[],https://github.com/mruby/mruby/pull/4296,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4296,"Before
Skip: GC in rescue => backtrace isn't available (mrbgems: mruby-test)

After
Skip: GC in rescue => backtrace isn't available (core)","Before
Skip: GC in rescue => backtrace isn't available (mrbgems: mruby-test)

After
Skip: GC in rescue => backtrace isn't available (core)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4297,2019-02-25T11:57:10Z,2019-02-25T14:46:24Z,2019-02-28T10:58:20Z,MERGED,True,10,12,1,https://github.com/shuujii,Refactor `src/backtrace.c`,1,[],https://github.com/mruby/mruby/pull/4297,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4297,"Move calling mrb_debug_get_filename() to after lineno check.
Remove unneeded array check in print_backtrace().
Add a few const qualifier.","Move calling mrb_debug_get_filename() to after lineno check.
Remove unneeded array check in print_backtrace().
Add a few const qualifier.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4298,2019-02-26T12:34:28Z,2019-02-26T12:49:32Z,2019-02-28T10:58:17Z,MERGED,True,0,3,1,https://github.com/shuujii,Remove unneeded `const_defined?(:Time)` in `mruby-io` test,1,[],https://github.com/mruby/mruby/pull/4298,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4298,mruby-time is included in test dependencies.,mruby-time is included in test dependencies.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4299,2019-02-26T12:51:02Z,2019-02-26T22:29:17Z,2019-02-28T10:58:16Z,MERGED,True,4,2,1,https://github.com/shuujii,Remove unneeded `=>` in test skip/error messages,1,[],https://github.com/mruby/mruby/pull/4299,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4299,"Before
Skip: File.expand_path (with ENV) =>  (mrbgems: mruby-io)

After
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)","Before
Skip: File.expand_path (with ENV) =>  (mrbgems: mruby-io)

After
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4300,2019-02-27T11:46:14Z,2019-02-27T13:32:32Z,2019-02-28T10:58:14Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `yywarning()` instead of `yywarning_s()` for `MRB_WITHOUT_FLOAT`,1,[],https://github.com/mruby/mruby/pull/4300,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4300,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4301,2019-02-27T11:46:32Z,2019-02-28T03:55:26Z,2019-02-28T10:58:13Z,MERGED,True,1,1,1,https://github.com/shuujii,Remove unnecessary backticks; ref #2858,1,[],https://github.com/mruby/mruby/pull/4301,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4301,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4301,2019-02-27T11:46:32Z,2019-02-28T03:55:26Z,2019-02-28T10:58:13Z,MERGED,True,1,1,1,https://github.com/shuujii,Remove unnecessary backticks; ref #2858,1,[],https://github.com/mruby/mruby/pull/4301,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4301#issuecomment-467862396,,This quoting style (`something') is not uncommon in the mruby (and CRuby) source (e.g. mruby-method/src/method.c#L330) . Should we change them uniformly?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4301,2019-02-27T11:46:32Z,2019-02-28T03:55:26Z,2019-02-28T10:58:13Z,MERGED,True,1,1,1,https://github.com/shuujii,Remove unnecessary backticks; ref #2858,1,[],https://github.com/mruby/mruby/pull/4301,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4301#issuecomment-467892011,,"I don't have strong opinion about quoting style (I'd prefer `something'
because it is same as CRuby).
Quoting style was changed `something' to 'something' by #2858 but there is
only one place that isn't unified in parse.y. Therefore I created this PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4302,2019-02-27T12:11:38Z,2019-02-27T13:33:22Z,2019-02-28T10:58:11Z,MERGED,True,1,0,1,https://github.com/shuujii,Add newline to warning by `mrb_warn()`,1,[],https://github.com/mruby/mruby/pull/4302,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4302,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4303,2019-02-27T14:23:05Z,2019-02-27T22:05:09Z,2019-02-27T23:08:56Z,MERGED,True,98,3,2,https://github.com/dearblue,String literal concatenation,8,[],https://github.com/mruby/mruby/pull/4303,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4303,"This is a patch that concatenate consecutive string literals at the syntax parse stage.
When long strings are divided into multiple lines and described, it is possible to suppress the concatenation process at run time.
Unlike CRuby, expressions with only strings included in expression expansion are not concatenated.


mruby HEAD:
$ ./build/host/bin/mruby -v -e 'p ""A"" ""B"" ""C#{?D}E"" ""F"" ""G#{1; ?H}I"" ""J""'
mruby 2.0.0 (2018-12-11)
-e:1:6: syntax error, unexpected tSTRING_BEG, expecting $end
SyntaxError: syntax error



After patched:
$ ./build/host/bin/mruby -v -e 'p ""A"" ""B"" ""C#{?D}E"" ""F"" ""G#{1; ?H}I"" ""J""'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_FCALL:
00001       NODE_SELF
00001       method='p' (71)
00001       args:
00001         NODE_DSTR
00001           NODE_STR ""ABC"" len 3
00001           NODE_BEGIN:
00001             NODE_STR ""D"" len 1
00001           NODE_STR ""EFG"" len 3
00001           NODE_BEGIN:
00001             NODE_INT 1 base 10
00001             NODE_STR ""H"" len 1
00001           NODE_STR ""IJ"" len 2
irep 0x801904ff0 nregs=4 nlocals=1 pools=5 syms=1 reps=0
file: -e
    1 000 OP_LOADSELF   R1
    1 002 OP_STRING     R2      L(0)    ; ""ABC""
    1 005 OP_STRING     R3      L(1)    ; ""D""
    1 008 OP_STRCAT     R2
    1 010 OP_STRING     R3      L(2)    ; ""EFG""
    1 013 OP_STRCAT     R2
    1 015 OP_STRING     R3      L(3)    ; ""H""
    1 018 OP_STRCAT     R2
    1 020 OP_STRING     R3      L(4)    ; ""IJ""
    1 023 OP_STRCAT     R2
    1 025 OP_SEND       R1      :p      1
    1 029 OP_RETURN     R1
    1 031 OP_STOP

""ABCDEFGHIJ""



ruby-2.6
% ruby26 --dump insns -v -e 'p ?A ""B"" ""C#{?D}E"" ""F"" ""G#{1; ?H}I"" ""J""'
ruby 2.6.1p33 (2019-01-30 revision 66950) [amd64-freebsd12]
-e:1: warning: unused literal ignored
== disasm: #<ISeq:<main>@-e:1 (1,0)-(1,39)> (catch: FALSE)
0000 putself                                                          (   1)[Li]
0001 putstring                    ""ABCDEFGHIJ""
0003 opt_send_without_block       <callinfo!mid:p, argc:1, FCALL|ARGS_SIMPLE>, <callcache>
0006 leave","This is a patch that concatenate consecutive string literals at the syntax parse stage.
When long strings are divided into multiple lines and described, it is possible to suppress the concatenation process at run time.
Unlike CRuby, expressions with only strings included in expression expansion are not concatenated.


mruby HEAD:
$ ./build/host/bin/mruby -v -e 'p ""A"" ""B"" ""C#{?D}E"" ""F"" ""G#{1; ?H}I"" ""J""'
mruby 2.0.0 (2018-12-11)
-e:1:6: syntax error, unexpected tSTRING_BEG, expecting $end
SyntaxError: syntax error



After patched:
$ ./build/host/bin/mruby -v -e 'p ""A"" ""B"" ""C#{?D}E"" ""F"" ""G#{1; ?H}I"" ""J""'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_FCALL:
00001       NODE_SELF
00001       method='p' (71)
00001       args:
00001         NODE_DSTR
00001           NODE_STR ""ABC"" len 3
00001           NODE_BEGIN:
00001             NODE_STR ""D"" len 1
00001           NODE_STR ""EFG"" len 3
00001           NODE_BEGIN:
00001             NODE_INT 1 base 10
00001             NODE_STR ""H"" len 1
00001           NODE_STR ""IJ"" len 2
irep 0x801904ff0 nregs=4 nlocals=1 pools=5 syms=1 reps=0
file: -e
    1 000 OP_LOADSELF   R1
    1 002 OP_STRING     R2      L(0)    ; ""ABC""
    1 005 OP_STRING     R3      L(1)    ; ""D""
    1 008 OP_STRCAT     R2
    1 010 OP_STRING     R3      L(2)    ; ""EFG""
    1 013 OP_STRCAT     R2
    1 015 OP_STRING     R3      L(3)    ; ""H""
    1 018 OP_STRCAT     R2
    1 020 OP_STRING     R3      L(4)    ; ""IJ""
    1 023 OP_STRCAT     R2
    1 025 OP_SEND       R1      :p      1
    1 029 OP_RETURN     R1
    1 031 OP_STOP

""ABCDEFGHIJ""



ruby-2.6
% ruby26 --dump insns -v -e 'p ?A ""B"" ""C#{?D}E"" ""F"" ""G#{1; ?H}I"" ""J""'
ruby 2.6.1p33 (2019-01-30 revision 66950) [amd64-freebsd12]
-e:1: warning: unused literal ignored
== disasm: #<ISeq:<main>@-e:1 (1,0)-(1,39)> (catch: FALSE)
0000 putself                                                          (   1)[Li]
0001 putstring                    ""ABCDEFGHIJ""
0003 opt_send_without_block       <callinfo!mid:p, argc:1, FCALL|ARGS_SIMPLE>, <callcache>
0006 leave",True,{}
mruby/mruby,https://github.com/mruby/mruby,4304,2019-02-27T15:25:13Z,2019-03-02T04:52:26Z,2019-03-02T08:17:52Z,CLOSED,False,2,1,1,https://github.com/dearblue,Add terminate line for irep dumping,1,[],https://github.com/mruby/mruby/pull/4304,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4304,"For each ireps, append end mark at the last.
$ ./build/host/bin/mruby -v -e 'def x; end'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_DEF:
00001       x
00001       local variables:
00001         &
00001       NODE_BEGIN:
irep 0x801304ff0 nregs=3 nlocals=1 pools=0 syms=1 reps=1
file: -e
    1 000 OP_TCLASS     R1
    1 002 OP_METHOD     R2      I(0:0x801305040)
    1 005 OP_DEF        R1      :x
    1 008 OP_LOADSYM    R1      :x
    1 011 OP_RETURN     R1
    1 013 OP_STOP
      014 <END OF SEQUENSE>

irep 0x801305040 nregs=3 nlocals=2 pools=0 syms=0 reps=0
local variable names:
  R1:&
file: -e
    1 000 OP_ENTER      0:0:0:0:0:0:0
    1 004 OP_LOADNIL    R2
    1 006 OP_RETURN     R2
      008 <END OF SEQUENSE>","For each ireps, append end mark at the last.
$ ./build/host/bin/mruby -v -e 'def x; end'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_DEF:
00001       x
00001       local variables:
00001         &
00001       NODE_BEGIN:
irep 0x801304ff0 nregs=3 nlocals=1 pools=0 syms=1 reps=1
file: -e
    1 000 OP_TCLASS     R1
    1 002 OP_METHOD     R2      I(0:0x801305040)
    1 005 OP_DEF        R1      :x
    1 008 OP_LOADSYM    R1      :x
    1 011 OP_RETURN     R1
    1 013 OP_STOP
      014 <END OF SEQUENSE>

irep 0x801305040 nregs=3 nlocals=2 pools=0 syms=0 reps=0
local variable names:
  R1:&
file: -e
    1 000 OP_ENTER      0:0:0:0:0:0:0
    1 004 OP_LOADNIL    R2
    1 006 OP_RETURN     R2
      008 <END OF SEQUENSE>",True,{}
mruby/mruby,https://github.com/mruby/mruby,4304,2019-02-27T15:25:13Z,2019-03-02T04:52:26Z,2019-03-02T08:17:52Z,CLOSED,False,2,1,1,https://github.com/dearblue,Add terminate line for irep dumping,1,[],https://github.com/mruby/mruby/pull/4304,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4304#issuecomment-468047913,"For each ireps, append end mark at the last.
$ ./build/host/bin/mruby -v -e 'def x; end'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_DEF:
00001       x
00001       local variables:
00001         &
00001       NODE_BEGIN:
irep 0x801304ff0 nregs=3 nlocals=1 pools=0 syms=1 reps=1
file: -e
    1 000 OP_TCLASS     R1
    1 002 OP_METHOD     R2      I(0:0x801305040)
    1 005 OP_DEF        R1      :x
    1 008 OP_LOADSYM    R1      :x
    1 011 OP_RETURN     R1
    1 013 OP_STOP
      014 <END OF SEQUENSE>

irep 0x801305040 nregs=3 nlocals=2 pools=0 syms=0 reps=0
local variable names:
  R1:&
file: -e
    1 000 OP_ENTER      0:0:0:0:0:0:0
    1 004 OP_LOADNIL    R2
    1 006 OP_RETURN     R2
      008 <END OF SEQUENSE>",Why do we need <END OF SEQUENSE> at the end? It seems to be obvious already for me.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4304,2019-02-27T15:25:13Z,2019-03-02T04:52:26Z,2019-03-02T08:17:52Z,CLOSED,False,2,1,1,https://github.com/dearblue,Add terminate line for irep dumping,1,[],https://github.com/mruby/mruby/pull/4304,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4304#issuecomment-468067564,"For each ireps, append end mark at the last.
$ ./build/host/bin/mruby -v -e 'def x; end'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_DEF:
00001       x
00001       local variables:
00001         &
00001       NODE_BEGIN:
irep 0x801304ff0 nregs=3 nlocals=1 pools=0 syms=1 reps=1
file: -e
    1 000 OP_TCLASS     R1
    1 002 OP_METHOD     R2      I(0:0x801305040)
    1 005 OP_DEF        R1      :x
    1 008 OP_LOADSYM    R1      :x
    1 011 OP_RETURN     R1
    1 013 OP_STOP
      014 <END OF SEQUENSE>

irep 0x801305040 nregs=3 nlocals=2 pools=0 syms=0 reps=0
local variable names:
  R1:&
file: -e
    1 000 OP_ENTER      0:0:0:0:0:0:0
    1 004 OP_LOADNIL    R2
    1 006 OP_RETURN     R2
      008 <END OF SEQUENSE>",What I really want is the end offset.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4304,2019-02-27T15:25:13Z,2019-03-02T04:52:26Z,2019-03-02T08:17:52Z,CLOSED,False,2,1,1,https://github.com/dearblue,Add terminate line for irep dumping,1,[],https://github.com/mruby/mruby/pull/4304,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4304#issuecomment-468859605,"For each ireps, append end mark at the last.
$ ./build/host/bin/mruby -v -e 'def x; end'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_DEF:
00001       x
00001       local variables:
00001         &
00001       NODE_BEGIN:
irep 0x801304ff0 nregs=3 nlocals=1 pools=0 syms=1 reps=1
file: -e
    1 000 OP_TCLASS     R1
    1 002 OP_METHOD     R2      I(0:0x801305040)
    1 005 OP_DEF        R1      :x
    1 008 OP_LOADSYM    R1      :x
    1 011 OP_RETURN     R1
    1 013 OP_STOP
      014 <END OF SEQUENSE>

irep 0x801305040 nregs=3 nlocals=2 pools=0 syms=0 reps=0
local variable names:
  R1:&
file: -e
    1 000 OP_ENTER      0:0:0:0:0:0:0
    1 004 OP_LOADNIL    R2
    1 006 OP_RETURN     R2
      008 <END OF SEQUENSE>",That means showing ilen (length of instruction sequence) is OK for you. Right?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4304,2019-02-27T15:25:13Z,2019-03-02T04:52:26Z,2019-03-02T08:17:52Z,CLOSED,False,2,1,1,https://github.com/dearblue,Add terminate line for irep dumping,1,[],https://github.com/mruby/mruby/pull/4304,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/4304#issuecomment-468872472,"For each ireps, append end mark at the last.
$ ./build/host/bin/mruby -v -e 'def x; end'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_DEF:
00001       x
00001       local variables:
00001         &
00001       NODE_BEGIN:
irep 0x801304ff0 nregs=3 nlocals=1 pools=0 syms=1 reps=1
file: -e
    1 000 OP_TCLASS     R1
    1 002 OP_METHOD     R2      I(0:0x801305040)
    1 005 OP_DEF        R1      :x
    1 008 OP_LOADSYM    R1      :x
    1 011 OP_RETURN     R1
    1 013 OP_STOP
      014 <END OF SEQUENSE>

irep 0x801305040 nregs=3 nlocals=2 pools=0 syms=0 reps=0
local variable names:
  R1:&
file: -e
    1 000 OP_ENTER      0:0:0:0:0:0:0
    1 004 OP_LOADNIL    R2
    1 006 OP_RETURN     R2
      008 <END OF SEQUENSE>","Yes, that's right.
I will modify and do force push.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4304,2019-02-27T15:25:13Z,2019-03-02T04:52:26Z,2019-03-02T08:17:52Z,CLOSED,False,2,1,1,https://github.com/dearblue,Add terminate line for irep dumping,1,[],https://github.com/mruby/mruby/pull/4304,https://github.com/matz,6,https://github.com/mruby/mruby/pull/4304#issuecomment-468885063,"For each ireps, append end mark at the last.
$ ./build/host/bin/mruby -v -e 'def x; end'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_DEF:
00001       x
00001       local variables:
00001         &
00001       NODE_BEGIN:
irep 0x801304ff0 nregs=3 nlocals=1 pools=0 syms=1 reps=1
file: -e
    1 000 OP_TCLASS     R1
    1 002 OP_METHOD     R2      I(0:0x801305040)
    1 005 OP_DEF        R1      :x
    1 008 OP_LOADSYM    R1      :x
    1 011 OP_RETURN     R1
    1 013 OP_STOP
      014 <END OF SEQUENSE>

irep 0x801305040 nregs=3 nlocals=2 pools=0 syms=0 reps=0
local variable names:
  R1:&
file: -e
    1 000 OP_ENTER      0:0:0:0:0:0:0
    1 004 OP_LOADNIL    R2
    1 006 OP_RETURN     R2
      008 <END OF SEQUENSE>",13e0a48 was what I meant. Is it OK for you?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4304,2019-02-27T15:25:13Z,2019-03-02T04:52:26Z,2019-03-02T08:17:52Z,CLOSED,False,2,1,1,https://github.com/dearblue,Add terminate line for irep dumping,1,[],https://github.com/mruby/mruby/pull/4304,https://github.com/dearblue,7,https://github.com/mruby/mruby/pull/4304#issuecomment-468899396,"For each ireps, append end mark at the last.
$ ./build/host/bin/mruby -v -e 'def x; end'
mruby 2.0.0 (2018-12-11)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_DEF:
00001       x
00001       local variables:
00001         &
00001       NODE_BEGIN:
irep 0x801304ff0 nregs=3 nlocals=1 pools=0 syms=1 reps=1
file: -e
    1 000 OP_TCLASS     R1
    1 002 OP_METHOD     R2      I(0:0x801305040)
    1 005 OP_DEF        R1      :x
    1 008 OP_LOADSYM    R1      :x
    1 011 OP_RETURN     R1
    1 013 OP_STOP
      014 <END OF SEQUENSE>

irep 0x801305040 nregs=3 nlocals=2 pools=0 syms=0 reps=0
local variable names:
  R1:&
file: -e
    1 000 OP_ENTER      0:0:0:0:0:0:0
    1 004 OP_LOADNIL    R2
    1 006 OP_RETURN     R2
      008 <END OF SEQUENSE>","There is no problem.
Thank you.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4305,2019-02-28T11:06:50Z,2019-02-28T21:58:33Z,2019-03-02T07:19:16Z,MERGED,True,2,2,1,https://github.com/shuujii,Add `warning: ` prefix to parser warning message,1,[],https://github.com/mruby/mruby/pull/4305,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4305,There is this prefix in CRuby and mrb_warn().,There is this prefix in CRuby and mrb_warn().,True,{}
mruby/mruby,https://github.com/mruby/mruby,4306,2019-03-01T10:37:31Z,2019-03-02T05:03:25Z,2019-03-02T07:19:15Z,CLOSED,False,6,3,1,https://github.com/shuujii,Use assertion methods in 'Array (Shared Array Corruption)' test,1,[],https://github.com/mruby/mruby/pull/4306,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4306,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4306,2019-03-01T10:37:31Z,2019-03-02T05:03:25Z,2019-03-02T07:19:15Z,CLOSED,False,6,3,1,https://github.com/shuujii,Use assertion methods in 'Array (Shared Array Corruption)' test,1,[],https://github.com/mruby/mruby/pull/4306,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4306#issuecomment-468858585,,"This particular (incomplete) test is to ensure #359 was fixed. The choice is either:

remove this test altogether
make sure clearing shared array does not corrupt the other.
My vote is the former.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4306,2019-03-01T10:37:31Z,2019-03-02T05:03:25Z,2019-03-02T07:19:15Z,CLOSED,False,6,3,1,https://github.com/shuujii,Use assertion methods in 'Array (Shared Array Corruption)' test,1,[],https://github.com/mruby/mruby/pull/4306,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4306#issuecomment-468878644,,"My intention is the later. I'd prefer the later because I think we don't
easily notice an issue if tests don't exist, but I don't oppose either.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4306,2019-03-01T10:37:31Z,2019-03-02T05:03:25Z,2019-03-02T07:19:15Z,CLOSED,False,6,3,1,https://github.com/shuujii,Use assertion methods in 'Array (Shared Array Corruption)' test,1,[],https://github.com/mruby/mruby/pull/4306,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4306#issuecomment-468885459,,I am not positive about adding regression tests to the standard test suites. Mostly because it increases the number of assertion and time to execute the tests. Maybe we should add regression test suites.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4309,2019-03-02T10:17:01Z,2019-03-02T12:14:42Z,2019-03-04T02:07:30Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix missing assertion in `test/t/class.rb`,1,[],https://github.com/mruby/mruby/pull/4309,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4309,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4311,2019-03-03T11:47:52Z,2019-03-03T14:22:24Z,2019-03-04T02:07:28Z,MERGED,True,3,11,1,https://github.com/shuujii,Simplify `MRubyTestSkip` in `test/assert.rb`,1,[],https://github.com/mruby/mruby/pull/4311,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4311,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4312,2019-03-03T15:33:45Z,2019-03-03T21:48:32Z,2019-03-04T02:07:17Z,MERGED,True,3,1,1,https://github.com/shuujii,`GEMNAME` is undefined in bintest,1,[],https://github.com/mruby/mruby/pull/4312,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4312,ref: #4296 (comment),ref: #4296 (comment),True,{}
mruby/mruby,https://github.com/mruby/mruby,4313,2019-03-04T12:47:54Z,2019-03-04T12:57:38Z,2019-03-07T13:15:21Z,MERGED,True,17,39,1,https://github.com/shuujii,Extract similar code fragment to method in `src/class.c`,1,[],https://github.com/mruby/mruby/pull/4313,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4313,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4314,2019-03-05T11:13:02Z,2019-03-06T10:54:38Z,2019-03-07T13:15:19Z,MERGED,True,4,1,1,https://github.com/shuujii,Count skip tests,1,[],https://github.com/mruby/mruby/pull/4314,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4314,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4315,2019-03-06T11:58:37Z,2019-03-06T13:26:35Z,2019-03-07T13:15:17Z,MERGED,True,2,2,2,https://github.com/shuujii,Refer also CXX and CC env vars as linker command in gcc and clang toolchain,1,[],https://github.com/mruby/mruby/pull/4315,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4315,ref #4292,ref #4292,True,{}
mruby/mruby,https://github.com/mruby/mruby,4316,2019-03-07T12:46:21Z,2019-03-09T01:19:33Z,2019-03-16T03:44:43Z,MERGED,True,1,0,1,https://github.com/shuujii,Add a missing file for #4314,1,[],https://github.com/mruby/mruby/pull/4316,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4316,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4317,2019-03-07T13:05:04Z,2019-03-07T13:14:09Z,2019-03-07T13:15:13Z,CLOSED,False,5,3,3,https://github.com/shuujii,Set `GEMNAME` on bintest,2,[],https://github.com/mruby/mruby/pull/4317,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4317,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4317,2019-03-07T13:05:04Z,2019-03-07T13:14:09Z,2019-03-07T13:15:13Z,CLOSED,False,5,3,3,https://github.com/shuujii,Set `GEMNAME` on bintest,2,[],https://github.com/mruby/mruby/pull/4317,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4317#issuecomment-470520248,,"Sorry, it seems the previous PR mixed. I'll recreate PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4318,2019-03-07T13:19:53Z,2019-03-08T03:22:25Z,2019-03-16T03:44:45Z,MERGED,True,4,3,2,https://github.com/shuujii,Set `GEMNAME` on bintest,1,[],https://github.com/mruby/mruby/pull/4318,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4318,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4319,2019-03-08T13:16:08Z,2019-03-08T14:05:06Z,2019-03-16T03:44:39Z,MERGED,True,13,12,2,https://github.com/shuujii,Allow `enable_bintest` without `enable_test` in build config,1,[],https://github.com/mruby/mruby/pull/4319,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4319,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4320,2019-03-09T10:53:53Z,2019-07-28T16:04:57Z,2020-01-02T10:32:05Z,CLOSED,False,15,8,2,https://github.com/shuujii,Warn if assertion is missing inside `assert` (like #4309 etc),1,[],https://github.com/mruby/mruby/pull/4320,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4320,"Currently many warnings appear (草生える in progress).
>>> Test host <<<
mrbtest - Embeddable Ruby Test

................W.............................................................
..............................................W...............................
.............................................WW.WWWWW..WWWWWWWWWWWWWWWWWWWWWWW
WWWWWW.W.W..............?....W..........W...................WW................
............WWWWWWWWWWWWWWWWWWWWWWWWWWW.......................................
...........................................WWWWWWWWWWWWWWW.....WWWWWWW........
.....................................WWWWWWW..................................
..........................?...................................................
..............................................................................
..............................................................................
..............................................................................
..............................................................................
........................................................WW....................
..............................................................................
.......W................................................................W.....
.........
Warn: Fiber with splat in the block argument list => no assertion (mrbgems: mruby-fiber)
Warn: Array#bsearch_index => no assertion (mrbgems: mruby-array-ext)
Warn: Time.new [15.2.3.3.3] => no assertion (mrbgems: mruby-time)
Warn: Time [15.2.19] => no assertion (mrbgems: mruby-time)
Warn: Time.gm [15.2.19.6.2] => no assertion (mrbgems: mruby-time)
Warn: Time.local [15.2.19.6.3] => no assertion (mrbgems: mruby-time)
Warn: Time.mktime [15.2.19.6.4] => no assertion (mrbgems: mruby-time)
Warn: Time.now [15.2.19.6.5] => no assertion (mrbgems: mruby-time)
Warn: Time.utc [15.2.19.6.6] => no assertion (mrbgems: mruby-time)
Warn: Time#<=> [15.2.19.7.3] => no assertion (mrbgems: mruby-time)
Warn: Time#asctime [15.2.19.7.4] => no assertion (mrbgems: mruby-time)
Warn: Time#ctime [15.2.19.7.5] => no assertion (mrbgems: mruby-time)
Warn: Time#day [15.2.19.7.6] => no assertion (mrbgems: mruby-time)
Warn: Time#dst? [15.2.19.7.7] => no assertion (mrbgems: mruby-time)
Warn: Time#getgm [15.2.19.7.8] => no assertion (mrbgems: mruby-time)
Warn: Time#getlocal [15.2.19.7.9] => no assertion (mrbgems: mruby-time)
Warn: Time#getutc [15.2.19.7.10] => no assertion (mrbgems: mruby-time)
Warn: Time#gmt? [15.2.19.7.11] => no assertion (mrbgems: mruby-time)
Warn: Time#gmtime [15.2.19.7.13] => no assertion (mrbgems: mruby-time)
Warn: Time#hour [15.2.19.7.15] => no assertion (mrbgems: mruby-time)
Warn: Time#initialize_copy [15.2.19.7.17] => no assertion (mrbgems: mruby-time)
Warn: Time#localtime [15.2.19.7.18] => no assertion (mrbgems: mruby-time)
Warn: Time#mday [15.2.19.7.19] => no assertion (mrbgems: mruby-time)
Warn: Time#min [15.2.19.7.20] => no assertion (mrbgems: mruby-time)
Warn: Time#mon [15.2.19.7.21] => no assertion (mrbgems: mruby-time)
Warn: Time#month [15.2.19.7.22] => no assertion (mrbgems: mruby-time)
Warn: Times#sec [15.2.19.7.23] => no assertion (mrbgems: mruby-time)
Warn: Time#to_f [15.2.19.7.24] => no assertion (mrbgems: mruby-time)
Warn: Time#to_i [15.2.19.7.25] => no assertion (mrbgems: mruby-time)
Warn: Time#usec [15.2.19.7.26] => no assertion (mrbgems: mruby-time)
Warn: Time#utc [15.2.19.7.27] => no assertion (mrbgems: mruby-time)
Warn: Time#utc? [15.2.19.7.28] => no assertion (mrbgems: mruby-time)
Warn: Time#wday [15.2.19.7.30] => no assertion (mrbgems: mruby-time)
Warn: Time#yday [15.2.19.7.31] => no assertion (mrbgems: mruby-time)
Warn: Time#year [15.2.19.7.32] => no assertion (mrbgems: mruby-time)
Warn: Time#zone [15.2.19.7.33] => no assertion (mrbgems: mruby-time)
Warn: Time#to_s => no assertion (mrbgems: mruby-time)
Warn: Time#inspect => no assertion (mrbgems: mruby-time)
Warn: 2000 times 500us make a second => no assertion (mrbgems: mruby-time)
Warn: File TEST SETUP => no assertion (mrbgems: mruby-io)
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)
Warn: FileTest TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO.new => no assertion (mrbgems: mruby-io)
Warn: IO gc check => no assertion (mrbgems: mruby-io)
Warn: Math.sin 0 => no assertion (mrbgems: mruby-math)
Warn: Math.sin PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.cos 0 => no assertion (mrbgems: mruby-math)
Warn: Math.cos PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.tan 0 => no assertion (mrbgems: mruby-math)
Warn: Math.tan PI/4 => no assertion (mrbgems: mruby-math)
Warn: Fundamental trig identities => no assertion (mrbgems: mruby-math)
Warn: Math.erf 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1.5 => no assertion (mrbgems: mruby-math)
Warn: Math.log 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log E => no assertion (mrbgems: mruby-math)
Warn: Math.log E**3 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 2 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10**100 => no assertion (mrbgems: mruby-math)
Warn: Math.sqrt => no assertion (mrbgems: mruby-math)
Warn: Math.cbrt => no assertion (mrbgems: mruby-math)
Warn: Math.hypot => no assertion (mrbgems: mruby-math)
Warn: Math.frexp 1234 => no assertion (mrbgems: mruby-math)
Warn: Math.erf 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erf -1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc -1 => no assertion (mrbgems: mruby-math)
Warn: Check class pointer of ObjectSpace.each_object. => no assertion (mrbgems: mruby-objectspace)
Warn: [""""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc..xyzABC..XYZ""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: ""YWJ..."".unpack(""m"") should ""abc..xyzABC..XYZ"" => no assertion (mrbgems: mruby-pack)
Warn: [""3031""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [""10""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [0,1,127,128,255].pack(""C*"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: issue #1 => no assertion (mrbgems: mruby-pack)
Warn: Random#srand => no assertion (mrbgems: mruby-random)
Warn: Kernel::srand => no assertion (mrbgems: mruby-random)
Warn: Random::srand => no assertion (mrbgems: mruby-random)
Warn: fixnum => no assertion (mrbgems: mruby-random)
Warn: float => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle! => no assertion (mrbgems: mruby-random)
Warn: String#dump => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip! => no assertion (mrbgems: mruby-string-ext)
Skip: Struct.new removes existing constant => redefining Struct with same name cause warnings (mrbgems: mruby-struct)
Warn: Issue 1467 => no assertion (core)
Warn: clone Module => no assertion (core)
Warn: Check the usage of a NUL character => no assertion (core)
Warn: method definition in cmdarg => no assertion (core)
  Total: 1179
     OK: 1073
     KO: 0
  Crash: 0
Warning: 104
   Skip: 2
   Time: 1.68 seconds","Currently many warnings appear (草生える in progress).
>>> Test host <<<
mrbtest - Embeddable Ruby Test

................W.............................................................
..............................................W...............................
.............................................WW.WWWWW..WWWWWWWWWWWWWWWWWWWWWWW
WWWWWW.W.W..............?....W..........W...................WW................
............WWWWWWWWWWWWWWWWWWWWWWWWWWW.......................................
...........................................WWWWWWWWWWWWWWW.....WWWWWWW........
.....................................WWWWWWW..................................
..........................?...................................................
..............................................................................
..............................................................................
..............................................................................
..............................................................................
........................................................WW....................
..............................................................................
.......W................................................................W.....
.........
Warn: Fiber with splat in the block argument list => no assertion (mrbgems: mruby-fiber)
Warn: Array#bsearch_index => no assertion (mrbgems: mruby-array-ext)
Warn: Time.new [15.2.3.3.3] => no assertion (mrbgems: mruby-time)
Warn: Time [15.2.19] => no assertion (mrbgems: mruby-time)
Warn: Time.gm [15.2.19.6.2] => no assertion (mrbgems: mruby-time)
Warn: Time.local [15.2.19.6.3] => no assertion (mrbgems: mruby-time)
Warn: Time.mktime [15.2.19.6.4] => no assertion (mrbgems: mruby-time)
Warn: Time.now [15.2.19.6.5] => no assertion (mrbgems: mruby-time)
Warn: Time.utc [15.2.19.6.6] => no assertion (mrbgems: mruby-time)
Warn: Time#<=> [15.2.19.7.3] => no assertion (mrbgems: mruby-time)
Warn: Time#asctime [15.2.19.7.4] => no assertion (mrbgems: mruby-time)
Warn: Time#ctime [15.2.19.7.5] => no assertion (mrbgems: mruby-time)
Warn: Time#day [15.2.19.7.6] => no assertion (mrbgems: mruby-time)
Warn: Time#dst? [15.2.19.7.7] => no assertion (mrbgems: mruby-time)
Warn: Time#getgm [15.2.19.7.8] => no assertion (mrbgems: mruby-time)
Warn: Time#getlocal [15.2.19.7.9] => no assertion (mrbgems: mruby-time)
Warn: Time#getutc [15.2.19.7.10] => no assertion (mrbgems: mruby-time)
Warn: Time#gmt? [15.2.19.7.11] => no assertion (mrbgems: mruby-time)
Warn: Time#gmtime [15.2.19.7.13] => no assertion (mrbgems: mruby-time)
Warn: Time#hour [15.2.19.7.15] => no assertion (mrbgems: mruby-time)
Warn: Time#initialize_copy [15.2.19.7.17] => no assertion (mrbgems: mruby-time)
Warn: Time#localtime [15.2.19.7.18] => no assertion (mrbgems: mruby-time)
Warn: Time#mday [15.2.19.7.19] => no assertion (mrbgems: mruby-time)
Warn: Time#min [15.2.19.7.20] => no assertion (mrbgems: mruby-time)
Warn: Time#mon [15.2.19.7.21] => no assertion (mrbgems: mruby-time)
Warn: Time#month [15.2.19.7.22] => no assertion (mrbgems: mruby-time)
Warn: Times#sec [15.2.19.7.23] => no assertion (mrbgems: mruby-time)
Warn: Time#to_f [15.2.19.7.24] => no assertion (mrbgems: mruby-time)
Warn: Time#to_i [15.2.19.7.25] => no assertion (mrbgems: mruby-time)
Warn: Time#usec [15.2.19.7.26] => no assertion (mrbgems: mruby-time)
Warn: Time#utc [15.2.19.7.27] => no assertion (mrbgems: mruby-time)
Warn: Time#utc? [15.2.19.7.28] => no assertion (mrbgems: mruby-time)
Warn: Time#wday [15.2.19.7.30] => no assertion (mrbgems: mruby-time)
Warn: Time#yday [15.2.19.7.31] => no assertion (mrbgems: mruby-time)
Warn: Time#year [15.2.19.7.32] => no assertion (mrbgems: mruby-time)
Warn: Time#zone [15.2.19.7.33] => no assertion (mrbgems: mruby-time)
Warn: Time#to_s => no assertion (mrbgems: mruby-time)
Warn: Time#inspect => no assertion (mrbgems: mruby-time)
Warn: 2000 times 500us make a second => no assertion (mrbgems: mruby-time)
Warn: File TEST SETUP => no assertion (mrbgems: mruby-io)
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)
Warn: FileTest TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO.new => no assertion (mrbgems: mruby-io)
Warn: IO gc check => no assertion (mrbgems: mruby-io)
Warn: Math.sin 0 => no assertion (mrbgems: mruby-math)
Warn: Math.sin PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.cos 0 => no assertion (mrbgems: mruby-math)
Warn: Math.cos PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.tan 0 => no assertion (mrbgems: mruby-math)
Warn: Math.tan PI/4 => no assertion (mrbgems: mruby-math)
Warn: Fundamental trig identities => no assertion (mrbgems: mruby-math)
Warn: Math.erf 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1.5 => no assertion (mrbgems: mruby-math)
Warn: Math.log 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log E => no assertion (mrbgems: mruby-math)
Warn: Math.log E**3 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 2 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10**100 => no assertion (mrbgems: mruby-math)
Warn: Math.sqrt => no assertion (mrbgems: mruby-math)
Warn: Math.cbrt => no assertion (mrbgems: mruby-math)
Warn: Math.hypot => no assertion (mrbgems: mruby-math)
Warn: Math.frexp 1234 => no assertion (mrbgems: mruby-math)
Warn: Math.erf 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erf -1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc -1 => no assertion (mrbgems: mruby-math)
Warn: Check class pointer of ObjectSpace.each_object. => no assertion (mrbgems: mruby-objectspace)
Warn: [""""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc..xyzABC..XYZ""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: ""YWJ..."".unpack(""m"") should ""abc..xyzABC..XYZ"" => no assertion (mrbgems: mruby-pack)
Warn: [""3031""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [""10""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [0,1,127,128,255].pack(""C*"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: issue #1 => no assertion (mrbgems: mruby-pack)
Warn: Random#srand => no assertion (mrbgems: mruby-random)
Warn: Kernel::srand => no assertion (mrbgems: mruby-random)
Warn: Random::srand => no assertion (mrbgems: mruby-random)
Warn: fixnum => no assertion (mrbgems: mruby-random)
Warn: float => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle! => no assertion (mrbgems: mruby-random)
Warn: String#dump => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip! => no assertion (mrbgems: mruby-string-ext)
Skip: Struct.new removes existing constant => redefining Struct with same name cause warnings (mrbgems: mruby-struct)
Warn: Issue 1467 => no assertion (core)
Warn: clone Module => no assertion (core)
Warn: Check the usage of a NUL character => no assertion (core)
Warn: method definition in cmdarg => no assertion (core)
  Total: 1179
     OK: 1073
     KO: 0
  Crash: 0
Warning: 104
   Skip: 2
   Time: 1.68 seconds",True,{}
mruby/mruby,https://github.com/mruby/mruby,4320,2019-03-09T10:53:53Z,2019-07-28T16:04:57Z,2020-01-02T10:32:05Z,CLOSED,False,15,8,2,https://github.com/shuujii,Warn if assertion is missing inside `assert` (like #4309 etc),1,[],https://github.com/mruby/mruby/pull/4320,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4320#issuecomment-471293818,"Currently many warnings appear (草生える in progress).
>>> Test host <<<
mrbtest - Embeddable Ruby Test

................W.............................................................
..............................................W...............................
.............................................WW.WWWWW..WWWWWWWWWWWWWWWWWWWWWWW
WWWWWW.W.W..............?....W..........W...................WW................
............WWWWWWWWWWWWWWWWWWWWWWWWWWW.......................................
...........................................WWWWWWWWWWWWWWW.....WWWWWWW........
.....................................WWWWWWW..................................
..........................?...................................................
..............................................................................
..............................................................................
..............................................................................
..............................................................................
........................................................WW....................
..............................................................................
.......W................................................................W.....
.........
Warn: Fiber with splat in the block argument list => no assertion (mrbgems: mruby-fiber)
Warn: Array#bsearch_index => no assertion (mrbgems: mruby-array-ext)
Warn: Time.new [15.2.3.3.3] => no assertion (mrbgems: mruby-time)
Warn: Time [15.2.19] => no assertion (mrbgems: mruby-time)
Warn: Time.gm [15.2.19.6.2] => no assertion (mrbgems: mruby-time)
Warn: Time.local [15.2.19.6.3] => no assertion (mrbgems: mruby-time)
Warn: Time.mktime [15.2.19.6.4] => no assertion (mrbgems: mruby-time)
Warn: Time.now [15.2.19.6.5] => no assertion (mrbgems: mruby-time)
Warn: Time.utc [15.2.19.6.6] => no assertion (mrbgems: mruby-time)
Warn: Time#<=> [15.2.19.7.3] => no assertion (mrbgems: mruby-time)
Warn: Time#asctime [15.2.19.7.4] => no assertion (mrbgems: mruby-time)
Warn: Time#ctime [15.2.19.7.5] => no assertion (mrbgems: mruby-time)
Warn: Time#day [15.2.19.7.6] => no assertion (mrbgems: mruby-time)
Warn: Time#dst? [15.2.19.7.7] => no assertion (mrbgems: mruby-time)
Warn: Time#getgm [15.2.19.7.8] => no assertion (mrbgems: mruby-time)
Warn: Time#getlocal [15.2.19.7.9] => no assertion (mrbgems: mruby-time)
Warn: Time#getutc [15.2.19.7.10] => no assertion (mrbgems: mruby-time)
Warn: Time#gmt? [15.2.19.7.11] => no assertion (mrbgems: mruby-time)
Warn: Time#gmtime [15.2.19.7.13] => no assertion (mrbgems: mruby-time)
Warn: Time#hour [15.2.19.7.15] => no assertion (mrbgems: mruby-time)
Warn: Time#initialize_copy [15.2.19.7.17] => no assertion (mrbgems: mruby-time)
Warn: Time#localtime [15.2.19.7.18] => no assertion (mrbgems: mruby-time)
Warn: Time#mday [15.2.19.7.19] => no assertion (mrbgems: mruby-time)
Warn: Time#min [15.2.19.7.20] => no assertion (mrbgems: mruby-time)
Warn: Time#mon [15.2.19.7.21] => no assertion (mrbgems: mruby-time)
Warn: Time#month [15.2.19.7.22] => no assertion (mrbgems: mruby-time)
Warn: Times#sec [15.2.19.7.23] => no assertion (mrbgems: mruby-time)
Warn: Time#to_f [15.2.19.7.24] => no assertion (mrbgems: mruby-time)
Warn: Time#to_i [15.2.19.7.25] => no assertion (mrbgems: mruby-time)
Warn: Time#usec [15.2.19.7.26] => no assertion (mrbgems: mruby-time)
Warn: Time#utc [15.2.19.7.27] => no assertion (mrbgems: mruby-time)
Warn: Time#utc? [15.2.19.7.28] => no assertion (mrbgems: mruby-time)
Warn: Time#wday [15.2.19.7.30] => no assertion (mrbgems: mruby-time)
Warn: Time#yday [15.2.19.7.31] => no assertion (mrbgems: mruby-time)
Warn: Time#year [15.2.19.7.32] => no assertion (mrbgems: mruby-time)
Warn: Time#zone [15.2.19.7.33] => no assertion (mrbgems: mruby-time)
Warn: Time#to_s => no assertion (mrbgems: mruby-time)
Warn: Time#inspect => no assertion (mrbgems: mruby-time)
Warn: 2000 times 500us make a second => no assertion (mrbgems: mruby-time)
Warn: File TEST SETUP => no assertion (mrbgems: mruby-io)
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)
Warn: FileTest TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO.new => no assertion (mrbgems: mruby-io)
Warn: IO gc check => no assertion (mrbgems: mruby-io)
Warn: Math.sin 0 => no assertion (mrbgems: mruby-math)
Warn: Math.sin PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.cos 0 => no assertion (mrbgems: mruby-math)
Warn: Math.cos PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.tan 0 => no assertion (mrbgems: mruby-math)
Warn: Math.tan PI/4 => no assertion (mrbgems: mruby-math)
Warn: Fundamental trig identities => no assertion (mrbgems: mruby-math)
Warn: Math.erf 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1.5 => no assertion (mrbgems: mruby-math)
Warn: Math.log 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log E => no assertion (mrbgems: mruby-math)
Warn: Math.log E**3 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 2 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10**100 => no assertion (mrbgems: mruby-math)
Warn: Math.sqrt => no assertion (mrbgems: mruby-math)
Warn: Math.cbrt => no assertion (mrbgems: mruby-math)
Warn: Math.hypot => no assertion (mrbgems: mruby-math)
Warn: Math.frexp 1234 => no assertion (mrbgems: mruby-math)
Warn: Math.erf 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erf -1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc -1 => no assertion (mrbgems: mruby-math)
Warn: Check class pointer of ObjectSpace.each_object. => no assertion (mrbgems: mruby-objectspace)
Warn: [""""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc..xyzABC..XYZ""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: ""YWJ..."".unpack(""m"") should ""abc..xyzABC..XYZ"" => no assertion (mrbgems: mruby-pack)
Warn: [""3031""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [""10""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [0,1,127,128,255].pack(""C*"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: issue #1 => no assertion (mrbgems: mruby-pack)
Warn: Random#srand => no assertion (mrbgems: mruby-random)
Warn: Kernel::srand => no assertion (mrbgems: mruby-random)
Warn: Random::srand => no assertion (mrbgems: mruby-random)
Warn: fixnum => no assertion (mrbgems: mruby-random)
Warn: float => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle! => no assertion (mrbgems: mruby-random)
Warn: String#dump => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip! => no assertion (mrbgems: mruby-string-ext)
Skip: Struct.new removes existing constant => redefining Struct with same name cause warnings (mrbgems: mruby-struct)
Warn: Issue 1467 => no assertion (core)
Warn: clone Module => no assertion (core)
Warn: Check the usage of a NUL character => no assertion (core)
Warn: method definition in cmdarg => no assertion (core)
  Total: 1179
     OK: 1073
     KO: 0
  Crash: 0
Warning: 104
   Skip: 2
   Time: 1.68 seconds",We should fix those warnings before merging it to the mainline.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4320,2019-03-09T10:53:53Z,2019-07-28T16:04:57Z,2020-01-02T10:32:05Z,CLOSED,False,15,8,2,https://github.com/shuujii,Warn if assertion is missing inside `assert` (like #4309 etc),1,[],https://github.com/mruby/mruby/pull/4320,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4320#issuecomment-471404121,"Currently many warnings appear (草生える in progress).
>>> Test host <<<
mrbtest - Embeddable Ruby Test

................W.............................................................
..............................................W...............................
.............................................WW.WWWWW..WWWWWWWWWWWWWWWWWWWWWWW
WWWWWW.W.W..............?....W..........W...................WW................
............WWWWWWWWWWWWWWWWWWWWWWWWWWW.......................................
...........................................WWWWWWWWWWWWWWW.....WWWWWWW........
.....................................WWWWWWW..................................
..........................?...................................................
..............................................................................
..............................................................................
..............................................................................
..............................................................................
........................................................WW....................
..............................................................................
.......W................................................................W.....
.........
Warn: Fiber with splat in the block argument list => no assertion (mrbgems: mruby-fiber)
Warn: Array#bsearch_index => no assertion (mrbgems: mruby-array-ext)
Warn: Time.new [15.2.3.3.3] => no assertion (mrbgems: mruby-time)
Warn: Time [15.2.19] => no assertion (mrbgems: mruby-time)
Warn: Time.gm [15.2.19.6.2] => no assertion (mrbgems: mruby-time)
Warn: Time.local [15.2.19.6.3] => no assertion (mrbgems: mruby-time)
Warn: Time.mktime [15.2.19.6.4] => no assertion (mrbgems: mruby-time)
Warn: Time.now [15.2.19.6.5] => no assertion (mrbgems: mruby-time)
Warn: Time.utc [15.2.19.6.6] => no assertion (mrbgems: mruby-time)
Warn: Time#<=> [15.2.19.7.3] => no assertion (mrbgems: mruby-time)
Warn: Time#asctime [15.2.19.7.4] => no assertion (mrbgems: mruby-time)
Warn: Time#ctime [15.2.19.7.5] => no assertion (mrbgems: mruby-time)
Warn: Time#day [15.2.19.7.6] => no assertion (mrbgems: mruby-time)
Warn: Time#dst? [15.2.19.7.7] => no assertion (mrbgems: mruby-time)
Warn: Time#getgm [15.2.19.7.8] => no assertion (mrbgems: mruby-time)
Warn: Time#getlocal [15.2.19.7.9] => no assertion (mrbgems: mruby-time)
Warn: Time#getutc [15.2.19.7.10] => no assertion (mrbgems: mruby-time)
Warn: Time#gmt? [15.2.19.7.11] => no assertion (mrbgems: mruby-time)
Warn: Time#gmtime [15.2.19.7.13] => no assertion (mrbgems: mruby-time)
Warn: Time#hour [15.2.19.7.15] => no assertion (mrbgems: mruby-time)
Warn: Time#initialize_copy [15.2.19.7.17] => no assertion (mrbgems: mruby-time)
Warn: Time#localtime [15.2.19.7.18] => no assertion (mrbgems: mruby-time)
Warn: Time#mday [15.2.19.7.19] => no assertion (mrbgems: mruby-time)
Warn: Time#min [15.2.19.7.20] => no assertion (mrbgems: mruby-time)
Warn: Time#mon [15.2.19.7.21] => no assertion (mrbgems: mruby-time)
Warn: Time#month [15.2.19.7.22] => no assertion (mrbgems: mruby-time)
Warn: Times#sec [15.2.19.7.23] => no assertion (mrbgems: mruby-time)
Warn: Time#to_f [15.2.19.7.24] => no assertion (mrbgems: mruby-time)
Warn: Time#to_i [15.2.19.7.25] => no assertion (mrbgems: mruby-time)
Warn: Time#usec [15.2.19.7.26] => no assertion (mrbgems: mruby-time)
Warn: Time#utc [15.2.19.7.27] => no assertion (mrbgems: mruby-time)
Warn: Time#utc? [15.2.19.7.28] => no assertion (mrbgems: mruby-time)
Warn: Time#wday [15.2.19.7.30] => no assertion (mrbgems: mruby-time)
Warn: Time#yday [15.2.19.7.31] => no assertion (mrbgems: mruby-time)
Warn: Time#year [15.2.19.7.32] => no assertion (mrbgems: mruby-time)
Warn: Time#zone [15.2.19.7.33] => no assertion (mrbgems: mruby-time)
Warn: Time#to_s => no assertion (mrbgems: mruby-time)
Warn: Time#inspect => no assertion (mrbgems: mruby-time)
Warn: 2000 times 500us make a second => no assertion (mrbgems: mruby-time)
Warn: File TEST SETUP => no assertion (mrbgems: mruby-io)
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)
Warn: FileTest TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO.new => no assertion (mrbgems: mruby-io)
Warn: IO gc check => no assertion (mrbgems: mruby-io)
Warn: Math.sin 0 => no assertion (mrbgems: mruby-math)
Warn: Math.sin PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.cos 0 => no assertion (mrbgems: mruby-math)
Warn: Math.cos PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.tan 0 => no assertion (mrbgems: mruby-math)
Warn: Math.tan PI/4 => no assertion (mrbgems: mruby-math)
Warn: Fundamental trig identities => no assertion (mrbgems: mruby-math)
Warn: Math.erf 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1.5 => no assertion (mrbgems: mruby-math)
Warn: Math.log 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log E => no assertion (mrbgems: mruby-math)
Warn: Math.log E**3 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 2 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10**100 => no assertion (mrbgems: mruby-math)
Warn: Math.sqrt => no assertion (mrbgems: mruby-math)
Warn: Math.cbrt => no assertion (mrbgems: mruby-math)
Warn: Math.hypot => no assertion (mrbgems: mruby-math)
Warn: Math.frexp 1234 => no assertion (mrbgems: mruby-math)
Warn: Math.erf 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erf -1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc -1 => no assertion (mrbgems: mruby-math)
Warn: Check class pointer of ObjectSpace.each_object. => no assertion (mrbgems: mruby-objectspace)
Warn: [""""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc..xyzABC..XYZ""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: ""YWJ..."".unpack(""m"") should ""abc..xyzABC..XYZ"" => no assertion (mrbgems: mruby-pack)
Warn: [""3031""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [""10""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [0,1,127,128,255].pack(""C*"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: issue #1 => no assertion (mrbgems: mruby-pack)
Warn: Random#srand => no assertion (mrbgems: mruby-random)
Warn: Kernel::srand => no assertion (mrbgems: mruby-random)
Warn: Random::srand => no assertion (mrbgems: mruby-random)
Warn: fixnum => no assertion (mrbgems: mruby-random)
Warn: float => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle! => no assertion (mrbgems: mruby-random)
Warn: String#dump => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip! => no assertion (mrbgems: mruby-string-ext)
Skip: Struct.new removes existing constant => redefining Struct with same name cause warnings (mrbgems: mruby-struct)
Warn: Issue 1467 => no assertion (core)
Warn: clone Module => no assertion (core)
Warn: Check the usage of a NUL character => no assertion (core)
Warn: method definition in cmdarg => no assertion (core)
  Total: 1179
     OK: 1073
     KO: 0
  Crash: 0
Warning: 104
   Skip: 2
   Time: 1.68 seconds",How about warning only when with -v flag until we fix all warnings? Because it is easier to fix.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4320,2019-03-09T10:53:53Z,2019-07-28T16:04:57Z,2020-01-02T10:32:05Z,CLOSED,False,15,8,2,https://github.com/shuujii,Warn if assertion is missing inside `assert` (like #4309 etc),1,[],https://github.com/mruby/mruby/pull/4320,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4320#issuecomment-500360663,"Currently many warnings appear (草生える in progress).
>>> Test host <<<
mrbtest - Embeddable Ruby Test

................W.............................................................
..............................................W...............................
.............................................WW.WWWWW..WWWWWWWWWWWWWWWWWWWWWWW
WWWWWW.W.W..............?....W..........W...................WW................
............WWWWWWWWWWWWWWWWWWWWWWWWWWW.......................................
...........................................WWWWWWWWWWWWWWW.....WWWWWWW........
.....................................WWWWWWW..................................
..........................?...................................................
..............................................................................
..............................................................................
..............................................................................
..............................................................................
........................................................WW....................
..............................................................................
.......W................................................................W.....
.........
Warn: Fiber with splat in the block argument list => no assertion (mrbgems: mruby-fiber)
Warn: Array#bsearch_index => no assertion (mrbgems: mruby-array-ext)
Warn: Time.new [15.2.3.3.3] => no assertion (mrbgems: mruby-time)
Warn: Time [15.2.19] => no assertion (mrbgems: mruby-time)
Warn: Time.gm [15.2.19.6.2] => no assertion (mrbgems: mruby-time)
Warn: Time.local [15.2.19.6.3] => no assertion (mrbgems: mruby-time)
Warn: Time.mktime [15.2.19.6.4] => no assertion (mrbgems: mruby-time)
Warn: Time.now [15.2.19.6.5] => no assertion (mrbgems: mruby-time)
Warn: Time.utc [15.2.19.6.6] => no assertion (mrbgems: mruby-time)
Warn: Time#<=> [15.2.19.7.3] => no assertion (mrbgems: mruby-time)
Warn: Time#asctime [15.2.19.7.4] => no assertion (mrbgems: mruby-time)
Warn: Time#ctime [15.2.19.7.5] => no assertion (mrbgems: mruby-time)
Warn: Time#day [15.2.19.7.6] => no assertion (mrbgems: mruby-time)
Warn: Time#dst? [15.2.19.7.7] => no assertion (mrbgems: mruby-time)
Warn: Time#getgm [15.2.19.7.8] => no assertion (mrbgems: mruby-time)
Warn: Time#getlocal [15.2.19.7.9] => no assertion (mrbgems: mruby-time)
Warn: Time#getutc [15.2.19.7.10] => no assertion (mrbgems: mruby-time)
Warn: Time#gmt? [15.2.19.7.11] => no assertion (mrbgems: mruby-time)
Warn: Time#gmtime [15.2.19.7.13] => no assertion (mrbgems: mruby-time)
Warn: Time#hour [15.2.19.7.15] => no assertion (mrbgems: mruby-time)
Warn: Time#initialize_copy [15.2.19.7.17] => no assertion (mrbgems: mruby-time)
Warn: Time#localtime [15.2.19.7.18] => no assertion (mrbgems: mruby-time)
Warn: Time#mday [15.2.19.7.19] => no assertion (mrbgems: mruby-time)
Warn: Time#min [15.2.19.7.20] => no assertion (mrbgems: mruby-time)
Warn: Time#mon [15.2.19.7.21] => no assertion (mrbgems: mruby-time)
Warn: Time#month [15.2.19.7.22] => no assertion (mrbgems: mruby-time)
Warn: Times#sec [15.2.19.7.23] => no assertion (mrbgems: mruby-time)
Warn: Time#to_f [15.2.19.7.24] => no assertion (mrbgems: mruby-time)
Warn: Time#to_i [15.2.19.7.25] => no assertion (mrbgems: mruby-time)
Warn: Time#usec [15.2.19.7.26] => no assertion (mrbgems: mruby-time)
Warn: Time#utc [15.2.19.7.27] => no assertion (mrbgems: mruby-time)
Warn: Time#utc? [15.2.19.7.28] => no assertion (mrbgems: mruby-time)
Warn: Time#wday [15.2.19.7.30] => no assertion (mrbgems: mruby-time)
Warn: Time#yday [15.2.19.7.31] => no assertion (mrbgems: mruby-time)
Warn: Time#year [15.2.19.7.32] => no assertion (mrbgems: mruby-time)
Warn: Time#zone [15.2.19.7.33] => no assertion (mrbgems: mruby-time)
Warn: Time#to_s => no assertion (mrbgems: mruby-time)
Warn: Time#inspect => no assertion (mrbgems: mruby-time)
Warn: 2000 times 500us make a second => no assertion (mrbgems: mruby-time)
Warn: File TEST SETUP => no assertion (mrbgems: mruby-io)
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)
Warn: FileTest TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO.new => no assertion (mrbgems: mruby-io)
Warn: IO gc check => no assertion (mrbgems: mruby-io)
Warn: Math.sin 0 => no assertion (mrbgems: mruby-math)
Warn: Math.sin PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.cos 0 => no assertion (mrbgems: mruby-math)
Warn: Math.cos PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.tan 0 => no assertion (mrbgems: mruby-math)
Warn: Math.tan PI/4 => no assertion (mrbgems: mruby-math)
Warn: Fundamental trig identities => no assertion (mrbgems: mruby-math)
Warn: Math.erf 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1.5 => no assertion (mrbgems: mruby-math)
Warn: Math.log 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log E => no assertion (mrbgems: mruby-math)
Warn: Math.log E**3 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 2 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10**100 => no assertion (mrbgems: mruby-math)
Warn: Math.sqrt => no assertion (mrbgems: mruby-math)
Warn: Math.cbrt => no assertion (mrbgems: mruby-math)
Warn: Math.hypot => no assertion (mrbgems: mruby-math)
Warn: Math.frexp 1234 => no assertion (mrbgems: mruby-math)
Warn: Math.erf 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erf -1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc -1 => no assertion (mrbgems: mruby-math)
Warn: Check class pointer of ObjectSpace.each_object. => no assertion (mrbgems: mruby-objectspace)
Warn: [""""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc..xyzABC..XYZ""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: ""YWJ..."".unpack(""m"") should ""abc..xyzABC..XYZ"" => no assertion (mrbgems: mruby-pack)
Warn: [""3031""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [""10""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [0,1,127,128,255].pack(""C*"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: issue #1 => no assertion (mrbgems: mruby-pack)
Warn: Random#srand => no assertion (mrbgems: mruby-random)
Warn: Kernel::srand => no assertion (mrbgems: mruby-random)
Warn: Random::srand => no assertion (mrbgems: mruby-random)
Warn: fixnum => no assertion (mrbgems: mruby-random)
Warn: float => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle! => no assertion (mrbgems: mruby-random)
Warn: String#dump => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip! => no assertion (mrbgems: mruby-string-ext)
Skip: Struct.new removes existing constant => redefining Struct with same name cause warnings (mrbgems: mruby-struct)
Warn: Issue 1467 => no assertion (core)
Warn: clone Module => no assertion (core)
Warn: Check the usage of a NUL character => no assertion (core)
Warn: method definition in cmdarg => no assertion (core)
  Total: 1179
     OK: 1073
     KO: 0
  Crash: 0
Warning: 104
   Skip: 2
   Time: 1.68 seconds","All ""no assertion"" warnings is fixed. Ready to merge.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4320,2019-03-09T10:53:53Z,2019-07-28T16:04:57Z,2020-01-02T10:32:05Z,CLOSED,False,15,8,2,https://github.com/shuujii,Warn if assertion is missing inside `assert` (like #4309 etc),1,[],https://github.com/mruby/mruby/pull/4320,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4320#issuecomment-515774532,"Currently many warnings appear (草生える in progress).
>>> Test host <<<
mrbtest - Embeddable Ruby Test

................W.............................................................
..............................................W...............................
.............................................WW.WWWWW..WWWWWWWWWWWWWWWWWWWWWWW
WWWWWW.W.W..............?....W..........W...................WW................
............WWWWWWWWWWWWWWWWWWWWWWWWWWW.......................................
...........................................WWWWWWWWWWWWWWW.....WWWWWWW........
.....................................WWWWWWW..................................
..........................?...................................................
..............................................................................
..............................................................................
..............................................................................
..............................................................................
........................................................WW....................
..............................................................................
.......W................................................................W.....
.........
Warn: Fiber with splat in the block argument list => no assertion (mrbgems: mruby-fiber)
Warn: Array#bsearch_index => no assertion (mrbgems: mruby-array-ext)
Warn: Time.new [15.2.3.3.3] => no assertion (mrbgems: mruby-time)
Warn: Time [15.2.19] => no assertion (mrbgems: mruby-time)
Warn: Time.gm [15.2.19.6.2] => no assertion (mrbgems: mruby-time)
Warn: Time.local [15.2.19.6.3] => no assertion (mrbgems: mruby-time)
Warn: Time.mktime [15.2.19.6.4] => no assertion (mrbgems: mruby-time)
Warn: Time.now [15.2.19.6.5] => no assertion (mrbgems: mruby-time)
Warn: Time.utc [15.2.19.6.6] => no assertion (mrbgems: mruby-time)
Warn: Time#<=> [15.2.19.7.3] => no assertion (mrbgems: mruby-time)
Warn: Time#asctime [15.2.19.7.4] => no assertion (mrbgems: mruby-time)
Warn: Time#ctime [15.2.19.7.5] => no assertion (mrbgems: mruby-time)
Warn: Time#day [15.2.19.7.6] => no assertion (mrbgems: mruby-time)
Warn: Time#dst? [15.2.19.7.7] => no assertion (mrbgems: mruby-time)
Warn: Time#getgm [15.2.19.7.8] => no assertion (mrbgems: mruby-time)
Warn: Time#getlocal [15.2.19.7.9] => no assertion (mrbgems: mruby-time)
Warn: Time#getutc [15.2.19.7.10] => no assertion (mrbgems: mruby-time)
Warn: Time#gmt? [15.2.19.7.11] => no assertion (mrbgems: mruby-time)
Warn: Time#gmtime [15.2.19.7.13] => no assertion (mrbgems: mruby-time)
Warn: Time#hour [15.2.19.7.15] => no assertion (mrbgems: mruby-time)
Warn: Time#initialize_copy [15.2.19.7.17] => no assertion (mrbgems: mruby-time)
Warn: Time#localtime [15.2.19.7.18] => no assertion (mrbgems: mruby-time)
Warn: Time#mday [15.2.19.7.19] => no assertion (mrbgems: mruby-time)
Warn: Time#min [15.2.19.7.20] => no assertion (mrbgems: mruby-time)
Warn: Time#mon [15.2.19.7.21] => no assertion (mrbgems: mruby-time)
Warn: Time#month [15.2.19.7.22] => no assertion (mrbgems: mruby-time)
Warn: Times#sec [15.2.19.7.23] => no assertion (mrbgems: mruby-time)
Warn: Time#to_f [15.2.19.7.24] => no assertion (mrbgems: mruby-time)
Warn: Time#to_i [15.2.19.7.25] => no assertion (mrbgems: mruby-time)
Warn: Time#usec [15.2.19.7.26] => no assertion (mrbgems: mruby-time)
Warn: Time#utc [15.2.19.7.27] => no assertion (mrbgems: mruby-time)
Warn: Time#utc? [15.2.19.7.28] => no assertion (mrbgems: mruby-time)
Warn: Time#wday [15.2.19.7.30] => no assertion (mrbgems: mruby-time)
Warn: Time#yday [15.2.19.7.31] => no assertion (mrbgems: mruby-time)
Warn: Time#year [15.2.19.7.32] => no assertion (mrbgems: mruby-time)
Warn: Time#zone [15.2.19.7.33] => no assertion (mrbgems: mruby-time)
Warn: Time#to_s => no assertion (mrbgems: mruby-time)
Warn: Time#inspect => no assertion (mrbgems: mruby-time)
Warn: 2000 times 500us make a second => no assertion (mrbgems: mruby-time)
Warn: File TEST SETUP => no assertion (mrbgems: mruby-io)
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)
Warn: FileTest TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO.new => no assertion (mrbgems: mruby-io)
Warn: IO gc check => no assertion (mrbgems: mruby-io)
Warn: Math.sin 0 => no assertion (mrbgems: mruby-math)
Warn: Math.sin PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.cos 0 => no assertion (mrbgems: mruby-math)
Warn: Math.cos PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.tan 0 => no assertion (mrbgems: mruby-math)
Warn: Math.tan PI/4 => no assertion (mrbgems: mruby-math)
Warn: Fundamental trig identities => no assertion (mrbgems: mruby-math)
Warn: Math.erf 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1.5 => no assertion (mrbgems: mruby-math)
Warn: Math.log 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log E => no assertion (mrbgems: mruby-math)
Warn: Math.log E**3 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 2 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10**100 => no assertion (mrbgems: mruby-math)
Warn: Math.sqrt => no assertion (mrbgems: mruby-math)
Warn: Math.cbrt => no assertion (mrbgems: mruby-math)
Warn: Math.hypot => no assertion (mrbgems: mruby-math)
Warn: Math.frexp 1234 => no assertion (mrbgems: mruby-math)
Warn: Math.erf 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erf -1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc -1 => no assertion (mrbgems: mruby-math)
Warn: Check class pointer of ObjectSpace.each_object. => no assertion (mrbgems: mruby-objectspace)
Warn: [""""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc..xyzABC..XYZ""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: ""YWJ..."".unpack(""m"") should ""abc..xyzABC..XYZ"" => no assertion (mrbgems: mruby-pack)
Warn: [""3031""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [""10""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [0,1,127,128,255].pack(""C*"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: issue #1 => no assertion (mrbgems: mruby-pack)
Warn: Random#srand => no assertion (mrbgems: mruby-random)
Warn: Kernel::srand => no assertion (mrbgems: mruby-random)
Warn: Random::srand => no assertion (mrbgems: mruby-random)
Warn: fixnum => no assertion (mrbgems: mruby-random)
Warn: float => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle! => no assertion (mrbgems: mruby-random)
Warn: String#dump => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip! => no assertion (mrbgems: mruby-string-ext)
Skip: Struct.new removes existing constant => redefining Struct with same name cause warnings (mrbgems: mruby-struct)
Warn: Issue 1467 => no assertion (core)
Warn: clone Module => no assertion (core)
Warn: Check the usage of a NUL character => no assertion (core)
Warn: method definition in cmdarg => no assertion (core)
  Total: 1179
     OK: 1073
     KO: 0
  Crash: 0
Warning: 104
   Skip: 2
   Time: 1.68 seconds",Finally merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4320,2019-03-09T10:53:53Z,2019-07-28T16:04:57Z,2020-01-02T10:32:05Z,CLOSED,False,15,8,2,https://github.com/shuujii,Warn if assertion is missing inside `assert` (like #4309 etc),1,[],https://github.com/mruby/mruby/pull/4320,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/4320#issuecomment-515812389,"Currently many warnings appear (草生える in progress).
>>> Test host <<<
mrbtest - Embeddable Ruby Test

................W.............................................................
..............................................W...............................
.............................................WW.WWWWW..WWWWWWWWWWWWWWWWWWWWWWW
WWWWWW.W.W..............?....W..........W...................WW................
............WWWWWWWWWWWWWWWWWWWWWWWWWWW.......................................
...........................................WWWWWWWWWWWWWWW.....WWWWWWW........
.....................................WWWWWWW..................................
..........................?...................................................
..............................................................................
..............................................................................
..............................................................................
..............................................................................
........................................................WW....................
..............................................................................
.......W................................................................W.....
.........
Warn: Fiber with splat in the block argument list => no assertion (mrbgems: mruby-fiber)
Warn: Array#bsearch_index => no assertion (mrbgems: mruby-array-ext)
Warn: Time.new [15.2.3.3.3] => no assertion (mrbgems: mruby-time)
Warn: Time [15.2.19] => no assertion (mrbgems: mruby-time)
Warn: Time.gm [15.2.19.6.2] => no assertion (mrbgems: mruby-time)
Warn: Time.local [15.2.19.6.3] => no assertion (mrbgems: mruby-time)
Warn: Time.mktime [15.2.19.6.4] => no assertion (mrbgems: mruby-time)
Warn: Time.now [15.2.19.6.5] => no assertion (mrbgems: mruby-time)
Warn: Time.utc [15.2.19.6.6] => no assertion (mrbgems: mruby-time)
Warn: Time#<=> [15.2.19.7.3] => no assertion (mrbgems: mruby-time)
Warn: Time#asctime [15.2.19.7.4] => no assertion (mrbgems: mruby-time)
Warn: Time#ctime [15.2.19.7.5] => no assertion (mrbgems: mruby-time)
Warn: Time#day [15.2.19.7.6] => no assertion (mrbgems: mruby-time)
Warn: Time#dst? [15.2.19.7.7] => no assertion (mrbgems: mruby-time)
Warn: Time#getgm [15.2.19.7.8] => no assertion (mrbgems: mruby-time)
Warn: Time#getlocal [15.2.19.7.9] => no assertion (mrbgems: mruby-time)
Warn: Time#getutc [15.2.19.7.10] => no assertion (mrbgems: mruby-time)
Warn: Time#gmt? [15.2.19.7.11] => no assertion (mrbgems: mruby-time)
Warn: Time#gmtime [15.2.19.7.13] => no assertion (mrbgems: mruby-time)
Warn: Time#hour [15.2.19.7.15] => no assertion (mrbgems: mruby-time)
Warn: Time#initialize_copy [15.2.19.7.17] => no assertion (mrbgems: mruby-time)
Warn: Time#localtime [15.2.19.7.18] => no assertion (mrbgems: mruby-time)
Warn: Time#mday [15.2.19.7.19] => no assertion (mrbgems: mruby-time)
Warn: Time#min [15.2.19.7.20] => no assertion (mrbgems: mruby-time)
Warn: Time#mon [15.2.19.7.21] => no assertion (mrbgems: mruby-time)
Warn: Time#month [15.2.19.7.22] => no assertion (mrbgems: mruby-time)
Warn: Times#sec [15.2.19.7.23] => no assertion (mrbgems: mruby-time)
Warn: Time#to_f [15.2.19.7.24] => no assertion (mrbgems: mruby-time)
Warn: Time#to_i [15.2.19.7.25] => no assertion (mrbgems: mruby-time)
Warn: Time#usec [15.2.19.7.26] => no assertion (mrbgems: mruby-time)
Warn: Time#utc [15.2.19.7.27] => no assertion (mrbgems: mruby-time)
Warn: Time#utc? [15.2.19.7.28] => no assertion (mrbgems: mruby-time)
Warn: Time#wday [15.2.19.7.30] => no assertion (mrbgems: mruby-time)
Warn: Time#yday [15.2.19.7.31] => no assertion (mrbgems: mruby-time)
Warn: Time#year [15.2.19.7.32] => no assertion (mrbgems: mruby-time)
Warn: Time#zone [15.2.19.7.33] => no assertion (mrbgems: mruby-time)
Warn: Time#to_s => no assertion (mrbgems: mruby-time)
Warn: Time#inspect => no assertion (mrbgems: mruby-time)
Warn: 2000 times 500us make a second => no assertion (mrbgems: mruby-time)
Warn: File TEST SETUP => no assertion (mrbgems: mruby-io)
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)
Warn: FileTest TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO TEST SETUP => no assertion (mrbgems: mruby-io)
Warn: IO.new => no assertion (mrbgems: mruby-io)
Warn: IO gc check => no assertion (mrbgems: mruby-io)
Warn: Math.sin 0 => no assertion (mrbgems: mruby-math)
Warn: Math.sin PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.cos 0 => no assertion (mrbgems: mruby-math)
Warn: Math.cos PI/2 => no assertion (mrbgems: mruby-math)
Warn: Math.tan 0 => no assertion (mrbgems: mruby-math)
Warn: Math.tan PI/4 => no assertion (mrbgems: mruby-math)
Warn: Fundamental trig identities => no assertion (mrbgems: mruby-math)
Warn: Math.erf 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 0 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1 => no assertion (mrbgems: mruby-math)
Warn: Math.exp 1.5 => no assertion (mrbgems: mruby-math)
Warn: Math.log 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log E => no assertion (mrbgems: mruby-math)
Warn: Math.log E**3 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log2 2 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 1 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10 => no assertion (mrbgems: mruby-math)
Warn: Math.log10 10**100 => no assertion (mrbgems: mruby-math)
Warn: Math.sqrt => no assertion (mrbgems: mruby-math)
Warn: Math.cbrt => no assertion (mrbgems: mruby-math)
Warn: Math.hypot => no assertion (mrbgems: mruby-math)
Warn: Math.frexp 1234 => no assertion (mrbgems: mruby-math)
Warn: Math.erf 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc 1 => no assertion (mrbgems: mruby-math)
Warn: Math.erf -1 => no assertion (mrbgems: mruby-math)
Warn: Math.erfc -1 => no assertion (mrbgems: mruby-math)
Warn: Check class pointer of ObjectSpace.each_object. => no assertion (mrbgems: mruby-objectspace)
Warn: [""""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""\0\0\0""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc..xyzABC..XYZ""].pack(""m"") => no assertion (mrbgems: mruby-pack)
Warn: ""YWJ..."".unpack(""m"") should ""abc..xyzABC..XYZ"" => no assertion (mrbgems: mruby-pack)
Warn: [""3031""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [""10""].pack(""H*"") => no assertion (mrbgems: mruby-pack)
Warn: [0,1,127,128,255].pack(""C*"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""a"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: [""abc""].pack(""A"") => no assertion (mrbgems: mruby-pack)
Warn: issue #1 => no assertion (mrbgems: mruby-pack)
Warn: Random#srand => no assertion (mrbgems: mruby-random)
Warn: Kernel::srand => no assertion (mrbgems: mruby-random)
Warn: Random::srand => no assertion (mrbgems: mruby-random)
Warn: fixnum => no assertion (mrbgems: mruby-random)
Warn: float => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle => no assertion (mrbgems: mruby-random)
Warn: Array#shuffle! => no assertion (mrbgems: mruby-random)
Warn: String#dump => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip => no assertion (mrbgems: mruby-string-ext)
Warn: String#strip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#lstrip! => no assertion (mrbgems: mruby-string-ext)
Warn: String#rstrip! => no assertion (mrbgems: mruby-string-ext)
Skip: Struct.new removes existing constant => redefining Struct with same name cause warnings (mrbgems: mruby-struct)
Warn: Issue 1467 => no assertion (core)
Warn: clone Module => no assertion (core)
Warn: Check the usage of a NUL character => no assertion (core)
Warn: method definition in cmdarg => no assertion (core)
  Total: 1179
     OK: 1073
     KO: 0
  Crash: 0
Warning: 104
   Skip: 2
   Time: 1.68 seconds","Finally merged.

Thank you!
However, it seems that warning is not appeared even if no assertion. I will fix it later.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4321,2019-03-10T13:05:41Z,2019-03-10T14:51:04Z,2019-03-16T03:44:35Z,MERGED,True,3,0,2,https://github.com/shuujii,Add bintest header,1,[],https://github.com/mruby/mruby/pull/4321,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4321,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4322,2019-03-11T08:37:08Z,2019-03-12T14:48:49Z,2019-03-16T03:44:31Z,MERGED,True,16,15,2,https://github.com/shuujii,Reduce `String` creation in `check_(cv|const)_name_sym`,1,[],https://github.com/mruby/mruby/pull/4322,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4322,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4323,2019-03-12T00:22:46Z,2019-03-12T00:27:05Z,2019-03-16T03:44:28Z,MERGED,True,1,1,1,https://github.com/shuujii,Rename `MITL` to `LICENSE` in `.yardopts`; ref 67728c1 [ci skip],1,[],https://github.com/mruby/mruby/pull/4323,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4323,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4323,2019-03-12T00:22:46Z,2019-03-12T00:27:05Z,2019-03-16T03:44:28Z,MERGED,True,1,1,1,https://github.com/shuujii,Rename `MITL` to `LICENSE` in `.yardopts`; ref 67728c1 [ci skip],1,[],https://github.com/mruby/mruby/pull/4323,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4323#issuecomment-471795540,,"By the way, are you interested in adding your name to AUTHORS?
If you do, send PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4323,2019-03-12T00:22:46Z,2019-03-12T00:27:05Z,2019-03-16T03:44:28Z,MERGED,True,1,1,1,https://github.com/shuujii,Rename `MITL` to `LICENSE` in `.yardopts`; ref 67728c1 [ci skip],1,[],https://github.com/mruby/mruby/pull/4323,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4323#issuecomment-471798868,,I am honored to hear that. I will send PR.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4324,2019-03-12T00:48:21Z,2019-03-12T12:21:26Z,2019-03-16T03:44:26Z,MERGED,True,1,0,1,https://github.com/shuujii,Update `AUTHORS` [ci skip],1,[],https://github.com/mruby/mruby/pull/4324,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4324,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4324,2019-03-12T00:48:21Z,2019-03-12T12:21:26Z,2019-03-16T03:44:26Z,MERGED,True,1,0,1,https://github.com/shuujii,Update `AUTHORS` [ci skip],1,[],https://github.com/mruby/mruby/pull/4324,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4324#issuecomment-471992503,,"Thank you!
BTW there is the word 'Original' at first line in AUTHORS, so should separate original members and others?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4324,2019-03-12T00:48:21Z,2019-03-12T12:21:26Z,2019-03-16T03:44:26Z,MERGED,True,1,0,1,https://github.com/shuujii,Update `AUTHORS` [ci skip],1,[],https://github.com/mruby/mruby/pull/4324,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4324#issuecomment-472023241,,"The word ""original"" does not mean anything. Probably I should remove it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4325,2019-03-12T13:15:59Z,2019-03-12T14:48:04Z,2019-03-16T03:44:25Z,MERGED,True,41,31,1,https://github.com/shuujii,Fix missing assertions in `mruby-string-ext` test,1,[],https://github.com/mruby/mruby/pull/4325,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4325,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4326,2019-03-12T22:57:35Z,2019-03-13T00:06:19Z,2019-03-16T03:44:23Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `AUTHORS` [ci skip],1,[],https://github.com/mruby/mruby/pull/4326,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4326,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4327,2019-03-13T13:20:40Z,2019-03-13T13:30:09Z,2019-03-16T03:44:22Z,MERGED,True,7,21,4,https://github.com/shuujii,Do not raise an exception when bintest fail,1,[],https://github.com/mruby/mruby/pull/4327,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4327,"An exception do not raise when mrbtest fail.
There are no useful informations in exception message and backtrace.","An exception do not raise when mrbtest fail.
There are no useful informations in exception message and backtrace.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4328,2019-03-14T14:27:45Z,2019-03-15T12:19:48Z,2019-03-16T03:44:20Z,MERGED,True,25,22,4,https://github.com/shuujii,Fix constant name validation,1,[],https://github.com/mruby/mruby/pull/4328,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4328,X! etc are invalid constant name.,X! etc are invalid constant name.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4329,2019-03-15T13:50:24Z,2019-03-15T14:18:20Z,2019-03-16T03:44:18Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `FrozenError` instead of `RuntimeError` in `String#rstrip!`,1,[],https://github.com/mruby/mruby/pull/4329,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4329,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4330,2019-03-16T05:12:14Z,2019-03-16T11:30:07Z,2019-03-31T05:31:08Z,MERGED,True,11,7,1,https://github.com/shuujii,Refine `appveyor.yml`,1,[],https://github.com/mruby/mruby/pull/4330,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4330,"Add Visual Studio 2017.
Enable shallow_clone for saving build time.
Cache extracted WinFlexBison.","Add Visual Studio 2017.
Enable shallow_clone for saving build time.
Cache extracted WinFlexBison.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4331,2019-03-17T08:18:13Z,2019-03-17T09:38:07Z,2019-03-31T05:31:02Z,MERGED,True,44,6,4,https://github.com/shuujii,Fix class/instance variable name validation,1,[],https://github.com/mruby/mruby/pull/4331,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4331,"@@? etc are invalid class variable name.
@1 etc are invalid instance variable name.","@@? etc are invalid class variable name.
@1 etc are invalid instance variable name.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4332,2019-03-18T04:03:32Z,2019-03-20T09:42:55Z,2019-03-31T05:30:58Z,MERGED,True,1,1,1,https://github.com/shuujii,Use Rake instead of MiniRake on AppVeyor,1,[],https://github.com/mruby/mruby/pull/4332,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4332,"1. Parallel build
Build time becomes less than half. FYI, minirake -j4 is the following failure:
C:\projects\mruby\mrbgems\mruby-inline-struct\test\inline.c: fatal error C1041: cannot open program database 'C:\projects\mruby\vc140.pdb'; if multiple CL.EXE write to the same .PDB file, please use /FS

2. Synchronize standard output
No synchronized:
mrbtest - Embeddable Ruby Test
...........................
Total: 1165
(snip)
 Time: 1.19 seconds
bintest - Command Binary Test

.....................
Total: 21
(snip)
 Time: 0.39 seconds
mrbtest - Embeddable Ruby Test

...........................
Total: 1165
(snip)
 Skip: 23
 Time: 1.15 seconds
(snip)

>>> Test cxx_abi <<<

>>> Bintest host <<<
>>> Test host <<<

>>> Test full-debug <<<

>>> Bintest cxx_abi <<<

Synchronized:
>>> Test full-debug <<<
mrbtest - Embeddable Ruby Test
...........................
Total: 1165
(snip)
 Time: 1.25 seconds

>>> Test host <<<
mrbtest - Embeddable Ruby Test
...........................
Total: 1165
(snip)
 Time: 1.16 seconds

>>> Bintest host <<<
bintest - Command Binary Test
.....................
Total: 21
(snip)
 Time: 0.41 seconds

>>> Test cxx_abi <<<
mrbtest - Embeddable Ruby Test
(snip)","1. Parallel build
Build time becomes less than half. FYI, minirake -j4 is the following failure:
C:\projects\mruby\mrbgems\mruby-inline-struct\test\inline.c: fatal error C1041: cannot open program database 'C:\projects\mruby\vc140.pdb'; if multiple CL.EXE write to the same .PDB file, please use /FS

2. Synchronize standard output
No synchronized:
mrbtest - Embeddable Ruby Test
...........................
Total: 1165
(snip)
 Time: 1.19 seconds
bintest - Command Binary Test

.....................
Total: 21
(snip)
 Time: 0.39 seconds
mrbtest - Embeddable Ruby Test

...........................
Total: 1165
(snip)
 Skip: 23
 Time: 1.15 seconds
(snip)

>>> Test cxx_abi <<<

>>> Bintest host <<<
>>> Test host <<<

>>> Test full-debug <<<

>>> Bintest cxx_abi <<<

Synchronized:
>>> Test full-debug <<<
mrbtest - Embeddable Ruby Test
...........................
Total: 1165
(snip)
 Time: 1.25 seconds

>>> Test host <<<
mrbtest - Embeddable Ruby Test
...........................
Total: 1165
(snip)
 Time: 1.16 seconds

>>> Bintest host <<<
bintest - Command Binary Test
.....................
Total: 21
(snip)
 Time: 0.41 seconds

>>> Test cxx_abi <<<
mrbtest - Embeddable Ruby Test
(snip)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4332,2019-03-18T04:03:32Z,2019-03-20T09:42:55Z,2019-03-31T05:30:58Z,MERGED,True,1,1,1,https://github.com/shuujii,Use Rake instead of MiniRake on AppVeyor,1,[],https://github.com/mruby/mruby/pull/4332,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4332#issuecomment-473773570,"1. Parallel build
Build time becomes less than half. FYI, minirake -j4 is the following failure:
C:\projects\mruby\mrbgems\mruby-inline-struct\test\inline.c: fatal error C1041: cannot open program database 'C:\projects\mruby\vc140.pdb'; if multiple CL.EXE write to the same .PDB file, please use /FS

2. Synchronize standard output
No synchronized:
mrbtest - Embeddable Ruby Test
...........................
Total: 1165
(snip)
 Time: 1.19 seconds
bintest - Command Binary Test

.....................
Total: 21
(snip)
 Time: 0.39 seconds
mrbtest - Embeddable Ruby Test

...........................
Total: 1165
(snip)
 Skip: 23
 Time: 1.15 seconds
(snip)

>>> Test cxx_abi <<<

>>> Bintest host <<<
>>> Test host <<<

>>> Test full-debug <<<

>>> Bintest cxx_abi <<<

Synchronized:
>>> Test full-debug <<<
mrbtest - Embeddable Ruby Test
...........................
Total: 1165
(snip)
 Time: 1.25 seconds

>>> Test host <<<
mrbtest - Embeddable Ruby Test
...........................
Total: 1165
(snip)
 Time: 1.16 seconds

>>> Bintest host <<<
bintest - Command Binary Test
.....................
Total: 21
(snip)
 Time: 0.41 seconds

>>> Test cxx_abi <<<
mrbtest - Embeddable Ruby Test
(snip)","It seems parallel build is unrelated with reducing build time because tasks don't execute in parallel without multitask on Rake.
A way of using fiber in MiniRake may not be good.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4333,2019-03-19T12:08:58Z,2019-03-20T09:43:41Z,2019-03-31T05:31:04Z,MERGED,True,7,7,4,https://github.com/shuujii,Use `FrozenError` instead of `RuntimeError` in frozen object modification test,1,[],https://github.com/mruby/mruby/pull/4333,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4333,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4334,2019-03-20T14:54:00Z,2019-03-22T05:40:19Z,2019-03-31T05:30:55Z,MERGED,True,37,60,1,https://github.com/shuujii,Remove redundant content in assertion failure message and diff,1,[],https://github.com/mruby/mruby/pull/4334,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4334,"Based on test-unit RubyGem.
Example of before this patch:
- Assertion[1] Failed: Expected 1 to be nil
   Expected: nil
     Actual: 1
- Assertion[2] Failed: Expected [1, 3] to include 2
   Collection: [1, 3]
       Object: 2

Example of after this patch:
- Assertion[1]
   <1> was expected to be nil
- Assertion[2]
   <[1, 3]> was expected to include
   <2>","Based on test-unit RubyGem.
Example of before this patch:
- Assertion[1] Failed: Expected 1 to be nil
   Expected: nil
     Actual: 1
- Assertion[2] Failed: Expected [1, 3] to include 2
   Collection: [1, 3]
       Object: 2

Example of after this patch:
- Assertion[1]
   <1> was expected to be nil
- Assertion[2]
   <[1, 3]> was expected to include
   <2>",True,{}
mruby/mruby,https://github.com/mruby/mruby,4334,2019-03-20T14:54:00Z,2019-03-22T05:40:19Z,2019-03-31T05:30:55Z,MERGED,True,37,60,1,https://github.com/shuujii,Remove redundant content in assertion failure message and diff,1,[],https://github.com/mruby/mruby/pull/4334,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4334#issuecomment-475112586,"Based on test-unit RubyGem.
Example of before this patch:
- Assertion[1] Failed: Expected 1 to be nil
   Expected: nil
     Actual: 1
- Assertion[2] Failed: Expected [1, 3] to include 2
   Collection: [1, 3]
       Object: 2

Example of after this patch:
- Assertion[1]
   <1> was expected to be nil
- Assertion[2]
   <[1, 3]> was expected to include
   <2>","I admit the message has redundant content, but the new <something> format looks ugly to my eyes.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4334,2019-03-20T14:54:00Z,2019-03-22T05:40:19Z,2019-03-31T05:30:55Z,MERGED,True,37,60,1,https://github.com/shuujii,Remove redundant content in assertion failure message and diff,1,[],https://github.com/mruby/mruby/pull/4334,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4334#issuecomment-475202092,"Based on test-unit RubyGem.
Example of before this patch:
- Assertion[1] Failed: Expected 1 to be nil
   Expected: nil
     Actual: 1
- Assertion[2] Failed: Expected [1, 3] to include 2
   Collection: [1, 3]
       Object: 2

Example of after this patch:
- Assertion[1]
   <1> was expected to be nil
- Assertion[2]
   <[1, 3]> was expected to include
   <2>",I updated assertion failure message and diff based on minitest RubyGem. How about this?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4334,2019-03-20T14:54:00Z,2019-03-22T05:40:19Z,2019-03-31T05:30:55Z,MERGED,True,37,60,1,https://github.com/shuujii,Remove redundant content in assertion failure message and diff,1,[],https://github.com/mruby/mruby/pull/4334,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4334#issuecomment-475500690,"Based on test-unit RubyGem.
Example of before this patch:
- Assertion[1] Failed: Expected 1 to be nil
   Expected: nil
     Actual: 1
- Assertion[2] Failed: Expected [1, 3] to include 2
   Collection: [1, 3]
       Object: 2

Example of after this patch:
- Assertion[1]
   <1> was expected to be nil
- Assertion[2]
   <[1, 3]> was expected to include
   <2>",Looks much better. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4335,2019-03-21T12:47:58Z,2019-03-22T05:38:24Z,2019-03-31T05:30:53Z,MERGED,True,7,1,2,https://github.com/shuujii,Fix `Float#eql?`,1,[],https://github.com/mruby/mruby/pull/4335,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4335,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4336,2019-03-22T09:58:31Z,2019-03-22T13:38:06Z,2019-03-31T05:30:51Z,MERGED,True,3,5,1,https://github.com/shuujii,Simplify `assert_step` in `test/t/numeric.rb`,1,[],https://github.com/mruby/mruby/pull/4336,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4336,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4337,2019-03-23T10:35:34Z,2019-03-24T12:29:00Z,2019-03-31T05:30:50Z,MERGED,True,21,31,2,https://github.com/shuujii,Refactor `t_print` for test,1,[],https://github.com/mruby/mruby/pull/4337,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4337,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4338,2019-03-23T14:50:30Z,2019-03-25T13:06:35Z,2019-03-25T13:45:41Z,CLOSED,False,8,8,3,https://github.com/dearblue,ctype function can not take `signed char`,1,[],https://github.com/mruby/mruby/pull/4338,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4338,"The ctype function takes a value of unsigned char and EOF (probably -1).
This patch is solved for problems a compile error on ESP32 with ESP-IDF.","The ctype function takes a value of unsigned char and EOF (probably -1).
This patch is solved for problems a compile error on ESP32 with ESP-IDF.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4338,2019-03-23T14:50:30Z,2019-03-25T13:06:35Z,2019-03-25T13:45:41Z,CLOSED,False,8,8,3,https://github.com/dearblue,ctype function can not take `signed char`,1,[],https://github.com/mruby/mruby/pull/4338,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4338#issuecomment-475954371,"The ctype function takes a value of unsigned char and EOF (probably -1).
This patch is solved for problems a compile error on ESP32 with ESP-IDF.","I am not fully satisfied with this simple cast. Could you show me the exact situation (error messages, etc.) please?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4338,2019-03-23T14:50:30Z,2019-03-25T13:06:35Z,2019-03-25T13:45:41Z,CLOSED,False,8,8,3,https://github.com/dearblue,ctype function can not take `signed char`,1,[],https://github.com/mruby/mruby/pull/4338,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4338#issuecomment-475970212,"The ctype function takes a value of unsigned char and EOF (probably -1).
This patch is solved for problems a compile error on ESP32 with ESP-IDF.","GCC version: 5.2.0 (details)


compile error message (details)
CC    ../../contrib/mruby/src/string.c -> esp32/src/string.o
In file included from /usr/home/dearblue/works/samples/runmruby/contrib/mruby/src/string.c:2784:0:
/usr/home/dearblue/works/samples/runmruby/contrib/mruby/src/string.c: In function 'mrb_float_read':
/usr/home/dearblue/works/esp32/esp-idf-v3.1.3/components/newlib/include/ctype.h:57:54: error: array subscript has type 'char' [-Werror=char-subscripts]
 #define __ctype_lookup(__c) ((__ctype_ptr__+sizeof(""""[__c]))[(int)(__c)])
                                                      ^
/usr/home/dearblue/works/esp32/esp-idf-v3.1.3/components/newlib/include/ctype.h:64:23: note: in expansion of macro '__ctype_lookup'
 #define isspace(__c) (__ctype_lookup(__c)&_S)
                       ^
/usr/home/dearblue/works/samples/runmruby/contrib/mruby/src/string.c:2847:12: note: in expansion of macro 'isspace'
     while (isspace(*p)) {
            ^



According to OpenBSD, FreeBSD and Linux online manuals, you must have to pass the value of unsigned char or EOF.

https://man.openbsd.org/isalpha#CAVEATS
https://www.freebsd.org/cgi/man.cgi?query=isalpha#DESCRIPTION
https://linuxjm.osdn.jp/html/LDP_man-pages/man3/isalpha.3.html#lbAD

Also, the implementation of newlib used by ESP-IDF is stated to intentionally trigger a warning.
https://github.com/espressif/esp-idf/blob/v3.1.3/components/newlib/include/ctype.h#L48-L56
The implementation of ctype of newlib may be found at https://github.com/eblot/newlib/blob/master/newlib/libc/ctype/ctype_.c (I do not know if it matches).

However, combining the above CONFIG_STACK_CHECK_NORM with -Wno-error=char-subscripts worked with release builds without applying this patch.
I am sorry to comment on the wrong thing.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4338,2019-03-23T14:50:30Z,2019-03-25T13:06:35Z,2019-03-25T13:45:41Z,CLOSED,False,8,8,3,https://github.com/dearblue,ctype function can not take `signed char`,1,[],https://github.com/mruby/mruby/pull/4338,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4338#issuecomment-476187879,"The ctype function takes a value of unsigned char and EOF (probably -1).
This patch is solved for problems a compile error on ESP32 with ESP-IDF.",I think a5a6b51 fixed the issue. Could you check?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4338,2019-03-23T14:50:30Z,2019-03-25T13:06:35Z,2019-03-25T13:45:41Z,CLOSED,False,8,8,3,https://github.com/dearblue,ctype function can not take `signed char`,1,[],https://github.com/mruby/mruby/pull/4338,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/4338#issuecomment-476203433,"The ctype function takes a value of unsigned char and EOF (probably -1).
This patch is solved for problems a compile error on ESP32 with ESP-IDF.","I think the compilation error is resolved and there is no problem.
Thank you!",True,{}
mruby/mruby,https://github.com/mruby/mruby,4339,2019-03-24T12:42:24Z,2019-03-24T13:26:38Z,2019-03-31T05:30:47Z,MERGED,True,3,3,1,https://github.com/shuujii,Fix arguments spec in `src/proc.c`,1,[],https://github.com/mruby/mruby/pull/4339,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4339,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4341,2019-03-25T12:56:20Z,2019-03-25T13:05:19Z,2019-03-31T05:30:42Z,MERGED,True,2,23,2,https://github.com/shuujii,Remove implementation of `Symbol#===`,1,[],https://github.com/mruby/mruby/pull/4341,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4341,For reducing program size.,For reducing program size.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4341,2019-03-25T12:56:20Z,2019-03-25T13:05:19Z,2019-03-31T05:30:42Z,MERGED,True,2,23,2,https://github.com/shuujii,Remove implementation of `Symbol#===`,1,[],https://github.com/mruby/mruby/pull/4341,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/4341#issuecomment-477018150,For reducing program size.,"This shouldn't be merged.
Symbol#=== should be moved to mruby-symbol-ext gem.
Though this may change behavior of case ～ when ～ end and will broke some code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4341,2019-03-25T12:56:20Z,2019-03-25T13:05:19Z,2019-03-31T05:30:42Z,MERGED,True,2,23,2,https://github.com/shuujii,Remove implementation of `Symbol#===`,1,[],https://github.com/mruby/mruby/pull/4341,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/4341#issuecomment-477019096,For reducing program size.,See: https://wandbox.org/permlink/haMjLZxsE4drNBxV,True,{}
mruby/mruby,https://github.com/mruby/mruby,4341,2019-03-25T12:56:20Z,2019-03-25T13:05:19Z,2019-03-31T05:30:42Z,MERGED,True,2,23,2,https://github.com/shuujii,Remove implementation of `Symbol#===`,1,[],https://github.com/mruby/mruby/pull/4341,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4341#issuecomment-477027719,For reducing program size.,"Sorry, I don't understand what is the problem. Example above seems to produce the same result before and after this change.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4341,2019-03-25T12:56:20Z,2019-03-25T13:05:19Z,2019-03-31T05:30:42Z,MERGED,True,2,23,2,https://github.com/shuujii,Remove implementation of `Symbol#===`,1,[],https://github.com/mruby/mruby/pull/4341,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4341#issuecomment-477035153,For reducing program size.,"@take-cheeze probably you have misunderstood the behavior of undef. The undef operator makes the specified method uncallable (thus an error in wandbox), whereas this patch removes the definition from Symbol class (and makes the overridden Kernel#=== appeared).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4341,2019-03-25T12:56:20Z,2019-03-25T13:05:19Z,2019-03-31T05:30:42Z,MERGED,True,2,23,2,https://github.com/shuujii,Remove implementation of `Symbol#===`,1,[],https://github.com/mruby/mruby/pull/4341,https://github.com/take-cheeze,6,https://github.com/mruby/mruby/pull/4341#issuecomment-477035214,For reducing program size.,"Ah, sorry seems to fallback to Kernel#=== .",True,{}
mruby/mruby,https://github.com/mruby/mruby,4341,2019-03-25T12:56:20Z,2019-03-25T13:05:19Z,2019-03-31T05:30:42Z,MERGED,True,2,23,2,https://github.com/shuujii,Remove implementation of `Symbol#===`,1,[],https://github.com/mruby/mruby/pull/4341,https://github.com/take-cheeze,7,https://github.com/mruby/mruby/pull/4341#issuecomment-477035912,For reducing program size.,"And CRuby seems to use rb_obj_equal internally too.
https://github.com/ruby/ruby/blob/46968fab0a0cec4a3e6e37f30b13d20998ba5e7a/string.c#L10493
Specializing like mrb_type(rhs) == MRB_TT_SYMBOL && mrb_symbol(self) == mrb_symbol(rhs) seems to be better implementation.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4341,2019-03-25T12:56:20Z,2019-03-25T13:05:19Z,2019-03-31T05:30:42Z,MERGED,True,2,23,2,https://github.com/shuujii,Remove implementation of `Symbol#===`,1,[],https://github.com/mruby/mruby/pull/4341,https://github.com/take-cheeze,8,https://github.com/mruby/mruby/pull/4341#issuecomment-477040449,For reducing program size.,Though it still makes incompatibility with CRuby: https://wandbox.org/permlink/cCS7wIV2sfqUjoyv,True,{}
mruby/mruby,https://github.com/mruby/mruby,4341,2019-03-25T12:56:20Z,2019-03-25T13:05:19Z,2019-03-31T05:30:42Z,MERGED,True,2,23,2,https://github.com/shuujii,Remove implementation of `Symbol#===`,1,[],https://github.com/mruby/mruby/pull/4341,https://github.com/matz,9,https://github.com/mruby/mruby/pull/4341#issuecomment-477042372,For reducing program size.,"This is the undefined behavior in ISO, so the difference is OK, I think (and no one removes the important === from Kernel module in realistic applications).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4343,2019-03-26T13:26:10Z,2019-03-26T21:53:30Z,2019-03-31T05:30:38Z,MERGED,True,8,16,1,https://github.com/shuujii,Fix dealing with infinity and NaN in `test/assert.rb:assert_float`,1,[],https://github.com/mruby/mruby/pull/4343,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4343,"assert_float is always passed when expected value and/or actual value are
infinity or NaN. This behavior seems unintentional.
Before this patch:
 assert_float(Float::INFINITY, 1.0)  #=> pass
 assert_float(-Float::INFINITY, 1)   #=> pass
 assert_float(1, 1/0)                #=> pass
 assert_float(1, -1/0)               #=> pass
 assert_float(1.0, Float::NAN)       #=> pass
 assert_float(Float::NAN, 1)         #=> pass
After this patch:
 assert_float(Float::INFINITY, 1.0)  #=> fail: Expected 1.0 to be Infinity.
 assert_float(-Float::INFINITY, 1)   #=> fail: Expected 1 to be -Infinity.
 assert_float(1, 1/0)                #=> fail: Expected Infinity to be 1.
 assert_float(1, -1/0)               #=> fail: Expected -Infinity to be 1.
 assert_float(1.0, Float::NAN)       #=> fail: Expected NaN to be 1.0.
 assert_float(Float::NAN, 1)         #=> fail: Expected 1 to be NaN.","assert_float is always passed when expected value and/or actual value are
infinity or NaN. This behavior seems unintentional.
Before this patch:
 assert_float(Float::INFINITY, 1.0)  #=> pass
 assert_float(-Float::INFINITY, 1)   #=> pass
 assert_float(1, 1/0)                #=> pass
 assert_float(1, -1/0)               #=> pass
 assert_float(1.0, Float::NAN)       #=> pass
 assert_float(Float::NAN, 1)         #=> pass
After this patch:
 assert_float(Float::INFINITY, 1.0)  #=> fail: Expected 1.0 to be Infinity.
 assert_float(-Float::INFINITY, 1)   #=> fail: Expected 1 to be -Infinity.
 assert_float(1, 1/0)                #=> fail: Expected Infinity to be 1.
 assert_float(1, -1/0)               #=> fail: Expected -Infinity to be 1.
 assert_float(1.0, Float::NAN)       #=> fail: Expected NaN to be 1.0.
 assert_float(Float::NAN, 1)         #=> fail: Expected 1 to be NaN.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4344,2019-03-27T10:38:14Z,2019-03-27T11:24:31Z,2019-03-31T05:30:36Z,MERGED,True,2,2,1,https://github.com/shuujii,Remove unused variable in `each_backtrace()`,1,[],https://github.com/mruby/mruby/pull/4344,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4344,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4346,2019-03-28T11:13:50Z,2019-03-28T14:22:23Z,2019-03-31T05:30:34Z,MERGED,True,8,16,1,https://github.com/shuujii,Use `mrb_sym2str` in implementation of `Symbol#to_s`,1,[],https://github.com/mruby/mruby/pull/4346,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4346,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4347,2019-03-29T02:57:01Z,2019-03-29T06:49:42Z,2019-03-29T08:28:36Z,MERGED,True,1,0,1,https://github.com/tsahara,fixes build on OpenBSD.,1,[],https://github.com/mruby/mruby/pull/4347,https://github.com/tsahara,1,https://github.com/mruby/mruby/pull/4347,"va_list is defined in stdarg.h.
CC    src/array.c -> build/host/src/array.o                                    
In file included from /d/home/tsahara/src/mruby-master/src/array.c:7:          
/d/home/tsahara/src/mruby-master/include/mruby.h:1151: error: expected declarati
on specifiers or '...' before 'va_list'                                        
In file included from /d/home/tsahara/src/mruby-master/src/array.c:7:          
/d/home/tsahara/src/mruby-master/include/mruby.h:1151: error: expected declarati
on specifiers or '...' before 'va_list'                                        
rake aborted!                                                                  
Command failed with status (1): [gcc -g -std=gnu99 -O3 -Wall -Werror-implic...]
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:31:in `_run'       
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:36:in `rescue in _ru
n'                                                                             
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:32:in `_run'       
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:89:in `run'        
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:113:in `block (2 lev
els) in define_rules'
                                                                               
Caused by:                                                                     
Command failed with status (1): [""gcc"" -g -std=gnu99 -O3 -Wall -Werror-impl...]
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:33:in `_run'       
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:89:in `run'        
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:113:in `block (2 lev
els) in define_rules'
Tasks: TOP => default => all => /d/home/tsahara/src/mruby-master/build/host/lib/
libmruby.flags.mak => /d/home/tsahara/src/mruby-master/build/host/lib/libmruby.a
 => /d/home/tsahara/src/mruby-master/build/host/src/array.o                    
(See full trace by running task with --trace)","va_list is defined in stdarg.h.
CC    src/array.c -> build/host/src/array.o                                    
In file included from /d/home/tsahara/src/mruby-master/src/array.c:7:          
/d/home/tsahara/src/mruby-master/include/mruby.h:1151: error: expected declarati
on specifiers or '...' before 'va_list'                                        
In file included from /d/home/tsahara/src/mruby-master/src/array.c:7:          
/d/home/tsahara/src/mruby-master/include/mruby.h:1151: error: expected declarati
on specifiers or '...' before 'va_list'                                        
rake aborted!                                                                  
Command failed with status (1): [gcc -g -std=gnu99 -O3 -Wall -Werror-implic...]
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:31:in `_run'       
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:36:in `rescue in _ru
n'                                                                             
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:32:in `_run'       
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:89:in `run'        
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:113:in `block (2 lev
els) in define_rules'
                                                                               
Caused by:                                                                     
Command failed with status (1): [""gcc"" -g -std=gnu99 -O3 -Wall -Werror-impl...]
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:33:in `_run'       
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:89:in `run'        
/d/home/tsahara/src/mruby-master/lib/mruby/build/command.rb:113:in `block (2 lev
els) in define_rules'
Tasks: TOP => default => all => /d/home/tsahara/src/mruby-master/build/host/lib/
libmruby.flags.mak => /d/home/tsahara/src/mruby-master/build/host/lib/libmruby.a
 => /d/home/tsahara/src/mruby-master/build/host/src/array.o                    
(See full trace by running task with --trace)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4348,2019-03-29T04:27:52Z,2019-03-29T06:51:21Z,2019-03-31T05:30:33Z,MERGED,True,31,51,1,https://github.com/shuujii,Fix missing assertions in `mruby-math` test,1,[],https://github.com/mruby/mruby/pull/4348,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4348,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4349,2019-03-30T04:50:48Z,2019-03-30T13:07:30Z,2019-03-31T05:30:30Z,MERGED,True,16,8,1,https://github.com/shuujii,Add `pass` and `flunk` to `test/assert.rb`,1,[],https://github.com/mruby/mruby/pull/4349,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4349,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4351,2019-03-31T06:00:11Z,2019-03-31T08:39:10Z,2019-04-09T10:16:58Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix warning: '*' interpreted as argument prefix,1,[],https://github.com/mruby/mruby/pull/4351,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4351,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4352,2019-04-01T10:57:49Z,2019-04-02T01:27:22Z,2019-04-09T10:16:56Z,MERGED,True,1,0,1,https://github.com/shuujii,Fix modifiable class name,1,[],https://github.com/mruby/mruby/pull/4352,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4352,"Fix the following example:
```ruby 
Object.const_set :A, Module.new{const_set :B, Class.new}
ab = A::B.to_s
p ab         #=> ""A::B"" # Good
ab[0] = ""x""
p A::B.to_s  #=> ""x::B"" # Bad
```","Fix the following example:
```ruby 
Object.const_set :A, Module.new{const_set :B, Class.new}
ab = A::B.to_s
p ab         #=> ""A::B"" # Good
ab[0] = ""x""
p A::B.to_s  #=> ""x::B"" # Bad
```",True,{}
mruby/mruby,https://github.com/mruby/mruby,4352,2019-04-01T10:57:49Z,2019-04-02T01:27:22Z,2019-04-09T10:16:56Z,MERGED,True,1,0,1,https://github.com/shuujii,Fix modifiable class name,1,[],https://github.com/mruby/mruby/pull/4352,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4352#issuecomment-478538877,"Fix the following example:
```ruby 
Object.const_set :A, Module.new{const_set :B, Class.new}
ab = A::B.to_s
p ab         #=> ""A::B"" # Good
ab[0] = ""x""
p A::B.to_s  #=> ""x::B"" # Bad
```","Sorry, I've updated because fixes incorrect.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4353,2019-04-02T09:56:10Z,2019-04-02T12:14:22Z,2019-04-09T10:16:53Z,MERGED,True,15,1,1,https://github.com/shuujii,Pad leading zero to month and day in `MRUBY_RELEASE_DATE`,1,[],https://github.com/mruby/mruby/pull/4353,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4353,For Ruby compatibility.,For Ruby compatibility.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4354,2019-04-03T10:19:25Z,2019-04-03T20:10:33Z,2019-04-09T10:16:51Z,MERGED,True,0,4,1,https://github.com/shuujii,Remove unnecessary `_set_output_format` call,1,[],https://github.com/mruby/mruby/pull/4354,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4354,Three-digit exponent issue was fixed via another workaround (63b8f5c).,Three-digit exponent issue was fixed via another workaround (63b8f5c).,True,{}
mruby/mruby,https://github.com/mruby/mruby,4355,2019-04-03T10:26:16Z,2019-04-05T04:41:27Z,2019-04-09T10:16:49Z,MERGED,True,2,2,1,https://github.com/shuujii,Modify `#else` and `#endif` annotations in `src/fmt_fp.c` [ci skip],1,[],https://github.com/mruby/mruby/pull/4355,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4355,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4356,2019-04-03T13:16:56Z,2019-04-22T13:29:16Z,2019-04-23T08:07:09Z,MERGED,True,181,5,3,https://github.com/shuujii,Add `assert_match` and `assert_not_match`,1,[],https://github.com/mruby/mruby/pull/4356,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4356,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4356,2019-04-03T13:16:56Z,2019-04-22T13:29:16Z,2019-04-23T08:07:09Z,MERGED,True,181,5,3,https://github.com/shuujii,Add `assert_match` and `assert_not_match`,1,[],https://github.com/mruby/mruby/pull/4356,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4356#issuecomment-480147984,,"I am against this change. The difference in the behavior between mruby (fnmatch like matching) and other ruby (regular expression matching) is not acceptable.
Besides that, str =~ str cause TypeError in CRuby anyway.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4356,2019-04-03T13:16:56Z,2019-04-22T13:29:16Z,2019-04-23T08:07:09Z,MERGED,True,181,5,3,https://github.com/shuujii,Add `assert_match` and `assert_not_match`,1,[],https://github.com/mruby/mruby/pull/4356,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4356#issuecomment-480172441,,"Is this proposal acceptable if the behavior (fnmatch like matching) is
same between mruby and other ruby?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4356,2019-04-03T13:16:56Z,2019-04-22T13:29:16Z,2019-04-23T08:07:09Z,MERGED,True,181,5,3,https://github.com/shuujii,Add `assert_match` and `assert_not_match`,1,[],https://github.com/mruby/mruby/pull/4356,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4356#issuecomment-480185535,,Yes. I think it's OK that assert_match does not use regular expression match like CRuby.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4356,2019-04-03T13:16:56Z,2019-04-22T13:29:16Z,2019-04-23T08:07:09Z,MERGED,True,181,5,3,https://github.com/shuujii,Add `assert_match` and `assert_not_match`,1,[],https://github.com/mruby/mruby/pull/4356,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4356#issuecomment-480221465,,"I didn't make myself clear. The test/driver.rb is for mruby, so that you don't have to support CRuby here.
I should have noticed that when you added CRuby support for t_print. No branch based on RUBY_ENGINE is required.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4356,2019-04-03T13:16:56Z,2019-04-22T13:29:16Z,2019-04-23T08:07:09Z,MERGED,True,181,5,3,https://github.com/shuujii,Add `assert_match` and `assert_not_match`,1,[],https://github.com/mruby/mruby/pull/4356,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/4356#issuecomment-480265501,,"I will list my thoughts below:


test/assert.rb is running on both CRuby (for bintest) and mruby (for mrbtest). mrbgems/mruby-test/driver.c is only used on mruby.


Therefore t_print is originally supported CRuby (it rescued __t_printstr__) and branch is needed. I don't have strong opinion about branching method, though using RUBY_ENGINE is lighter than rescue, respond_to? etc, I think.


In assert_match, I can probably remove branch if I reimplement _str_match? by Ruby code. But I'm reluctant to do it because regular expression (or File.fnmatch) is available in CRuby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4356,2019-04-03T13:16:56Z,2019-04-22T13:29:16Z,2019-04-23T08:07:09Z,MERGED,True,181,5,3,https://github.com/shuujii,Add `assert_match` and `assert_not_match`,1,[],https://github.com/mruby/mruby/pull/4356,https://github.com/shuujii,7,https://github.com/mruby/mruby/pull/4356#issuecomment-482951422,,"I've updated so that the behavior on mrbtest (mruby) and bintest (Ruby) is the same.
Please review it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4357,2019-04-04T00:32:56Z,2019-04-05T08:06:22Z,2019-04-05T08:06:22Z,MERGED,True,16,16,5,https://github.com/mimaki,Update version and release date. `mruby 2.0.1 (2019-4-4)`,1,[],https://github.com/mruby/mruby/pull/4357,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4357,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4358,2019-04-04T13:32:12Z,2019-04-05T04:58:21Z,2019-04-09T10:16:45Z,MERGED,True,40,45,3,https://github.com/shuujii,Use `mrb_proc_arity` instead of `Proc#arity` call in `Method#arity`,1,[],https://github.com/mruby/mruby/pull/4358,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4358,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4360,2019-04-05T12:57:45Z,2019-04-05T13:17:35Z,2019-04-09T10:16:40Z,MERGED,True,12,1,2,https://github.com/shuujii,`Module#alias_method` should return `self` in ISO standard,1,[],https://github.com/mruby/mruby/pull/4360,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4360,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4361,2019-04-06T07:45:35Z,2019-04-06T13:22:38Z,2019-04-09T10:16:37Z,MERGED,True,1,7,2,https://github.com/shuujii,Remove unused `mrb_proc_cfunc_p()`,1,[],https://github.com/mruby/mruby/pull/4361,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4361,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4362,2019-04-06T08:50:20Z,2019-04-06T13:25:56Z,2019-04-09T10:16:33Z,MERGED,True,3,2,2,https://github.com/shuujii,Move `Array#(append|prepend)` from core to `mruby-ary-ext`,1,[],https://github.com/mruby/mruby/pull/4362,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4362,They are not included in ISO standard.,They are not included in ISO standard.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4364,2019-04-07T12:37:56Z,2019-04-07T13:12:34Z,2019-04-09T10:16:33Z,MERGED,True,32,5,1,https://github.com/shuujii,Fix test for `Array#slice`,1,[],https://github.com/mruby/mruby/pull/4364,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4364,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4366,2019-04-08T13:53:56Z,2019-04-09T21:02:17Z,2019-04-23T08:07:27Z,MERGED,True,0,3,1,https://github.com/shuujii,Remove unneeded function prototypes,1,[],https://github.com/mruby/mruby/pull/4366,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4366,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4367,2019-04-09T09:36:09Z,2019-04-09T21:03:32Z,2019-04-23T08:07:23Z,MERGED,True,20,30,8,https://github.com/shuujii,Extract frozen checking to function,1,[],https://github.com/mruby/mruby/pull/4367,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4367,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4368,2019-04-10T10:28:43Z,2019-04-10T10:34:58Z,2019-04-23T08:07:20Z,MERGED,True,25,38,3,https://github.com/shuujii,Use `mrb_immediate_p()` in `mrb_obj_freeze()` and `mrb_obj_frozen()`,1,[],https://github.com/mruby/mruby/pull/4368,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4368,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4369,2019-04-11T12:51:39Z,2019-04-12T12:01:50Z,2019-04-23T08:07:18Z,MERGED,True,0,1,1,https://github.com/shuujii,Remove incorrect flags updating in `mrb_regexp_p()`,1,[],https://github.com/mruby/mruby/pull/4369,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4369,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4371,2019-04-12T00:16:51Z,2019-04-12T10:56:36Z,2019-04-12T13:19:32Z,MERGED,True,15,12,1,https://github.com/clayton-shopify,Fix buffer overflows in parser.,1,[],https://github.com/mruby/mruby/pull/4371,https://github.com/clayton-shopify,1,https://github.com/mruby/mruby/pull/4371,"Dinko Galetić and Denis Kasak (https://hackerone.com/dgaletic) noticed that ec16888 introduced a number of buffer overflow vulnerabilities. For example, the following inputs all demonstrate crashes:
pro_fselfsemfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsekfselfselfselfselfselfselfselfselfselfselselfselfselfselftelfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsdlfself<<<<-0pro_fselfsemfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselselfselfselfselftelfselfselfselfselfselfselfelfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsdlfself<<<<-0pro_fselfsemfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselselfselfselfselftelfselfselfselfselfselfselfelfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsdlfself<<<<-0pro_fselfsemfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselselfselfselfselftelfselfselfselfselfselfselfelfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsdlfself<<<<-1

{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d3__{0d0__{0d0__{0d1__{0d1__{0d0__{0d0__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d1__{0d4__{0d0__{0d1__{0d1__{0d1__{0d0__{0d2__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d0__{0d0__{0d1__{0d1__{0d0__{0d1__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d1__{0d0__{0d1__{0d1__{0d0__{0d2__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d0__{0d0__{0d1__{0d1__{0d0__{0d0__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d1__{0d3__{0d0__{0d1__{0d1__{0d1__{0d0__{0d2__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d0__{0d0__{0d3__{0d1__{0d0__{0d1__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d0__{0d0__{0d1__{0d1__{0d0__{0d2__{0d2__{0d1__
300000000000000000000000000000000000000000000000E0030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
They provided patches for the issues, and I've revised them and combined them into this PR. I also added a patch for another potential buffer overflow vulnerability I found while reviewing the code.","Dinko Galetić and Denis Kasak (https://hackerone.com/dgaletic) noticed that ec16888 introduced a number of buffer overflow vulnerabilities. For example, the following inputs all demonstrate crashes:
pro_fselfsemfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsekfselfselfselfselfselfselfselfselfselfselselfselfselfselftelfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsdlfself<<<<-0pro_fselfsemfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselselfselfselfselftelfselfselfselfselfselfselfelfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsdlfself<<<<-0pro_fselfsemfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselselfselfselfselftelfselfselfselfselfselfselfelfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsdlfself<<<<-0pro_fselfsemfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselselfselfselfselftelfselfselfselfselfselfselfelfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfselfsdlfself<<<<-1

{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d3__{0d0__{0d0__{0d1__{0d1__{0d0__{0d0__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d1__{0d4__{0d0__{0d1__{0d1__{0d1__{0d0__{0d2__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d0__{0d0__{0d1__{0d1__{0d0__{0d1__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d1__{0d0__{0d1__{0d1__{0d0__{0d2__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d0__{0d0__{0d1__{0d1__{0d0__{0d0__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d1__{0d3__{0d0__{0d1__{0d1__{0d1__{0d0__{0d2__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d0__{0d0__{0d3__{0d1__{0d0__{0d1__{0d2__{0d1__{0d0__{0d0__{0d0__{0d1__{0d2__{0d0__{0d2__{0d4__{0d0__{0d0__{0d1__{0d1__{0d0__{0d2__{0d2__{0d1__
300000000000000000000000000000000000000000000000E0030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
They provided patches for the issues, and I've revised them and combined them into this PR. I also added a patch for another potential buffer overflow vulnerability I found while reviewing the code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4372,2019-04-12T13:43:06Z,2019-04-12T13:58:58Z,2019-04-23T08:07:15Z,MERGED,True,3,3,1,https://github.com/shuujii,Refine `assert_float`,1,[],https://github.com/mruby/mruby/pull/4372,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4372,Avoid arithmetic operations when exp and/or act are infinity or NaN.,Avoid arithmetic operations when exp and/or act are infinity or NaN.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4373,2019-04-13T10:30:47Z,2019-04-14T03:25:55Z,2019-04-23T08:07:12Z,MERGED,True,16,80,1,https://github.com/shuujii,Fix broken NaN with `MRB_NAN_BOXING`,1,[],https://github.com/mruby/mruby/pull/4373,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4373,"Example:
$ bin/mruby -e '(Float::INFINITY - Float::INFINITY).nan?'
zsh: segmentation fault

Cause:
SET_FLOAT_VALUE is not used. It is needed for normalizing NaN.
Treatment:
In my environment, this issue could be reproduced only when
infinity - infinity, however SET_FLOAT_VALUE should be used in all
arithmetic operations (regardless of boxing setting), I think.
So I fixed all similar codes by extracting to macro.","Example:
$ bin/mruby -e '(Float::INFINITY - Float::INFINITY).nan?'
zsh: segmentation fault

Cause:
SET_FLOAT_VALUE is not used. It is needed for normalizing NaN.
Treatment:
In my environment, this issue could be reproduced only when
infinity - infinity, however SET_FLOAT_VALUE should be used in all
arithmetic operations (regardless of boxing setting), I think.
So I fixed all similar codes by extracting to macro.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4374,2019-04-14T08:30:38Z,2019-04-14T11:34:14Z,2019-04-18T15:07:47Z,MERGED,True,4,3,1,https://github.com/dearblue,Fix hexdigits convertion,2,[],https://github.com/mruby/mruby/pull/4374,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4374,"Currently (0x ???):
% ./build/host/bin/mruby -e $'\177'
-e:1:1: Invalid char in expression: 0x
SyntaxError: syntax error



After patched (to 0x7F):
% ./build/host/bin/mruby -e $'\177'
-e:1:1: Invalid char in expression: 0x7F
SyntaxError: syntax error","Currently (0x ???):
% ./build/host/bin/mruby -e $'\177'
-e:1:1: Invalid char in expression: 0x
SyntaxError: syntax error



After patched (to 0x7F):
% ./build/host/bin/mruby -e $'\177'
-e:1:1: Invalid char in expression: 0x7F
SyntaxError: syntax error",True,{}
mruby/mruby,https://github.com/mruby/mruby,4375,2019-04-14T08:31:58Z,2019-04-14T11:34:46Z,2019-04-18T15:07:47Z,MERGED,True,3,0,1,https://github.com/dearblue,Include `RFiber` and `RIstruct` as a part of `RVALUE`,1,[],https://github.com/mruby/mruby/pull/4375,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4375,Just to be sure.,Just to be sure.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4376,2019-04-14T08:33:57Z,2019-04-14T11:35:19Z,2019-04-18T15:07:49Z,MERGED,True,3,4,3,https://github.com/dearblue,Fix leaked function symbols,1,[],https://github.com/mruby/mruby/pull/4376,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4376,"free_heap() in src/gc.c
symhash() in src/symbol.c
no_optimize() in mrbgems/mruby-compiler/core/codegen.c

% nm --defined-only --extern-only build/host/lib/libmruby_core.a | egrep -v ' mrbc?_| kh_|^[a-z_\.]+:' | uniq
                                                                                                              
0000000000000dd0 T symhash
                                                                                                              
0000000000001760 T free_heap
                                                                                                              
0000000000000000 T calc_crc_16_ccitt
                                                                                                              
0000000000002070 T no_optimize","free_heap() in src/gc.c
symhash() in src/symbol.c
no_optimize() in mrbgems/mruby-compiler/core/codegen.c

% nm --defined-only --extern-only build/host/lib/libmruby_core.a | egrep -v ' mrbc?_| kh_|^[a-z_\.]+:' | uniq
                                                                                                              
0000000000000dd0 T symhash
                                                                                                              
0000000000001760 T free_heap
                                                                                                              
0000000000000000 T calc_crc_16_ccitt
                                                                                                              
0000000000002070 T no_optimize",True,{}
mruby/mruby,https://github.com/mruby/mruby,4377,2019-04-14T08:59:30Z,2019-04-14T11:36:06Z,2019-04-18T15:07:50Z,MERGED,True,2,2,1,https://github.com/dearblue,Fix wrong size of instance variable if occur out of memory,2,[],https://github.com/mruby/mruby/pull/4377,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4377,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4378,2019-04-14T09:13:12Z,2019-04-14T11:36:30Z,2019-04-18T15:07:51Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix memory leak for hash table index if occur out of memory,1,[],https://github.com/mruby/mruby/pull/4378,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4378,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4379,2019-04-14T13:47:03Z,2019-04-14T22:08:27Z,2019-04-23T08:07:07Z,MERGED,True,89,180,1,https://github.com/shuujii,Extract similar codes to macros for math opcode in `mrb_vm_exec()`,1,[],https://github.com/mruby/mruby/pull/4379,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4379,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4381,2019-04-15T10:27:21Z,2019-04-15T23:39:08Z,2019-04-23T08:07:05Z,MERGED,True,45,25,1,https://github.com/shuujii,Fix missing assertions in `mruby-random` test,1,[],https://github.com/mruby/mruby/pull/4381,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4381,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4383,2019-04-16T00:59:20Z,2019-04-16T08:34:51Z,2019-04-16T08:34:51Z,MERGED,True,3,3,1,https://github.com/Shokuji,Fix test in mruby-io,2,[],https://github.com/mruby/mruby/pull/4383,https://github.com/Shokuji,1,https://github.com/mruby/mruby/pull/4383,fix an error in a test that occurred on windows msvc,fix an error in a test that occurred on windows msvc,True,{}
mruby/mruby,https://github.com/mruby/mruby,4385,2019-04-16T11:01:47Z,2019-04-16T12:53:29Z,2019-04-23T08:07:02Z,MERGED,True,3,2,2,https://github.com/shuujii,Avoid potential zero size array declaration; fix #4382,1,[],https://github.com/mruby/mruby/pull/4385,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4385,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4386,2019-04-16T17:00:04Z,2019-04-16T23:03:16Z,2019-04-18T01:17:20Z,MERGED,True,7,4,3,https://github.com/tomas,Fix compilation on gcc 4.9.x,2,[],https://github.com/mruby/mruby/pull/4386,https://github.com/tomas,1,https://github.com/mruby/mruby/pull/4386,Older gcc's don't permit these variables to be declared within for loops.,Older gcc's don't permit these variables to be declared within for loops.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4386,2019-04-16T17:00:04Z,2019-04-16T23:03:16Z,2019-04-18T01:17:20Z,MERGED,True,7,4,3,https://github.com/tomas,Fix compilation on gcc 4.9.x,2,[],https://github.com/mruby/mruby/pull/4386,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4386#issuecomment-483909927,Older gcc's don't permit these variables to be declared within for loops.,"GCC 4.9 seems to permit for loop initial declaration in C99 mode (see this example).
Does occur an error if you specify -std=gnu99 compiler option in your environment?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4386,2019-04-16T17:00:04Z,2019-04-16T23:03:16Z,2019-04-18T01:17:20Z,MERGED,True,7,4,3,https://github.com/tomas,Fix compilation on gcc 4.9.x,2,[],https://github.com/mruby/mruby/pull/4386,https://github.com/tomas,3,https://github.com/mruby/mruby/pull/4386#issuecomment-484097997,Older gcc's don't permit these variables to be declared within for loops.,"@shuujii I guess that would work too, but it would require updating build_config.rb, right?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4386,2019-04-16T17:00:04Z,2019-04-16T23:03:16Z,2019-04-18T01:17:20Z,MERGED,True,7,4,3,https://github.com/tomas,Fix compilation on gcc 4.9.x,2,[],https://github.com/mruby/mruby/pull/4386,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4386#issuecomment-484318817,Older gcc's don't permit these variables to be declared within for loops.,"Probably yes if you have customized compiler flags in build_config.rb.
If you have used default build_config.rb, tasks/toolchains/gcc.rake is loaded:

  
    
      mruby/build_config.rb
    
    
        Lines 1 to 9
      in
      2f6baf6
    
  
  
    

        
          
           MRuby::Build.new do |conf| 
        

        
          
             # load specific toolchain settings 
        

        
          
            
        

        
          
             # Gets set by the VS command prompts. 
        

        
          
             if ENV['VisualStudioVersion'] || ENV['VSINSTALLDIR'] 
        

        
          
               toolchain :visualcpp 
        

        
          
             else 
        

        
          
               toolchain :gcc 
        

        
          
             end 
        
    
  


and -std=gnu99 should be set:

  
    
      mruby/tasks/toolchains/gcc.rake
    
    
        Lines 1 to 4
      in
      2f6baf6
    
  
  
    

        
          
           MRuby::Toolchain.new(:gcc) do |conf, _params| 
        

        
          
             [conf.cc, conf.objc, conf.asm].each do |cc| 
        

        
          
               cc.command = ENV['CC'] || 'gcc' 
        

        
          
               cc.flags = [ENV['CFLAGS'] || %w(-g -std=gnu99 -O3 -Wall -Werror-implicit-function-declaration -Wdeclaration-after-statement -Wwrite-strings -Wundef)] 
        
    
  


However you need to explicitly include -std=gnu99 if you have used CFLAGS environment variable (maybe we should fix so that it is automatically set even in this case).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4387,2019-04-17T12:15:39Z,2019-04-17T23:10:45Z,2019-04-23T08:06:59Z,MERGED,True,40,14,1,https://github.com/shuujii,Add `Array#sample` test,1,[],https://github.com/mruby/mruby/pull/4387,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4387,And simplify tests for Array#shuffle and Array#shuffle!.,And simplify tests for Array#shuffle and Array#shuffle!.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4388,2019-04-18T11:09:36Z,2019-04-19T01:44:15Z,2019-04-23T08:06:57Z,MERGED,True,2,9,1,https://github.com/shuujii,Remove duplicated `include Comparable` in `mrblib/string.rb`,1,[],https://github.com/mruby/mruby/pull/4388,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4388,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4390,2019-04-19T11:27:13Z,2019-04-19T22:30:13Z,2019-04-23T08:06:51Z,MERGED,True,13,5,2,https://github.com/shuujii,Add type check (conversion) in `String#[]=`,1,[],https://github.com/mruby/mruby/pull/4390,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4390,"Before this patch:
'a'[0] = 1        #=> 1
'a'[:a] = '1'     #=> ArgumentError
'a'[:a, 0] = '1'  #=> ArgumentError
'a'[0, :a] = '1'  #=> ArgumentError
'a'[0, 1] = 1     #=> 1
After this patch / Ruby:
'a'[0] = 1        #=> TypeError
'a'[:a] = '1'     #=> TypeError
'a'[:a, 0] = '1'  #=> TypeError
'a'[0, :a] = '1'  #=> TypeError
'a'[0, 1] = 1     #=> TypeError","Before this patch:
'a'[0] = 1        #=> 1
'a'[:a] = '1'     #=> ArgumentError
'a'[:a, 0] = '1'  #=> ArgumentError
'a'[0, :a] = '1'  #=> ArgumentError
'a'[0, 1] = 1     #=> 1
After this patch / Ruby:
'a'[0] = 1        #=> TypeError
'a'[:a] = '1'     #=> TypeError
'a'[:a, 0] = '1'  #=> TypeError
'a'[0, :a] = '1'  #=> TypeError
'a'[0, 1] = 1     #=> TypeError",True,{}
mruby/mruby,https://github.com/mruby/mruby,4391,2019-04-19T13:42:44Z,2019-04-22T12:17:28Z,2019-04-26T12:41:45Z,MERGED,True,12,12,5,https://github.com/dearblue,Change modifier to `MRB_INLINE` from `static inline`,1,[],https://github.com/mruby/mruby/pull/4391,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4391,"Changed some functions defined under the include/ directory from static inline to MRB_INLINE.
The purpose is to make it easy to understand as part of the exposed C API.
However, I may have changed the extra functions to MRB_INLINE.","Changed some functions defined under the include/ directory from static inline to MRB_INLINE.
The purpose is to make it easy to understand as part of the exposed C API.
However, I may have changed the extra functions to MRB_INLINE.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4391,2019-04-19T13:42:44Z,2019-04-22T12:17:28Z,2019-04-26T12:41:45Z,MERGED,True,12,12,5,https://github.com/dearblue,Change modifier to `MRB_INLINE` from `static inline`,1,[],https://github.com/mruby/mruby/pull/4391,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4391#issuecomment-485698122,"Changed some functions defined under the include/ directory from static inline to MRB_INLINE.
The purpose is to make it easy to understand as part of the exposed C API.
However, I may have changed the extra functions to MRB_INLINE.","I didn't know the proper use of MRB_INLINE and static inline. I think this should be documented or changed to more meaningful name (MRB_INLINE_API, MRB_API_INLINE etc).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4391,2019-04-19T13:42:44Z,2019-04-22T12:17:28Z,2019-04-26T12:41:45Z,MERGED,True,12,12,5,https://github.com/dearblue,Change modifier to `MRB_INLINE` from `static inline`,1,[],https://github.com/mruby/mruby/pull/4391,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4391#issuecomment-485710975,"Changed some functions defined under the include/ directory from static inline to MRB_INLINE.
The purpose is to make it easy to understand as part of the exposed C API.
However, I may have changed the extra functions to MRB_INLINE.",MRB_INLINE is an abstraction of static inline and static __inline (MSVC). So mruby should always use MRB_INLINE instead of static inline.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4391,2019-04-19T13:42:44Z,2019-04-22T12:17:28Z,2019-04-26T12:41:45Z,MERGED,True,12,12,5,https://github.com/dearblue,Change modifier to `MRB_INLINE` from `static inline`,1,[],https://github.com/mruby/mruby/pull/4391,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4391#issuecomment-485745897,"Changed some functions defined under the include/ directory from static inline to MRB_INLINE.
The purpose is to make it easy to understand as part of the exposed C API.
However, I may have changed the extra functions to MRB_INLINE.","It seems that MRB_INLINE and static inline are the equivalent because:

  
    
      mruby/include/mruby/common.h
    
    
        Lines 57 to 61
      in
      e9f3902
    
  
  
    

        
          
           #if defined(_MSC_VER) 
        

        
          
           # define MRB_INLINE static __inline 
        

        
          
           #else 
        

        
          
           # define MRB_INLINE static inline 
        

        
          
           #endif 
        
    
  



  
    
      mruby/include/mruby/value.h
    
    
        Lines 75 to 78
      in
      e9f3902
    
  
  
    

        
          
           #if defined _MSC_VER && _MSC_VER < 1900 
        

        
          
           # ifndef __cplusplus 
        

        
          
           #  define inline __inline 
        

        
          
           # endif 
        
    
  


So these are distinguished in this PR, I think.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4391,2019-04-19T13:42:44Z,2019-04-22T12:17:28Z,2019-04-26T12:41:45Z,MERGED,True,12,12,5,https://github.com/dearblue,Change modifier to `MRB_INLINE` from `static inline`,1,[],https://github.com/mruby/mruby/pull/4391,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/4391#issuecomment-485763968,"Changed some functions defined under the include/ directory from static inline to MRB_INLINE.
The purpose is to make it easy to understand as part of the exposed C API.
However, I may have changed the extra functions to MRB_INLINE.","So mruby should always use MRB_INLINE instead of static inline.

I did not know this, and I was convincing that MRB_INLINE and static inline are distinguished.
Therefore, this PR was submitted from false recognition.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4391,2019-04-19T13:42:44Z,2019-04-22T12:17:28Z,2019-04-26T12:41:45Z,MERGED,True,12,12,5,https://github.com/dearblue,Change modifier to `MRB_INLINE` from `static inline`,1,[],https://github.com/mruby/mruby/pull/4391,https://github.com/matz,6,https://github.com/mruby/mruby/pull/4391#issuecomment-485778819,"Changed some functions defined under the include/ directory from static inline to MRB_INLINE.
The purpose is to make it easy to understand as part of the exposed C API.
However, I may have changed the extra functions to MRB_INLINE.","Ah, I forgot about inline definition in mruby/value.h. I will reorganize the defines.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4392,2019-04-19T14:06:02Z,2019-04-19T19:09:35Z,2019-04-26T12:41:47Z,MERGED,True,8,0,2,https://github.com/dearblue,Add `mrb_true_p()` and `mrb_false_p()` macro functions,1,[],https://github.com/mruby/mruby/pull/4392,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4392,"CRuby can use obj == Qtrue and obj == Qfalse if a strict comparison is required.
But mruby has no alternate it.","CRuby can use obj == Qtrue and obj == Qfalse if a strict comparison is required.
But mruby has no alternate it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4393,2019-04-19T18:37:23Z,2019-04-19T22:31:12Z,2019-04-19T22:31:12Z,MERGED,True,6,4,1,https://github.com/robfors,Fixes the twiddle wakka comparison algorithm,1,[],https://github.com/mruby/mruby/pull/4393,https://github.com/robfors,1,https://github.com/mruby/mruby/pull/4393,"Fixes the twiddle wakka comparison algorithm to support passing only a major number.
Also fixes a variable name and updates an example.","Fixes the twiddle wakka comparison algorithm to support passing only a major number.
Also fixes a variable name and updates an example.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4395,2019-04-20T12:34:33Z,2019-04-21T23:56:48Z,2019-04-23T08:06:49Z,MERGED,True,20,19,1,https://github.com/shuujii,Expand `BOXWORD_SET_VALUE()` macro in `include/mruby/boxing_word.h`,1,[],https://github.com/mruby/mruby/pull/4395,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4395,"In SET_OBJ_VALUE(), branch isn't removed because switch condition isn't
constant expression.","In SET_OBJ_VALUE(), branch isn't removed because switch condition isn't
constant expression.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4396,2019-04-21T11:50:23Z,2019-04-21T23:57:56Z,2019-04-23T08:06:37Z,MERGED,True,16,16,3,https://github.com/shuujii,Commented out `String#scan` because it is not implemented yet,1,[],https://github.com/mruby/mruby/pull/4396,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4396,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4398,2019-04-22T09:08:01Z,2019-04-22T13:27:53Z,2019-04-23T08:06:36Z,CLOSED,False,30,10,2,https://github.com/shuujii,Add `assert_predicate` and `assert_operator`,1,[],https://github.com/mruby/mruby/pull/4398,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4398,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4398,2019-04-22T09:08:01Z,2019-04-22T13:27:53Z,2019-04-23T08:06:36Z,CLOSED,False,30,10,2,https://github.com/shuujii,Add `assert_predicate` and `assert_operator`,1,[],https://github.com/mruby/mruby/pull/4398,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4398#issuecomment-485418174,,Merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4399,2019-04-22T10:26:21Z,2019-04-22T12:15:04Z,2019-04-23T08:06:35Z,MERGED,True,7,7,1,https://github.com/shuujii,Use `MRB_ASPEC_XXX()` macro in `codedump()`,1,[],https://github.com/mruby/mruby/pull/4399,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4399,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4400,2019-04-23T11:57:08Z,2019-05-15T06:47:03Z,2019-05-24T10:28:16Z,MERGED,True,20,12,4,https://github.com/shuujii,Fix name assignment to frozen anonymous class/module,1,[],https://github.com/mruby/mruby/pull/4400,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4400,"Fix the following issues:
A = Class.new.freeze              #=> FrozenError
Module.new::B = Class.new.freeze  #=> FrozenError
String::B = Module.new.freeze     #=> FrozenError","Fix the following issues:
A = Class.new.freeze              #=> FrozenError
Module.new::B = Class.new.freeze  #=> FrozenError
String::B = Module.new.freeze     #=> FrozenError",True,{}
mruby/mruby,https://github.com/mruby/mruby,4401,2019-04-23T12:14:33Z,2019-04-23T15:30:30Z,2019-05-04T06:30:51Z,MERGED,True,4,4,1,https://github.com/shuujii,"Fix ""ambiguous first argument"" warning in `test/t/float.rb`",1,[],https://github.com/mruby/mruby/pull/4401,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4401,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4402,2019-04-24T12:22:27Z,2019-04-24T22:17:11Z,2019-05-04T06:31:04Z,MERGED,True,28,1,3,https://github.com/shuujii,Fix modiying class variable to frozen class/module,1,[],https://github.com/mruby/mruby/pull/4402,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4402,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4403,2019-04-24T15:04:44Z,2019-05-21T23:58:51Z,2019-05-25T13:41:34Z,MERGED,True,49,6,3,https://github.com/dearblue,Read irep from buffers,3,[],https://github.com/mruby/mruby/pull/4403,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4403,"This patch appends _buf to some functions that read irep, and adds a function to check the buffer size as an argument.
Also, confirmation of the binary version is done by the internal read_binary_header() function which is called indirectly.

MRB_API mrb_irep *mrb_read_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf_cxt(mrb_state *mrb, const void *buf, size_t bufsize, mrbc_context *c)

If you give bufsize = -1, the buffer size is virtually not checked.
The read_binary_header () function has been changed to return MRB_DUMP_READ_FAULT if the size of irep itself is larger than the buffer size.

The mrb_read_irep () function, etc. assumes that literal data is given.
For example, given irep data received by inter-process communication etc., it will occur problems if there is a conflict between the buffer size and struct rite_binary_header.binary_size.
So I need to check the size and version of the binary data before passing it to the mrb_read_irep() function.
I wanted a function to take care of this and made it a pull request.

This PR competes with #3977.","This patch appends _buf to some functions that read irep, and adds a function to check the buffer size as an argument.
Also, confirmation of the binary version is done by the internal read_binary_header() function which is called indirectly.

MRB_API mrb_irep *mrb_read_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf_cxt(mrb_state *mrb, const void *buf, size_t bufsize, mrbc_context *c)

If you give bufsize = -1, the buffer size is virtually not checked.
The read_binary_header () function has been changed to return MRB_DUMP_READ_FAULT if the size of irep itself is larger than the buffer size.

The mrb_read_irep () function, etc. assumes that literal data is given.
For example, given irep data received by inter-process communication etc., it will occur problems if there is a conflict between the buffer size and struct rite_binary_header.binary_size.
So I need to check the size and version of the binary data before passing it to the mrb_read_irep() function.
I wanted a function to take care of this and made it a pull request.

This PR competes with #3977.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4403,2019-04-24T15:04:44Z,2019-05-21T23:58:51Z,2019-05-25T13:41:34Z,MERGED,True,49,6,3,https://github.com/dearblue,Read irep from buffers,3,[],https://github.com/mruby/mruby/pull/4403,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4403#issuecomment-492525899,"This patch appends _buf to some functions that read irep, and adds a function to check the buffer size as an argument.
Also, confirmation of the binary version is done by the internal read_binary_header() function which is called indirectly.

MRB_API mrb_irep *mrb_read_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf_cxt(mrb_state *mrb, const void *buf, size_t bufsize, mrbc_context *c)

If you give bufsize = -1, the buffer size is virtually not checked.
The read_binary_header () function has been changed to return MRB_DUMP_READ_FAULT if the size of irep itself is larger than the buffer size.

The mrb_read_irep () function, etc. assumes that literal data is given.
For example, given irep data received by inter-process communication etc., it will occur problems if there is a conflict between the buffer size and struct rite_binary_header.binary_size.
So I need to check the size and version of the binary data before passing it to the mrb_read_irep() function.
I wanted a function to take care of this and made it a pull request.

This PR competes with #3977.",I am still wondering whether function names are sufficient. mrb_read_irep_buf or mrb_read_irep_from_buf?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4403,2019-04-24T15:04:44Z,2019-05-21T23:58:51Z,2019-05-25T13:41:34Z,MERGED,True,49,6,3,https://github.com/dearblue,Read irep from buffers,3,[],https://github.com/mruby/mruby/pull/4403,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4403#issuecomment-492615811,"This patch appends _buf to some functions that read irep, and adds a function to check the buffer size as an argument.
Also, confirmation of the binary version is done by the internal read_binary_header() function which is called indirectly.

MRB_API mrb_irep *mrb_read_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf_cxt(mrb_state *mrb, const void *buf, size_t bufsize, mrbc_context *c)

If you give bufsize = -1, the buffer size is virtually not checked.
The read_binary_header () function has been changed to return MRB_DUMP_READ_FAULT if the size of irep itself is larger than the buffer size.

The mrb_read_irep () function, etc. assumes that literal data is given.
For example, given irep data received by inter-process communication etc., it will occur problems if there is a conflict between the buffer size and struct rite_binary_header.binary_size.
So I need to check the size and version of the binary data before passing it to the mrb_read_irep() function.
I wanted a function to take care of this and made it a pull request.

This PR competes with #3977.","I thought mrb_read_irep_from_buf was clear but somewhat redundant, so I made it mrb_read_irep_buf.
If it is not desirable, I will change it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4403,2019-04-24T15:04:44Z,2019-05-21T23:58:51Z,2019-05-25T13:41:34Z,MERGED,True,49,6,3,https://github.com/dearblue,Read irep from buffers,3,[],https://github.com/mruby/mruby/pull/4403,https://github.com/Asmod4n,4,https://github.com/mruby/mruby/pull/4403#issuecomment-494528264,"This patch appends _buf to some functions that read irep, and adds a function to check the buffer size as an argument.
Also, confirmation of the binary version is done by the internal read_binary_header() function which is called indirectly.

MRB_API mrb_irep *mrb_read_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf(mrb_state *mrb, const void *buf, size_t bufsize)
MRB_API mrb_value mrb_load_irep_buf_cxt(mrb_state *mrb, const void *buf, size_t bufsize, mrbc_context *c)

If you give bufsize = -1, the buffer size is virtually not checked.
The read_binary_header () function has been changed to return MRB_DUMP_READ_FAULT if the size of irep itself is larger than the buffer size.

The mrb_read_irep () function, etc. assumes that literal data is given.
For example, given irep data received by inter-process communication etc., it will occur problems if there is a conflict between the buffer size and struct rite_binary_header.binary_size.
So I need to check the size and version of the binary data before passing it to the mrb_read_irep() function.
I wanted a function to take care of this and made it a pull request.

This PR competes with #3977.","I had a similar issue a while ago when reading a irep over the network, only had to pass it a string as a mrb_value and call mrb_str_modify on it to work.
But I guess this would be a better solution :)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4405,2019-04-25T11:02:27Z,2019-04-25T16:14:12Z,2019-05-04T06:31:52Z,MERGED,True,25,0,4,https://github.com/shuujii,Singleton class of frozen object should be frozen,1,[],https://github.com/mruby/mruby/pull/4405,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4405,"Singleton class of frozen object should be frozen
Before this patch:
p (class << Object.new.freeze; self end).frozen?                #=> false
sc = class << (o=Object.new); self end; o.freeze; p sc.frozen?  #=> false
After this patch / Ruby:
p (class << Object.new.freeze; self end).frozen?                #=> true
sc = class << (o=Object.new); self end; o.freeze; p sc.frozen?  #=> true","Singleton class of frozen object should be frozen
Before this patch:
p (class << Object.new.freeze; self end).frozen?                #=> false
sc = class << (o=Object.new); self end; o.freeze; p sc.frozen?  #=> false
After this patch / Ruby:
p (class << Object.new.freeze; self end).frozen?                #=> true
sc = class << (o=Object.new); self end; o.freeze; p sc.frozen?  #=> true",True,{}
mruby/mruby,https://github.com/mruby/mruby,4407,2019-04-26T12:50:20Z,2019-07-28T16:05:27Z,2019-08-21T03:44:58Z,MERGED,True,51,19,3,https://github.com/shuujii,Add `assert_raise_with_message` and `assert_raise_with_message_pattern`,1,[],https://github.com/mruby/mruby/pull/4407,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4407,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4408,2019-04-26T13:03:28Z,2019-04-26T14:36:51Z,2019-04-27T13:39:47Z,MERGED,True,4,1,1,https://github.com/dearblue,Add customized `mrb_ro_data_p()`,1,[],https://github.com/mruby/mruby/pull/4408,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4408,"This is a patch that allows the user to define the mrb_ro_data_p() function.
It becomes effective by adding MRB_USE_CUSTOM_RO_DATA_P to conf.cc.defines in build_config.rb.
(Limitation) It can not be defined as an inline function.
Background
Defining MRB_USE_ETEXT_EDATA in ESP32 will increase RAM usage (the cause will be described later).
So, if we could use the user-definable mrb_ro_data_p () function, we could reduce it by 3.6 KiB.


without MRB_USE_ETEXT_EDATA:
free heap size (in bytes):
     before `mrb_open()`:   298728
      after `mrb_open()`:   117836 (delta  -180892)



with MRB_USE_ETEXT_EDATAP:
free heap size (in bytes):
     before `mrb_open()`:   298728
      after `mrb_open()`:    76636 (delta  -222092)



Patched with MRB_USE_CUSTOM_RO_DATA_P:
free heap size (in bytes):
     before `mrb_open()`:   298728
      after `mrb_open()`:   121516 (delta  -177212)



Why define MRB_USE_ETEXT_EDATA causes more RAM usage on ESP32
Addresses indicated by _etext and __init_array_start on ESP32 are not in the expected layout of the mrb_ro_data_p() function.
Therefore, mrb_ro_data_p() is always FALSE, and it seems that irep is now allocated in the heap.


Address:
_etext: 0x4000d66c
_edata: (undefined)
&__init_array_start: 0x3f42bd04

Instruction ROM region:
        virtual address: 0x40800000 - 0x40c00000, size: 4194304 bytes
Instruction RAM region:
        virtual address: 0x40000000 - 0x40400000, size: 4194304 bytes
        virtual address: 0x40400000 - 0x40800000, size: 4194304 bytes
Data ROM region:
        virtual address: 0x3f400000 - 0x3f800000, size: 4194304 bytes
Data RAM region:
        virtual address: 0x3ff80000 - 0x40000000, size:  524288 bytes
        virtual address: 0x3f800000 - 0x3fc00000, size: 4194304 bytes



Custom mrb_ro_data_p() for ESP32 with gcc-5.2.0 used this time
mrb_bool
mrb_ro_data_p(const char *p)
{
  for (int i = 0; i < Xthal_num_datarom; i ++) {
    uint32_t range = (uint32_t)p - Xthal_datarom_vaddr[i];
    if (range < Xthal_datarom_size[i]) { return TRUE; }
  }

  return FALSE;
}","This is a patch that allows the user to define the mrb_ro_data_p() function.
It becomes effective by adding MRB_USE_CUSTOM_RO_DATA_P to conf.cc.defines in build_config.rb.
(Limitation) It can not be defined as an inline function.
Background
Defining MRB_USE_ETEXT_EDATA in ESP32 will increase RAM usage (the cause will be described later).
So, if we could use the user-definable mrb_ro_data_p () function, we could reduce it by 3.6 KiB.


without MRB_USE_ETEXT_EDATA:
free heap size (in bytes):
     before `mrb_open()`:   298728
      after `mrb_open()`:   117836 (delta  -180892)



with MRB_USE_ETEXT_EDATAP:
free heap size (in bytes):
     before `mrb_open()`:   298728
      after `mrb_open()`:    76636 (delta  -222092)



Patched with MRB_USE_CUSTOM_RO_DATA_P:
free heap size (in bytes):
     before `mrb_open()`:   298728
      after `mrb_open()`:   121516 (delta  -177212)



Why define MRB_USE_ETEXT_EDATA causes more RAM usage on ESP32
Addresses indicated by _etext and __init_array_start on ESP32 are not in the expected layout of the mrb_ro_data_p() function.
Therefore, mrb_ro_data_p() is always FALSE, and it seems that irep is now allocated in the heap.


Address:
_etext: 0x4000d66c
_edata: (undefined)
&__init_array_start: 0x3f42bd04

Instruction ROM region:
        virtual address: 0x40800000 - 0x40c00000, size: 4194304 bytes
Instruction RAM region:
        virtual address: 0x40000000 - 0x40400000, size: 4194304 bytes
        virtual address: 0x40400000 - 0x40800000, size: 4194304 bytes
Data ROM region:
        virtual address: 0x3f400000 - 0x3f800000, size: 4194304 bytes
Data RAM region:
        virtual address: 0x3ff80000 - 0x40000000, size:  524288 bytes
        virtual address: 0x3f800000 - 0x3fc00000, size: 4194304 bytes



Custom mrb_ro_data_p() for ESP32 with gcc-5.2.0 used this time
mrb_bool
mrb_ro_data_p(const char *p)
{
  for (int i = 0; i < Xthal_num_datarom; i ++) {
    uint32_t range = (uint32_t)p - Xthal_datarom_vaddr[i];
    if (range < Xthal_datarom_size[i]) { return TRUE; }
  }

  return FALSE;
}",True,{}
mruby/mruby,https://github.com/mruby/mruby,4409,2019-04-27T03:57:39Z,2019-04-27T05:02:38Z,2019-05-04T06:31:28Z,MERGED,True,16,24,5,https://github.com/shuujii,Remove duplicated `String#each_char`,1,[],https://github.com/mruby/mruby/pull/4409,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4409,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4410,2019-04-27T13:45:11Z,2019-04-27T14:18:19Z,2019-04-27T15:07:20Z,MERGED,True,62,8,2,https://github.com/dearblue,Update document for `MRB_USE_CUSTOM_RO_DATA_P` and some configurations,2,[],https://github.com/mruby/mruby/pull/4410,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4410,"Updated document for MRB_USE_CUSTOM_RO_DATA_P.
I also updated the following matters that I noticed in the process.

(Add) MRB_USE_ETEXT_EDATA
(Add) MRB_NO_INIT_ARRAY_START
(Modify) MRB_INT16
(Add) MRB_INT32
(Modify) MRB_INT64
(Add) MRB_WITHOUT_FLOAT - comment is based on ref #3827
(Add) MRB_METHOD_CACHE - comment is based from include/mrbconf.h
(Add) MRB_METHOD_CACHE_SIZE - comment is based from include/mrbconf.h
(Add) MRB_METHOD_TABLE_INLINE - comment is based from include/mrbconf.h
(Add) MRB_ENABLE_ALL_SYMBOLS

I am only converting by Google Translate, so I can not express details.
Please point out or correct any deficiencies.","Updated document for MRB_USE_CUSTOM_RO_DATA_P.
I also updated the following matters that I noticed in the process.

(Add) MRB_USE_ETEXT_EDATA
(Add) MRB_NO_INIT_ARRAY_START
(Modify) MRB_INT16
(Add) MRB_INT32
(Modify) MRB_INT64
(Add) MRB_WITHOUT_FLOAT - comment is based on ref #3827
(Add) MRB_METHOD_CACHE - comment is based from include/mrbconf.h
(Add) MRB_METHOD_CACHE_SIZE - comment is based from include/mrbconf.h
(Add) MRB_METHOD_TABLE_INLINE - comment is based from include/mrbconf.h
(Add) MRB_ENABLE_ALL_SYMBOLS

I am only converting by Google Translate, so I can not express details.
Please point out or correct any deficiencies.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4411,2019-04-28T09:49:55Z,2019-04-28T14:44:37Z,2019-05-04T06:30:46Z,MERGED,True,8,8,1,https://github.com/shuujii,"Commented out ""Struct.new removes existing constant"" test",1,[],https://github.com/mruby/mruby/pull/4411,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4411,Because this test is always skipped.,Because this test is always skipped.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4412,2019-04-29T02:44:10Z,2019-04-29T02:53:58Z,2019-05-04T06:31:22Z,MERGED,True,1,1,1,https://github.com/shuujii,Refine the default values of `flunk`,1,[],https://github.com/mruby/mruby/pull/4412,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4412,"The default message for the second argument should be set to the first
argument because only one argument is normally specified.","The default message for the second argument should be set to the first
argument because only one argument is normally specified.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4413,2019-04-29T02:45:01Z,2019-04-29T02:54:52Z,2019-05-04T06:30:57Z,MERGED,True,36,41,3,https://github.com/shuujii,Fix missing assertions in `mruby-io` test,1,[],https://github.com/mruby/mruby/pull/4413,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4413,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4414,2019-04-30T08:06:17Z,2019-04-30T10:37:01Z,2019-05-04T06:31:16Z,MERGED,True,60,30,2,https://github.com/shuujii,Refine error message output for `mruby` command,1,[],https://github.com/mruby/mruby/pull/4414,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4414,"Write message to stderr instead of stdout.
Avoid duplicate message output (SyntaxError, ScriptError etc).
Refine invalid option message.
Suppress redundant usage output.
Fix some incorrect exit code.","Write message to stderr instead of stdout.
Avoid duplicate message output (SyntaxError, ScriptError etc).
Refine invalid option message.
Suppress redundant usage output.
Fix some incorrect exit code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4415,2019-05-01T06:11:06Z,2019-05-02T13:31:59Z,2019-05-04T06:31:34Z,MERGED,True,0,3,1,https://github.com/shuujii,Remove unneeded `argc` check in `mrb_str_aref_m()`,1,[],https://github.com/mruby/mruby/pull/4415,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4415,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4416,2019-05-01T08:10:27Z,2019-05-02T13:52:39Z,2019-05-04T06:18:20Z,MERGED,True,21,16,2,https://github.com/shuujii,Small fix in `mruby-bin-mruby`,1,[],https://github.com/mruby/mruby/pull/4416,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4416,"Modify some error messages for consistency.
Add test for codegen error.
Use regular expression for error message matching in test.","Modify some error messages for consistency.
Add test for codegen error.
Use regular expression for error message matching in test.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4417,2019-05-02T11:54:08Z,2019-05-02T14:05:13Z,2019-05-04T06:32:04Z,MERGED,True,2,2,2,https://github.com/shuujii,Unify overflow error class for conversion to integer to `RangeError`,1,[],https://github.com/mruby/mruby/pull/4417,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4417,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4418,2019-05-03T03:54:59Z,2019-05-03T15:15:57Z,2019-05-25T13:41:37Z,MERGED,True,27,28,1,https://github.com/dearblue,Clean duplicate code,1,[],https://github.com/mruby/mruby/pull/4418,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4418,"Removed duplicates in the code entered for ""Concatenate string literal"".

Most of the modifies are indent change.
% git diff -w --stat origin/master clean-duplicate
 mrbgems/mruby-compiler/core/parse.y | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)","Removed duplicates in the code entered for ""Concatenate string literal"".

Most of the modifies are indent change.
% git diff -w --stat origin/master clean-duplicate
 mrbgems/mruby-compiler/core/parse.y | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4419,2019-05-03T03:56:20Z,2019-05-03T15:17:11Z,2019-05-25T13:41:39Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix `FLAG_SRC_STATIC` always set in `mrb_read_irep()` with `MRB_USE_CUSTOM_RO_DATA_P`,1,[],https://github.com/mruby/mruby/pull/4419,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4419,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4420,2019-05-03T07:33:14Z,2019-05-03T15:19:15Z,2019-05-04T06:31:40Z,MERGED,True,8,27,2,https://github.com/shuujii,Simplify conversion process for `i` in `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/4420,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4420,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4422,2019-05-04T07:48:49Z,2019-05-04T09:28:07Z,2019-05-24T10:28:15Z,MERGED,True,10,4,1,https://github.com/shuujii,Check whether object is immediate in `mrb_gc_(register|unregister)`,1,[],https://github.com/mruby/mruby/pull/4422,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4422,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4423,2019-05-05T11:43:43Z,2019-05-05T12:57:35Z,2019-05-24T10:28:20Z,MERGED,True,2,1,1,https://github.com/shuujii,Use `mrb_fixnum_to_str()` instead of `Fixnum#to_s`,1,[],https://github.com/mruby/mruby/pull/4423,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4423,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4424,2019-05-06T14:41:08Z,2019-05-06T21:21:11Z,2019-05-24T10:28:14Z,MERGED,True,15,18,4,https://github.com/shuujii,Avoid using `mrb_str_to_cstr` if possible,1,[],https://github.com/mruby/mruby/pull/4424,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4424,"Because it always allocate new string. Replace with the followings:

Use RSRING_PTR if string is guaranteed to be null-terminated.
Use mrb_string_value_cstr or mrb_get_args(""z"") if return value isn't
modified.","Because it always allocate new string. Replace with the followings:

Use RSRING_PTR if string is guaranteed to be null-terminated.
Use mrb_string_value_cstr or mrb_get_args(""z"") if return value isn't
modified.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4425,2019-05-07T14:16:27Z,2019-05-07T21:23:51Z,2019-05-24T10:28:19Z,MERGED,True,29,16,2,https://github.com/shuujii,Refactor `mrb_str_to_cstr` and `mrb_string_value_cstr`,1,[],https://github.com/mruby/mruby/pull/4425,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4425,"Extract null byte check to function.
Avoid string allocation if null byte is included.
Use str_new instead of mrb_str_dup + mrb_str_modify","Extract null byte check to function.
Avoid string allocation if null byte is included.
Use str_new instead of mrb_str_dup + mrb_str_modify",True,{}
mruby/mruby,https://github.com/mruby/mruby,4426,2019-05-08T11:44:57Z,2019-05-08T12:32:11Z,2019-05-24T10:28:20Z,MERGED,True,3,16,2,https://github.com/shuujii,Use `mrb_string_value_cstr` in `mrb_str_to_dbl`,1,[],https://github.com/mruby/mruby/pull/4426,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4426,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4427,2019-05-09T10:02:29Z,2019-05-09T14:15:20Z,2019-05-24T10:30:50Z,CLOSED,False,2,11,1,https://github.com/shuujii,Use `mrb_obj_is_kind_of` instead of `Kernel#is_a?` in `mruby-io`,1,[],https://github.com/mruby/mruby/pull/4427,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4427,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4427,2019-05-09T10:02:29Z,2019-05-09T14:15:20Z,2019-05-24T10:30:50Z,CLOSED,False,2,11,1,https://github.com/shuujii,Use `mrb_obj_is_kind_of` instead of `Kernel#is_a?` in `mruby-io`,1,[],https://github.com/mruby/mruby/pull/4427,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4427#issuecomment-490922953,,"Sorry, I made a mistake, so I will close.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4428,2019-05-09T14:41:50Z,2019-05-10T03:25:11Z,2019-05-24T10:28:19Z,MERGED,True,4,16,2,https://github.com/shuujii,Raise `TypeError` if the argument type is unsupported in `mrb_stat0`,1,[],https://github.com/mruby/mruby/pull/4428,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4428,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4429,2019-05-10T12:11:25Z,2019-05-11T00:24:36Z,2019-05-24T10:28:18Z,MERGED,True,1,1,1,https://github.com/shuujii,Move `mrb_gc_arena_restore` to inside the loop in `mrb_file_s_chmod`,1,[],https://github.com/mruby/mruby/pull/4429,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4429,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4430,2019-05-10T14:15:58Z,2019-05-11T00:26:20Z,2019-05-11T00:26:20Z,MERGED,True,4,2,1,https://github.com/bshastry,Update ossfuzz options,1,[],https://github.com/mruby/mruby/pull/4430,https://github.com/bshastry,1,https://github.com/mruby/mruby/pull/4430,"This PR

Adds a space between earlier ossfuzz options
Adds two new options

only_ascii ensures that the fuzzer generates only ASCII input
fork=8 ensures that the fuzzer does not halt on the first timeout/out-of-memory issue, while parallelizing fuzzing across 8 independent processes.","This PR

Adds a space between earlier ossfuzz options
Adds two new options

only_ascii ensures that the fuzzer generates only ASCII input
fork=8 ensures that the fuzzer does not halt on the first timeout/out-of-memory issue, while parallelizing fuzzing across 8 independent processes.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4431,2019-05-11T09:51:33Z,2019-05-12T05:33:11Z,2019-05-24T10:28:19Z,MERGED,True,1,5,1,https://github.com/shuujii,Use `mrb_ensure_string_type` in `mrb_to_str`,1,[],https://github.com/mruby/mruby/pull/4431,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4431,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4432,2019-05-12T11:39:44Z,2019-05-12T23:33:56Z,2019-05-24T10:28:16Z,MERGED,True,78,44,1,https://github.com/shuujii,Fix missing assertions in `mruby-time` test,1,[],https://github.com/mruby/mruby/pull/4432,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4432,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4433,2019-05-13T11:16:37Z,2019-05-14T09:36:56Z,2019-05-24T10:28:16Z,MERGED,True,11,12,2,https://github.com/shuujii,Fix `Time#(asctime|ctime)` according to ISO Ruby,1,[],https://github.com/mruby/mruby/pull/4433,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4433,"A leading charactor for day is space.
Time zone does not included.

Before this patch:
Time.gm(1982,3,4,5,6,7).asctime  #=> ""Thu Mar 04 05:06:07 UTC 1982""
After this patch:
Time.gm(1982,3,4,5,6,7).asctime  #=> ""Thu Mar  4 05:06:07 1982""","A leading charactor for day is space.
Time zone does not included.

Before this patch:
Time.gm(1982,3,4,5,6,7).asctime  #=> ""Thu Mar 04 05:06:07 UTC 1982""
After this patch:
Time.gm(1982,3,4,5,6,7).asctime  #=> ""Thu Mar  4 05:06:07 1982""",True,{}
mruby/mruby,https://github.com/mruby/mruby,4434,2019-05-14T14:03:31Z,2019-05-15T05:22:48Z,2019-05-24T10:28:19Z,MERGED,True,14,5,2,https://github.com/shuujii,Refine `Time#(to_s|inspect)`,1,[],https://github.com/mruby/mruby/pull/4434,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4434,"For the following reasons:

Ruby compatibility.
Add UTC offset (time zone informations was not included by #4433).
More readable.

Example:
Before this patch:
p Time.gm(2003,4,5,6,7,8,9)        #=> Sat Apr  5 06:07:08 2003
p Time.local(2013,10,28,16,27,48)  #=> Mon Oct 28 16:27:48 2013
After this patch:
p Time.gm(2003,4,5,6,7,8,9)        #=> 2003-04-05 06:07:08 UTC
p Time.local(2013,10,28,16,27,48)  #=> 2013-10-28 16:27:48 +0900
Implementation:
I use strftime(3) because UTC offset can be added and program size become
smaller than the other implementations (using sprintf(3), self conversion
etc) in my environment.","For the following reasons:

Ruby compatibility.
Add UTC offset (time zone informations was not included by #4433).
More readable.

Example:
Before this patch:
p Time.gm(2003,4,5,6,7,8,9)        #=> Sat Apr  5 06:07:08 2003
p Time.local(2013,10,28,16,27,48)  #=> Mon Oct 28 16:27:48 2013
After this patch:
p Time.gm(2003,4,5,6,7,8,9)        #=> 2003-04-05 06:07:08 UTC
p Time.local(2013,10,28,16,27,48)  #=> 2013-10-28 16:27:48 +0900
Implementation:
I use strftime(3) because UTC offset can be added and program size become
smaller than the other implementations (using sprintf(3), self conversion
etc) in my environment.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4435,2019-05-15T07:28:19Z,2019-05-15T08:00:47Z,2019-05-24T10:28:17Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `mrbgems/mruby-io/src/file_test.c` [ci skip],1,[],https://github.com/mruby/mruby/pull/4435,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4435,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4439,2019-05-16T13:22:40Z,2019-05-16T13:49:16Z,2019-05-24T10:28:16Z,MERGED,True,72,7,3,https://github.com/shuujii,Fix `Rational#==`,1,[],https://github.com/mruby/mruby/pull/4439,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4439,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4440,2019-05-17T09:03:12Z,2019-05-17T12:26:00Z,2019-05-17T20:36:21Z,MERGED,True,3,0,1,https://github.com/kou,"Add support for CC=""gcc --option ..."" again",1,[],https://github.com/mruby/mruby/pull/4440,https://github.com/kou,1,https://github.com/mruby/mruby/pull/4440,"If $rake_root_fiber is used, sh runs command in another Fiber. If
command is ran in another Fiber, ""rescue RuntimEerror"" can't rescue
exception for system(...) failure.
How to reproduce:
$ CC=""gcc -std=gnu99"" ./minirake
(in /home/kou/work/ruby/mruby.kou)
CC    mrbgems/mruby-compiler/core/codegen.c -> build/test/mrbgems/mruby-compiler/core/codegen.o
sh: 1: gcc -std=gnu99: not found
rake aborted!
Command Failed: [""gcc -std=gnu99"" -g -std=gnu99 ...]","If $rake_root_fiber is used, sh runs command in another Fiber. If
command is ran in another Fiber, ""rescue RuntimEerror"" can't rescue
exception for system(...) failure.
How to reproduce:
$ CC=""gcc -std=gnu99"" ./minirake
(in /home/kou/work/ruby/mruby.kou)
CC    mrbgems/mruby-compiler/core/codegen.c -> build/test/mrbgems/mruby-compiler/core/codegen.o
sh: 1: gcc -std=gnu99: not found
rake aborted!
Command Failed: [""gcc -std=gnu99"" -g -std=gnu99 ...]",True,{}
mruby/mruby,https://github.com/mruby/mruby,4440,2019-05-17T09:03:12Z,2019-05-17T12:26:00Z,2019-05-17T20:36:21Z,MERGED,True,3,0,1,https://github.com/kou,"Add support for CC=""gcc --option ..."" again",1,[],https://github.com/mruby/mruby/pull/4440,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4440#issuecomment-493442728,"If $rake_root_fiber is used, sh runs command in another Fiber. If
command is ran in another Fiber, ""rescue RuntimEerror"" can't rescue
exception for system(...) failure.
How to reproduce:
$ CC=""gcc -std=gnu99"" ./minirake
(in /home/kou/work/ruby/mruby.kou)
CC    mrbgems/mruby-compiler/core/codegen.c -> build/test/mrbgems/mruby-compiler/core/codegen.o
sh: 1: gcc -std=gnu99: not found
rake aborted!
Command Failed: [""gcc -std=gnu99"" -g -std=gnu99 ...]",Does this change prevent commands from running in parallel?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4440,2019-05-17T09:03:12Z,2019-05-17T12:26:00Z,2019-05-17T20:36:21Z,MERGED,True,3,0,1,https://github.com/kou,"Add support for CC=""gcc --option ..."" again",1,[],https://github.com/mruby/mruby/pull/4440,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4440#issuecomment-493457530,"If $rake_root_fiber is used, sh runs command in another Fiber. If
command is ran in another Fiber, ""rescue RuntimEerror"" can't rescue
exception for system(...) failure.
How to reproduce:
$ CC=""gcc -std=gnu99"" ./minirake
(in /home/kou/work/ruby/mruby.kou)
CC    mrbgems/mruby-compiler/core/codegen.c -> build/test/mrbgems/mruby-compiler/core/codegen.o
sh: 1: gcc -std=gnu99: not found
rake aborted!
Command Failed: [""gcc -std=gnu99"" -g -std=gnu99 ...]",@shuujii you are right. I will fix the issue in a different way.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4440,2019-05-17T09:03:12Z,2019-05-17T12:26:00Z,2019-05-17T20:36:21Z,MERGED,True,3,0,1,https://github.com/kou,"Add support for CC=""gcc --option ..."" again",1,[],https://github.com/mruby/mruby/pull/4440,https://github.com/kou,4,https://github.com/mruby/mruby/pull/4440#issuecomment-493591555,"If $rake_root_fiber is used, sh runs command in another Fiber. If
command is ran in another Fiber, ""rescue RuntimEerror"" can't rescue
exception for system(...) failure.
How to reproduce:
$ CC=""gcc -std=gnu99"" ./minirake
(in /home/kou/work/ruby/mruby.kou)
CC    mrbgems/mruby-compiler/core/codegen.c -> build/test/mrbgems/mruby-compiler/core/codegen.o
sh: 1: gcc -std=gnu99: not found
rake aborted!
Command Failed: [""gcc -std=gnu99"" -g -std=gnu99 ...]","Oh, sorry.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4441,2019-05-17T10:57:40Z,2019-05-17T12:26:49Z,2019-05-24T10:28:15Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix `Numeric#to_r`,1,[],https://github.com/mruby/mruby/pull/4441,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4441,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4442,2019-05-17T11:53:04Z,2019-05-17T12:27:48Z,2019-05-24T10:28:15Z,MERGED,True,8,2,3,https://github.com/shuujii,Drop dependency from `mruby-rational` to `mruby-numeric-ext`,1,[],https://github.com/mruby/mruby/pull/4442,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4442,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4443,2019-05-17T12:23:39Z,2019-05-17T12:30:40Z,2019-05-24T10:28:17Z,MERGED,True,1,1,1,https://github.com/shuujii,Move `Integral#(zero|nonzero|positive|negative)?` to `Numeric`,1,[],https://github.com/mruby/mruby/pull/4443,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4443,"Because these methods work if object is Comparable, and Numeric is
Comparable.","Because these methods work if object is Comparable, and Numeric is
Comparable.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4444,2019-05-17T12:24:46Z,2019-05-17T12:30:21Z,2019-05-17T12:30:21Z,MERGED,True,755,0,4,https://github.com/bshastry,proto fuzzer: Add source files necessary to compile proto fuzzer,1,[],https://github.com/mruby/mruby/pull/4444,https://github.com/bshastry,1,https://github.com/mruby/mruby/pull/4444,"This PR

adds source and header files necessary to build and run proto fuzzer on oss-fuzz
adds a simple proto specification for the ruby language

Once this PR is merged, I will push changes necessary to build the proto fuzzer to oss-fuzz.","This PR

adds source and header files necessary to build and run proto fuzzer on oss-fuzz
adds a simple proto specification for the ruby language

Once this PR is merged, I will push changes necessary to build the proto fuzzer to oss-fuzz.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4445,2019-05-17T12:27:42Z,2019-05-17T12:31:09Z,2019-05-17T12:31:10Z,MERGED,True,5,1,2,https://github.com/bshastry,Add/Edit ossfuzz config options,1,[],https://github.com/mruby/mruby/pull/4445,https://github.com/bshastry,1,https://github.com/mruby/mruby/pull/4445,"This PR

Modifies the fork config parameter inside mruby_fuzzer.options to 1 as suggested here
Adds a libfuzzer options file for the yet-to-be-enabled proto fuzzer.","This PR

Modifies the fork config parameter inside mruby_fuzzer.options to 1 as suggested here
Adds a libfuzzer options file for the yet-to-be-enabled proto fuzzer.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4446,2019-05-17T13:37:06Z,2019-05-17T13:45:46Z,2019-05-25T13:41:44Z,MERGED,True,66,0,1,https://github.com/dearblue,(Proof of Concept) mruby tuning profiles [ci skip],1,[],https://github.com/mruby/mruby/pull/4446,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4446,"Not only mruby, it is one of the difficult things to adjust the performance vs. memory efficiency of the software.
If the approximate target device is divided and the adjustment value for it is prepared by default, it is a good indicator to do fine adjustment.
This PR divides into four profiles.
Caution: There is no basis for the definitions in the patch.

MRB_CONSTRAINED_BASELINE_PROFILE - for microprocessors. Reduce memory consumption.
MRB_BASELINE_PROFILE - Default value of mruby.
MRB_MAIN_PROFILE - For desktop computers. Assume that a huge amount of RAM, 10 MiB or more, is on board.
MRB_HIGH_PROFILE - for servers. Assume that mruby VM has a long life.

As you can see the profile name has been stolen imitated from H.264.","Not only mruby, it is one of the difficult things to adjust the performance vs. memory efficiency of the software.
If the approximate target device is divided and the adjustment value for it is prepared by default, it is a good indicator to do fine adjustment.
This PR divides into four profiles.
Caution: There is no basis for the definitions in the patch.

MRB_CONSTRAINED_BASELINE_PROFILE - for microprocessors. Reduce memory consumption.
MRB_BASELINE_PROFILE - Default value of mruby.
MRB_MAIN_PROFILE - For desktop computers. Assume that a huge amount of RAM, 10 MiB or more, is on board.
MRB_HIGH_PROFILE - for servers. Assume that mruby VM has a long life.

As you can see the profile name has been stolen imitated from H.264.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4446,2019-05-17T13:37:06Z,2019-05-17T13:45:46Z,2019-05-25T13:41:44Z,MERGED,True,66,0,1,https://github.com/dearblue,(Proof of Concept) mruby tuning profiles [ci skip],1,[],https://github.com/mruby/mruby/pull/4446,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4446#issuecomment-493459144,"Not only mruby, it is one of the difficult things to adjust the performance vs. memory efficiency of the software.
If the approximate target device is divided and the adjustment value for it is prepared by default, it is a good indicator to do fine adjustment.
This PR divides into four profiles.
Caution: There is no basis for the definitions in the patch.

MRB_CONSTRAINED_BASELINE_PROFILE - for microprocessors. Reduce memory consumption.
MRB_BASELINE_PROFILE - Default value of mruby.
MRB_MAIN_PROFILE - For desktop computers. Assume that a huge amount of RAM, 10 MiB or more, is on board.
MRB_HIGH_PROFILE - for servers. Assume that mruby VM has a long life.

As you can see the profile name has been stolen imitated from H.264.",Very interesting. I will merge it to experiment.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4446,2019-05-17T13:37:06Z,2019-05-17T13:45:46Z,2019-05-25T13:41:44Z,MERGED,True,66,0,1,https://github.com/dearblue,(Proof of Concept) mruby tuning profiles [ci skip],1,[],https://github.com/mruby/mruby/pull/4446,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4446#issuecomment-493479032,"Not only mruby, it is one of the difficult things to adjust the performance vs. memory efficiency of the software.
If the approximate target device is divided and the adjustment value for it is prepared by default, it is a good indicator to do fine adjustment.
This PR divides into four profiles.
Caution: There is no basis for the definitions in the patch.

MRB_CONSTRAINED_BASELINE_PROFILE - for microprocessors. Reduce memory consumption.
MRB_BASELINE_PROFILE - Default value of mruby.
MRB_MAIN_PROFILE - For desktop computers. Assume that a huge amount of RAM, 10 MiB or more, is on board.
MRB_HIGH_PROFILE - for servers. Assume that mruby VM has a long life.

As you can see the profile name has been stolen imitated from H.264.","Oh...
Because I using ~~stolen~~ in the intention of joke, is my commit message OK...?
And I hope will be removed it anytime you no longer need or unable mature by next mruby release...",True,{}
mruby/mruby,https://github.com/mruby/mruby,4446,2019-05-17T13:37:06Z,2019-05-17T13:45:46Z,2019-05-25T13:41:44Z,MERGED,True,66,0,1,https://github.com/dearblue,(Proof of Concept) mruby tuning profiles [ci skip],1,[],https://github.com/mruby/mruby/pull/4446,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/4446#issuecomment-493675671,"Not only mruby, it is one of the difficult things to adjust the performance vs. memory efficiency of the software.
If the approximate target device is divided and the adjustment value for it is prepared by default, it is a good indicator to do fine adjustment.
This PR divides into four profiles.
Caution: There is no basis for the definitions in the patch.

MRB_CONSTRAINED_BASELINE_PROFILE - for microprocessors. Reduce memory consumption.
MRB_BASELINE_PROFILE - Default value of mruby.
MRB_MAIN_PROFILE - For desktop computers. Assume that a huge amount of RAM, 10 MiB or more, is on board.
MRB_HIGH_PROFILE - for servers. Assume that mruby VM has a long life.

As you can see the profile name has been stolen imitated from H.264.","I forgot to mention how to apply the profile.
#I think it is not necessary to explain to wise people anew, though.
Just add the profile name to conf.cc.defines in build_config.rb.

As a concept, I came up with a conf.profile like conf.toolchain and conf.gembox now.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4447,2019-05-18T09:46:29Z,2019-05-18T09:56:39Z,2019-05-24T10:28:18Z,MERGED,True,2,2,1,https://github.com/shuujii,Move `Numeric#__coerce_step_counter` to `Integral`,1,[],https://github.com/mruby/mruby/pull/4447,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4447,This method is only used in Integral#step,This method is only used in Integral#step,True,{}
mruby/mruby,https://github.com/mruby/mruby,4448,2019-05-18T09:46:43Z,2019-05-18T09:57:48Z,2019-05-24T10:28:18Z,MERGED,True,13,9,2,https://github.com/shuujii,Move `Object#(Rational|Complex)` to `Kernel`,1,[],https://github.com/mruby/mruby/pull/4448,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4448,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4449,2019-05-18T09:47:04Z,2019-05-19T13:18:37Z,2019-05-24T10:29:12Z,CLOSED,False,34,35,4,https://github.com/shuujii,Move `tap` to `mruby-kernel-ext` from `mruby-object-ext`,1,[],https://github.com/mruby/mruby/pull/4449,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4449,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4449,2019-05-18T09:47:04Z,2019-05-19T13:18:37Z,2019-05-24T10:29:12Z,CLOSED,False,34,35,4,https://github.com/shuujii,Move `tap` to `mruby-kernel-ext` from `mruby-object-ext`,1,[],https://github.com/mruby/mruby/pull/4449,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4449#issuecomment-493756031,,"I think this is the wrong direction. mruby-kernel-ext should contain function like methods, and mruby-object-ext should contain methods shared by all objects. Thank you for pointing out the inconsistency, anyway.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4450,2019-05-18T10:31:17Z,2019-05-19T13:21:32Z,2019-05-24T10:28:18Z,MERGED,True,1,1,1,https://github.com/shuujii,Move `Kernel#instance_exec` to `BasicObject`,1,[],https://github.com/mruby/mruby/pull/4450,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4450,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4451,2019-05-18T11:30:02Z,2019-11-12T11:50:52Z,2019-11-12T11:50:52Z,CLOSED,False,116,1,8,https://github.com/ukrainskiysergey,Implementation of method reference operator,2,[],https://github.com/mruby/mruby/pull/4451,https://github.com/ukrainskiysergey,1,https://github.com/mruby/mruby/pull/4451,"Experimental implementation of experimental Method Reference Operator (based on ruby/ruby@67c5747).
Not sure if it should be merged into mruby, but I ported it just in case.","Experimental implementation of experimental Method Reference Operator (based on ruby/ruby@67c5747).
Not sure if it should be merged into mruby, but I ported it just in case.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4451,2019-05-18T11:30:02Z,2019-11-12T11:50:52Z,2019-11-12T11:50:52Z,CLOSED,False,116,1,8,https://github.com/ukrainskiysergey,Implementation of method reference operator,2,[],https://github.com/mruby/mruby/pull/4451,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4451#issuecomment-552861402,"Experimental implementation of experimental Method Reference Operator (based on ruby/ruby@67c5747).
Not sure if it should be merged into mruby, but I ported it just in case.","The method reference operator was retracted from Ruby 2.7 (decided in today's dev meeting).
It may be resurrected in the future. I close this issue for the time being.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4452,2019-05-18T12:27:34Z,2019-05-19T13:23:14Z,2019-05-24T10:28:17Z,MERGED,True,1,1,2,https://github.com/shuujii,Move `Kernel#equal? to `BasicObject`,1,[],https://github.com/mruby/mruby/pull/4452,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4452,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4453,2019-05-18T12:27:46Z,2019-05-19T13:23:58Z,2019-05-24T10:28:18Z,MERGED,True,3,3,2,https://github.com/shuujii,Move `Kernel#instance_eval` to `BasicObject`,1,[],https://github.com/mruby/mruby/pull/4453,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4453,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4454,2019-05-19T05:04:30Z,2019-05-19T13:24:49Z,2019-05-24T10:28:16Z,MERGED,True,165,6,2,https://github.com/shuujii,Fix `Rational#<=>(Numeric)`,1,[],https://github.com/mruby/mruby/pull/4454,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4454,Reported by Sergey Ukrainskiy: f5fb130#r33590698,Reported by Sergey Ukrainskiy: f5fb130#r33590698,True,{}
mruby/mruby,https://github.com/mruby/mruby,4455,2019-05-19T07:43:35Z,2019-05-19T13:29:26Z,2019-05-25T13:41:47Z,MERGED,True,0,72,2,https://github.com/dearblue,"Remove ""LINE"" section reader",1,[],https://github.com/mruby/mruby/pull/4455,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4455,Because it is not currently output by mrbc.,Because it is not currently output by mrbc.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4455,2019-05-19T07:43:35Z,2019-05-19T13:29:26Z,2019-05-25T13:41:47Z,MERGED,True,0,72,2,https://github.com/dearblue,"Remove ""LINE"" section reader",1,[],https://github.com/mruby/mruby/pull/4455,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4455#issuecomment-493757629,Because it is not currently output by mrbc.,OK. Now is the time to remove this.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4456,2019-05-19T07:44:45Z,2019-05-19T13:28:48Z,2020-05-09T13:37:09Z,CLOSED,False,7,96,4,https://github.com/dearblue,Remove byteorder processing from irep load/dump,1,[],https://github.com/mruby/mruby/pull/4456,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4456,"The -E and -e switches of the mrbc command are remains.
Because for backward compatibility.
To be on the safe side, I confirmed that .mrb files generated by mrbc are the same on little-endian machine (FreeBSD 12.0 AMD64) and big-endian machine (NetBSD 8.0 SPARC64 on QEmu).","The -E and -e switches of the mrbc command are remains.
Because for backward compatibility.
To be on the safe side, I confirmed that .mrb files generated by mrbc are the same on little-endian machine (FreeBSD 12.0 AMD64) and big-endian machine (NetBSD 8.0 SPARC64 on QEmu).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4456,2019-05-19T07:44:45Z,2019-05-19T13:28:48Z,2020-05-09T13:37:09Z,CLOSED,False,7,96,4,https://github.com/dearblue,Remove byteorder processing from irep load/dump,1,[],https://github.com/mruby/mruby/pull/4456,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4456#issuecomment-493757578,"The -E and -e switches of the mrbc command are remains.
Because for backward compatibility.
To be on the safe side, I confirmed that .mrb files generated by mrbc are the same on little-endian machine (FreeBSD 12.0 AMD64) and big-endian machine (NetBSD 8.0 SPARC64 on QEmu).","We will keep this (for a while). Because we have a vague plan to store endian native integers/floats in the mrb files. If we abandon the idea, we will apply this patch.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4457,2019-05-20T09:46:14Z,2019-05-20T22:56:22Z,2019-05-24T10:28:15Z,MERGED,True,34,34,1,https://github.com/shuujii,"Change the order of ""expected"" and ""actual"" in `mruby-rational` test",1,[],https://github.com/mruby/mruby/pull/4457,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4457,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4458,2019-05-20T09:46:28Z,2019-05-20T21:38:05Z,2019-05-24T10:28:15Z,MERGED,True,2,4,2,https://github.com/shuujii,Drop dependency from `mruby-rational` to `mruby-object-ext`,1,[],https://github.com/mruby/mruby/pull/4458,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4458,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4459,2019-05-21T00:31:28Z,2019-05-21T00:34:43Z,2019-05-24T10:28:19Z,MERGED,True,1,1,1,https://github.com/shuujii,Revert part of #4457,1,[],https://github.com/mruby/mruby/pull/4459,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4459,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4461,2019-05-21T11:40:07Z,2019-05-21T12:07:40Z,2019-05-24T10:28:18Z,MERGED,True,18,22,2,https://github.com/shuujii,"Move `**`,`/`,`quo`,`div` and comparison methods to Integral from Numeric",1,[],https://github.com/mruby/mruby/pull/4461,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4461,"Having these methods in Numeric can get in the way of creating subclasses of
Numeric because they only support Fixnum and Float.","Having these methods in Numeric can get in the way of creating subclasses of
Numeric because they only support Fixnum and Float.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4462,2019-05-22T11:08:30Z,2019-05-22T11:17:12Z,2019-05-24T10:28:17Z,MERGED,True,14,1,2,https://github.com/shuujii,`Kernel#Rational` requires numerator,1,[],https://github.com/mruby/mruby/pull/4462,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4462,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4463,2019-05-23T05:02:29Z,2019-05-23T10:54:46Z,2019-05-24T10:28:17Z,MERGED,True,15,1,4,https://github.com/shuujii,Freeze `Rational` and `Complex` objects,1,[],https://github.com/mruby/mruby/pull/4463,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4463,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4466,2019-05-24T12:12:02Z,2019-05-24T15:12:54Z,2019-06-12T09:30:04Z,MERGED,True,2,2,1,https://github.com/shuujii,"Fix the order of ""expected"" and ""actual"" in `mruby-time` test",1,[],https://github.com/mruby/mruby/pull/4466,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4466,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4467,2019-05-25T04:05:55Z,2019-05-25T13:25:59Z,2019-05-25T13:41:54Z,MERGED,True,24,18,7,https://github.com/dearblue,Name the return value of `mrb_range_beg_len()`,1,[],https://github.com/mruby/mruby/pull/4467,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4467,"Since the mrb_range_beg_len() function is MRB_API, I think it is better to return an enumeration value rather than returning a magic number.
The name written in this patch may be used in the future, so I think it is better to add one more word.
But I didn't think of a good name.","Since the mrb_range_beg_len() function is MRB_API, I think it is better to return an enumeration value rather than returning a magic number.
The name written in this patch may be used in the future, so I think it is better to add one more word.
But I didn't think of a good name.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4468,2019-05-25T11:57:03Z,2021-09-04T07:46:05Z,2021-09-04T07:46:06Z,CLOSED,False,18,10,3,https://github.com/shuujii,Rename `Kernel#__method__` to `Kernel#__callee__`,1,[],https://github.com/mruby/mruby/pull/4468,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4468,"Because the current behavior of __method__ is equivalent to __callee__.
Example
# example.rb
def src
  __send__(ARGV[0])
end
alias dst src
%w[src dst].each {|n| puts ""call #{n} => #{__send__(n).inspect}""}
Ruby:
$ ruby example.rb __method__
call src => :src
call dst => :src

$ ruby example.rb __callee__
call src => :src
call dst => :dst

mruby:
$ bin/mruby example.rb __method__
call src => :src
call dst => :dst","Because the current behavior of __method__ is equivalent to __callee__.
Example
# example.rb
def src
  __send__(ARGV[0])
end
alias dst src
%w[src dst].each {|n| puts ""call #{n} => #{__send__(n).inspect}""}
Ruby:
$ ruby example.rb __method__
call src => :src
call dst => :src

$ ruby example.rb __callee__
call src => :src
call dst => :dst

mruby:
$ bin/mruby example.rb __method__
call src => :src
call dst => :dst",True,{}
mruby/mruby,https://github.com/mruby/mruby,4468,2019-05-25T11:57:03Z,2021-09-04T07:46:05Z,2021-09-04T07:46:06Z,CLOSED,False,18,10,3,https://github.com/shuujii,Rename `Kernel#__method__` to `Kernel#__callee__`,1,[],https://github.com/mruby/mruby/pull/4468,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4468#issuecomment-496335941,"Because the current behavior of __method__ is equivalent to __callee__.
Example
# example.rb
def src
  __send__(ARGV[0])
end
alias dst src
%w[src dst].each {|n| puts ""call #{n} => #{__send__(n).inspect}""}
Ruby:
$ ruby example.rb __method__
call src => :src
call dst => :src

$ ruby example.rb __callee__
call src => :src
call dst => :dst

mruby:
$ bin/mruby example.rb __method__
call src => :src
call dst => :dst",I don't like this approach. The right way is either fixing the __method__ behavior or providing both __method__ and __callee_ (with correct behavior).,True,{}
mruby/mruby,https://github.com/mruby/mruby,4468,2019-05-25T11:57:03Z,2021-09-04T07:46:05Z,2021-09-04T07:46:06Z,CLOSED,False,18,10,3,https://github.com/shuujii,Rename `Kernel#__method__` to `Kernel#__callee__`,1,[],https://github.com/mruby/mruby/pull/4468,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4468#issuecomment-496452086,"Because the current behavior of __method__ is equivalent to __callee__.
Example
# example.rb
def src
  __send__(ARGV[0])
end
alias dst src
%w[src dst].each {|n| puts ""call #{n} => #{__send__(n).inspect}""}
Ruby:
$ ruby example.rb __method__
call src => :src
call dst => :src

$ ruby example.rb __callee__
call src => :src
call dst => :dst

mruby:
$ bin/mruby example.rb __method__
call src => :src
call dst => :dst","I just checked a little, but I think it is difficult to correctly implement __method__ without increasing memory usage of core because original method name needs to be saved. Is there any good way?
Personally, I don't think it is desirable to increase memory usage of core just for __method__, and I think __method__ doesn't use it much if __callee__ exists.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4468,2019-05-25T11:57:03Z,2021-09-04T07:46:05Z,2021-09-04T07:46:06Z,CLOSED,False,18,10,3,https://github.com/shuujii,Rename `Kernel#__method__` to `Kernel#__callee__`,1,[],https://github.com/mruby/mruby/pull/4468,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4468#issuecomment-912928737,"Because the current behavior of __method__ is equivalent to __callee__.
Example
# example.rb
def src
  __send__(ARGV[0])
end
alias dst src
%w[src dst].each {|n| puts ""call #{n} => #{__send__(n).inspect}""}
Ruby:
$ ruby example.rb __method__
call src => :src
call dst => :src

$ ruby example.rb __callee__
call src => :src
call dst => :dst

mruby:
$ bin/mruby example.rb __method__
call src => :src
call dst => :dst",It's finally merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4469,2019-05-25T13:53:27Z,2019-05-26T00:17:41Z,2019-05-26T01:18:20Z,MERGED,True,0,3,1,https://github.com/dearblue,Fix double rounded by negative index for `String#[]`,1,[],https://github.com/mruby/mruby/pull/4469,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4469,"Before patched:
$ mruby -e 'p (-12..-1).map { |i| ""Hello""[i] }.join'
""HelloHello""


After patched:
$ mruby -e 'p (-12..-1).map { |i| ""Hello""[i] }.join'
""Hello""","Before patched:
$ mruby -e 'p (-12..-1).map { |i| ""Hello""[i] }.join'
""HelloHello""


After patched:
$ mruby -e 'p (-12..-1).map { |i| ""Hello""[i] }.join'
""Hello""",True,{}
mruby/mruby,https://github.com/mruby/mruby,4470,2019-05-25T15:13:52Z,2019-05-27T05:45:10Z,2019-06-04T13:31:14Z,MERGED,True,0,35,2,https://github.com/dearblue,Remove `mrb_alloca()` function,1,[],https://github.com/mruby/mruby/pull/4470,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4470,"When I found this function, I expected it to behave the same as the alloca(3) function, but it is accually the mrb_alloca() function does not free the heap until the mrb_close() function is called.
Also, even if it is deleted, it can be replaced with the combination of the MRB_TT_DATA object and the mrb_gv_set() function if it is sure necessary.

I suggest removing function or changing the function name (This patch is removing function).
As far as I inspected it lightly, it is not used in mruby core and core gems.
In mgem-list's mruby gems, only mruby-dll has referenced mrb_alloca() symbol from mruby.def.","When I found this function, I expected it to behave the same as the alloca(3) function, but it is accually the mrb_alloca() function does not free the heap until the mrb_close() function is called.
Also, even if it is deleted, it can be replaced with the combination of the MRB_TT_DATA object and the mrb_gv_set() function if it is sure necessary.

I suggest removing function or changing the function name (This patch is removing function).
As far as I inspected it lightly, it is not used in mruby core and core gems.
In mgem-list's mruby gems, only mruby-dll has referenced mrb_alloca() symbol from mruby.def.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4471,2019-05-26T11:42:11Z,2019-05-26T14:07:12Z,2019-06-12T09:30:02Z,MERGED,True,1,0,1,https://github.com/shuujii,Add `Complex.rect`,1,[],https://github.com/mruby/mruby/pull/4471,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4471,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4472,2019-05-26T11:42:25Z,2019-05-26T23:17:07Z,2019-06-12T09:30:05Z,MERGED,True,24,27,2,https://github.com/shuujii,Move `mrb_mod_s_nesting()` to `mruby-metaprog` gem from the core,1,[],https://github.com/mruby/mruby/pull/4472,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4472,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4473,2019-05-27T12:37:13Z,2019-05-27T14:32:56Z,2019-06-12T09:30:05Z,MERGED,True,2,4,1,https://github.com/shuujii,Make some functions static in `mrbgems/mruby-metaprog/src/metaprog.c`,1,[],https://github.com/mruby/mruby/pull/4473,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4473,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4474,2019-05-27T12:40:46Z,2019-05-28T01:50:31Z,2019-06-12T09:30:06Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `$undefined.equal?(obj2)` instead of `obj2 == $undefined` in `ass…,1,[],https://github.com/mruby/mruby/pull/4474,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4474,"…ert.rb`
In case obj2.== is broken.","…ert.rb`
In case obj2.== is broken.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4475,2019-05-27T12:41:14Z,2019-05-29T02:46:44Z,2019-06-12T09:30:03Z,MERGED,True,51,20,2,https://github.com/shuujii,Fix `Rational#==(Complex)`,1,[],https://github.com/mruby/mruby/pull/4475,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4475,"Consider a Numreic class like Complex that does not have <=> but ==
works (0i == 0r is true).","Consider a Numreic class like Complex that does not have <=> but ==
works (0i == 0r is true).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4476,2019-05-28T09:59:49Z,2019-05-29T01:35:46Z,2019-06-12T09:30:03Z,MERGED,True,30,49,1,https://github.com/shuujii,Fix missing assertions in `mruby-pack` test,1,[],https://github.com/mruby/mruby/pull/4476,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4476,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4477,2019-05-29T09:53:18Z,2019-05-29T11:16:56Z,2019-06-12T09:30:04Z,MERGED,True,2,1,1,https://github.com/shuujii,`Kernel#itself` should not be a module function,1,[],https://github.com/mruby/mruby/pull/4477,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4477,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4480,2019-05-30T11:07:13Z,2019-09-06T06:35:43Z,2019-09-06T06:35:44Z,CLOSED,False,9,0,1,https://github.com/bshastry,ossfuzz: Build integration WIP,1,[],https://github.com/mruby/mruby/pull/4480,https://github.com/bshastry,1,https://github.com/mruby/mruby/pull/4480,"This PR is in draft mode because it is WIP and can use feedback.
Once it's ready, I will change the PR to review mode.","This PR is in draft mode because it is WIP and can use feedback.
Once it's ready, I will change the PR to review mode.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4480,2019-05-30T11:07:13Z,2019-09-06T06:35:43Z,2019-09-06T06:35:44Z,CLOSED,False,9,0,1,https://github.com/bshastry,ossfuzz: Build integration WIP,1,[],https://github.com/mruby/mruby/pull/4480,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4480#issuecomment-497331625,"This PR is in draft mode because it is WIP and can use feedback.
Once it's ready, I will change the PR to review mode.",The WIP code looks OK. Please move forward.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4480,2019-05-30T11:07:13Z,2019-09-06T06:35:43Z,2019-09-06T06:35:44Z,CLOSED,False,9,0,1,https://github.com/bshastry,ossfuzz: Build integration WIP,1,[],https://github.com/mruby/mruby/pull/4480,https://github.com/bshastry,3,https://github.com/mruby/mruby/pull/4480#issuecomment-528730484,"This PR is in draft mode because it is WIP and can use feedback.
Once it's ready, I will change the PR to review mode.",Closing PR. Will reopen when I have an update,True,{}
mruby/mruby,https://github.com/mruby/mruby,4481,2019-05-30T12:54:53Z,2019-05-30T13:34:55Z,2019-06-12T09:30:03Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix missing assertions in `mruby-fiber` test,1,[],https://github.com/mruby/mruby/pull/4481,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4481,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4482,2019-05-31T11:52:24Z,2019-06-01T02:02:07Z,2019-06-12T09:30:02Z,MERGED,True,3,3,1,https://github.com/shuujii,Comment out the empty `Array#bsearch_index` test,1,[],https://github.com/mruby/mruby/pull/4482,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4482,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4483,2019-06-01T10:30:16Z,2019-11-24T01:31:59Z,2019-11-24T01:33:09Z,CLOSED,False,4,4,2,https://github.com/shuujii,Prohibit `MRB_INT64` on 32-bit architecture,1,[],https://github.com/mruby/mruby/pull/4483,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4483,"I think mrb_int size should be less than or equal to pointer size. In the
case of MRB_INT64 on 32-bit architecture, struct RString etc sizes
exceed 6 words at least for now.","I think mrb_int size should be less than or equal to pointer size. In the
case of MRB_INT64 on 32-bit architecture, struct RString etc sizes
exceed 6 words at least for now.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4483,2019-06-01T10:30:16Z,2019-11-24T01:31:59Z,2019-11-24T01:33:09Z,CLOSED,False,4,4,2,https://github.com/shuujii,Prohibit `MRB_INT64` on 32-bit architecture,1,[],https://github.com/mruby/mruby/pull/4483,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4483#issuecomment-497952545,"I think mrb_int size should be less than or equal to pointer size. In the
case of MRB_INT64 on 32-bit architecture, struct RString etc sizes
exceed 6 words at least for now.","I will oppose.


In 32-bit mode kernel space, 32-bit integers are insufficient (in personal terms, I'm glad if I can handle unsigned integer with more than 64 bits...).
If you define MRB_WITHOUT_FLOAT, the restriction is more strong.


gembox ""full-core"" succeeds even if mrb_int type included in struct RArray or struct RString is replaced with intptr_t (currently mruby-complex and mruby-rational requires modification).
I do not think that there is a problem because it can not be longer than 32 bits length in 32-bit mode (it would be a bug if there were any).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4483,2019-06-01T10:30:16Z,2019-11-24T01:31:59Z,2019-11-24T01:33:09Z,CLOSED,False,4,4,2,https://github.com/shuujii,Prohibit `MRB_INT64` on 32-bit architecture,1,[],https://github.com/mruby/mruby/pull/4483,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4483#issuecomment-497995010,"I think mrb_int size should be less than or equal to pointer size. In the
case of MRB_INT64 on 32-bit architecture, struct RString etc sizes
exceed 6 words at least for now.","Thank you for your comment.
Then, as you say, mrb_int size will be allowed to exceed pointer size and type for sizes such as string length it may be better to limit to pointer size (introduce a new type, e.g. mrb_size, which is an alias for intptr_t or uintptr_t?).
Or, it may be possible to limit mrb_int size to pointer size and introduce a type for Fixnum that be allowed to exceed pointer size (e.g. mrb_fixnum).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4483,2019-06-01T10:30:16Z,2019-11-24T01:31:59Z,2019-11-24T01:33:09Z,CLOSED,False,4,4,2,https://github.com/shuujii,Prohibit `MRB_INT64` on 32-bit architecture,1,[],https://github.com/mruby/mruby/pull/4483,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/4483#issuecomment-498001736,"I think mrb_int size should be less than or equal to pointer size. In the
case of MRB_INT64 on 32-bit architecture, struct RString etc sizes
exceed 6 words at least for now.","There is no objection to the introduction of mrb_size and a change of type.
I think that it is better to leave the definition of mrb_int as it is from the viewpoint of the compatibility so far.

I checked what kind of transition the type of the len field of struct RString has followed:

Initially it was size_t:
https://github.com/mruby/mruby/blame/2fc1b8af2db70e2e008cecb9fd2d8600034f95f9/include/mruby/string.h#L29
It became long:
2970b6a#diff-d1ee00f2602251e1778ccf96047654c7L29
It became int:
f4cf8ea#diff-d1ee00f2602251e1778ccf96047654c7L29
It has now become the current mrb_int:
7e910bd#diff-d1ee00f2602251e1778ccf96047654c7L32
Release mruby-1.0.0.


Other object structures that exceed 6 words in 32-bit mode are struct RBreak defined in include/mruby/error.h.

  
    
      mruby/include/mruby/error.h
    
    
        Lines 35 to 39
      in
      366617d
    
  
  
    

        
          
           struct RBreak { 
        

        
          
             MRB_OBJECT_HEADER; 
        

        
          
             struct RProc *proc; 
        

        
          
             mrb_value val; 
        

        
          
           }; 
        
    
  


If we define MRB_USE_FLOAT, it will be 6 words length.


print object size:
% cc -m32 -Iinclude -o sizeof sizeof.c && ./sizeof
size of struct RBreak: 28
% cc -m32 -Iinclude -DMRB_USE_FLOAT -o sizeof sizeof.c && ./sizeof
size of struct RBreak: 24



cat sizeof.c
#include <mruby.h>
#include <mruby/error.h>
#include <stdio.h>

int
main(int argc, char *argv[])
{
  printf(""size of struct RBreak: %zd\n"", sizeof(struct RBreak));
  return 0;
}",True,{}
mruby/mruby,https://github.com/mruby/mruby,4483,2019-06-01T10:30:16Z,2019-11-24T01:31:59Z,2019-11-24T01:33:09Z,CLOSED,False,4,4,2,https://github.com/shuujii,Prohibit `MRB_INT64` on 32-bit architecture,1,[],https://github.com/mruby/mruby/pull/4483,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/4483#issuecomment-498007002,"I think mrb_int size should be less than or equal to pointer size. In the
case of MRB_INT64 on 32-bit architecture, struct RString etc sizes
exceed 6 words at least for now.","Thank you for your investigation.
I think another fix is necessary for RBreak, so it might be better to create another ticket.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4483,2019-06-01T10:30:16Z,2019-11-24T01:31:59Z,2019-11-24T01:33:09Z,CLOSED,False,4,4,2,https://github.com/shuujii,Prohibit `MRB_INT64` on 32-bit architecture,1,[],https://github.com/mruby/mruby/pull/4483,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/4483#issuecomment-557848822,"I think mrb_int size should be less than or equal to pointer size. In the
case of MRB_INT64 on 32-bit architecture, struct RString etc sizes
exceed 6 words at least for now.",I close this PR because it has been resolved via #4662 and #4835.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4485,2019-06-02T10:34:49Z,2019-06-02T13:11:44Z,2019-06-12T09:30:03Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix missing assertions in `mruby-objectspace` test,1,[],https://github.com/mruby/mruby/pull/4485,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4485,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4486,2019-06-03T07:08:33Z,,2021-06-03T07:47:52Z,OPEN,False,85,0,5,https://github.com/ljulliar,New Emscriptem WebAssembly target + examples,1,[],https://github.com/mruby/mruby/pull/4486,https://github.com/ljulliar,1,https://github.com/mruby/mruby/pull/4486,"This is a follow-up to the email I sent Matz last week asking if there was any plan to running Ruby on WebAssembly. I decided to give it a shot. In this pull request you'll find:


A new crossbuild file to target Emscripten WebAssembly. For this MRUBY_CONFIG to work you need to install Emscripten on your machine first (emcc compiler)


Once you have build the emcc-wasm target go to examples/emcc-wasm and run the compile script to generate the two Web Assembly examples


This proves that we can run mruby in the Emscripten WebAssembly runtime.  This is however ""just"" a demonstrator as what we are showing here is the RiteVM mruby VM running within the Wasm VM. So from a performance standpoint we could do much better if mruby could generate WebAssembly bitcode. I don't know what's the best way of doing this though. Generate WebAssembly directly or ""transpile"" RiteVM instructions to WebAssembly bitcode ?
Comments, feedback welcome","This is a follow-up to the email I sent Matz last week asking if there was any plan to running Ruby on WebAssembly. I decided to give it a shot. In this pull request you'll find:


A new crossbuild file to target Emscripten WebAssembly. For this MRUBY_CONFIG to work you need to install Emscripten on your machine first (emcc compiler)


Once you have build the emcc-wasm target go to examples/emcc-wasm and run the compile script to generate the two Web Assembly examples


This proves that we can run mruby in the Emscripten WebAssembly runtime.  This is however ""just"" a demonstrator as what we are showing here is the RiteVM mruby VM running within the Wasm VM. So from a performance standpoint we could do much better if mruby could generate WebAssembly bitcode. I don't know what's the best way of doing this though. Generate WebAssembly directly or ""transpile"" RiteVM instructions to WebAssembly bitcode ?
Comments, feedback welcome",True,{}
mruby/mruby,https://github.com/mruby/mruby,4487,2019-06-03T07:48:00Z,2019-06-26T04:25:45Z,2019-06-26T04:25:45Z,CLOSED,False,4,3,2,https://github.com/shuujii,Move inilialized flag to struct member from bit flag in `struct RRange`,1,[],https://github.com/mruby/mruby/pull/4487,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4487,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4487,2019-06-03T07:48:00Z,2019-06-26T04:25:45Z,2019-06-26T04:25:45Z,CLOSED,False,4,3,2,https://github.com/shuujii,Move inilialized flag to struct member from bit flag in `struct RRange`,1,[],https://github.com/mruby/mruby/pull/4487,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4487#issuecomment-502679088,,"BTW, I just realized, I misunderstood that mrb_value size is 1 word with NaN boxing. If NaN boxing is enabled, mrb_value size is always 8 byte (same as double size), so 2 word on 32-bit CPU.
Therefore, the condition to embed edges was wrong originally, so struct RRange size exceeded 6 word with NaN boxing on 32-bit CPU.
I will create a separate PR about this.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4487,2019-06-03T07:48:00Z,2019-06-26T04:25:45Z,2019-06-26T04:25:45Z,CLOSED,False,4,3,2,https://github.com/shuujii,Move inilialized flag to struct member from bit flag in `struct RRange`,1,[],https://github.com/mruby/mruby/pull/4487,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4487#issuecomment-505712719,,I close this pull-request.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4489,2019-06-04T01:46:41Z,2019-06-04T16:46:59Z,2019-06-12T09:30:03Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `mrblib/range.rb` [ci skip],1,[],https://github.com/mruby/mruby/pull/4489,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4489,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4490,2019-06-04T13:30:25Z,2019-06-04T16:45:38Z,2019-07-11T13:19:32Z,MERGED,True,1,1,1,https://github.com/dearblue,Need explicit cast for C++,1,[],https://github.com/mruby/mruby/pull/4490,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4490,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4491,2019-06-05T10:09:03Z,2019-06-05T14:10:37Z,2019-06-12T09:30:04Z,MERGED,True,3,3,1,https://github.com/shuujii,Fix missing assertions in `test/t/module.rb`,1,[],https://github.com/mruby/mruby/pull/4491,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4491,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4492,2019-06-05T14:42:28Z,2019-06-25T22:40:39Z,2019-07-11T13:19:33Z,MERGED,True,25,18,1,https://github.com/dearblue,Fix complex new on 32 bits mode,2,[],https://github.com/mruby/mruby/pull/4492,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4492,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4493,2019-06-05T15:01:40Z,2019-06-25T23:06:06Z,2019-07-11T13:19:35Z,MERGED,True,104,14,1,https://github.com/dearblue,Fix rational new on 32 bits mode,2,[],https://github.com/mruby/mruby/pull/4493,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4493,"This PR contains the patch of simply halving the numerator and denominator if they do not fit into mrb_int.
If this is a problem, please point out.","This PR contains the patch of simply halving the numerator and denominator if they do not fit into mrb_int.
If this is a problem, please point out.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4494,2019-06-06T11:26:48Z,2019-06-10T06:40:42Z,2019-06-12T09:30:02Z,MERGED,True,2,2,2,https://github.com/shuujii,Clarify `mruby-(kernel|object)-ext` gem summary; ref 8e637bdd [ci skip],1,[],https://github.com/mruby/mruby/pull/4494,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4494,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4495,2019-06-07T13:17:39Z,2019-06-10T06:42:34Z,2019-06-12T09:30:05Z,MERGED,True,13,17,4,https://github.com/shuujii,Remove `Kernel#global_variables` from core,1,[],https://github.com/mruby/mruby/pull/4495,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4495,This method is defined in mruby-metaprog gem.,This method is defined in mruby-metaprog gem.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4496,2019-06-07T14:13:11Z,2019-06-11T00:36:15Z,2019-07-11T13:19:38Z,MERGED,True,3,3,2,https://github.com/dearblue,Replace obsolete macros,1,[],https://github.com/mruby/mruby/pull/4496,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4496,"mrb_get_datatype() used in mruby-io is obsoleted by include/mruby/data.h.

  
    
      mruby/include/mruby/data.h
    
    
        Lines 58 to 60
      in
      2847692
    
  
  
    

        
          
           /* obsolete functions and macros */ 
        

        
          
           #define mrb_data_check_and_get(mrb,obj,dtype) mrb_data_get_ptr(mrb,obj,dtype) 
        

        
          
           #define mrb_get_datatype(mrb,val,type) mrb_data_get_ptr(mrb, val, type)","mrb_get_datatype() used in mruby-io is obsoleted by include/mruby/data.h.

  
    
      mruby/include/mruby/data.h
    
    
        Lines 58 to 60
      in
      2847692
    
  
  
    

        
          
           /* obsolete functions and macros */ 
        

        
          
           #define mrb_data_check_and_get(mrb,obj,dtype) mrb_data_get_ptr(mrb,obj,dtype) 
        

        
          
           #define mrb_get_datatype(mrb,val,type) mrb_data_get_ptr(mrb, val, type)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4497,2019-06-08T13:47:21Z,2019-06-08T22:57:52Z,2019-06-12T09:30:05Z,MERGED,True,0,4,1,https://github.com/shuujii,"Remove ""Check the usage of a NUL character"" test",1,[],https://github.com/mruby/mruby/pull/4497,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4497,"Because there is not assertion in this test and NUL character literal is
used in other tests.","Because there is not assertion in this test and NUL character literal is
used in other tests.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4498,2019-06-09T03:28:40Z,,2021-06-03T07:47:52Z,OPEN,False,687,69,15,https://github.com/ukrainskiysergey,Method visibility implementation,5,[],https://github.com/mruby/mruby/pull/4498,https://github.com/ukrainskiysergey,1,https://github.com/mruby/mruby/pull/4498,"I implemented method visibility (public/private/protected) support for mruby. I think this function is quite an important part of the language.
There may still be errors in it, because I implemented it mostly intuitively.
Features of the implementation:

It is optional (can be turned off). In the off state, it has a (nearly) zero impact on performance.
Cannot be used with MRB_METHOD_TABLE_INLINE.
It has slight differences with cruby (for example, it is possible to call private methods through self (although, in humble my opinion, this is quite a correct behavior)).

I would be happy if my humble efforts help someone.","I implemented method visibility (public/private/protected) support for mruby. I think this function is quite an important part of the language.
There may still be errors in it, because I implemented it mostly intuitively.
Features of the implementation:

It is optional (can be turned off). In the off state, it has a (nearly) zero impact on performance.
Cannot be used with MRB_METHOD_TABLE_INLINE.
It has slight differences with cruby (for example, it is possible to call private methods through self (although, in humble my opinion, this is quite a correct behavior)).

I would be happy if my humble efforts help someone.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4499,2019-06-09T09:39:09Z,2019-06-10T06:39:57Z,2019-06-12T09:30:04Z,MERGED,True,3,2,1,https://github.com/shuujii,Fix missing assertions in `test/t/syntax.rb`,1,[],https://github.com/mruby/mruby/pull/4499,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4499,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4500,2019-06-10T09:58:04Z,2019-06-13T01:24:45Z,2019-06-27T10:44:49Z,MERGED,True,8,13,2,https://github.com/shuujii,`Kernel#global_variables` should not include undefined `$1`-`$9`,1,[],https://github.com/mruby/mruby/pull/4500,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4500,"They are not include in Ruby.
Appear in duplicate when $1-$9 are defined.","They are not include in Ruby.
Appear in duplicate when $1-$9 are defined.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4501,2019-06-11T11:35:12Z,2019-06-11T11:53:40Z,2019-06-12T09:30:06Z,MERGED,True,23,7,2,https://github.com/shuujii,Remove redundant colon in `Proc#inspect` (`mruby-proc-ext`),1,[],https://github.com/mruby/mruby/pull/4501,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4501,"Before this patch:
$ bin/mruby -e 'p proc{}'  #=> #<Proc:0x7fd5eb8206d0@-e::1>

After this patch:
$ bin/mruby -e 'p proc{}'  #=> #<Proc:0x7fd5eb8206d0@-e:1>","Before this patch:
$ bin/mruby -e 'p proc{}'  #=> #<Proc:0x7fd5eb8206d0@-e::1>

After this patch:
$ bin/mruby -e 'p proc{}'  #=> #<Proc:0x7fd5eb8206d0@-e:1>",True,{}
mruby/mruby,https://github.com/mruby/mruby,4502,2019-06-12T10:02:38Z,2019-06-17T03:18:49Z,2019-06-27T10:44:47Z,MERGED,True,1,2,1,https://github.com/shuujii,Adjust allocation size in `mrb_id_attrset()` (`mruby-struct`),1,[],https://github.com/mruby/mruby/pull/4502,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4502,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4503,2019-06-12T11:56:50Z,2019-06-13T01:24:11Z,2019-06-27T10:44:48Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `String#setbyte` error message,1,[],https://github.com/mruby/mruby/pull/4503,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4503,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4505,2019-06-13T12:35:05Z,2019-06-13T21:22:58Z,2019-06-27T10:44:47Z,MERGED,True,13,8,4,https://github.com/shuujii,Fix class name validation in `Struct.new`,1,[],https://github.com/mruby/mruby/pull/4505,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4505,"Before this patch:
$ bin/mruby -e 'p Struct.new(""A-"")'
#=> Struct::""A-""

After this patch:
$ bin/mruby -e 'p Struct.new(""A-"")'
#=> NameError: identifier A- needs to be constant","Before this patch:
$ bin/mruby -e 'p Struct.new(""A-"")'
#=> Struct::""A-""

After this patch:
$ bin/mruby -e 'p Struct.new(""A-"")'
#=> NameError: identifier A- needs to be constant",True,{}
mruby/mruby,https://github.com/mruby/mruby,4506,2019-06-14T01:34:55Z,2019-06-14T04:42:59Z,2019-06-27T10:44:49Z,MERGED,True,9,27,1,https://github.com/shuujii,Remove a meaningless branch condition in `mruby-struct`,1,[],https://github.com/mruby/mruby/pull/4506,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4506,"The following branch condition is always true:
  // mrbgems/mruby-struct/src/struct.c:187 in make_struct_define_accessors()
  if (is_local_id(mrb, name) || is_const_id(mrb, name)) {","The following branch condition is always true:
  // mrbgems/mruby-struct/src/struct.c:187 in make_struct_define_accessors()
  if (is_local_id(mrb, name) || is_const_id(mrb, name)) {",True,{}
mruby/mruby,https://github.com/mruby/mruby,4507,2019-06-15T10:56:32Z,2019-06-17T03:21:49Z,2019-06-27T10:44:48Z,MERGED,True,8,7,1,https://github.com/shuujii,Fix index in error message of `Struct#[]`,1,[],https://github.com/mruby/mruby/pull/4507,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4507,"Before this patch:
$ bin/mruby -e 'Struct.new(:a,:b).new[-3]'
#=> offset -1 too small for struct(size:2) (IndexError)

After this patch (same as Ruby):
$ bin/mruby -e 'Struct.new(:a,:b).new[-3]'
#=> offset -3 too small for struct(size:2) (IndexError)","Before this patch:
$ bin/mruby -e 'Struct.new(:a,:b).new[-3]'
#=> offset -1 too small for struct(size:2) (IndexError)

After this patch (same as Ruby):
$ bin/mruby -e 'Struct.new(:a,:b).new[-3]'
#=> offset -3 too small for struct(size:2) (IndexError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4508,2019-06-16T11:52:02Z,2019-06-17T03:22:33Z,2019-06-27T10:44:48Z,MERGED,True,10,2,5,https://github.com/shuujii,"Fix cvar, ivar, const and method can be removed to frozen object",1,[],https://github.com/mruby/mruby/pull/4508,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4508,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4510,2019-06-17T13:20:32Z,2019-06-18T23:50:15Z,2019-06-27T10:44:49Z,MERGED,True,1,2,1,https://github.com/shuujii,Remove unneeded `mrb_str_dup()` in `Module#name`,1,[],https://github.com/mruby/mruby/pull/4510,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4510,mrb_class_path() always returns a new string or nil.,mrb_class_path() always returns a new string or nil.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4512,2019-06-17T20:42:47Z,2019-09-15T09:20:00Z,2021-12-17T04:36:24Z,MERGED,True,1,0,1,https://github.com/lopopolo,Support parsing a Regexp literal with 'o' option,1,[],https://github.com/mruby/mruby/pull/4512,https://github.com/lopopolo,1,https://github.com/mruby/mruby/pull/4512,"CRuby supports a 'o' Regexp option for Regexp literals, e.g. /foo/o that disables multiple interpolation passes.
This commit adds support for parsing such literals. Nothing is done with the option, it is consumed and ignored by the parser.","CRuby supports a 'o' Regexp option for Regexp literals, e.g. /foo/o that disables multiple interpolation passes.
This commit adds support for parsing such literals. Nothing is done with the option, it is consumed and ignored by the parser.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4512,2019-06-17T20:42:47Z,2019-09-15T09:20:00Z,2021-12-17T04:36:24Z,MERGED,True,1,0,1,https://github.com/lopopolo,Support parsing a Regexp literal with 'o' option,1,[],https://github.com/mruby/mruby/pull/4512,https://github.com/lopopolo,2,https://github.com/mruby/mruby/pull/4512#issuecomment-503798244,"CRuby supports a 'o' Regexp option for Regexp literals, e.g. /foo/o that disables multiple interpolation passes.
This commit adds support for parsing such literals. Nothing is done with the option, it is consumed and ignored by the parser.","There are a couple extra modifiers that I found I needed to get mruby to parse ruby/spec for Regexp:
From 0675210d7cd240feef3b4d727a20719e54171de8 Mon Sep 17 00:00:00 2001
From: Ryan Lopopolo <rjl@hyperbo.la>
Date: Wed, 19 Jun 2019 23:24:01 +0100
Subject: [PATCH] Support parsing a Regexp literal with CRuby options

CRuby supports a 's' `Regexp` option for `Regexp` literals, e.g. `/foo/s`
that alters the encoding in the same way as the 'u' option. This commit
adds support for parsing such literals and sets Regexp options
appropriately.

CRuby supports a 'e' `Regexp` option for `Regexp` literals, e.g. `/foo/w`
that alters the encoding in the same way as the 'u' option. This commit
adds support for parsing such literals and sets Regexp options
appropriately.

CRuby supports a 'o' `Regexp` option for `Regexp` literals, e.g. `/foo/o`
that disables multiple interpolation passes. This commit adds support for
parsing such literals. Nothing is done with the option, it is consumed
and ignored by the parser.
---
 mrbgems/mruby-compiler/core/parse.y | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/mrbgems/mruby-compiler/core/parse.y b/mrbgems/mruby-compiler/core/parse.y
index 96a9453b..b06eb4d1 100644
--- a/mrbgems/mruby-compiler/core/parse.y
+++ b/mrbgems/mruby-compiler/core/parse.y
@@ -4525,7 +4525,10 @@ parse_string(parser_state *p)
       case 'x': f |= 2; break;
       case 'm': f |= 4; break;
       case 'u': f |= 16; break;
+      case 'e': f |= 16; break;
+      case 's': f |= 16; break;
       case 'n': f |= 32; break;
+      case 'o': break;
       default: tokadd(p, re_opt); break;
       }
     }
-- 
2.21.0",True,{}
mruby/mruby,https://github.com/mruby/mruby,4512,2019-06-17T20:42:47Z,2019-09-15T09:20:00Z,2021-12-17T04:36:24Z,MERGED,True,1,0,1,https://github.com/lopopolo,Support parsing a Regexp literal with 'o' option,1,[],https://github.com/mruby/mruby/pull/4512,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4512#issuecomment-531549446,"CRuby supports a 'o' Regexp option for Regexp literals, e.g. /foo/o that disables multiple interpolation passes.
This commit adds support for parsing such literals. Nothing is done with the option, it is consumed and ignored by the parser.",/e and /s are obsolete options. I think it's OK not to support them for Ruby compatible interpreters.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4514,2019-06-18T04:28:30Z,2019-06-18T22:58:57Z,2019-06-18T22:58:57Z,MERGED,True,2,2,2,https://github.com/mimaki,Fix path of `error.h`.,1,[],https://github.com/mruby/mruby/pull/4514,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4514,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4516,2019-06-18T09:41:05Z,2019-06-25T13:44:31Z,2019-06-27T10:44:48Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix `struct RRange` overflow on 32-bit CPU with `MRB_NAN_BOXING`,1,[],https://github.com/mruby/mruby/pull/4516,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4516,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4517,2019-06-19T09:32:03Z,2019-06-25T11:32:39Z,2019-06-27T10:44:50Z,MERGED,True,0,1,1,https://github.com/shuujii,Remove unneeded statement in `SET_OBJ_VALUE` with `boxing_word.h`,1,[],https://github.com/mruby/mruby/pull/4517,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4517,"(r).value.bp and v have the same value due to assignment of the line
preceding the removed line.","(r).value.bp and v have the same value due to assignment of the line
preceding the removed line.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4518,2019-06-20T11:00:50Z,2019-06-22T08:52:33Z,2019-06-27T10:44:46Z,MERGED,True,2,1,1,https://github.com/shuujii,Add ISO section number to `Kernel.#local_variables` [ci skip],1,[],https://github.com/mruby/mruby/pull/4518,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4518,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4520,2019-06-21T09:23:09Z,2019-06-25T09:46:46Z,2019-06-25T09:46:46Z,CLOSED,False,13,5,4,https://github.com/dkasak,Fix segfault when removing ivars on immediates (fixes #4519),1,[],https://github.com/mruby/mruby/pull/4520,https://github.com/dkasak,1,https://github.com/mruby/mruby/pull/4520,"The problem is that mrb_iv_frozen treats the mrb_value as a pointer,
but it can also be an immediate (nil, a fixnum, etc). This leads to
a segfault since the immediate's value is not a valid pointer.
Looking at mrb_obj_frozen and comparing with CRuby behaviour,
immediates should always be treated as frozen. This commit checks
whether the value involved is an immediate and raises FrozenError if
so.","The problem is that mrb_iv_frozen treats the mrb_value as a pointer,
but it can also be an immediate (nil, a fixnum, etc). This leads to
a segfault since the immediate's value is not a valid pointer.
Looking at mrb_obj_frozen and comparing with CRuby behaviour,
immediates should always be treated as frozen. This commit checks
whether the value involved is an immediate and raises FrozenError if
so.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4520,2019-06-21T09:23:09Z,2019-06-25T09:46:46Z,2019-06-25T09:46:46Z,CLOSED,False,13,5,4,https://github.com/dkasak,Fix segfault when removing ivars on immediates (fixes #4519),1,[],https://github.com/mruby/mruby/pull/4520,https://github.com/dkasak,2,https://github.com/mruby/mruby/pull/4520#issuecomment-504650153,"The problem is that mrb_iv_frozen treats the mrb_value as a pointer,
but it can also be an immediate (nil, a fixnum, etc). This leads to
a segfault since the immediate's value is not a valid pointer.
Looking at mrb_obj_frozen and comparing with CRuby behaviour,
immediates should always be treated as frozen. This commit checks
whether the value involved is an immediate and raises FrozenError if
so.",I updated the PR with the suggested changes.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4521,2019-06-21T14:04:09Z,2019-06-22T07:14:44Z,2019-06-27T10:44:49Z,MERGED,True,14,14,2,https://github.com/shuujii,Move `Kernel#__send__` test to core from `mruby-metaprog`,1,[],https://github.com/mruby/mruby/pull/4521,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4521,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4523,2019-06-22T09:03:38Z,2019-06-23T01:51:35Z,2019-07-11T13:19:40Z,MERGED,True,13,2,1,https://github.com/dearblue,Use stack memory for small name of Struct members,1,[],https://github.com/mruby/mruby/pull/4523,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4523,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4524,2019-06-22T09:05:22Z,2019-06-26T04:22:42Z,2019-07-11T13:19:43Z,MERGED,True,34,35,2,https://github.com/dearblue,Change to UTF-8 string reversing with in place,6,[],https://github.com/mruby/mruby/pull/4524,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4524,Reverses UTF-8 strings without allocated heap for working memory.,Reverses UTF-8 strings without allocated heap for working memory.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4524,2019-06-22T09:05:22Z,2019-06-26T04:22:42Z,2019-07-11T13:19:43Z,MERGED,True,34,35,2,https://github.com/dearblue,Change to UTF-8 string reversing with in place,6,[],https://github.com/mruby/mruby/pull/4524,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4524#issuecomment-504657880,Reverses UTF-8 strings without allocated heap for working memory.,"Great! Just two comments:

It seems mrb_str_modify() is called twice when MRB_UTF8_STRING is defined.
It may be originally, but mrb_str_modify() may not be needed if string length is less than 2.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4524,2019-06-22T09:05:22Z,2019-06-26T04:22:42Z,2019-07-11T13:19:43Z,MERGED,True,34,35,2,https://github.com/dearblue,Change to UTF-8 string reversing with in place,6,[],https://github.com/mruby/mruby/pull/4524,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4524#issuecomment-504666303,Reverses UTF-8 strings without allocated heap for working memory.,"Thanks @shuujii for review.
Your comment is right, so I will correct.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4524,2019-06-22T09:05:22Z,2019-06-26T04:22:42Z,2019-07-11T13:19:43Z,MERGED,True,34,35,2,https://github.com/dearblue,Change to UTF-8 string reversing with in place,6,[],https://github.com/mruby/mruby/pull/4524,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/4524#issuecomment-504671625,Reverses UTF-8 strings without allocated heap for working memory.,"I was rebase and forced push.
Also, since I was mixing bugs, I fix it together.
Bug:
A single UTF-8 string consisting of 2 or more bytes is destroyed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4524,2019-06-22T09:05:22Z,2019-06-26T04:22:42Z,2019-07-11T13:19:43Z,MERGED,True,34,35,2,https://github.com/dearblue,Change to UTF-8 string reversing with in place,6,[],https://github.com/mruby/mruby/pull/4524,https://github.com/lopopolo,5,https://github.com/mruby/mruby/pull/4524#issuecomment-504714991,Reverses UTF-8 strings without allocated heap for working memory.,"Edit: I had not defined MRB_UTF8_STRING when building. 😞
@dearblue UTF-8 is a multi-byte encoding which cannot be reversed bytewise since some characters take more than 1 byte, for example ""💪""
On CRuby:
[2.6.0] > ""💪""
=> ""💪""
[2.6.0] > ""💪"".reverse
=> ""💪""
[2.6.0] > ""💪"".reverse.reverse
=> ""💪""

On mruby with this patch:
> ""💪""
 => ""\xf0\x9f\x92\xaa""
> ""💪"".reverse
 => ""\xaa\x92\x9f\xf0""
> ""💪"".reverse.reverse
 => ""\xf0\x9f\x92\xaa""",True,{}
mruby/mruby,https://github.com/mruby/mruby,4524,2019-06-22T09:05:22Z,2019-06-26T04:22:42Z,2019-07-11T13:19:43Z,MERGED,True,34,35,2,https://github.com/dearblue,Change to UTF-8 string reversing with in place,6,[],https://github.com/mruby/mruby/pull/4524,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/4524#issuecomment-504718100,Reverses UTF-8 strings without allocated heap for working memory.,I can't reproduce it. Do you define MRB_UTF8_STRING?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4524,2019-06-22T09:05:22Z,2019-06-26T04:22:42Z,2019-07-11T13:19:43Z,MERGED,True,34,35,2,https://github.com/dearblue,Change to UTF-8 string reversing with in place,6,[],https://github.com/mruby/mruby/pull/4524,https://github.com/lopopolo,7,https://github.com/mruby/mruby/pull/4524#issuecomment-504739371,Reverses UTF-8 strings without allocated heap for working memory.,@shuujii Oh no I did not. Sorry I've been used to my custom build where I set this flag long ago. Please ignore my above comment.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4524,2019-06-22T09:05:22Z,2019-06-26T04:22:42Z,2019-07-11T13:19:43Z,MERGED,True,34,35,2,https://github.com/dearblue,Change to UTF-8 string reversing with in place,6,[],https://github.com/mruby/mruby/pull/4524,https://github.com/dearblue,8,https://github.com/mruby/mruby/pull/4524#issuecomment-504971461,Reverses UTF-8 strings without allocated heap for working memory.,"The original approach is to swap the front and back of the array without changing the order of the parts with in-place array.
It is over 10 years (20 years?) since I saw this method, but I can not remember at all where I saw it.
Before reversing array:
  [A1 A2 A3  B1 B2 B3 B4]

Reverse the part A:
  [A3 A2 A1  B1 B2 B3 B4]

Reverse the part B:
  [A3 A2 A1  B4 B3 B2 B1]

Reverse whole array to complete:
  [B1 B2 B3 B4  A1 A2 A3]

This patch remembers this and just applies to UTF-8 strings.
I should have mentioned the original approach.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4524,2019-06-22T09:05:22Z,2019-06-26T04:22:42Z,2019-07-11T13:19:43Z,MERGED,True,34,35,2,https://github.com/dearblue,Change to UTF-8 string reversing with in place,6,[],https://github.com/mruby/mruby/pull/4524,https://github.com/dearblue,9,https://github.com/mruby/mruby/pull/4524#issuecomment-504979862,Reverses UTF-8 strings without allocated heap for working memory.,"I am forgot reports for benchmark.
For small UTF-8 strings, 1.5 times more time is required.


Time of mruby -e '(""abcdefghijklmn""*100000000).reverse!'
% for rev in f94551a reverse-utf8; \
do \
  git co --detach $rev; \
  CFLAGS='-O3 -Wall -DMRB_UTF8_STRING' ./minirake -j10 `pwd`/build/host/bin/mruby > /dev/null 2> /dev/null; \
  for i in `seq 3`; \
  do \
    /usr/bin/time ./build/host/bin/mruby -e '(""abcdefghijklmn""*100000000).reverse!'; \
  done; \
done
Previous HEAD position was 98daa3bb6 Fix the unnecessary `mrb_str_modify()` call
HEAD is now at f94551ad4 Merge pull request #4518 from shuujii/add-ISO-section-number-to-Kernel-local_variables
       11.73 real        10.84 user         0.88 sys
       11.69 real        10.79 user         0.89 sys
       11.84 real        10.92 user         0.91 sys
Previous HEAD position was f94551ad4 Merge pull request #4518 from shuujii/add-ISO-section-number-to-Kernel-local_variables
HEAD is now at 11e09dc5d Fix the unnecessary `mrb_str_modify()` call
       11.69 real        10.85 user         0.83 sys
       11.77 real        10.83 user         0.93 sys
       11.71 real        10.86 user         0.83 sys


Time of mruby -e '100000.times { (""○✕△□""*1000).reverse! }'
% for rev in f94551a reverse-utf8; \
do \
  git co --detach $rev; \
  CFLAGS='-O3 -Wall -DMRB_UTF8_STRING' ./minirake -j10 `pwd`/build/host/bin/mruby > /dev/null 2> /dev/null; \
  for i in `seq 3`; \
  do \
    /usr/bin/time ./build/host/bin/mruby -e '100000.times { (""○✕△□""*1000).reverse! }'; \
  done; \
done
Previous HEAD position was 98daa3bb6 Fix the unnecessary `mrb_str_modify()` call
HEAD is now at f94551ad4 Merge pull request #4518 from shuujii/add-ISO-section-number-to-Kernel-local_variables
        4.80 real         4.77 user         0.02 sys
        4.88 real         4.85 user         0.01 sys
        4.74 real         4.73 user         0.00 sys
Previous HEAD position was f94551ad4 Merge pull request #4518 from shuujii/add-ISO-section-number-to-Kernel-local_variables
HEAD is now at 98daa3bb6 Fix the unnecessary `mrb_str_modify()` call
        7.40 real         7.38 user         0.00 sys
        7.44 real         7.41 user         0.01 sys
        7.36 real         7.33 user         0.02 sys


Time of mruby -e '(""○✕△□""*100000000).reverse!'
% for rev in f94551a reverse-utf8; \
do \
  git co --detach $rev; \
  CFLAGS='-O3 -Wall -DMRB_UTF8_STRING' ./minirake -j10 `pwd`/build/host/bin/mruby > /dev/null 2> /dev/null; \
  for i in `seq 3`; \
  do \
    /usr/bin/time ./build/host/bin/mruby -e '(""○✕△□""*100000000).reverse!'; \
  done; \
done
Previous HEAD position was 98daa3bb6 Fix the unnecessary `mrb_str_modify()` call
HEAD is now at f94551ad4 Merge pull request #4518 from shuujii/add-ISO-section-number-to-Kernel-local_variables
        6.93 real         5.50 user         1.43 sys
        6.96 real         5.45 user         1.51 sys
        6.94 real         5.49 user         1.45 sys
Previous HEAD position was f94551ad4 Merge pull request #4518 from shuujii/add-ISO-section-number-to-Kernel-local_variables
HEAD is now at 11e09dc5d Fix the unnecessary `mrb_str_modify()` call
        6.67 real         5.90 user         0.76 sys
        6.71 real         5.91 user         0.79 sys
        6.67 real         5.91 user         0.75 sys",True,{}
mruby/mruby,https://github.com/mruby/mruby,4525,2019-06-22T09:21:00Z,2019-06-23T01:50:20Z,2019-07-11T13:19:41Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix potential overflow in `utf8len()`,1,[],https://github.com/mruby/mruby/pull/4525,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4525,"For example on 32 bit mode, when p = 0xfffffffd, e = 0xfffffffe and len = 4, the sum of p and len can be to 1, and comparison with e will to be false.
As a result, a segmentation fault occurs by referring to address 0.

I think that it is not realistic unless the address space is 16 bits, but just in case.","For example on 32 bit mode, when p = 0xfffffffd, e = 0xfffffffe and len = 4, the sum of p and len can be to 1, and comparison with e will to be false.
As a result, a segmentation fault occurs by referring to address 0.

I think that it is not realistic unless the address space is 16 bits, but just in case.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4526,2019-06-22T10:07:45Z,2019-06-23T01:56:42Z,2019-06-27T10:44:49Z,MERGED,True,15,4,1,https://github.com/shuujii,Refine `Hash#rehash` example [ci skip],1,[],https://github.com/mruby/mruby/pull/4526,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4526,Previous example doesn't work because string key (frozen) can't be modified.,Previous example doesn't work because string key (frozen) can't be modified.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/lopopolo,1,https://github.com/mruby/mruby/pull/4527,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.","#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4527#issuecomment-504658926,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.",The second argument seems to be unnecessary.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/lopopolo,3,https://github.com/mruby/mruby/pull/4527#issuecomment-504659593,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.",@shuujii the second argument is specified by CRuby. I've included it for compatibility.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/lopopolo,4,https://github.com/mruby/mruby/pull/4527#issuecomment-504659658,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.",My latest commit improves performance of the base case to be within a factor of 2 of the existing implementation.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/4527#issuecomment-504669887,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.","Because the second argument isn't used, it is better to remove it or implement correctly, I think.
BTW, I think unless block is faster than unless block_given? (ref. ef3bbd2).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/4527#issuecomment-504675884,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.","@lopopolo, there are two things I noticed in order to optimize the speed.

Pass position and length instead of passing range to get substrings.
Avoid range objects being generated each time in the loop.
Assign a method call whose value does not change in a loop to a variable outside the loop.
Because == is also a method, branch by putting a boolean value into the variable.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/lopopolo,7,https://github.com/mruby/mruby/pull/4527#issuecomment-504713806,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.","Because the second argument isn't used, it is better to remove it or implement correctly, I think.

I've removed this in the latest patch.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/lopopolo,8,https://github.com/mruby/mruby/pull/4527#issuecomment-504714327,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.","The latest implementation is faster than the existing implementation while remaining as memory efficient. To test performance I ran this command:
/usr/bin/time -l ./bin/mruby -e '1000.times { (""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 10000).each_line(""\n"") { } }';
Existing mrblib implementation
mruby@master
       17.91 real        17.84 user         0.06 sys
  54132736  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
     45916  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
      1472  involuntary context switches

This PR at 8ea45b8
mruby@string-each-line-paragraph-mode-8ea45b86
       17.91 real        17.84 user         0.05 sys
  54140928  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
     45915  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
      1343  involuntary context switches

This PR at 6b92acf3
mruby@string-each-line-paragraph-mode-6b92acf3
       17.40 real        17.34 user         0.05 sys
  54132736  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
     45914  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
      1219  involuntary context switches",True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/lopopolo,9,https://github.com/mruby/mruby/pull/4527#issuecomment-504714379,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.",@shuujii and @dearblue thank you for helping me iterate on this PR. I think I've addressed all of the feedback which resulted in an implementation that is faster than the existing one while still being mostly spec-compliant. 🎉,True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/dearblue,10,https://github.com/mruby/mruby/pull/4527#issuecomment-504994080,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.","It's a great 👍
I realized I could replace it with a common loop.
example:
if separator.empty?
  separator = ""\n\n""
  paragraph_mode = true
end

while (pointer = string.index(separator, start))
  pointer += sep_len
  if paragraph_mode
    pointer += 1 while string[pointer] == ""\n""
  end
  if should_yield_subclass_instances
    ...snip...
I'm worried about whether it fits your spec and the speed down, but I think the mruby bytecode size will be smaller.
Becomes like the dispensing of small information, I'm sorry.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4527,2019-06-22T11:31:45Z,2019-09-12T12:19:43Z,2021-12-17T04:36:29Z,MERGED,True,36,11,1,https://github.com/lopopolo,Add paragraph mode to String#each_line in mrblib,5,[],https://github.com/mruby/mruby/pull/4527,https://github.com/lopopolo,11,https://github.com/mruby/mruby/pull/4527#issuecomment-505199853,"#4511 demonstrated an infinite loop in String#each_line when  …
given an empty string separator. In MRI, an empty separator places
String#each_line in paragraph mode, where the String is separated on
successive runs of newlines. In paragraph mode, the String
""abc\n\n\ndef\nxyz"" is split into [""abc\n\n\n"", ""def\nxyz""].
This commit makes the String#each_line implementation as close to
ruby/spec compliant as possible given the limitations of mruby core.
With this patch, the following specs fail for String#each_line:

uses $/ as the separator when none is given (can be fixed by
aliasing and redefining the method to use $/ as the default value
of separator in mruby-io)
when no block is given returned Enumerator size should return nil
(Enumerator#size is not supported on mruby)
tries to convert the separator to a string using to_str (String#to_str
is not implemented on mruby)

This patch has similar memory consumption compared to the prior
implementation and is takes 4x the time the prior implementation takes to
execute:
/usr/bin/time -l ./bin/mruby -e '(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }';
cc @dearblue
Fixes GH-4511.","@dearblue thanks for the optimization! That does end up cutting down the code size quite a bit and it does still pass ruby-spec. 🎉
I think this patch is ready for final review.",True,{'THUMBS_UP': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,4528,2019-06-23T12:36:36Z,2019-06-25T11:27:27Z,2019-06-27T10:44:47Z,MERGED,True,30,30,2,https://github.com/shuujii,Fix argument specs to `Array`,1,[],https://github.com/mruby/mruby/pull/4528,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4528,I moved comments in unaffected lines for justification.,I moved comments in unaffected lines for justification.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4529,2019-06-23T21:38:19Z,2019-06-24T20:14:45Z,2021-12-17T04:36:46Z,CLOSED,False,396,43,1,https://github.com/lopopolo,[WIP] Optimize utf8 string length and byte offset functions,2,[],https://github.com/mruby/mruby/pull/4529,https://github.com/lopopolo,1,https://github.com/mruby/mruby/pull/4529,"Replace existing utf8 strlen and byte offset functions with the UTF-8
length algorithm developed by George Pollard and discussed at
https://www.daemonology.net/blog/2008-06-05-faster-utf8-strlen.html

The algorithm assumes that the String is valid UTF-8, which I believe is
enforced by utf8_strlen. The algorithm uses an ASCII fastpath and skips
characters based on their UTF-8 continuation bytes. This approach can be
more than twice as fast as the existing implementation.
The core algorithm is adapted for the following functions:

utf8len
mrb_utf8_len
chars2bytes
bytes2chars

This patch allows removing the utf8len_codepage static array.
Benchmarks (default build with MRB_UTF8_STRING defined)
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000).reverse!
master: 20.99s
patched: 7.36s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000)[1000000 - 1]
master: 18.89s
patched: 8.14s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }
master: [does not complete in 4 minutes wall clock time]
patched: 0.02s
NOTE: I did not write the implementation of the algorithm, I only
adapted it to fit within the mruby APIs.
Fixes GH-4522.","Replace existing utf8 strlen and byte offset functions with the UTF-8
length algorithm developed by George Pollard and discussed at
https://www.daemonology.net/blog/2008-06-05-faster-utf8-strlen.html

The algorithm assumes that the String is valid UTF-8, which I believe is
enforced by utf8_strlen. The algorithm uses an ASCII fastpath and skips
characters based on their UTF-8 continuation bytes. This approach can be
more than twice as fast as the existing implementation.
The core algorithm is adapted for the following functions:

utf8len
mrb_utf8_len
chars2bytes
bytes2chars

This patch allows removing the utf8len_codepage static array.
Benchmarks (default build with MRB_UTF8_STRING defined)
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000).reverse!
master: 20.99s
patched: 7.36s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000)[1000000 - 1]
master: 18.89s
patched: 8.14s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }
master: [does not complete in 4 minutes wall clock time]
patched: 0.02s
NOTE: I did not write the implementation of the algorithm, I only
adapted it to fit within the mruby APIs.
Fixes GH-4522.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4529,2019-06-23T21:38:19Z,2019-06-24T20:14:45Z,2021-12-17T04:36:46Z,CLOSED,False,396,43,1,https://github.com/lopopolo,[WIP] Optimize utf8 string length and byte offset functions,2,[],https://github.com/mruby/mruby/pull/4529,https://github.com/lopopolo,2,https://github.com/mruby/mruby/pull/4529#issuecomment-504789431,"Replace existing utf8 strlen and byte offset functions with the UTF-8
length algorithm developed by George Pollard and discussed at
https://www.daemonology.net/blog/2008-06-05-faster-utf8-strlen.html

The algorithm assumes that the String is valid UTF-8, which I believe is
enforced by utf8_strlen. The algorithm uses an ASCII fastpath and skips
characters based on their UTF-8 continuation bytes. This approach can be
more than twice as fast as the existing implementation.
The core algorithm is adapted for the following functions:

utf8len
mrb_utf8_len
chars2bytes
bytes2chars

This patch allows removing the utf8len_codepage static array.
Benchmarks (default build with MRB_UTF8_STRING defined)
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000).reverse!
master: 20.99s
patched: 7.36s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000)[1000000 - 1]
master: 18.89s
patched: 8.14s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }
master: [does not complete in 4 minutes wall clock time]
patched: 0.02s
NOTE: I did not write the implementation of the algorithm, I only
adapted it to fit within the mruby APIs.
Fixes GH-4522.",cc @dearblue,True,{}
mruby/mruby,https://github.com/mruby/mruby,4529,2019-06-23T21:38:19Z,2019-06-24T20:14:45Z,2021-12-17T04:36:46Z,CLOSED,False,396,43,1,https://github.com/lopopolo,[WIP] Optimize utf8 string length and byte offset functions,2,[],https://github.com/mruby/mruby/pull/4529,https://github.com/lopopolo,3,https://github.com/mruby/mruby/pull/4529#issuecomment-504791863,"Replace existing utf8 strlen and byte offset functions with the UTF-8
length algorithm developed by George Pollard and discussed at
https://www.daemonology.net/blog/2008-06-05-faster-utf8-strlen.html

The algorithm assumes that the String is valid UTF-8, which I believe is
enforced by utf8_strlen. The algorithm uses an ASCII fastpath and skips
characters based on their UTF-8 continuation bytes. This approach can be
more than twice as fast as the existing implementation.
The core algorithm is adapted for the following functions:

utf8len
mrb_utf8_len
chars2bytes
bytes2chars

This patch allows removing the utf8len_codepage static array.
Benchmarks (default build with MRB_UTF8_STRING defined)
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000).reverse!
master: 20.99s
patched: 7.36s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000)[1000000 - 1]
master: 18.89s
patched: 8.14s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }
master: [does not complete in 4 minutes wall clock time]
patched: 0.02s
NOTE: I did not write the implementation of the algorithm, I only
adapted it to fit within the mruby APIs.
Fixes GH-4522.","I've generated a flamegraph with dtrace that compares master and this PR for the following benchmark for a 60 second sample:
./bin/mruby -e '100000.times { (""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { } }'

master

PR 4529",True,{}
mruby/mruby,https://github.com/mruby/mruby,4529,2019-06-23T21:38:19Z,2019-06-24T20:14:45Z,2021-12-17T04:36:46Z,CLOSED,False,396,43,1,https://github.com/lopopolo,[WIP] Optimize utf8 string length and byte offset functions,2,[],https://github.com/mruby/mruby/pull/4529,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4529#issuecomment-504960006,"Replace existing utf8 strlen and byte offset functions with the UTF-8
length algorithm developed by George Pollard and discussed at
https://www.daemonology.net/blog/2008-06-05-faster-utf8-strlen.html

The algorithm assumes that the String is valid UTF-8, which I believe is
enforced by utf8_strlen. The algorithm uses an ASCII fastpath and skips
characters based on their UTF-8 continuation bytes. This approach can be
more than twice as fast as the existing implementation.
The core algorithm is adapted for the following functions:

utf8len
mrb_utf8_len
chars2bytes
bytes2chars

This patch allows removing the utf8len_codepage static array.
Benchmarks (default build with MRB_UTF8_STRING defined)
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000).reverse!
master: 20.99s
patched: 7.36s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000)[1000000 - 1]
master: 18.89s
patched: 8.14s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }
master: [does not complete in 4 minutes wall clock time]
patched: 0.02s
NOTE: I did not write the implementation of the algorithm, I only
adapted it to fit within the mruby APIs.
Fixes GH-4522.","It is interesting. However, it doesn't seem to work well in some cases:
Before patched with MRB_UTF8_STRING (same as Ruby)
$ bin/mruby -e '[""\xe3\x81"", ""a\x00z""].each{|s| p s.size}'
2
3

After patched with MRB_UTF8_STRING
$ bin/mruby -e '[""\xe3\x81"", ""a\x00z""].each{|s| p s.size}'
1
1",True,{}
mruby/mruby,https://github.com/mruby/mruby,4529,2019-06-23T21:38:19Z,2019-06-24T20:14:45Z,2021-12-17T04:36:46Z,CLOSED,False,396,43,1,https://github.com/lopopolo,[WIP] Optimize utf8 string length and byte offset functions,2,[],https://github.com/mruby/mruby/pull/4529,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/4529#issuecomment-504965452,"Replace existing utf8 strlen and byte offset functions with the UTF-8
length algorithm developed by George Pollard and discussed at
https://www.daemonology.net/blog/2008-06-05-faster-utf8-strlen.html

The algorithm assumes that the String is valid UTF-8, which I believe is
enforced by utf8_strlen. The algorithm uses an ASCII fastpath and skips
characters based on their UTF-8 continuation bytes. This approach can be
more than twice as fast as the existing implementation.
The core algorithm is adapted for the following functions:

utf8len
mrb_utf8_len
chars2bytes
bytes2chars

This patch allows removing the utf8len_codepage static array.
Benchmarks (default build with MRB_UTF8_STRING defined)
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000).reverse!
master: 20.99s
patched: 7.36s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000)[1000000 - 1]
master: 18.89s
patched: 8.14s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }
master: [does not complete in 4 minutes wall clock time]
patched: 0.02s
NOTE: I did not write the implementation of the algorithm, I only
adapted it to fit within the mruby APIs.
Fixes GH-4522.","@lopopolo
As a premise, I am imagined that policy of mruby is to handle binary data and strings without distinction.
Therefore, I think that even if there are mixed characters that are invalid as UTF-8, they need to be handled without problems.
I also want to hear other people's opinions about this.

Performing malicious tests this patch.


The character count of broken UTF-8 strings is different (This is similar to what @shuujii showed):
% ./build/host/bin/mruby -e 'p (""\xf1"" * 5).size'
2
% ruby26 -e 'str = ""\xf1"" * 5; p str.encoding, str.size'
#<Encoding:UTF-8>
5


Crash when reversing a broken string as UTF-8:
% ./build/host/bin/mruby -e 'p (""\xf1"" * 5).reverse'
zsh: segmentation fault (core dumped)  ./mruby@test-utf8 -e 'p (""\xf1"" * 5).reverse'


If missing trailing characters, it will make an out-of-range reference:
% ./build/host/bin/mruby -e 'p ""\xf1""[0]'
""\xf1\x00\x00\x00""",True,{}
mruby/mruby,https://github.com/mruby/mruby,4529,2019-06-23T21:38:19Z,2019-06-24T20:14:45Z,2021-12-17T04:36:46Z,CLOSED,False,396,43,1,https://github.com/lopopolo,[WIP] Optimize utf8 string length and byte offset functions,2,[],https://github.com/mruby/mruby/pull/4529,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/4529#issuecomment-504968935,"Replace existing utf8 strlen and byte offset functions with the UTF-8
length algorithm developed by George Pollard and discussed at
https://www.daemonology.net/blog/2008-06-05-faster-utf8-strlen.html

The algorithm assumes that the String is valid UTF-8, which I believe is
enforced by utf8_strlen. The algorithm uses an ASCII fastpath and skips
characters based on their UTF-8 continuation bytes. This approach can be
more than twice as fast as the existing implementation.
The core algorithm is adapted for the following functions:

utf8len
mrb_utf8_len
chars2bytes
bytes2chars

This patch allows removing the utf8len_codepage static array.
Benchmarks (default build with MRB_UTF8_STRING defined)
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000).reverse!
master: 20.99s
patched: 7.36s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000)[1000000 - 1]
master: 18.89s
patched: 8.14s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }
master: [does not complete in 4 minutes wall clock time]
patched: 0.02s
NOTE: I did not write the implementation of the algorithm, I only
adapted it to fit within the mruby APIs.
Fixes GH-4522.","mrbtest does not stop...
% CFLAGS='-O0 -Wall -DMRB_UTF8_STRING' ./minirake -j10 clean `pwd`/build/test/bin/mrbtest
...snip...
% ./build/test/bin/mrbtest
mrbtest - Embeddable Ruby Test

.F..............................................................................F..F...X?..................F..F....F.......F.F.FFFF....F...^C",True,{}
mruby/mruby,https://github.com/mruby/mruby,4529,2019-06-23T21:38:19Z,2019-06-24T20:14:45Z,2021-12-17T04:36:46Z,CLOSED,False,396,43,1,https://github.com/lopopolo,[WIP] Optimize utf8 string length and byte offset functions,2,[],https://github.com/mruby/mruby/pull/4529,https://github.com/lopopolo,7,https://github.com/mruby/mruby/pull/4529#issuecomment-505096234,"Replace existing utf8 strlen and byte offset functions with the UTF-8
length algorithm developed by George Pollard and discussed at
https://www.daemonology.net/blog/2008-06-05-faster-utf8-strlen.html

The algorithm assumes that the String is valid UTF-8, which I believe is
enforced by utf8_strlen. The algorithm uses an ASCII fastpath and skips
characters based on their UTF-8 continuation bytes. This approach can be
more than twice as fast as the existing implementation.
The core algorithm is adapted for the following functions:

utf8len
mrb_utf8_len
chars2bytes
bytes2chars

This patch allows removing the utf8len_codepage static array.
Benchmarks (default build with MRB_UTF8_STRING defined)
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000).reverse!
master: 20.99s
patched: 7.36s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000)[1000000 - 1]
master: 18.89s
patched: 8.14s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }
master: [does not complete in 4 minutes wall clock time]
patched: 0.02s
NOTE: I did not write the implementation of the algorithm, I only
adapted it to fit within the mruby APIs.
Fixes GH-4522.","Oh no, it appears I was running the tests without MRB_UTF8_STRING defined. Thanks for the tip @dearblue. This patch is not ready for review. I'll mark it as WIP.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4529,2019-06-23T21:38:19Z,2019-06-24T20:14:45Z,2021-12-17T04:36:46Z,CLOSED,False,396,43,1,https://github.com/lopopolo,[WIP] Optimize utf8 string length and byte offset functions,2,[],https://github.com/mruby/mruby/pull/4529,https://github.com/lopopolo,8,https://github.com/mruby/mruby/pull/4529#issuecomment-505162194,"Replace existing utf8 strlen and byte offset functions with the UTF-8
length algorithm developed by George Pollard and discussed at
https://www.daemonology.net/blog/2008-06-05-faster-utf8-strlen.html

The algorithm assumes that the String is valid UTF-8, which I believe is
enforced by utf8_strlen. The algorithm uses an ASCII fastpath and skips
characters based on their UTF-8 continuation bytes. This approach can be
more than twice as fast as the existing implementation.
The core algorithm is adapted for the following functions:

utf8len
mrb_utf8_len
chars2bytes
bytes2chars

This patch allows removing the utf8len_codepage static array.
Benchmarks (default build with MRB_UTF8_STRING defined)
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000).reverse!
master: 20.99s
patched: 7.36s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000000)[1000000 - 1]
master: 18.89s
patched: 8.14s
(""aaa\n\nbbbbb\n\n\n\n\ncccc"" * 100000).each_line(""\n"") { }
master: [does not complete in 4 minutes wall clock time]
patched: 0.02s
NOTE: I did not write the implementation of the algorithm, I only
adapted it to fit within the mruby APIs.
Fixes GH-4522.","I've pushed my latest experiment. Not being able to store the encoding on the RString means we must process each character in the char * to determine the length. The existing approach with the lookup table is faster than what I've been able to come up with.
It looks like CRuby is able to fast-path UTF-8 strlen by storing whether the string has a ""broken"" encoding or not.
I'm going to abandon this PR. Thanks for taking a look.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4530,2019-06-24T10:10:56Z,2019-06-25T09:50:46Z,2019-06-27T10:44:47Z,MERGED,True,1,1,1,https://github.com/shuujii,Compare obj pointer directly instead of using mrb_obj_eq in mrb_gc_unregister,1,[],https://github.com/mruby/mruby/pull/4530,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4530,Because immediate values are not registered.,Because immediate values are not registered.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4531,2019-06-24T10:37:45Z,2019-06-25T16:32:29Z,2021-12-17T04:38:41Z,CLOSED,False,13,1,2,https://github.com/lopopolo,Lazily cache UTF-8 character length on RString,1,[],https://github.com/mruby/mruby/pull/4531,https://github.com/lopopolo,1,https://github.com/mruby/mruby/pull/4531,"Store the UTF-8 length as computed by utf8_strlen on RString when MRB_UTF8_STRING is defined. This significantly (3200x) speeds up String operations at the cost of one mrb_int of memory per RString.
The UTF-8 char_len is computed on first call to utf8_strlen and is cached until mrb_str_modify is called, when it is zeroed out. utf8_strlen gets a new fastpath for when the character length is cached and retains the fast path for ASCII strings which is used as a fallback.
Benchmark
/usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
This PR @ ca692e6
Completes in 0.30 seconds.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
        0.30 real         0.30 user         0.00 sys
   2306048  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       572  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
        48  involuntary context switches
master
Completes in 963 seconds. The caching implementation is 3210x faster than master.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
      963.41 real       961.82 user         0.74 sys
   2252800  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       559  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
    139399  involuntary context switches","Store the UTF-8 length as computed by utf8_strlen on RString when MRB_UTF8_STRING is defined. This significantly (3200x) speeds up String operations at the cost of one mrb_int of memory per RString.
The UTF-8 char_len is computed on first call to utf8_strlen and is cached until mrb_str_modify is called, when it is zeroed out. utf8_strlen gets a new fastpath for when the character length is cached and retains the fast path for ASCII strings which is used as a fallback.
Benchmark
/usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
This PR @ ca692e6
Completes in 0.30 seconds.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
        0.30 real         0.30 user         0.00 sys
   2306048  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       572  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
        48  involuntary context switches
master
Completes in 963 seconds. The caching implementation is 3210x faster than master.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
      963.41 real       961.82 user         0.74 sys
   2252800  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       559  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
    139399  involuntary context switches",True,{}
mruby/mruby,https://github.com/mruby/mruby,4531,2019-06-24T10:37:45Z,2019-06-25T16:32:29Z,2021-12-17T04:38:41Z,CLOSED,False,13,1,2,https://github.com/lopopolo,Lazily cache UTF-8 character length on RString,1,[],https://github.com/mruby/mruby/pull/4531,https://github.com/lopopolo,2,https://github.com/mruby/mruby/pull/4531#issuecomment-504956133,"Store the UTF-8 length as computed by utf8_strlen on RString when MRB_UTF8_STRING is defined. This significantly (3200x) speeds up String operations at the cost of one mrb_int of memory per RString.
The UTF-8 char_len is computed on first call to utf8_strlen and is cached until mrb_str_modify is called, when it is zeroed out. utf8_strlen gets a new fastpath for when the character length is cached and retains the fast path for ASCII strings which is used as a fallback.
Benchmark
/usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
This PR @ ca692e6
Completes in 0.30 seconds.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
        0.30 real         0.30 user         0.00 sys
   2306048  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       572  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
        48  involuntary context switches
master
Completes in 963 seconds. The caching implementation is 3210x faster than master.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
      963.41 real       961.82 user         0.74 sys
   2252800  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       559  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
    139399  involuntary context switches","Related to GH-4522 and GH-4529
cc @dearblue",True,{}
mruby/mruby,https://github.com/mruby/mruby,4531,2019-06-24T10:37:45Z,2019-06-25T16:32:29Z,2021-12-17T04:38:41Z,CLOSED,False,13,1,2,https://github.com/lopopolo,Lazily cache UTF-8 character length on RString,1,[],https://github.com/mruby/mruby/pull/4531,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4531#issuecomment-504966240,"Store the UTF-8 length as computed by utf8_strlen on RString when MRB_UTF8_STRING is defined. This significantly (3200x) speeds up String operations at the cost of one mrb_int of memory per RString.
The UTF-8 char_len is computed on first call to utf8_strlen and is cached until mrb_str_modify is called, when it is zeroed out. utf8_strlen gets a new fastpath for when the character length is cached and retains the fast path for ASCII strings which is used as a fallback.
Benchmark
/usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
This PR @ ca692e6
Completes in 0.30 seconds.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
        0.30 real         0.30 user         0.00 sys
   2306048  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       572  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
        48  involuntary context switches
master
Completes in 963 seconds. The caching implementation is 3210x faster than master.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
      963.41 real       961.82 user         0.74 sys
   2252800  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       559  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
    139399  involuntary context switches","I think this patch will not be accepted as it is because the size of struct RString will increase (see: #3297).
However, it may be possible because the size does not increase in a limited environment such as 64-bit system + MRB_INT32 + boxing.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4531,2019-06-24T10:37:45Z,2019-06-25T16:32:29Z,2021-12-17T04:38:41Z,CLOSED,False,13,1,2,https://github.com/lopopolo,Lazily cache UTF-8 character length on RString,1,[],https://github.com/mruby/mruby/pull/4531,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4531#issuecomment-505044443,"Store the UTF-8 length as computed by utf8_strlen on RString when MRB_UTF8_STRING is defined. This significantly (3200x) speeds up String operations at the cost of one mrb_int of memory per RString.
The UTF-8 char_len is computed on first call to utf8_strlen and is cached until mrb_str_modify is called, when it is zeroed out. utf8_strlen gets a new fastpath for when the character length is cached and retains the fast path for ASCII strings which is used as a fallback.
Benchmark
/usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
This PR @ ca692e6
Completes in 0.30 seconds.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
        0.30 real         0.30 user         0.00 sys
   2306048  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       572  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
        48  involuntary context switches
master
Completes in 963 seconds. The caching implementation is 3210x faster than master.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
      963.41 real       961.82 user         0.74 sys
   2252800  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       559  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
    139399  involuntary context switches","64-bit system + MRB_INT32 + boxing

Sorry, boxing has nothing to do with it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4531,2019-06-24T10:37:45Z,2019-06-25T16:32:29Z,2021-12-17T04:38:41Z,CLOSED,False,13,1,2,https://github.com/lopopolo,Lazily cache UTF-8 character length on RString,1,[],https://github.com/mruby/mruby/pull/4531,https://github.com/lopopolo,5,https://github.com/mruby/mruby/pull/4531#issuecomment-505522321,"Store the UTF-8 length as computed by utf8_strlen on RString when MRB_UTF8_STRING is defined. This significantly (3200x) speeds up String operations at the cost of one mrb_int of memory per RString.
The UTF-8 char_len is computed on first call to utf8_strlen and is cached until mrb_str_modify is called, when it is zeroed out. utf8_strlen gets a new fastpath for when the character length is cached and retains the fast path for ASCII strings which is used as a fallback.
Benchmark
/usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
This PR @ ca692e6
Completes in 0.30 seconds.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
        0.30 real         0.30 user         0.00 sys
   2306048  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       572  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
        48  involuntary context switches
master
Completes in 963 seconds. The caching implementation is 3210x faster than master.
$ /usr/bin/time -l ./bin/mruby -e 'def str(len); (""💪"" * len); end; s = str(100000); puts s.length; 1000000.times { s.length }'
100000
      963.41 real       961.82 user         0.74 sys
   2252800  maximum resident set size
         0  average shared memory size
         0  average unshared data size
         0  average unshared stack size
       559  page reclaims
         0  page faults
         0  swaps
         0  block input operations
         0  block output operations
         0  messages sent
         0  messages received
         0  signals received
         0  voluntary context switches
    139399  involuntary context switches","The tests do not currently pass when invoked like this:
CFLAGS=""-Wall -DMRB_UTF8_STRING"" rake test

str_replace does not work as expected. mruby-io seems to make assumptions about the layout of the RString struct. I think I bit off more than I can chew. Abandoning this PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4532,2019-06-25T14:21:21Z,2019-06-26T03:41:57Z,2019-06-27T10:44:47Z,MERGED,True,102,59,4,https://github.com/shuujii,Fix `String#byteslice` with `MRB_UTF8_STRING` and some edge cases,1,[],https://github.com/mruby/mruby/pull/4532,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4532,"Example:
$ bin/mruby -e '
  p ""あa"".byteslice(1)
  p ""bar"".byteslice(3)
  p ""bar"".byteslice(4..0)
'

Before this patch:
""a""
""""
RangeError (4..0 out of range)

After this patch (same as Ruby):
""\x81""
nil
nil","Example:
$ bin/mruby -e '
  p ""あa"".byteslice(1)
  p ""bar"".byteslice(3)
  p ""bar"".byteslice(4..0)
'

Before this patch:
""a""
""""
RangeError (4..0 out of range)

After this patch (same as Ruby):
""\x81""
nil
nil",True,{}
mruby/mruby,https://github.com/mruby/mruby,4533,2019-06-26T06:54:16Z,2019-06-26T06:57:45Z,2019-06-27T10:44:50Z,MERGED,True,7,4,1,https://github.com/shuujii,Silence unused label warnings from gcc; ref #4524,1,[],https://github.com/mruby/mruby/pull/4533,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4533,"mruby/mruby/src/string.c:1722:4: warning: label 'bytes' defined but not used [-Wunused-label]
    bytes:
    ^~~~~","mruby/mruby/src/string.c:1722:4: warning: label 'bytes' defined but not used [-Wunused-label]
    bytes:
    ^~~~~",True,{}
mruby/mruby,https://github.com/mruby/mruby,4535,2019-06-27T10:35:54Z,2019-06-27T23:32:24Z,2019-07-15T14:00:46Z,MERGED,True,5,0,2,https://github.com/shuujii,Add modification tests for immediate value,1,[],https://github.com/mruby/mruby/pull/4535,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4535,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4536,2019-06-27T13:34:50Z,2019-06-27T23:23:51Z,2019-06-28T00:52:42Z,MERGED,True,5,5,1,https://github.com/komainu8,Fix broken links for mruby.org,1,[],https://github.com/mruby/mruby/pull/4536,https://github.com/komainu8,1,https://github.com/mruby/mruby/pull/4536,A part of a fix for issue mruby/mruby.github.io#50,A part of a fix for issue mruby/mruby.github.io#50,True,{}
mruby/mruby,https://github.com/mruby/mruby,4538,2019-06-28T10:38:27Z,2019-06-28T11:08:53Z,2019-07-15T14:00:50Z,MERGED,True,3,3,3,https://github.com/shuujii,Use `__ENCODING__` in tests,1,[],https://github.com/mruby/mruby/pull/4538,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4538,It cannot be used for String#size test if judging whether or not MRB_UTF8_STRING is defined by result of String#size.,It cannot be used for String#size test if judging whether or not MRB_UTF8_STRING is defined by result of String#size.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4539,2019-06-28T10:43:59Z,2019-06-28T11:07:35Z,2019-07-15T14:00:49Z,MERGED,True,1,1,1,https://github.com/shuujii,Remove unnecessary backticks in `src/range.c`; ref #2858,1,[],https://github.com/mruby/mruby/pull/4539,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4539,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4540,2019-06-29T03:06:36Z,2019-06-29T12:38:33Z,2019-07-11T13:19:44Z,MERGED,True,128,45,6,https://github.com/dearblue,Nested `assert` for mrbtest,3,[],https://github.com/mruby/mruby/pull/4540,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4540,"When nesting assert used in test, it is indented and displayed.
Assertion numbers are concatenated by ""-"" at this time.
The purpose is to match the apparent numbers when failing with assert_mruby which is defined by mrbgems/mruby-bin-mruby/bintest/mruby.rb for example.
Child assertions ""skip"" and ""info"" are reported as parent assertions ""info"" and $ok_test += 1.
The child assertions ""ko"" and ""crash"" are reported as the parent assertion ""ko"" and $ko_test += 1.
When child assertions are mixed, ""ko"" takes precedence.
If you use ""."" As a concatenation character, I think it is easy to confuse it with the ISO Ruby section number when it is displayed.
So we chose ""-"" as the concatenation character.
Note that this patch conflicts with #4320.
Incompatibility

$mrbtest_assert_idx takes nil or an integer array object.
So far it was nil or an integer.
$asserts points to the top of the internal stack in the assert.
$mrbtest_assert points to the top of the internal stack in assert.","When nesting assert used in test, it is indented and displayed.
Assertion numbers are concatenated by ""-"" at this time.
The purpose is to match the apparent numbers when failing with assert_mruby which is defined by mrbgems/mruby-bin-mruby/bintest/mruby.rb for example.
Child assertions ""skip"" and ""info"" are reported as parent assertions ""info"" and $ok_test += 1.
The child assertions ""ko"" and ""crash"" are reported as the parent assertion ""ko"" and $ko_test += 1.
When child assertions are mixed, ""ko"" takes precedence.
If you use ""."" As a concatenation character, I think it is easy to confuse it with the ISO Ruby section number when it is displayed.
So we chose ""-"" as the concatenation character.
Note that this patch conflicts with #4320.
Incompatibility

$mrbtest_assert_idx takes nil or an integer array object.
So far it was nil or an integer.
$asserts points to the top of the internal stack in the assert.
$mrbtest_assert points to the top of the internal stack in assert.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4540,2019-06-29T03:06:36Z,2019-06-29T12:38:33Z,2019-07-11T13:19:44Z,MERGED,True,128,45,6,https://github.com/dearblue,Nested `assert` for mrbtest,3,[],https://github.com/mruby/mruby/pull/4540,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4540#issuecomment-506921649,"When nesting assert used in test, it is indented and displayed.
Assertion numbers are concatenated by ""-"" at this time.
The purpose is to match the apparent numbers when failing with assert_mruby which is defined by mrbgems/mruby-bin-mruby/bintest/mruby.rb for example.
Child assertions ""skip"" and ""info"" are reported as parent assertions ""info"" and $ok_test += 1.
The child assertions ""ko"" and ""crash"" are reported as the parent assertion ""ko"" and $ko_test += 1.
When child assertions are mixed, ""ko"" takes precedence.
If you use ""."" As a concatenation character, I think it is easy to confuse it with the ISO Ruby section number when it is displayed.
So we chose ""-"" as the concatenation character.
Note that this patch conflicts with #4320.
Incompatibility

$mrbtest_assert_idx takes nil or an integer array object.
So far it was nil or an integer.
$asserts points to the top of the internal stack in the assert.
$mrbtest_assert points to the top of the internal stack in assert.","Demonstration:
# example test code
assert ""test KO #A"" do
  assert_false ""bad assertion #1""

  assert ""nested test KO #B"" do
    assert_false ""bad assertion #2""

    assert ""nested test KO #C"" do
      assert_equal ""bad assertion #3"", ""dummy""
    end
  end

  assert do
    assert do
      assert_equal ""bad assertion #4"", ""dummy""
    end

    assert do
      assert ""Error"" do
        (0/0).to_i
      end
    end

    assert do
      assert ""Jump"" do
        skip ""skip!""
      end
    end
  end

  assert_false ""bad assertion #5""
end
% ./build/test/bin/mrbtest | ruby -e 's=$stdin.read; nil while s.gsub!(/^(?:.{80})+\K(?=.)/, ""\n""); puts s'
mrbtest - Embeddable Ruby Test

................................................................................
........?.......................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
......................................................................FFFXF?.FF.
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
.............
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)
Fail: test KO #A (core)
 - Assertion[1]
    Expected ""bad assertion #1"" to be false.
 - Assertion[2]
    Fail: nested test KO #B (core)
     - Assertion[2-1]
        Expected ""bad assertion #2"" to be false.
     - Assertion[2-2]
        Fail: nested test KO #C (core)
         - Assertion[2-2-1]
            Expected: ""bad assertion #3""
              Actual: ""dummy""
 - Assertion[3]
    Fail: Assertion failed (core)
     - Assertion[3-1]
        Fail: Assertion failed (core)
         - Assertion[3-1-1]
            Expected: ""bad assertion #4""
              Actual: ""dummy""
     - Assertion[3-2]
        Fail: Assertion failed (core)
         - Assertion[3-2-1]
            FloatDomainError: Error => NaN (core)
     - Assertion[3-3]
        Info: Assertion failed (core)
         - Assertion[3-3-1]
            Skip: Jump => skip! (core)
 - Assertion[4]
    Expected ""bad assertion #5"" to be false.
Total: 1133
   OK: 1124
   KO: 6
Crash: 1
 Skip: 2
 Time: 0.97 seconds",True,{}
mruby/mruby,https://github.com/mruby/mruby,4541,2019-06-29T06:06:44Z,2019-06-29T12:36:49Z,2019-07-11T13:19:46Z,MERGED,True,236,96,3,https://github.com/dearblue,Replace `String#[]=` method by C implements,3,[],https://github.com/mruby/mruby/pull/4541,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4541,"The purpose is to eliminate string objects that are temporarily created during processing.
Even if MRB_UTF8_STRING is defined, it works as before as long as it is checked by me.
The behavior has been changed when an invalid string is given as UTF-8. See #4541 (comment)
The error message should be almost the same as the current implementation.

And I simplified mrb_str_aref_m() and mrb_str_aref() too.
It is integration with part of argument parsing used by mrb_str_aset_m().","The purpose is to eliminate string objects that are temporarily created during processing.
Even if MRB_UTF8_STRING is defined, it works as before as long as it is checked by me.
The behavior has been changed when an invalid string is given as UTF-8. See #4541 (comment)
The error message should be almost the same as the current implementation.

And I simplified mrb_str_aref_m() and mrb_str_aref() too.
It is integration with part of argument parsing used by mrb_str_aset_m().",True,{}
mruby/mruby,https://github.com/mruby/mruby,4541,2019-06-29T06:06:44Z,2019-06-29T12:36:49Z,2019-07-11T13:19:46Z,MERGED,True,236,96,3,https://github.com/dearblue,Replace `String#[]=` method by C implements,3,[],https://github.com/mruby/mruby/pull/4541,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4541#issuecomment-506930999,"The purpose is to eliminate string objects that are temporarily created during processing.
Even if MRB_UTF8_STRING is defined, it works as before as long as it is checked by me.
The behavior has been changed when an invalid string is given as UTF-8. See #4541 (comment)
The error message should be almost the same as the current implementation.

And I simplified mrb_str_aref_m() and mrb_str_aref() too.
It is integration with part of argument parsing used by mrb_str_aset_m().","Comparison vs. master 4f4e240


Summary of object code size with CFLAGS='-Os' for FreeBSD 12.0 amd64
% 7z l taste-Os/\*/build/host/bin/mruby .text .rodata .data | hand-edit...

Listing archive: taste-Os/master/build/host/bin/mruby
   Date      Time    Attr         Size   Compressed  Name
                    .....       277700       277700  .text
                    .....       177345       177345  .rodata
                    .....          544          544  .data
                                455589       455589  3 files

Listing archive: taste-Os/replace-string-aset/build/host/bin/mruby
   Date      Time    Attr         Size   Compressed  Name
                    .....       278740       278740  .text
                    .....       176328       176328  .rodata
                    .....          544          544  .data
                                455612       455612  3 files


Summary of object code size with CFLAGS='-O3 -DMRB_UTF8_STRING' for FreeBSD 12.0 amd64
% 7z l taste-O3-utf8/\*/build/host/bin/mruby .text .rodata .data | hand-edit...

Listing archive: taste-O3-utf8/master/build/host/bin/mruby
   Date      Time    Attr         Size   Compressed  Name
                    .....       471140       471140  .text
                    .....       193872       193872  .rodata
                    .....          544          544  .data
                                665556       665556  3 files

Listing archive: taste-O3-utf8/replace-string-aset/build/host/bin/mruby
   Date      Time    Attr         Size   Compressed  Name
                    .....       473076       473076  .text
                    .....       192872       192872  .rodata
                    .....          544          544  .data
                                666492       666492  3 files",True,{}
mruby/mruby,https://github.com/mruby/mruby,4541,2019-06-29T06:06:44Z,2019-06-29T12:36:49Z,2019-07-11T13:19:46Z,MERGED,True,236,96,3,https://github.com/dearblue,Replace `String#[]=` method by C implements,3,[],https://github.com/mruby/mruby/pull/4541,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4541#issuecomment-506950966,"The purpose is to eliminate string objects that are temporarily created during processing.
Even if MRB_UTF8_STRING is defined, it works as before as long as it is checked by me.
The behavior has been changed when an invalid string is given as UTF-8. See #4541 (comment)
The error message should be almost the same as the current implementation.

And I simplified mrb_str_aref_m() and mrb_str_aref() too.
It is integration with part of argument parsing used by mrb_str_aset_m().","The behavior has been changed when an invalid string is given as UTF-8.
Specifically, this is the behavior when a string ending with leading byte is given as the index for the correct UTF-8 string.
Currently, for example, ""\xe2"" will replace UTF-8 character whose leading byte starts with 0xe2.
This patch replaces the matching byte part.


by master 4f4e240
% ./taste-O3-utf8/master/build/host/bin/mruby -e 's = ""○✕△□""; s[""✕\xe2""] = ""★""; p s'
""○★□""


by this patch
% ./taste-O3-utf8/replace-string-aset/build/host/bin/mruby -e 's = ""○✕△□""; s[""✕\xe2""] = ""★""; p s'
""○★\x96\xb3□""


by ruby-2.6.3
% ruby26 -e 's = ""○✕△□""; s[""✕\xe2""] = ""★""; p s'
Traceback (most recent call last):
        1: from -e:1:in `<main>'
-e:1:in `[]=': string not matched (IndexError)


The current behavior of mruby and CRuby comes at a disadvantage when dealing with binary data.
So I think that it is still better to be the behavior of this patch, but who have any opinions?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4541,2019-06-29T06:06:44Z,2019-06-29T12:36:49Z,2019-07-11T13:19:46Z,MERGED,True,236,96,3,https://github.com/dearblue,Replace `String#[]=` method by C implements,3,[],https://github.com/mruby/mruby/pull/4541,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4541#issuecomment-506953873,"The purpose is to eliminate string objects that are temporarily created during processing.
Even if MRB_UTF8_STRING is defined, it works as before as long as it is checked by me.
The behavior has been changed when an invalid string is given as UTF-8. See #4541 (comment)
The error message should be almost the same as the current implementation.

And I simplified mrb_str_aref_m() and mrb_str_aref() too.
It is integration with part of argument parsing used by mrb_str_aset_m().","The new behavior looks OK for mruby. CRuby has multiple encoding support, so when you want to process binary data, you just set the encoding to ASCII-8BIT or BINARY. You cannot change the individual string encoding in mruby, thus you need the new behavior.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4541,2019-06-29T06:06:44Z,2019-06-29T12:36:49Z,2019-07-11T13:19:46Z,MERGED,True,236,96,3,https://github.com/dearblue,Replace `String#[]=` method by C implements,3,[],https://github.com/mruby/mruby/pull/4541,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/4541#issuecomment-506962936,"The purpose is to eliminate string objects that are temporarily created during processing.
Even if MRB_UTF8_STRING is defined, it works as before as long as it is checked by me.
The behavior has been changed when an invalid string is given as UTF-8. See #4541 (comment)
The error message should be almost the same as the current implementation.

And I simplified mrb_str_aref_m() and mrb_str_aref() too.
It is integration with part of argument parsing used by mrb_str_aset_m().",@matz Thank you.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4542,2019-06-29T11:37:45Z,2019-06-30T05:16:02Z,2019-07-08T10:41:37Z,CLOSED,False,11,1,2,https://github.com/shuujii,`Module#extend_object(obj)` should return `obj`,1,[],https://github.com/mruby/mruby/pull/4542,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4542,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4544,2019-06-30T06:18:08Z,2019-06-30T07:29:56Z,2019-07-15T14:00:47Z,MERGED,True,33,2,3,https://github.com/shuujii,"Fix `include`, `prepend` and `extend` to frozen object",1,[],https://github.com/mruby/mruby/pull/4544,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4544,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4545,2019-07-01T03:41:59Z,2019-07-01T15:20:37Z,2019-07-15T14:00:49Z,MERGED,True,1,3,1,https://github.com/shuujii,Remove unused C header file from `src/etc.c`,1,[],https://github.com/mruby/mruby/pull/4545,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4545,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4546,2019-07-02T10:51:15Z,2019-07-02T10:55:43Z,2019-07-15T14:00:47Z,MERGED,True,4,18,1,https://github.com/shuujii,Fix and refine error message in `mrb_obj_to_sym()`,1,[],https://github.com/mruby/mruby/pull/4546,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4546,"Before this patch:
$ bin/mruby -e '1.respond_to?(2)'  #=> nil is not a symbol
After this patch (same as Ruby):
$ bin/mruby -e '1.respond_to?(2)'  #=> 2 is not a symbol nor a string","Before this patch:
$ bin/mruby -e '1.respond_to?(2)'  #=> nil is not a symbol
After this patch (same as Ruby):
$ bin/mruby -e '1.respond_to?(2)'  #=> 2 is not a symbol nor a string",True,{}
mruby/mruby,https://github.com/mruby/mruby,4548,2019-07-03T11:36:27Z,2019-07-03T16:49:01Z,2019-07-15T14:00:48Z,MERGED,True,15,13,2,https://github.com/shuujii,Refine document to mrb_get_args()` [ci skip],1,[],https://github.com/mruby/mruby/pull/4548,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4548,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4550,2019-07-04T07:49:19Z,2019-07-04T14:10:16Z,2019-07-08T10:41:24Z,CLOSED,False,11,11,2,https://github.com/shuujii,Rename `MRB_STR_NO_UTF` to `MRB_STR_NO_MULTI_BYTE`,1,[],https://github.com/mruby/mruby/pull/4550,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4550,"The previous name may be a little confusing because ASCII only string is
also valid UTF-8 string.","The previous name may be a little confusing because ASCII only string is
also valid UTF-8 string.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4550,2019-07-04T07:49:19Z,2019-07-04T14:10:16Z,2019-07-08T10:41:24Z,CLOSED,False,11,11,2,https://github.com/shuujii,Rename `MRB_STR_NO_UTF` to `MRB_STR_NO_MULTI_BYTE`,1,[],https://github.com/mruby/mruby/pull/4550,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4550#issuecomment-508495356,"The previous name may be a little confusing because ASCII only string is
also valid UTF-8 string.","I'd rather rename it to MRB_STR_ASCII, which is clearer and shorter.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4551,2019-07-04T13:06:26Z,2019-07-04T13:50:06Z,2019-07-11T13:19:47Z,MERGED,True,5,1,1,https://github.com/dearblue,Fix heap buffer overflow; ref #4549,1,[],https://github.com/mruby/mruby/pull/4551,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4551,This patch is showed in #4549.,This patch is showed in #4549.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4553,2019-07-05T11:50:35Z,2019-07-05T22:30:07Z,2019-07-15T14:00:48Z,MERGED,True,21,7,2,https://github.com/shuujii,Read/write `MRB_STR_ASCII` flag only when `MRB_UTF8_STRING` is defined,1,[],https://github.com/mruby/mruby/pull/4553,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4553,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4554,2019-07-06T11:09:46Z,2019-07-06T12:09:14Z,2019-07-15T14:00:47Z,MERGED,True,6,4,1,https://github.com/shuujii,Fix missing `#ifndef MRB_ENABLE_ALL_SYMBOLS`,1,[],https://github.com/mruby/mruby/pull/4554,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4554,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4557,2019-07-07T13:25:48Z,2019-07-08T09:50:28Z,2019-07-15T14:00:47Z,MERGED,True,69,27,2,https://github.com/shuujii,Fix `Numeric#step` to infinity; ref. #4555,1,[],https://github.com/mruby/mruby/pull/4557,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4557,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4559,2019-07-08T13:43:10Z,2019-07-09T00:25:54Z,2019-07-15T14:00:46Z,MERGED,True,33,32,1,https://github.com/shuujii,Add macros for inline symbol for readability,1,[],https://github.com/mruby/mruby/pull/4559,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4559,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/lopopolo,1,https://github.com/mruby/mruby/pull/4560,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.","This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4560#issuecomment-509465414,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.","This patch is incorrect.
Before this patch:
$ bin/mruby -e 'p (1...3).max'  #=> 2
After this patch:
$ bin/mruby -e 'p (1...3).max'  #=> 3
I strongly recommend writing tests based on CRuby's tests, Ruby Spec, etc.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/lopopolo,3,https://github.com/mruby/mruby/pull/4560#issuecomment-509466877,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.",Oops I had this fixed in an earlier version of the patch but lost it. I'll add some tests.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4560#issuecomment-509468040,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.",I think it is better to refer to CRuby etc for the implementation too.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/lopopolo,5,https://github.com/mruby/mruby/pull/4560#issuecomment-509470126,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.",Thanks for your patience @shuujii. I verified the behavior of the tests in CRuby by running them in an IRB shell on Ruby 2.6.0.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/4560#issuecomment-509473575,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.","This patch is still incorrect.
Before this patch:
$ bin/mruby -e 'p (""a""...""f"").max'  #=> ""e""
After this patch:
$ bin/mruby -e 'p (""a""...""f"").max'  #=> undefined method '-' (NoMethodError)
This example is in Ruby Spec.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/lopopolo,7,https://github.com/mruby/mruby/pull/4560#issuecomment-509496104,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.","😞 Thank you @shuujii. I added more tests from Ruby Spec, cleaned up the tests, and got the implementation passing.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/lopopolo,8,https://github.com/mruby/mruby/pull/4560#issuecomment-509496214,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.",This did require a change to Range#each to handle Float in the same special case as Fixnum.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/shuujii,9,https://github.com/mruby/mruby/pull/4560#issuecomment-509523762,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.","It doesn't seem to be enough yet:

When block is given, special path cannot be used because block must be called per comparison (this test is also in Ruby Spec).
If special path cannot be used, it should be delegated to super.
Float is not defined with MRB_WITHOUT_FLOAT.

IMO, this extension might be better placed in mruby-range-ext gem to avoid increasing core size.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/lopopolo,10,https://github.com/mruby/mruby/pull/4560#issuecomment-509551119,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.","Ok I think I've got it this time.

Moved the fast path implementation to mruby-range-ext
Delegate to super if block given
delegate to super if endpoints are not Fixnum or Float
Import all applicable specs from Ruby Spec
Correctly implement the fast path

Thank you so much @shuujii for helping me though this. I'm hoping this will be the first PR I land in mruby 😄",True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/matz,11,https://github.com/mruby/mruby/pull/4560#issuecomment-509572113,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.",A beautiful process of improvement. Impressed.,True,{'HOORAY': ['https://github.com/asf-stripe']}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/shuujii,12,https://github.com/mruby/mruby/pull/4560#issuecomment-509631704,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.","@lopopolo Congrats on your first PR merge in mruby!
More two comments:

It may not be good to treat Float (non Integer) the same as CRuby because mruby treats integers and float numbers more uniformly than CRuby (e.g. mruby has Float#succ). However I'm not sure how to fix it concretely right now.
The tests added to mruby-string-ext are not tests for Range#(max|min) but tests for Enumerable#(max|min) because mruby-string-ext doesn't depend on mruby-range-ext. I think it is undesirable mruby-string-ext depends on mruby-range-ext or tests for Range#(max|mix) exist in mruby-string-ext. Therefor, I think it is better to define and use String-like (has #succ) class in mruby-range-ext.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4560,2019-07-09T02:25:39Z,2019-07-09T09:44:53Z,2019-07-09T15:20:42Z,MERGED,True,167,0,3,https://github.com/lopopolo,Specialize Enumerable#max and Enumerable#min for Range,8,[],https://github.com/mruby/mruby/pull/4560,https://github.com/lopopolo,13,https://github.com/mruby/mruby/pull/4560#issuecomment-509687194,"This patch prevents a hang for pathalogical (large) Ranges when
computing max and min.
Range inherits its implementation of max and min from Enumerable.
Enumerable implements max and min by calling each. For Range objects,
this is unnecessary since we know the max and the min by the end and
begin attributes.
It is also very slow. This code hangs unnecessarily:
(0..2**32).max
# ... hang
(0..2**32).min
# ... hang

This patch overrides max and min after including enumerable to yield
based on the begin and end methods.",@shuujii I've followed up on the bad dependency on mruby-range-ext in GH-4564. 😄,True,{}
mruby/mruby,https://github.com/mruby/mruby,4561,2019-07-09T04:20:37Z,2019-07-09T07:41:33Z,2019-07-15T14:00:48Z,MERGED,True,4,4,1,https://github.com/shuujii,"Fix the order of ""expected"" and ""actual"" in `test/t/range.rb`",1,[],https://github.com/mruby/mruby/pull/4561,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4561,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4561,2019-07-09T04:20:37Z,2019-07-09T07:41:33Z,2019-07-15T14:00:48Z,MERGED,True,4,4,1,https://github.com/shuujii,"Fix the order of ""expected"" and ""actual"" in `test/t/range.rb`",1,[],https://github.com/mruby/mruby/pull/4561,https://github.com/lopopolo,2,https://github.com/mruby/mruby/pull/4561#issuecomment-509496428,,Thank you for fixing this broken window. I copy and pasted from this example in GH-4560.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4562,2019-07-09T10:17:57Z,2019-07-09T12:22:16Z,2019-07-15T14:00:49Z,MERGED,True,9,2,1,https://github.com/shuujii,Set `MRB_STR_ASCII` flag when an inline symbol is stringized,1,[],https://github.com/mruby/mruby/pull/4562,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4562,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4564,2019-07-09T15:19:58Z,2020-08-06T14:25:55Z,2021-12-17T04:38:54Z,CLOSED,False,139,32,5,https://github.com/lopopolo,Implement String#succ in mruby-range-ext for specialized Range#max and Range#min,3,[],https://github.com/mruby/mruby/pull/4564,https://github.com/lopopolo,1,https://github.com/mruby/mruby/pull/4564,"Follow up to GH-4560.
cc @shuujii","Follow up to GH-4560.
cc @shuujii",True,{}
mruby/mruby,https://github.com/mruby/mruby,4564,2019-07-09T15:19:58Z,2020-08-06T14:25:55Z,2021-12-17T04:38:54Z,CLOSED,False,139,32,5,https://github.com/lopopolo,Implement String#succ in mruby-range-ext for specialized Range#max and Range#min,3,[],https://github.com/mruby/mruby/pull/4564,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4564#issuecomment-509885920,"Follow up to GH-4560.
cc @shuujii","First of all, Range#each treats String edges as special and tries String#upto first, so I apologize for the confusion.
However, my intention is not to implement String#succ (or String#upto) itself in mruby-range-ext. I think the purpose of testing String edges in Range#(max|mix) is to verify that they work when fast path is not used, so my intention is to define a class that can do that in a test script.
Example:
# mrbgems/mruby-range-ext/test/range.rb

class A < Array
  def succ
    dup << size+1
  end
end

assert('Range#max (not fast path without block)') do
  assert_equal [1,2,3], (A[1]..A[1,2,3]).max
  assert_equal [1,2], (A[1]...A[1,2,3]).max
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,4564,2019-07-09T15:19:58Z,2020-08-06T14:25:55Z,2021-12-17T04:38:54Z,CLOSED,False,139,32,5,https://github.com/lopopolo,Implement String#succ in mruby-range-ext for specialized Range#max and Range#min,3,[],https://github.com/mruby/mruby/pull/4564,https://github.com/lopopolo,3,https://github.com/mruby/mruby/pull/4564#issuecomment-522408687,"Follow up to GH-4560.
cc @shuujii",@shuujii I'm having trouble finding time to pick this back up. Should I close the PR?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4564,2019-07-09T15:19:58Z,2020-08-06T14:25:55Z,2021-12-17T04:38:54Z,CLOSED,False,139,32,5,https://github.com/lopopolo,Implement String#succ in mruby-range-ext for specialized Range#max and Range#min,3,[],https://github.com/mruby/mruby/pull/4564,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4564#issuecomment-522550083,"Follow up to GH-4560.
cc @shuujii",You don't have to close. I will take care.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4568,2019-07-10T13:03:48Z,2019-07-10T13:33:38Z,2019-07-15T14:00:49Z,MERGED,True,5,5,1,https://github.com/shuujii,Remove an unused argument of `str_with_class()`,1,[],https://github.com/mruby/mruby/pull/4568,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4568,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4569,2019-07-11T13:27:45Z,2019-07-11T16:47:51Z,2019-07-13T12:47:40Z,MERGED,True,74,5,2,https://github.com/dearblue,Improve performance `String#index` with UTF-8,2,[],https://github.com/mruby/mruby/pull/4569,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4569,"It minimizes the number of utf8len () calls per character.

RSTRING_CHAR_LEN() is only used when pos is given a negative value.
pos is kept in character units, and is not converted between bytes.

The string search algorithm is Boyer-Moore-Horspool algorithm (Quick Search algorithm).
As a side effect, the correct position is returned even if an invalid UTF-8 string is given.
% ./mruby@master -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
50
% ./mruby@improve-index -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
100
% ruby26 -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
100
The other behavior should be the same as the current implementation.","It minimizes the number of utf8len () calls per character.

RSTRING_CHAR_LEN() is only used when pos is given a negative value.
pos is kept in character units, and is not converted between bytes.

The string search algorithm is Boyer-Moore-Horspool algorithm (Quick Search algorithm).
As a side effect, the correct position is returned even if an invalid UTF-8 string is given.
% ./mruby@master -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
50
% ./mruby@improve-index -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
100
% ruby26 -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
100
The other behavior should be the same as the current implementation.",True,{'ROCKET': ['https://github.com/lopopolo']}
mruby/mruby,https://github.com/mruby/mruby,4569,2019-07-11T13:27:45Z,2019-07-11T16:47:51Z,2019-07-13T12:47:40Z,MERGED,True,74,5,2,https://github.com/dearblue,Improve performance `String#index` with UTF-8,2,[],https://github.com/mruby/mruby/pull/4569,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4569#issuecomment-510486451,"It minimizes the number of utf8len () calls per character.

RSTRING_CHAR_LEN() is only used when pos is given a negative value.
pos is kept in character units, and is not converted between bytes.

The string search algorithm is Boyer-Moore-Horspool algorithm (Quick Search algorithm).
As a side effect, the correct position is returned even if an invalid UTF-8 string is given.
% ./mruby@master -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
50
% ./mruby@improve-index -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
100
% ruby26 -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
100
The other behavior should be the same as the current implementation.","Comparison performance vs. master (5420895) and ruby-2.6.3
% for mruby (./mruby@master ./mruby@improve-index ruby26) /usr/bin/time $mruby -e '(""A"" * 300000000 + ""#"").index(""#"")'
        3.20 real         2.84 user         0.36 sys
        2.06 real         1.75 user         0.31 sys
        0.59 real         0.29 user         0.30 sys

% for mruby (./mruby@master ./mruby@improve-index ruby26) /usr/bin/time $mruby -e '(""☆"" * 100000000 + ""#"").index(""#"")'
        1.42 real         1.06 user         0.35 sys
        0.92 real         0.61 user         0.30 sys
        0.63 real         0.29 user         0.33 sys

% for mruby (./mruby@master ./mruby@improve-index ruby26) /usr/bin/time $mruby -e '(""\xd1"" * 300000000 + ""#"").index(""#"")'
        1.71 real         1.37 user         0.33 sys
        1.66 real         1.38 user         0.28 sys
        3.21 real         2.93 user         0.28 sys

% for mruby (./mruby@master ./mruby@improve-index ruby26) /usr/bin/time $mruby -e '(""\xe1"" * 300000000 + ""#"").index(""#"")'
        1.45 real         1.17 user         0.27 sys
        1.65 real         1.36 user         0.29 sys
        3.22 real         2.91 user         0.30 sys

% for mruby (./mruby@master ./mruby@improve-index ruby26) /usr/bin/time $mruby -e '(""\xf1"" * 300000000 + ""#"").index(""#"")'
        1.38 real         1.03 user         0.35 sys
        1.66 real         1.32 user         0.33 sys
        3.22 real         2.91 user         0.31 sys

% for mruby (./mruby@master ./mruby@improve-index ruby26) /usr/bin/time $mruby -e '(""\xff"" * 300000000 + ""#"").index(""#"")'
        3.25 real         2.86 user         0.33 sys
        2.09 real         1.77 user         0.29 sys
        3.35 real         3.00 user         0.34 sys",True,{}
mruby/mruby,https://github.com/mruby/mruby,4569,2019-07-11T13:27:45Z,2019-07-11T16:47:51Z,2019-07-13T12:47:40Z,MERGED,True,74,5,2,https://github.com/dearblue,Improve performance `String#index` with UTF-8,2,[],https://github.com/mruby/mruby/pull/4569,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4569#issuecomment-510850076,"It minimizes the number of utf8len () calls per character.

RSTRING_CHAR_LEN() is only used when pos is given a negative value.
pos is kept in character units, and is not converted between bytes.

The string search algorithm is Boyer-Moore-Horspool algorithm (Quick Search algorithm).
As a side effect, the correct position is returned even if an invalid UTF-8 string is given.
% ./mruby@master -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
50
% ./mruby@improve-index -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
100
% ruby26 -e 'p (""\xd1"" * 100 + ""#"").index(""#"")'
100
The other behavior should be the same as the current implementation.","Sorry, I was causing the heap buffer overflow again. 🙀
I will correct it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4570,2019-07-11T14:24:52Z,2019-07-11T14:58:39Z,2019-11-24T01:37:14Z,CLOSED,False,40,4,1,https://github.com/shuujii,Support `.d` file for some compilers,1,[],https://github.com/mruby/mruby/pull/4570,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4570,"Support .d file for some compilers
.d file styles differ between GCC and Clang include in Android NDK r20,
so dependent files could not be parsed correctly.
Examples of .d file:
GCC 8.2.0
/build/host/src/array.o: \
 /src/array.c \
 /include/mruby/common.h \
 /include/mruby/value.h \
 /include/mruby/common.h \
 /src/value_array.h

Clang 8.0.7 (Android)
/build/host/src/array.o: \
  /src/array.c \
  /include/mruby/common.h \
  /include/mruby/value.h \
  /src/value_array.h

/include/mruby/common.h:

/include/mruby/value.h:

/src/value_array.h:","Support .d file for some compilers
.d file styles differ between GCC and Clang include in Android NDK r20,
so dependent files could not be parsed correctly.
Examples of .d file:
GCC 8.2.0
/build/host/src/array.o: \
 /src/array.c \
 /include/mruby/common.h \
 /include/mruby/value.h \
 /include/mruby/common.h \
 /src/value_array.h

Clang 8.0.7 (Android)
/build/host/src/array.o: \
  /src/array.c \
  /include/mruby/common.h \
  /include/mruby/value.h \
  /src/value_array.h

/include/mruby/common.h:

/include/mruby/value.h:

/src/value_array.h:",True,{}
mruby/mruby,https://github.com/mruby/mruby,4570,2019-07-11T14:24:52Z,2019-07-11T14:58:39Z,2019-11-24T01:37:14Z,CLOSED,False,40,4,1,https://github.com/shuujii,Support `.d` file for some compilers,1,[],https://github.com/mruby/mruby/pull/4570,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4570#issuecomment-510519876,"Support .d file for some compilers
.d file styles differ between GCC and Clang include in Android NDK r20,
so dependent files could not be parsed correctly.
Examples of .d file:
GCC 8.2.0
/build/host/src/array.o: \
 /src/array.c \
 /include/mruby/common.h \
 /include/mruby/value.h \
 /include/mruby/common.h \
 /src/value_array.h

Clang 8.0.7 (Android)
/build/host/src/array.o: \
  /src/array.c \
  /include/mruby/common.h \
  /include/mruby/value.h \
  /src/value_array.h

/include/mruby/common.h:

/include/mruby/value.h:

/src/value_array.h:","Sorry, this is not due to compiler differences. It is because -MP flag is specified in tasks/toolchains/android.rake.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4570,2019-07-11T14:24:52Z,2019-07-11T14:58:39Z,2019-11-24T01:37:14Z,CLOSED,False,40,4,1,https://github.com/shuujii,Support `.d` file for some compilers,1,[],https://github.com/mruby/mruby/pull/4570,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4570#issuecomment-510522227,"Support .d file for some compilers
.d file styles differ between GCC and Clang include in Android NDK r20,
so dependent files could not be parsed correctly.
Examples of .d file:
GCC 8.2.0
/build/host/src/array.o: \
 /src/array.c \
 /include/mruby/common.h \
 /include/mruby/value.h \
 /include/mruby/common.h \
 /src/value_array.h

Clang 8.0.7 (Android)
/build/host/src/array.o: \
  /src/array.c \
  /include/mruby/common.h \
  /include/mruby/value.h \
  /src/value_array.h

/include/mruby/common.h:

/include/mruby/value.h:

/src/value_array.h:",I will re-create PR.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4571,2019-07-11T14:59:25Z,2019-07-12T12:46:36Z,2019-07-15T14:00:46Z,MERGED,True,31,4,1,https://github.com/shuujii,Consider `-MP` flag specified when parsing `.d` file,1,[],https://github.com/mruby/mruby/pull/4571,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4571,-MP flag is used in tasks/toolchains/android.rake.,-MP flag is used in tasks/toolchains/android.rake.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4572,2019-07-12T09:52:46Z,2019-07-12T10:01:59Z,2019-07-15T14:00:48Z,MERGED,True,9,10,1,https://github.com/shuujii,Lazy load `tasks/toolchains/*.rake`,1,[],https://github.com/mruby/mruby/pull/4572,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4572,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4573,2019-07-12T12:37:38Z,2019-07-12T12:46:02Z,2019-07-13T12:47:41Z,MERGED,True,11,13,1,https://github.com/dearblue,Fix heap buffer overflow; fix #4569,1,[],https://github.com/mruby/mruby/pull/4573,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4573,"This patch fixes the heap buffer overflow shown at #4569 (comment).
The performance loss is a few percent.","This patch fixes the heap buffer overflow shown at #4569 (comment).
The performance loss is a few percent.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4573,2019-07-12T12:37:38Z,2019-07-12T12:46:02Z,2019-07-13T12:47:41Z,MERGED,True,11,13,1,https://github.com/dearblue,Fix heap buffer overflow; fix #4569,1,[],https://github.com/mruby/mruby/pull/4573,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4573#issuecomment-510871764,"This patch fixes the heap buffer overflow shown at #4569 (comment).
The performance loss is a few percent.","It is a simple benchmark.
The comparison target is #4569 (comment).
% /usr/bin/time ./build/host/bin/mruby -e '(""A"" * 300000000 + ""#"").index(""#"")'
        2.08 real         1.69 user         0.38 sys
% /usr/bin/time ./build/host/bin/mruby -e '(""☆"" * 100000000 + ""#"").index(""#"")'
        1.06 real         0.65 user         0.41 sys
% /usr/bin/time ./build/host/bin/mruby -e '(""\xd1"" * 300000000 + ""#"").index(""#"")'
        1.72 real         1.38 user         0.33 sys
% /usr/bin/time ./build/host/bin/mruby -e '(""\xe1"" * 300000000 + ""#"").index(""#"")'
        1.72 real         1.38 user         0.33 sys
% /usr/bin/time ./build/host/bin/mruby -e '(""\xf1"" * 300000000 + ""#"").index(""#"")'
        1.76 real         1.35 user         0.40 sys
% /usr/bin/time ./build/host/bin/mruby -e '(""\xff"" * 300000000 + ""#"").index(""#"")'
        2.18 real         1.75 user         0.41 sys",True,{}
mruby/mruby,https://github.com/mruby/mruby,4574,2019-07-13T11:45:58Z,2019-07-13T12:11:46Z,2019-07-15T14:00:46Z,MERGED,True,3,0,1,https://github.com/shuujii,Add `mruby-method` gem to `default.gembox` [ci skip],1,[],https://github.com/mruby/mruby/pull/4574,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4574,I think mruby-method gem is used more than mruby-objectspace gem.,I think mruby-method gem is used more than mruby-objectspace gem.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4575,2019-07-13T14:40:57Z,2019-07-18T09:37:09Z,2019-07-19T14:53:15Z,MERGED,True,63,50,1,https://github.com/dearblue,Use stack memory for small name of attr accessors,1,[],https://github.com/mruby/mruby/pull/4575,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4575,"The approach is the same as #4523.
Also integrated the common parts of mrb_mod_attr_reader() and mrb_mod_attr_writer() functions.","The approach is the same as #4523.
Also integrated the common parts of mrb_mod_attr_reader() and mrb_mod_attr_writer() functions.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4576,2019-07-13T15:38:53Z,2019-07-16T03:12:58Z,2019-07-16T12:26:51Z,MERGED,True,20,0,5,https://github.com/dearblue,Error needed/conflicts configuration,1,[],https://github.com/mruby/mruby/pull/4576,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4576,The purpose is to clarify the error if there is a needed/conflicts configuration at compile time.,The purpose is to clarify the error if there is a needed/conflicts configuration at compile time.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4577,2019-07-14T03:19:45Z,2019-07-14T09:59:41Z,2019-07-16T12:26:51Z,MERGED,True,22,6,2,https://github.com/dearblue, Fix pack/unpack for base64; ref #4556,3,[],https://github.com/mruby/mruby/pull/4577,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4577,"The pack/unpack ""m"" directive should be treated as a length rather than an element count.
And fixes empty array refers.
For example, """".unpack("""") evaluates to [].","The pack/unpack ""m"" directive should be treated as a length rather than an element count.
And fixes empty array refers.
For example, """".unpack("""") evaluates to [].",True,{}
mruby/mruby,https://github.com/mruby/mruby,4578,2019-07-14T10:10:46Z,2019-07-14T20:34:13Z,2019-07-16T12:26:52Z,MERGED,True,2,0,1,https://github.com/dearblue,Improve `utf8len()` performance with UTF-8,1,[],https://github.com/mruby/mruby/pull/4578,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4578,"I revenge #4529 (without permission).

I compared with the file that actually exists.
Acquisition and processing of sample file:

ASCII only HTML - 2000-2FFF (530,693 bytes)
% fetch https://en.wikibooks.org/wiki/Unicode/Character_reference/2000-2FFF

Mixed Japanese UTF-8 HTML - book.utf-8.html (3,100,523 bytes)
% fetch -o- https://www.freebsd.org/doc/ja_JP.eucJP/books/handbook/book.html | nkf -Eu > book.utf-8.html

Almost Japanese UTF-8 TEXT - uchuno_hajimari.utf-8.txt (517,378 bytes)
from https://www.aozora.gr.jp/cards/000226/card1150.html
% fetch -o- https://www.aozora.gr.jp/cards/000226/files/1150_ruby_38564.zip | tar xf - -O uchuno_hajimari.txt | nkf -Su > uchuno_hajimari.utf-8.txt

Japanese UTF-8 HTML - ゲゲゲの鬼太郎の登場キャラクター (1,363,429 bytes)
% fetch https://ja.wikipedia.org/wiki/ゲゲゲの鬼太郎の登場キャラクター

Binary - /boot/kernel/zfs.ko (3,224,408 bytes)
From FreeBSD 12.0-RELEASE-p6 GENERIC amd64

Comparison script
for file in 2000-2FFF book.utf-8.html uchuno_hajimari.utf-8.txt ゲゲゲの鬼太郎の登場キャラクター zfs.ko
do
	echo ""\e[7m[[$file]]\e[m""
	for ruby in ./mruby@master ./mruby@improve-utf8len ruby25
	do
		printf ""%-24s"" $ruby
		/usr/bin/time $ruby -e 'mode = RUBY_ENGINE == ""mruby"" ? ""rb"" : ""rb:utf-8""; src = File.read(ARGV[0], mode: mode); 1000.times { src.size }' ""$file""
	done
done
Run on FreeBSD 12.0-RELEASE-p6 GENERIC amd64
[[2000-2FFF]]
./mruby@master                  2.35 real         2.35 user         0.00 sys
./mruby@improve-utf8len         0.54 real         0.54 user         0.00 sys
ruby25                          0.16 real         0.14 user         0.01 sys
[[book.utf-8.html]]
./mruby@master                 10.60 real        10.56 user         0.00 sys
./mruby@improve-utf8len         4.68 real         4.67 user         0.00 sys
ruby25                          0.59 real         0.57 user         0.01 sys
[[uchuno_hajimari.utf-8.txt]]
./mruby@master                  0.85 real         0.85 user         0.00 sys
./mruby@improve-utf8len         0.81 real         0.80 user         0.00 sys
ruby25                          0.16 real         0.15 user         0.00 sys
[[ゲゲゲの鬼太郎の登場キャラクター]]
./mruby@master                  3.23 real         3.22 user         0.00 sys
./mruby@improve-utf8len         2.18 real         2.17 user         0.00 sys
ruby25                          0.30 real         0.29 user         0.00 sys
[[zfs.ko]]
./mruby@master                 16.99 real        16.91 user         0.01 sys
./mruby@improve-utf8len        12.73 real        12.65 user         0.01 sys
ruby25                         13.62 real        13.55 user         0.01 sys

Run on FreeBSD 12.0-RELEASE r341666 GENERIC arm64
[[2000-2FFF]]
./mruby@master                  5.43 real         5.41 user         0.01 sys
./mruby@improve-utf8len         1.83 real         1.82 user         0.00 sys
ruby25                          0.63 real         0.58 user         0.04 sys
[[book.utf-8.html]]
./mruby@master                 27.06 real        27.03 user         0.03 sys
./mruby@improve-utf8len        15.89 real        15.86 user         0.03 sys
ruby25                          2.70 real         2.66 user         0.03 sys
[[uchuno_hajimari.utf-8.txt]]
./mruby@master                  3.51 real         3.51 user         0.00 sys
./mruby@improve-utf8len         3.36 real         3.34 user         0.01 sys
ruby25                          0.62 real         0.60 user         0.02 sys
[[ゲゲゲの鬼太郎の登場キャラクター]]
./mruby@master                 10.17 real        10.16 user         0.00 sys
./mruby@improve-utf8len         8.43 real         8.42 user         0.00 sys
ruby25                          1.38 real         1.34 user         0.03 sys
[[zfs.ko]]
./mruby@master                 35.55 real        35.52 user         0.03 sys
./mruby@improve-utf8len        23.00 real        22.97 user         0.03 sys
ruby25                         52.15 real        52.10 user         0.05 sys","I revenge #4529 (without permission).

I compared with the file that actually exists.
Acquisition and processing of sample file:

ASCII only HTML - 2000-2FFF (530,693 bytes)
% fetch https://en.wikibooks.org/wiki/Unicode/Character_reference/2000-2FFF

Mixed Japanese UTF-8 HTML - book.utf-8.html (3,100,523 bytes)
% fetch -o- https://www.freebsd.org/doc/ja_JP.eucJP/books/handbook/book.html | nkf -Eu > book.utf-8.html

Almost Japanese UTF-8 TEXT - uchuno_hajimari.utf-8.txt (517,378 bytes)
from https://www.aozora.gr.jp/cards/000226/card1150.html
% fetch -o- https://www.aozora.gr.jp/cards/000226/files/1150_ruby_38564.zip | tar xf - -O uchuno_hajimari.txt | nkf -Su > uchuno_hajimari.utf-8.txt

Japanese UTF-8 HTML - ゲゲゲの鬼太郎の登場キャラクター (1,363,429 bytes)
% fetch https://ja.wikipedia.org/wiki/ゲゲゲの鬼太郎の登場キャラクター

Binary - /boot/kernel/zfs.ko (3,224,408 bytes)
From FreeBSD 12.0-RELEASE-p6 GENERIC amd64

Comparison script
for file in 2000-2FFF book.utf-8.html uchuno_hajimari.utf-8.txt ゲゲゲの鬼太郎の登場キャラクター zfs.ko
do
	echo ""\e[7m[[$file]]\e[m""
	for ruby in ./mruby@master ./mruby@improve-utf8len ruby25
	do
		printf ""%-24s"" $ruby
		/usr/bin/time $ruby -e 'mode = RUBY_ENGINE == ""mruby"" ? ""rb"" : ""rb:utf-8""; src = File.read(ARGV[0], mode: mode); 1000.times { src.size }' ""$file""
	done
done
Run on FreeBSD 12.0-RELEASE-p6 GENERIC amd64
[[2000-2FFF]]
./mruby@master                  2.35 real         2.35 user         0.00 sys
./mruby@improve-utf8len         0.54 real         0.54 user         0.00 sys
ruby25                          0.16 real         0.14 user         0.01 sys
[[book.utf-8.html]]
./mruby@master                 10.60 real        10.56 user         0.00 sys
./mruby@improve-utf8len         4.68 real         4.67 user         0.00 sys
ruby25                          0.59 real         0.57 user         0.01 sys
[[uchuno_hajimari.utf-8.txt]]
./mruby@master                  0.85 real         0.85 user         0.00 sys
./mruby@improve-utf8len         0.81 real         0.80 user         0.00 sys
ruby25                          0.16 real         0.15 user         0.00 sys
[[ゲゲゲの鬼太郎の登場キャラクター]]
./mruby@master                  3.23 real         3.22 user         0.00 sys
./mruby@improve-utf8len         2.18 real         2.17 user         0.00 sys
ruby25                          0.30 real         0.29 user         0.00 sys
[[zfs.ko]]
./mruby@master                 16.99 real        16.91 user         0.01 sys
./mruby@improve-utf8len        12.73 real        12.65 user         0.01 sys
ruby25                         13.62 real        13.55 user         0.01 sys

Run on FreeBSD 12.0-RELEASE r341666 GENERIC arm64
[[2000-2FFF]]
./mruby@master                  5.43 real         5.41 user         0.01 sys
./mruby@improve-utf8len         1.83 real         1.82 user         0.00 sys
ruby25                          0.63 real         0.58 user         0.04 sys
[[book.utf-8.html]]
./mruby@master                 27.06 real        27.03 user         0.03 sys
./mruby@improve-utf8len        15.89 real        15.86 user         0.03 sys
ruby25                          2.70 real         2.66 user         0.03 sys
[[uchuno_hajimari.utf-8.txt]]
./mruby@master                  3.51 real         3.51 user         0.00 sys
./mruby@improve-utf8len         3.36 real         3.34 user         0.01 sys
ruby25                          0.62 real         0.60 user         0.02 sys
[[ゲゲゲの鬼太郎の登場キャラクター]]
./mruby@master                 10.17 real        10.16 user         0.00 sys
./mruby@improve-utf8len         8.43 real         8.42 user         0.00 sys
ruby25                          1.38 real         1.34 user         0.03 sys
[[zfs.ko]]
./mruby@master                 35.55 real        35.52 user         0.03 sys
./mruby@improve-utf8len        23.00 real        22.97 user         0.03 sys
ruby25                         52.15 real        52.10 user         0.05 sys",True,{}
mruby/mruby,https://github.com/mruby/mruby,4579,2019-07-14T10:29:39Z,2019-07-15T21:35:12Z,2019-07-27T09:29:10Z,MERGED,True,15,8,2,https://github.com/shuujii,Keep `MRB_STR_ASCII` flag in some methods of `String`,2,[],https://github.com/mruby/mruby/pull/4579,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4579,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4580,2019-07-15T14:17:38Z,2019-07-15T21:36:48Z,2019-07-27T09:29:12Z,MERGED,True,6,6,4,https://github.com/shuujii,Unify type of line number to `uint16_t`,1,[],https://github.com/mruby/mruby/pull/4580,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4580,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4583,2019-07-16T13:25:03Z,2019-07-16T13:51:56Z,2019-07-27T09:29:12Z,MERGED,True,3,0,1,https://github.com/shuujii,Copy receiver's `MRB_STR_ASCII` flag in some methods of `String`,1,[],https://github.com/mruby/mruby/pull/4583,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4583,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4584,2019-07-17T10:16:05Z,2019-07-17T11:42:26Z,2019-07-27T09:29:09Z,MERGED,True,20,12,2,https://github.com/shuujii,Allow `mruby-range-ext` to work with `MRB_WITHOUT_FLOAT`; ref 2add8641,1,[],https://github.com/mruby/mruby/pull/4584,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4584,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4585,2019-07-17T10:34:44Z,2019-07-17T13:34:29Z,2019-07-27T09:29:10Z,MERGED,True,0,1,1,https://github.com/shuujii,Fix `(fixnum_value ... float_value).min` with `mruby-range-ext`,2,[],https://github.com/mruby/mruby/pull/4585,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4585,"Before this patch:
$ bin/mruby -e 'p (2...4.0).min'  #=> TypeError

After this patch (same as CRuby and without mruby-range-ext):
$ bin/mruby -e 'p (2...4.0).min'  #=> 2","Before this patch:
$ bin/mruby -e 'p (2...4.0).min'  #=> TypeError

After this patch (same as CRuby and without mruby-range-ext):
$ bin/mruby -e 'p (2...4.0).min'  #=> 2",True,{}
mruby/mruby,https://github.com/mruby/mruby,4586,2019-07-17T11:10:11Z,2019-07-17T13:29:36Z,2019-07-27T09:29:11Z,MERGED,True,1,1,1,https://github.com/shuujii,Revert #4300,1,[],https://github.com/mruby/mruby/pull/4586,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4586,"Originally, it was not necessary to change. I made mistake.","Originally, it was not necessary to change. I made mistake.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4587,2019-07-17T11:23:00Z,2019-07-17T13:35:17Z,2019-07-27T09:29:10Z,MERGED,True,15,32,1,https://github.com/shuujii,Fix `String#[]` test,1,[],https://github.com/mruby/mruby/pull/4587,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4587,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4588,2019-07-18T09:19:56Z,2019-07-18T09:36:33Z,2019-07-27T09:29:10Z,MERGED,True,5,3,1,https://github.com/shuujii,Fix `String#*` test with `MRB_WITHOUT_FLOAT`,1,[],https://github.com/mruby/mruby/pull/4588,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4588,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4589,2019-07-19T12:49:41Z,2019-07-19T23:15:03Z,2019-07-27T09:29:11Z,MERGED,True,6,6,2,https://github.com/shuujii,Refine `String#chr` test and separate `Fixnum#chr` test,1,[],https://github.com/mruby/mruby/pull/4589,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4589,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4590,2019-07-20T13:53:26Z,2019-07-22T12:38:57Z,2019-07-27T09:29:09Z,MERGED,True,32,1,3,https://github.com/shuujii,Fix `Module#dup` to frozen module,1,[],https://github.com/mruby/mruby/pull/4590,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4590,"Before this patch:
$ bin/mruby -e 'p Module.new.freeze.dup.frozen?'  #=> true

After this patch (same as Ruby):
$ bin/mruby -e 'p Module.new.freeze.dup.frozen?'  #=> false","Before this patch:
$ bin/mruby -e 'p Module.new.freeze.dup.frozen?'  #=> true

After this patch (same as Ruby):
$ bin/mruby -e 'p Module.new.freeze.dup.frozen?'  #=> false",True,{}
mruby/mruby,https://github.com/mruby/mruby,4591,2019-07-21T14:20:27Z,2019-07-22T12:40:03Z,2019-07-27T09:29:10Z,MERGED,True,9,42,5,https://github.com/shuujii,Integrate `Integral#chr` (`Fixnum#chr`) to `mruby-string-ext`,1,[],https://github.com/mruby/mruby/pull/4591,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4591,"Because they're defined in both mruby-string-ext and mruby-numeric-ext
(they seem more natural to define in N, but mruby-string-ext depends on
Integral#chr).","Because they're defined in both mruby-string-ext and mruby-numeric-ext
(they seem more natural to define in N, but mruby-string-ext depends on
Integral#chr).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4592,2019-07-22T11:06:16Z,2019-07-22T12:38:09Z,2019-07-27T09:29:12Z,MERGED,True,8,1,1,https://github.com/shuujii,Set `MRB_STR_ASCII` flag in `String#inspect`,1,[],https://github.com/mruby/mruby/pull/4592,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4592,"String#inspect can set MRB_STR_ASCII flag to receiver and return value
because it checks character byte length.","String#inspect can set MRB_STR_ASCII flag to receiver and return value
because it checks character byte length.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4593,2019-07-23T11:31:12Z,2019-07-23T14:36:51Z,2019-07-27T09:29:09Z,MERGED,True,156,45,4,https://github.com/shuujii,Add encoding argument to `Integral#chr`,1,[],https://github.com/mruby/mruby/pull/4593,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4593,"Currently, Integral#chr in mruby changes behavior by MRB_UTF8_STRING
setting.
before this patch:
$ bin/mruby -e 'p 171.chr'  #=> ""\xab""  (`MRB_UTF8_STRING` is disabled)
$ bin/mruby -e 'p 171.chr'  #=> ""«""     (`MRB_UTF8_STRING` is enabled)

This behavior is incompatible with Ruby, and a little inconvenient because
it can't be interpreted as ASCII-8BIT with MRB_UTF8_STRING, I think.
So add encoding argument according to Ruby.
after this patch:
$ bin/mruby -e 'p 171.chr'                #=> ""\xab""
$ bin/mruby -e 'p 171.chr(""ASCII-8BIT"")'  #=> ""\xab""
$ bin/mruby -e 'p 171.chr(""UTF-8"")'       #=> ""«""

Allow only String for encoding because mruby doesn't have Encoding
class, and ""ASCII-8BIT"" (""BINARY"") and ""UTF-8"" (only with
MRB_UTF8_STRING) are valid values (default is ""ASCII-8BIT"").","Currently, Integral#chr in mruby changes behavior by MRB_UTF8_STRING
setting.
before this patch:
$ bin/mruby -e 'p 171.chr'  #=> ""\xab""  (`MRB_UTF8_STRING` is disabled)
$ bin/mruby -e 'p 171.chr'  #=> ""«""     (`MRB_UTF8_STRING` is enabled)

This behavior is incompatible with Ruby, and a little inconvenient because
it can't be interpreted as ASCII-8BIT with MRB_UTF8_STRING, I think.
So add encoding argument according to Ruby.
after this patch:
$ bin/mruby -e 'p 171.chr'                #=> ""\xab""
$ bin/mruby -e 'p 171.chr(""ASCII-8BIT"")'  #=> ""\xab""
$ bin/mruby -e 'p 171.chr(""UTF-8"")'       #=> ""«""

Allow only String for encoding because mruby doesn't have Encoding
class, and ""ASCII-8BIT"" (""BINARY"") and ""UTF-8"" (only with
MRB_UTF8_STRING) are valid values (default is ""ASCII-8BIT"").",True,{}
mruby/mruby,https://github.com/mruby/mruby,4594,2019-07-24T11:24:00Z,2019-07-27T04:09:35Z,2019-07-27T09:29:11Z,MERGED,True,19,7,4,https://github.com/shuujii,Move `NilClass#to_h` to `mruby-object-ext` from `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4594,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4594,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4595,2019-07-25T13:40:28Z,2019-07-25T15:04:53Z,2019-07-27T09:29:11Z,MERGED,True,26,20,1,https://github.com/shuujii,Refine `Array#(permutation|combination) test`,1,[],https://github.com/mruby/mruby/pull/4595,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4595,"No guarantees about the order in which the permutations/combinations
are yielded.


Drop dependency on Enumerator.","No guarantees about the order in which the permutations/combinations
are yielded.


Drop dependency on Enumerator.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4597,2019-07-26T09:51:13Z,2019-07-27T05:01:38Z,2019-07-27T09:29:09Z,MERGED,True,2,3,2,https://github.com/shuujii,Drop dependency from `mruby-array-ext` to `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4597,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4597,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4597,2019-07-26T09:51:13Z,2019-07-27T05:01:38Z,2019-07-27T09:29:09Z,MERGED,True,2,3,2,https://github.com/shuujii,Drop dependency from `mruby-array-ext` to `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4597,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4597#issuecomment-515464180,,Is this pull-request combine two changes in one?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4597,2019-07-26T09:51:13Z,2019-07-27T05:01:38Z,2019-07-27T09:29:09Z,MERGED,True,2,3,2,https://github.com/shuujii,Drop dependency from `mruby-array-ext` to `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4597,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4597#issuecomment-515637756,,"Dependency on mruby-enumerator dropped at #4595. However, dependency on mruby-enum-ext which mruby-enumerator depends on remains, so this PR drop it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4597,2019-07-26T09:51:13Z,2019-07-27T05:01:38Z,2019-07-27T09:29:09Z,MERGED,True,2,3,2,https://github.com/shuujii,Drop dependency from `mruby-array-ext` to `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4597,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4597#issuecomment-515647832,,"You removed test dependency from mruby-array-ext and it's OK.
You replaced row.count to row.size in mrblib/array.rb which does not seem to related to test dependency.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4597,2019-07-26T09:51:13Z,2019-07-27T05:01:38Z,2019-07-27T09:29:09Z,MERGED,True,2,3,2,https://github.com/shuujii,Drop dependency from `mruby-array-ext` to `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4597,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/4597#issuecomment-515650255,,"It is not test code but main code that depends on mruby-enum-ext (Array#count is defined in mruby-enum-ext).
It just works accidentally when enable_test is specified because there is no distinction between test dependencies and normal dependencies in current implementation.
Example
$ MRUBY_CONFIG=<(echo 'MRuby::Build.new{toolchain :gcc; gem core:""mruby-bin-mruby""; gem core:""mruby-array-ext""}') ./minirake
$ bin/mruby -e 'p [[1,2]].transpose'  #=> NoMethodError: undefined method 'count'",True,{}
mruby/mruby,https://github.com/mruby/mruby,4597,2019-07-26T09:51:13Z,2019-07-27T05:01:38Z,2019-07-27T09:29:09Z,MERGED,True,2,3,2,https://github.com/shuujii,Drop dependency from `mruby-array-ext` to `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4597,https://github.com/matz,6,https://github.com/mruby/mruby/pull/4597#issuecomment-515652539,,I understand.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4598,2019-07-27T05:59:00Z,2019-07-27T06:05:16Z,2019-08-03T01:37:52Z,MERGED,True,11,2,1,https://github.com/dearblue,Fix mruby-time with `MRB_WITHOUT_FLOAT`; ref d74355061,1,[],https://github.com/mruby/mruby/pull/4598,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4598,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4599,2019-07-27T11:55:22Z,2019-07-27T12:38:21Z,2019-08-21T03:45:00Z,MERGED,True,21,8,2,https://github.com/shuujii,Drop dependency from `mruby-enum-chain` to `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4599,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4599,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4600,2019-07-27T12:53:53Z,2019-07-28T01:38:08Z,2019-08-03T01:37:53Z,MERGED,True,112,51,2,https://github.com/dearblue,Fix the lack of precision for `Time`; ref d74355061,1,[],https://github.com/mruby/mruby/pull/4600,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4600,"This patch fixes the lack of precision for Time.
ref: d743550#commitcomment-34467316


Time.local and Time.utc are able to use with MRB_INT16 + MRB_WITHOUT_FLOAT.
% ./build/host-MRB_INT16+MRB_WITHOUT_FLOAT/bin/mruby -e 'p Time.local(2345, 6, 7, 8, 9, 10)'
2345-06-07 08:09:10 +0900


time_t is converted directly from the Ruby object.
% ./build/host-MRB_INT32+MRB_USE_FLOAT/bin/mruby -e 'p Time.at 1564228479'
2019-07-27 20:54:39 +0900


time + sec and time - sec are not affected by the precision of mrb_float.
% ./build/host-MRB_INT16+MRB_USE_FLOAT/bin/mruby -e 't = Time.now; (-2..2).each { |i| p [t + i, t - i] }'
[2019-07-27 20:33:39 +0900, 2019-07-27 20:33:43 +0900]
[2019-07-27 20:33:40 +0900, 2019-07-27 20:33:42 +0900]
[2019-07-27 20:33:41 +0900, 2019-07-27 20:33:41 +0900]
[2019-07-27 20:33:42 +0900, 2019-07-27 20:33:40 +0900]
[2019-07-27 20:33:43 +0900, 2019-07-27 20:33:39 +0900]
Similarly, calculations are possible with MRB_INT16 + MRB_WITHOUT_FLOAT.
% ./build/host-MRB_INT16+MRB_WITHOUT_FLOAT/bin/mruby -e 't = Time.now; (-2..2).each { |i| p [t + i, t - i] }'
[2019-07-27 20:33:23 +0900, 2019-07-27 20:33:27 +0900]
[2019-07-27 20:33:24 +0900, 2019-07-27 20:33:26 +0900]
[2019-07-27 20:33:25 +0900, 2019-07-27 20:33:25 +0900]
[2019-07-27 20:33:26 +0900, 2019-07-27 20:33:24 +0900]
[2019-07-27 20:33:27 +0900, 2019-07-27 20:33:23 +0900]


The usec argument of Time.at gets not only Fixnum but also Float as an object.
This is because it assumes that MRB_INT16 is defined.
If MRB_WITHOUT_FLOAT is also defined, let's give it up 🎉.


The tests on this patch for precisions are think redundant and no additional tests are included.","This patch fixes the lack of precision for Time.
ref: d743550#commitcomment-34467316


Time.local and Time.utc are able to use with MRB_INT16 + MRB_WITHOUT_FLOAT.
% ./build/host-MRB_INT16+MRB_WITHOUT_FLOAT/bin/mruby -e 'p Time.local(2345, 6, 7, 8, 9, 10)'
2345-06-07 08:09:10 +0900


time_t is converted directly from the Ruby object.
% ./build/host-MRB_INT32+MRB_USE_FLOAT/bin/mruby -e 'p Time.at 1564228479'
2019-07-27 20:54:39 +0900


time + sec and time - sec are not affected by the precision of mrb_float.
% ./build/host-MRB_INT16+MRB_USE_FLOAT/bin/mruby -e 't = Time.now; (-2..2).each { |i| p [t + i, t - i] }'
[2019-07-27 20:33:39 +0900, 2019-07-27 20:33:43 +0900]
[2019-07-27 20:33:40 +0900, 2019-07-27 20:33:42 +0900]
[2019-07-27 20:33:41 +0900, 2019-07-27 20:33:41 +0900]
[2019-07-27 20:33:42 +0900, 2019-07-27 20:33:40 +0900]
[2019-07-27 20:33:43 +0900, 2019-07-27 20:33:39 +0900]
Similarly, calculations are possible with MRB_INT16 + MRB_WITHOUT_FLOAT.
% ./build/host-MRB_INT16+MRB_WITHOUT_FLOAT/bin/mruby -e 't = Time.now; (-2..2).each { |i| p [t + i, t - i] }'
[2019-07-27 20:33:23 +0900, 2019-07-27 20:33:27 +0900]
[2019-07-27 20:33:24 +0900, 2019-07-27 20:33:26 +0900]
[2019-07-27 20:33:25 +0900, 2019-07-27 20:33:25 +0900]
[2019-07-27 20:33:26 +0900, 2019-07-27 20:33:24 +0900]
[2019-07-27 20:33:27 +0900, 2019-07-27 20:33:23 +0900]


The usec argument of Time.at gets not only Fixnum but also Float as an object.
This is because it assumes that MRB_INT16 is defined.
If MRB_WITHOUT_FLOAT is also defined, let's give it up 🎉.


The tests on this patch for precisions are think redundant and no additional tests are included.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4601,2019-07-28T04:41:20Z,2019-07-28T05:48:16Z,2019-08-21T03:45:00Z,MERGED,True,13,3,2,https://github.com/shuujii,Drop dependency from `mruby-enumerator` to `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4601,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4601,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4601,2019-07-28T04:41:20Z,2019-07-28T05:48:16Z,2019-08-21T03:45:00Z,MERGED,True,13,3,2,https://github.com/shuujii,Drop dependency from `mruby-enumerator` to `mruby-enum-ext`,1,[],https://github.com/mruby/mruby/pull/4601,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4601#issuecomment-515738975,,"The previous mrbgems with only mruby-enumerator without mruby-enum-ext as a dependency may not work.
I agree to increase independence.
However, users should be widely informed on the next release.
Actually, mruby-cfunc uses #each_slice method, but CFunc::Struct#define does not work because mruby-enum-ext is not specified.
% ./build/host+mruby-cfunc/bin/mruby -e '
	class Foo < CFunc::Struct
	  define CFunc::Int, :bar,
	         CFunc::Double, :quux
	end'
trace (most recent call last):
        [0] -e:2
        [1] -e:4
        [2] build/mrbgems/mruby-cfunc/mrblib/cfunc_rb.rb:426:in define
build/mrbgems/mruby-cfunc/mrblib/cfunc_rb.rb:426: undefined method 'each_slice' (NoMethodError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4602,2019-07-28T13:47:21Z,2019-07-28T14:44:12Z,2019-08-21T03:45:04Z,MERGED,True,0,10,1,https://github.com/shuujii,Remove `Enumerator::Chain#initialize_copy`,1,[],https://github.com/mruby/mruby/pull/4602,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4602,"I think Enumerator::Chain#initialize_copy is unnecessary because CRuby
doesn't clone elements.
FYI, the remaining each_with_object in Enumerator::Chain#initialize_copy
was correction omission in #4599.","I think Enumerator::Chain#initialize_copy is unnecessary because CRuby
doesn't clone elements.
FYI, the remaining each_with_object in Enumerator::Chain#initialize_copy
was correction omission in #4599.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4603,2019-07-28T14:05:34Z,2019-07-28T14:43:32Z,2019-08-21T03:44:59Z,MERGED,True,20,5,2,https://github.com/shuujii,Define `#+` to `Enumerator` and `Enumerator#Chain` instead of `Enumerable`,1,[],https://github.com/mruby/mruby/pull/4603,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4603,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4604,2019-07-29T09:09:16Z,2019-07-29T09:43:17Z,2019-07-31T20:44:12Z,MERGED,True,9,1,1,https://github.com/kou,Fix Time#to_s encoding on Windows,1,[],https://github.com/mruby/mruby/pull/4604,https://github.com/kou,1,https://github.com/mruby/mruby/pull/4604,"strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().","strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().",True,{}
mruby/mruby,https://github.com/mruby/mruby,4604,2019-07-29T09:09:16Z,2019-07-29T09:43:17Z,2019-07-31T20:44:12Z,MERGED,True,9,1,1,https://github.com/kou,Fix Time#to_s encoding on Windows,1,[],https://github.com/mruby/mruby/pull/4604,https://github.com/kou,2,https://github.com/mruby/mruby/pull/4604#issuecomment-515911714,"strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().","""東京 (標準時)"" in CP932 is returned for ""%z"" on Japanese Windows.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4604,2019-07-29T09:09:16Z,2019-07-29T09:43:17Z,2019-07-31T20:44:12Z,MERGED,True,9,1,1,https://github.com/kou,Fix Time#to_s encoding on Windows,1,[],https://github.com/mruby/mruby/pull/4604,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4604#issuecomment-516259199,"strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().","@kou Thank you for your report.
I've noticed time zone offset seems to be ""Coordinated Universal Time"" etc., on MSVC 2013 in AppVeyor. Is it not digits even with newer MSVC?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4604,2019-07-29T09:09:16Z,2019-07-29T09:43:17Z,2019-07-31T20:44:12Z,MERGED,True,9,1,1,https://github.com/kou,Fix Time#to_s encoding on Windows,1,[],https://github.com/mruby/mruby/pull/4604,https://github.com/kou,4,https://github.com/mruby/mruby/pull/4604#issuecomment-516265290,"strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().","I don't know it.
I tested this with MinGW build.
How did you confirm it in AppVeyor? If you can confirm it in AppVeyor, you can confirm it with newer MSVC in AppVeyor.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4604,2019-07-29T09:09:16Z,2019-07-29T09:43:17Z,2019-07-31T20:44:12Z,MERGED,True,9,1,1,https://github.com/kou,Fix Time#to_s encoding on Windows,1,[],https://github.com/mruby/mruby/pull/4604,https://github.com/kou,5,https://github.com/mruby/mruby/pull/4604#issuecomment-516266236,"strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().","Ah, you may be able to confirm it with https://ci.appveyor.com/api/buildjobs/3ytqapsla21aei4e/artifacts/groonga-9.0.5-e8277e6-x64-vs2017.zip .
PS> bin\groonga.exe
> plugin_register ruby/eval
> ruby_eval 'Time.now.to_s'",True,{}
mruby/mruby,https://github.com/mruby/mruby,4604,2019-07-29T09:09:16Z,2019-07-29T09:43:17Z,2019-07-31T20:44:12Z,MERGED,True,9,1,1,https://github.com/kou,Fix Time#to_s encoding on Windows,1,[],https://github.com/mruby/mruby/pull/4604,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/4604#issuecomment-516281350,"strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().","Time zone offset seems to be digits on VS 2015 and VS 2017 in AppVeyor when I checked before. However, I wondered if this issue happens on newer VS because your report points to the VS 2019 documentation.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4604,2019-07-29T09:09:16Z,2019-07-29T09:43:17Z,2019-07-31T20:44:12Z,MERGED,True,9,1,1,https://github.com/kou,Fix Time#to_s encoding on Windows,1,[],https://github.com/mruby/mruby/pull/4604,https://github.com/kou,7,https://github.com/mruby/mruby/pull/4604#issuecomment-516608254,"strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().","I misunderstood what you said. Sorry.
Visual Studio 2013 returns ""東京 (標準時)"". Visual Studio 2015 or later return ""+09:00"".",True,{}
mruby/mruby,https://github.com/mruby/mruby,4604,2019-07-29T09:09:16Z,2019-07-29T09:43:17Z,2019-07-31T20:44:12Z,MERGED,True,9,1,1,https://github.com/kou,Fix Time#to_s encoding on Windows,1,[],https://github.com/mruby/mruby/pull/4604,https://github.com/shuujii,8,https://github.com/mruby/mruby/pull/4604#issuecomment-516811763,"strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().","Thank you for your information. I tried to use own implementation to calculate UTC offset on Visual Studio 2015 or earlier or MinGW via #4607.
BTW, UTC offset becomes like +0900 on Visual Studio 2015, 2017 and 2019 in AppVeyor. Are there environments where it becomes like +09:00 (includes :)?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4604,2019-07-29T09:09:16Z,2019-07-29T09:43:17Z,2019-07-31T20:44:12Z,MERGED,True,9,1,1,https://github.com/kou,Fix Time#to_s encoding on Windows,1,[],https://github.com/mruby/mruby/pull/4604,https://github.com/kou,9,https://github.com/mruby/mruby/pull/4604#issuecomment-517013677,"strftime() on Windows returns locale encoding time zone for ""%z"" even
if MSDN says ""%z"" is ""The offset from UTC in ISO 8601 format; no
characters if time zone is unknown"" in MSDN:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/strftime-wcsftime-strftime-l-wcsftime-l?view=vs-2019
So we need to convert encoding of string from strftime().","Sorry. "":"" isn't included.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4605,2019-07-29T13:19:13Z,2019-07-29T13:37:14Z,2019-08-21T03:45:01Z,MERGED,True,1,1,1,https://github.com/shuujii,"Fix ""Warn if assertion is missing inside `assert`""; ref ff43b2b9",1,[],https://github.com/mruby/mruby/pull/4605,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4605,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4606,2019-07-30T04:10:18Z,2019-07-30T05:41:10Z,2019-08-21T03:45:03Z,MERGED,True,11,11,7,https://github.com/shuujii,Refine message to `skip` in nested `assert`,1,[],https://github.com/mruby/mruby/pull/4606,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4606,"I think ""Info"" is used only to skip (@dearblue right?), so change to ""Skip"".
Changed the default value of assert and specify the argument explicitly at the caller of assert because it is unnatural ""Assertion failed"" is output even though the assertion doesn't fail.

Example:
def assert_foo(exp, act)
  assert do
    assert_equal exp[0], act[0]
    assert_equal exp[1], act[1]
  end
end

def assert_bar(exp, act)
  assert do
    skip
  end
end

def assert_baz(exp, act)
  assert do
    assert_equal exp, act
    assert_bar exp, act
  end
end

assert 'test#skip_in_nested_assert' do
  assert_baz 1, 1
end
Before this patch:
?..
Info: test#skip_in_nested_assert (core)
 - Assertion[1]
    Info: Assertion failed (core)
     - Assertion[1-2]
        Skip: Assertion failed (core)
  Total: 3
     OK: 2
     KO: 0
  Crash: 0
Warning: 0
   Skip: 1

After this patch:
???
Skip: test#skip_in_nested_assert (core)
 - Assertion[1]
    Skip: assert (core)
     - Assertion[1-2]
        Skip: assert (core)
  Total: 3
     OK: 0
     KO: 0
  Crash: 0
Warning: 0
   Skip: 3","I think ""Info"" is used only to skip (@dearblue right?), so change to ""Skip"".
Changed the default value of assert and specify the argument explicitly at the caller of assert because it is unnatural ""Assertion failed"" is output even though the assertion doesn't fail.

Example:
def assert_foo(exp, act)
  assert do
    assert_equal exp[0], act[0]
    assert_equal exp[1], act[1]
  end
end

def assert_bar(exp, act)
  assert do
    skip
  end
end

def assert_baz(exp, act)
  assert do
    assert_equal exp, act
    assert_bar exp, act
  end
end

assert 'test#skip_in_nested_assert' do
  assert_baz 1, 1
end
Before this patch:
?..
Info: test#skip_in_nested_assert (core)
 - Assertion[1]
    Info: Assertion failed (core)
     - Assertion[1-2]
        Skip: Assertion failed (core)
  Total: 3
     OK: 2
     KO: 0
  Crash: 0
Warning: 0
   Skip: 1

After this patch:
???
Skip: test#skip_in_nested_assert (core)
 - Assertion[1]
    Skip: assert (core)
     - Assertion[1-2]
        Skip: assert (core)
  Total: 3
     OK: 0
     KO: 0
  Crash: 0
Warning: 0
   Skip: 3",True,{}
mruby/mruby,https://github.com/mruby/mruby,4606,2019-07-30T04:10:18Z,2019-07-30T05:41:10Z,2019-08-21T03:45:03Z,MERGED,True,11,11,7,https://github.com/shuujii,Refine message to `skip` in nested `assert`,1,[],https://github.com/mruby/mruby/pull/4606,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4606#issuecomment-516401178,"I think ""Info"" is used only to skip (@dearblue right?), so change to ""Skip"".
Changed the default value of assert and specify the argument explicitly at the caller of assert because it is unnatural ""Assertion failed"" is output even though the assertion doesn't fail.

Example:
def assert_foo(exp, act)
  assert do
    assert_equal exp[0], act[0]
    assert_equal exp[1], act[1]
  end
end

def assert_bar(exp, act)
  assert do
    skip
  end
end

def assert_baz(exp, act)
  assert do
    assert_equal exp, act
    assert_bar exp, act
  end
end

assert 'test#skip_in_nested_assert' do
  assert_baz 1, 1
end
Before this patch:
?..
Info: test#skip_in_nested_assert (core)
 - Assertion[1]
    Info: Assertion failed (core)
     - Assertion[1-2]
        Skip: Assertion failed (core)
  Total: 3
     OK: 2
     KO: 0
  Crash: 0
Warning: 0
   Skip: 1

After this patch:
???
Skip: test#skip_in_nested_assert (core)
 - Assertion[1]
    Skip: assert (core)
     - Assertion[1-2]
        Skip: assert (core)
  Total: 3
     OK: 0
     KO: 0
  Crash: 0
Warning: 0
   Skip: 3","@shuujii,

I think ""Info"" is used only to skip (@dearblue right?),

Yes, ""Info:"" is used only for ""Skip:"" (and ""Info:"").
The reason is that even if the child assert skips, the parent assert continues without being skipped on the fly.
I needed to mention this in #4540.
If the parent assert should also be skipped on the fly, changes are welcome.

Changed the default value of assert and specify the argument explicitly at the caller of assert because it is unnatural ""Assertion failed"" is output even though the assertion doesn't fail.

It is not desirable to be ""Skip: Assertion failed"", and I welcome the correction.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4607,2019-07-31T11:35:23Z,2019-07-31T13:07:32Z,2019-08-21T03:45:01Z,MERGED,True,36,10,2,https://github.com/shuujii,Fix UTC offset representation in `Time#to_s` on some environments; ref #4604,1,[],https://github.com/mruby/mruby/pull/4607,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4607,"Use own implementation to calculate UTC offset on Visual Studio 2015 or
earlier or MinGW because strftime(""%z"") on these environments does not
conform C99.","Use own implementation to calculate UTC offset on Visual Studio 2015 or
earlier or MinGW because strftime(""%z"") on these environments does not
conform C99.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4608,2019-08-01T04:33:35Z,2019-08-01T13:10:54Z,2019-08-21T03:44:59Z,MERGED,True,404,42,5,https://github.com/shuujii,Add new specifiers/modifiers to format string of `mrb_vfromat()`,1,[],https://github.com/mruby/mruby/pull/4608,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4608,"Format sequence syntax:
%[modifier]specifier

Modifiers:
----------+------------------------------------------------------------
Modifier  | Meaning
----------+------------------------------------------------------------
    !     | Convert to string by corresponding `inspect` instead of
          | corresponding `to_s`.
----------+------------------------------------------------------------

Specifiers:
----------+----------------+--------------------------------------------
Specifier | Argument Type  | Note
----------+----------------+--------------------------------------------
    c     | char           |
   d,i    | mrb_int        |
    f     | mrb_float      |
    l     | char*, mrb_int | Arguments are string and length.
    n     | mrb_sym        |
    s     | char*          | Argument is NUL terminated string.
    t     | mrb_value      | Convert to type (class) of object.
   v,S    | mrb_value      |
    C     | struct RClass* |
    T     | mrb_value      | Convert to real type (class) of object.
    Y     | mrb_value      | Same as `!v` if argument is `true`, `false`
          |                | or `nil`, otherwise same as `T`.
    %     | -              | Convert to percent sign itself (no argument
          |                | taken).
----------+----------------+--------------------------------------------

This change will increase the binary size, but replacing all format strings
with new specifiers/modifiers will decrease the size because it reduces
inline expansion of mrb_obj_value(), etc. at the caller.

I will replace all format strings if this PR is accepted.","Format sequence syntax:
%[modifier]specifier

Modifiers:
----------+------------------------------------------------------------
Modifier  | Meaning
----------+------------------------------------------------------------
    !     | Convert to string by corresponding `inspect` instead of
          | corresponding `to_s`.
----------+------------------------------------------------------------

Specifiers:
----------+----------------+--------------------------------------------
Specifier | Argument Type  | Note
----------+----------------+--------------------------------------------
    c     | char           |
   d,i    | mrb_int        |
    f     | mrb_float      |
    l     | char*, mrb_int | Arguments are string and length.
    n     | mrb_sym        |
    s     | char*          | Argument is NUL terminated string.
    t     | mrb_value      | Convert to type (class) of object.
   v,S    | mrb_value      |
    C     | struct RClass* |
    T     | mrb_value      | Convert to real type (class) of object.
    Y     | mrb_value      | Same as `!v` if argument is `true`, `false`
          |                | or `nil`, otherwise same as `T`.
    %     | -              | Convert to percent sign itself (no argument
          |                | taken).
----------+----------------+--------------------------------------------

This change will increase the binary size, but replacing all format strings
with new specifiers/modifiers will decrease the size because it reduces
inline expansion of mrb_obj_value(), etc. at the caller.

I will replace all format strings if this PR is accepted.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4609,2019-08-02T10:30:39Z,2019-08-02T11:38:41Z,2019-08-21T03:44:59Z,MERGED,True,73,67,3,https://github.com/shuujii,Change the `mrb_vformat` specifier `%d` for `int`,1,[],https://github.com/mruby/mruby/pull/4609,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4609,"It potentially breaks, for example, in the case of mrb_int is 64-bit
and more smaller type is passed by %d. In fact, the problem could
become apparent when I used %d to backtrace_location::lineno in
src/backtrace.c:mrb_unpack_backtrace() on AppVeyor.
Therefore, change %d for int (not mrb_int) so that it can be
used mostly without casting.","It potentially breaks, for example, in the case of mrb_int is 64-bit
and more smaller type is passed by %d. In fact, the problem could
become apparent when I used %d to backtrace_location::lineno in
src/backtrace.c:mrb_unpack_backtrace() on AppVeyor.
Therefore, change %d for int (not mrb_int) so that it can be
used mostly without casting.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4610,2019-08-03T01:56:18Z,2019-08-03T06:31:36Z,2019-08-05T10:02:08Z,MERGED,True,15,27,1,https://github.com/dearblue,Suppress compiler warnings for mruby-time; fix #4600,1,[],https://github.com/mruby/mruby/pull/4610,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4610,"Warnings:

If MRB_TIME_T_UINT is defined, the compiler issues a warning with an integer comparison of different signs.
It is mentioned that the usec variable passed to the mrb_to_time_t() function may not be initialized","Warnings:

If MRB_TIME_T_UINT is defined, the compiler issues a warning with an integer comparison of different signs.
It is mentioned that the usec variable passed to the mrb_to_time_t() function may not be initialized",True,{}
mruby/mruby,https://github.com/mruby/mruby,4611,2019-08-03T03:01:59Z,2019-08-03T06:33:35Z,2019-08-21T03:45:02Z,MERGED,True,13,4,3,https://github.com/shuujii,"Fix `mrb_vformat(""%f"")` with `MRB_USE_FLOAT`",1,[],https://github.com/mruby/mruby/pull/4611,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4611,"It potentially not work when mrb_float is float because float variable
in variable length arguments is promoted to double.
Also I fixed build with MRB_WITHOUT_FLOAT.","It potentially not work when mrb_float is float because float variable
in variable length arguments is promoted to double.
Also I fixed build with MRB_WITHOUT_FLOAT.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4612,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.","Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4612#issuecomment-517899726,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.","Is there any clear intention to provide constants that even CRuby does not provide?
Float::EVAL_METHOD  for example?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4612#issuecomment-517902994,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.","There is no clear intention.
I just added it with momentum.
Should I delete the constants from Float class?
Or should I also delete related C macros?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4612#issuecomment-517911198,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.","We should probably remove the constants. Macros do not consume any resource at run-time, so we don't have to remove them. But there's no reason to keep unused macros in the source code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/4612#issuecomment-517938827,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.","I did rebase and force push.

added method:
Float.rounds
added constants:
Float::RADIX
Float::MANT_DIG
Float::EPSILON
Float::DIG
Float::MIN_EXP
Float::MIN
Float::MIN_10_EXP
Float::MAX_EXP
Float::MAX
Float::MAX_10_EXP",True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/matz,6,https://github.com/mruby/mruby/pull/4612#issuecomment-517981507,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.",Thank you.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/dearblue,7,https://github.com/mruby/mruby/pull/4612#issuecomment-517988823,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.","FLT_ROUNDS can be changed at runtime by the fesetround() function.
Since I do not want to define as a constant by myself, I deleted it from the patch.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/matz,8,https://github.com/mruby/mruby/pull/4612#issuecomment-518041363,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.",That means we should fix CRuby first.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/dearblue,9,https://github.com/mruby/mruby/pull/4612#issuecomment-518170869,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.",Thank you for review and merge this patch.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4612,2019-08-03T03:10:10Z,2019-08-04T22:29:26Z,2019-08-05T14:11:15Z,MERGED,True,44,0,2,https://github.com/dearblue,Add constants for floating point number,1,[],https://github.com/mruby/mruby/pull/4612,https://github.com/matz,10,https://github.com/mruby/mruby/pull/4612#issuecomment-518250622,"Added macros available from C to include/mruby/numeric.h.
Added the constants available from Ruby space to mruby-numeric-ext.
Since MRB_FLT_ROUNDS can change its behavior, it is defined as a class method.",I proposed to remove Float::ROUNDS from CRuby.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4613,2019-08-03T11:01:50Z,2019-08-04T22:26:21Z,2019-12-19T00:46:21Z,MERGED,True,14,6,4,https://github.com/shuujii,Change second argument to `%l` of `mrb_vformat()` to `size_t` from `mrb_int`,1,[],https://github.com/mruby/mruby/pull/4613,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4613,"size_t is more commonly used.
len argument of mrb_str_new() is size_t.

NOTE:
The test for %l is temporarily disabled because adding a new type to
mrbgems/mruby-test/vformat.c causes an error (memory error?) on Visual
Studio 2017 in AppVeyor.","size_t is more commonly used.
len argument of mrb_str_new() is size_t.

NOTE:
The test for %l is temporarily disabled because adding a new type to
mrbgems/mruby-test/vformat.c causes an error (memory error?) on Visual
Studio 2017 in AppVeyor.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4613,2019-08-03T11:01:50Z,2019-08-04T22:26:21Z,2019-12-19T00:46:21Z,MERGED,True,14,6,4,https://github.com/shuujii,Change second argument to `%l` of `mrb_vformat()` to `size_t` from `mrb_int`,1,[],https://github.com/mruby/mruby/pull/4613,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4613#issuecomment-517981837,"size_t is more commonly used.
len argument of mrb_str_new() is size_t.

NOTE:
The test for %l is temporarily disabled because adding a new type to
mrbgems/mruby-test/vformat.c causes an error (memory error?) on Visual
Studio 2017 in AppVeyor.","Once it works on Appveyor (or @shuujii says go), I will merge this.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4613,2019-08-03T11:01:50Z,2019-08-04T22:26:21Z,2019-12-19T00:46:21Z,MERGED,True,14,6,4,https://github.com/shuujii,Change second argument to `%l` of `mrb_vformat()` to `size_t` from `mrb_int`,1,[],https://github.com/mruby/mruby/pull/4613,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4613#issuecomment-517984197,"size_t is more commonly used.
len argument of mrb_str_new() is size_t.

NOTE:
The test for %l is temporarily disabled because adding a new type to
mrbgems/mruby-test/vformat.c causes an error (memory error?) on Visual
Studio 2017 in AppVeyor.","I will fix build in AppVeyor later, so could you please merge it once?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4613,2019-08-03T11:01:50Z,2019-08-04T22:26:21Z,2019-12-19T00:46:21Z,MERGED,True,14,6,4,https://github.com/shuujii,Change second argument to `%l` of `mrb_vformat()` to `size_t` from `mrb_int`,1,[],https://github.com/mruby/mruby/pull/4613,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4613#issuecomment-518048652,"size_t is more commonly used.
len argument of mrb_str_new() is size_t.

NOTE:
The test for %l is temporarily disabled because adding a new type to
mrbgems/mruby-test/vformat.c causes an error (memory error?) on Visual
Studio 2017 in AppVeyor.",Thank you for merging.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4613,2019-08-03T11:01:50Z,2019-08-04T22:26:21Z,2019-12-19T00:46:21Z,MERGED,True,14,6,4,https://github.com/shuujii,Change second argument to `%l` of `mrb_vformat()` to `size_t` from `mrb_int`,1,[],https://github.com/mruby/mruby/pull/4613,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4613#issuecomment-567277924,"size_t is more commonly used.
len argument of mrb_str_new() is size_t.

NOTE:
The test for %l is temporarily disabled because adding a new type to
mrbgems/mruby-test/vformat.c causes an error (memory error?) on Visual
Studio 2017 in AppVeyor.",I could implement %l test in a different way.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4614,2019-08-04T13:09:54Z,2019-08-05T03:33:59Z,2019-08-21T03:45:05Z,MERGED,True,3,10,1,https://github.com/shuujii,Use `mrb_int()` instead of `to_int()` in `mruby-numeric-ext`,1,[],https://github.com/mruby/mruby/pull/4614,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4614,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4615,2019-08-05T04:21:30Z,2019-08-05T04:33:47Z,2019-08-21T03:45:05Z,MERGED,True,163,225,32,https://github.com/shuujii,Use new specifiers/modifiers of `mrb_vfromat()`,1,[],https://github.com/mruby/mruby/pull/4615,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4615,"Use new specifiers/modifiers of mrb_vfromat()
The binary sizes (gems are only mruby-bin-mruby) are reduced slightly in
my environment than before the introduction of new specifiers/modifiers
(5116789) with this change.
------------+------------------+------------------+--------
 BINARY     | BEFORE (5116789) |  AFTER (This PR) |  RATIO
------------+------------------+------------------+--------
 mruby      |     593416 bytes |     593208 bytes | -0.04%
 libmruby.a |     769048 bytes |     767264 bytes | -0.23%
------------+------------------+------------------+--------

BTW, I accidentally changed tasks/toolchains/visualcpp.rake at #4613,
so I put it back.","Use new specifiers/modifiers of mrb_vfromat()
The binary sizes (gems are only mruby-bin-mruby) are reduced slightly in
my environment than before the introduction of new specifiers/modifiers
(5116789) with this change.
------------+------------------+------------------+--------
 BINARY     | BEFORE (5116789) |  AFTER (This PR) |  RATIO
------------+------------------+------------------+--------
 mruby      |     593416 bytes |     593208 bytes | -0.04%
 libmruby.a |     769048 bytes |     767264 bytes | -0.23%
------------+------------------+------------------+--------

BTW, I accidentally changed tasks/toolchains/visualcpp.rake at #4613,
so I put it back.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4619,2019-08-06T14:15:54Z,2019-08-06T23:54:26Z,2019-08-21T03:44:58Z,MERGED,True,1,1,1,https://github.com/shuujii,Add `mrb_noreturn` to `cmperr()` in `src/numeric.c`,1,[],https://github.com/mruby/mruby/pull/4619,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4619,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4620,2019-08-07T13:00:53Z,2019-08-07T14:55:52Z,2019-08-21T03:45:02Z,MERGED,True,27,11,1,https://github.com/shuujii,Improve MiniRake rule enhancement for Rake compatibility,1,[],https://github.com/mruby/mruby/pull/4620,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4620,"Support pathmap notation, recursive dependencies search, and so on.","Support pathmap notation, recursive dependencies search, and so on.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4621,2019-08-08T13:21:52Z,2019-08-10T18:23:52Z,2019-08-21T03:45:04Z,MERGED,True,0,39,1,https://github.com/shuujii,Remove monkey patches for Ruby 1.9 or earlier,1,[],https://github.com/mruby/mruby/pull/4621,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4621,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4622,2019-08-09T04:05:51Z,2019-12-19T00:43:56Z,2019-12-19T00:45:34Z,CLOSED,False,214,203,6,https://github.com/shuujii,Retrieve test for `%l` of `mrb_vformat()`; ref #4613,1,[],https://github.com/mruby/mruby/pull/4622,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4622,"The following compilation error occurs on Visual Studio 2017 in AppVeyor if
commented out part in previous mrbgems/mruby-test/vformat.c is enabled.
CC    mrbgems/mruby-test/vformat.c -> build/cxx_abi/mrbgems/mruby-test/vformat.obj
  C:\projects\mruby\mrbgems\mruby-test\vformat.c(176): fatal error C1060: compiler is out of heap space
  INTERNAL COMPILER ERROR in 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\bin\HostX64\x64\cl.exe'
      Please choose the Technical Support command on the Visual C++
      Help menu, or open the Technical Support help file for more information

This error seems to occur only C++, and not occur Visual Studio 2013/2015.
The cause seems to be deep nested conditional operator (? :). So I decided
to generate mrbgems/mruby-test/vformat.c with ERB to avoid it.","The following compilation error occurs on Visual Studio 2017 in AppVeyor if
commented out part in previous mrbgems/mruby-test/vformat.c is enabled.
CC    mrbgems/mruby-test/vformat.c -> build/cxx_abi/mrbgems/mruby-test/vformat.obj
  C:\projects\mruby\mrbgems\mruby-test\vformat.c(176): fatal error C1060: compiler is out of heap space
  INTERNAL COMPILER ERROR in 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\bin\HostX64\x64\cl.exe'
      Please choose the Technical Support command on the Visual C++
      Help menu, or open the Technical Support help file for more information

This error seems to occur only C++, and not occur Visual Studio 2013/2015.
The cause seems to be deep nested conditional operator (? :). So I decided
to generate mrbgems/mruby-test/vformat.c with ERB to avoid it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4622,2019-08-09T04:05:51Z,2019-12-19T00:43:56Z,2019-12-19T00:45:34Z,CLOSED,False,214,203,6,https://github.com/shuujii,Retrieve test for `%l` of `mrb_vformat()`; ref #4613,1,[],https://github.com/mruby/mruby/pull/4622,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4622#issuecomment-566645355,"The following compilation error occurs on Visual Studio 2017 in AppVeyor if
commented out part in previous mrbgems/mruby-test/vformat.c is enabled.
CC    mrbgems/mruby-test/vformat.c -> build/cxx_abi/mrbgems/mruby-test/vformat.obj
  C:\projects\mruby\mrbgems\mruby-test\vformat.c(176): fatal error C1060: compiler is out of heap space
  INTERNAL COMPILER ERROR in 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\bin\HostX64\x64\cl.exe'
      Please choose the Technical Support command on the Visual C++
      Help menu, or open the Technical Support help file for more information

This error seems to occur only C++, and not occur Visual Studio 2013/2015.
The cause seems to be deep nested conditional operator (? :). So I decided
to generate mrbgems/mruby-test/vformat.c with ERB to avoid it.",Introducing more dependency (erb) is not preferable. Is there any other workaround?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4622,2019-08-09T04:05:51Z,2019-12-19T00:43:56Z,2019-12-19T00:45:34Z,CLOSED,False,214,203,6,https://github.com/shuujii,Retrieve test for `%l` of `mrb_vformat()`; ref #4613,1,[],https://github.com/mruby/mruby/pull/4622,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4622#issuecomment-566890278,"The following compilation error occurs on Visual Studio 2017 in AppVeyor if
commented out part in previous mrbgems/mruby-test/vformat.c is enabled.
CC    mrbgems/mruby-test/vformat.c -> build/cxx_abi/mrbgems/mruby-test/vformat.obj
  C:\projects\mruby\mrbgems\mruby-test\vformat.c(176): fatal error C1060: compiler is out of heap space
  INTERNAL COMPILER ERROR in 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\bin\HostX64\x64\cl.exe'
      Please choose the Technical Support command on the Visual C++
      Help menu, or open the Technical Support help file for more information

This error seems to occur only C++, and not occur Visual Studio 2013/2015.
The cause seems to be deep nested conditional operator (? :). So I decided
to generate mrbgems/mruby-test/vformat.c with ERB to avoid it.","I didn't use erb command but ERB library which is a Ruby standard library, so I thought it was acceptable.
If it is not acceptable, what about the following actions?


Commit the generated file like lex.def as well.


Incorporates a small template engine implementation such as Mote, Ate and Erubi. If we only support % and <%= ... %> (newlines are not allowed), the following one-liner can also be used :)
# one-liner-erb.rb
eval$<.map{|l|l=~/^%/?$':%|$><<""#{l.gsub(/<%=(.*?)%>/,'#{\1}')}""|}*$/
%# example.erb
% native_types = {
%   c: {type: ""char"", code: ""RSTRING_PTR(obj)[0]""},
%   d: {type: ""int"" , code: ""(int)mrb_fixnum(obj)""},
% }
typedef struct {
% native_types.each do |spec, attrs|
  <%=attrs[:type]%> <%=spec%>;
% end
} VFNative;
$ ruby one-liner-erb.rb example.erb
typedef struct {
  char c;
  int d;
} VFNative;

$ diff -s =(ruby one-liner-erb.rb example.erb) =(erb example.erb)
Files /tmp/zshq5HoG1 and /tmp/zshuoc8X6 are identical",True,{}
mruby/mruby,https://github.com/mruby/mruby,4622,2019-08-09T04:05:51Z,2019-12-19T00:43:56Z,2019-12-19T00:45:34Z,CLOSED,False,214,203,6,https://github.com/shuujii,Retrieve test for `%l` of `mrb_vformat()`; ref #4613,1,[],https://github.com/mruby/mruby/pull/4622,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4622#issuecomment-567277757,"The following compilation error occurs on Visual Studio 2017 in AppVeyor if
commented out part in previous mrbgems/mruby-test/vformat.c is enabled.
CC    mrbgems/mruby-test/vformat.c -> build/cxx_abi/mrbgems/mruby-test/vformat.obj
  C:\projects\mruby\mrbgems\mruby-test\vformat.c(176): fatal error C1060: compiler is out of heap space
  INTERNAL COMPILER ERROR in 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\bin\HostX64\x64\cl.exe'
      Please choose the Technical Support command on the Visual C++
      Help menu, or open the Technical Support help file for more information

This error seems to occur only C++, and not occur Visual Studio 2013/2015.
The cause seems to be deep nested conditional operator (? :). So I decided
to generate mrbgems/mruby-test/vformat.c with ERB to avoid it.",I addressed this issue in a different way.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4623,2019-08-09T04:27:21Z,2019-08-09T12:47:01Z,2019-08-10T03:47:06Z,MERGED,True,114,3,3,https://github.com/chasonr,Avoid premature overflow in Complex#abs and Complex#/,2,[],https://github.com/mruby/mruby/pull/4623,https://github.com/chasonr,1,https://github.com/mruby/mruby/pull/4623,"Complex#abs is reimplemented in terms of Math.hypot. This function is defined in terms of the C99 hypot() function, which overflows only if the final result is not representable.
Example: without this modification, Complex(3e200, 4e200).abs returns infinity. The correct answer is 5e200.
The case of Complex divided by Complex is reimplemented in C, to maintain its performance. The implementation uses the textbook formula for complex division, but performs the arithmetic on (significand, exponent) pairs. This change avoids a great many needles overflows.
Example: without this modification, (1e201+1e201i) / (1e200+1e200i) returns (NaN+NaNi). The correct answer is (10.0+0.0i).
I have not attempted to reimplement multiplication this way. Complex multiplication can needlessly overflow in a few rare cases, but it is probably not worth the effort to cover them. Neither CRuby nor glibc covers these cases.","Complex#abs is reimplemented in terms of Math.hypot. This function is defined in terms of the C99 hypot() function, which overflows only if the final result is not representable.
Example: without this modification, Complex(3e200, 4e200).abs returns infinity. The correct answer is 5e200.
The case of Complex divided by Complex is reimplemented in C, to maintain its performance. The implementation uses the textbook formula for complex division, but performs the arithmetic on (significand, exponent) pairs. This change avoids a great many needles overflows.
Example: without this modification, (1e201+1e201i) / (1e200+1e200i) returns (NaN+NaNi). The correct answer is (10.0+0.0i).
I have not attempted to reimplement multiplication this way. Complex multiplication can needlessly overflow in a few rare cases, but it is probably not worth the effort to cover them. Neither CRuby nor glibc covers these cases.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4624,2019-08-10T13:32:23Z,2019-08-10T18:22:36Z,2019-08-21T03:45:00Z,MERGED,True,6,0,1,https://github.com/shuujii,"`Enumerable#reject`, etc. should return `Enumerable` without block",1,[],https://github.com/mruby/mruby/pull/4624,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4624,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4625,2019-08-10T13:55:09Z,2019-08-17T06:52:35Z,2019-08-18T05:50:42Z,MERGED,True,74,15,2,https://github.com/dearblue,Fix `String#rindex` with invalid UTF-8 string,3,[],https://github.com/mruby/mruby/pull/4625,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4625,Previously String#rindex returned the wrong index when given an invalid UTF-8 string.,Previously String#rindex returned the wrong index when given an invalid UTF-8 string.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4625,2019-08-10T13:55:09Z,2019-08-17T06:52:35Z,2019-08-18T05:50:42Z,MERGED,True,74,15,2,https://github.com/dearblue,Fix `String#rindex` with invalid UTF-8 string,3,[],https://github.com/mruby/mruby/pull/4625,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4625#issuecomment-520153135,Previously String#rindex returned the wrong index when given an invalid UTF-8 string.,"This patch was incomplete. Do not merge.
% ./build/host-utf8/bin/mruby -e 'p ""★"".rindex(""\x98"")'
1  # <= NG! Should be nil",True,{}
mruby/mruby,https://github.com/mruby/mruby,4625,2019-08-10T13:55:09Z,2019-08-17T06:52:35Z,2019-08-18T05:50:42Z,MERGED,True,74,15,2,https://github.com/dearblue,Fix `String#rindex` with invalid UTF-8 string,3,[],https://github.com/mruby/mruby/pull/4625,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4625#issuecomment-520158165,Previously String#rindex returned the wrong index when given an invalid UTF-8 string.,"Solved the problem mentioned above (#4625 (comment)).
% ./build/host-utf8/bin/mruby -e 'p ""★"".rindex(""\x98"")'
nil",True,{}
mruby/mruby,https://github.com/mruby/mruby,4625,2019-08-10T13:55:09Z,2019-08-17T06:52:35Z,2019-08-18T05:50:42Z,MERGED,True,74,15,2,https://github.com/dearblue,Fix `String#rindex` with invalid UTF-8 string,3,[],https://github.com/mruby/mruby/pull/4625,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4625#issuecomment-521116256,Previously String#rindex returned the wrong index when given an invalid UTF-8 string.,The new behavior is different from CRuby's. What's your opinion?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4625,2019-08-10T13:55:09Z,2019-08-17T06:52:35Z,2019-08-18T05:50:42Z,MERGED,True,74,15,2,https://github.com/dearblue,Fix `String#rindex` with invalid UTF-8 string,3,[],https://github.com/mruby/mruby/pull/4625,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/4625#issuecomment-521550618,Previously String#rindex returned the wrong index when given an invalid UTF-8 string.,"Ah, I does not confirmed the behavior of CRuby.
% ${RUBY} -e 'str = ""\xf0☀\xf1☁\xf2☂\xf3☃\xf0☀\xf1☁\xf2☂\xf3☃""; p str.rindex(""☁"")'
ruby26                11
./mruby-head          nil
./mruby-patched       11

% ${RUBY} -e 'str = ""\xf0☀\xf1☁\xf2☂\xf3☃\xf0☀\xf1☁\xf2☂\xf3☃""; p str.rindex(""\xf1"")'
ruby26                nil
./mruby-head          5
./mruby-patched       10

% ruby26 -e 'p ""☁"".unpack1(""H*"")'
""e29881""
% ${RUBY} -e 'str = ""\xf0☀\xf1☁\xf2☂\xf3☃\xf0☀\xf1☁\xf2☂\xf3☃""; p str.rindex(""\x98"")'
ruby26                nil
./mruby-head          nil
./mruby-patched       nil
However, the current behavior is not all the same as CRuby.
Delete all the added tests except str.rindex(""☁"").
As for str.rindex ("" \ xf1 ""), it is a side effect result. Should it be nil as well?
Is there anything else I have missed?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4625,2019-08-10T13:55:09Z,2019-08-17T06:52:35Z,2019-08-18T05:50:42Z,MERGED,True,74,15,2,https://github.com/dearblue,Fix `String#rindex` with invalid UTF-8 string,3,[],https://github.com/mruby/mruby/pull/4625,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/4625#issuecomment-522202424,Previously String#rindex returned the wrong index when given an invalid UTF-8 string.,I removed the behavior test that doesn't match CRuby.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4626,2019-08-11T12:04:18Z,2019-08-12T08:09:22Z,2019-08-21T03:45:02Z,MERGED,True,8,6,2,https://github.com/shuujii,`mrb_str_modify_keep_ascii` can embed one more byte,1,[],https://github.com/mruby/mruby/pull/4626,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4626,"The condition to make an embedded string was incorrect. Because there were
several similar codes, extracted into RSTR_EMBEDDABLE_P macro.","The condition to make an embedded string was incorrect. Because there were
several similar codes, extracted into RSTR_EMBEDDABLE_P macro.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4629,2019-08-12T12:57:05Z,2019-08-12T13:41:52Z,2019-08-21T03:45:03Z,MERGED,True,1,1,1,https://github.com/shuujii,`mrb_str_pool` can embed one more byte; ref #4626,1,[],https://github.com/mruby/mruby/pull/4629,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4629,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4630,2019-08-13T13:53:07Z,2019-08-13T23:16:45Z,2019-08-21T03:45:01Z,MERGED,True,44,56,1,https://github.com/shuujii,Extract `struct RString` initialization code to function,1,[],https://github.com/mruby/mruby/pull/4630,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4630,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4631,2019-08-14T13:36:26Z,2019-08-14T14:29:07Z,2019-08-21T03:45:00Z,MERGED,True,36,33,1,https://github.com/shuujii,Extract initialization code of shared and fshared string to function,1,[],https://github.com/mruby/mruby/pull/4631,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4631,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4632,2019-08-15T03:49:34Z,2019-08-15T09:41:31Z,2019-08-21T03:45:04Z,MERGED,True,0,1,1,https://github.com/shuujii,Remove unneeded `#include` in `src/string.c`,1,[],https://github.com/mruby/mruby/pull/4632,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4632,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4633,2019-08-16T13:16:45Z,2019-08-16T14:20:44Z,2019-08-21T03:45:05Z,MERGED,True,23,18,2,https://github.com/shuujii,SHARED/FSHARED string is not required when sharing NOFREE string,1,[],https://github.com/mruby/mruby/pull/4633,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4633,"I think the string buffer of NOFREE string always exists and does not need
to be released, so it can be shared as another NOFREE string.
Also changed the mrb_shared_string field order so that eliminate padding if
int and mrb_int sizes are less than pointer size.","I think the string buffer of NOFREE string always exists and does not need
to be released, so it can be shared as another NOFREE string.
Also changed the mrb_shared_string field order so that eliminate padding if
int and mrb_int sizes are less than pointer size.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4633,2019-08-16T13:16:45Z,2019-08-16T14:20:44Z,2019-08-21T03:45:05Z,MERGED,True,23,18,2,https://github.com/shuujii,SHARED/FSHARED string is not required when sharing NOFREE string,1,[],https://github.com/mruby/mruby/pull/4633,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4633#issuecomment-522026747,"I think the string buffer of NOFREE string always exists and does not need
to be released, so it can be shared as another NOFREE string.
Also changed the mrb_shared_string field order so that eliminate padding if
int and mrb_int sizes are less than pointer size.",Nice idea. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4634,2019-08-17T12:39:23Z,2019-08-17T14:41:53Z,2019-08-21T03:45:03Z,MERGED,True,20,35,2,https://github.com/shuujii,Refactor set/unset string type flags,1,[],https://github.com/mruby/mruby/pull/4634,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4634,"Introduce RSTR_SET_TYPE_FLAG macro to set the specified string type flag and
clear the others.","Introduce RSTR_SET_TYPE_FLAG macro to set the specified string type flag and
clear the others.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4635,2019-08-17T12:57:06Z,2019-08-26T10:18:50Z,2019-09-23T00:37:37Z,MERGED,True,1,2,1,https://github.com/shuujii,Fix wrong argument for `fprintf` in `mruby-bin-mrbc`,1,[],https://github.com/mruby/mruby/pull/4635,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4635,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4635,2019-08-17T12:57:06Z,2019-08-26T10:18:50Z,2019-09-23T00:37:37Z,MERGED,True,1,2,1,https://github.com/shuujii,Fix wrong argument for `fprintf` in `mruby-bin-mrbc`,1,[],https://github.com/mruby/mruby/pull/4635,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4635#issuecomment-524511337,,"This patch suppresses warnings from gcc-9 and later.
% gcc9 -Iinclude -O3 -Wall -c mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.c
In function 'parse_args',
    inlined from 'main' at mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.c:273:7:
mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.c:88:11: warning: '%s' directive argument is null [-Wformat-overflow=]
   88 |           fprintf(stderr, ""%s: an output file is already specified. (%s)\n"",
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |                   args->prog, outfile);
      |                   ~~~~~~~~~~~~~~~~~~~~",True,{}
mruby/mruby,https://github.com/mruby/mruby,4636,2019-08-18T04:14:42Z,2019-08-18T22:29:47Z,2019-08-19T01:22:00Z,MERGED,True,2721,249,36,https://github.com/davidsiaw,Generate doxygen docs for mruby,3,[],https://github.com/mruby/mruby/pull/4636,https://github.com/davidsiaw,1,https://github.com/mruby/mruby/pull/4636,"Context
This commit adds commands to the makefile to generate a documentation website for mruby. With this, inline documentation can show up on web pages in an easy to read manner.
make docs

For now documentation isn't as complete and useful as it should be but hopefully over time this will encourage writing more useful information into both the source code and extra documentation pages.
Results
To save you the trouble of installing Doxygen dependencies, this is the resulting generated site:
https://mruby.davidsiaw.net
You can also go to documents like https://mruby.davidsiaw.net/md_doc_guides_mrbconf.html, and find clickable links like these that lead you to the actual documentation of the objects.

Doxyfile
I tried to make the Doxyfile as readable as possible, so that it makes more sense to the human eye.
Documentation
All documentation to be added to Doxygen need to start with the double asterisk, which is followed in some parts already.
/**
 * Custom data type description.
 */
typedef struct mrb_data_type {
You can link to method documentation by going method()
/**
 * Create a symbol using mrb_intern_cstr()
 */
Files that have important documentation need to be given a file header that is not too different from what we already have (with the double asterisk and @file marker):
/**
** @file mruby/data.h - Data class
**

Why
Searching for mruby things on google now always makes it think that I typed in mruby by mistake. Having some searchable and indexable documentation will help improve the situation.","Context
This commit adds commands to the makefile to generate a documentation website for mruby. With this, inline documentation can show up on web pages in an easy to read manner.
make docs

For now documentation isn't as complete and useful as it should be but hopefully over time this will encourage writing more useful information into both the source code and extra documentation pages.
Results
To save you the trouble of installing Doxygen dependencies, this is the resulting generated site:
https://mruby.davidsiaw.net
You can also go to documents like https://mruby.davidsiaw.net/md_doc_guides_mrbconf.html, and find clickable links like these that lead you to the actual documentation of the objects.

Doxyfile
I tried to make the Doxyfile as readable as possible, so that it makes more sense to the human eye.
Documentation
All documentation to be added to Doxygen need to start with the double asterisk, which is followed in some parts already.
/**
 * Custom data type description.
 */
typedef struct mrb_data_type {
You can link to method documentation by going method()
/**
 * Create a symbol using mrb_intern_cstr()
 */
Files that have important documentation need to be given a file header that is not too different from what we already have (with the double asterisk and @file marker):
/**
** @file mruby/data.h - Data class
**

Why
Searching for mruby things on google now always makes it think that I typed in mruby by mistake. Having some searchable and indexable documentation will help improve the situation.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4636,2019-08-18T04:14:42Z,2019-08-18T22:29:47Z,2019-08-19T01:22:00Z,MERGED,True,2721,249,36,https://github.com/davidsiaw,Generate doxygen docs for mruby,3,[],https://github.com/mruby/mruby/pull/4636,https://github.com/davidsiaw,2,https://github.com/mruby/mruby/pull/4636#issuecomment-522312628,"Context
This commit adds commands to the makefile to generate a documentation website for mruby. With this, inline documentation can show up on web pages in an easy to read manner.
make docs

For now documentation isn't as complete and useful as it should be but hopefully over time this will encourage writing more useful information into both the source code and extra documentation pages.
Results
To save you the trouble of installing Doxygen dependencies, this is the resulting generated site:
https://mruby.davidsiaw.net
You can also go to documents like https://mruby.davidsiaw.net/md_doc_guides_mrbconf.html, and find clickable links like these that lead you to the actual documentation of the objects.

Doxyfile
I tried to make the Doxyfile as readable as possible, so that it makes more sense to the human eye.
Documentation
All documentation to be added to Doxygen need to start with the double asterisk, which is followed in some parts already.
/**
 * Custom data type description.
 */
typedef struct mrb_data_type {
You can link to method documentation by going method()
/**
 * Create a symbol using mrb_intern_cstr()
 */
Files that have important documentation need to be given a file header that is not too different from what we already have (with the double asterisk and @file marker):
/**
** @file mruby/data.h - Data class
**

Why
Searching for mruby things on google now always makes it think that I typed in mruby by mistake. Having some searchable and indexable documentation will help improve the situation.",A strange crash occurred on https://travis-ci.org/mruby/mruby/jobs/573331846. Not sure if this is a known flicker.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4636,2019-08-18T04:14:42Z,2019-08-18T22:29:47Z,2019-08-19T01:22:00Z,MERGED,True,2721,249,36,https://github.com/davidsiaw,Generate doxygen docs for mruby,3,[],https://github.com/mruby/mruby/pull/4636,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4636#issuecomment-522317568,"Context
This commit adds commands to the makefile to generate a documentation website for mruby. With this, inline documentation can show up on web pages in an easy to read manner.
make docs

For now documentation isn't as complete and useful as it should be but hopefully over time this will encourage writing more useful information into both the source code and extra documentation pages.
Results
To save you the trouble of installing Doxygen dependencies, this is the resulting generated site:
https://mruby.davidsiaw.net
You can also go to documents like https://mruby.davidsiaw.net/md_doc_guides_mrbconf.html, and find clickable links like these that lead you to the actual documentation of the objects.

Doxyfile
I tried to make the Doxyfile as readable as possible, so that it makes more sense to the human eye.
Documentation
All documentation to be added to Doxygen need to start with the double asterisk, which is followed in some parts already.
/**
 * Custom data type description.
 */
typedef struct mrb_data_type {
You can link to method documentation by going method()
/**
 * Create a symbol using mrb_intern_cstr()
 */
Files that have important documentation need to be given a file header that is not too different from what we already have (with the double asterisk and @file marker):
/**
** @file mruby/data.h - Data class
**

Why
Searching for mruby things on google now always makes it think that I typed in mruby by mistake. Having some searchable and indexable documentation will help improve the situation.","Perhaps you have encountered cryptid! 👻 🎃
When I checked it a little, it seemed that symbolic links with the same name collided when the tests were executed in parallel.
There was no problem with your patch because there were no failures in other tests.",True,{'LAUGH': ['https://github.com/davidsiaw']}
mruby/mruby,https://github.com/mruby/mruby,4636,2019-08-18T04:14:42Z,2019-08-18T22:29:47Z,2019-08-19T01:22:00Z,MERGED,True,2721,249,36,https://github.com/davidsiaw,Generate doxygen docs for mruby,3,[],https://github.com/mruby/mruby/pull/4636,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4636#issuecomment-522378250,"Context
This commit adds commands to the makefile to generate a documentation website for mruby. With this, inline documentation can show up on web pages in an easy to read manner.
make docs

For now documentation isn't as complete and useful as it should be but hopefully over time this will encourage writing more useful information into both the source code and extra documentation pages.
Results
To save you the trouble of installing Doxygen dependencies, this is the resulting generated site:
https://mruby.davidsiaw.net
You can also go to documents like https://mruby.davidsiaw.net/md_doc_guides_mrbconf.html, and find clickable links like these that lead you to the actual documentation of the objects.

Doxyfile
I tried to make the Doxyfile as readable as possible, so that it makes more sense to the human eye.
Documentation
All documentation to be added to Doxygen need to start with the double asterisk, which is followed in some parts already.
/**
 * Custom data type description.
 */
typedef struct mrb_data_type {
You can link to method documentation by going method()
/**
 * Create a symbol using mrb_intern_cstr()
 */
Files that have important documentation need to be given a file header that is not too different from what we already have (with the double asterisk and @file marker):
/**
** @file mruby/data.h - Data class
**

Why
Searching for mruby things on google now always makes it think that I typed in mruby by mistake. Having some searchable and indexable documentation will help improve the situation.","Originally YARD document is generated by rake doc, so it is difficult to understand that another document is generated by make docs.


It may be better to generate Doxygen document under doc/doxgen/, etc. because YARD document is generated under doc/api/.


I think Rake task should be used instead of Make task.


YARD warnings are increasing (originally different warning appeared).
$ rake doc
[warn]: Unknown tag @class in file `` near line
[warn]: Unknown tag @brief in file `` near line
[warn]: Unknown tag @class in file `` near line
[warn]: Unknown tag @brief in file `` near line
[warn]: Unknown tag @class in file `` near line
[warn]: Unknown tag @brief in file `` near line
...",True,{}
mruby/mruby,https://github.com/mruby/mruby,4636,2019-08-18T04:14:42Z,2019-08-18T22:29:47Z,2019-08-19T01:22:00Z,MERGED,True,2721,249,36,https://github.com/davidsiaw,Generate doxygen docs for mruby,3,[],https://github.com/mruby/mruby/pull/4636,https://github.com/davidsiaw,5,https://github.com/mruby/mruby/pull/4636#issuecomment-522378924,"Context
This commit adds commands to the makefile to generate a documentation website for mruby. With this, inline documentation can show up on web pages in an easy to read manner.
make docs

For now documentation isn't as complete and useful as it should be but hopefully over time this will encourage writing more useful information into both the source code and extra documentation pages.
Results
To save you the trouble of installing Doxygen dependencies, this is the resulting generated site:
https://mruby.davidsiaw.net
You can also go to documents like https://mruby.davidsiaw.net/md_doc_guides_mrbconf.html, and find clickable links like these that lead you to the actual documentation of the objects.

Doxyfile
I tried to make the Doxyfile as readable as possible, so that it makes more sense to the human eye.
Documentation
All documentation to be added to Doxygen need to start with the double asterisk, which is followed in some parts already.
/**
 * Custom data type description.
 */
typedef struct mrb_data_type {
You can link to method documentation by going method()
/**
 * Create a symbol using mrb_intern_cstr()
 */
Files that have important documentation need to be given a file header that is not too different from what we already have (with the double asterisk and @file marker):
/**
** @file mruby/data.h - Data class
**

Why
Searching for mruby things on google now always makes it think that I typed in mruby by mistake. Having some searchable and indexable documentation will help improve the situation.","It may be better to generate Doxygen document under doc/doxgen/


Makes sense. I will make another PR to correct that.


I think Rake task should be used instead of Make task.


👍


Originally YARD document is generated by rake doc


I'll just make it so rake doc generates both the Doxygen and yard docs then",True,{}
mruby/mruby,https://github.com/mruby/mruby,4637,2019-08-18T06:22:53Z,2019-08-18T14:25:40Z,2019-08-24T02:20:21Z,MERGED,True,65,61,17,https://github.com/dearblue,Prohibit changes to iseq in principle,1,[],https://github.com/mruby/mruby/pull/4637,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4637,"I thought about inline mruby bytecode like 5b1f25a, but iseq is basically no problems even if it is immutable.
However, there is a compatibility problem because the structure and functions are changed as an API.
Third party programs that incorporate mruby may stop working.","I thought about inline mruby bytecode like 5b1f25a, but iseq is basically no problems even if it is immutable.
However, there is a compatibility problem because the structure and functions are changed as an API.
Third party programs that incorporate mruby may stop working.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4637,2019-08-18T06:22:53Z,2019-08-18T14:25:40Z,2019-08-24T02:20:21Z,MERGED,True,65,61,17,https://github.com/dearblue,Prohibit changes to iseq in principle,1,[],https://github.com/mruby/mruby/pull/4637,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4637#issuecomment-522326567,"I thought about inline mruby bytecode like 5b1f25a, but iseq is basically no problems even if it is immutable.
However, there is a compatibility problem because the structure and functions are changed as an API.
Third party programs that incorporate mruby may stop working.",I think it's OK.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4638,2019-08-18T06:51:56Z,2019-08-18T22:30:49Z,2019-08-24T02:20:23Z,MERGED,True,38,45,2,https://github.com/dearblue,Simplify get arguments,1,[],https://github.com/mruby/mruby/pull/4638,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4638,"mrb_str_index_m() and mrb_str_rindex()
Make mrb_get_args() called only once from called twice.
mrb_str_byteslice()
Replace goto with if ~ else.","mrb_str_index_m() and mrb_str_rindex()
Make mrb_get_args() called only once from called twice.
mrb_str_byteslice()
Replace goto with if ~ else.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4639,2019-08-18T07:00:30Z,2019-08-18T22:31:27Z,2019-08-24T02:20:29Z,MERGED,True,2,2,1,https://github.com/dearblue,Suppress warnings for `strncat()`,1,[],https://github.com/mruby/mruby/pull/4639,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4639,strncat() also needs '\0'.,strncat() also needs '\0'.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4640,2019-08-18T10:51:29Z,2019-08-18T22:23:24Z,2019-08-21T03:44:59Z,MERGED,True,3,4,1,https://github.com/shuujii,Also use `str_init_shared` for `orig` in `str_make_shared()`,1,[],https://github.com/mruby/mruby/pull/4640,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4640,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4641,2019-08-18T11:19:53Z,2019-08-18T22:24:06Z,2019-08-21T03:45:04Z,MERGED,True,4,3,1,https://github.com/shuujii,Rename `mrb_shared_string::len` to `mrb_shared_string::capa`,1,[],https://github.com/mruby/mruby/pull/4641,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4641,Because this field is used as capacity of string buffer.,Because this field is used as capacity of string buffer.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4642,2019-08-18T13:30:33Z,2019-08-18T22:25:08Z,2019-08-24T02:20:30Z,MERGED,True,17,1,2,https://github.com/dearblue,Make symbolic link names unique for test,1,[],https://github.com/mruby/mruby/pull/4642,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4642,"If tests containing mruby-io are run in parallel, problems may occur due to the same symbolic link names.

  
    
      mruby/mrbgems/mruby-io/test/file.rb
    
    
        Lines 180 to 187
      in
      83dab1e
    
  
  
    

        
          
           assert('File.symlink') do 
        

        
          
             target_name = ""/usr/bin"" 
        

        
          
             symlink_name = ""test-bin-dummy"" 
        

        
          
             if !File.exist?(target_name) 
        

        
          
               skip(""target directory of File.symlink is not found"") 
        

        
          
             else 
        

        
          
               begin 
        

        
          
                 assert_equal 0, File.symlink(target_name, symlink_name) 
        
    
  


Perhaps you can solve the problem described at #4636 (comment).","If tests containing mruby-io are run in parallel, problems may occur due to the same symbolic link names.

  
    
      mruby/mrbgems/mruby-io/test/file.rb
    
    
        Lines 180 to 187
      in
      83dab1e
    
  
  
    

        
          
           assert('File.symlink') do 
        

        
          
             target_name = ""/usr/bin"" 
        

        
          
             symlink_name = ""test-bin-dummy"" 
        

        
          
             if !File.exist?(target_name) 
        

        
          
               skip(""target directory of File.symlink is not found"") 
        

        
          
             else 
        

        
          
               begin 
        

        
          
                 assert_equal 0, File.symlink(target_name, symlink_name) 
        
    
  


Perhaps you can solve the problem described at #4636 (comment).",True,{'HOORAY': ['https://github.com/davidsiaw']}
mruby/mruby,https://github.com/mruby/mruby,4643,2019-08-19T02:40:43Z,2019-08-19T04:18:42Z,2021-12-17T04:39:13Z,MERGED,True,2,0,1,https://github.com/lopopolo,Allow external definition of MRB_API macro,1,[],https://github.com/mruby/mruby/pull/4643,https://github.com/lopopolo,1,https://github.com/mruby/mruby/pull/4643,"When building WebAssembly targets with clang (e.g. wasm32-unknown-unknown), all
symbols are hidden by default. To export a symbol, it must be marked with
__attribute__((visibility(""default"")))

Rather than detecting this exotic target in mruby, allow MRB_API to be defined
externally.","When building WebAssembly targets with clang (e.g. wasm32-unknown-unknown), all
symbols are hidden by default. To export a symbol, it must be marked with
__attribute__((visibility(""default"")))

Rather than detecting this exotic target in mruby, allow MRB_API to be defined
externally.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4645,2019-08-19T10:27:32Z,2019-08-19T12:29:39Z,2019-08-21T03:45:02Z,MERGED,True,23,52,2,https://github.com/shuujii,Move `mrb_str_pool` to `src/string.c` to use `str_init` family,1,[],https://github.com/mruby/mruby/pull/4645,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4645,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4646,2019-08-20T09:58:46Z,2019-08-20T13:00:55Z,2019-08-21T03:45:05Z,MERGED,True,15,10,4,https://github.com/shuujii,Use `RBasic` padding for embedded string on 64-bit CPU,1,[],https://github.com/mruby/mruby/pull/4646,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4646,"On 64-bit CPU, there is padding in RBasic, so reorder the fields and use
it as buffer of embedded string. This change allows 4 more bytes to be
embedded on 64-bit CPU.
However, an incompatibility will occur if RString::as::ary is accessed
directly because RString structure has changed.","On 64-bit CPU, there is padding in RBasic, so reorder the fields and use
it as buffer of embedded string. This change allows 4 more bytes to be
embedded on 64-bit CPU.
However, an incompatibility will occur if RString::as::ary is accessed
directly because RString structure has changed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4647,2019-08-20T14:51:35Z,2019-08-20T22:08:09Z,2019-08-21T01:43:54Z,MERGED,True,5,0,1,https://github.com/take-cheeze,Add note about checksum_hash in mrbgem doc,1,[],https://github.com/mruby/mruby/pull/4647,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4647,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4648,2019-08-20T14:52:42Z,2019-08-20T22:08:57Z,2019-08-21T01:43:53Z,MERGED,True,3,3,1,https://github.com/take-cheeze,Use mruby-onig-regexp instead in example,1,[],https://github.com/mruby/mruby/pull/4648,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4648,Since iij/mruby-io is deprecated,Since iij/mruby-io is deprecated,True,{}
mruby/mruby,https://github.com/mruby/mruby,4649,2019-08-20T14:54:45Z,2019-08-20T22:09:32Z,2019-08-21T01:43:52Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Fix link of mruby-io,1,[],https://github.com/mruby/mruby/pull/4649,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4649,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4650,2019-08-20T14:56:18Z,2019-08-20T22:10:08Z,2019-08-21T01:43:51Z,MERGED,True,1,3,1,https://github.com/take-cheeze,Remove deprecated iij stuffs,1,[],https://github.com/mruby/mruby/pull/4650,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4650,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4651,2019-08-21T03:16:57Z,2019-08-21T03:40:00Z,2019-08-21T03:45:03Z,MERGED,True,41,32,1,https://github.com/shuujii,Prioritize embedded string over nofree (or normal) string,1,[],https://github.com/mruby/mruby/pull/4651,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4651,"Prioritize embedded string in the following functions:

str_new_static
str_new
mrb_str_new_capa
mrb_str_pool

The reasons are as follows:

Consistency with mrb_str_byte_subseq and str_replace.
Memory locality increases and may be slightly faster.
No conversion cost to embedded string when modifying the string.","Prioritize embedded string in the following functions:

str_new_static
str_new
mrb_str_new_capa
mrb_str_pool

The reasons are as follows:

Consistency with mrb_str_byte_subseq and str_replace.
Memory locality increases and may be slightly faster.
No conversion cost to embedded string when modifying the string.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4653,2019-08-21T17:43:47Z,2019-08-21T23:06:48Z,2019-08-21T23:06:48Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Separate repos directory and build directory,1,[],https://github.com/mruby/mruby/pull/4653,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4653,closes #4652,closes #4652,True,{}
mruby/mruby,https://github.com/mruby/mruby,4654,2019-08-21T18:03:53Z,2019-08-21T23:07:31Z,2019-08-22T07:46:50Z,MERGED,True,13,1,1,https://github.com/take-cheeze,Take commit hash of mruby too,1,[],https://github.com/mruby/mruby/pull/4654,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4654,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4654,2019-08-21T18:03:53Z,2019-08-21T23:07:31Z,2019-08-22T07:46:50Z,MERGED,True,13,1,1,https://github.com/take-cheeze,Take commit hash of mruby too,1,[],https://github.com/mruby/mruby/pull/4654,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4654#issuecomment-523790931,,"This PR seems to add the following information into the lock file:
mruby_version:
  version: 2.0.1
  release_no: 20001
  git_commit: 246179518d8e3641dcb026fb24e8b06f9878faa8

Is this information just output and not used?
It seems redundant that version is repeated like mruby_version.version, so I think just mruby is better.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4655,2019-08-22T02:03:38Z,2019-08-22T04:50:29Z,2019-08-22T04:50:29Z,MERGED,True,1,1,1,https://github.com/yamori813,make clean error workaround,1,[],https://github.com/mruby/mruby/pull/4655,https://github.com/yamori813,1,https://github.com/mruby/mruby/pull/4655,"I have error at make clean at no doxygen environment.
% make clean
rm -r doxygen
rm: doxygen: No such file or directory
*** Error code 1
Stop.
This is work around for this error.","I have error at make clean at no doxygen environment.
% make clean
rm -r doxygen
rm: doxygen: No such file or directory
*** Error code 1
Stop.
This is work around for this error.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4656,2019-08-22T12:55:54Z,2019-08-22T20:46:21Z,2019-09-23T00:37:39Z,MERGED,True,88,28,4,https://github.com/shuujii,Refine processing for gem lock file,1,[],https://github.com/mruby/mruby/pull/4656,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4656,"Defer YAML library and lock file loading until needed.
Don't write empty parts into lock file.
Extract code to read/write lock file to MRuby::Lockfile.
MRuby::Lockfile.disable disables the use of lock file.


The use of lock file is enabled by default (without external gem) and only the mruby_version part is written. However, since mruby_version part is unused and lock file doesn't make sense, I think it is better to disable the use of lock file by default.","Defer YAML library and lock file loading until needed.
Don't write empty parts into lock file.
Extract code to read/write lock file to MRuby::Lockfile.
MRuby::Lockfile.disable disables the use of lock file.


The use of lock file is enabled by default (without external gem) and only the mruby_version part is written. However, since mruby_version part is unused and lock file doesn't make sense, I think it is better to disable the use of lock file by default.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4662,2019-08-23T13:26:12Z,2019-08-23T13:35:28Z,2019-09-23T00:37:35Z,MERGED,True,41,11,3,https://github.com/shuujii,Fix `RBreak` exceeding 6 words on 32-bit mode w/o boxing and `MRB_USE_FLOAT`,1,[],https://github.com/mruby/mruby/pull/4662,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4662,"ref: #4483 (comment)
In this configuration, tt of RBreak::val is set into RBreak::flags.","ref: #4483 (comment)
In this configuration, tt of RBreak::val is set into RBreak::flags.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4664,2019-08-24T02:39:06Z,2019-08-24T16:25:33Z,2019-09-23T00:37:40Z,MERGED,True,0,6,1,https://github.com/shuujii,Remove unused constant in `Rakefile`; ref e312842a,1,[],https://github.com/mruby/mruby/pull/4664,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4664,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4665,2019-08-24T02:41:11Z,2019-08-24T16:28:14Z,2019-08-31T09:47:31Z,MERGED,True,17,28,2,https://github.com/dearblue,Create a symbolic link in the temporary directory; fix #4642,1,[],https://github.com/mruby/mruby/pull/4665,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4665,"Because the linker gives a warning on FreeBSD 12.0.
warning: mktemp() possibly used unsafely; consider using mkstemp()

Even with travis-ci, there was a warning:
https://travis-ci.org/mruby/mruby/jobs/573416883#L1335-L1338
warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'","Because the linker gives a warning on FreeBSD 12.0.
warning: mktemp() possibly used unsafely; consider using mkstemp()

Even with travis-ci, there was a warning:
https://travis-ci.org/mruby/mruby/jobs/573416883#L1335-L1338
warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'",True,{}
mruby/mruby,https://github.com/mruby/mruby,4666,2019-08-24T03:05:35Z,2019-08-24T16:29:50Z,2019-08-31T09:47:32Z,MERGED,True,2,0,1,https://github.com/dearblue,Suppress warning by gcc with `-Wmaybe-uninitialized`,1,[],https://github.com/mruby/mruby/pull/4666,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4666,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4667,2019-08-24T05:42:45Z,2019-08-24T16:30:46Z,2019-09-23T00:37:35Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix `Range#max` test (`TypeError` is raised) on 32-bit mode,1,[],https://github.com/mruby/mruby/pull/4667,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4667,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4668,2019-08-25T01:01:33Z,2019-08-25T08:56:04Z,2019-09-23T00:37:33Z,MERGED,True,8,5,4,https://github.com/shuujii,Defer several build libraries loading until needed,1,[],https://github.com/mruby/mruby/pull/4668,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4668,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4669,2019-08-25T17:16:42Z,2019-08-25T22:46:58Z,2019-08-26T04:08:40Z,MERGED,True,264,237,14,https://github.com/davidsiaw,Fixes for Doxygen docs,2,[],https://github.com/mruby/mruby/pull/4669,https://github.com/davidsiaw,1,https://github.com/mruby/mruby/pull/4669,"As discussed in #4636

I moved the doxygen docs directory to /doc/capi alongside /doc/api which are the yard docs
I made it so doxygen does not spam so many warnings by basically fixing up most of the warnings (which were mainly in mruby.h)
I made it so docs are generated in a rake task instead of using make

This PR also fixes a few smaller issues such as the pipe symbol not displaying in the generated docs and code examples not being preformatted.
This PR also adds a note in the README about generating docs.
As before you can see the resulting doxygen docs in https://mruby.davidsiaw.net","As discussed in #4636

I moved the doxygen docs directory to /doc/capi alongside /doc/api which are the yard docs
I made it so doxygen does not spam so many warnings by basically fixing up most of the warnings (which were mainly in mruby.h)
I made it so docs are generated in a rake task instead of using make

This PR also fixes a few smaller issues such as the pipe symbol not displaying in the generated docs and code examples not being preformatted.
This PR also adds a note in the README about generating docs.
As before you can see the resulting doxygen docs in https://mruby.davidsiaw.net",True,{}
mruby/mruby,https://github.com/mruby/mruby,4669,2019-08-25T17:16:42Z,2019-08-25T22:46:58Z,2019-08-26T04:08:40Z,MERGED,True,264,237,14,https://github.com/davidsiaw,Fixes for Doxygen docs,2,[],https://github.com/mruby/mruby/pull/4669,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4669#issuecomment-524707696,"As discussed in #4636

I moved the doxygen docs directory to /doc/capi alongside /doc/api which are the yard docs
I made it so doxygen does not spam so many warnings by basically fixing up most of the warnings (which were mainly in mruby.h)
I made it so docs are generated in a rake task instead of using make

This PR also fixes a few smaller issues such as the pipe symbol not displaying in the generated docs and code examples not being preformatted.
This PR also adds a note in the README about generating docs.
As before you can see the resulting doxygen docs in https://mruby.davidsiaw.net","I have some comments:


I think it is better to place all documentation tasks under the doc namespace (add doc_ prefix because minirake can't use namespace). Because it is consistent with GitLab tasks and user friendly for rake -T, etc. and shell completion.


The description of clean_doc/clean_api_doc/clean_capi_doc is all the same.


There is sudo apt-get install doxygen in the failure message of capi_doc task, but I think this is somewhat inaccurate because it only works on specific platforms.


view tasks also only work on specific platforms, so I think they are unnecessary (or it is better to work on Linux/Mac/Windows at least).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4670,2019-08-26T09:20:10Z,2019-08-26T10:17:39Z,2019-09-23T00:37:40Z,MERGED,True,0,12,1,https://github.com/shuujii,Remove unused `random.h`,1,[],https://github.com/mruby/mruby/pull/4670,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4670,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4671,2019-08-26T11:42:41Z,2019-08-26T13:18:37Z,2019-09-23T00:37:34Z,MERGED,True,2,2,1,https://github.com/shuujii,Fix `Array#sample` with `MRB_INT32`,1,[],https://github.com/mruby/mruby/pull/4671,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4671,"Array index became potentially negative because uint32_t is cast to
mrb_int.","Array index became potentially negative because uint32_t is cast to
mrb_int.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4672,2019-08-27T01:47:40Z,2019-08-27T06:03:48Z,2019-09-23T00:37:36Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix build of `mruby-random` on 32-bit mode,1,[],https://github.com/mruby/mruby/pull/4672,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4672,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4673,2019-08-28T04:34:39Z,2019-08-29T01:25:56Z,2019-08-29T01:26:47Z,CLOSED,False,16,1,2,https://github.com/shuujii,Fix `Kernel#initialize_copy` to frozen object,1,[],https://github.com/mruby/mruby/pull/4673,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4673,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4673,2019-08-28T04:34:39Z,2019-08-29T01:25:56Z,2019-08-29T01:26:47Z,CLOSED,False,16,1,2,https://github.com/shuujii,Fix `Kernel#initialize_copy` to frozen object,1,[],https://github.com/mruby/mruby/pull/4673,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4673#issuecomment-525771147,,"I have no objection to this change, but since initialize_copy is a private method in CRuby, we should not test like a.initialize_copy(a). Probably we should call initialize_copy indirectly via clone or dup.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4673,2019-08-28T04:34:39Z,2019-08-29T01:25:56Z,2019-08-29T01:26:47Z,CLOSED,False,16,1,2,https://github.com/shuujii,Fix `Kernel#initialize_copy` to frozen object,1,[],https://github.com/mruby/mruby/pull/4673,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4673#issuecomment-525787091,,The comment above does not mean we need to ensure test suits to be executable by CRuby. But we may support public/private visibility in mruby in the future. So I think it's better to avoid direct invoking of methods marked as private in CRuby.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4673,2019-08-28T04:34:39Z,2019-08-29T01:25:56Z,2019-08-29T01:26:47Z,CLOSED,False,16,1,2,https://github.com/shuujii,Fix `Kernel#initialize_copy` to frozen object,1,[],https://github.com/mruby/mruby/pull/4673,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4673#issuecomment-525982954,,"I agree with your comment. And I withdraw this PR because Kernel#initialize_copy doesn't change anything so this PR itself doesn't make much sense.
Thank you.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4674,2019-08-29T07:05:51Z,2019-08-29T07:24:48Z,2019-09-23T00:37:39Z,MERGED,True,0,2,1,https://github.com/shuujii,Remove unneeded `/src/y.tab.c` in `.gitignore`,1,[],https://github.com/mruby/mruby/pull/4674,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4674,"Currently, y.tab.c is generated to under the build/ directory.","Currently, y.tab.c is generated to under the build/ directory.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4677,2019-08-30T08:56:27Z,2019-08-30T13:38:16Z,2019-09-23T00:37:32Z,MERGED,True,12,9,2,https://github.com/shuujii,`Array#(permutation|combination)` without block should return `self`,1,[],https://github.com/mruby/mruby/pull/4677,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4677,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4677,2019-08-30T08:56:27Z,2019-08-30T13:38:16Z,2019-09-23T00:37:32Z,MERGED,True,12,9,2,https://github.com/shuujii,`Array#(permutation|combination)` without block should return `self`,1,[],https://github.com/mruby/mruby/pull/4677,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4677#issuecomment-526796624,,"Sorry, I made a mistake in the commit message (""without block"" -> ""with block"").",True,{}
mruby/mruby,https://github.com/mruby/mruby,4679,2019-08-31T08:06:48Z,2019-08-31T13:14:15Z,2019-09-23T00:37:37Z,MERGED,True,8,9,3,https://github.com/shuujii,Implement `mrb_immediate_p` macro for `MRB_WORD_BOXING`,1,[],https://github.com/mruby/mruby/pull/4679,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4679,"The default implementation of mrb_immediate_p uses mrb_type. However,
in MRB_WORD_BOXING, mrb_type has many branches and is inefficient, so
provide an implementation that does not use mrb_type.","The default implementation of mrb_immediate_p uses mrb_type. However,
in MRB_WORD_BOXING, mrb_type has many branches and is inefficient, so
provide an implementation that does not use mrb_type.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4679,2019-08-31T08:06:48Z,2019-08-31T13:14:15Z,2019-09-23T00:37:37Z,MERGED,True,8,9,3,https://github.com/shuujii,Implement `mrb_immediate_p` macro for `MRB_WORD_BOXING`,1,[],https://github.com/mruby/mruby/pull/4679,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4679#issuecomment-526810761,"The default implementation of mrb_immediate_p uses mrb_type. However,
in MRB_WORD_BOXING, mrb_type has many branches and is inefficient, so
provide an implementation that does not use mrb_type.","BTW, the default implementation of mrb_immediate_p returns true for MRB_TT_FREE. Is this intentional?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4679,2019-08-31T08:06:48Z,2019-08-31T13:14:15Z,2019-09-23T00:37:37Z,MERGED,True,8,9,3,https://github.com/shuujii,Implement `mrb_immediate_p` macro for `MRB_WORD_BOXING`,1,[],https://github.com/mruby/mruby/pull/4679,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4679#issuecomment-526829466,"The default implementation of mrb_immediate_p uses mrb_type. However,
in MRB_WORD_BOXING, mrb_type has many branches and is inefficient, so
provide an implementation that does not use mrb_type.","MRB_TT_FREE objects should not be considered as immediate. Although MRB_TT_FREE should not be leaked in the userspace, thus should not cause any problem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4680,2019-08-31T10:47:10Z,2019-12-09T11:53:03Z,2019-12-09T11:53:03Z,CLOSED,False,143,4,5,https://github.com/ukrainskiysergey,Implement numbered parameters,1,[],https://github.com/mruby/mruby/pull/4680,https://github.com/ukrainskiysergey,1,https://github.com/mruby/mruby/pull/4680,"The implementation of numbered parameters from Ruby 2.7.
Still not fully compatible with ruby's implementation.","The implementation of numbered parameters from Ruby 2.7.
Still not fully compatible with ruby's implementation.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4680,2019-08-31T10:47:10Z,2019-12-09T11:53:03Z,2019-12-09T11:53:03Z,CLOSED,False,143,4,5,https://github.com/ukrainskiysergey,Implement numbered parameters,1,[],https://github.com/mruby/mruby/pull/4680,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4680#issuecomment-526830704,"The implementation of numbered parameters from Ruby 2.7.
Still not fully compatible with ruby's implementation.",Thank you. May I take care of this patch to adopt the latest behavior in CRuby?,True,{'THUMBS_UP': ['https://github.com/ukrainskiysergey']}
mruby/mruby,https://github.com/mruby/mruby,4680,2019-08-31T10:47:10Z,2019-12-09T11:53:03Z,2019-12-09T11:53:03Z,CLOSED,False,143,4,5,https://github.com/ukrainskiysergey,Implement numbered parameters,1,[],https://github.com/mruby/mruby/pull/4680,https://github.com/ukrainskiysergey,3,https://github.com/mruby/mruby/pull/4680#issuecomment-526846745,"The implementation of numbered parameters from Ruby 2.7.
Still not fully compatible with ruby's implementation.",No problem.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4680,2019-08-31T10:47:10Z,2019-12-09T11:53:03Z,2019-12-09T11:53:03Z,CLOSED,False,143,4,5,https://github.com/ukrainskiysergey,Implement numbered parameters,1,[],https://github.com/mruby/mruby/pull/4680,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4680#issuecomment-563202796,"The implementation of numbered parameters from Ruby 2.7.
Still not fully compatible with ruby's implementation.",The PR is merged (with modification to support numbered parameters like _1).,True,{}
mruby/mruby,https://github.com/mruby/mruby,4681,2019-09-01T00:43:00Z,2019-09-01T04:01:59Z,2019-09-23T00:37:32Z,MERGED,True,3,1,2,https://github.com/shuujii,`Array#permutation` with a negative argument should not yield,1,[],https://github.com/mruby/mruby/pull/4681,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4681,"Before this patch:
$ bin/mruby -e '[1].permutation(-1){|v| p v}'  #=> [1]

After this patch (same as Ruby):
$ bin/mruby -e '[1].permutation(-1){|v| p v}'  #=> no output","Before this patch:
$ bin/mruby -e '[1].permutation(-1){|v| p v}'  #=> [1]

After this patch (same as Ruby):
$ bin/mruby -e '[1].permutation(-1){|v| p v}'  #=> no output",True,{}
mruby/mruby,https://github.com/mruby/mruby,4683,2019-09-02T00:06:57Z,2019-09-02T07:50:48Z,2019-09-23T00:37:34Z,MERGED,True,28,12,2,https://github.com/shuujii,`Enumerator::Chain#rewind` shouldn't rewind elements aren't iterated,1,[],https://github.com/mruby/mruby/pull/4683,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4683,"Example:
# example.rb
e = [1]
def e.rewind; p :r end
c = e.chain(e)
c.each{break c}.rewind
Before this patch:
$ bin/mruby example.rb
:r
:r

After this patch (same as Ruby):
$ bin/mruby example.rb
:r","Example:
# example.rb
e = [1]
def e.rewind; p :r end
c = e.chain(e)
c.each{break c}.rewind
Before this patch:
$ bin/mruby example.rb
:r
:r

After this patch (same as Ruby):
$ bin/mruby example.rb
:r",True,{}
mruby/mruby,https://github.com/mruby/mruby,4686,2019-09-03T12:51:44Z,2019-09-03T16:25:01Z,2019-09-23T00:37:32Z,MERGED,True,17,3,1,https://github.com/shuujii,Add to `doc/limitations.md` about `nil?` redefinition; ref 4996709 [ci skip],1,[],https://github.com/mruby/mruby/pull/4686,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4686,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4687,2019-09-04T13:51:06Z,2019-09-05T02:15:35Z,2019-09-23T00:37:36Z,MERGED,True,2,2,1,https://github.com/shuujii,Fix argument specs to `BasicObject`,1,[],https://github.com/mruby/mruby/pull/4687,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4687,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4690,2019-09-05T10:56:13Z,2019-09-05T13:59:35Z,2019-09-05T13:59:35Z,MERGED,True,7,0,1,https://github.com/takumakume,Add `assert_not_nil` method,1,[],https://github.com/mruby/mruby/pull/4690,https://github.com/takumakume,1,https://github.com/mruby/mruby/pull/4690,"I added assert_not_nil method.
Of course there are other ways.
assert_true target != nil
assert_false target.nil?
#etc...
However, I thought it was superior in terms of readability.
assert_not_nil target
I did the following check.
assert('assert_not_nil pass') do
  assert_not_nil 'hoge'
end

assert('assert_not_nil fail') do
  assert_not_nil nil
end
Fail: assert_not_nil fail (core)
 - Assertion[1]
    Expected nil to not be nil.

Please check.","I added assert_not_nil method.
Of course there are other ways.
assert_true target != nil
assert_false target.nil?
#etc...
However, I thought it was superior in terms of readability.
assert_not_nil target
I did the following check.
assert('assert_not_nil pass') do
  assert_not_nil 'hoge'
end

assert('assert_not_nil fail') do
  assert_not_nil nil
end
Fail: assert_not_nil fail (core)
 - Assertion[1]
    Expected nil to not be nil.

Please check.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4691,2019-09-05T11:02:20Z,2019-09-05T14:02:54Z,2019-09-23T00:37:35Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix `Range#max` test (`TypeError` is raised) on 32-bit mode with word boxing,1,[],https://github.com/mruby/mruby/pull/4691,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4691,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4692,2019-09-06T04:44:10Z,2019-09-06T13:23:16Z,2019-09-23T00:37:33Z,MERGED,True,68,55,3,https://github.com/shuujii,Avoid bit fields in `mrb_value`; ref b2c3d88f,1,[],https://github.com/mruby/mruby/pull/4692,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4692,"The changes at b2c3d88 were inappropriate because the memory layout of bit
fields are implementation defined. Therefor, I fixed it not to use bit
fields.","The changes at b2c3d88 were inappropriate because the memory layout of bit
fields are implementation defined. Therefor, I fixed it not to use bit
fields.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4693,2019-09-07T12:55:23Z,2019-09-07T13:16:55Z,2019-09-23T00:37:38Z,MERGED,True,21,11,1,https://github.com/shuujii,Increase symbol bit size on 32-bit mode with `MRB_WORD_BOXING`,1,[],https://github.com/mruby/mruby/pull/4693,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4693,This change increases the max length of lower inline symbols to 5 bytes.,This change increases the max length of lower inline symbols to 5 bytes.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4694,2019-09-08T03:31:52Z,2019-09-08T13:44:07Z,2019-09-23T00:37:38Z,MERGED,True,1,1,1,https://github.com/shuujii,Optimize `mrb_bool()` with `MRB_WORD_BOXING`,1,[],https://github.com/mruby/mruby/pull/4694,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4694,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4695,2019-09-08T12:05:36Z,2019-09-08T13:46:26Z,2019-09-09T13:27:15Z,MERGED,True,4,0,1,https://github.com/dearblue,Fix `mrb_vformat()` crashes with `MRB_INT16`,1,[],https://github.com/mruby/mruby/pull/4695,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4695,"If MRB_INT16 is specified, the variable length argument mrb_int is converted to int.

When building with GCC (gcc-9.2.0), a warning is displayed.
src/error.c: In function 'mrb_vformat':
src/error.c:329:65: warning: 'mrb_int' {aka 'short int'} is promoted to 'int' when passed through '...'
  329 |           i = *p == 'd' ? (mrb_int)va_arg(ap, int) : va_arg(ap, mrb_int);
      |                                                                 ^
src/error.c:329:65: note: (so you should pass 'int' not 'mrb_int' {aka 'short int'} to 'va_arg')
src/error.c:329:65: note: if this code is reached, the program will abort

If I run it on FreeBSD as it is, it crashed by SIGILL.

NOTE: This patch may be undesirable because the value given as int will be converted to 16-bit mrb_int.","If MRB_INT16 is specified, the variable length argument mrb_int is converted to int.

When building with GCC (gcc-9.2.0), a warning is displayed.
src/error.c: In function 'mrb_vformat':
src/error.c:329:65: warning: 'mrb_int' {aka 'short int'} is promoted to 'int' when passed through '...'
  329 |           i = *p == 'd' ? (mrb_int)va_arg(ap, int) : va_arg(ap, mrb_int);
      |                                                                 ^
src/error.c:329:65: note: (so you should pass 'int' not 'mrb_int' {aka 'short int'} to 'va_arg')
src/error.c:329:65: note: if this code is reached, the program will abort

If I run it on FreeBSD as it is, it crashed by SIGILL.

NOTE: This patch may be undesirable because the value given as int will be converted to 16-bit mrb_int.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4697,2019-09-09T13:38:15Z,2019-09-09T13:51:16Z,2019-09-23T00:37:34Z,MERGED,True,2,2,1,https://github.com/shuujii,Fix `Class.new` argument specs,1,[],https://github.com/mruby/mruby/pull/4697,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4697,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4698,2019-09-09T13:44:14Z,2019-09-09T14:14:33Z,2019-09-09T14:39:33Z,CLOSED,False,31,7,3,https://github.com/dearblue,Deduplicate constant names,2,[],https://github.com/mruby/mruby/pull/4698,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4698,"If the module/class do include, mod.constants returned duplicate constant names.
Before patched:
p Object.constants.grep(:BasicObject)
# => [:BasicObject, :BasicObject]
# BasicObject::BasicObject and Kernel::BasicObject
NOTE:

The patch includes the mrb_ary_index() function as an API.
Since the situation continues from before mruby-1.0.0, I think that it is also one hand to make the specification.
At least I'm not in trouble.","If the module/class do include, mod.constants returned duplicate constant names.
Before patched:
p Object.constants.grep(:BasicObject)
# => [:BasicObject, :BasicObject]
# BasicObject::BasicObject and Kernel::BasicObject
NOTE:

The patch includes the mrb_ary_index() function as an API.
Since the situation continues from before mruby-1.0.0, I think that it is also one hand to make the specification.
At least I'm not in trouble.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4698,2019-09-09T13:44:14Z,2019-09-09T14:14:33Z,2019-09-09T14:39:33Z,CLOSED,False,31,7,3,https://github.com/dearblue,Deduplicate constant names,2,[],https://github.com/mruby/mruby/pull/4698,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4698#issuecomment-529495433,"If the module/class do include, mod.constants returned duplicate constant names.
Before patched:
p Object.constants.grep(:BasicObject)
# => [:BasicObject, :BasicObject]
# BasicObject::BasicObject and Kernel::BasicObject
NOTE:

The patch includes the mrb_ary_index() function as an API.
Since the situation continues from before mruby-1.0.0, I think that it is also one hand to make the specification.
At least I'm not in trouble.",I made my own fix because I don't want to disclose mrb_ary_index that calls mrb_equal which could reenter into VM via mrb_funcall.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4698,2019-09-09T13:44:14Z,2019-09-09T14:14:33Z,2019-09-09T14:39:33Z,CLOSED,False,31,7,3,https://github.com/dearblue,Deduplicate constant names,2,[],https://github.com/mruby/mruby/pull/4698,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4698#issuecomment-529507568,"If the module/class do include, mod.constants returned duplicate constant names.
Before patched:
p Object.constants.grep(:BasicObject)
# => [:BasicObject, :BasicObject]
# BasicObject::BasicObject and Kernel::BasicObject
NOTE:

The patch includes the mrb_ary_index() function as an API.
Since the situation continues from before mruby-1.0.0, I think that it is also one hand to make the specification.
At least I'm not in trouble.","OK, thank you.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4699,2019-09-09T13:54:23Z,2019-09-10T00:24:28Z,2019-09-10T00:24:28Z,MERGED,True,27,0,1,https://github.com/takkaw,add special local variable _ in mirb,2,[],https://github.com/mruby/mruby/pull/4699,https://github.com/takkaw,1,https://github.com/mruby/mruby/pull/4699,"I think underscore variable in irb is useful.
This pull request is adding it to mirb.","I think underscore variable in irb is useful.
This pull request is adding it to mirb.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4699,2019-09-09T13:54:23Z,2019-09-10T00:24:28Z,2019-09-10T00:24:28Z,MERGED,True,27,0,1,https://github.com/takkaw,add special local variable _ in mirb,2,[],https://github.com/mruby/mruby/pull/4699,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4699#issuecomment-529496640,"I think underscore variable in irb is useful.
This pull request is adding it to mirb.","Thank you. But I think this useful _ variable should be turned on by default. Instead of
#ifdef ENABLE_MIRB_UNDERSCORE
You should
#ifndef DISABLE_MIRB_UNDERSCORE",True,{}
mruby/mruby,https://github.com/mruby/mruby,4699,2019-09-09T13:54:23Z,2019-09-10T00:24:28Z,2019-09-10T00:24:28Z,MERGED,True,27,0,1,https://github.com/takkaw,add special local variable _ in mirb,2,[],https://github.com/mruby/mruby/pull/4699,https://github.com/takkaw,3,https://github.com/mruby/mruby/pull/4699#issuecomment-529515617,"I think underscore variable in irb is useful.
This pull request is adding it to mirb.","Thank you for your comment.
I changed it to be enabled by default.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4700,2019-09-10T07:52:02Z,2019-09-10T08:00:30Z,2019-09-23T00:37:38Z,MERGED,True,10,3,1,https://github.com/shuujii,Refine documentation for C99 compliance; ref #4685 [ci skip],1,[],https://github.com/mruby/mruby/pull/4700,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4700,The refinement was based on comment from @matz.,The refinement was based on comment from @matz.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4701,2019-09-11T08:00:41Z,2019-09-11T09:47:28Z,2019-09-23T00:37:33Z,MERGED,True,14,10,2,https://github.com/shuujii,Drop test dependency from `mruby-string-ext` to `mruby-enumerator`,1,[],https://github.com/mruby/mruby/pull/4701,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4701,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4703,2019-09-12T13:00:12Z,2019-09-12T13:53:48Z,2019-09-23T00:37:39Z,MERGED,True,20,26,2,https://github.com/shuujii,Refine `tasks/toolchains/(gcc|clang).rake`,1,[],https://github.com/mruby/mruby/pull/4703,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4703,"Make sure to specify -std=gnu99 for C compiler flag.
Make sure to specify -Wzero-length-array for C/C++ compiler flag (Clang).
Extract similar codes.","Make sure to specify -std=gnu99 for C compiler flag.
Make sure to specify -Wzero-length-array for C/C++ compiler flag (Clang).
Extract similar codes.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4703,2019-09-12T13:00:12Z,2019-09-12T13:53:48Z,2019-09-23T00:37:39Z,MERGED,True,20,26,2,https://github.com/shuujii,Refine `tasks/toolchains/(gcc|clang).rake`,1,[],https://github.com/mruby/mruby/pull/4703,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4703#issuecomment-530847199,"Make sure to specify -std=gnu99 for C compiler flag.
Make sure to specify -Wzero-length-array for C/C++ compiler flag (Clang).
Extract similar codes.","After applying this patch, I get the warnings like the following from C++ compilation:
cc1plus: warning: command line option ‘-Wdeclaration-after-statement’ is valid for C/ObjC but not for C++
cc1plus: warning: command line option ‘-std=gnu99’ is valid for C/ObjC but not for C++

Probably we should fix this.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4703,2019-09-12T13:00:12Z,2019-09-12T13:53:48Z,2019-09-23T00:37:39Z,MERGED,True,20,26,2,https://github.com/shuujii,Refine `tasks/toolchains/(gcc|clang).rake`,1,[],https://github.com/mruby/mruby/pull/4703,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4703#issuecomment-530880050,"Make sure to specify -std=gnu99 for C compiler flag.
Make sure to specify -Wzero-length-array for C/C++ compiler flag (Clang).
Extract similar codes.","It seems that a warning has already been issued at mruby-1.3.0.
% git co --detach 1.3.0
HEAD is now at 277391e1 Set the mruby-1.3.0 release date to `2017-7-4`.
% cat c++_config.rb
MRuby::Build.new do
  toolchain :gcc
  enable_cxx_abi
end
% gcc48 --version
gcc48 (FreeBSD Ports Collection) 4.8.5
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

% CC=gcc48 CXX=g++48 MRUBY_CONFIG=c++_config.rb ./minirake clean all
(in /usr/home/dearblue/codecandy/ruby/mruby.git)
Cleaned up target build folder
CC    src/variable.c -> build/host/src/variable.o
cc1plus: warning: command line option '-Wdeclaration-after-statement' is valid for C/ObjC but not for C++ [enabled by default]
cc1plus: warning: command line option '-std=gnu99' is valid for C/ObjC but not for C++ [enabled by default]
CC    src/vm.c -> build/host/src/vm.o
cc1plus: warning: command line option '-Wdeclaration-after-statement' is valid for C/ObjC but not for C++ [enabled by default]
cc1plus: warning: command line option '-std=gnu99' is valid for C/ObjC but not for C++ [enabled by default]
...((snip))...
If mruby-1.2.0 is built with gcc-9.2.0, a warning will be displayed.
% git co --detach 1.2.0
HEAD is now at 22464fe5 mruby-1.2.0
% CC=gcc9 CXX=g++9 MRUBY_CONFIG=c++_config.rb ./minirake clean all
(in /usr/home/dearblue/codecandy/ruby/mruby.git)
Cleaned up target build folder
...((snip))...
CC    build/host/src/vm.cxx -> build/host/src/vm.cxx.o
cc1plus: warning: '-Werror=' argument '-Werror=implicit-function-declaration' is not valid for C++
CC    build/host/src/error.cxx -> build/host/src/error.cxx.o
cc1plus: warning: '-Werror=' argument '-Werror=implicit-function-declaration' is not valid for C++
...((snip))...
It seems to have been printed on travis-ci (https://travis-ci.org/mruby/mruby/jobs/249829152#L501) at 1.3.0.
When I noticed, I thought it was ""something like that"" and neglected to report it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4703,2019-09-12T13:00:12Z,2019-09-12T13:53:48Z,2019-09-23T00:37:39Z,MERGED,True,20,26,2,https://github.com/shuujii,Refine `tasks/toolchains/(gcc|clang).rake`,1,[],https://github.com/mruby/mruby/pull/4703,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4703#issuecomment-531066976,"Make sure to specify -std=gnu99 for C compiler flag.
Make sure to specify -Wzero-length-array for C/C++ compiler flag (Clang).
Extract similar codes.",The warnings seem to have already been reported at #3618. I will think about a solution.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4703,2019-09-12T13:00:12Z,2019-09-12T13:53:48Z,2019-09-23T00:37:39Z,MERGED,True,20,26,2,https://github.com/shuujii,Refine `tasks/toolchains/(gcc|clang).rake`,1,[],https://github.com/mruby/mruby/pull/4703,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4703#issuecomment-531072513,"Make sure to specify -std=gnu99 for C compiler flag.
Make sure to specify -Wzero-length-array for C/C++ compiler flag (Clang).
Extract similar codes.","I have added workaround in d4af765
I'd like to hear if there's a better solution.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4704,2019-09-13T09:05:27Z,2019-09-13T10:59:40Z,2019-09-23T00:37:37Z,MERGED,True,10,6,4,https://github.com/shuujii,"Fix warnings for invalid C++ option with `enable_cxx_abi`; ref #3618, #4703",1,[],https://github.com/mruby/mruby/pull/4704,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4704,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4705,2019-09-13T12:55:02Z,2019-09-13T13:55:51Z,2019-09-23T00:37:40Z,MERGED,True,3,2,1,https://github.com/shuujii,"Revert part of ""Refine `tasks/toolchains/(gcc|clang).rake`"" (07c6b7f0)",1,[],https://github.com/mruby/mruby/pull/4705,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4705,"-Wzero-length-array is not a mandatory option, so the original is better.","-Wzero-length-array is not a mandatory option, so the original is better.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4707,2019-09-14T02:34:49Z,2019-09-14T05:35:37Z,2019-09-23T00:37:41Z,MERGED,True,1,4,1,https://github.com/shuujii,Use `%C` to `mrb_name_error` in `mrb_method_search`; ref 5890c7d5,1,[],https://github.com/mruby/mruby/pull/4707,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4707,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4710,2019-09-15T09:12:27Z,2019-09-15T09:19:28Z,2019-09-23T00:37:38Z,MERGED,True,6,16,1,https://github.com/shuujii,Refactor `mrb_type` in `include/mruby/boxing_word.h`,1,[],https://github.com/mruby/mruby/pull/4710,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4710,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4712,2019-09-15T15:46:47Z,2019-09-15T22:47:18Z,2019-09-16T10:02:20Z,MERGED,True,21,11,1,https://github.com/dearblue,Fix mruby-io,4,[],https://github.com/mruby/mruby/pull/4712,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4712,"""Fix broken UTF-8 characters by IO#getc"" (992ba47) increases the object code size without MRB_UTF8_STRING too, so I would like to improve if there is a better solution (but no idea).","""Fix broken UTF-8 characters by IO#getc"" (992ba47) increases the object code size without MRB_UTF8_STRING too, so I would like to improve if there is a better solution (but no idea).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4713,2019-09-16T07:13:13Z,2019-09-16T23:31:19Z,2019-09-23T00:37:36Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix argument specs to `Enumerable`,1,[],https://github.com/mruby/mruby/pull/4713,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4713,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4714,2019-09-16T10:17:57Z,2019-09-16T23:41:52Z,2019-09-29T01:55:50Z,MERGED,True,69,91,1,https://github.com/dearblue,Shrink `mrb_get_args()`,2,[],https://github.com/mruby/mruby/pull/4714,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4714,"Cache argv first in each specifiers for mrb_get_args(); ref #3090
In terms of specifiers, argv is never referenced after a method call as shown in #3090.
Reduction of object code can be expected.
If you need to refer to argv after a method call in the same loop, update argv after the method call.


Integrated the ! modifier part.
As a side effect, all specifiers now accept the ! modifier.



The object file size comparison uses cross-compileable GCC available in FreeBSD 12.0.
Only src/class.c is compiled with -Os switch.
The compared branches are:
0.2f9b1fdb0 : Currently master
1.f312638ec : Cache argv first in each specifiers for mrb_get_args()
2.62499c625 : Shrink mrb_get_args()
3.a7f339319 : Integrate processing of A, H, S and C specifiers (Not included in this patch)
File size  File name

    45968  2.62499c625/class.o@aarch64-unknown-freebsd12.0-gcc
    46216  1.f312638ec/class.o@aarch64-unknown-freebsd12.0-gcc
    46552  3.a7f339319/class.o@aarch64-unknown-freebsd12.0-gcc
    46656  0.2f9b1fdb0/class.o@aarch64-unknown-freebsd12.0-gcc
          
    34908  3.a7f339319/class.o@i386-unknown-freebsd12.0-gcc
    35056  2.62499c625/class.o@i386-unknown-freebsd12.0-gcc
    35184  1.f312638ec/class.o@i386-unknown-freebsd12.0-gcc
    35708  0.2f9b1fdb0/class.o@i386-unknown-freebsd12.0-gcc
          
    56620  1.f312638ec/class.o@mips-unknown-freebsd12.0-gcc
    56852  2.62499c625/class.o@mips-unknown-freebsd12.0-gcc
    57044  0.2f9b1fdb0/class.o@mips-unknown-freebsd12.0-gcc
    57416  3.a7f339319/class.o@mips-unknown-freebsd12.0-gcc
          
    62872  1.f312638ec/class.o@powerpc64-unknown-freebsd12.0-gcc
    62984  2.62499c625/class.o@powerpc64-unknown-freebsd12.0-gcc
    63328  0.2f9b1fdb0/class.o@powerpc64-unknown-freebsd12.0-gcc
    64392  3.a7f339319/class.o@powerpc64-unknown-freebsd12.0-gcc
          
    40184  2.62499c625/class.o@psp-gcc
    40388  1.f312638ec/class.o@psp-gcc
    40680  3.a7f339319/class.o@psp-gcc
    41052  0.2f9b1fdb0/class.o@psp-gcc
          
    85792  3.a7f339319/class.o@riscv64-unknown-freebsd12.0-gcc
    85856  1.f312638ec/class.o@riscv64-unknown-freebsd12.0-gcc
    86568  2.62499c625/class.o@riscv64-unknown-freebsd12.0-gcc
    87456  0.2f9b1fdb0/class.o@riscv64-unknown-freebsd12.0-gcc
          
    46640  2.62499c625/class.o@sparc64-unknown-freebsd12.0-gcc
    46816  1.f312638ec/class.o@sparc64-unknown-freebsd12.0-gcc
    47256  0.2f9b1fdb0/class.o@sparc64-unknown-freebsd12.0-gcc
    47344  3.a7f339319/class.o@sparc64-unknown-freebsd12.0-gcc
          
    46984  2.62499c625/class.o@x86_64-unknown-freebsd12.0-gcc
    47288  1.f312638ec/class.o@x86_64-unknown-freebsd12.0-gcc
    47720  0.2f9b1fdb0/class.o@x86_64-unknown-freebsd12.0-gcc
    47752  3.a7f339319/class.o@x86_64-unknown-freebsd12.0-gcc
          
    52776  3.a7f339319/class.o@xtensa-esp32-elf-gcc
    52996  2.62499c625/class.o@xtensa-esp32-elf-gcc
    53548  1.f312638ec/class.o@xtensa-esp32-elf-gcc
    54900  0.2f9b1fdb0/class.o@xtensa-esp32-elf-gcc","Cache argv first in each specifiers for mrb_get_args(); ref #3090
In terms of specifiers, argv is never referenced after a method call as shown in #3090.
Reduction of object code can be expected.
If you need to refer to argv after a method call in the same loop, update argv after the method call.


Integrated the ! modifier part.
As a side effect, all specifiers now accept the ! modifier.



The object file size comparison uses cross-compileable GCC available in FreeBSD 12.0.
Only src/class.c is compiled with -Os switch.
The compared branches are:
0.2f9b1fdb0 : Currently master
1.f312638ec : Cache argv first in each specifiers for mrb_get_args()
2.62499c625 : Shrink mrb_get_args()
3.a7f339319 : Integrate processing of A, H, S and C specifiers (Not included in this patch)
File size  File name

    45968  2.62499c625/class.o@aarch64-unknown-freebsd12.0-gcc
    46216  1.f312638ec/class.o@aarch64-unknown-freebsd12.0-gcc
    46552  3.a7f339319/class.o@aarch64-unknown-freebsd12.0-gcc
    46656  0.2f9b1fdb0/class.o@aarch64-unknown-freebsd12.0-gcc
          
    34908  3.a7f339319/class.o@i386-unknown-freebsd12.0-gcc
    35056  2.62499c625/class.o@i386-unknown-freebsd12.0-gcc
    35184  1.f312638ec/class.o@i386-unknown-freebsd12.0-gcc
    35708  0.2f9b1fdb0/class.o@i386-unknown-freebsd12.0-gcc
          
    56620  1.f312638ec/class.o@mips-unknown-freebsd12.0-gcc
    56852  2.62499c625/class.o@mips-unknown-freebsd12.0-gcc
    57044  0.2f9b1fdb0/class.o@mips-unknown-freebsd12.0-gcc
    57416  3.a7f339319/class.o@mips-unknown-freebsd12.0-gcc
          
    62872  1.f312638ec/class.o@powerpc64-unknown-freebsd12.0-gcc
    62984  2.62499c625/class.o@powerpc64-unknown-freebsd12.0-gcc
    63328  0.2f9b1fdb0/class.o@powerpc64-unknown-freebsd12.0-gcc
    64392  3.a7f339319/class.o@powerpc64-unknown-freebsd12.0-gcc
          
    40184  2.62499c625/class.o@psp-gcc
    40388  1.f312638ec/class.o@psp-gcc
    40680  3.a7f339319/class.o@psp-gcc
    41052  0.2f9b1fdb0/class.o@psp-gcc
          
    85792  3.a7f339319/class.o@riscv64-unknown-freebsd12.0-gcc
    85856  1.f312638ec/class.o@riscv64-unknown-freebsd12.0-gcc
    86568  2.62499c625/class.o@riscv64-unknown-freebsd12.0-gcc
    87456  0.2f9b1fdb0/class.o@riscv64-unknown-freebsd12.0-gcc
          
    46640  2.62499c625/class.o@sparc64-unknown-freebsd12.0-gcc
    46816  1.f312638ec/class.o@sparc64-unknown-freebsd12.0-gcc
    47256  0.2f9b1fdb0/class.o@sparc64-unknown-freebsd12.0-gcc
    47344  3.a7f339319/class.o@sparc64-unknown-freebsd12.0-gcc
          
    46984  2.62499c625/class.o@x86_64-unknown-freebsd12.0-gcc
    47288  1.f312638ec/class.o@x86_64-unknown-freebsd12.0-gcc
    47720  0.2f9b1fdb0/class.o@x86_64-unknown-freebsd12.0-gcc
    47752  3.a7f339319/class.o@x86_64-unknown-freebsd12.0-gcc
          
    52776  3.a7f339319/class.o@xtensa-esp32-elf-gcc
    52996  2.62499c625/class.o@xtensa-esp32-elf-gcc
    53548  1.f312638ec/class.o@xtensa-esp32-elf-gcc
    54900  0.2f9b1fdb0/class.o@xtensa-esp32-elf-gcc",True,{}
mruby/mruby,https://github.com/mruby/mruby,4715,2019-09-16T11:39:40Z,2019-09-16T23:40:04Z,2019-09-29T01:55:57Z,MERGED,True,8,32,7,https://github.com/dearblue,"Entrust ""no block given"" error to `mrb_get_args()`",1,[],https://github.com/mruby/mruby/pull/4715,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4715,Some error messages will be changed.,Some error messages will be changed.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/MaskRay,1,https://github.com/mruby/mruby/pull/4716,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/MaskRay,2,https://github.com/mruby/mruby/pull/4716#issuecomment-531828658,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","This is how I build mruby. I hope I do it correctly:
# build_config.rb
MRuby::Build.new('test') do |conf|
...
  conf.cc.defines = %w(MRB_USE_LINK_TIME_RO_DATA_P)
# By default ./minirake also builds host-debug and host, which can be time consuming.
bear ./minirake ~/Dev/mruby/build/test/bin/mirb",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/Asmod4n,3,https://github.com/mruby/mruby/pull/4716#issuecomment-531862501,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8",This makes mrb_read_irep leak memory on Darwin platforms when the supplied buffer isn’t statically allocated.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4716#issuecomment-531998350,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","@MaskRay If you address the memory leak issue reported by @Asmod4n, I'd be happy to merge the PR.
If you add migration from MRB_USE_ETEXT_EDATA, I will be more than happy.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/MaskRay,5,https://github.com/mruby/mruby/pull/4716#issuecomment-532032479,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","@Asmod4n Can you please check what memory leak this change causes? If this change causes a memory leak, I am certain w/o this change -UMRB_USE_ETEXT_EDATA will also cause a memory leak. Then, we should figure out the memory leak, though, I don't think it is caused by this change.
Using the end of .data or __data is dangerous. .data is writable (SHF_WRITE on ELF platforms), so its contents (e.g., interned strings) can be modified.
Uses who understand the implication can write
static mrb_bool
mrb_ro_data_p(const char *p)
{
  return (const char*)get_etext() < p && p < (const char*)get_edata();
}
and link it with mruby.

If you add migration from MRB_USE_ETEXT_EDATA, I will be more than happy.

How can I add the migration plan? I just started at looking at this repo 2 days ago...",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/matz,6,https://github.com/mruby/mruby/pull/4716#issuecomment-532055438,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","Some people may have already added MRB_USE_ETEXT_EDATA to their build configuration, so when MRB_USE_ETEXT_EDATA is defined, MRB_USE_LINK_TIME_RO_DATA_P should be defined too, i.e.
#ifdef MRB_USE_ETEXT_EDATA
# define MRB_USE_LINK_TIME_RO_DATA_P
#endif",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/MaskRay,7,https://github.com/mruby/mruby/pull/4716#issuecomment-532059418,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","I decide to go with:
#if defined(MRB_USE_ETEXT_EDATA) && !defined(MRB_USE_LINK_TIME_RO_DATA_P)
# warning MRB_USE_ETEXT_EDATA is deprecated. Define MRB_USE_LINK_TIME_RO_DATA_P instead.
# define MRB_USE_LINK_TIME_RO_DATA_P
#endif
They will see a plethora of warnings because mruby/value.h is transitively included in many files, but it should help users to migrate.
CC    build/test/mrblib/mrblib.c -> build/test/mrblib/mrblib.o
In file included from /home/ray/Dev/mruby/include/mruby.h:92,
                 from /home/ray/Dev/mruby/build/test/mrblib/mrblib.c:1:
/home/ray/Dev/mruby/include/mruby/value.h:313:3: warning: #warning MRB_USE_ETEXT_EDATA is deprecated. Define MRB_USE_LINK_TIME_RO_DATA_P instead. [-Wcpp]
 # warning MRB_USE_ETEXT_EDATA is deprecated. Define MRB_USE_LINK_TIME_RO_DATA_P instead.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/Asmod4n,8,https://github.com/mruby/mruby/pull/4716#issuecomment-532089992,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","My bad, it doesn’t leak memory but it stops working when you pass it a dynamically allocated buffer. I believe that’s the reason I made the PR in the past.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/MaskRay,9,https://github.com/mruby/mruby/pull/4716#issuecomment-532102537,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","mrb_ro_data_p should return false for a dynamically allocated buffer (heap, after .bss, or a memory region created by mmap). The approach makes an assumption: all non-writable sections are placed before writable sections. This is true for the default cases of ELF linkers:

ld.bfd -z noseparate-code: R RX R RW
ld.bfd -z separate-code (default since binutils 2.31 on x86_64): R RX R RW
lld 8: R RX RW
lld 9: R RX RW(PT_GNU_RELRO) RW(non PT_GNU_RELRO)  # Yes, there are 2 PF_R|PF_W PT_LOAD segments. I'm pretty sure about the implications because I made this change.
The two symbols are here:
__ehdr_start R RX __init_array_start RW(PT_GNU_RELRO) RW(non PT_GNU_RELRO)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/dearblue,10,https://github.com/mruby/mruby/pull/4716#issuecomment-532208479,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","@MaskRay
The #warning preprocessor directive is not standard.
I think many compilers support it, but it's a proprietary extension (you can check it with gcc -Wpedantic, clang -Weverything, etc.).
A compiler that does not understand #warning may generate an error.
This is preferable because #pragma message(""Warning message"") is not an error even if the compiler does not understand it.
However, it is annoying that some compilers understand #warning but don't understand #pragma message...
As a simple example, I confirmed it with Portable C Compiler (pcc).
If you are only interested in GCC (including clang), you can use #pragma GCC warning ""Warning message"".
That said, it's relatively new.
gcc-mirror/gcc@a1f1781
I would also like to hear the opinions of people who use compilers other than recent GCC and clang.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/MaskRay,11,https://github.com/mruby/mruby/pull/4716#issuecomment-532942538,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","@dearblue
#warning ""warning""
clang -fsyntax-only -pedantic a.c
<source>:1:2: warning: #warning is a language extension [-Wpedantic]

gcc -fsyntax-only -pedangic a.c
<source>:1:2: warning: #warning is a GCC extension

    1 | #warning warning

      |  ^~~~~~~

Compilers reusing clang/gcc frontend will issue such warnings. This doesn't matter, though, as the purpose is to remind people. MSVC errors on the construct, which does not matter, because this macro should not be used on Windows.
<source>(1): fatal error C1021: invalid preprocessor command 'warning'",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/dearblue,12,https://github.com/mruby/mruby/pull/4716#issuecomment-533803498,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","Regardless of the Windows, if you use a compiler that does not support the #warning, it does not have any confusion by unrelated error message?
Currently, on Windows, the linker will complain about missing _etext and __init_array_start.
Since this is shown is a direct reason for the build to fail, I think the more preferable.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/dearblue,13,https://github.com/mruby/mruby/pull/4716#issuecomment-533803702,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8",Or you may want to surround #warning with #ifdef __GNUC __... # endif.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/MaskRay,14,https://github.com/mruby/mruby/pull/4716#issuecomment-533840827,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8","Added #ifdef __GNUC __

Since this is shown is a direct reason for the build to fail, I think the more preferable.

Though I think for this build (Windows?), MRB_USE_ETEXT_EDATA should not be defined.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4716,2019-09-16T15:11:28Z,2019-09-22T08:00:50Z,2019-09-23T04:21:45Z,MERGED,True,20,41,4,https://github.com/MaskRay,Rename MRB_USE_ETEXT_EDATA to MRB_USE_LINK_TIME_RO_DATA_P and support lld linked programs,1,[],https://github.com/mruby/mruby/pull/4716,https://github.com/dearblue,15,https://github.com/mruby/mruby/pull/4716#issuecomment-533858481,"In lld linked programs, .rodata comes before .text, thus mrb_ro_data_p
will return false for strings in .rodata. Change the lower bound from
_etext to __ehdr_start to catch these cases. This works for ld.bfd, gold
and lld, and it does not have false positives even if .init_array does
not exist.
Remove the branch that uses _edata: strings in .data can be modified so
this is semantically incorrect. Delete the __APPLE__ branch (its
manpages say get_etext() and get_edata() are strongly discouraged).
.init_array has been adopted by most ELF platforms to supersede .ctors.
Neither _etext nor _edata is used, so rename MRB_USE_ETEXT_EDATA to
MRB_USE_EHDR_START.

This removes code added by #3639 @Asmod4n You can use MRB_USE_CUSTOM_RO_DATA_P instead. The _edata approach can be wrong if the user modifies .data, so I don't think it makes lots of sense to support it by default.
Most ELF platforms support .init_array. For example, glibc has supported .init_array since 1999.
To use lld (LLVM linker), you can add -fuse-ld=lld to conf.linker.flags.
This option is supported by clang newer than Nov 9, 2013, and GCC 9 and newer.
Some Debian derivatives back port a patch to GCC 7 and 8.
Here is the readelf -S dump of my mruby executable:
...
  [11] .rodata           PROGBITS        0000000000004da0 004da0 03fdf3 00  AM  0   0 32
  [12] .eh_frame_hdr     PROGBITS        0000000000044b94 044b94 0039d4 00   A  0   0  4
  [13] .eh_frame         PROGBITS        0000000000048568 048568 00ee4c 00   A  0   0  8
  [14] .text             PROGBITS        0000000000058000 058000 08cf00 00  AX  0   0 16
  [15] .init             PROGBITS        00000000000e4f00 0e4f00 000017 00  AX  0   0  4
  [16] .fini             PROGBITS        00000000000e4f18 0e4f18 000009 00  AX  0   0  4
  [17] .plt              PROGBITS        00000000000e4f30 0e4f30 000690 00  AX  0   0 16
  [18] .fini_array       FINI_ARRAY      00000000000e6000 0e6000 000008 08  WA  0   0  8
  [19] .init_array       INIT_ARRAY      00000000000e6008 0e6008 000008 08  WA  0   0  8",Thank you.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4717,2019-09-17T00:37:43Z,2019-09-17T04:39:52Z,2019-09-23T00:37:35Z,MERGED,True,12,4,2,https://github.com/shuujii,Fix `Fixnum#(to_s|inspect)` argument specs,1,[],https://github.com/mruby/mruby/pull/4717,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4717,"Before this patch:
$ bin/mruby -e 'p 3.to_s(2)'
trace (most recent call last):
  [0] -e:1
-e:1: 'to_s': wrong number of arguments (1 for 0) (ArgumentError) 

After this patch:
$ bin/mruby -e 'p 3.to_s(2)'
""11""","Before this patch:
$ bin/mruby -e 'p 3.to_s(2)'
trace (most recent call last):
  [0] -e:1
-e:1: 'to_s': wrong number of arguments (1 for 0) (ArgumentError) 

After this patch:
$ bin/mruby -e 'p 3.to_s(2)'
""11""",True,{}
mruby/mruby,https://github.com/mruby/mruby,4719,2019-09-18T07:26:34Z,2019-09-18T08:14:01Z,2019-09-23T00:37:39Z,MERGED,True,1,9,4,https://github.com/shuujii,"Remove `mrb_get_args(mrb, """")`; ref 30f37872",1,[],https://github.com/mruby/mruby/pull/4719,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4719,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4720,2019-09-18T10:45:23Z,2019-09-18T12:52:29Z,2019-09-23T00:37:34Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix `Enumerable#filter_map` without block; ref d380c7d2,1,[],https://github.com/mruby/mruby/pull/4720,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4720,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4722,2019-09-19T11:30:46Z,2019-09-19T23:02:14Z,2019-09-23T00:37:40Z,MERGED,True,17,41,2,https://github.com/shuujii,Simplify arguments check in `String#index`,1,[],https://github.com/mruby/mruby/pull/4722,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4722,Also fix document about type of the first argument.,Also fix document about type of the first argument.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4723,2019-09-20T00:29:40Z,2019-09-20T00:46:20Z,2019-09-23T00:37:36Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `Array#difference` document [ci skip],1,[],https://github.com/mruby/mruby/pull/4723,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4723,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4724,2019-09-21T08:08:03Z,2019-09-21T08:50:22Z,2019-09-23T00:37:41Z,MERGED,True,5,5,2,https://github.com/shuujii,Use `mrb_define_method` instead of `mrb_define_alias`,1,[],https://github.com/mruby/mruby/pull/4724,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4724,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4725,2019-09-22T13:39:15Z,2019-09-22T18:30:25Z,2019-09-23T00:37:37Z,MERGED,True,22,0,2,https://github.com/shuujii,Implement all type predicate macros for `MRB_WORD_BOXING`,1,[],https://github.com/mruby/mruby/pull/4725,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4725,"The default implementations of type predicate macros use mrb_type.
But mrb_type with MRB_WORD_BOXING isn't very efficient, so the new
implementations avoid mrb_type.","The default implementations of type predicate macros use mrb_type.
But mrb_type with MRB_WORD_BOXING isn't very efficient, so the new
implementations avoid mrb_type.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4726,2019-09-23T13:09:12Z,2019-09-23T14:27:16Z,2019-11-24T01:18:24Z,MERGED,True,4,4,1,https://github.com/shuujii,Fix `Fixnum` overflow test in `Integer#<<` test,1,[],https://github.com/mruby/mruby/pull/4726,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4726,"Skip when MRB_WITHOUT_FLOAT is defined.
Make Fixnum overflow even when MRB_INT64 is defined.","Skip when MRB_WITHOUT_FLOAT is defined.
Make Fixnum overflow even when MRB_INT64 is defined.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4727,2019-09-24T13:00:18Z,2019-09-24T14:01:14Z,2019-11-24T01:18:24Z,MERGED,True,3,5,1,https://github.com/shuujii,`Exception#initialize` should not allow two or more arguments,1,[],https://github.com/mruby/mruby/pull/4727,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4727,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4728,2019-09-25T10:47:57Z,2019-09-25T14:55:56Z,2019-11-24T01:18:35Z,MERGED,True,1,3,1,https://github.com/shuujii,Remove `MRB_TT_HAS_BASIC` macro,1,[],https://github.com/mruby/mruby/pull/4728,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4728,"The value of MRB_TT_HAS_BASIC is meaningless because MRB_TT_HAS_BASIC is
no longer used with MRB_WORD_BOXING at b2c3d88.","The value of MRB_TT_HAS_BASIC is meaningless because MRB_TT_HAS_BASIC is
no longer used with MRB_WORD_BOXING at b2c3d88.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4729,2019-09-25T14:31:07Z,2019-09-25T14:55:37Z,2019-09-29T01:55:59Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix `MRB_WITHOUT_FLOAT` reversal; fix #4598,1,[],https://github.com/mruby/mruby/pull/4729,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4729,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4730,2019-09-25T14:32:08Z,2019-09-25T14:53:35Z,2019-09-29T01:56:00Z,MERGED,True,1,0,1,https://github.com/dearblue,"Add ""fall through""",1,[],https://github.com/mruby/mruby/pull/4730,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4730,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4731,2019-09-25T14:55:39Z,2019-09-25T21:30:56Z,2019-09-29T01:56:00Z,MERGED,True,4,4,1,https://github.com/dearblue,Keep the type of `posarg` consistent,1,[],https://github.com/mruby/mruby/pull/4731,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4731,Match the type with the caller and related functions.,Match the type with the caller and related functions.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4732,2019-09-25T14:56:41Z,2019-09-25T21:31:08Z,2019-09-29T01:56:02Z,MERGED,True,7,4,2,https://github.com/dearblue,Use inttypes for `snprintf()`,1,[],https://github.com/mruby/mruby/pull/4732,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4732,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4733,2019-09-26T13:35:30Z,2019-09-26T15:00:04Z,2019-11-24T01:18:42Z,MERGED,True,112,55,27,https://github.com/shuujii,Use type predicate macros instead of `mrb_type` if possible,1,[],https://github.com/mruby/mruby/pull/4733,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4733,"For efficiency with MRB_WORD_BOXING (implement type predicate macros for
all enum mrb_vtype).","For efficiency with MRB_WORD_BOXING (implement type predicate macros for
all enum mrb_vtype).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4734,2019-09-27T09:31:52Z,2019-09-27T15:20:02Z,2019-11-24T01:18:39Z,MERGED,True,29,46,2,https://github.com/shuujii,Simplify arguments check in `String#rindex`,1,[],https://github.com/mruby/mruby/pull/4734,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4734,Also fix document about type of the first argument.,Also fix document about type of the first argument.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4735,2019-09-28T06:37:02Z,2019-09-29T03:47:16Z,2019-11-24T01:18:38Z,MERGED,True,0,4,1,https://github.com/shuujii,Remove unused node type in `codegen()`,1,[],https://github.com/mruby/mruby/pull/4735,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4735,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4736,2019-09-29T02:16:33Z,2019-10-01T22:07:21Z,2019-10-03T14:33:03Z,MERGED,True,25,2,1,https://github.com/dearblue,Escape the AST string,1,[],https://github.com/mruby/mruby/pull/4736,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4736,"The string is also escaped according to 2de757e.
I checked during work #4303, but I forgot.


Before patch:
% ./build/host/bin/mruby -v -e '""foo\nbar""'
mruby 2.0.1 (2019-04-04)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_STR ""foo
bar"" len 7
irep 0x800d42310 nregs=2 nlocals=1 pools=1 syms=0 reps=0 iseq=6
file: -e
    1 000 OP_STRING     R1      L(0)    ; ""foo\nbar""
    1 003 OP_RETURN     R1
    1 005 OP_STOP


After patch:
% ./build/host/bin/mruby -v -e '""foo\nbar""'
mruby 2.0.1 (2019-04-04)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_STR ""foo\nbar"" len 7
irep 0x800d23310 nregs=2 nlocals=1 pools=1 syms=0 reps=0 iseq=6
file: -e
    1 000 OP_STRING     R1      L(0)    ; ""foo\nbar""
    1 003 OP_RETURN     R1
    1 005 OP_STOP","The string is also escaped according to 2de757e.
I checked during work #4303, but I forgot.


Before patch:
% ./build/host/bin/mruby -v -e '""foo\nbar""'
mruby 2.0.1 (2019-04-04)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_STR ""foo
bar"" len 7
irep 0x800d42310 nregs=2 nlocals=1 pools=1 syms=0 reps=0 iseq=6
file: -e
    1 000 OP_STRING     R1      L(0)    ; ""foo\nbar""
    1 003 OP_RETURN     R1
    1 005 OP_STOP


After patch:
% ./build/host/bin/mruby -v -e '""foo\nbar""'
mruby 2.0.1 (2019-04-04)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_STR ""foo\nbar"" len 7
irep 0x800d23310 nregs=2 nlocals=1 pools=1 syms=0 reps=0 iseq=6
file: -e
    1 000 OP_STRING     R1      L(0)    ; ""foo\nbar""
    1 003 OP_RETURN     R1
    1 005 OP_STOP",True,{}
mruby/mruby,https://github.com/mruby/mruby,4737,2019-09-29T02:52:30Z,2019-09-29T04:56:32Z,2019-09-29T06:15:18Z,MERGED,True,1,1,1,https://github.com/dearblue,Add an annotation about the return value,1,[],https://github.com/mruby/mruby/pull/4737,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4737,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4737,2019-09-29T02:52:30Z,2019-09-29T04:56:32Z,2019-09-29T06:15:18Z,MERGED,True,1,1,1,https://github.com/dearblue,Add an annotation about the return value,1,[],https://github.com/mruby/mruby/pull/4737,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4737#issuecomment-536248692,,This is not required. The return value from mrb_hash_fetch is either the value from the hash or the default value provided. You only need to protect the value created in the function.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4737,2019-09-29T02:52:30Z,2019-09-29T04:56:32Z,2019-09-29T06:15:18Z,MERGED,True,1,1,1,https://github.com/dearblue,Add an annotation about the return value,1,[],https://github.com/mruby/mruby/pull/4737,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4737#issuecomment-536248953,,This annotation is on mrb_hash_delete_key ().,True,{}
mruby/mruby,https://github.com/mruby/mruby,4737,2019-09-29T02:52:30Z,2019-09-29T04:56:32Z,2019-09-29T06:15:18Z,MERGED,True,1,1,1,https://github.com/dearblue,Add an annotation about the return value,1,[],https://github.com/mruby/mruby/pull/4737,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4737#issuecomment-536249068,,Oh sorry.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4738,2019-09-29T04:54:33Z,2019-09-29T05:29:08Z,2019-09-29T06:15:21Z,MERGED,True,0,1,1,https://github.com/dearblue,Remove unnecessary assignments,1,[],https://github.com/mruby/mruby/pull/4738,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4738,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4739,2019-09-29T05:08:17Z,2019-09-29T05:40:30Z,2019-09-29T06:15:22Z,MERGED,True,10,0,1,https://github.com/dearblue,Restore GC arena frequently,1,[],https://github.com/mruby/mruby/pull/4739,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4739,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4740,2019-09-29T06:24:31Z,2019-09-29T06:38:17Z,2019-10-03T14:33:03Z,MERGED,True,8,3,1,https://github.com/dearblue,Allow rethrowing `MRB_TT_BREAK`,1,[],https://github.com/mruby/mruby/pull/4740,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4740,"If a break global jump occurs from mruby space via mrb_protect(), mrb_exc_raise() will raise a TypeError exception if you use mrb_exc_raise() to resend.
As a countermeasure, this patch makes mrb_exc_raise () also accept MRB_TT_BREAK objects.
Example (C code is in last because it is a few large):


Before patched:
% gcc -Wall -g3 -Og -Iinclude rbreak.c build/host/lib/libmruby.a -lm
% ./a.out
rbreak.c:19:trial_yield
rbreak.c:33:test_enter: type=MRB_TT_BREAK
TypeError: exception object expected


After patched:
% gcc -Wall -g3 -Og -Iinclude rbreak.c build/host/lib/libmruby.a -lm
% ./a.out
rbreak.c:19:trial_yield
rbreak.c:33:test_enter: type=MRB_TT_BREAK
:broken


Sample C code (rbreak.c):
#include <mruby.h>
#include <mruby/error.h>
#include <mruby/compile.h>
#include <stdio.h>

static const char *
vtype_name(enum mrb_vtype vt)
{
  switch (vt) {
  case MRB_TT_EXCEPTION:  return ""MRB_TT_EXCEPTION"";
  case MRB_TT_BREAK:      return ""MRB_TT_BREAK"";
  default:                return NULL;
  }
}

static mrb_value
trial_yield(mrb_state *mrb, mrb_value block)
{
  fprintf(stderr, ""%s:%d:%s\n"", __FILE__, __LINE__, __func__);
  mrb_value ret = mrb_yield(mrb, block, mrb_nil_value());
  fprintf(stderr, ""%s:%d:%s\n"", __FILE__, __LINE__, __func__);
  return ret;
}

static mrb_value
test_enter(mrb_state *mrb, mrb_value self)
{
  mrb_value block;
  mrb_get_args(mrb, ""&!"", &block);

  mrb_bool has_err;
  mrb_value ret = mrb_protect(mrb, trial_yield, block, &has_err);
  fprintf(stderr, ""%s:%d:%s: type=%s\n"", __FILE__, __LINE__, __func__, vtype_name(mrb_type(ret)));

  if (has_err) {
    mrb_exc_raise(mrb, ret);
  }
  return ret;
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();
  mrb_define_method(mrb, mrb->object_class, ""test_enter"", test_enter, MRB_ARGS_ANY());

  mrb_load_string(mrb,
                  ""begin\n""
                  ""  p test_enter { break :broken }\n""
                  ""rescue => e\n""
                  ""  p e\n""
                  ""end"");
  mrb_close(mrb);

  return 0;
}","If a break global jump occurs from mruby space via mrb_protect(), mrb_exc_raise() will raise a TypeError exception if you use mrb_exc_raise() to resend.
As a countermeasure, this patch makes mrb_exc_raise () also accept MRB_TT_BREAK objects.
Example (C code is in last because it is a few large):


Before patched:
% gcc -Wall -g3 -Og -Iinclude rbreak.c build/host/lib/libmruby.a -lm
% ./a.out
rbreak.c:19:trial_yield
rbreak.c:33:test_enter: type=MRB_TT_BREAK
TypeError: exception object expected


After patched:
% gcc -Wall -g3 -Og -Iinclude rbreak.c build/host/lib/libmruby.a -lm
% ./a.out
rbreak.c:19:trial_yield
rbreak.c:33:test_enter: type=MRB_TT_BREAK
:broken


Sample C code (rbreak.c):
#include <mruby.h>
#include <mruby/error.h>
#include <mruby/compile.h>
#include <stdio.h>

static const char *
vtype_name(enum mrb_vtype vt)
{
  switch (vt) {
  case MRB_TT_EXCEPTION:  return ""MRB_TT_EXCEPTION"";
  case MRB_TT_BREAK:      return ""MRB_TT_BREAK"";
  default:                return NULL;
  }
}

static mrb_value
trial_yield(mrb_state *mrb, mrb_value block)
{
  fprintf(stderr, ""%s:%d:%s\n"", __FILE__, __LINE__, __func__);
  mrb_value ret = mrb_yield(mrb, block, mrb_nil_value());
  fprintf(stderr, ""%s:%d:%s\n"", __FILE__, __LINE__, __func__);
  return ret;
}

static mrb_value
test_enter(mrb_state *mrb, mrb_value self)
{
  mrb_value block;
  mrb_get_args(mrb, ""&!"", &block);

  mrb_bool has_err;
  mrb_value ret = mrb_protect(mrb, trial_yield, block, &has_err);
  fprintf(stderr, ""%s:%d:%s: type=%s\n"", __FILE__, __LINE__, __func__, vtype_name(mrb_type(ret)));

  if (has_err) {
    mrb_exc_raise(mrb, ret);
  }
  return ret;
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();
  mrb_define_method(mrb, mrb->object_class, ""test_enter"", test_enter, MRB_ARGS_ANY());

  mrb_load_string(mrb,
                  ""begin\n""
                  ""  p test_enter { break :broken }\n""
                  ""rescue => e\n""
                  ""  p e\n""
                  ""end"");
  mrb_close(mrb);

  return 0;
}",True,{}
mruby/mruby,https://github.com/mruby/mruby,4741,2019-09-29T10:14:15Z,2019-09-29T13:05:42Z,2019-11-24T01:18:32Z,MERGED,True,5,5,1,https://github.com/shuujii,Print missing `:` before newline in `mrb_parser_dump`,1,[],https://github.com/mruby/mruby/pull/4741,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4741,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4742,2019-09-29T14:58:14Z,2019-09-29T18:06:57Z,2019-10-03T14:33:05Z,MERGED,True,0,7,1,https://github.com/dearblue,Remove unnecessary type `mrb_hash_value`,1,[],https://github.com/mruby/mruby/pull/4742,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4742,The type mrb_hash_value is no longer used by the segmented list implementation (ref e8dcfe1 and e65d426).,The type mrb_hash_value is no longer used by the segmented list implementation (ref e8dcfe1 and e65d426).,True,{}
mruby/mruby,https://github.com/mruby/mruby,4744,2019-09-30T12:57:48Z,2019-10-01T03:16:28Z,2019-11-24T01:18:35Z,MERGED,True,3,3,1,https://github.com/shuujii,Remove a trailing space in `MRUBY_DESCRIPTION`,1,[],https://github.com/mruby/mruby/pull/4744,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4744,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4745,2019-10-01T09:16:46Z,2019-10-01T10:35:12Z,2019-11-24T01:18:24Z,MERGED,True,19,0,1,https://github.com/shuujii,Dump more node types in `mrb_parser_dump`,4,[],https://github.com/mruby/mruby/pull/4745,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4745,"Add support for the following node types:

NODE_DSYM
NODE_WORDS
NODE_SYMBOLS
NODE_LITERAL_DELIM","Add support for the following node types:

NODE_DSYM
NODE_WORDS
NODE_SYMBOLS
NODE_LITERAL_DELIM",True,{}
mruby/mruby,https://github.com/mruby/mruby,4747,2019-10-02T09:39:23Z,2019-10-02T14:36:33Z,2019-11-24T01:18:22Z,MERGED,True,7,4,1,https://github.com/shuujii,Avoid `symhash()` call for inline symbol in `sym_intern()`,1,[],https://github.com/mruby/mruby/pull/4747,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4747,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4748,2019-10-03T05:57:53Z,2019-10-03T06:18:07Z,2019-10-03T06:18:07Z,MERGED,True,6,6,1,https://github.com/HirohitoHigashi,Fix opcode semantics comment miss.,2,[],https://github.com/mruby/mruby/pull/4748,https://github.com/HirohitoHigashi,1,https://github.com/mruby/mruby/pull/4748,Fix the comment to match the actual operation.,Fix the comment to match the actual operation.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4749,2019-10-03T09:37:00Z,2019-10-03T12:30:23Z,2019-11-24T01:18:20Z,MERGED,True,16,0,1,https://github.com/shuujii,Add tests for #4746,1,[],https://github.com/mruby/mruby/pull/4749,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4749,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4750,2019-10-03T14:44:18Z,2019-10-03T23:03:39Z,2019-10-06T05:08:23Z,MERGED,True,0,2,1,https://github.com/dearblue,Remove duplicates header files in `src/pool.c`,1,[],https://github.com/mruby/mruby/pull/4750,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4750,"These are included in mruby.h.
As a background, if enable_cxx_abi is specified, the macro that defines the maximum value in stdint.h is undefined depending on the environment.

Confirmed with gcc on FreeBSD 12.0 and mingw32-gcc available on FreeBSD.
INTPTR_MAX, INT64_MAX and UINT64_MAX are defined by cstdint added in C++11. But toolchains :gcc adds -std=c++03, so the macros are not defined.
To have these defined in C++03, __STDC_CONSTANT_MACROS must be defined in advance. This is already done by mruby.h.","These are included in mruby.h.
As a background, if enable_cxx_abi is specified, the macro that defines the maximum value in stdint.h is undefined depending on the environment.

Confirmed with gcc on FreeBSD 12.0 and mingw32-gcc available on FreeBSD.
INTPTR_MAX, INT64_MAX and UINT64_MAX are defined by cstdint added in C++11. But toolchains :gcc adds -std=c++03, so the macros are not defined.
To have these defined in C++03, __STDC_CONSTANT_MACROS must be defined in advance. This is already done by mruby.h.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4750,2019-10-03T14:44:18Z,2019-10-03T23:03:39Z,2019-10-06T05:08:23Z,MERGED,True,0,2,1,https://github.com/dearblue,Remove duplicates header files in `src/pool.c`,1,[],https://github.com/mruby/mruby/pull/4750,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4750#issuecomment-537980272,"These are included in mruby.h.
As a background, if enable_cxx_abi is specified, the macro that defines the maximum value in stdint.h is undefined depending on the environment.

Confirmed with gcc on FreeBSD 12.0 and mingw32-gcc available on FreeBSD.
INTPTR_MAX, INT64_MAX and UINT64_MAX are defined by cstdint added in C++11. But toolchains :gcc adds -std=c++03, so the macros are not defined.
To have these defined in C++03, __STDC_CONSTANT_MACROS must be defined in advance. This is already done by mruby.h.","Example of undefined:
% gcc -xc++ -std=c++03 -Iinclude -Wall -Wextra -Wundef -S -O src/pool.c
In file included from include/mruby.h:71,
                 from src/pool.c:10:
include/mrbconf.h:16:5: warning: ""UINT64_MAX"" is not defined, evaluates to 0 [-Wundef]
   16 | #if UINT64_MAX == SIZE_MAX
      |     ^~~~~~~~~~
src/pool.c:16:5: warning: ""INTPTR_MAX"" is not defined, evaluates to 0 [-Wundef]
   16 | #if INTPTR_MAX == INT64_MAX
      |     ^~~~~~~~~~
src/pool.c:16:19: warning: ""INT64_MAX"" is not defined, evaluates to 0 [-Wundef]
   16 | #if INTPTR_MAX == INT64_MAX
      |                   ^~~~~~~~~
If you #include <cstdint> in advance, you will get an error:
% gcc -xc++ -include cstdint -std=c++03 -Iinclude -Wall -Wundef -S -O src/pool.c
In file included from /usr/local/lib/gcc9/include/c++/cstdint:35,
                 from <command-line>:31:
/usr/local/lib/gcc9/include/c++/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler options.
   32 | #error This file requires compiler and library support \
      |  ^~~~~",True,{}
mruby/mruby,https://github.com/mruby/mruby,4751,2019-10-04T00:42:10Z,2019-10-04T01:11:31Z,2019-11-24T01:18:37Z,MERGED,True,0,12,1,https://github.com/shuujii,Remove unused code to old Visual Studio in `tasks/toolchains/visualcpp.rake`,1,[],https://github.com/mruby/mruby/pull/4751,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4751,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4752,2019-10-05T06:30:18Z,2019-10-05T08:18:13Z,2019-11-24T01:18:23Z,MERGED,True,3,9,1,https://github.com/shuujii,Drop initialization dependency from `mruby-print` to `mruby-sprintf`,1,[],https://github.com/mruby/mruby/pull/4752,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4752,"In the old implementation, Kernel#printf raise error if mruby-sprintf
gem isn't specified before mruby-print gem. The new implementation
eliminates this ordering issue. This way is the same as Kernel#printf and
IO#printf in mruby-io gem.","In the old implementation, Kernel#printf raise error if mruby-sprintf
gem isn't specified before mruby-print gem. The new implementation
eliminates this ordering issue. This way is the same as Kernel#printf and
IO#printf in mruby-io gem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4753,2019-10-06T05:20:56Z,2019-10-13T06:21:58Z,2019-12-07T14:00:18Z,CLOSED,False,39,15,2,https://github.com/dearblue,Replace in safe `mrb_get_argv()`,1,[],https://github.com/mruby/mruby/pull/4753,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4753,"The mrb_get_argv() function now returns a copy of the argument on the stack or a splat argument.
With this change, bin/mruby built with CFLAGS=-Os will increase by 200 bytes.
% ls -l mruby@*
-rwxr-xr-x  1 dearblue  dearblue  615448 10月  6 14:06 mruby@master
-rwxr-xr-x  1 dearblue  dearblue  615648 10月  6 14:05 mruby@patched

Since the mrb_get_argv () function is MRB_API, it is expected that the arguments can be obtained correctly.
Or I think better to should delete MRB_API as an internal function.","The mrb_get_argv() function now returns a copy of the argument on the stack or a splat argument.
With this change, bin/mruby built with CFLAGS=-Os will increase by 200 bytes.
% ls -l mruby@*
-rwxr-xr-x  1 dearblue  dearblue  615448 10月  6 14:06 mruby@master
-rwxr-xr-x  1 dearblue  dearblue  615648 10月  6 14:05 mruby@patched

Since the mrb_get_argv () function is MRB_API, it is expected that the arguments can be obtained correctly.
Or I think better to should delete MRB_API as an internal function.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4753,2019-10-06T05:20:56Z,2019-10-13T06:21:58Z,2019-12-07T14:00:18Z,CLOSED,False,39,15,2,https://github.com/dearblue,Replace in safe `mrb_get_argv()`,1,[],https://github.com/mruby/mruby/pull/4753,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4753#issuecomment-538740422,"The mrb_get_argv() function now returns a copy of the argument on the stack or a splat argument.
With this change, bin/mruby built with CFLAGS=-Os will increase by 200 bytes.
% ls -l mruby@*
-rwxr-xr-x  1 dearblue  dearblue  615448 10月  6 14:06 mruby@master
-rwxr-xr-x  1 dearblue  dearblue  615648 10月  6 14:05 mruby@patched

Since the mrb_get_argv () function is MRB_API, it is expected that the arguments can be obtained correctly.
Or I think better to should delete MRB_API as an internal function.","I am not sure about your intention.

Why do you combine mrb_get_argc and mrb_get_argv, where mrb->argc is not supposed to be changed?
Why do you always copy argv? I know it's safer, but copying is slower. Maybe we should update the documentation instead.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4753,2019-10-06T05:20:56Z,2019-10-13T06:21:58Z,2019-12-07T14:00:18Z,CLOSED,False,39,15,2,https://github.com/dearblue,Replace in safe `mrb_get_argv()`,1,[],https://github.com/mruby/mruby/pull/4753,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4753#issuecomment-538747671,"The mrb_get_argv() function now returns a copy of the argument on the stack or a splat argument.
With this change, bin/mruby built with CFLAGS=-Os will increase by 200 bytes.
% ls -l mruby@*
-rwxr-xr-x  1 dearblue  dearblue  615448 10月  6 14:06 mruby@master
-rwxr-xr-x  1 dearblue  dearblue  615648 10月  6 14:05 mruby@patched

Since the mrb_get_argv () function is MRB_API, it is expected that the arguments can be obtained correctly.
Or I think better to should delete MRB_API as an internal function.","Currently if mrb_get_argc() returns more than 0, mrb_get_argv() may return NULL.
This PR is to be able to get the correct argument array with mrb_get_argv() as one of the solutions.
I propose removing MRB_API from mrb_get_argv() as another solution.


Why do you combine mrb_get_argc and mrb_get_argv, where mrb->argc is not supposed to be changed?


This is because I thought it was not good to have three functions that perform the same preprocessing.


Why do you always copy argv?


The argument is copied when the stack is passed. Does not copy for splatter arguments.
Also, if you don't copy, you will eventually have to follow mrb->c->ci->argc to distinguish between stack and splatter.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4753,2019-10-06T05:20:56Z,2019-10-13T06:21:58Z,2019-12-07T14:00:18Z,CLOSED,False,39,15,2,https://github.com/dearblue,Replace in safe `mrb_get_argv()`,1,[],https://github.com/mruby/mruby/pull/4753,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/4753#issuecomment-541390642,"The mrb_get_argv() function now returns a copy of the argument on the stack or a splat argument.
With this change, bin/mruby built with CFLAGS=-Os will increase by 200 bytes.
% ls -l mruby@*
-rwxr-xr-x  1 dearblue  dearblue  615448 10月  6 14:06 mruby@master
-rwxr-xr-x  1 dearblue  dearblue  615648 10月  6 14:05 mruby@patched

Since the mrb_get_argv () function is MRB_API, it is expected that the arguments can be obtained correctly.
Or I think better to should delete MRB_API as an internal function.",I will reconsider this PR.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4754,2019-10-06T09:23:05Z,2019-10-06T13:08:15Z,2019-12-07T14:00:20Z,MERGED,True,134,1,2,https://github.com/dearblue,Get keyword arguments with `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/4754,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4754,"Keyword arguments are now expanded by the mrb_get_args() function.
As before, mruby core and core gems should assume that keyword arguments cannot be handled directly from C.
For the interface, I referred to CRuby's rb_get_kwargs().
For implementation, I referred to OP_KARG or etc.

When MRB_ENABLE_KEYWORD_SPECIFIER was defined, bin/mruby increased by about 800 bytes when building with gcc -Os on FreeBSD 12.
Even in the raw state, it has increased by about 130 bytes due to the addition of error messages.
% ls -l mruby@*
-rwxr-xr-x  1 dearblue  dearblue  615448 10月  6 18:06 mruby@master
-rwxr-xr-x  1 dearblue  dearblue  615576 10月  6 18:06 mruby@patched
-rwxr-xr-x  1 dearblue  dearblue  616344 10月  6 18:05 mruby@patched+kwargs

You can check the test code at https://github.com/dearblue/mruby-test-kwargs/blob/master/test/kwargs.rb.
You can find out how to use it in C in the documentation or https://github.com/dearblue/mruby-test-kwargs/blob/master/test/kwargs.c.
Freedback is welcome.","Keyword arguments are now expanded by the mrb_get_args() function.
As before, mruby core and core gems should assume that keyword arguments cannot be handled directly from C.
For the interface, I referred to CRuby's rb_get_kwargs().
For implementation, I referred to OP_KARG or etc.

When MRB_ENABLE_KEYWORD_SPECIFIER was defined, bin/mruby increased by about 800 bytes when building with gcc -Os on FreeBSD 12.
Even in the raw state, it has increased by about 130 bytes due to the addition of error messages.
% ls -l mruby@*
-rwxr-xr-x  1 dearblue  dearblue  615448 10月  6 18:06 mruby@master
-rwxr-xr-x  1 dearblue  dearblue  615576 10月  6 18:06 mruby@patched
-rwxr-xr-x  1 dearblue  dearblue  616344 10月  6 18:05 mruby@patched+kwargs

You can check the test code at https://github.com/dearblue/mruby-test-kwargs/blob/master/test/kwargs.rb.
You can find out how to use it in C in the documentation or https://github.com/dearblue/mruby-test-kwargs/blob/master/test/kwargs.c.
Freedback is welcome.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4754,2019-10-06T09:23:05Z,2019-10-06T13:08:15Z,2019-12-07T14:00:20Z,MERGED,True,134,1,2,https://github.com/dearblue,Get keyword arguments with `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/4754,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4754#issuecomment-538737929,"Keyword arguments are now expanded by the mrb_get_args() function.
As before, mruby core and core gems should assume that keyword arguments cannot be handled directly from C.
For the interface, I referred to CRuby's rb_get_kwargs().
For implementation, I referred to OP_KARG or etc.

When MRB_ENABLE_KEYWORD_SPECIFIER was defined, bin/mruby increased by about 800 bytes when building with gcc -Os on FreeBSD 12.
Even in the raw state, it has increased by about 130 bytes due to the addition of error messages.
% ls -l mruby@*
-rwxr-xr-x  1 dearblue  dearblue  615448 10月  6 18:06 mruby@master
-rwxr-xr-x  1 dearblue  dearblue  615576 10月  6 18:06 mruby@patched
-rwxr-xr-x  1 dearblue  dearblue  616344 10月  6 18:05 mruby@patched+kwargs

You can check the test code at https://github.com/dearblue/mruby-test-kwargs/blob/master/test/kwargs.rb.
You can find out how to use it in C in the documentation or https://github.com/dearblue/mruby-test-kwargs/blob/master/test/kwargs.c.
Freedback is welcome.","Since the keyword argument is a part of Ruby spec, I don't think we need a macro to enable it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4754,2019-10-06T09:23:05Z,2019-10-06T13:08:15Z,2019-12-07T14:00:20Z,MERGED,True,134,1,2,https://github.com/dearblue,Get keyword arguments with `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/4754,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4754#issuecomment-538742730,"Keyword arguments are now expanded by the mrb_get_args() function.
As before, mruby core and core gems should assume that keyword arguments cannot be handled directly from C.
For the interface, I referred to CRuby's rb_get_kwargs().
For implementation, I referred to OP_KARG or etc.

When MRB_ENABLE_KEYWORD_SPECIFIER was defined, bin/mruby increased by about 800 bytes when building with gcc -Os on FreeBSD 12.
Even in the raw state, it has increased by about 130 bytes due to the addition of error messages.
% ls -l mruby@*
-rwxr-xr-x  1 dearblue  dearblue  615448 10月  6 18:06 mruby@master
-rwxr-xr-x  1 dearblue  dearblue  615576 10月  6 18:06 mruby@patched
-rwxr-xr-x  1 dearblue  dearblue  616344 10月  6 18:05 mruby@patched+kwargs

You can check the test code at https://github.com/dearblue/mruby-test-kwargs/blob/master/test/kwargs.rb.
You can find out how to use it in C in the documentation or https://github.com/dearblue/mruby-test-kwargs/blob/master/test/kwargs.c.
Freedback is welcome.","I rebase and forced push.
The : specifier is now always available.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4755,2019-10-06T11:05:18Z,2019-10-06T11:23:04Z,2019-11-24T01:18:34Z,MERGED,True,1,1,1,https://github.com/shuujii,Refine the usage message of `mruby` command,1,[],https://github.com/mruby/mruby/pull/4755,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4755,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4756,2019-10-06T11:05:30Z,2019-10-06T11:09:02Z,2019-10-06T11:10:43Z,CLOSED,False,2,2,2,https://github.com/shuujii,Refine the usage message of mirb command,2,[],https://github.com/mruby/mruby/pull/4756,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4756,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4756,2019-10-06T11:05:30Z,2019-10-06T11:09:02Z,2019-10-06T11:10:43Z,CLOSED,False,2,2,2,https://github.com/shuujii,Refine the usage message of mirb command,2,[],https://github.com/mruby/mruby/pull/4756,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4756#issuecomment-538736434,,"Sorry, another PR has been mixed. I will re-create PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4757,2019-10-06T11:13:49Z,2019-10-06T11:23:30Z,2019-11-24T01:18:33Z,MERGED,True,1,1,1,https://github.com/shuujii,Refine the usage message of `mirb` command,1,[],https://github.com/mruby/mruby/pull/4757,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4757,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4758,2019-10-07T12:07:47Z,2019-10-08T13:25:44Z,2019-11-24T01:18:29Z,MERGED,True,16,7,3,https://github.com/shuujii,Implement Ruby2.7's frozen strings from `Module#name`,1,[],https://github.com/mruby/mruby/pull/4758,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4758,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4758,2019-10-07T12:07:47Z,2019-10-08T13:25:44Z,2019-11-24T01:18:29Z,MERGED,True,16,7,3,https://github.com/shuujii,Implement Ruby2.7's frozen strings from `Module#name`,1,[],https://github.com/mruby/mruby/pull/4758,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4758#issuecomment-539413403,,I changed to reduce mrb_str_dup.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4760,2019-10-08T10:12:57Z,2019-10-08T13:23:59Z,2019-11-24T01:18:41Z,MERGED,True,4,4,1,https://github.com/shuujii,Use `mrb_str_concat` instead of `mrb_str_to_str` + `mrb_str_cat_str`,1,[],https://github.com/mruby/mruby/pull/4760,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4760,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4761,2019-10-08T17:23:26Z,2019-10-08T23:01:53Z,2019-10-08T23:01:53Z,MERGED,True,6,1,3,https://github.com/take-cheeze,Add mrbgem version field to lock file,1,[],https://github.com/mruby/mruby/pull/4761,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4761,"closes #4759
Example lock file: https://gist.github.com/take-cheeze/9fa673ffef3ee660f1c4a5967f3c4692","closes #4759
Example lock file: https://gist.github.com/take-cheeze/9fa673ffef3ee660f1c4a5967f3c4692",True,{}
mruby/mruby,https://github.com/mruby/mruby,4763,2019-10-09T11:25:27Z,2019-10-09T13:47:13Z,2019-11-24T01:18:31Z,MERGED,True,4,4,2,https://github.com/shuujii,Fix that `print` command raises `FrozenError` in `mrdb`; ref 1f5a7f2f,1,[],https://github.com/mruby/mruby/pull/4763,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4763,"Before this patch:
$ echo 'p true' | bin/mrdb /dev/null
(/dev/null:1) mruby application exited.
FrozenError: can't modify frozen String
(-:0)

After this patch:
$ echo 'p true' | bin/mrdb /dev/null
(/dev/null:1) $1 = true
(/dev/null:1)","Before this patch:
$ echo 'p true' | bin/mrdb /dev/null
(/dev/null:1) mruby application exited.
FrozenError: can't modify frozen String
(-:0)

After this patch:
$ echo 'p true' | bin/mrdb /dev/null
(/dev/null:1) $1 = true
(/dev/null:1)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4764,2019-10-10T11:12:23Z,2019-10-10T11:46:00Z,2019-11-24T01:18:29Z,MERGED,True,90,184,3,https://github.com/shuujii,Integrate `mrb_str_inspect` and `mrb_str_dump`,1,[],https://github.com/mruby/mruby/pull/4764,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4764,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4767,2019-10-11T07:40:41Z,2019-10-11T10:54:44Z,2019-11-24T01:18:37Z,MERGED,True,0,5,1,https://github.com/shuujii,Remove unused exception classes in `mruby-io` gem,1,[],https://github.com/mruby/mruby/pull/4767,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4767,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4769,2019-10-12T04:13:33Z,2019-10-12T14:33:21Z,2019-11-24T01:18:38Z,MERGED,True,3,3,1,https://github.com/shuujii,Rename `str_make_shared()` to `str_share()` in `src/string.c`,1,[],https://github.com/mruby/mruby/pull/4769,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4769,Because it may not create struct mrb_shared_string.,Because it may not create struct mrb_shared_string.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4770,2019-10-12T12:45:03Z,2019-10-12T14:35:44Z,2019-11-24T01:18:39Z,MERGED,True,2,2,1,https://github.com/shuujii,SHARED string is not required when sharing POOL string,1,[],https://github.com/mruby/mruby/pull/4770,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4770,"The heap string buffer of POOL string always exists, does not need to be
released, and read only, so it can be shared as NOFREE string.","The heap string buffer of POOL string always exists, does not need to be
released, and read only, so it can be shared as NOFREE string.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4771,2019-10-13T01:57:12Z,2020-04-19T14:34:58Z,2020-04-19T14:34:58Z,CLOSED,False,6,5,2,https://github.com/takkaw,include mruby.h before checking MRB_WITHOUT_FLOAT,1,[],https://github.com/mruby/mruby/pull/4771,https://github.com/takkaw,1,https://github.com/mruby/mruby/pull/4771,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4771,2019-10-13T01:57:12Z,2020-04-19T14:34:58Z,2020-04-19T14:34:58Z,CLOSED,False,6,5,2,https://github.com/takkaw,include mruby.h before checking MRB_WITHOUT_FLOAT,1,[],https://github.com/mruby/mruby/pull/4771,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4771#issuecomment-541397653,,"MRB_WITHOUT_FLOAT may be defined in mrbconf.h which is included from mruby.h.
This change requires MRB_WITHOUT_FLOAT to be defined in CFLAGS.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4771,2019-10-13T01:57:12Z,2020-04-19T14:34:58Z,2020-04-19T14:34:58Z,CLOSED,False,6,5,2,https://github.com/takkaw,include mruby.h before checking MRB_WITHOUT_FLOAT,1,[],https://github.com/mruby/mruby/pull/4771,https://github.com/takkaw,3,https://github.com/mruby/mruby/pull/4771#issuecomment-541415401,,"MRB_WITHOUT_FLOAT may be defined in mrbconf.h which is included from mruby.h.

Yes, I think so too.
Some files include mrbconf.h through including mruby.h to check MRB_WITHOUT_FLOAT.
But, including mruby.h is above checking MRB_WITHOUT_FLOAT in math.c and fmt_fp.c.

This change requires MRB_WITHOUT_FLOAT to be defined in CFLAGS.

No. It's OK to be defined MRB_WITHOUT_FLOAT in mrbconf.h after this change.
Rather, MRB_WITHOUT_FLOAT is needed to be defined in CFLAGS without this change.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4771,2019-10-13T01:57:12Z,2020-04-19T14:34:58Z,2020-04-19T14:34:58Z,CLOSED,False,6,5,2,https://github.com/takkaw,include mruby.h before checking MRB_WITHOUT_FLOAT,1,[],https://github.com/mruby/mruby/pull/4771,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4771#issuecomment-541416571,,I am sorry but probably I missed your point. Is it OK to define MRB_WITHOUT_FLOAT in mrbconf.h or not? It seems this PR prohibits MRB_WITHOUT_FLOAT in mrbconf.h.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4771,2019-10-13T01:57:12Z,2020-04-19T14:34:58Z,2020-04-19T14:34:58Z,CLOSED,False,6,5,2,https://github.com/takkaw,include mruby.h before checking MRB_WITHOUT_FLOAT,1,[],https://github.com/mruby/mruby/pull/4771,https://github.com/takkaw,5,https://github.com/mruby/mruby/pull/4771#issuecomment-542232709,,"I intended that it's OK to define MRB_WITHOUT_FLOAT in mrbconf.h.
I'm sorry, I might have made a mistake so please let me check.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4771,2019-10-13T01:57:12Z,2020-04-19T14:34:58Z,2020-04-19T14:34:58Z,CLOSED,False,6,5,2,https://github.com/takkaw,include mruby.h before checking MRB_WITHOUT_FLOAT,1,[],https://github.com/mruby/mruby/pull/4771,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/4771#issuecomment-596195762,,"When I proposed #4576, 'mrbconf.h' was missing completely.
Although it was late, I confirmed that if MRB_WITHOUT_FLOAT was defined in 'mrbconf.h', the expected error would occur.
Thanks to @takkaw!",True,{}
mruby/mruby,https://github.com/mruby/mruby,4772,2019-10-13T08:04:08Z,2019-10-13T08:20:47Z,2019-11-24T01:18:32Z,MERGED,True,10,5,1,https://github.com/shuujii,Refactor `mrb_class_name_class`,1,[],https://github.com/mruby/mruby/pull/4772,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4772,"Use mrb_sym_name_len instead of mrb_sym_name (class name should not
be escaped).
Avoid mrb_str_dup (it is unnecessary to be shared string because it is
changed).","Use mrb_sym_name_len instead of mrb_sym_name (class name should not
be escaped).
Avoid mrb_str_dup (it is unnecessary to be shared string because it is
changed).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4773,2019-10-14T09:18:52Z,2019-10-14T09:56:13Z,2019-11-24T01:18:29Z,MERGED,True,3,3,1,https://github.com/shuujii,Fix the example of `Array#intersection` in the document [ci skip],1,[],https://github.com/mruby/mruby/pull/4773,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4773,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4774,2019-10-15T10:36:57Z,2019-10-15T22:36:34Z,2019-11-24T01:18:20Z,MERGED,True,1,2,1,https://github.com/shuujii,Adjust `buf` size in `str_escape`,1,[],https://github.com/mruby/mruby/pull/4774,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4774,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4775,2019-10-16T09:39:57Z,2019-10-16T11:22:01Z,2019-11-24T01:18:41Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `mrb_sym_name_len` instead of `mrb_sym_name` in `assign_class_name`,1,[],https://github.com/mruby/mruby/pull/4775,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4775,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4776,2019-10-17T11:40:02Z,2019-10-17T11:50:23Z,2019-11-24T01:18:30Z,MERGED,True,4,0,1,https://github.com/shuujii,Make `IO#each` family without block to return `Enumerator`,1,[],https://github.com/mruby/mruby/pull/4776,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4776,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4777,2019-10-17T14:04:53Z,2019-10-17T21:58:09Z,2019-10-17T21:58:09Z,MERGED,True,2,0,1,https://github.com/yurie,Remove constant export declaration for MRBC output compiled as C,1,[],https://github.com/mruby/mruby/pull/4777,https://github.com/yurie,1,https://github.com/mruby/mruby/pull/4777,"In commit 401ad45, add extern like this:
401ad45#diff-669d4cc5c9c8f4573c5f8d57f5dcab20
When including byte code in C function,
mrbc -g -Bwatchcode -owatch_ruby.h watch.rb

the extern cause compile error.
watch_ruby.h:11:1: error: declaration of 'watchcode' with no linkage follows extern declaration
 watchcode[] = {
 ^~~~~~~~~
watch_ruby.h:4:22: note: previous declaration of 'watchcode' was here
 extern const uint8_t watchcode[];

This patch fixes the problem.","In commit 401ad45, add extern like this:
401ad45#diff-669d4cc5c9c8f4573c5f8d57f5dcab20
When including byte code in C function,
mrbc -g -Bwatchcode -owatch_ruby.h watch.rb

the extern cause compile error.
watch_ruby.h:11:1: error: declaration of 'watchcode' with no linkage follows extern declaration
 watchcode[] = {
 ^~~~~~~~~
watch_ruby.h:4:22: note: previous declaration of 'watchcode' was here
 extern const uint8_t watchcode[];

This patch fixes the problem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4777,2019-10-17T14:04:53Z,2019-10-17T21:58:09Z,2019-10-17T21:58:09Z,MERGED,True,2,0,1,https://github.com/yurie,Remove constant export declaration for MRBC output compiled as C,1,[],https://github.com/mruby/mruby/pull/4777,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4777#issuecomment-543195518,"In commit 401ad45, add extern like this:
401ad45#diff-669d4cc5c9c8f4573c5f8d57f5dcab20
When including byte code in C function,
mrbc -g -Bwatchcode -owatch_ruby.h watch.rb

the extern cause compile error.
watch_ruby.h:11:1: error: declaration of 'watchcode' with no linkage follows extern declaration
 watchcode[] = {
 ^~~~~~~~~
watch_ruby.h:4:22: note: previous declaration of 'watchcode' was here
 extern const uint8_t watchcode[];

This patch fixes the problem.","Two points:

which compiler did cause the error? not gcc?
it does not depend on whether mrbc is compiled by C++ but depends whether the generated code is compiled by C++. That means conditinal #ifdef should be in the generated code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4777,2019-10-17T14:04:53Z,2019-10-17T21:58:09Z,2019-10-17T21:58:09Z,MERGED,True,2,0,1,https://github.com/yurie,Remove constant export declaration for MRBC output compiled as C,1,[],https://github.com/mruby/mruby/pull/4777,https://github.com/yurie,3,https://github.com/mruby/mruby/pull/4777#issuecomment-543213656,"In commit 401ad45, add extern like this:
401ad45#diff-669d4cc5c9c8f4573c5f8d57f5dcab20
When including byte code in C function,
mrbc -g -Bwatchcode -owatch_ruby.h watch.rb

the extern cause compile error.
watch_ruby.h:11:1: error: declaration of 'watchcode' with no linkage follows extern declaration
 watchcode[] = {
 ^~~~~~~~~
watch_ruby.h:4:22: note: previous declaration of 'watchcode' was here
 extern const uint8_t watchcode[];

This patch fixes the problem.","which compiler did cause the error? not gcc?


I use arm-none-eabi-gcc( gcc-arm-none-eabi-6-2017-q2-update )


it does not depend on whether mrbc is compiled by C++ but depends whether the generated code is compiled by C++. That means conditinal #ifdef should be in the generated code.


I see.  I fixed it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4778,2019-10-18T02:01:53Z,2019-10-18T03:23:28Z,2019-11-24T01:18:30Z,MERGED,True,20,22,2,https://github.com/shuujii,Move methods of `Kernel` to `kernel.rb` from `io.rb` in `mruby-io` gem,1,[],https://github.com/mruby/mruby/pull/4778,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4778,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4779,2019-10-18T16:47:31Z,2019-10-19T02:12:04Z,2019-10-19T02:35:35Z,MERGED,True,3,1,1,https://github.com/take-cheeze,Print mrbc command on verbose mode,1,[],https://github.com/mruby/mruby/pull/4779,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4779,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4779,2019-10-18T16:47:31Z,2019-10-19T02:12:04Z,2019-10-19T02:35:35Z,MERGED,True,3,1,1,https://github.com/take-cheeze,Print mrbc command on verbose mode,1,[],https://github.com/mruby/mruby/pull/4779,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4779#issuecomment-544014537,,"Could you tell us your intention? Other commands, e.g. CC does not print on verbose mode. Why mrbc only?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4779,2019-10-18T16:47:31Z,2019-10-19T02:12:04Z,2019-10-19T02:35:35Z,MERGED,True,3,1,1,https://github.com/take-cheeze,Print mrbc command on verbose mode,1,[],https://github.com/mruby/mruby/pull/4779,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/4779#issuecomment-544035303,,"sh method prints the command:

  
    
      mruby/minirake
    
    
         Line 327
      in
      20d01f1
    
  
  
    

        
          
           puts cmd if $verbose 
        
    
  


Though popen won't",True,{}
mruby/mruby,https://github.com/mruby/mruby,4779,2019-10-18T16:47:31Z,2019-10-19T02:12:04Z,2019-10-19T02:35:35Z,MERGED,True,3,1,1,https://github.com/take-cheeze,Print mrbc command on verbose mode,1,[],https://github.com/mruby/mruby/pull/4779,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4779#issuecomment-544052847,,"OK, now I understand.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4781,2019-10-19T08:35:48Z,2019-10-19T08:55:27Z,2019-11-24T01:18:28Z,MERGED,True,2,1,1,https://github.com/shuujii,Fix that `Module#to_s` may return frozen string; ref 08eafe2,1,[],https://github.com/mruby/mruby/pull/4781,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4781,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4783,2019-10-20T07:42:15Z,2019-10-20T11:24:11Z,2019-11-24T01:18:41Z,MERGED,True,5,5,4,https://github.com/shuujii,Use `mrb_str_cat_str` instead of `mrb_str_concat` if possible,1,[],https://github.com/mruby/mruby/pull/4783,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4783,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4784,2019-10-21T10:14:41Z,2019-10-21T12:27:03Z,2019-11-24T01:18:34Z,MERGED,True,0,4,1,https://github.com/shuujii,Remove `Kernel#getc`,1,[],https://github.com/mruby/mruby/pull/4784,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4784,Kernel#getc has been removed since Ruby 1.9 and is not defined in ISO.,Kernel#getc has been removed since Ruby 1.9 and is not defined in ISO.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4785,2019-10-22T13:09:55Z,2019-10-23T00:55:48Z,2019-11-24T01:18:28Z,MERGED,True,7,2,1,https://github.com/shuujii,Fix incorrect `MRB_STR_ASCII` flag update in `mrb_str_dump`,1,[],https://github.com/mruby/mruby/pull/4785,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4785,"Example (with MRB_UTF8_STRING)
s = ""\u3042""
p s.size
s.dump
p s.size
Before this patch:
1
3

After this patch:
1
1","Example (with MRB_UTF8_STRING)
s = ""\u3042""
p s.size
s.dump
p s.size
Before this patch:
1
3

After this patch:
1
1",True,{}
mruby/mruby,https://github.com/mruby/mruby,4787,2019-10-23T10:20:42Z,2019-10-23T11:12:56Z,2019-11-24T01:18:31Z,MERGED,True,1,1,1,https://github.com/shuujii,Optimize `str_subseq` with `MRB_UTF8_STRING` to ASCII only string,1,[],https://github.com/mruby/mruby/pull/4787,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4787,"Benchmark (with MRB_UTF8_STRING)
# benchmark.rb
COUNT = 300000
SIZE = 10000
s = ""a"" * SIZE
s.size  # set `MRB_STR_ASCII` flag
i = 0
while i < COUNT
  s[-1]
  i += 1
end
Before this patch:
$ time mruby benchmark.rb
        2.06 real         2.05 user         0.00 sys

After this patch:
$ time mruby benchmark.rb
        0.05 real         0.04 user         0.00 sys","Benchmark (with MRB_UTF8_STRING)
# benchmark.rb
COUNT = 300000
SIZE = 10000
s = ""a"" * SIZE
s.size  # set `MRB_STR_ASCII` flag
i = 0
while i < COUNT
  s[-1]
  i += 1
end
Before this patch:
$ time mruby benchmark.rb
        2.06 real         2.05 user         0.00 sys

After this patch:
$ time mruby benchmark.rb
        0.05 real         0.04 user         0.00 sys",True,{}
mruby/mruby,https://github.com/mruby/mruby,4788,2019-10-24T13:40:24Z,2019-10-24T23:21:54Z,2019-11-24T01:18:25Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix argument specs to `Exception`,1,[],https://github.com/mruby/mruby/pull/4788,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4788,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4789,2019-10-25T11:35:24Z,2020-08-18T08:40:46Z,2020-08-18T08:40:56Z,CLOSED,False,53,13,2,https://github.com/shuujii,Always add trailing `.0` in `Float#inspect`; ref #4225,1,[],https://github.com/mruby/mruby/pull/4789,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4789,"Trailing .0 is removed from Float#to_s and Float#inspect at
9d08025. However, I think the more human-readable format is better
for Float#inspect.
For example, in the Float#to_s format, the failure message is not
well understood when testing values including types by eql? (e.g.
Numeric#step test.
assert ""example"" do
  exp = 1.0
  act = 1
  assert_operator(exp, :eql?, act)  #=> Expected 1 to be eql? 1.
end","Trailing .0 is removed from Float#to_s and Float#inspect at
9d08025. However, I think the more human-readable format is better
for Float#inspect.
For example, in the Float#to_s format, the failure message is not
well understood when testing values including types by eql? (e.g.
Numeric#step test.
assert ""example"" do
  exp = 1.0
  act = 1
  assert_operator(exp, :eql?, act)  #=> Expected 1 to be eql? 1.
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,4789,2019-10-25T11:35:24Z,2020-08-18T08:40:46Z,2020-08-18T08:40:56Z,CLOSED,False,53,13,2,https://github.com/shuujii,Always add trailing `.0` in `Float#inspect`; ref #4225,1,[],https://github.com/mruby/mruby/pull/4789,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4789#issuecomment-675345355,"Trailing .0 is removed from Float#to_s and Float#inspect at
9d08025. However, I think the more human-readable format is better
for Float#inspect.
For example, in the Float#to_s format, the failure message is not
well understood when testing values including types by eql? (e.g.
Numeric#step test.
assert ""example"" do
  exp = 1.0
  act = 1
  assert_operator(exp, :eql?, act)  #=> Expected 1 to be eql? 1.
end",This PR is merged to mruby3 branch (will be pushed soon).,True,{}
mruby/mruby,https://github.com/mruby/mruby,4790,2019-10-25T11:36:03Z,2019-10-25T13:14:19Z,2019-11-24T01:18:39Z,MERGED,True,1,1,1,https://github.com/shuujii,Squeeze redundant spaces in `test/t/numeric.rb` [ci skip],1,[],https://github.com/mruby/mruby/pull/4790,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4790,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4791,2019-10-26T13:32:18Z,2019-10-26T14:09:30Z,2019-11-24T01:18:31Z,MERGED,True,14,9,1,https://github.com/shuujii,Optimize `chars2bytes` with `MRB_UTF8_STRING` to ASCII only string,1,[],https://github.com/mruby/mruby/pull/4791,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4791,"Benchmark (with MRB_UTF8_STRING)
$ mruby -e '
  COUNT = 150000
  SIZE = 10000
  strs = Array.new(COUNT) do
    s = ""a"" * SIZE
    s.size  # set `MRB_STR_ASCII` flag
    s
  end
  i = 0
  t = Time.now
  while i < COUNT
    strs[i][-2..-1] = """"
    i += 1
  end
  printf ""%.2f sec\n"", Time.now - t
'

1.10 sec  # before
0.07 sec  # after","Benchmark (with MRB_UTF8_STRING)
$ mruby -e '
  COUNT = 150000
  SIZE = 10000
  strs = Array.new(COUNT) do
    s = ""a"" * SIZE
    s.size  # set `MRB_STR_ASCII` flag
    s
  end
  i = 0
  t = Time.now
  while i < COUNT
    strs[i][-2..-1] = """"
    i += 1
  end
  printf ""%.2f sec\n"", Time.now - t
'

1.10 sec  # before
0.07 sec  # after",True,{}
mruby/mruby,https://github.com/mruby/mruby,4792,2019-10-27T10:34:48Z,2019-10-27T13:52:51Z,2019-11-24T01:18:33Z,MERGED,True,6,14,1,https://github.com/shuujii,Refine `String#split` document,1,[],https://github.com/mruby/mruby/pull/4792,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4792,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4793,2019-10-27T14:52:31Z,2021-05-02T11:36:45Z,2021-05-02T11:36:45Z,CLOSED,False,18,6,2,https://github.com/ak-mochi,fix outputs of Kernel.#puts and IO#puts when args include Array class or subclass,2,[],https://github.com/mruby/mruby/pull/4793,https://github.com/ak-mochi,1,https://github.com/mruby/mruby/pull/4793,"According to ISO/IEC 30170 15.2.20.5.13, if args of Kernel.#puts and IO#puts include Array instance each element should output indivisually.
But mruby seems to output a result of to_s method similarly other Object.
example:

Ruby 2.6.5 on Ubuntu 18.04.3 LTS

$ ruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ ruby -e 'puts [""foo"", ""bar"", ""baz""]'
foo
bar
baz

$ ruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
bar
baz


mruby (master branch: 8710a22) on Ubuntu 18.04.3 LTS

$ bin/mruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ bin/mruby -e 'puts [""foo"", ""bar"", ""baz""]'
[""foo"", ""bar"", ""baz""]

$ bin/mruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
[""bar"", ""baz""]


mruby (this PR was patched) on Ubuntu 18.04.3 LTS

$ bin/mruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ bin/mruby -e 'puts [""foo"", ""bar"", ""baz""]'
foo
bar
baz

$ bin/mruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
bar
baz","According to ISO/IEC 30170 15.2.20.5.13, if args of Kernel.#puts and IO#puts include Array instance each element should output indivisually.
But mruby seems to output a result of to_s method similarly other Object.
example:

Ruby 2.6.5 on Ubuntu 18.04.3 LTS

$ ruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ ruby -e 'puts [""foo"", ""bar"", ""baz""]'
foo
bar
baz

$ ruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
bar
baz


mruby (master branch: 8710a22) on Ubuntu 18.04.3 LTS

$ bin/mruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ bin/mruby -e 'puts [""foo"", ""bar"", ""baz""]'
[""foo"", ""bar"", ""baz""]

$ bin/mruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
[""bar"", ""baz""]


mruby (this PR was patched) on Ubuntu 18.04.3 LTS

$ bin/mruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ bin/mruby -e 'puts [""foo"", ""bar"", ""baz""]'
foo
bar
baz

$ bin/mruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
bar
baz",True,{}
mruby/mruby,https://github.com/mruby/mruby,4793,2019-10-27T14:52:31Z,2021-05-02T11:36:45Z,2021-05-02T11:36:45Z,CLOSED,False,18,6,2,https://github.com/ak-mochi,fix outputs of Kernel.#puts and IO#puts when args include Array class or subclass,2,[],https://github.com/mruby/mruby/pull/4793,https://github.com/kou,2,https://github.com/mruby/mruby/pull/4793#issuecomment-569150897,"According to ISO/IEC 30170 15.2.20.5.13, if args of Kernel.#puts and IO#puts include Array instance each element should output indivisually.
But mruby seems to output a result of to_s method similarly other Object.
example:

Ruby 2.6.5 on Ubuntu 18.04.3 LTS

$ ruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ ruby -e 'puts [""foo"", ""bar"", ""baz""]'
foo
bar
baz

$ ruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
bar
baz


mruby (master branch: 8710a22) on Ubuntu 18.04.3 LTS

$ bin/mruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ bin/mruby -e 'puts [""foo"", ""bar"", ""baz""]'
[""foo"", ""bar"", ""baz""]

$ bin/mruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
[""bar"", ""baz""]


mruby (this PR was patched) on Ubuntu 18.04.3 LTS

$ bin/mruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ bin/mruby -e 'puts [""foo"", ""bar"", ""baz""]'
foo
bar
baz

$ bin/mruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
bar
baz","@matz What do you think about this CRuby incompatibility?
(I talked to @matz about this incompatibility yesterday and found this pull request just now. :-)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4793,2019-10-27T14:52:31Z,2021-05-02T11:36:45Z,2021-05-02T11:36:45Z,CLOSED,False,18,6,2,https://github.com/ak-mochi,fix outputs of Kernel.#puts and IO#puts when args include Array class or subclass,2,[],https://github.com/mruby/mruby/pull/4793,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4793#issuecomment-569153620,"According to ISO/IEC 30170 15.2.20.5.13, if args of Kernel.#puts and IO#puts include Array instance each element should output indivisually.
But mruby seems to output a result of to_s method similarly other Object.
example:

Ruby 2.6.5 on Ubuntu 18.04.3 LTS

$ ruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ ruby -e 'puts [""foo"", ""bar"", ""baz""]'
foo
bar
baz

$ ruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
bar
baz


mruby (master branch: 8710a22) on Ubuntu 18.04.3 LTS

$ bin/mruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ bin/mruby -e 'puts [""foo"", ""bar"", ""baz""]'
[""foo"", ""bar"", ""baz""]

$ bin/mruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
[""bar"", ""baz""]


mruby (this PR was patched) on Ubuntu 18.04.3 LTS

$ bin/mruby -e 'puts ""foo"", ""bar"", ""baz""'
foo
bar
baz

$ bin/mruby -e 'puts [""foo"", ""bar"", ""baz""]'
foo
bar
baz

$ bin/mruby -e 'puts ""foo"", [""bar"", ""baz""]'
foo
bar
baz","I consider this behavior as a design mistake in the early stage. I need more time to make a big decision to follow the ISO or fix the mistake. For the moment, please use puts *ary.",True,{'THUMBS_UP': ['https://github.com/ak-mochi']}
mruby/mruby,https://github.com/mruby/mruby,4795,2019-10-28T09:38:54Z,2019-10-28T13:24:05Z,2019-11-24T01:18:35Z,MERGED,True,0,4,1,https://github.com/shuujii,"Remove documents about `Regexp` argument from `String#{[],[]=}` [ci skip]",1,[],https://github.com/mruby/mruby/pull/4795,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4795,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4797,2019-10-29T12:05:48Z,2019-10-29T15:39:44Z,2019-11-24T01:18:36Z,MERGED,True,1,1,1,https://github.com/shuujii,Remove unneeded `Array` creation in `Struct#_inspect`,1,[],https://github.com/mruby/mruby/pull/4797,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4797,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4798,2019-10-29T12:24:39Z,2019-10-29T15:40:58Z,2019-10-29T15:40:59Z,MERGED,True,22,6,2,https://github.com/mimaki,Fix `git` command parameter for Windows.,1,[],https://github.com/mruby/mruby/pull/4798,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4798,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4799,2019-10-30T14:19:07Z,2019-10-31T02:29:19Z,2019-11-24T01:18:25Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix argument specs to `Fiber`,1,[],https://github.com/mruby/mruby/pull/4799,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4799,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4800,2019-10-31T13:15:46Z,2020-06-03T05:01:52Z,2020-10-19T06:41:28Z,MERGED,True,35,13,3,https://github.com/shuujii,Set `MRB_STR_ASCII` flag to some stringize methods,1,[],https://github.com/mruby/mruby/pull/4800,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4800,"Fixnum#to_s, Fixnum#inspect
Float#to_s, Float#inspect
NilClass#to_s, NilClass#inspect
FalseClass#to_s, FalseClass#inspect
TrueClass#to_s, TrueClass#inspect
Time#to_s, Time#inspect","Fixnum#to_s, Fixnum#inspect
Float#to_s, Float#inspect
NilClass#to_s, NilClass#inspect
FalseClass#to_s, FalseClass#inspect
TrueClass#to_s, TrueClass#inspect
Time#to_s, Time#inspect",True,{}
mruby/mruby,https://github.com/mruby/mruby,4801,2019-11-01T13:13:44Z,2019-11-01T23:40:22Z,2019-11-24T01:18:26Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix argument specs to `File`,1,[],https://github.com/mruby/mruby/pull/4801,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4801,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4802,2019-11-02T09:26:49Z,2019-11-02T10:40:49Z,2019-11-24T01:18:26Z,MERGED,True,2,2,1,https://github.com/shuujii,Fix argument specs to `Hash`,1,[],https://github.com/mruby/mruby/pull/4802,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4802,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4803,2019-11-03T11:12:02Z,2019-11-03T13:31:36Z,2019-11-24T01:18:37Z,MERGED,True,0,2,1,https://github.com/shuujii,Remove unused enum in `mrb_cstr_to_dbl`,1,[],https://github.com/mruby/mruby/pull/4803,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4803,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4804,2019-11-04T13:13:35Z,2019-11-05T08:08:54Z,2019-11-24T01:18:22Z,MERGED,True,4,4,1,https://github.com/shuujii,Avoid using C++ style comments (`//`) in `parse.y` [ci skip],1,[],https://github.com/mruby/mruby/pull/4804,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4804,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4805,2019-11-05T11:26:38Z,2019-11-05T12:35:08Z,2019-11-24T01:18:36Z,MERGED,True,0,6,1,https://github.com/shuujii,Remove test that depend on `mruby-enumerator` from `mruby-array-ext`,1,[],https://github.com/mruby/mruby/pull/4805,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4805,"Object.const_defined?(:Enumerator) is always false because
mruby-enumerator is not specified in test_dependency. I don't
think this test is necessary.","Object.const_defined?(:Enumerator) is always false because
mruby-enumerator is not specified in test_dependency. I don't
think this test is necessary.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4806,2019-11-06T10:40:26Z,2019-11-06T12:10:22Z,2019-11-24T01:18:23Z,MERGED,True,3,8,2,https://github.com/shuujii,Drop test dependency from `mruby-hash-ext` to `mruby-enumerator`,1,[],https://github.com/mruby/mruby/pull/4806,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4806,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4811,2019-11-07T13:40:26Z,2019-11-07T23:12:24Z,2019-11-24T01:18:22Z,MERGED,True,1,0,1,https://github.com/shuujii,Clear `MRB_STR_SHARED` flag in `mrb_str_modify_keep_ascii`; close #4807,1,[],https://github.com/mruby/mruby/pull/4811,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4811,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4813,2019-11-08T11:55:42Z,2019-11-08T14:37:41Z,2019-11-24T01:18:36Z,MERGED,True,0,1,1,https://github.com/shuujii,Remove unneeded dependency from `mruby-hash-ext`,1,[],https://github.com/mruby/mruby/pull/4813,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4813,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4814,2019-11-09T13:20:11Z,2019-11-09T23:29:56Z,2019-11-24T01:18:26Z,MERGED,True,7,7,1,https://github.com/shuujii,Fix argument specs to `IO`,1,[],https://github.com/mruby/mruby/pull/4814,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4814,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4816,2019-11-10T11:01:59Z,2019-11-10T22:33:32Z,2019-11-24T01:18:23Z,MERGED,True,1,2,1,https://github.com/shuujii,Defer getting `caller_dir` until needed in `MRuby::LoadGems#gem`,1,[],https://github.com/mruby/mruby/pull/4816,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4816,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4818,2019-11-11T12:07:49Z,2019-11-11T23:33:22Z,2019-11-24T01:18:27Z,MERGED,True,4,4,1,https://github.com/shuujii,Fix argument specs to `Integer`,1,[],https://github.com/mruby/mruby/pull/4818,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4818,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4819,2019-11-12T12:17:33Z,2019-11-12T23:10:51Z,2019-11-24T01:18:40Z,MERGED,True,4,4,1,https://github.com/shuujii,Use `intern` instead of `intern_cstr` if possible in `parse.y`,1,[],https://github.com/mruby/mruby/pull/4819,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4819,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4821,2019-11-13T10:36:33Z,2019-11-13T12:08:48Z,2019-11-24T01:18:40Z,MERGED,True,53,58,1,https://github.com/shuujii,Use `mrb_intern_lit` if possible in `parse.y`,1,[],https://github.com/mruby/mruby/pull/4821,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4821,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4823,2019-11-14T11:42:36Z,2019-11-14T23:16:34Z,2019-11-24T01:18:27Z,MERGED,True,1,6,1,https://github.com/shuujii,Fix here document with EOF,1,[],https://github.com/mruby/mruby/pull/4823,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4823,"Before this patch:
$ bin/mruby -e 'p <<EOS
1
EOS'
-e:4:0: can't find heredoc delimiter ""EOS"" anywhere before EOF
-e:4:0: syntax error, unexpected $end, expecting tHEREDOC_END or tHD_STRING_PART or tHD_STRING_MID

After this patch (same as Ruby):
$ bin/mruby -e 'p <<EOS
1
EOS'
""1\n""","Before this patch:
$ bin/mruby -e 'p <<EOS
1
EOS'
-e:4:0: can't find heredoc delimiter ""EOS"" anywhere before EOF
-e:4:0: syntax error, unexpected $end, expecting tHEREDOC_END or tHD_STRING_PART or tHD_STRING_MID

After this patch (same as Ruby):
$ bin/mruby -e 'p <<EOS
1
EOS'
""1\n""",True,{}
mruby/mruby,https://github.com/mruby/mruby,4825,2019-11-15T10:27:47Z,2019-11-17T23:15:59Z,2019-11-24T01:18:27Z,MERGED,True,9,9,6,https://github.com/shuujii,Fix argument specs to `Kernel`,1,[],https://github.com/mruby/mruby/pull/4825,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4825,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4826,2019-11-16T11:03:35Z,2019-11-16T19:38:47Z,2019-11-24T01:18:38Z,MERGED,True,24,27,5,https://github.com/shuujii,"Revert ""Implement Ruby2.7's frozen strings from `Symbol#to_s`""",1,[],https://github.com/mruby/mruby/pull/4826,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4826,This feature was reverted from Ruby 2.7.,This feature was reverted from Ruby 2.7.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4827,2019-11-17T10:44:55Z,2019-11-25T00:49:29Z,2020-01-02T10:29:44Z,MERGED,True,106,70,2,https://github.com/shuujii,Support short options concatenation to `mruby` command,1,[],https://github.com/mruby/mruby/pull/4827,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4827,"Before this patch:
$ bin/mruby -ce 1
bin/mruby: Cannot open program file: 1

After this patch:
$ bin/mruby -ce 1
Syntax OK","Before this patch:
$ bin/mruby -ce 1
bin/mruby: Cannot open program file: 1

After this patch:
$ bin/mruby -ce 1
Syntax OK",True,{}
mruby/mruby,https://github.com/mruby/mruby,4828,2019-11-18T10:17:28Z,2019-11-18T17:52:40Z,2019-11-24T01:18:33Z,MERGED,True,29,26,1,https://github.com/shuujii,Refactor `mrb_string_value_cstr`,1,[],https://github.com/mruby/mruby/pull/4828,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4828,"Keep MRB_STR_ASCII flag.
Avoid a string object creation.","Keep MRB_STR_ASCII flag.
Avoid a string object creation.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4830,2019-11-19T10:05:26Z,2019-11-19T14:30:37Z,2019-11-19T14:30:38Z,MERGED,True,39,23,7,https://github.com/mimaki,Release `mruby 2.1.0`.,8,[],https://github.com/mruby/mruby/pull/4830,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4830,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4831,2019-11-19T12:33:53Z,2019-11-19T14:32:17Z,2019-11-24T01:18:21Z,MERGED,True,11,56,2,https://github.com/shuujii,Always enable the rational and complex literals,1,[],https://github.com/mruby/mruby/pull/4831,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4831,"I think they can always be enabled because the regular expression literal is
always enabled.","I think they can always be enabled because the regular expression literal is
always enabled.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4834,2019-11-20T07:08:36Z,2019-11-23T22:52:17Z,2019-11-24T01:18:42Z,MERGED,True,2,2,1,https://github.com/shuujii,Use proper `PEEK` macro for `OP_EPUSH` in `patch_irep`; fix #4833,1,[],https://github.com/mruby/mruby/pull/4834,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4834,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4834,2019-11-20T07:08:36Z,2019-11-23T22:52:17Z,2019-11-24T01:18:42Z,MERGED,True,2,2,1,https://github.com/shuujii,Use proper `PEEK` macro for `OP_EPUSH` in `patch_irep`; fix #4833,1,[],https://github.com/mruby/mruby/pull/4834,https://github.com/udzura,2,https://github.com/mruby/mruby/pull/4834#issuecomment-555877728,,👀,True,{}
mruby/mruby,https://github.com/mruby/mruby,4835,2019-11-21T10:36:09Z,2019-11-22T10:40:20Z,2019-11-24T01:18:30Z,MERGED,True,33,25,4,https://github.com/shuujii,Introduce `mrb_ssize` type for buffer size on memory; ref #4483,1,[],https://github.com/mruby/mruby/pull/4835,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4835,"Previously, mrb_int was used as the type that represents the buffer size
on memory, but the sizes of RString and RArray exceed 6 words when
MRB_INT64 is enabled on 32-bit CPU.
I don't think it is necessary to be able to represent the buffer size on
memory that exceeds the virtual address space. Therefore, for this purpose,
introduce mrb_ssize which doesn't exceed the sizes of mrb_int and
pointer.
I think all mrb_int used for this purpose should be changed to
mrb_ssize, but currently only the members of the structures (RString,
mrb_shared_string, RArray and mrb_shared_array) are changed.","Previously, mrb_int was used as the type that represents the buffer size
on memory, but the sizes of RString and RArray exceed 6 words when
MRB_INT64 is enabled on 32-bit CPU.
I don't think it is necessary to be able to represent the buffer size on
memory that exceeds the virtual address space. Therefore, for this purpose,
introduce mrb_ssize which doesn't exceed the sizes of mrb_int and
pointer.
I think all mrb_int used for this purpose should be changed to
mrb_ssize, but currently only the members of the structures (RString,
mrb_shared_string, RArray and mrb_shared_array) are changed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4836,2019-11-22T09:51:27Z,2019-11-22T21:25:03Z,2019-11-24T01:18:21Z,MERGED,True,9,4,1,https://github.com/shuujii,Allow `true`/`false` argument to `Kernel#exit`,1,[],https://github.com/mruby/mruby/pull/4836,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4836,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4837,2019-11-23T08:45:12Z,2019-11-27T00:47:35Z,2020-01-02T10:29:30Z,MERGED,True,3,0,1,https://github.com/shuujii,Add assertion to `RVALUE` size,1,[],https://github.com/mruby/mruby/pull/4837,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4837,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4838,2019-11-23T11:37:09Z,2019-11-25T21:31:49Z,2020-01-02T10:29:41Z,MERGED,True,16,16,5,https://github.com/shuujii,Rename `BITSIZE` to `BIT` and `BIT` to `BIT_POS` for consistency,1,[],https://github.com/mruby/mruby/pull/4838,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4838,"The bit width terminology is unified to BIT according to MRB_ INT_BIT
and CHAR_BIT. Also the bit position terminology is unified to BIT_POS.","The bit width terminology is unified to BIT according to MRB_ INT_BIT
and CHAR_BIT. Also the bit position terminology is unified to BIT_POS.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4840,2019-11-24T12:49:17Z,2019-11-24T14:07:16Z,2020-01-02T10:29:41Z,MERGED,True,0,25,1,https://github.com/shuujii,Remove unused methods of `MRubyIOTestUtil`,1,[],https://github.com/mruby/mruby/pull/4840,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4840,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4841,2019-11-25T13:07:38Z,2019-11-25T14:19:18Z,2020-01-02T10:29:33Z,MERGED,True,6,1,2,https://github.com/shuujii,Fix `ARGV` value in `mruby` command (regression by #4827),1,[],https://github.com/mruby/mruby/pull/4841,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4841,"Before this patch:
$ bin/mruby -e 'p ARGV' a b
[""bin/mruby"", ""-e"", ""p ARGV"", ""a"", ""b""]

After this patch:
$ bin/mruby -e 'p ARGV' a b
[""a"", ""b""]","Before this patch:
$ bin/mruby -e 'p ARGV' a b
[""bin/mruby"", ""-e"", ""p ARGV"", ""a"", ""b""]

After this patch:
$ bin/mruby -e 'p ARGV' a b
[""a"", ""b""]",True,{}
mruby/mruby,https://github.com/mruby/mruby,4842,2019-11-26T12:04:01Z,2020-09-10T08:56:55Z,2020-09-10T08:56:55Z,CLOSED,False,58,17,3,https://github.com/shuujii,Embed short symbol name (<= 2 words - 2 bytes) to `struct symbol_name`,1,[],https://github.com/mruby/mruby/pull/4842,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4842,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4842,2019-11-26T12:04:01Z,2020-09-10T08:56:55Z,2020-09-10T08:56:55Z,CLOSED,False,58,17,3,https://github.com/shuujii,Embed short symbol name (<= 2 words - 2 bytes) to `struct symbol_name`,1,[],https://github.com/mruby/mruby/pull/4842,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4842#issuecomment-690094318,,Embedded symbols are already implemented.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4843,2019-11-27T11:04:08Z,2019-11-27T13:41:37Z,2020-01-02T10:29:43Z,MERGED,True,17,0,2,https://github.com/shuujii,Support `--` (end of options) to `mruby` command,1,[],https://github.com/mruby/mruby/pull/4843,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4843,"Before this patch:
$ bin/mruby -e 'p ARGV' -- -x
bin/mruby: invalid option -- (-h will show valid options)

After this patch:
$ bin/mruby -e 'p ARGV' -- -x
[""-x""]","Before this patch:
$ bin/mruby -e 'p ARGV' -- -x
bin/mruby: invalid option -- (-h will show valid options)

After this patch:
$ bin/mruby -e 'p ARGV' -- -x
[""-x""]",True,{}
mruby/mruby,https://github.com/mruby/mruby,4845,2019-11-28T08:56:14Z,2019-11-29T00:22:26Z,2020-01-02T10:29:32Z,MERGED,True,2,2,2,https://github.com/shuujii,Change the URL of `mruby.org` [ci skip],1,[],https://github.com/mruby/mruby/pull/4845,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4845,"http -> https
Remove www.","http -> https
Remove www.",True,{'THUMBS_UP': ['https://github.com/Hir0']}
mruby/mruby,https://github.com/mruby/mruby,4846,2019-11-29T10:47:16Z,2019-11-29T12:53:13Z,2020-01-02T10:29:34Z,MERGED,True,4,1,2,https://github.com/shuujii,Fix `mruby --verbose` (regression by #4827),1,[],https://github.com/mruby/mruby/pull/4846,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4846,"Before this patch:
$ bin/mruby --verbose -e 'p 1'
bin/mruby: Cannot open program file: --verbose

After this patch:
$ bin/mruby --verbose -e 'p 1'
00001 NODE_SCOPE:
(snip)
irep 0x7fe97041df30 nregs=4 nlocals=1 pools=0 syms=1 reps=0 iseq=11
file: -e
    1 000 OP_LOADSELF R1
(snip)

1","Before this patch:
$ bin/mruby --verbose -e 'p 1'
bin/mruby: Cannot open program file: --verbose

After this patch:
$ bin/mruby --verbose -e 'p 1'
00001 NODE_SCOPE:
(snip)
irep 0x7fe97041df30 nregs=4 nlocals=1 pools=0 syms=1 reps=0 iseq=11
file: -e
    1 000 OP_LOADSELF R1
(snip)

1",True,{}
mruby/mruby,https://github.com/mruby/mruby,4847,2019-11-30T11:05:00Z,2019-11-30T12:08:54Z,2020-01-02T10:29:38Z,MERGED,True,15,2,2,https://github.com/shuujii,Quit `mruby -v` immediately if no program is given for Ruby compatibility,1,[],https://github.com/mruby/mruby/pull/4847,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4847,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4848,2019-12-01T13:10:29Z,2019-12-02T04:42:16Z,2020-01-02T10:29:33Z,MERGED,True,30,25,4,https://github.com/shuujii,"Fix `MRB_FIXNUM_SHIFT` with `MRB_WORD_BOXING`, `MRB_INT32` and `MRB_64BIT`",1,[],https://github.com/mruby/mruby/pull/4848,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4848,"Example
# example.rb
max32 = 2**30 - 1 + 2**30
min32 = -max32-1
[max32, max32+1, min32, min32-1].each{|n| p [n, n.class]}
Before this patch:
$ bin/mruby example.rb
[2147483647, Float]
[2147483648, Float]
[-2147483648, Float]
[-2147483649, Float]

After this patch:
$ bin/mruby example.rb
[2147483647, Fixnum]
[2147483648, Float]
[-2147483648, Fixnum]
[-2147483649, Float]","Example
# example.rb
max32 = 2**30 - 1 + 2**30
min32 = -max32-1
[max32, max32+1, min32, min32-1].each{|n| p [n, n.class]}
Before this patch:
$ bin/mruby example.rb
[2147483647, Float]
[2147483648, Float]
[-2147483648, Float]
[-2147483649, Float]

After this patch:
$ bin/mruby example.rb
[2147483647, Fixnum]
[2147483648, Float]
[-2147483648, Fixnum]
[-2147483649, Float]",True,{}
mruby/mruby,https://github.com/mruby/mruby,4849,2019-12-02T11:09:08Z,2019-12-03T13:35:44Z,2020-01-02T10:29:42Z,MERGED,True,2,1,1,https://github.com/shuujii,Silence Clang warning with `MRB_INT32` and `MRB_64BIT` in `time.c`,1,[],https://github.com/mruby/mruby/pull/4849,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4849,"Silence the following warning:
/mruby/mrbgems/mruby-time/src/time.c:258:60: warning: result of comparison of constant -9223372036854775808 with expression of type 'mrb_int' (aka 'int') is always false [-Wtautological-constant-out-of-range-compare]
      if ((mrb_time_int)i > MRB_TIME_MAX || MRB_TIME_MIN > i) {
                                            ~~~~~~~~~~~~ ^ ~","Silence the following warning:
/mruby/mrbgems/mruby-time/src/time.c:258:60: warning: result of comparison of constant -9223372036854775808 with expression of type 'mrb_int' (aka 'int') is always false [-Wtautological-constant-out-of-range-compare]
      if ((mrb_time_int)i > MRB_TIME_MAX || MRB_TIME_MIN > i) {
                                            ~~~~~~~~~~~~ ^ ~",True,{}
mruby/mruby,https://github.com/mruby/mruby,4850,2019-12-03T14:01:25Z,2019-12-03T22:10:17Z,2020-01-02T10:29:42Z,MERGED,True,10,2,1,https://github.com/shuujii,Silence Clang warning with `MRB_INT64` and `MRB_32BIT` in `time.c`,1,[],https://github.com/mruby/mruby/pull/4850,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4850,"Silence the following warnings:
/mruby/mrbgems/mruby-time/src/time.c:871:15: warning: result of comparison of constant 9223372036854775807 with expression of type 'time_t' (aka 'long') is always false [-Wtautological-constant-out-of-range-compare]
  if (tm->sec > MRB_INT_MAX || tm->sec < MRB_INT_MIN) {
      ~~~~~~~ ^ ~~~~~~~~~~~
/mruby/mrbgems/mruby-time/src/time.c:871:40: warning: result of comparison of constant -9223372036854775808 with expression of type 'time_t' (aka 'long') is always false [-Wtautological-constant-out-of-range-compare]
  if (tm->sec > MRB_INT_MAX || tm->sec < MRB_INT_MIN) {
                               ~~~~~~~ ^ ~~~~~~~~~~~
/mruby/mrbgems/mruby-time/src/time.c:887:16: warning: result of comparison of constant 9223372036854775807 with expression of type 'time_t' (aka 'long') is always false [-Wtautological-constant-out-of-range-compare]
  if (tm->usec > MRB_INT_MAX || tm->usec < MRB_INT_MIN) {
      ~~~~~~~~ ^ ~~~~~~~~~~~
/mruby/mrbgems/mruby-time/src/time.c:887:42: warning: result of comparison of constant -9223372036854775808 with expression of type 'time_t' (aka 'long') is always false [-Wtautological-constant-out-of-range-compare]
  if (tm->usec > MRB_INT_MAX || tm->usec < MRB_INT_MIN) {
                              ~~~~~~~~ ^ ~~~~~~~~~~~","Silence the following warnings:
/mruby/mrbgems/mruby-time/src/time.c:871:15: warning: result of comparison of constant 9223372036854775807 with expression of type 'time_t' (aka 'long') is always false [-Wtautological-constant-out-of-range-compare]
  if (tm->sec > MRB_INT_MAX || tm->sec < MRB_INT_MIN) {
      ~~~~~~~ ^ ~~~~~~~~~~~
/mruby/mrbgems/mruby-time/src/time.c:871:40: warning: result of comparison of constant -9223372036854775808 with expression of type 'time_t' (aka 'long') is always false [-Wtautological-constant-out-of-range-compare]
  if (tm->sec > MRB_INT_MAX || tm->sec < MRB_INT_MIN) {
                               ~~~~~~~ ^ ~~~~~~~~~~~
/mruby/mrbgems/mruby-time/src/time.c:887:16: warning: result of comparison of constant 9223372036854775807 with expression of type 'time_t' (aka 'long') is always false [-Wtautological-constant-out-of-range-compare]
  if (tm->usec > MRB_INT_MAX || tm->usec < MRB_INT_MIN) {
      ~~~~~~~~ ^ ~~~~~~~~~~~
/mruby/mrbgems/mruby-time/src/time.c:887:42: warning: result of comparison of constant -9223372036854775808 with expression of type 'time_t' (aka 'long') is always false [-Wtautological-constant-out-of-range-compare]
  if (tm->usec > MRB_INT_MAX || tm->usec < MRB_INT_MIN) {
                              ~~~~~~~~ ^ ~~~~~~~~~~~",True,{}
mruby/mruby,https://github.com/mruby/mruby,4851,2019-12-04T09:08:05Z,2019-12-05T00:40:45Z,2020-01-02T10:29:39Z,MERGED,True,3,2,1,https://github.com/shuujii,Refine `mrb_alloca()`,1,[],https://github.com/mruby/mruby/pull/4851,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4851,"The allocated memory is guaranteed to be aligned for any data type (it was
not guaranteed when string type is embed).
Make allocation size exactly specified size (does not allocate space for a
null byte).","The allocated memory is guaranteed to be aligned for any data type (it was
not guaranteed when string type is embed).
Make allocation size exactly specified size (does not allocate space for a
null byte).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4852,2019-12-05T12:57:45Z,2019-12-05T23:00:54Z,2020-01-02T10:29:31Z,MERGED,True,10,15,1,https://github.com/shuujii,Auto detect `MRB_TIME_T_UINT`,1,[],https://github.com/mruby/mruby/pull/4852,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4852,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4853,2019-12-06T09:33:40Z,,2021-06-03T07:47:52Z,OPEN,False,45,20,4,https://github.com/shuujii,Add `MRB_ALLOCV()` for temporary memory allocation,1,[],https://github.com/mruby/mruby/pull/4853,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4853,"MRB_ALLOCV(mrb, type, var, n) defines type *var variable and assign
temporarily allocated memory for n objects of type type. If the
allocation size is less than or equal to MRB_ALLOCV_ON_STACK_MAX, allocate
on the stack, otherwise use mrb_alloca().
MRB_ALLOCV_ON_STACK_MAX is configurable in mrbconf.h (default is 256).","MRB_ALLOCV(mrb, type, var, n) defines type *var variable and assign
temporarily allocated memory for n objects of type type. If the
allocation size is less than or equal to MRB_ALLOCV_ON_STACK_MAX, allocate
on the stack, otherwise use mrb_alloca().
MRB_ALLOCV_ON_STACK_MAX is configurable in mrbconf.h (default is 256).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4854,2019-12-07T12:06:47Z,2019-12-08T02:24:30Z,2020-01-02T10:29:30Z,MERGED,True,113,6,1,https://github.com/shuujii,Add tests to `Math`,1,[],https://github.com/mruby/mruby/pull/4854,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4854,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4855,2019-12-07T14:54:55Z,2019-12-09T08:31:54Z,2019-12-09T14:59:52Z,MERGED,True,3,3,1,https://github.com/dearblue,Fix keyword arguments not be obtained with `mrb_get_args()`; Fix #4754,1,[],https://github.com/mruby/mruby/pull/4855,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4855,"If "":"" is after ""|"" and there is no ""?"" or ""*"", the keyword argument could not be obtained and it was not initialized with undef.
For example: ""|oo:""

Even before the patch (mruby-2.1.0), "":|o"" and ""|o*:"" etc work without problems.
However, ""|oo:"" described as an example is not assigned to keyword arguments at all.
Therefore, if the variable is accessed as it is, SIGSEGV will be executed in some cases.
Sorry!","If "":"" is after ""|"" and there is no ""?"" or ""*"", the keyword argument could not be obtained and it was not initialized with undef.
For example: ""|oo:""

Even before the patch (mruby-2.1.0), "":|o"" and ""|o*:"" etc work without problems.
However, ""|oo:"" described as an example is not assigned to keyword arguments at all.
Therefore, if the variable is accessed as it is, SIGSEGV will be executed in some cases.
Sorry!",True,{}
mruby/mruby,https://github.com/mruby/mruby,4856,2019-12-08T09:55:28Z,2019-12-08T12:31:15Z,2020-01-02T10:29:36Z,MERGED,True,3,2,1,https://github.com/shuujii,Fix the error message of `Kernel#Float`,1,[],https://github.com/mruby/mruby/pull/4856,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4856,"Before this patch:
$ bin/mruby -e 'Float(""1_a"")'
-e:1: invalid string for float(a) (ArgumentError)

After this patch:
$ bin/mruby -e 'Float(""1_a"")'
-e:1: invalid string for float(""1_a"") (ArgumentError)","Before this patch:
$ bin/mruby -e 'Float(""1_a"")'
-e:1: invalid string for float(a) (ArgumentError)

After this patch:
$ bin/mruby -e 'Float(""1_a"")'
-e:1: invalid string for float(""1_a"") (ArgumentError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4858,2019-12-09T12:58:39Z,2019-12-10T02:09:56Z,2020-01-02T10:29:36Z,MERGED,True,57,40,3,https://github.com/shuujii,Fix that `String#to_f` accepts consecutive `_` as a numeric expression,1,[],https://github.com/mruby/mruby/pull/4858,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4858,"Consecutive _ is not allowed as a numeric expression:
1_2__3             #=> SyntaxError
Float(""1_2__3"")    #=> ArgumentError
Integer(""1_2__3"")  #=> ArgumentError
""1_2__3"".to_i      #=> 12
But String#to_f accept it, so I fixed the issue.
Before this patch:
""1_2__3"".to_f      #=> 123
After this patch:
""1_2__3"".to_f      #=> 12","Consecutive _ is not allowed as a numeric expression:
1_2__3             #=> SyntaxError
Float(""1_2__3"")    #=> ArgumentError
Integer(""1_2__3"")  #=> ArgumentError
""1_2__3"".to_i      #=> 12
But String#to_f accept it, so I fixed the issue.
Before this patch:
""1_2__3"".to_f      #=> 123
After this patch:
""1_2__3"".to_f      #=> 12",True,{}
mruby/mruby,https://github.com/mruby/mruby,4859,2019-12-09T15:11:43Z,2019-12-16T04:50:34Z,2019-12-16T11:57:58Z,MERGED,True,8,4,8,https://github.com/dearblue,"Add ""mruby developers"" into some gems; Resolve #4709",1,[],https://github.com/mruby/mruby/pull/4859,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4859,"It is writing side by side with the original authors.

Although it is redundant, it is the simplest description.
For your reference, list the added commits.



gem name
year
release
commit




mruby-io
2017
1.4.0
d75266d


mruby-pack
2017
1.4.0
a5412d4


mruby-socket
2017
1.4.0
73ef548


mruby-sleep
2018
2.0.0
44fdd53","It is writing side by side with the original authors.

Although it is redundant, it is the simplest description.
For your reference, list the added commits.



gem name
year
release
commit




mruby-io
2017
1.4.0
d75266d


mruby-pack
2017
1.4.0
a5412d4


mruby-socket
2017
1.4.0
73ef548


mruby-sleep
2018
2.0.0
44fdd53",True,{}
mruby/mruby,https://github.com/mruby/mruby,4859,2019-12-09T15:11:43Z,2019-12-16T04:50:34Z,2019-12-16T11:57:58Z,MERGED,True,8,4,8,https://github.com/dearblue,"Add ""mruby developers"" into some gems; Resolve #4709",1,[],https://github.com/mruby/mruby/pull/4859,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4859#issuecomment-563582279,"It is writing side by side with the original authors.

Although it is redundant, it is the simplest description.
For your reference, list the added commits.



gem name
year
release
commit




mruby-io
2017
1.4.0
d75266d


mruby-pack
2017
1.4.0
a5412d4


mruby-socket
2017
1.4.0
73ef548


mruby-sleep
2018
2.0.0
44fdd53",@tsahara @matsumotory Are you OK with this change?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4859,2019-12-09T15:11:43Z,2019-12-16T04:50:34Z,2019-12-16T11:57:58Z,MERGED,True,8,4,8,https://github.com/dearblue,"Add ""mruby developers"" into some gems; Resolve #4709",1,[],https://github.com/mruby/mruby/pull/4859,https://github.com/tsahara,3,https://github.com/mruby/mruby/pull/4859#issuecomment-563605427,"It is writing side by side with the original authors.

Although it is redundant, it is the simplest description.
For your reference, list the added commits.



gem name
year
release
commit




mruby-io
2017
1.4.0
d75266d


mruby-pack
2017
1.4.0
a5412d4


mruby-socket
2017
1.4.0
73ef548


mruby-sleep
2018
2.0.0
44fdd53",OK.  And thank you for the effort maintaining the gems in the core.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4859,2019-12-09T15:11:43Z,2019-12-16T04:50:34Z,2019-12-16T11:57:58Z,MERGED,True,8,4,8,https://github.com/dearblue,"Add ""mruby developers"" into some gems; Resolve #4709",1,[],https://github.com/mruby/mruby/pull/4859,https://github.com/matsumotory,4,https://github.com/mruby/mruby/pull/4859#issuecomment-565758304,"It is writing side by side with the original authors.

Although it is redundant, it is the simplest description.
For your reference, list the added commits.



gem name
year
release
commit




mruby-io
2017
1.4.0
d75266d


mruby-pack
2017
1.4.0
a5412d4


mruby-socket
2017
1.4.0
73ef548


mruby-sleep
2018
2.0.0
44fdd53",OK!!!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4859,2019-12-09T15:11:43Z,2019-12-16T04:50:34Z,2019-12-16T11:57:58Z,MERGED,True,8,4,8,https://github.com/dearblue,"Add ""mruby developers"" into some gems; Resolve #4709",1,[],https://github.com/mruby/mruby/pull/4859,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4859#issuecomment-565903883,"It is writing side by side with the original authors.

Although it is redundant, it is the simplest description.
For your reference, list the added commits.



gem name
year
release
commit




mruby-io
2017
1.4.0
d75266d


mruby-pack
2017
1.4.0
a5412d4


mruby-socket
2017
1.4.0
73ef548


mruby-sleep
2018
2.0.0
44fdd53",Thank you! @tsahara and @matsumotory,True,{}
mruby/mruby,https://github.com/mruby/mruby,4859,2019-12-09T15:11:43Z,2019-12-16T04:50:34Z,2019-12-16T11:57:58Z,MERGED,True,8,4,8,https://github.com/dearblue,"Add ""mruby developers"" into some gems; Resolve #4709",1,[],https://github.com/mruby/mruby/pull/4859,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/4859#issuecomment-566031252,"It is writing side by side with the original authors.

Although it is redundant, it is the simplest description.
For your reference, list the added commits.



gem name
year
release
commit




mruby-io
2017
1.4.0
d75266d


mruby-pack
2017
1.4.0
a5412d4


mruby-socket
2017
1.4.0
73ef548


mruby-sleep
2018
2.0.0
44fdd53",@tsahara @matsumotory @matz Thanks!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4860,2019-12-10T12:50:14Z,2019-12-10T14:00:18Z,2020-01-02T10:29:34Z,MERGED,True,16,1,3,https://github.com/shuujii,Fix behavior of `String#to_i`/`Kernel#Integer` to numbers starting with `_`,1,[],https://github.com/mruby/mruby/pull/4860,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4860,"Before this patch:
Integer(""_1"")  #=> 1
""_1"".to_i      #=> 1
After this patch (same as Ruby):
Integer(""_1"")  #=> ArgumentError
""_1"".to_i      #=> 0","Before this patch:
Integer(""_1"")  #=> 1
""_1"".to_i      #=> 1
After this patch (same as Ruby):
Integer(""_1"")  #=> ArgumentError
""_1"".to_i      #=> 0",True,{}
mruby/mruby,https://github.com/mruby/mruby,4861,2019-12-11T09:01:56Z,2019-12-12T00:26:15Z,2020-01-02T10:29:34Z,MERGED,True,7,2,3,https://github.com/shuujii,Fix behavior of `Kernel#Integer` to numbers ending with `_` and spaces,1,[],https://github.com/mruby/mruby/pull/4861,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4861,"Before this patch:
Integer(""1_ "")  #=> 1
After this patch (same as Ruby):
Integer(""1_ "")  #=> ArgumentError","Before this patch:
Integer(""1_ "")  #=> 1
After this patch (same as Ruby):
Integer(""1_ "")  #=> ArgumentError",True,{}
mruby/mruby,https://github.com/mruby/mruby,4863,2019-12-12T08:37:51Z,2020-01-01T13:34:22Z,2020-01-02T10:29:30Z,MERGED,True,20,6,7,https://github.com/shuujii,"Add `mrb_num_args_error()` for ""wrong number of arguments"" error",1,[],https://github.com/mruby/mruby/pull/4863,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4863,To unify the style of messages.,To unify the style of messages.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4863,2019-12-12T08:37:51Z,2020-01-01T13:34:22Z,2020-01-02T10:29:30Z,MERGED,True,20,6,7,https://github.com/shuujii,"Add `mrb_num_args_error()` for ""wrong number of arguments"" error",1,[],https://github.com/mruby/mruby/pull/4863,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4863#issuecomment-565025664,To unify the style of messages.,"A little comment.
CRuby has rb_error_arity () and rb_check_arity () functions, so I would be happy if you could name them together.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4863,2019-12-12T08:37:51Z,2020-01-01T13:34:22Z,2020-01-02T10:29:30Z,MERGED,True,20,6,7,https://github.com/shuujii,"Add `mrb_num_args_error()` for ""wrong number of arguments"" error",1,[],https://github.com/mruby/mruby/pull/4863,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4863#issuecomment-565028379,To unify the style of messages.,"Sorry.
After checking rb_error_arity() and rb_check_arity(), it was declared in include/ruby/intern.h, so it was an internal function.
Forget the previous comment.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4864,2019-12-12T19:42:33Z,2019-12-27T01:58:25Z,2019-12-27T02:39:49Z,MERGED,True,8,3,1,https://github.com/take-cheeze,Enable sanitizer in travis test,1,[],https://github.com/mruby/mruby/pull/4864,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4864,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4864,2019-12-12T19:42:33Z,2019-12-27T01:58:25Z,2019-12-27T02:39:49Z,MERGED,True,8,3,1,https://github.com/take-cheeze,Enable sanitizer in travis test,1,[],https://github.com/mruby/mruby/pull/4864,https://github.com/take-cheeze,2,https://github.com/mruby/mruby/pull/4864#issuecomment-565312597,,Seems to get leak report in mruby -h will check,True,{}
mruby/mruby,https://github.com/mruby/mruby,4865,2019-12-12T19:42:51Z,2020-06-04T02:01:05Z,2020-06-04T02:01:05Z,MERGED,True,4,1,1,https://github.com/take-cheeze,Align RIStruct data for rational/complex,1,[],https://github.com/mruby/mruby/pull/4865,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4865,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4866,2019-12-13T09:36:23Z,2019-12-13T16:14:27Z,2020-01-02T10:29:33Z,MERGED,True,1,0,1,https://github.com/shuujii,Fix arguments check to `Array#each`,1,[],https://github.com/mruby/mruby/pull/4866,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4866,"Before this patch:
$ mruby -e '[].each(1){}'  #=> no error

After this patch:
$ mruby -e '[].each(1){}'  #=> ArgumentError: wrong number of arguments","Before this patch:
$ mruby -e '[].each(1){}'  #=> no error

After this patch:
$ mruby -e '[].each(1){}'  #=> ArgumentError: wrong number of arguments",True,{}
mruby/mruby,https://github.com/mruby/mruby,4867,2019-12-13T14:40:46Z,,2021-06-03T07:47:52Z,OPEN,False,1,0,1,https://github.com/take-cheeze,Set alloca size as string capa for debug purpose,1,[],https://github.com/mruby/mruby/pull/4867,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4867,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4867,2019-12-13T14:40:46Z,,2021-06-03T07:47:52Z,OPEN,False,1,0,1,https://github.com/take-cheeze,Set alloca size as string capa for debug purpose,1,[],https://github.com/mruby/mruby/pull/4867,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4867#issuecomment-565504517,,Could you please tell us the reason behind the change? The RString struct will not be accessed but from mrb_gc_free_str and the function does not refer capa .,True,{}
mruby/mruby,https://github.com/mruby/mruby,4868,2019-12-13T15:23:20Z,2019-12-17T16:40:22Z,2019-12-18T03:21:11Z,CLOSED,False,5,1,1,https://github.com/take-cheeze,Fix ownership error in vformat test,1,[],https://github.com/mruby/mruby/pull/4868,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4868,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4868,2019-12-13T15:23:20Z,2019-12-17T16:40:22Z,2019-12-18T03:21:11Z,CLOSED,False,5,1,1,https://github.com/take-cheeze,Fix ownership error in vformat test,1,[],https://github.com/mruby/mruby/pull/4868,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4868#issuecomment-565509221,,I don't see the reason to protect the %C class only. Does this PR fix any real problem?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4868,2019-12-13T15:23:20Z,2019-12-17T16:40:22Z,2019-12-18T03:21:11Z,CLOSED,False,5,1,1,https://github.com/take-cheeze,Fix ownership error in vformat test,1,[],https://github.com/mruby/mruby/pull/4868,https://github.com/take-cheeze,3,https://github.com/mruby/mruby/pull/4868#issuecomment-565512992,,"This bothers me when testing with -DMRB_GC_STRESS.
And object under RData's memory don't get marked so it's potentially unsafe operation anyway.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4868,2019-12-13T15:23:20Z,2019-12-17T16:40:22Z,2019-12-18T03:21:11Z,CLOSED,False,5,1,1,https://github.com/take-cheeze,Fix ownership error in vformat test,1,[],https://github.com/mruby/mruby/pull/4868,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4868#issuecomment-565667209,,This issue seems to be resolved by #4622. Will it not be merged?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4868,2019-12-13T15:23:20Z,2019-12-17T16:40:22Z,2019-12-18T03:21:11Z,CLOSED,False,5,1,1,https://github.com/take-cheeze,Fix ownership error in vformat test,1,[],https://github.com/mruby/mruby/pull/4868,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4868#issuecomment-566644514,,I don't think %C (class/module) needs to be saved in TestVFormat::Native. %C should be handled like %t.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4869,2019-12-14T06:29:49Z,2019-12-16T15:49:02Z,2019-12-21T08:39:38Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix mruby-io test for mingw32,1,[],https://github.com/mruby/mruby/pull/4869,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4869,Need mkstemp() implements.,Need mkstemp() implements.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4870,2019-12-14T06:30:09Z,2019-12-20T10:24:46Z,2019-12-21T08:39:30Z,MERGED,True,0,23,3,https://github.com/dearblue,Remove unnessesary branches,1,[],https://github.com/mruby/mruby/pull/4870,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4870,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4871,2019-12-14T06:30:52Z,2019-12-20T10:29:48Z,2019-12-21T08:39:49Z,MERGED,True,33,33,1,https://github.com/dearblue,Avoid method in method,1,[],https://github.com/mruby/mruby/pull/4871,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4871,And rename File.concat_path to File._concat_path.,And rename File.concat_path to File._concat_path.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4872,2019-12-14T06:39:40Z,2020-01-06T09:58:52Z,2020-01-06T14:38:50Z,MERGED,True,116,1,2,https://github.com/dearblue,Implement `File#size` and `File#truncate`,1,[],https://github.com/mruby/mruby/pull/4872,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4872,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4873,2019-12-14T06:42:28Z,2020-01-28T02:09:33Z,2020-02-16T10:06:54Z,MERGED,True,151,88,4,https://github.com/dearblue,Support bit flags for `IO.open`,1,[],https://github.com/mruby/mruby/pull/4873,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4873,Note that this bit flags are not compatible with the native flags defined in #include <fcntl.h>.,Note that this bit flags are not compatible with the native flags defined in #include <fcntl.h>.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4874,2019-12-14T13:10:55Z,2019-12-20T10:23:13Z,2019-12-21T08:40:37Z,MERGED,True,22,11,1,https://github.com/dearblue,Fix for `#methods` to include methods that were `undef`,1,[],https://github.com/mruby/mruby/pull/4874,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4874,"If #methods traverse the super class, it includes the methods that were does undef in the subclass.
Before patched:
% bin/mruby -e 'p Module.instance_methods - Class.instance_methods'
[]

After patched:
% bin/mruby -e 'p Module.instance_methods - Class.instance_methods'
[:append_features, :extend_object]","If #methods traverse the super class, it includes the methods that were does undef in the subclass.
Before patched:
% bin/mruby -e 'p Module.instance_methods - Class.instance_methods'
[]

After patched:
% bin/mruby -e 'p Module.instance_methods - Class.instance_methods'
[:append_features, :extend_object]",True,{}
mruby/mruby,https://github.com/mruby/mruby,4875,2019-12-14T13:20:05Z,2019-12-17T16:55:24Z,2020-01-02T10:29:40Z,MERGED,True,8,59,4,https://github.com/shuujii,Remove location info from `Exception#inspect`,1,[],https://github.com/mruby/mruby/pull/4875,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4875,"Because location info (file name and line number) is kept in the backtrace,
it should not be kept in the result of inspect (and the exception object
itself), I think.
Example
# example.rb
begin
  raise ""err""
rescue => e
  p e
end
Before this patch:
$ bin/mruby example.rb
example.rb:2: err (RuntimeError)

After this patch:
$ bin/mruby example.rb
err (RuntimeError)","Because location info (file name and line number) is kept in the backtrace,
it should not be kept in the result of inspect (and the exception object
itself), I think.
Example
# example.rb
begin
  raise ""err""
rescue => e
  p e
end
Before this patch:
$ bin/mruby example.rb
example.rb:2: err (RuntimeError)

After this patch:
$ bin/mruby example.rb
err (RuntimeError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4876,2019-12-14T13:20:28Z,2019-12-16T04:53:56Z,2019-12-16T11:58:14Z,MERGED,True,2,0,1,https://github.com/dearblue,Remove module only methods from class,1,[],https://github.com/mruby/mruby/pull/4876,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4876,The #prepend_features and #module_function methods are not haves for class objects.,The #prepend_features and #module_function methods are not haves for class objects.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4877,2019-12-15T13:59:56Z,2019-12-16T04:51:49Z,2020-01-02T10:29:32Z,MERGED,True,5,8,2,https://github.com/shuujii,Drop dependencies from `mruby-complex` to some gems,1,[],https://github.com/mruby/mruby/pull/4877,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4877,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4878,2019-12-16T10:10:39Z,2019-12-16T15:48:27Z,2020-01-02T10:29:40Z,MERGED,True,5,23,1,https://github.com/shuujii,Remove unneeded null checks to `struct backtrace_location::filename`,1,[],https://github.com/mruby/mruby/pull/4878,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4878,"struct backtrace_location is created only in each_backtrace(), and
the filename field will never be null (it will be (unknown) if null).","struct backtrace_location is created only in each_backtrace(), and
the filename field will never be null (it will be (unknown) if null).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4879,2019-12-17T14:51:00Z,2019-12-17T16:54:29Z,2020-01-02T10:29:39Z,MERGED,True,31,47,3,https://github.com/shuujii,Refine output of `mrb_print_error()`,1,[],https://github.com/mruby/mruby/pull/4879,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4879,"The following improvements are made according to Ruby's behavior:

Match location number to index.
Remove duplicate most recent call output.
Fix that first call is not output when array (unpacked) backtrace.

Example
def a; raise ""error!"" end
def b; a end
begin
  b
rescue => e
  e.backtrace if ARGV[0] == ""unpack""  # unpack backtrace
  raise e
end
Before this patch:
$ bin/mruby example.rb unpack
trace (most recent call last):
  [0] example.rb:2:in b
  [1] example.rb:1:in a
example.rb:1: error! (RuntimeError)
After this patch:
$ bin/mruby example.rb unpack
trace (most recent call last):
  [2] example.rb:4
  [1] example.rb:2:in b
example.rb:1:in a: error! (RuntimeError)","The following improvements are made according to Ruby's behavior:

Match location number to index.
Remove duplicate most recent call output.
Fix that first call is not output when array (unpacked) backtrace.

Example
def a; raise ""error!"" end
def b; a end
begin
  b
rescue => e
  e.backtrace if ARGV[0] == ""unpack""  # unpack backtrace
  raise e
end
Before this patch:
$ bin/mruby example.rb unpack
trace (most recent call last):
  [0] example.rb:2:in b
  [1] example.rb:1:in a
example.rb:1: error! (RuntimeError)
After this patch:
$ bin/mruby example.rb unpack
trace (most recent call last):
  [2] example.rb:4
  [1] example.rb:2:in b
example.rb:1:in a: error! (RuntimeError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4880,2019-12-17T17:39:31Z,2019-12-17T17:40:02Z,2019-12-17T23:47:34Z,CLOSED,False,17351,549,181,https://github.com/wleoguty91,Compile ubuntu,216,[],https://github.com/mruby/mruby/pull/4880,https://github.com/wleoguty91,1,https://github.com/mruby/mruby/pull/4880,"Summary

Added flags for compiler in ubuntu","Summary

Added flags for compiler in ubuntu",True,{}
mruby/mruby,https://github.com/mruby/mruby,4880,2019-12-17T17:39:31Z,2019-12-17T17:40:02Z,2019-12-17T23:47:34Z,CLOSED,False,17351,549,181,https://github.com/wleoguty91,Compile ubuntu,216,[],https://github.com/mruby/mruby/pull/4880,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4880#issuecomment-566800546,"Summary

Added flags for compiler in ubuntu",Are you going to re-submit PR?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4881,2019-12-18T10:45:46Z,2019-12-19T00:51:32Z,2020-01-02T10:29:35Z,MERGED,True,5,5,1,https://github.com/shuujii,Fix `mruby-bin-debugger` tests; ref d2f2f9db,1,[],https://github.com/mruby/mruby/pull/4881,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4881,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4882,2019-12-18T10:46:01Z,2019-12-19T00:50:23Z,2020-01-02T10:29:43Z,MERGED,True,12,22,2,https://github.com/shuujii,Simplify `print_backtrace()`,1,[],https://github.com/mruby/mruby/pull/4882,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4882,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4883,2019-12-19T14:31:02Z,2019-12-19T17:28:25Z,2019-12-20T11:36:20Z,CLOSED,False,268,184,2,https://github.com/shuujii,Retrieve `mrb_vfromat()` tests at 1e9cb74c,1,[],https://github.com/mruby/mruby/pull/4883,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4883,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4883,2019-12-19T14:31:02Z,2019-12-19T17:28:25Z,2019-12-20T11:36:20Z,CLOSED,False,268,184,2,https://github.com/shuujii,Retrieve `mrb_vfromat()` tests at 1e9cb74c,1,[],https://github.com/mruby/mruby/pull/4883,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4883#issuecomment-567585199,,I am not going to simply revert the change. Show us your fix.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4883,2019-12-19T14:31:02Z,2019-12-19T17:28:25Z,2019-12-20T11:36:20Z,CLOSED,False,268,184,2,https://github.com/shuujii,Retrieve `mrb_vfromat()` tests at 1e9cb74c,1,[],https://github.com/mruby/mruby/pull/4883,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4883#issuecomment-567736051,,"Show us your fix.

My fix is this PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4883,2019-12-19T14:31:02Z,2019-12-19T17:28:25Z,2019-12-20T11:36:20Z,CLOSED,False,268,184,2,https://github.com/shuujii,Retrieve `mrb_vfromat()` tests at 1e9cb74c,1,[],https://github.com/mruby/mruby/pull/4883,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4883#issuecomment-567742064,,"Sorry, the subject of PR might have been confusing. This PR fixes to support %l test without code generation.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4883,2019-12-19T14:31:02Z,2019-12-19T17:28:25Z,2019-12-20T11:36:20Z,CLOSED,False,268,184,2,https://github.com/shuujii,Retrieve `mrb_vfromat()` tests at 1e9cb74c,1,[],https://github.com/mruby/mruby/pull/4883,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4883#issuecomment-567814285,,I understand. Let me see your code for %l support.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4883,2019-12-19T14:31:02Z,2019-12-19T17:28:25Z,2019-12-20T11:36:20Z,CLOSED,False,268,184,2,https://github.com/shuujii,Retrieve `mrb_vfromat()` tests at 1e9cb74c,1,[],https://github.com/mruby/mruby/pull/4883,https://github.com/matz,6,https://github.com/mruby/mruby/pull/4883#issuecomment-567832374,,"My opinion (the current master (matz) vs this PR (shuuji)):

matz supports %l naturally
shuuji supports the following:

some combination of type specifiers
some implementation_dependant tests


I am not sure if above tests are absolutely needed

If those combination tests and implementation-dependent tests, I will implement them on top of the master.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4883,2019-12-19T14:31:02Z,2019-12-19T17:28:25Z,2019-12-20T11:36:20Z,CLOSED,False,268,184,2,https://github.com/shuujii,Retrieve `mrb_vfromat()` tests at 1e9cb74c,1,[],https://github.com/mruby/mruby/pull/4883,https://github.com/shuujii,7,https://github.com/mruby/mruby/pull/4883#issuecomment-567895891,,"In the first place, I just made the %l test temporarily disabled at 1e9cb74 work again, and have not changed the test itself before that commit (diff: test/t/vformat.rb).


I think my implementation also naturally supports %l, so I am not sure the essential difference from the matz implementation. My implementation is a method of specifying C type from Ruby (n.d(1) is int, n.s('str') is char*, n.l(2) is size_t, etc).


My implementation supports all specifiers combination up to 2 arguments.


I think that it is necessary to test patterns that are easy to make mistakes, such as when multiple specifiers, ending with %, etc. At least I can't always implement without mistakes when refactoring, improvement, etc. The implementation_dependant tests are also intended to show that users should not depend on these behaviors (e.g. ending with %in Ruby)


I think mrb_gc_register() and mrb_gc_unregister() are important APIs (used in H2O, etc). However, they are not used in the core and no tests, so I intentionally use them in this PR. Actually, I found a bug (#4618).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4885,2019-12-20T12:37:19Z,2019-12-20T16:18:10Z,2020-01-02T10:29:36Z,MERGED,True,4,0,1,https://github.com/shuujii,Fix potentially crash in `%n` of `mrb_vformat()` with 64-bit `int`,1,[],https://github.com/mruby/mruby/pull/4885,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4885,"If mrb_sym is smaller than int, it is promoted to int.","If mrb_sym is smaller than int, it is promoted to int.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4885,2019-12-20T12:37:19Z,2019-12-20T16:18:10Z,2020-01-02T10:29:36Z,MERGED,True,4,0,1,https://github.com/shuujii,Fix potentially crash in `%n` of `mrb_vformat()` with 64-bit `int`,1,[],https://github.com/mruby/mruby/pull/4885,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4885#issuecomment-567980854,"If mrb_sym is smaller than int, it is promoted to int.","OK, thank you!",True,{}
mruby/mruby,https://github.com/mruby/mruby,4887,2019-12-20T14:21:22Z,2019-12-27T08:34:33Z,2019-12-27T08:42:49Z,CLOSED,False,6,0,2,https://github.com/take-cheeze,Support `-v` flag of rake,2,[],https://github.com/mruby/mruby/pull/4887,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4887,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4888,2019-12-21T08:49:41Z,2019-12-21T13:46:28Z,2019-12-22T05:43:00Z,MERGED,True,7,7,1,https://github.com/dearblue,Perform `shellquote` on referenced string,1,[],https://github.com/mruby/mruby/pull/4888,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4888,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4889,2019-12-21T10:48:47Z,2019-12-21T13:10:43Z,2020-01-02T10:29:29Z,MERGED,True,20,23,2,https://github.com/shuujii,`_0` is not numbered parameter,1,[],https://github.com/mruby/mruby/pull/4889,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4889,"Before this patch:
$ bin/mruby rb -e '_0=:l; p ->{_0}.()'
-e:1:13: _0 is not available
-e:1:13: syntax error, unexpected $end, expecting '}'
After this patch (same as Ruby):
$ bin/mruby rb -e '_0=:l; p ->{_0}.()'
:l","Before this patch:
$ bin/mruby rb -e '_0=:l; p ->{_0}.()'
-e:1:13: _0 is not available
-e:1:13: syntax error, unexpected $end, expecting '}'
After this patch (same as Ruby):
$ bin/mruby rb -e '_0=:l; p ->{_0}.()'
:l",True,{}
mruby/mruby,https://github.com/mruby/mruby,4896,2019-12-21T14:31:25Z,2019-12-22T04:12:59Z,2020-01-02T10:29:37Z,MERGED,True,2,2,1,https://github.com/shuujii,"Fix ""undefined method `Pathname'""; fix #4895",1,[],https://github.com/mruby/mruby/pull/4896,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4896,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4897,2019-12-21T14:48:40Z,2019-12-22T04:11:23Z,2020-01-02T10:29:45Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `exec` instead of `system` in `minirake` for exit status,1,[],https://github.com/mruby/mruby/pull/4897,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4897,"Before this patch:
$ ./minirake --foo; echo $?
invalid option: --foo
0
After this patch:
$ ./minirake --foo; echo $?
invalid option: --foo
1","Before this patch:
$ ./minirake --foo; echo $?
invalid option: --foo
0
After this patch:
$ ./minirake --foo; echo $?
invalid option: --foo
1",True,{}
mruby/mruby,https://github.com/mruby/mruby,4898,2019-12-22T02:34:22Z,2019-12-22T04:13:50Z,2020-01-02T10:29:38Z,MERGED,True,1,6,1,https://github.com/shuujii,Refine `.travis.yml`,1,[],https://github.com/mruby/mruby/pull/4898,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4898,"Use rake instead of minirake.
Remove gperf configuration.

Execution time seems to be reduced by about 15%.","Use rake instead of minirake.
Remove gperf configuration.

Execution time seems to be reduced by about 15%.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4899,2019-12-22T06:29:45Z,2019-12-22T13:31:34Z,2019-12-30T15:35:58Z,MERGED,True,15,10,2,https://github.com/dearblue,Use `git checkout` instead of `git reset`,2,[],https://github.com/mruby/mruby/pull/4899,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4899,"With this change, if the checkout fails, it will stop with an error.
The purpose is to avoid deleting working branch history when developing gem.
Also, make sure that directories are also displayed during git reset and git checkout.

Removing the .lock file every time, or calling the MRuby::Build#disable_lock method can avoid losing the working branch, but I think it's better to raise an error.
This suggestion will be withdrawn if there are other good practices.","With this change, if the checkout fails, it will stop with an error.
The purpose is to avoid deleting working branch history when developing gem.
Also, make sure that directories are also displayed during git reset and git checkout.

Removing the .lock file every time, or calling the MRuby::Build#disable_lock method can avoid losing the working branch, but I think it's better to raise an error.
This suggestion will be withdrawn if there are other good practices.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4900,2019-12-23T11:14:13Z,2019-12-23T11:37:26Z,2020-01-02T10:29:37Z,MERGED,True,1,1,1,https://github.com/shuujii,Parallelize compilation only on Travis CI,1,[],https://github.com/mruby/mruby/pull/4900,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4900,Parallel execution of tests makes log difficult to see due to mixing.,Parallel execution of tests makes log difficult to see due to mixing.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4901,2019-12-23T11:59:32Z,2019-12-23T12:32:27Z,2019-12-23T12:33:46Z,MERGED,True,1,1,1,https://github.com/take-cheeze,Use GNU extension in C++ for cygwin,1,[],https://github.com/mruby/mruby/pull/4901,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4901,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4902,2019-12-23T12:02:11Z,2019-12-23T12:31:52Z,2019-12-23T13:05:37Z,MERGED,True,9,2,2,https://github.com/take-cheeze,Handle CR LF newline natively in lexer,2,[],https://github.com/mruby/mruby/pull/4902,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4902,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4903,2019-12-23T12:47:12Z,2020-05-24T13:36:05Z,2020-08-11T10:33:12Z,CLOSED,False,119,3,6,https://github.com/take-cheeze,Use GitHub actions to run CIs,55,[],https://github.com/mruby/mruby/pull/4903,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4903,"Latest success: https://github.com/take-cheeze/mruby/runs/360977798
Supports:

Ubuntu 16.04
Ubuntu 18.04 gcc
Ubuntu 18.04 clang
macOS
MinGW
MSVC
Cygwin","Latest success: https://github.com/take-cheeze/mruby/runs/360977798
Supports:

Ubuntu 16.04
Ubuntu 18.04 gcc
Ubuntu 18.04 clang
macOS
MinGW
MSVC
Cygwin",True,{}
mruby/mruby,https://github.com/mruby/mruby,4903,2019-12-23T12:47:12Z,2020-05-24T13:36:05Z,2020-08-11T10:33:12Z,CLOSED,False,119,3,6,https://github.com/take-cheeze,Use GitHub actions to run CIs,55,[],https://github.com/mruby/mruby/pull/4903,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4903#issuecomment-633232119,"Latest success: https://github.com/take-cheeze/mruby/runs/360977798
Supports:

Ubuntu 16.04
Ubuntu 18.04 gcc
Ubuntu 18.04 clang
macOS
MinGW
MSVC
Cygwin",I finally merged the PR. Now what shall we do to enable GitHub Actions?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4903,2019-12-23T12:47:12Z,2020-05-24T13:36:05Z,2020-08-11T10:33:12Z,CLOSED,False,119,3,6,https://github.com/take-cheeze,Use GitHub actions to run CIs,55,[],https://github.com/mruby/mruby/pull/4903,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4903#issuecomment-633314225,"Latest success: https://github.com/take-cheeze/mruby/runs/360977798
Supports:

Ubuntu 16.04
Ubuntu 18.04 gcc
Ubuntu 18.04 clang
macOS
MinGW
MSVC
Cygwin","Ah, we need to support newer bison for GitHub actions. I tried some (e.g. 6803ddb) but didn't succeed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4905,2019-12-23T14:52:32Z,2019-12-24T05:23:25Z,2019-12-24T05:23:25Z,MERGED,True,1,1,1,https://github.com/kishima,Add double quotes for cygwin filenames #4904,1,[],https://github.com/mruby/mruby/pull/4905,https://github.com/kishima,1,https://github.com/mruby/mruby/pull/4905,"Double quotes for filenames was removed from both filename and cygwin_filename by the commit  b7bc03a.
However cygwin needs it to recognize windows style file path.","Double quotes for filenames was removed from both filename and cygwin_filename by the commit  b7bc03a.
However cygwin needs it to recognize windows style file path.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4906,2019-12-24T14:21:52Z,2019-12-25T01:58:05Z,2020-01-02T10:29:39Z,MERGED,True,14,12,1,https://github.com/shuujii,Refine the assertion failure message in mrdb print tests,1,[],https://github.com/mruby/mruby/pull/4906,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4906,"Before this patch:
Fail: mruby-bin-debugger(print) error (mrbgems: mruby-bin-debugger)
 - Assertion[2]
    Expected true to be false.
After this patch:
Fail: mruby-bin-debugger(print) error (mrbgems: mruby-bin-debugger)
 - Assertion[2]
    Expected ""$2 = undefined method 'bar' (NoMethodError)\n"" to be start_with? ""$2 = (eval):2: undefined method"".","Before this patch:
Fail: mruby-bin-debugger(print) error (mrbgems: mruby-bin-debugger)
 - Assertion[2]
    Expected true to be false.
After this patch:
Fail: mruby-bin-debugger(print) error (mrbgems: mruby-bin-debugger)
 - Assertion[2]
    Expected ""$2 = undefined method 'bar' (NoMethodError)\n"" to be start_with? ""$2 = (eval):2: undefined method"".",True,{}
mruby/mruby,https://github.com/mruby/mruby,4907,2019-12-25T12:33:17Z,2019-12-25T14:23:01Z,2021-01-09T18:27:37Z,MERGED,True,12,6,3,https://github.com/shuujii,Fix potentially use of wrong method cache,1,[],https://github.com/mruby/mruby/pull/4907,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4907,"Example (with MRB_METHOD_CACHE)
GC.start
c = Class.new
p c            #=> #<Class:0x7fd6a180e790>
c.new          #=> cache `c.new`
c = nil
GC.start       #=> `c` is GCed
r = Range.dup
p r            #=> #<Class:0x7fd6a180e790>
               #   [same pointer as `c`]
r.new(2, 3)    #=> ArgumentError: 'initialize':
               #   wrong number of arguments (2 for 0)
               #   [`c.new` is called instead of `r.new`]
Cause
An entry of method cache is identified by class pointer and method
id. However, reusing memory after GC may create a class with the same
pointer as the cached class.
Treatment
Cleared method caches of the class when the class is GCed.","Example (with MRB_METHOD_CACHE)
GC.start
c = Class.new
p c            #=> #<Class:0x7fd6a180e790>
c.new          #=> cache `c.new`
c = nil
GC.start       #=> `c` is GCed
r = Range.dup
p r            #=> #<Class:0x7fd6a180e790>
               #   [same pointer as `c`]
r.new(2, 3)    #=> ArgumentError: 'initialize':
               #   wrong number of arguments (2 for 0)
               #   [`c.new` is called instead of `r.new`]
Cause
An entry of method cache is identified by class pointer and method
id. However, reusing memory after GC may create a class with the same
pointer as the cached class.
Treatment
Cleared method caches of the class when the class is GCed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4907,2019-12-25T12:33:17Z,2019-12-25T14:23:01Z,2021-01-09T18:27:37Z,MERGED,True,12,6,3,https://github.com/shuujii,Fix potentially use of wrong method cache,1,[],https://github.com/mruby/mruby/pull/4907,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4907#issuecomment-568904672,"Example (with MRB_METHOD_CACHE)
GC.start
c = Class.new
p c            #=> #<Class:0x7fd6a180e790>
c.new          #=> cache `c.new`
c = nil
GC.start       #=> `c` is GCed
r = Range.dup
p r            #=> #<Class:0x7fd6a180e790>
               #   [same pointer as `c`]
r.new(2, 3)    #=> ArgumentError: 'initialize':
               #   wrong number of arguments (2 for 0)
               #   [`c.new` is called instead of `r.new`]
Cause
An entry of method cache is identified by class pointer and method
id. However, reusing memory after GC may create a class with the same
pointer as the cached class.
Treatment
Cleared method caches of the class when the class is GCed.","First I worried little about performance impact. But classes and modules are rarely collected, so I will merge this PR as it is.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4908,2019-12-25T16:21:25Z,2021-05-13T13:06:23Z,2021-05-13T13:06:24Z,CLOSED,False,128,0,3,https://github.com/take-cheeze,Introduce Encoding core mrbgem,1,[],https://github.com/mruby/mruby/pull/4908,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/4908,For better scripting side UTF-8 support,For better scripting side UTF-8 support,True,{}
mruby/mruby,https://github.com/mruby/mruby,4908,2019-12-25T16:21:25Z,2021-05-13T13:06:23Z,2021-05-13T13:06:24Z,CLOSED,False,128,0,3,https://github.com/take-cheeze,Introduce Encoding core mrbgem,1,[],https://github.com/mruby/mruby/pull/4908,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4908#issuecomment-569164998,For better scripting side UTF-8 support,"The PR is not very useful for mruby, since it does not convert encoding at all. What is the motivation behind the PR? Compatibility?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4908,2019-12-25T16:21:25Z,2021-05-13T13:06:23Z,2021-05-13T13:06:24Z,CLOSED,False,128,0,3,https://github.com/take-cheeze,Introduce Encoding core mrbgem,1,[],https://github.com/mruby/mruby/pull/4908,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4908#issuecomment-840542094,For better scripting side UTF-8 support,"At least for the time being, we are not going to add Encoding to mruby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4909,2019-12-26T08:27:44Z,2019-12-27T08:45:21Z,2020-01-15T14:40:20Z,CLOSED,False,3,29,2,https://github.com/shuujii,Enable `MRB_GC_STRESS` test on CI,1,[],https://github.com/mruby/mruby/pull/4909,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4909,"The debug build target (MRB_GC_STRESS is enabled) on CI have been
compiled but not tested so far. However, I think testing with
MRB_GC_STRESS is effective (in fact, I found #4907 bug).
Therefore, I integrated debug and full-debug build targets to enable
MRB_GC_STRESS testing. Testing with MRB_GC_STRESS takes a little time,
but compiling takes more time, so CI execution time does not increase due to
decrease of build target.","The debug build target (MRB_GC_STRESS is enabled) on CI have been
compiled but not tested so far. However, I think testing with
MRB_GC_STRESS is effective (in fact, I found #4907 bug).
Therefore, I integrated debug and full-debug build targets to enable
MRB_GC_STRESS testing. Testing with MRB_GC_STRESS takes a little time,
but compiling takes more time, so CI execution time does not increase due to
decrease of build target.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4909,2019-12-26T08:27:44Z,2019-12-27T08:45:21Z,2020-01-15T14:40:20Z,CLOSED,False,3,29,2,https://github.com/shuujii,Enable `MRB_GC_STRESS` test on CI,1,[],https://github.com/mruby/mruby/pull/4909,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4909#issuecomment-569223057,"The debug build target (MRB_GC_STRESS is enabled) on CI have been
compiled but not tested so far. However, I think testing with
MRB_GC_STRESS is effective (in fact, I found #4907 bug).
Therefore, I integrated debug and full-debug build targets to enable
MRB_GC_STRESS testing. Testing with MRB_GC_STRESS takes a little time,
but compiling takes more time, so CI execution time does not increase due to
decrease of build target.",PR merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4909,2019-12-26T08:27:44Z,2019-12-27T08:45:21Z,2020-01-15T14:40:20Z,CLOSED,False,3,29,2,https://github.com/shuujii,Enable `MRB_GC_STRESS` test on CI,1,[],https://github.com/mruby/mruby/pull/4909,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4909#issuecomment-574436266,"The debug build target (MRB_GC_STRESS is enabled) on CI have been
compiled but not tested so far. However, I think testing with
MRB_GC_STRESS is effective (in fact, I found #4907 bug).
Therefore, I integrated debug and full-debug build targets to enable
MRB_GC_STRESS testing. Testing with MRB_GC_STRESS takes a little time,
but compiling takes more time, so CI execution time does not increase due to
decrease of build target.","In my PR I integrated the build target debug into full-debug, but the debug target remains in travis_config.rb. Is this intentional?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4909,2019-12-26T08:27:44Z,2019-12-27T08:45:21Z,2020-01-15T14:40:20Z,CLOSED,False,3,29,2,https://github.com/shuujii,Enable `MRB_GC_STRESS` test on CI,1,[],https://github.com/mruby/mruby/pull/4909,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4909#issuecomment-574571841,"The debug build target (MRB_GC_STRESS is enabled) on CI have been
compiled but not tested so far. However, I think testing with
MRB_GC_STRESS is effective (in fact, I found #4907 bug).
Therefore, I integrated debug and full-debug build targets to enable
MRB_GC_STRESS testing. Testing with MRB_GC_STRESS takes a little time,
but compiling takes more time, so CI execution time does not increase due to
decrease of build target.",It's not intentional. Should I remove debug target from travis_config.rb?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4909,2019-12-26T08:27:44Z,2019-12-27T08:45:21Z,2020-01-15T14:40:20Z,CLOSED,False,3,29,2,https://github.com/shuujii,Enable `MRB_GC_STRESS` test on CI,1,[],https://github.com/mruby/mruby/pull/4909,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/4909#issuecomment-574657430,"The debug build target (MRB_GC_STRESS is enabled) on CI have been
compiled but not tested so far. However, I think testing with
MRB_GC_STRESS is effective (in fact, I found #4907 bug).
Therefore, I integrated debug and full-debug build targets to enable
MRB_GC_STRESS testing. Testing with MRB_GC_STRESS takes a little time,
but compiling takes more time, so CI execution time does not increase due to
decrease of build target.",I think debug target is unneeded because its configuration is almost same as full-debug target (it has been removed from appveyor_config.rb).,True,{}
mruby/mruby,https://github.com/mruby/mruby,4909,2019-12-26T08:27:44Z,2019-12-27T08:45:21Z,2020-01-15T14:40:20Z,CLOSED,False,3,29,2,https://github.com/shuujii,Enable `MRB_GC_STRESS` test on CI,1,[],https://github.com/mruby/mruby/pull/4909,https://github.com/matz,6,https://github.com/mruby/mruby/pull/4909#issuecomment-574688871,"The debug build target (MRB_GC_STRESS is enabled) on CI have been
compiled but not tested so far. However, I think testing with
MRB_GC_STRESS is effective (in fact, I found #4907 bug).
Therefore, I integrated debug and full-debug build targets to enable
MRB_GC_STRESS testing. Testing with MRB_GC_STRESS takes a little time,
but compiling takes more time, so CI execution time does not increase due to
decrease of build target.",Understood. Done in f7abda1.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4910,2019-12-27T08:02:15Z,2019-12-27T09:35:20Z,2020-01-02T10:29:44Z,MERGED,True,27,28,12,https://github.com/shuujii,Use Rake DSL instead of commands of `FileUtils`,1,[],https://github.com/mruby/mruby/pull/4910,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4910,"Respect --verbose(-v) and --dry-run(-n) options.
Silence warnings to keyword arguments on Ruby 2.7.","Respect --verbose(-v) and --dry-run(-n) options.
Silence warnings to keyword arguments on Ruby 2.7.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4911,2019-12-28T08:04:25Z,2019-12-28T08:43:54Z,2020-01-02T10:29:45Z,MERGED,True,5,24,4,https://github.com/shuujii,Use `Rake.verbose` instead of `$verbose` and `$pp_show` in build scripts,1,[],https://github.com/mruby/mruby/pull/4911,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4911,"The incompatibility that the commands of FileUtils origin output verbose
by default due to the changes in d8a5163 and 26e6e75 is also fixed.","The incompatibility that the commands of FileUtils origin output verbose
by default due to the changes in d8a5163 and 26e6e75 is also fixed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4912,2019-12-29T09:55:28Z,2019-12-29T12:08:49Z,2020-01-02T10:29:31Z,MERGED,True,1,6,1,https://github.com/shuujii,"Avoid unneeded directory creation during `rake -T`, etc.",1,[],https://github.com/mruby/mruby/pull/4912,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4912,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4913,2019-12-30T08:48:45Z,2019-12-30T13:24:09Z,2020-01-02T10:29:46Z,MERGED,True,1628,428,2,https://github.com/shuujii,Use `rake` instead of `minirake` in `.gitlab-ci.yml`,1,[],https://github.com/mruby/mruby/pull/4913,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4913,"There was an error in the .gitlab-ci.yml generation script, so it was also
fixed.","There was an error in the .gitlab-ci.yml generation script, so it was also
fixed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4914,2019-12-30T15:47:13Z,2019-12-31T00:42:48Z,2020-01-01T05:19:22Z,MERGED,True,9,1,1,https://github.com/dearblue,Fix builds for modern mingw; fix #4869,1,[],https://github.com/mruby/mruby/pull/4914,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4914,"What I intended to fix in #4869 was a patch for an old MinGW.
Recent MinGWs have their own mkstemp() function.
I knew this after checking the patch #4903.

For your reference, the commits added to MinGW are also shown:

mingw32: (2014-12-02) https://osdn.net/projects/mingw/scm/git/mingw-org-wsl/commits/ed7dcf1eb8b2fefb647b45a3f472524bb63fd870
mingw-w64: (2015-01-07) https://sourceforge.net/p/mingw-w64/mingw-w64/ci/f713f639f6f017371c5176f4deab07d1a92473b4/

MinGW provided by the official package of FreeBSD is old.
(I did not know this....)","What I intended to fix in #4869 was a patch for an old MinGW.
Recent MinGWs have their own mkstemp() function.
I knew this after checking the patch #4903.

For your reference, the commits added to MinGW are also shown:

mingw32: (2014-12-02) https://osdn.net/projects/mingw/scm/git/mingw-org-wsl/commits/ed7dcf1eb8b2fefb647b45a3f472524bb63fd870
mingw-w64: (2015-01-07) https://sourceforge.net/p/mingw-w64/mingw-w64/ci/f713f639f6f017371c5176f4deab07d1a92473b4/

MinGW provided by the official package of FreeBSD is old.
(I did not know this....)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4915,2019-12-31T13:01:11Z,2019-12-31T13:36:41Z,2020-01-02T10:29:43Z,MERGED,True,1,1,1,https://github.com/shuujii,Silence GCC warning in `time.c` on Travis CI,1,[],https://github.com/mruby/mruby/pull/4915,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4915,"Silence the following warnings:
/mruby/mrbgems/mruby-time/src/time.c:260:55: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  if ((MRB_INT_MAX > MRB_TIME_MAX && i > 0 && i > MRB_TIME_MAX) ||
                                                ^","Silence the following warnings:
/mruby/mrbgems/mruby-time/src/time.c:260:55: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  if ((MRB_INT_MAX > MRB_TIME_MAX && i > 0 && i > MRB_TIME_MAX) ||
                                                ^",True,{}
mruby/mruby,https://github.com/mruby/mruby,4916,2020-01-01T05:44:11Z,2020-01-01T06:30:30Z,2020-01-01T16:07:47Z,MERGED,True,0,1,1,https://github.com/dearblue,Do not include `stdint.h` before `mruby.h`; ref #4750,1,[],https://github.com/mruby/mruby/pull/4916,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4916,"MRB_WITHOUT_FLOAT is undefined, and if you build it as C ++ ABI for MRB_DISABLE_STDIO or Windows, the situation will be the same as #4750.
So I will fix it.
I borrowed it from take-cheeze's without permission, but I am able to confirm it in the log data by GithubActions:
https://github.com/take-cheeze/mruby/runs/360977783#step:4:833","MRB_WITHOUT_FLOAT is undefined, and if you build it as C ++ ABI for MRB_DISABLE_STDIO or Windows, the situation will be the same as #4750.
So I will fix it.
I borrowed it from take-cheeze's without permission, but I am able to confirm it in the log data by GithubActions:
https://github.com/take-cheeze/mruby/runs/360977783#step:4:833",True,{}
mruby/mruby,https://github.com/mruby/mruby,4917,2020-01-01T06:09:21Z,2020-01-02T00:26:16Z,2020-01-03T10:05:06Z,MERGED,True,3,1,1,https://github.com/dearblue,Call `va_end()` before return,1,[],https://github.com/mruby/mruby/pull/4917,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4917,The behavior when returning from a function without va_end() is undefined.,The behavior when returning from a function without va_end() is undefined.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4918,2020-01-01T06:12:24Z,2020-01-01T06:31:17Z,2020-01-01T16:07:53Z,MERGED,True,16,35,1,https://github.com/dearblue,Integrate `i` and `arg_i` in `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/4918,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4918,The behavior of these two variables is the same.,The behavior of these two variables is the same.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4919,2020-01-01T10:48:21Z,2020-01-01T13:32:42Z,2020-01-02T10:29:41Z,MERGED,True,2,2,1,https://github.com/shuujii,"Revert ""SHARED string is not required when sharing POOL string"" (75949836)",1,[],https://github.com/mruby/mruby/pull/4919,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4919,"Because literal pool may be released by GC.
Example:
s1 = eval('""abcdefghijklmnopqrstuvwxyz01""')
GC.start
p s1  #=> ""\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x90\x03\x00stuvwxyz01""","Because literal pool may be released by GC.
Example:
s1 = eval('""abcdefghijklmnopqrstuvwxyz01""')
GC.start
p s1  #=> ""\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x90\x03\x00stuvwxyz01""",True,{}
mruby/mruby,https://github.com/mruby/mruby,4919,2020-01-01T10:48:21Z,2020-01-01T13:32:42Z,2020-01-02T10:29:41Z,MERGED,True,2,2,1,https://github.com/shuujii,"Revert ""SHARED string is not required when sharing POOL string"" (75949836)",1,[],https://github.com/mruby/mruby/pull/4919,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4919#issuecomment-570042561,"Because literal pool may be released by GC.
Example:
s1 = eval('""abcdefghijklmnopqrstuvwxyz01""')
GC.start
p s1  #=> ""\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x90\x03\x00stuvwxyz01""",I am terribly sorry for introducing the serious bug to mruby 2.1.0.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4920,2020-01-04T09:47:16Z,2020-01-06T06:53:01Z,2020-01-06T14:37:44Z,CLOSED,False,20,21,4,https://github.com/dearblue,Avoid creating temporary objects in `read_irep_record_1()`,1,[],https://github.com/mruby/mruby/pull/4920,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4920,"Since the irep pool element is now NUL terminated, break compatibility for mruby binary format.","Since the irep pool element is now NUL terminated, break compatibility for mruby binary format.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4920,2020-01-04T09:47:16Z,2020-01-06T06:53:01Z,2020-01-06T14:37:44Z,CLOSED,False,20,21,4,https://github.com/dearblue,Avoid creating temporary objects in `read_irep_record_1()`,1,[],https://github.com/mruby/mruby/pull/4920,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4920#issuecomment-570785727,"Since the irep pool element is now NUL terminated, break compatibility for mruby binary format.","I like the idea, but I worry about the compatibility issue. Let me investigate the idea for a while.",True,{'THUMBS_UP': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,4920,2020-01-04T09:47:16Z,2020-01-06T06:53:01Z,2020-01-06T14:37:44Z,CLOSED,False,20,21,4,https://github.com/dearblue,Avoid creating temporary objects in `read_irep_record_1()`,1,[],https://github.com/mruby/mruby/pull/4920,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4920#issuecomment-570791602,"Since the irep pool element is now NUL terminated, break compatibility for mruby binary format.","Null termination seems necessary for mrb_cstr_to_dbl to request it.
In most cases, if null termination is performed on the area allocated by MRB_ALLOCV (#4853), it can be realized without heap allocation or object creation, I think.
Alternatively, we may be able to use mrb_str_to_dbl with the following treatments:

Perform null termination using MRB_ALLOCV instead of RSTRING_CSTR in mrb_str_to_dbl.
Introduce something like CRuby's fake string (using RString on the stack).

FYI, there is the following bug (unreported). I think this can be fixed via 1.
$ ruby -e 'p ""1\x002"".to_f'
1.0
$ mruby -e 'p ""1\x002"".to_f'
trace (most recent call last):
-e:1: string contains null byte (ArgumentError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4920,2020-01-04T09:47:16Z,2020-01-06T06:53:01Z,2020-01-06T14:37:44Z,CLOSED,False,20,21,4,https://github.com/dearblue,Avoid creating temporary objects in `read_irep_record_1()`,1,[],https://github.com/mruby/mruby/pull/4920,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/4920#issuecomment-570878787,"Since the irep pool element is now NUL terminated, break compatibility for mruby binary format.","Here are some things I want to appeal to in this proposal:

Work object creation is reduced (= GC is reduced).
Reduced transfer between memories.
String literals are already NUL-terminated and can be extracted as C strings.

(1) and (2) can be especially effective on slow devices because they affect irep read time.
It's now that I came up with (3). 😸",True,{}
mruby/mruby,https://github.com/mruby/mruby,4920,2020-01-04T09:47:16Z,2020-01-06T06:53:01Z,2020-01-06T14:37:44Z,CLOSED,False,20,21,4,https://github.com/dearblue,Avoid creating temporary objects in `read_irep_record_1()`,1,[],https://github.com/mruby/mruby/pull/4920,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4920#issuecomment-571027086,"Since the irep pool element is now NUL terminated, break compatibility for mruby binary format.","111045e is my attempt to address this issue that:

Avoid creating temporary strings
Do not change the binary format
""1\x002"".to_f works OK
Float(""0x10"") now works",True,{}
mruby/mruby,https://github.com/mruby/mruby,4920,2020-01-04T09:47:16Z,2020-01-06T06:53:01Z,2020-01-06T14:37:44Z,CLOSED,False,20,21,4,https://github.com/dearblue,Avoid creating temporary objects in `read_irep_record_1()`,1,[],https://github.com/mruby/mruby/pull/4920,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/4920#issuecomment-571161034,"Since the irep pool element is now NUL terminated, break compatibility for mruby binary format.",I think it is a good change. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4923,2020-01-05T07:56:33Z,2020-01-05T11:59:18Z,2020-01-19T00:58:21Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix ainfo with keyword arguments; fix #4921,1,[],https://github.com/mruby/mruby/pull/4923,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4923,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4932,2020-01-19T02:03:42Z,2020-08-18T04:45:28Z,2020-09-24T13:39:15Z,CLOSED,False,102,102,33,https://github.com/dearblue,Integrate `Fixnum` class into `Integer` class,1,[],https://github.com/mruby/mruby/pull/4932,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4932,"The Fixnum constant is now an alias for the Integer class.
Remove struct mrb_state::fixnum_class member.
If necessary, use struct mrb_state::integer_class instead.","The Fixnum constant is now an alias for the Integer class.
Remove struct mrb_state::fixnum_class member.
If necessary, use struct mrb_state::integer_class instead.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4932,2020-01-19T02:03:42Z,2020-08-18T04:45:28Z,2020-09-24T13:39:15Z,CLOSED,False,102,102,33,https://github.com/dearblue,Integrate `Fixnum` class into `Integer` class,1,[],https://github.com/mruby/mruby/pull/4932,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4932#issuecomment-576134196,"The Fixnum constant is now an alias for the Integer class.
Remove struct mrb_state::fixnum_class member.
If necessary, use struct mrb_state::integer_class instead.",I have a plan to change Fixnum into Integer in mruby3.0. I will merge this PR in mruby3.0.,True,"{'THUMBS_UP': ['https://github.com/dearblue', 'https://github.com/jethrodaniel']}"
mruby/mruby,https://github.com/mruby/mruby,4932,2020-01-19T02:03:42Z,2020-08-18T04:45:28Z,2020-09-24T13:39:15Z,CLOSED,False,102,102,33,https://github.com/dearblue,Integrate `Fixnum` class into `Integer` class,1,[],https://github.com/mruby/mruby/pull/4932,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4932#issuecomment-675246130,"The Fixnum constant is now an alias for the Integer class.
Remove struct mrb_state::fixnum_class member.
If necessary, use struct mrb_state::integer_class instead.",This PR is merged to mruby3 branch.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4933,2020-01-19T13:19:48Z,2020-09-10T09:12:39Z,2020-09-24T13:39:24Z,MERGED,True,69,4,7,https://github.com/dearblue,Fix take over file scope variables with `mruby` and `mirb` command,5,[],https://github.com/mruby/mruby/pull/4933,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4933,"Add mrbc_cleanup_local_variables() function with MRB_API
In mirb command, the _ variable is defined after the -r switch","Add mrbc_cleanup_local_variables() function with MRB_API
In mirb command, the _ variable is defined after the -r switch",True,{}
mruby/mruby,https://github.com/mruby/mruby,4933,2020-01-19T13:19:48Z,2020-09-10T09:12:39Z,2020-09-24T13:39:24Z,MERGED,True,69,4,7,https://github.com/dearblue,Fix take over file scope variables with `mruby` and `mirb` command,5,[],https://github.com/mruby/mruby/pull/4933,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4933#issuecomment-576067873,"Add mrbc_cleanup_local_variables() function with MRB_API
In mirb command, the _ variable is defined after the -r switch","The following example doesn't seem to work as expected:
Files
# a.rb
a = 1
A = ->{a}
# b.rb
p A.call
mruby
$ bin/mruby -r ./a.rb b.rb
main
Ruby
$ ruby -r ./a.rb b.rb
1",True,{}
mruby/mruby,https://github.com/mruby/mruby,4933,2020-01-19T13:19:48Z,2020-09-10T09:12:39Z,2020-09-24T13:39:24Z,MERGED,True,69,4,7,https://github.com/dearblue,Fix take over file scope variables with `mruby` and `mirb` command,5,[],https://github.com/mruby/mruby/pull/4933,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4933#issuecomment-576284995,"Add mrbc_cleanup_local_variables() function with MRB_API
In mirb command, the _ variable is defined after the -r switch","😿 That's true.
I was worried and tried mrbc, and it was the same without applying this patch.
% bin/mrbc a.rb
% bin/mrbc b.rb
% bin/mruby -br a.mrb b.mrb
main
It seems that can deal with it using REnv, but I may not be able to handle it...",True,{}
mruby/mruby,https://github.com/mruby/mruby,4933,2020-01-19T13:19:48Z,2020-09-10T09:12:39Z,2020-09-24T13:39:24Z,MERGED,True,69,4,7,https://github.com/dearblue,Fix take over file scope variables with `mruby` and `mirb` command,5,[],https://github.com/mruby/mruby/pull/4933,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4933#issuecomment-576587684,"Add mrbc_cleanup_local_variables() function with MRB_API
In mirb command, the _ variable is defined after the -r switch",@dearblue It works as CRuby (1) on my box.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4933,2020-01-19T13:19:48Z,2020-09-10T09:12:39Z,2020-09-24T13:39:24Z,MERGED,True,69,4,7,https://github.com/dearblue,Fix take over file scope variables with `mruby` and `mirb` command,5,[],https://github.com/mruby/mruby/pull/4933,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/4933#issuecomment-576666008,"Add mrbc_cleanup_local_variables() function with MRB_API
In mirb command, the _ variable is defined after the -r switch","On FreeBSD 12.1/amd64, after slightly modifying mrbgems/mruby-print/mrblib/print.rb of mruby-head (59464f3), the result is as follows.
% git checkout --detach origin/master
HEAD is now at 59464f35 Merge pull request #4935 from mimaki/delete-duplicated-Array-delete_if
% echo 'a,b,c,d,e,f,g,h,i,j,k,l,m,n=1,2,3,4,5,6,7,8,9,10,11,12,13,14; A=->{[a,b,c,d,e,f,g,h,i,j,k,l,m,n]}' >> mrbgems/mruby-print/mrblib/print.rb
% rake -m clean all
...
% bin/mruby -e 'a=999; b=123; c=""ccc""; p A.call'
[999, 123, ""ccc"", main, main, nil, 999, 123, ""ccc"", main, main, nil, 999, 123]",True,{}
mruby/mruby,https://github.com/mruby/mruby,4933,2020-01-19T13:19:48Z,2020-09-10T09:12:39Z,2020-09-24T13:39:24Z,MERGED,True,69,4,7,https://github.com/dearblue,Fix take over file scope variables with `mruby` and `mirb` command,5,[],https://github.com/mruby/mruby/pull/4933,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/4933#issuecomment-579788481,"Add mrbc_cleanup_local_variables() function with MRB_API
In mirb command, the _ variable is defined after the -r switch",I fixed the problem pointed out by @shuujii and the problem with mruby binary.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4933,2020-01-19T13:19:48Z,2020-09-10T09:12:39Z,2020-09-24T13:39:24Z,MERGED,True,69,4,7,https://github.com/dearblue,Fix take over file scope variables with `mruby` and `mirb` command,5,[],https://github.com/mruby/mruby/pull/4933,https://github.com/dearblue,7,https://github.com/mruby/mruby/pull/4933#issuecomment-579788989,"Add mrbc_cleanup_local_variables() function with MRB_API
In mirb command, the _ variable is defined after the -r switch",I made a mistake.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4935,2020-01-21T02:38:43Z,2020-01-21T04:40:31Z,2020-01-21T04:40:31Z,MERGED,True,0,44,2,https://github.com/mimaki,Delete duplicated `Array#delete_if`.,2,[],https://github.com/mruby/mruby/pull/4935,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4935,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4935,2020-01-21T02:38:43Z,2020-01-21T04:40:31Z,2020-01-21T04:40:31Z,MERGED,True,0,44,2,https://github.com/mimaki,Delete duplicated `Array#delete_if`.,2,[],https://github.com/mruby/mruby/pull/4935,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4935#issuecomment-576498362,,Looks like the tests are also duplicated :),True,{'THUMBS_UP': ['https://github.com/mimaki']}
mruby/mruby,https://github.com/mruby/mruby,4937,2020-02-01T07:09:37Z,2020-06-03T05:17:06Z,2020-06-03T13:36:50Z,CLOSED,False,35,35,4,https://github.com/dearblue,Hiding method implementation C functions in mruby-io,1,[],https://github.com/mruby/mruby/pull/4937,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4937,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4937,2020-02-01T07:09:37Z,2020-06-03T05:17:06Z,2020-06-03T13:36:50Z,CLOSED,False,35,35,4,https://github.com/dearblue,Hiding method implementation C functions in mruby-io,1,[],https://github.com/mruby/mruby/pull/4937,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4937#issuecomment-637958886,,Merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4938,2020-02-01T07:11:48Z,2020-02-01T08:41:20Z,2020-02-16T10:05:58Z,MERGED,True,14,7,3,https://github.com/dearblue,Fix builds for old mingw in mruby-socket; ref #4914,1,[],https://github.com/mruby/mruby/pull/4938,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4938,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4939,2020-02-02T12:40:42Z,2020-03-07T10:07:24Z,2020-03-08T14:39:16Z,MERGED,True,150,8,4,https://github.com/dearblue,Implement `IO#pread` and `IO#pwrite`,1,[],https://github.com/mruby/mruby/pull/4939,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4939,"It is available by default in environments where __unix__ is defined.
Other environments are enabled by defining MRB_WITH_IO_PREAD_PWRITE (requires an implementation of pread() and pwrite() functions).
In any case, you can disable it by defining MRB_WITHOUT_IO_PREAD_PWRITE.","It is available by default in environments where __unix__ is defined.
Other environments are enabled by defining MRB_WITH_IO_PREAD_PWRITE (requires an implementation of pread() and pwrite() functions).
In any case, you can disable it by defining MRB_WITHOUT_IO_PREAD_PWRITE.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4940,2020-02-02T12:52:19Z,2020-02-03T04:00:10Z,2020-02-16T10:03:47Z,CLOSED,False,23,0,3,https://github.com/dearblue,Add `MRB_USE_SMALL_STRING_SEARCH` configuration,1,[],https://github.com/mruby/mruby/pull/4940,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4940,"Switches the used string search algorithm to Naive Algorithm
Slows down
""Call stack memory"" usage can probably be reduced to less than 10% (in 32-bit CPU mode, you can expect to reduce usage from more than 1 kilobyte to less than 50 bytes)","Switches the used string search algorithm to Naive Algorithm
Slows down
""Call stack memory"" usage can probably be reduced to less than 10% (in 32-bit CPU mode, you can expect to reduce usage from more than 1 kilobyte to less than 50 bytes)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4941,2020-02-05T13:52:15Z,2020-02-05T14:11:46Z,2020-02-05T14:11:46Z,MERGED,True,1,0,1,https://github.com/davidsiaw,Include time.h for ios,1,[],https://github.com/mruby/mruby/pull/4941,https://github.com/davidsiaw,1,https://github.com/mruby/mruby/pull/4941,"An as-of-yet incomplete project of mine embedding mruby in iOS has revealed that struct timeval on recent versions of Darwin iOS is defined in sys/time.h.
This should have a minimal impact on other platforms.

If you wish to have a test for this I will be able to produce one in time. Currently I use a very hacked up xcode project file that includes a set of C files generated by mrbgems, and the project file is not fit for general consumption because it only includes a very specific set of mrbgems.
Once I have a working project file generation tool I will share it and this problem will become obvious, or if you have a minimal project using iOS you can see this issue.
I may be doing it wrong and could have been a build setting away from making mruby compile on iOS without this change, and would gladly take advice on how to proceed.","An as-of-yet incomplete project of mine embedding mruby in iOS has revealed that struct timeval on recent versions of Darwin iOS is defined in sys/time.h.
This should have a minimal impact on other platforms.

If you wish to have a test for this I will be able to produce one in time. Currently I use a very hacked up xcode project file that includes a set of C files generated by mrbgems, and the project file is not fit for general consumption because it only includes a very specific set of mrbgems.
Once I have a working project file generation tool I will share it and this problem will become obvious, or if you have a minimal project using iOS you can see this issue.
I may be doing it wrong and could have been a build setting away from making mruby compile on iOS without this change, and would gladly take advice on how to proceed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4942,2020-02-21T14:57:51Z,2020-02-22T04:25:12Z,2020-02-22T04:25:12Z,MERGED,True,1,1,1,https://github.com/inobelar,Updated README.md - Fixed link to github issues,1,[],https://github.com/mruby/mruby/pull/4942,https://github.com/inobelar,1,https://github.com/mruby/mruby/pull/4942,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4943,2020-02-21T21:09:00Z,2020-02-21T21:47:54Z,2020-02-21T21:47:54Z,CLOSED,False,98,0,1,https://github.com/sizious,Added example for cross-compiling for Sega Dreamcast (sh-elf).,1,[],https://github.com/mruby/mruby/pull/4943,https://github.com/sizious,1,https://github.com/mruby/mruby/pull/4943,"Thanks to @yujiyokoo for demonstrating mruby usage on Sega Dreamcast at RubyConf AU 2020!
See more here: https://youtu.be/ni-1x5Esa_o","Thanks to @yujiyokoo for demonstrating mruby usage on Sega Dreamcast at RubyConf AU 2020!
See more here: https://youtu.be/ni-1x5Esa_o",True,{}
mruby/mruby,https://github.com/mruby/mruby,4943,2020-02-21T21:09:00Z,2020-02-21T21:47:54Z,2020-02-21T21:47:54Z,CLOSED,False,98,0,1,https://github.com/sizious,Added example for cross-compiling for Sega Dreamcast (sh-elf).,1,[],https://github.com/mruby/mruby/pull/4943,https://github.com/sizious,2,https://github.com/mruby/mruby/pull/4943#issuecomment-589851174,"Thanks to @yujiyokoo for demonstrating mruby usage on Sega Dreamcast at RubyConf AU 2020!
See more here: https://youtu.be/ni-1x5Esa_o",Closing this non-compliant PR,True,{}
mruby/mruby,https://github.com/mruby/mruby,4944,2020-02-21T21:47:24Z,2020-02-22T05:07:47Z,2020-02-22T05:07:47Z,MERGED,True,98,0,1,https://github.com/sizious,Added example for cross-compiling for Sega Dreamcast (sh-elf).,1,[],https://github.com/mruby/mruby/pull/4944,https://github.com/sizious,1,https://github.com/mruby/mruby/pull/4944,"Thanks to @yujiyokoo for demonstrating mruby usage on Sega Dreamcast at RubyConf AU 2020!
See more here: https://youtu.be/ni-1x5Esa_o","Thanks to @yujiyokoo for demonstrating mruby usage on Sega Dreamcast at RubyConf AU 2020!
See more here: https://youtu.be/ni-1x5Esa_o",True,{}
mruby/mruby,https://github.com/mruby/mruby,4945,2020-02-21T23:29:34Z,2020-02-22T05:09:24Z,2020-02-24T17:04:59Z,MERGED,True,24,0,1,https://github.com/Leo-Neat,Add CIFuzz action,1,[],https://github.com/mruby/mruby/pull/4945,https://github.com/Leo-Neat,1,https://github.com/mruby/mruby/pull/4945,"OSS-Fuzz was wondering if mruby would use CIFuzz, a new feature being rolled out
in OSS-Fuzz. It allows for pull requests to be fuzzed in CI using fuzz targets enabled
in OSS-Fuzz. Documentation for this feature can be found here.
Let us know if you have any questions!","OSS-Fuzz was wondering if mruby would use CIFuzz, a new feature being rolled out
in OSS-Fuzz. It allows for pull requests to be fuzzed in CI using fuzz targets enabled
in OSS-Fuzz. Documentation for this feature can be found here.
Let us know if you have any questions!",True,{}
mruby/mruby,https://github.com/mruby/mruby,4945,2020-02-21T23:29:34Z,2020-02-22T05:09:24Z,2020-02-24T17:04:59Z,MERGED,True,24,0,1,https://github.com/Leo-Neat,Add CIFuzz action,1,[],https://github.com/mruby/mruby/pull/4945,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4945#issuecomment-589919718,"OSS-Fuzz was wondering if mruby would use CIFuzz, a new feature being rolled out
in OSS-Fuzz. It allows for pull requests to be fuzzed in CI using fuzz targets enabled
in OSS-Fuzz. Documentation for this feature can be found here.
Let us know if you have any questions!",PR is merged. Do we have to do anything else?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4945,2020-02-21T23:29:34Z,2020-02-22T05:09:24Z,2020-02-24T17:04:59Z,MERGED,True,24,0,1,https://github.com/Leo-Neat,Add CIFuzz action,1,[],https://github.com/mruby/mruby/pull/4945,https://github.com/Leo-Neat,3,https://github.com/mruby/mruby/pull/4945#issuecomment-590439045,"OSS-Fuzz was wondering if mruby would use CIFuzz, a new feature being rolled out
in OSS-Fuzz. It allows for pull requests to be fuzzed in CI using fuzz targets enabled
in OSS-Fuzz. Documentation for this feature can be found here.
Let us know if you have any questions!","@matz  Nope, just let us know if you have any suggestions for UX or issues with CIFuzz!",True,{}
mruby/mruby,https://github.com/mruby/mruby,4946,2020-02-22T22:46:45Z,2020-02-23T09:01:06Z,2020-02-23T09:01:06Z,MERGED,True,25,15,1,https://github.com/sizious,Improving comments in the cross-compiling sample for the Sega Dreamcast.,1,[],https://github.com/mruby/mruby/pull/4946,https://github.com/sizious,1,https://github.com/mruby/mruby/pull/4946,"This configuration was successfully tested on GNU/Linux (Ubuntu), MinGW-w64/MSYS2, Cygwin, macOS and MinGW/MSYS (DreamSDK). It will generate the host binaries plus the dreamcast binaries, usable with KallistiOS (KOS).","This configuration was successfully tested on GNU/Linux (Ubuntu), MinGW-w64/MSYS2, Cygwin, macOS and MinGW/MSYS (DreamSDK). It will generate the host binaries plus the dreamcast binaries, usable with KallistiOS (KOS).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4947,2020-03-01T13:30:27Z,2020-03-02T12:49:29Z,2020-03-08T14:47:17Z,CLOSED,False,1,0,1,https://github.com/jasl,Explicit include stdio.h for muby-io,1,[],https://github.com/mruby/mruby/pull/4947,https://github.com/jasl,1,https://github.com/mruby/mruby/pull/4947,"Relate to rails-engine/script_core#3
When compiling mruby-io on macOS, it will fail because
CC    mrbgems/mruby-io/src/file.c -> build/sandbox/mrbgems/mruby-io/src/file.o
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: error: implicit
      declaration of function 'rename' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  if (rename(src, dst) < 0) {
      ^
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: note: did you mean
      'devname'?
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h:293:7: note: 'devname' declared here
char    *devname(dev_t, mode_t);
         ^
1 error generated.
rake aborted!

Command Failed: [gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -g3 -O0 -fPIC -g3 -O3 -DMRB_DEBUG -D_GNU_SOURCE -DMRB_ENABLE_DEBUG_HOOK -DMRB_INT64 -DMRB_UTF8_STRING -DMRB_WORD_BOXING -DYYDEBUG -DMRB_DISABLE_STDIO -DMRBGEM_MRUBY_IO_VERSION=0.0.0 -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/include -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/src -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/include -MMD -o /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/build/sandbox/mrbgems/mruby-io/src/file.o -c /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c]

My friend told me GCC@macOS don't includes stdio.h by default, so I try to explict include stdio.h fix the build.","Relate to rails-engine/script_core#3
When compiling mruby-io on macOS, it will fail because
CC    mrbgems/mruby-io/src/file.c -> build/sandbox/mrbgems/mruby-io/src/file.o
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: error: implicit
      declaration of function 'rename' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  if (rename(src, dst) < 0) {
      ^
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: note: did you mean
      'devname'?
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h:293:7: note: 'devname' declared here
char    *devname(dev_t, mode_t);
         ^
1 error generated.
rake aborted!

Command Failed: [gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -g3 -O0 -fPIC -g3 -O3 -DMRB_DEBUG -D_GNU_SOURCE -DMRB_ENABLE_DEBUG_HOOK -DMRB_INT64 -DMRB_UTF8_STRING -DMRB_WORD_BOXING -DYYDEBUG -DMRB_DISABLE_STDIO -DMRBGEM_MRUBY_IO_VERSION=0.0.0 -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/include -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/src -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/include -MMD -o /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/build/sandbox/mrbgems/mruby-io/src/file.o -c /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c]

My friend told me GCC@macOS don't includes stdio.h by default, so I try to explict include stdio.h fix the build.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4947,2020-03-01T13:30:27Z,2020-03-02T12:49:29Z,2020-03-08T14:47:17Z,CLOSED,False,1,0,1,https://github.com/jasl,Explicit include stdio.h for muby-io,1,[],https://github.com/mruby/mruby/pull/4947,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4947#issuecomment-593102912,"Relate to rails-engine/script_core#3
When compiling mruby-io on macOS, it will fail because
CC    mrbgems/mruby-io/src/file.c -> build/sandbox/mrbgems/mruby-io/src/file.o
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: error: implicit
      declaration of function 'rename' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  if (rename(src, dst) < 0) {
      ^
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: note: did you mean
      'devname'?
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h:293:7: note: 'devname' declared here
char    *devname(dev_t, mode_t);
         ^
1 error generated.
rake aborted!

Command Failed: [gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -g3 -O0 -fPIC -g3 -O3 -DMRB_DEBUG -D_GNU_SOURCE -DMRB_ENABLE_DEBUG_HOOK -DMRB_INT64 -DMRB_UTF8_STRING -DMRB_WORD_BOXING -DYYDEBUG -DMRB_DISABLE_STDIO -DMRBGEM_MRUBY_IO_VERSION=0.0.0 -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/include -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/src -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/include -MMD -o /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/build/sandbox/mrbgems/mruby-io/src/file.o -c /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c]

My friend told me GCC@macOS don't includes stdio.h by default, so I try to explict include stdio.h fix the build.","stdio.h is included if you don't define MRB_DISABLE_STDIO.

  
    
      mruby/include/mrbconf.h
    
    
        Lines 139 to 141
      in
      be86bd3
    
  
  
    

        
          
           #ifndef MRB_DISABLE_STDIO 
        

        
          
           # include <stdio.h> 
        

        
          
           #endif",True,{}
mruby/mruby,https://github.com/mruby/mruby,4947,2020-03-01T13:30:27Z,2020-03-02T12:49:29Z,2020-03-08T14:47:17Z,CLOSED,False,1,0,1,https://github.com/jasl,Explicit include stdio.h for muby-io,1,[],https://github.com/mruby/mruby/pull/4947,https://github.com/jasl,3,https://github.com/mruby/mruby/pull/4947#issuecomment-593103253,"Relate to rails-engine/script_core#3
When compiling mruby-io on macOS, it will fail because
CC    mrbgems/mruby-io/src/file.c -> build/sandbox/mrbgems/mruby-io/src/file.o
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: error: implicit
      declaration of function 'rename' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  if (rename(src, dst) < 0) {
      ^
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: note: did you mean
      'devname'?
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h:293:7: note: 'devname' declared here
char    *devname(dev_t, mode_t);
         ^
1 error generated.
rake aborted!

Command Failed: [gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -g3 -O0 -fPIC -g3 -O3 -DMRB_DEBUG -D_GNU_SOURCE -DMRB_ENABLE_DEBUG_HOOK -DMRB_INT64 -DMRB_UTF8_STRING -DMRB_WORD_BOXING -DYYDEBUG -DMRB_DISABLE_STDIO -DMRBGEM_MRUBY_IO_VERSION=0.0.0 -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/include -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/src -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/include -MMD -o /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/build/sandbox/mrbgems/mruby-io/src/file.o -c /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c]

My friend told me GCC@macOS don't includes stdio.h by default, so I try to explict include stdio.h fix the build.","stdio.h is included if you don't define MRB_DISABLE_STDIO.

  
    
      mruby/include/mrbconf.h
    
    
        Lines 139 to 141
      in
      be86bd3
    
  
  
    

        
          
           #ifndef MRB_DISABLE_STDIO 
        

        
          
           # include <stdio.h> 
        

        
          
           #endif 
        
    
  



I've tested that without MRB_DISABLE_STDIO the problem still.
besides, I see 
  
    
      mruby/mrbgems/mruby-io/src/io.c
    
    
         Line 56
      in
      be86bd3
    
  
  
    

        
          
           #include <stdio.h>",True,{}
mruby/mruby,https://github.com/mruby/mruby,4947,2020-03-01T13:30:27Z,2020-03-02T12:49:29Z,2020-03-08T14:47:17Z,CLOSED,False,1,0,1,https://github.com/jasl,Explicit include stdio.h for muby-io,1,[],https://github.com/mruby/mruby/pull/4947,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4947#issuecomment-593178976,"Relate to rails-engine/script_core#3
When compiling mruby-io on macOS, it will fail because
CC    mrbgems/mruby-io/src/file.c -> build/sandbox/mrbgems/mruby-io/src/file.o
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: error: implicit
      declaration of function 'rename' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  if (rename(src, dst) < 0) {
      ^
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: note: did you mean
      'devname'?
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h:293:7: note: 'devname' declared here
char    *devname(dev_t, mode_t);
         ^
1 error generated.
rake aborted!

Command Failed: [gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -g3 -O0 -fPIC -g3 -O3 -DMRB_DEBUG -D_GNU_SOURCE -DMRB_ENABLE_DEBUG_HOOK -DMRB_INT64 -DMRB_UTF8_STRING -DMRB_WORD_BOXING -DYYDEBUG -DMRB_DISABLE_STDIO -DMRBGEM_MRUBY_IO_VERSION=0.0.0 -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/include -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/src -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/include -MMD -o /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/build/sandbox/mrbgems/mruby-io/src/file.o -c /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c]

My friend told me GCC@macOS don't includes stdio.h by default, so I try to explict include stdio.h fix the build.",The problem doesn't reproduce on my environment and CI. The configuration change of the compiler flags may not be effective.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4947,2020-03-01T13:30:27Z,2020-03-02T12:49:29Z,2020-03-08T14:47:17Z,CLOSED,False,1,0,1,https://github.com/jasl,Explicit include stdio.h for muby-io,1,[],https://github.com/mruby/mruby/pull/4947,https://github.com/jasl,5,https://github.com/mruby/mruby/pull/4947#issuecomment-593255328,"Relate to rails-engine/script_core#3
When compiling mruby-io on macOS, it will fail because
CC    mrbgems/mruby-io/src/file.c -> build/sandbox/mrbgems/mruby-io/src/file.o
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: error: implicit
      declaration of function 'rename' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  if (rename(src, dst) < 0) {
      ^
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: note: did you mean
      'devname'?
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h:293:7: note: 'devname' declared here
char    *devname(dev_t, mode_t);
         ^
1 error generated.
rake aborted!

Command Failed: [gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -g3 -O0 -fPIC -g3 -O3 -DMRB_DEBUG -D_GNU_SOURCE -DMRB_ENABLE_DEBUG_HOOK -DMRB_INT64 -DMRB_UTF8_STRING -DMRB_WORD_BOXING -DYYDEBUG -DMRB_DISABLE_STDIO -DMRBGEM_MRUBY_IO_VERSION=0.0.0 -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/include -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/src -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/include -MMD -o /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/build/sandbox/mrbgems/mruby-io/src/file.o -c /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c]

My friend told me GCC@macOS don't includes stdio.h by default, so I try to explict include stdio.h fix the build.","The problem doesn't reproduce on my environment and CI. The configuration change of the compiler flags may not be effective.

I'll find an Linux and try again, but on the other hand, if this fix wrong, does it mean #include <stdio.h> shouldn't apear in 
  
    
      mruby/mrbgems/mruby-io/src/io.c
    
    
         Line 56
      in
      be86bd3
    
  
  
    

        
          
           #include <stdio.h> 
        
    
  

 either?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4947,2020-03-01T13:30:27Z,2020-03-02T12:49:29Z,2020-03-08T14:47:17Z,CLOSED,False,1,0,1,https://github.com/jasl,Explicit include stdio.h for muby-io,1,[],https://github.com/mruby/mruby/pull/4947,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/4947#issuecomment-593305892,"Relate to rails-engine/script_core#3
When compiling mruby-io on macOS, it will fail because
CC    mrbgems/mruby-io/src/file.c -> build/sandbox/mrbgems/mruby-io/src/file.o
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: error: implicit
      declaration of function 'rename' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  if (rename(src, dst) < 0) {
      ^
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: note: did you mean
      'devname'?
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h:293:7: note: 'devname' declared here
char    *devname(dev_t, mode_t);
         ^
1 error generated.
rake aborted!

Command Failed: [gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -g3 -O0 -fPIC -g3 -O3 -DMRB_DEBUG -D_GNU_SOURCE -DMRB_ENABLE_DEBUG_HOOK -DMRB_INT64 -DMRB_UTF8_STRING -DMRB_WORD_BOXING -DYYDEBUG -DMRB_DISABLE_STDIO -DMRBGEM_MRUBY_IO_VERSION=0.0.0 -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/include -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/src -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/include -MMD -o /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/build/sandbox/mrbgems/mruby-io/src/file.o -c /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c]

My friend told me GCC@macOS don't includes stdio.h by default, so I try to explict include stdio.h fix the build.","If you can't build without MRB_DISABLE_STDIO, I'm interested in the cause. And depending on the cause, this fix may not be essential.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4947,2020-03-01T13:30:27Z,2020-03-02T12:49:29Z,2020-03-08T14:47:17Z,CLOSED,False,1,0,1,https://github.com/jasl,Explicit include stdio.h for muby-io,1,[],https://github.com/mruby/mruby/pull/4947,https://github.com/jasl,7,https://github.com/mruby/mruby/pull/4947#issuecomment-593385550,"Relate to rails-engine/script_core#3
When compiling mruby-io on macOS, it will fail because
CC    mrbgems/mruby-io/src/file.c -> build/sandbox/mrbgems/mruby-io/src/file.o
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: error: implicit
      declaration of function 'rename' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  if (rename(src, dst) < 0) {
      ^
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: note: did you mean
      'devname'?
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h:293:7: note: 'devname' declared here
char    *devname(dev_t, mode_t);
         ^
1 error generated.
rake aborted!

Command Failed: [gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -g3 -O0 -fPIC -g3 -O3 -DMRB_DEBUG -D_GNU_SOURCE -DMRB_ENABLE_DEBUG_HOOK -DMRB_INT64 -DMRB_UTF8_STRING -DMRB_WORD_BOXING -DYYDEBUG -DMRB_DISABLE_STDIO -DMRBGEM_MRUBY_IO_VERSION=0.0.0 -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/include -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/src -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/include -MMD -o /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/build/sandbox/mrbgems/mruby-io/src/file.o -c /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c]

My friend told me GCC@macOS don't includes stdio.h by default, so I try to explict include stdio.h fix the build.","If you can't build without MRB_DISABLE_STDIO, I'm interested in the cause. And depending on the cause, this fix may not be essential.

I re-test this, my fault, without MRB_DISABLE_STDIO, compile would be OK.
So, should we remove 
  
    
      mruby/mrbgems/mruby-io/src/io.c
    
    
         Line 56
      in
      be86bd3
    
  
  
    

        
          
           #include <stdio.h> 
        
    
  

 ?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4947,2020-03-01T13:30:27Z,2020-03-02T12:49:29Z,2020-03-08T14:47:17Z,CLOSED,False,1,0,1,https://github.com/jasl,Explicit include stdio.h for muby-io,1,[],https://github.com/mruby/mruby/pull/4947,https://github.com/dearblue,8,https://github.com/mruby/mruby/pull/4947#issuecomment-596213543,"Relate to rails-engine/script_core#3
When compiling mruby-io on macOS, it will fail because
CC    mrbgems/mruby-io/src/file.c -> build/sandbox/mrbgems/mruby-io/src/file.o
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: error: implicit
      declaration of function 'rename' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
  if (rename(src, dst) < 0) {
      ^
/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c:139:7: note: did you mean
      'devname'?
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h:293:7: note: 'devname' declared here
char    *devname(dev_t, mode_t);
         ^
1 error generated.
rake aborted!

Command Failed: [gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -g3 -O0 -fPIC -g3 -O3 -DMRB_DEBUG -D_GNU_SOURCE -DMRB_ENABLE_DEBUG_HOOK -DMRB_INT64 -DMRB_UTF8_STRING -DMRB_WORD_BOXING -DYYDEBUG -DMRB_DISABLE_STDIO -DMRBGEM_MRUBY_IO_VERSION=0.0.0 -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/include -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/src -I/Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/include -MMD -o /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/build/sandbox/mrbgems/mruby-io/src/file.o -c /Users/tdegrunt/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/script_core-0.2.1/ext/enterprise_script_service/mruby/mrbgems/mruby-io/src/file.c]

My friend told me GCC@macOS don't includes stdio.h by default, so I try to explict include stdio.h fix the build.","#4954 has been merged.
The changes in this patch are:

Remove unnecessary #include <stdio.h>
If you include mrbgem that conflicts with MRB_DISABLE_STDIO, output it at compile time",True,{'THUMBS_UP': ['https://github.com/jasl']}
mruby/mruby,https://github.com/mruby/mruby,4948,2020-03-04T01:28:01Z,2020-03-04T12:25:10Z,2020-03-04T20:27:56Z,MERGED,True,14,1,2,https://github.com/kou,Enable MRB_METHOD_T_STRUCT by default on 32bit Windows,1,[],https://github.com/mruby/mruby/pull/4948,https://github.com/kou,1,https://github.com/mruby/mruby/pull/4948,"Because we can't use the highest 2 bits of function pointers.
I couldn't reproduce this with the existing tests.
https://ci.appveyor.com/project/kou/mruby/builds/31199291/job/tkh6ady3xwxnvogj works well without MRB_METHOD_T_STRUCT.
But I added some 32bit Windows entries to appveyor.yml. I don't add ""Visual Studio 2013 32bit"" case because it failed with Math.atan2 test:
https://ci.appveyor.com/project/kou/mruby/builds/31199291/job/tkh6ady3xwxnvogj
Fail: Math.atan2 (mrbgems: mruby-math)
 - Assertion[5]
    Expected NaN to be 2.356194490192345.
 - Assertion[6]
    Expected NaN to be -2.356194490192345.
 - Assertion[7]
    Expected NaN to be 0.7853981633974483.
 - Assertion[8]
    Expected NaN to be -0.7853981633974483.

It's not related to this case.
I couldn't reproduce this with existing tests but our product, Groonga, is crashed without MRB_METHOD_T_STRUCT:
https://ci.appveyor.com/project/groonga/groonga/builds/31118559/job/8i0hq7crg0rpaucw#L7297
#|C| c:\projects\groonga\vendor\mruby-source\src\vm.c:525:0: mrb_funcall_with_block(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\vm.c:441:60: mrb_funcall_with_block(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\vm.c:541:63: mrb_funcall_argv(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\class.c:1553:31: mrb_obj_new(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\error.c:31:23: mrb_exc_new_str(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\error.c:576:0: mrb_init_exception(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\init.c:43:0: mrb_init_core(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\state.c:43:50: mrb_open_core(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\state.c:71:11: mrb_open_allocf(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>

vm.c:525 is mrb->c->stack = mrb->c->ci->stackent; but the real crash line is vm.c:524: val = MRB_METHOD_CFUNC(m)(mrb, self);.
It seems that the highest 2 bits will be used in a process that has many functions like Groonga on 32bit Windows.
Groonga with mruby works well without MRB_METHOD_T_STRUCT on 64bit Windows.","Because we can't use the highest 2 bits of function pointers.
I couldn't reproduce this with the existing tests.
https://ci.appveyor.com/project/kou/mruby/builds/31199291/job/tkh6ady3xwxnvogj works well without MRB_METHOD_T_STRUCT.
But I added some 32bit Windows entries to appveyor.yml. I don't add ""Visual Studio 2013 32bit"" case because it failed with Math.atan2 test:
https://ci.appveyor.com/project/kou/mruby/builds/31199291/job/tkh6ady3xwxnvogj
Fail: Math.atan2 (mrbgems: mruby-math)
 - Assertion[5]
    Expected NaN to be 2.356194490192345.
 - Assertion[6]
    Expected NaN to be -2.356194490192345.
 - Assertion[7]
    Expected NaN to be 0.7853981633974483.
 - Assertion[8]
    Expected NaN to be -0.7853981633974483.

It's not related to this case.
I couldn't reproduce this with existing tests but our product, Groonga, is crashed without MRB_METHOD_T_STRUCT:
https://ci.appveyor.com/project/groonga/groonga/builds/31118559/job/8i0hq7crg0rpaucw#L7297
#|C| c:\projects\groonga\vendor\mruby-source\src\vm.c:525:0: mrb_funcall_with_block(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\vm.c:441:60: mrb_funcall_with_block(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\vm.c:541:63: mrb_funcall_argv(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\class.c:1553:31: mrb_obj_new(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\error.c:31:23: mrb_exc_new_str(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\error.c:576:0: mrb_init_exception(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\init.c:43:0: mrb_init_core(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\state.c:43:50: mrb_open_core(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>
#|C| c:\projects\groonga\vendor\mruby-source\src\state.c:71:11: mrb_open_allocf(): <libgroonga>: <C:\projects\groonga\install\groonga-10.0.0-b5d38cc-x86-vs2017\bin\libgroo>

vm.c:525 is mrb->c->stack = mrb->c->ci->stackent; but the real crash line is vm.c:524: val = MRB_METHOD_CFUNC(m)(mrb, self);.
It seems that the highest 2 bits will be used in a process that has many functions like Groonga on 32bit Windows.
Groonga with mruby works well without MRB_METHOD_T_STRUCT on 64bit Windows.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4950,2020-03-07T02:18:38Z,2020-03-07T05:53:38Z,2020-03-07T08:20:10Z,MERGED,True,5,0,1,https://github.com/Reckordp,Absolute path for windows,1,[],https://github.com/mruby/mruby/pull/4950,https://github.com/Reckordp,1,https://github.com/mruby/mruby/pull/4950,"On mirb
File.expand_path(""~"")

Result in windows
(mirb):1: non-absolute home (ArgumentError)

I have added some code for this. I like it when combined :)","On mirb
File.expand_path(""~"")

Result in windows
(mirb):1: non-absolute home (ArgumentError)

I have added some code for this. I like it when combined :)",True,{}
mruby/mruby,https://github.com/mruby/mruby,4951,2020-03-07T08:26:23Z,2020-03-07T08:58:27Z,2020-03-08T20:33:35Z,MERGED,True,5,3,1,https://github.com/Reckordp,Fix unfinished changes,2,[],https://github.com/mruby/mruby/pull/4951,https://github.com/Reckordp,1,https://github.com/mruby/mruby/pull/4951,"Me again
There was a typo resulting in an error during compile.
#define IS_PATHSEP(x) (x == '/' || x == '\')

to
#define IS_PATHSEP(x) (x == '/' || x == '\\')

Just that.","Me again
There was a typo resulting in an error during compile.
#define IS_PATHSEP(x) (x == '/' || x == '\')

to
#define IS_PATHSEP(x) (x == '/' || x == '\\')

Just that.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4951,2020-03-07T08:26:23Z,2020-03-07T08:58:27Z,2020-03-08T20:33:35Z,MERGED,True,5,3,1,https://github.com/Reckordp,Fix unfinished changes,2,[],https://github.com/mruby/mruby/pull/4951,https://github.com/Reckordp,2,https://github.com/mruby/mruby/pull/4951#issuecomment-596063533,"Me again
There was a typo resulting in an error during compile.
#define IS_PATHSEP(x) (x == '/' || x == '\')

to
#define IS_PATHSEP(x) (x == '/' || x == '\\')

Just that.",also added the absolute path for the ANC case,True,{}
mruby/mruby,https://github.com/mruby/mruby,4951,2020-03-07T08:26:23Z,2020-03-07T08:58:27Z,2020-03-08T20:33:35Z,MERGED,True,5,3,1,https://github.com/Reckordp,Fix unfinished changes,2,[],https://github.com/mruby/mruby/pull/4951,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4951#issuecomment-596064711,"Me again
There was a typo resulting in an error during compile.
#define IS_PATHSEP(x) (x == '/' || x == '\')

to
#define IS_PATHSEP(x) (x == '/' || x == '\\')

Just that.","Wait, how should mrb_file_is_absolute_path(""\\"") return? true or false?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4951,2020-03-07T08:26:23Z,2020-03-07T08:58:27Z,2020-03-08T20:33:35Z,MERGED,True,5,3,1,https://github.com/Reckordp,Fix unfinished changes,2,[],https://github.com/mruby/mruby/pull/4951,https://github.com/Reckordp,4,https://github.com/mruby/mruby/pull/4951#issuecomment-596067604,"Me again
There was a typo resulting in an error during compile.
#define IS_PATHSEP(x) (x == '/' || x == '\')

to
#define IS_PATHSEP(x) (x == '/' || x == '\\')

Just that.","set USERPROFILE=\
mirb
> File.expand_path(""~"")
non-absolute home (ArgumentError)

mrb_file_is_absolute_path(""\\"") return false
set USERPROFILE=\\
mirb
> File.expand_path(""~"")
""/""

mrb_file_is_absolute_path(""\\\\"") return true
for / the results are the same",True,{}
mruby/mruby,https://github.com/mruby/mruby,4951,2020-03-07T08:26:23Z,2020-03-07T08:58:27Z,2020-03-08T20:33:35Z,MERGED,True,5,3,1,https://github.com/Reckordp,Fix unfinished changes,2,[],https://github.com/mruby/mruby/pull/4951,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4951#issuecomment-596069231,"Me again
There was a typo resulting in an error during compile.
#define IS_PATHSEP(x) (x == '/' || x == '\')

to
#define IS_PATHSEP(x) (x == '/' || x == '\\')

Just that.","Sorry for my ignorance. So, in Windows, \ is not an absolute path, right?
In that case, the current implementation access the trailing NUL (L290) in path. Is it intentional?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4951,2020-03-07T08:26:23Z,2020-03-07T08:58:27Z,2020-03-08T20:33:35Z,MERGED,True,5,3,1,https://github.com/Reckordp,Fix unfinished changes,2,[],https://github.com/mruby/mruby/pull/4951,https://github.com/Reckordp,6,https://github.com/mruby/mruby/pull/4951#issuecomment-596080395,"Me again
There was a typo resulting in an error during compile.
#define IS_PATHSEP(x) (x == '/' || x == '\')

to
#define IS_PATHSEP(x) (x == '/' || x == '\\')

Just that.","first I just wanted to solve my own problem and share it with people, but it seemed that the problem was getting bigger :p
Sorry, this is a translation from Google
according to the documentation from windows that i read, there are three types of paths: traditional dos, unc, and dos devices.
only the traditional dos path has a relative path.
traditional path absolute dos must include drive letters, colons, and separators. for unc double separator without dots and question marks that follow. for multiple dos separator devices, followed by a period and a question mark.
That's all I know, I'll fix my program style.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4952,2020-03-08T07:47:47Z,2020-03-08T09:52:25Z,2020-03-08T23:49:09Z,MERGED,True,51,10,2,https://github.com/Reckordp,"Traditional, UNC, and Drive Path",4,[],https://github.com/mruby/mruby/pull/4952,https://github.com/Reckordp,1,https://github.com/mruby/mruby/pull/4952,"added several types of paths for windows only
and some additions :D","added several types of paths for windows only
and some additions :D",True,{}
mruby/mruby,https://github.com/mruby/mruby,4952,2020-03-08T07:47:47Z,2020-03-08T09:52:25Z,2020-03-08T23:49:09Z,MERGED,True,51,10,2,https://github.com/Reckordp,"Traditional, UNC, and Drive Path",4,[],https://github.com/mruby/mruby/pull/4952,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4952#issuecomment-596186990,"added several types of paths for windows only
and some additions :D",Thank you for all the effort! It was bigger than we first expected.,True,{'THUMBS_UP': ['https://github.com/Reckordp']}
mruby/mruby,https://github.com/mruby/mruby,4952,2020-03-08T07:47:47Z,2020-03-08T09:52:25Z,2020-03-08T23:49:09Z,MERGED,True,51,10,2,https://github.com/Reckordp,"Traditional, UNC, and Drive Path",4,[],https://github.com/mruby/mruby/pull/4952,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/4952#issuecomment-596188736,"added several types of paths for windows only
and some additions :D","I think that the argument len of mrb_file_is_absolute_path() is unnecessary because differences in the signature of the function between Windows and others cause confusion.
And the type of len should be size_t, I think.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4952,2020-03-08T07:47:47Z,2020-03-08T09:52:25Z,2020-03-08T23:49:09Z,MERGED,True,51,10,2,https://github.com/Reckordp,"Traditional, UNC, and Drive Path",4,[],https://github.com/mruby/mruby/pull/4952,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/4952#issuecomment-596201925,"added several types of paths for windows only
and some additions :D","Sorry, I didn't realize @matz had already made the same fix as my comment. Thank you.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4952,2020-03-08T07:47:47Z,2020-03-08T09:52:25Z,2020-03-08T23:49:09Z,MERGED,True,51,10,2,https://github.com/Reckordp,"Traditional, UNC, and Drive Path",4,[],https://github.com/mruby/mruby/pull/4952,https://github.com/Reckordp,5,https://github.com/mruby/mruby/pull/4952#issuecomment-596267064,"added several types of paths for windows only
and some additions :D",Nice,True,{}
mruby/mruby,https://github.com/mruby/mruby,4953,2020-03-08T07:51:30Z,2020-03-08T10:07:33Z,2020-03-08T23:32:59Z,MERGED,True,75,8,4,https://github.com/Reckordp,Some rule to CrossBuild Android,3,[],https://github.com/mruby/mruby/pull/4953,https://github.com/Reckordp,1,https://github.com/mruby/mruby/pull/4953,usually there are things that are not the same as others have. the addition of some smooth rules on my device,usually there are things that are not the same as others have. the addition of some smooth rules on my device,True,{}
mruby/mruby,https://github.com/mruby/mruby,4953,2020-03-08T07:51:30Z,2020-03-08T10:07:33Z,2020-03-08T23:32:59Z,MERGED,True,75,8,4,https://github.com/Reckordp,Some rule to CrossBuild Android,3,[],https://github.com/mruby/mruby/pull/4953,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4953#issuecomment-596187840,usually there are things that are not the same as others have. the addition of some smooth rules on my device,"Next time, separate the PR for each concern (e.g. patches for mrbgem.rake and android.rake in this case), please.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4953,2020-03-08T07:51:30Z,2020-03-08T10:07:33Z,2020-03-08T23:32:59Z,MERGED,True,75,8,4,https://github.com/Reckordp,Some rule to CrossBuild Android,3,[],https://github.com/mruby/mruby/pull/4953,https://github.com/Reckordp,3,https://github.com/mruby/mruby/pull/4953#issuecomment-596266192,usually there are things that are not the same as others have. the addition of some smooth rules on my device,Sure,True,{}
mruby/mruby,https://github.com/mruby/mruby,4954,2020-03-08T13:18:19Z,2020-03-08T13:37:23Z,2020-03-08T14:39:24Z,MERGED,True,50,20,15,https://github.com/dearblue,Improve configuration guard,3,[],https://github.com/mruby/mruby/pull/4954,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4954,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4956,2020-03-30T15:09:45Z,2020-03-31T13:04:19Z,2020-03-31T14:13:32Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix NULL pointer dereferences in mrb_local_variables; fix #4955,1,[],https://github.com/mruby/mruby/pull/4956,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4956,"However, the behavior of #call on the method object of local_variables is not corrected.","However, the behavior of #call on the method object of local_variables is not corrected.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4957,2020-03-31T14:47:48Z,2020-04-01T06:40:26Z,2020-04-01T15:36:15Z,MERGED,True,2,3,1,https://github.com/dearblue,Fix `mrb_funcall_with_block()` uses more GC arena,1,[],https://github.com/mruby/mruby/pull/4957,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4957,"If mrb->jmp is NULL and the function mrb_funcall_with_block() is called, GC Arena is returned from the function with over-used.

A normal (no global exodus) return will consume two GC Arena's.
In the event of an exception, five GC Arena are consumed.

This patch reduces consumption in both cases to one.","If mrb->jmp is NULL and the function mrb_funcall_with_block() is called, GC Arena is returned from the function with over-used.

A normal (no global exodus) return will consume two GC Arena's.
In the event of an exception, five GC Arena are consumed.

This patch reduces consumption in both cases to one.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4957,2020-03-31T14:47:48Z,2020-04-01T06:40:26Z,2020-04-01T15:36:15Z,MERGED,True,2,3,1,https://github.com/dearblue,Fix `mrb_funcall_with_block()` uses more GC arena,1,[],https://github.com/mruby/mruby/pull/4957,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/4957#issuecomment-606676377,"If mrb->jmp is NULL and the function mrb_funcall_with_block() is called, GC Arena is returned from the function with over-used.

A normal (no global exodus) return will consume two GC Arena's.
In the event of an exception, five GC Arena are consumed.

This patch reduces consumption in both cases to one.","test code (test-funcall.c):
#include <mruby.h>
#include <stdio.h>

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();
  const char *const method_name = (argc > 1 ? argv[1] : ""nullpo"");
  int i;

  printf(""call Object#%s\n"", method_name);

  for (i = 0; i < 5; i ++) {
    printf(""time: %d, mrb->gc.arena_idx: %d\n"", i, (int)mrb_gc_arena_save(mrb));
    mrb_funcall(mrb, mrb_obj_value(mrb->object_class), method_name,
                2, mrb_nil_value(), mrb_nil_value());
  }

  printf(""time: %d, mrb->gc.arena_idx: %d\n"", i, (int)mrb_gc_arena_save(mrb));
  mrb_close(mrb);

  return 0;
}


compile & link:
% cc -Iinclude -Lbuild/host/lib test-funcall.c -lmruby -lm


test run (with mruby-head 5acd802):
% ./a.out to_s
call Object#to_s
time: 0, mrb->gc.arena_idx: 0
time: 1, mrb->gc.arena_idx: 2
time: 2, mrb->gc.arena_idx: 4
time: 3, mrb->gc.arena_idx: 6
time: 4, mrb->gc.arena_idx: 8
time: 5, mrb->gc.arena_idx: 10

% ./a.out undefined_method
call Object#undefined_method
time: 0, mrb->gc.arena_idx: 0
time: 1, mrb->gc.arena_idx: 5
time: 2, mrb->gc.arena_idx: 10
time: 3, mrb->gc.arena_idx: 15
time: 4, mrb->gc.arena_idx: 20
time: 5, mrb->gc.arena_idx: 25


test run (with this patched):
% ./a.out to_s
call Object#to_s
time: 0, mrb->gc.arena_idx: 0
time: 1, mrb->gc.arena_idx: 1
time: 2, mrb->gc.arena_idx: 2
time: 3, mrb->gc.arena_idx: 3
time: 4, mrb->gc.arena_idx: 4
time: 5, mrb->gc.arena_idx: 5

% ./a.out undefined_method
call Object#undefined_method
time: 0, mrb->gc.arena_idx: 0
time: 1, mrb->gc.arena_idx: 1
time: 2, mrb->gc.arena_idx: 2
time: 3, mrb->gc.arena_idx: 3
time: 4, mrb->gc.arena_idx: 4
time: 5, mrb->gc.arena_idx: 5",True,{}
mruby/mruby,https://github.com/mruby/mruby,4958,2020-03-31T15:21:42Z,2020-04-01T15:35:25Z,2020-04-01T15:35:48Z,CLOSED,False,11,0,1,https://github.com/dearblue,Ignore white space with `mrb_get_args()` [ci skip],1,[],https://github.com/mruby/mruby/pull/4958,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4958,"# This is a joke; it closes on April 2 (JST +09:00).
I need to write a method with more than 30 arguments, but it's hard to find the specifier that corresponds to the variable.
I thought that putting a blank space would improve readability.","# This is a joke; it closes on April 2 (JST +09:00).
I need to write a method with more than 30 arguments, but it's hard to find the specifier that corresponds to the variable.
I thought that putting a blank space would improve readability.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4959,2020-04-01T17:59:56Z,2020-04-02T04:26:54Z,2020-04-04T00:58:31Z,MERGED,True,55,50,11,https://github.com/dsisnero,build when directories and files have spaces,2,[],https://github.com/mruby/mruby/pull/4959,https://github.com/dsisnero,1,https://github.com/mruby/mruby/pull/4959,Modified the build to quote filenames so that it builds when files have spaces,Modified the build to quote filenames so that it builds when files have spaces,True,{}
mruby/mruby,https://github.com/mruby/mruby,4960,2020-04-04T14:43:09Z,2020-04-05T05:17:09Z,2020-04-05T05:17:09Z,MERGED,True,14,35,3,https://github.com/Reckordp,Validate windows by Dir testing,3,[],https://github.com/mruby/mruby/pull/4960,https://github.com/Reckordp,1,https://github.com/mruby/mruby/pull/4960,We can use the path to detect windows. Path from windows can begin with a volume.,We can use the path to detect windows. Path from windows can begin with a volume.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4961,2020-04-06T05:43:05Z,2020-04-06T07:43:56Z,2020-04-06T08:43:33Z,CLOSED,False,152,89,20,https://github.com/Reckordp,Allow config without targetting host,17,[],https://github.com/mruby/mruby/pull/4961,https://github.com/Reckordp,1,https://github.com/mruby/mruby/pull/4961,"Skip the need on the host if there is still an mrbc in the bin folder. This commit makes it efficient for CrossBuild because it directly compiles for itself.
Config Example:
MRuby::CrossBuild.new('android-armeabi') do |conf|
  params = {
    :arch => 'armeabi',
    :platform => 'android-23',
    :toolchain => :clang,
  }
  toolchain :android, params

  conf.gembox 'full-core'
end
Run it
$ rake MRUBY_CONFIG=examples/targets/build_config_android_armeabi.rb
CC    src/array.c -> build/android-armeabi/src/array.o
CC    src/backtrace.c -> build/android-armeabi/src/backtrace.o
CC    src/class.c -> build/android-armeabi/src/class.o
CC    src/codedump.c -> build/android-armeabi/src/codedump.o
CC    src/compar.c -> build/android-armeabi/src/compar.o
CC    src/crc.c -> build/android-armeabi/src/crc.o
CC    src/debug.c -> build/android-armeabi/src/debug.o
CC    src/dump.c -> build/android-armeabi/src/dump.o
CC    src/enum.c -> build/android-armeabi/src/enum.o
CC    src/error.c -> build/android-armeabi/src/error.o
CC    src/etc.c -> build/android-armeabi/src/etc.o
CC    src/fmt_fp.c -> build/android-armeabi/src/fmt_fp.o
CC    src/gc.c -> build/android-armeabi/src/gc.o
CC    src/hash.c -> build/android-armeabi/src/hash.o
CC    src/init.c -> build/android-armeabi/src/init.o
CC    src/kernel.c -> build/android-armeabi/src/kernel.o
CC    src/load.c -> build/android-armeabi/src/load.o
CC    src/numeric.c -> build/android-armeabi/src/numeric.o
CC    src/object.c -> build/android-armeabi/src/object.o
CC    src/pool.c -> build/android-armeabi/src/pool.o
CC    src/print.c -> build/android-armeabi/src/print.o
CC    src/proc.c -> build/android-armeabi/src/proc.o
CC    src/range.c -> build/android-armeabi/src/range.o
CC    src/state.c -> build/android-armeabi/src/state.o
CC    src/string.c -> build/android-armeabi/src/string.o
CC    src/symbol.c -> build/android-armeabi/src/symbol.o
CC    src/variable.c -> build/android-armeabi/src/variable.o
CC    src/version.c -> build/android-armeabi/src/version.o
CC    src/vm.c -> build/android-armeabi/src/vm.o
GEN   *.rb -> build/android-armeabi/mrblib/mrblib.c
      MRBC mrblib/00class.rb
      MRBC mrblib/10error.rb
      MRBC mrblib/array.rb
      MRBC mrblib/compar.rb
      MRBC mrblib/enum.rb
      MRBC mrblib/hash.rb
      MRBC mrblib/kernel.rb
      MRBC mrblib/numeric.rb
      MRBC mrblib/range.rb
      MRBC mrblib/string.rb
      MRBC mrblib/symbol.rb
CC    build/android-armeabi/mrblib/mrblib.c -> build/android-armeabi/mrblib/mrblib.o
CC    mrbgems/mruby-metaprog/src/metaprog.c -> build/android-armeabi/mrbgems/mruby-metaprog/src/metaprog.o
CC    build/android-armeabi/mrbgems/mruby-metaprog/gem_init.c -> build/android-armeabi/mrbgems/mruby-metaprog/gem_init.o
CC    mrbgems/mruby-io/src/file.c -> build/android-armeabi/mrbgems/mruby-io/src/file.o
CC    mrbgems/mruby-io/src/file_test.c -> build/android-armeabi/mrbgems/mruby-io/src/file_test.o
CC    mrbgems/mruby-io/src/io.c -> build/android-armeabi/mrbgems/mruby-io/src/io.o
CC    mrbgems/mruby-io/src/mruby_io_gem.c -> build/android-armeabi/mrbgems/mruby-io/src/mruby_io_gem.o
      MRBC mrbgems/mruby-io/mrblib/file.rb
      MRBC mrbgems/mruby-io/mrblib/file_constants.rb
      MRBC mrbgems/mruby-io/mrblib/io.rb
      MRBC mrbgems/mruby-io/mrblib/kernel.rb
CC    build/android-armeabi/mrbgems/mruby-io/gem_init.c -> build/android-armeabi/mrbgems/mruby-io/gem_init.o
CC    mrbgems/mruby-pack/src/pack.c -> build/android-armeabi/mrbgems/mruby-pack/src/pack.o
CC    build/android-armeabi/mrbgems/mruby-pack/gem_init.c -> build/android-armeabi/mrbgems/mruby-pack/gem_init.o
CC    mrbgems/mruby-sprintf/src/kernel.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/kernel.o
CC    mrbgems/mruby-sprintf/src/sprintf.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/sprintf.o
      MRBC mrbgems/mruby-sprintf/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-sprintf/gem_init.c -> build/android-armeabi/mrbgems/mruby-sprintf/gem_init.o
CC    mrbgems/mruby-print/src/print.c -> build/android-armeabi/mrbgems/mruby-print/src/print.o
      MRBC mrbgems/mruby-print/mrblib/print.rb
CC    build/android-armeabi/mrbgems/mruby-print/gem_init.c -> build/android-armeabi/mrbgems/mruby-print/gem_init.o
CC    mrbgems/mruby-math/src/math.c -> build/android-armeabi/mrbgems/mruby-math/src/math.o
CC    build/android-armeabi/mrbgems/mruby-math/gem_init.c -> build/android-armeabi/mrbgems/mruby-math/gem_init.o
CC    mrbgems/mruby-time/src/time.c -> build/android-armeabi/mrbgems/mruby-time/src/time.o
      MRBC mrbgems/mruby-time/mrblib/time.rb
CC    build/android-armeabi/mrbgems/mruby-time/gem_init.c -> build/android-armeabi/mrbgems/mruby-time/gem_init.o
CC    mrbgems/mruby-struct/src/struct.c -> build/android-armeabi/mrbgems/mruby-struct/src/struct.o
      MRBC mrbgems/mruby-struct/mrblib/struct.rb
CC    build/android-armeabi/mrbgems/mruby-struct/gem_init.c -> build/android-armeabi/mrbgems/mruby-struct/gem_init.o
      MRBC mrbgems/mruby-compar-ext/mrblib/compar.rb
CC    build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.o
      MRBC mrbgems/mruby-enum-ext/mrblib/enum.rb
CC    build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.o
CC    mrbgems/mruby-string-ext/src/string.c -> build/android-armeabi/mrbgems/mruby-string-ext/src/string.o
      MRBC mrbgems/mruby-string-ext/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-string-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-string-ext/gem_init.o
CC    mrbgems/mruby-numeric-ext/src/numeric_ext.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/src/numeric_ext.o
      MRBC mrbgems/mruby-numeric-ext/mrblib/numeric_ext.rb
CC    build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.o
CC    mrbgems/mruby-array-ext/src/array.c -> build/android-armeabi/mrbgems/mruby-array-ext/src/array.o
      MRBC mrbgems/mruby-array-ext/mrblib/array.rb
CC    build/android-armeabi/mrbgems/mruby-array-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-array-ext/gem_init.o
CC    mrbgems/mruby-hash-ext/src/hash-ext.c -> build/android-armeabi/mrbgems/mruby-hash-ext/src/hash-ext.o
      MRBC mrbgems/mruby-hash-ext/mrblib/hash.rb
CC    build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.o
CC    mrbgems/mruby-range-ext/src/range.c -> build/android-armeabi/mrbgems/mruby-range-ext/src/range.o
      MRBC mrbgems/mruby-range-ext/mrblib/range.rb
CC    build/android-armeabi/mrbgems/mruby-range-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-range-ext/gem_init.o
CC    mrbgems/mruby-proc-ext/src/proc.c -> build/android-armeabi/mrbgems/mruby-proc-ext/src/proc.o
      MRBC mrbgems/mruby-proc-ext/mrblib/proc.rb
CC    build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.o
CC    mrbgems/mruby-symbol-ext/src/symbol.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/src/symbol.o
      MRBC mrbgems/mruby-symbol-ext/mrblib/symbol.rb
CC    build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.o
CC    mrbgems/mruby-random/src/random.c -> build/android-armeabi/mrbgems/mruby-random/src/random.o
CC    build/android-armeabi/mrbgems/mruby-random/gem_init.c -> build/android-armeabi/mrbgems/mruby-random/gem_init.o
CC    mrbgems/mruby-object-ext/src/object.c -> build/android-armeabi/mrbgems/mruby-object-ext/src/object.o
      MRBC mrbgems/mruby-object-ext/mrblib/object.rb
CC    build/android-armeabi/mrbgems/mruby-object-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-object-ext/gem_init.o
CC    mrbgems/mruby-objectspace/src/mruby_objectspace.c -> build/android-armeabi/mrbgems/mruby-objectspace/src/mruby_objectspace.o
CC    build/android-armeabi/mrbgems/mruby-objectspace/gem_init.c -> build/android-armeabi/mrbgems/mruby-objectspace/gem_init.o
CC    mrbgems/mruby-fiber/src/fiber.c -> build/android-armeabi/mrbgems/mruby-fiber/src/fiber.o
CC    build/android-armeabi/mrbgems/mruby-fiber/gem_init.c -> build/android-armeabi/mrbgems/mruby-fiber/gem_init.o
      MRBC mrbgems/mruby-enumerator/mrblib/enumerator.rb
CC    build/android-armeabi/mrbgems/mruby-enumerator/gem_init.c -> build/android-armeabi/mrbgems/mruby-enumerator/gem_init.o
      MRBC mrbgems/mruby-enum-lazy/mrblib/lazy.rb
CC    build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.o
CC    build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.o
CC    mrbgems/mruby-kernel-ext/src/kernel.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/src/kernel.o
CC    build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.o
CC    mrbgems/mruby-class-ext/src/class.c -> build/android-armeabi/mrbgems/mruby-class-ext/src/class.o
      MRBC mrbgems/mruby-class-ext/mrblib/module.rb
CC    build/android-armeabi/mrbgems/mruby-class-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-class-ext/gem_init.o
CC    mrbgems/mruby-method/src/method.c -> build/android-armeabi/mrbgems/mruby-method/src/method.o
      MRBC mrbgems/mruby-method/mrblib/kernel.rb
      MRBC mrbgems/mruby-method/mrblib/method.rb
CC    build/android-armeabi/mrbgems/mruby-method/gem_init.c -> build/android-armeabi/mrbgems/mruby-method/gem_init.o
CC    mrbgems/mruby-compiler/core/codegen.c -> build/android-armeabi/mrbgems/mruby-compiler/core/codegen.o
CC    mrbgems/mruby-error/src/exception.c -> build/android-armeabi/mrbgems/mruby-error/src/exception.o
CC    build/android-armeabi/mrbgems/mruby-error/gem_init.c -> build/android-armeabi/mrbgems/mruby-error/gem_init.o
CC    build/android-armeabi/mrbgems/gem_init.c -> build/android-armeabi/mrbgems/gem_init.o
AR    build/android-armeabi/lib/libmruby.a
CC    mrbgems/mruby-bin-mirb/tools/mirb/mirb.c -> build/android-armeabi/mrbgems/mruby-bin-mirb/tools/mirb/mirb.o
LD    build/android-armeabi/bin/mirb.exe
CC    mrbgems/mruby-bin-mruby/tools/mruby/mruby.c -> build/android-armeabi/mrbgems/mruby-bin-mruby/tools/mruby/mruby.o
LD    build/android-armeabi/bin/mruby.exe
CC    mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.c -> build/android-armeabi/mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.o
LD    build/android-armeabi/bin/mruby-strip.exe

Build summary:

================================================
      Config Name: android-armeabi
 Output Directory: build/android-armeabi
    Included Gems:
             mruby-metaprog - Meta-programming features for mruby
             mruby-io - IO and File class
             mruby-pack - Array#pack and String#unpack method
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-compar-ext - Enumerable module extension
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - extensional methods shared by all objects
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - extensional function-like methods
             mruby-class-ext - class/module extension
             mruby-method - Method and UnboundMethod class
================================================


It's successful","Skip the need on the host if there is still an mrbc in the bin folder. This commit makes it efficient for CrossBuild because it directly compiles for itself.
Config Example:
MRuby::CrossBuild.new('android-armeabi') do |conf|
  params = {
    :arch => 'armeabi',
    :platform => 'android-23',
    :toolchain => :clang,
  }
  toolchain :android, params

  conf.gembox 'full-core'
end
Run it
$ rake MRUBY_CONFIG=examples/targets/build_config_android_armeabi.rb
CC    src/array.c -> build/android-armeabi/src/array.o
CC    src/backtrace.c -> build/android-armeabi/src/backtrace.o
CC    src/class.c -> build/android-armeabi/src/class.o
CC    src/codedump.c -> build/android-armeabi/src/codedump.o
CC    src/compar.c -> build/android-armeabi/src/compar.o
CC    src/crc.c -> build/android-armeabi/src/crc.o
CC    src/debug.c -> build/android-armeabi/src/debug.o
CC    src/dump.c -> build/android-armeabi/src/dump.o
CC    src/enum.c -> build/android-armeabi/src/enum.o
CC    src/error.c -> build/android-armeabi/src/error.o
CC    src/etc.c -> build/android-armeabi/src/etc.o
CC    src/fmt_fp.c -> build/android-armeabi/src/fmt_fp.o
CC    src/gc.c -> build/android-armeabi/src/gc.o
CC    src/hash.c -> build/android-armeabi/src/hash.o
CC    src/init.c -> build/android-armeabi/src/init.o
CC    src/kernel.c -> build/android-armeabi/src/kernel.o
CC    src/load.c -> build/android-armeabi/src/load.o
CC    src/numeric.c -> build/android-armeabi/src/numeric.o
CC    src/object.c -> build/android-armeabi/src/object.o
CC    src/pool.c -> build/android-armeabi/src/pool.o
CC    src/print.c -> build/android-armeabi/src/print.o
CC    src/proc.c -> build/android-armeabi/src/proc.o
CC    src/range.c -> build/android-armeabi/src/range.o
CC    src/state.c -> build/android-armeabi/src/state.o
CC    src/string.c -> build/android-armeabi/src/string.o
CC    src/symbol.c -> build/android-armeabi/src/symbol.o
CC    src/variable.c -> build/android-armeabi/src/variable.o
CC    src/version.c -> build/android-armeabi/src/version.o
CC    src/vm.c -> build/android-armeabi/src/vm.o
GEN   *.rb -> build/android-armeabi/mrblib/mrblib.c
      MRBC mrblib/00class.rb
      MRBC mrblib/10error.rb
      MRBC mrblib/array.rb
      MRBC mrblib/compar.rb
      MRBC mrblib/enum.rb
      MRBC mrblib/hash.rb
      MRBC mrblib/kernel.rb
      MRBC mrblib/numeric.rb
      MRBC mrblib/range.rb
      MRBC mrblib/string.rb
      MRBC mrblib/symbol.rb
CC    build/android-armeabi/mrblib/mrblib.c -> build/android-armeabi/mrblib/mrblib.o
CC    mrbgems/mruby-metaprog/src/metaprog.c -> build/android-armeabi/mrbgems/mruby-metaprog/src/metaprog.o
CC    build/android-armeabi/mrbgems/mruby-metaprog/gem_init.c -> build/android-armeabi/mrbgems/mruby-metaprog/gem_init.o
CC    mrbgems/mruby-io/src/file.c -> build/android-armeabi/mrbgems/mruby-io/src/file.o
CC    mrbgems/mruby-io/src/file_test.c -> build/android-armeabi/mrbgems/mruby-io/src/file_test.o
CC    mrbgems/mruby-io/src/io.c -> build/android-armeabi/mrbgems/mruby-io/src/io.o
CC    mrbgems/mruby-io/src/mruby_io_gem.c -> build/android-armeabi/mrbgems/mruby-io/src/mruby_io_gem.o
      MRBC mrbgems/mruby-io/mrblib/file.rb
      MRBC mrbgems/mruby-io/mrblib/file_constants.rb
      MRBC mrbgems/mruby-io/mrblib/io.rb
      MRBC mrbgems/mruby-io/mrblib/kernel.rb
CC    build/android-armeabi/mrbgems/mruby-io/gem_init.c -> build/android-armeabi/mrbgems/mruby-io/gem_init.o
CC    mrbgems/mruby-pack/src/pack.c -> build/android-armeabi/mrbgems/mruby-pack/src/pack.o
CC    build/android-armeabi/mrbgems/mruby-pack/gem_init.c -> build/android-armeabi/mrbgems/mruby-pack/gem_init.o
CC    mrbgems/mruby-sprintf/src/kernel.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/kernel.o
CC    mrbgems/mruby-sprintf/src/sprintf.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/sprintf.o
      MRBC mrbgems/mruby-sprintf/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-sprintf/gem_init.c -> build/android-armeabi/mrbgems/mruby-sprintf/gem_init.o
CC    mrbgems/mruby-print/src/print.c -> build/android-armeabi/mrbgems/mruby-print/src/print.o
      MRBC mrbgems/mruby-print/mrblib/print.rb
CC    build/android-armeabi/mrbgems/mruby-print/gem_init.c -> build/android-armeabi/mrbgems/mruby-print/gem_init.o
CC    mrbgems/mruby-math/src/math.c -> build/android-armeabi/mrbgems/mruby-math/src/math.o
CC    build/android-armeabi/mrbgems/mruby-math/gem_init.c -> build/android-armeabi/mrbgems/mruby-math/gem_init.o
CC    mrbgems/mruby-time/src/time.c -> build/android-armeabi/mrbgems/mruby-time/src/time.o
      MRBC mrbgems/mruby-time/mrblib/time.rb
CC    build/android-armeabi/mrbgems/mruby-time/gem_init.c -> build/android-armeabi/mrbgems/mruby-time/gem_init.o
CC    mrbgems/mruby-struct/src/struct.c -> build/android-armeabi/mrbgems/mruby-struct/src/struct.o
      MRBC mrbgems/mruby-struct/mrblib/struct.rb
CC    build/android-armeabi/mrbgems/mruby-struct/gem_init.c -> build/android-armeabi/mrbgems/mruby-struct/gem_init.o
      MRBC mrbgems/mruby-compar-ext/mrblib/compar.rb
CC    build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.o
      MRBC mrbgems/mruby-enum-ext/mrblib/enum.rb
CC    build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.o
CC    mrbgems/mruby-string-ext/src/string.c -> build/android-armeabi/mrbgems/mruby-string-ext/src/string.o
      MRBC mrbgems/mruby-string-ext/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-string-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-string-ext/gem_init.o
CC    mrbgems/mruby-numeric-ext/src/numeric_ext.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/src/numeric_ext.o
      MRBC mrbgems/mruby-numeric-ext/mrblib/numeric_ext.rb
CC    build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.o
CC    mrbgems/mruby-array-ext/src/array.c -> build/android-armeabi/mrbgems/mruby-array-ext/src/array.o
      MRBC mrbgems/mruby-array-ext/mrblib/array.rb
CC    build/android-armeabi/mrbgems/mruby-array-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-array-ext/gem_init.o
CC    mrbgems/mruby-hash-ext/src/hash-ext.c -> build/android-armeabi/mrbgems/mruby-hash-ext/src/hash-ext.o
      MRBC mrbgems/mruby-hash-ext/mrblib/hash.rb
CC    build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.o
CC    mrbgems/mruby-range-ext/src/range.c -> build/android-armeabi/mrbgems/mruby-range-ext/src/range.o
      MRBC mrbgems/mruby-range-ext/mrblib/range.rb
CC    build/android-armeabi/mrbgems/mruby-range-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-range-ext/gem_init.o
CC    mrbgems/mruby-proc-ext/src/proc.c -> build/android-armeabi/mrbgems/mruby-proc-ext/src/proc.o
      MRBC mrbgems/mruby-proc-ext/mrblib/proc.rb
CC    build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.o
CC    mrbgems/mruby-symbol-ext/src/symbol.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/src/symbol.o
      MRBC mrbgems/mruby-symbol-ext/mrblib/symbol.rb
CC    build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.o
CC    mrbgems/mruby-random/src/random.c -> build/android-armeabi/mrbgems/mruby-random/src/random.o
CC    build/android-armeabi/mrbgems/mruby-random/gem_init.c -> build/android-armeabi/mrbgems/mruby-random/gem_init.o
CC    mrbgems/mruby-object-ext/src/object.c -> build/android-armeabi/mrbgems/mruby-object-ext/src/object.o
      MRBC mrbgems/mruby-object-ext/mrblib/object.rb
CC    build/android-armeabi/mrbgems/mruby-object-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-object-ext/gem_init.o
CC    mrbgems/mruby-objectspace/src/mruby_objectspace.c -> build/android-armeabi/mrbgems/mruby-objectspace/src/mruby_objectspace.o
CC    build/android-armeabi/mrbgems/mruby-objectspace/gem_init.c -> build/android-armeabi/mrbgems/mruby-objectspace/gem_init.o
CC    mrbgems/mruby-fiber/src/fiber.c -> build/android-armeabi/mrbgems/mruby-fiber/src/fiber.o
CC    build/android-armeabi/mrbgems/mruby-fiber/gem_init.c -> build/android-armeabi/mrbgems/mruby-fiber/gem_init.o
      MRBC mrbgems/mruby-enumerator/mrblib/enumerator.rb
CC    build/android-armeabi/mrbgems/mruby-enumerator/gem_init.c -> build/android-armeabi/mrbgems/mruby-enumerator/gem_init.o
      MRBC mrbgems/mruby-enum-lazy/mrblib/lazy.rb
CC    build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.o
CC    build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.o
CC    mrbgems/mruby-kernel-ext/src/kernel.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/src/kernel.o
CC    build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.o
CC    mrbgems/mruby-class-ext/src/class.c -> build/android-armeabi/mrbgems/mruby-class-ext/src/class.o
      MRBC mrbgems/mruby-class-ext/mrblib/module.rb
CC    build/android-armeabi/mrbgems/mruby-class-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-class-ext/gem_init.o
CC    mrbgems/mruby-method/src/method.c -> build/android-armeabi/mrbgems/mruby-method/src/method.o
      MRBC mrbgems/mruby-method/mrblib/kernel.rb
      MRBC mrbgems/mruby-method/mrblib/method.rb
CC    build/android-armeabi/mrbgems/mruby-method/gem_init.c -> build/android-armeabi/mrbgems/mruby-method/gem_init.o
CC    mrbgems/mruby-compiler/core/codegen.c -> build/android-armeabi/mrbgems/mruby-compiler/core/codegen.o
CC    mrbgems/mruby-error/src/exception.c -> build/android-armeabi/mrbgems/mruby-error/src/exception.o
CC    build/android-armeabi/mrbgems/mruby-error/gem_init.c -> build/android-armeabi/mrbgems/mruby-error/gem_init.o
CC    build/android-armeabi/mrbgems/gem_init.c -> build/android-armeabi/mrbgems/gem_init.o
AR    build/android-armeabi/lib/libmruby.a
CC    mrbgems/mruby-bin-mirb/tools/mirb/mirb.c -> build/android-armeabi/mrbgems/mruby-bin-mirb/tools/mirb/mirb.o
LD    build/android-armeabi/bin/mirb.exe
CC    mrbgems/mruby-bin-mruby/tools/mruby/mruby.c -> build/android-armeabi/mrbgems/mruby-bin-mruby/tools/mruby/mruby.o
LD    build/android-armeabi/bin/mruby.exe
CC    mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.c -> build/android-armeabi/mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.o
LD    build/android-armeabi/bin/mruby-strip.exe

Build summary:

================================================
      Config Name: android-armeabi
 Output Directory: build/android-armeabi
    Included Gems:
             mruby-metaprog - Meta-programming features for mruby
             mruby-io - IO and File class
             mruby-pack - Array#pack and String#unpack method
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-compar-ext - Enumerable module extension
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - extensional methods shared by all objects
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - extensional function-like methods
             mruby-class-ext - class/module extension
             mruby-method - Method and UnboundMethod class
================================================


It's successful",True,{}
mruby/mruby,https://github.com/mruby/mruby,4962,2020-04-06T06:06:04Z,2020-04-06T07:43:43Z,2020-04-06T07:43:43Z,CLOSED,False,248,119,21,https://github.com/Reckordp,Notify there is available for upgrade,9,[],https://github.com/mruby/mruby/pull/4962,https://github.com/Reckordp,1,https://github.com/mruby/mruby/pull/4962,"Print available version can be upgrade for current source in last build. Lockfile after third build
---
mruby_version:
  version: 2.1.0
  release_no:
    host: 20100
  git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
builds:
  mruby_version:
    version: 2.1.0
    release_no:
      host: 20100
    git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
  builds:
    mruby_version:
      version: 2.1.0
      release_no:
        host: 20100
      git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93","Print available version can be upgrade for current source in last build. Lockfile after third build
---
mruby_version:
  version: 2.1.0
  release_no:
    host: 20100
  git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
builds:
  mruby_version:
    version: 2.1.0
    release_no:
      host: 20100
    git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
  builds:
    mruby_version:
      version: 2.1.0
      release_no:
        host: 20100
      git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93",True,{}
mruby/mruby,https://github.com/mruby/mruby,4962,2020-04-06T06:06:04Z,2020-04-06T07:43:43Z,2020-04-06T07:43:43Z,CLOSED,False,248,119,21,https://github.com/Reckordp,Notify there is available for upgrade,9,[],https://github.com/mruby/mruby/pull/4962,https://github.com/Reckordp,2,https://github.com/mruby/mruby/pull/4962#issuecomment-609630035,"Print available version can be upgrade for current source in last build. Lockfile after third build
---
mruby_version:
  version: 2.1.0
  release_no:
    host: 20100
  git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
builds:
  mruby_version:
    version: 2.1.0
    release_no:
      host: 20100
    git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
  builds:
    mruby_version:
      version: 2.1.0
      release_no:
        host: 20100
      git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93",Wow it's look messy. I will fix it fast,True,{}
mruby/mruby,https://github.com/mruby/mruby,4963,2020-04-06T08:54:49Z,2020-04-07T00:54:42Z,2020-04-07T06:23:07Z,CLOSED,False,137,53,17,https://github.com/Reckordp,[remake] Allow config without host,1,[],https://github.com/mruby/mruby/pull/4963,https://github.com/Reckordp,1,https://github.com/mruby/mruby/pull/4963,"Skip the need on the host if there is still an mrbc in the bin folder. This commit makes it efficient for CrossBuild because it directly compiles for itself.
Config Example:
MRuby::CrossBuild.new('android-armeabi') do |conf|
  params = {
    :arch => 'armeabi',
    :platform => 'android-23',
    :toolchain => :clang,
  }
  toolchain :android, params

  conf.gembox 'full-core'
end
Run it
$ rake MRUBY_CONFIG=examples/targets/build_config_android_armeabi.rb
CC    src/array.c -> build/android-armeabi/src/array.o
CC    src/backtrace.c -> build/android-armeabi/src/backtrace.o
CC    src/class.c -> build/android-armeabi/src/class.o
CC    src/codedump.c -> build/android-armeabi/src/codedump.o
CC    src/compar.c -> build/android-armeabi/src/compar.o
CC    src/crc.c -> build/android-armeabi/src/crc.o
CC    src/debug.c -> build/android-armeabi/src/debug.o
CC    src/dump.c -> build/android-armeabi/src/dump.o
CC    src/enum.c -> build/android-armeabi/src/enum.o
CC    src/error.c -> build/android-armeabi/src/error.o
CC    src/etc.c -> build/android-armeabi/src/etc.o
CC    src/fmt_fp.c -> build/android-armeabi/src/fmt_fp.o
CC    src/gc.c -> build/android-armeabi/src/gc.o
CC    src/hash.c -> build/android-armeabi/src/hash.o
CC    src/init.c -> build/android-armeabi/src/init.o
CC    src/kernel.c -> build/android-armeabi/src/kernel.o
CC    src/load.c -> build/android-armeabi/src/load.o
CC    src/numeric.c -> build/android-armeabi/src/numeric.o
CC    src/object.c -> build/android-armeabi/src/object.o
CC    src/pool.c -> build/android-armeabi/src/pool.o
CC    src/print.c -> build/android-armeabi/src/print.o
CC    src/proc.c -> build/android-armeabi/src/proc.o
CC    src/range.c -> build/android-armeabi/src/range.o
CC    src/state.c -> build/android-armeabi/src/state.o
CC    src/string.c -> build/android-armeabi/src/string.o
CC    src/symbol.c -> build/android-armeabi/src/symbol.o
CC    src/variable.c -> build/android-armeabi/src/variable.o
CC    src/version.c -> build/android-armeabi/src/version.o
CC    src/vm.c -> build/android-armeabi/src/vm.o
GEN   *.rb -> build/android-armeabi/mrblib/mrblib.c
      MRBC mrblib/00class.rb
      MRBC mrblib/10error.rb
      MRBC mrblib/array.rb
      MRBC mrblib/compar.rb
      MRBC mrblib/enum.rb
      MRBC mrblib/hash.rb
      MRBC mrblib/kernel.rb
      MRBC mrblib/numeric.rb
      MRBC mrblib/range.rb
      MRBC mrblib/string.rb
      MRBC mrblib/symbol.rb
CC    build/android-armeabi/mrblib/mrblib.c -> build/android-armeabi/mrblib/mrblib.o
CC    mrbgems/mruby-metaprog/src/metaprog.c -> build/android-armeabi/mrbgems/mruby-metaprog/src/metaprog.o
CC    build/android-armeabi/mrbgems/mruby-metaprog/gem_init.c -> build/android-armeabi/mrbgems/mruby-metaprog/gem_init.o
CC    mrbgems/mruby-io/src/file.c -> build/android-armeabi/mrbgems/mruby-io/src/file.o
CC    mrbgems/mruby-io/src/file_test.c -> build/android-armeabi/mrbgems/mruby-io/src/file_test.o
CC    mrbgems/mruby-io/src/io.c -> build/android-armeabi/mrbgems/mruby-io/src/io.o
CC    mrbgems/mruby-io/src/mruby_io_gem.c -> build/android-armeabi/mrbgems/mruby-io/src/mruby_io_gem.o
      MRBC mrbgems/mruby-io/mrblib/file.rb
      MRBC mrbgems/mruby-io/mrblib/file_constants.rb
      MRBC mrbgems/mruby-io/mrblib/io.rb
      MRBC mrbgems/mruby-io/mrblib/kernel.rb
CC    build/android-armeabi/mrbgems/mruby-io/gem_init.c -> build/android-armeabi/mrbgems/mruby-io/gem_init.o
CC    mrbgems/mruby-pack/src/pack.c -> build/android-armeabi/mrbgems/mruby-pack/src/pack.o
CC    build/android-armeabi/mrbgems/mruby-pack/gem_init.c -> build/android-armeabi/mrbgems/mruby-pack/gem_init.o
CC    mrbgems/mruby-sprintf/src/kernel.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/kernel.o
CC    mrbgems/mruby-sprintf/src/sprintf.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/sprintf.o
      MRBC mrbgems/mruby-sprintf/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-sprintf/gem_init.c -> build/android-armeabi/mrbgems/mruby-sprintf/gem_init.o
CC    mrbgems/mruby-print/src/print.c -> build/android-armeabi/mrbgems/mruby-print/src/print.o
      MRBC mrbgems/mruby-print/mrblib/print.rb
CC    build/android-armeabi/mrbgems/mruby-print/gem_init.c -> build/android-armeabi/mrbgems/mruby-print/gem_init.o
CC    mrbgems/mruby-math/src/math.c -> build/android-armeabi/mrbgems/mruby-math/src/math.o
CC    build/android-armeabi/mrbgems/mruby-math/gem_init.c -> build/android-armeabi/mrbgems/mruby-math/gem_init.o
CC    mrbgems/mruby-time/src/time.c -> build/android-armeabi/mrbgems/mruby-time/src/time.o
      MRBC mrbgems/mruby-time/mrblib/time.rb
CC    build/android-armeabi/mrbgems/mruby-time/gem_init.c -> build/android-armeabi/mrbgems/mruby-time/gem_init.o
CC    mrbgems/mruby-struct/src/struct.c -> build/android-armeabi/mrbgems/mruby-struct/src/struct.o
      MRBC mrbgems/mruby-struct/mrblib/struct.rb
CC    build/android-armeabi/mrbgems/mruby-struct/gem_init.c -> build/android-armeabi/mrbgems/mruby-struct/gem_init.o
      MRBC mrbgems/mruby-compar-ext/mrblib/compar.rb
CC    build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.o
      MRBC mrbgems/mruby-enum-ext/mrblib/enum.rb
CC    build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.o
CC    mrbgems/mruby-string-ext/src/string.c -> build/android-armeabi/mrbgems/mruby-string-ext/src/string.o
      MRBC mrbgems/mruby-string-ext/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-string-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-string-ext/gem_init.o
CC    mrbgems/mruby-numeric-ext/src/numeric_ext.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/src/numeric_ext.o
      MRBC mrbgems/mruby-numeric-ext/mrblib/numeric_ext.rb
CC    build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.o
CC    mrbgems/mruby-array-ext/src/array.c -> build/android-armeabi/mrbgems/mruby-array-ext/src/array.o
      MRBC mrbgems/mruby-array-ext/mrblib/array.rb
CC    build/android-armeabi/mrbgems/mruby-array-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-array-ext/gem_init.o
CC    mrbgems/mruby-hash-ext/src/hash-ext.c -> build/android-armeabi/mrbgems/mruby-hash-ext/src/hash-ext.o
      MRBC mrbgems/mruby-hash-ext/mrblib/hash.rb
CC    build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.o
CC    mrbgems/mruby-range-ext/src/range.c -> build/android-armeabi/mrbgems/mruby-range-ext/src/range.o
      MRBC mrbgems/mruby-range-ext/mrblib/range.rb
CC    build/android-armeabi/mrbgems/mruby-range-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-range-ext/gem_init.o
CC    mrbgems/mruby-proc-ext/src/proc.c -> build/android-armeabi/mrbgems/mruby-proc-ext/src/proc.o
      MRBC mrbgems/mruby-proc-ext/mrblib/proc.rb
CC    build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.o
CC    mrbgems/mruby-symbol-ext/src/symbol.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/src/symbol.o
      MRBC mrbgems/mruby-symbol-ext/mrblib/symbol.rb
CC    build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.o
CC    mrbgems/mruby-random/src/random.c -> build/android-armeabi/mrbgems/mruby-random/src/random.o
CC    build/android-armeabi/mrbgems/mruby-random/gem_init.c -> build/android-armeabi/mrbgems/mruby-random/gem_init.o
CC    mrbgems/mruby-object-ext/src/object.c -> build/android-armeabi/mrbgems/mruby-object-ext/src/object.o
      MRBC mrbgems/mruby-object-ext/mrblib/object.rb
CC    build/android-armeabi/mrbgems/mruby-object-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-object-ext/gem_init.o
CC    mrbgems/mruby-objectspace/src/mruby_objectspace.c -> build/android-armeabi/mrbgems/mruby-objectspace/src/mruby_objectspace.o
CC    build/android-armeabi/mrbgems/mruby-objectspace/gem_init.c -> build/android-armeabi/mrbgems/mruby-objectspace/gem_init.o
CC    mrbgems/mruby-fiber/src/fiber.c -> build/android-armeabi/mrbgems/mruby-fiber/src/fiber.o
CC    build/android-armeabi/mrbgems/mruby-fiber/gem_init.c -> build/android-armeabi/mrbgems/mruby-fiber/gem_init.o
      MRBC mrbgems/mruby-enumerator/mrblib/enumerator.rb
CC    build/android-armeabi/mrbgems/mruby-enumerator/gem_init.c -> build/android-armeabi/mrbgems/mruby-enumerator/gem_init.o
      MRBC mrbgems/mruby-enum-lazy/mrblib/lazy.rb
CC    build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.o
CC    build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.o
CC    mrbgems/mruby-kernel-ext/src/kernel.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/src/kernel.o
CC    build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.o
CC    mrbgems/mruby-class-ext/src/class.c -> build/android-armeabi/mrbgems/mruby-class-ext/src/class.o
      MRBC mrbgems/mruby-class-ext/mrblib/module.rb
CC    build/android-armeabi/mrbgems/mruby-class-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-class-ext/gem_init.o
CC    mrbgems/mruby-method/src/method.c -> build/android-armeabi/mrbgems/mruby-method/src/method.o
      MRBC mrbgems/mruby-method/mrblib/kernel.rb
      MRBC mrbgems/mruby-method/mrblib/method.rb
CC    build/android-armeabi/mrbgems/mruby-method/gem_init.c -> build/android-armeabi/mrbgems/mruby-method/gem_init.o
CC    mrbgems/mruby-compiler/core/codegen.c -> build/android-armeabi/mrbgems/mruby-compiler/core/codegen.o
CC    mrbgems/mruby-error/src/exception.c -> build/android-armeabi/mrbgems/mruby-error/src/exception.o
CC    build/android-armeabi/mrbgems/mruby-error/gem_init.c -> build/android-armeabi/mrbgems/mruby-error/gem_init.o
CC    build/android-armeabi/mrbgems/gem_init.c -> build/android-armeabi/mrbgems/gem_init.o
AR    build/android-armeabi/lib/libmruby.a
CC    mrbgems/mruby-bin-mirb/tools/mirb/mirb.c -> build/android-armeabi/mrbgems/mruby-bin-mirb/tools/mirb/mirb.o
LD    build/android-armeabi/bin/mirb.exe
CC    mrbgems/mruby-bin-mruby/tools/mruby/mruby.c -> build/android-armeabi/mrbgems/mruby-bin-mruby/tools/mruby/mruby.o
LD    build/android-armeabi/bin/mruby.exe
CC    mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.c -> build/android-armeabi/mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.o
LD    build/android-armeabi/bin/mruby-strip.exe

Build summary:

================================================
      Config Name: android-armeabi
 Output Directory: build/android-armeabi
    Included Gems:
             mruby-metaprog - Meta-programming features for mruby
             mruby-io - IO and File class
             mruby-pack - Array#pack and String#unpack method
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-compar-ext - Enumerable module extension
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - extensional methods shared by all objects
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - extensional function-like methods
             mruby-class-ext - class/module extension
             mruby-method - Method and UnboundMethod class
================================================

It's successful","Skip the need on the host if there is still an mrbc in the bin folder. This commit makes it efficient for CrossBuild because it directly compiles for itself.
Config Example:
MRuby::CrossBuild.new('android-armeabi') do |conf|
  params = {
    :arch => 'armeabi',
    :platform => 'android-23',
    :toolchain => :clang,
  }
  toolchain :android, params

  conf.gembox 'full-core'
end
Run it
$ rake MRUBY_CONFIG=examples/targets/build_config_android_armeabi.rb
CC    src/array.c -> build/android-armeabi/src/array.o
CC    src/backtrace.c -> build/android-armeabi/src/backtrace.o
CC    src/class.c -> build/android-armeabi/src/class.o
CC    src/codedump.c -> build/android-armeabi/src/codedump.o
CC    src/compar.c -> build/android-armeabi/src/compar.o
CC    src/crc.c -> build/android-armeabi/src/crc.o
CC    src/debug.c -> build/android-armeabi/src/debug.o
CC    src/dump.c -> build/android-armeabi/src/dump.o
CC    src/enum.c -> build/android-armeabi/src/enum.o
CC    src/error.c -> build/android-armeabi/src/error.o
CC    src/etc.c -> build/android-armeabi/src/etc.o
CC    src/fmt_fp.c -> build/android-armeabi/src/fmt_fp.o
CC    src/gc.c -> build/android-armeabi/src/gc.o
CC    src/hash.c -> build/android-armeabi/src/hash.o
CC    src/init.c -> build/android-armeabi/src/init.o
CC    src/kernel.c -> build/android-armeabi/src/kernel.o
CC    src/load.c -> build/android-armeabi/src/load.o
CC    src/numeric.c -> build/android-armeabi/src/numeric.o
CC    src/object.c -> build/android-armeabi/src/object.o
CC    src/pool.c -> build/android-armeabi/src/pool.o
CC    src/print.c -> build/android-armeabi/src/print.o
CC    src/proc.c -> build/android-armeabi/src/proc.o
CC    src/range.c -> build/android-armeabi/src/range.o
CC    src/state.c -> build/android-armeabi/src/state.o
CC    src/string.c -> build/android-armeabi/src/string.o
CC    src/symbol.c -> build/android-armeabi/src/symbol.o
CC    src/variable.c -> build/android-armeabi/src/variable.o
CC    src/version.c -> build/android-armeabi/src/version.o
CC    src/vm.c -> build/android-armeabi/src/vm.o
GEN   *.rb -> build/android-armeabi/mrblib/mrblib.c
      MRBC mrblib/00class.rb
      MRBC mrblib/10error.rb
      MRBC mrblib/array.rb
      MRBC mrblib/compar.rb
      MRBC mrblib/enum.rb
      MRBC mrblib/hash.rb
      MRBC mrblib/kernel.rb
      MRBC mrblib/numeric.rb
      MRBC mrblib/range.rb
      MRBC mrblib/string.rb
      MRBC mrblib/symbol.rb
CC    build/android-armeabi/mrblib/mrblib.c -> build/android-armeabi/mrblib/mrblib.o
CC    mrbgems/mruby-metaprog/src/metaprog.c -> build/android-armeabi/mrbgems/mruby-metaprog/src/metaprog.o
CC    build/android-armeabi/mrbgems/mruby-metaprog/gem_init.c -> build/android-armeabi/mrbgems/mruby-metaprog/gem_init.o
CC    mrbgems/mruby-io/src/file.c -> build/android-armeabi/mrbgems/mruby-io/src/file.o
CC    mrbgems/mruby-io/src/file_test.c -> build/android-armeabi/mrbgems/mruby-io/src/file_test.o
CC    mrbgems/mruby-io/src/io.c -> build/android-armeabi/mrbgems/mruby-io/src/io.o
CC    mrbgems/mruby-io/src/mruby_io_gem.c -> build/android-armeabi/mrbgems/mruby-io/src/mruby_io_gem.o
      MRBC mrbgems/mruby-io/mrblib/file.rb
      MRBC mrbgems/mruby-io/mrblib/file_constants.rb
      MRBC mrbgems/mruby-io/mrblib/io.rb
      MRBC mrbgems/mruby-io/mrblib/kernel.rb
CC    build/android-armeabi/mrbgems/mruby-io/gem_init.c -> build/android-armeabi/mrbgems/mruby-io/gem_init.o
CC    mrbgems/mruby-pack/src/pack.c -> build/android-armeabi/mrbgems/mruby-pack/src/pack.o
CC    build/android-armeabi/mrbgems/mruby-pack/gem_init.c -> build/android-armeabi/mrbgems/mruby-pack/gem_init.o
CC    mrbgems/mruby-sprintf/src/kernel.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/kernel.o
CC    mrbgems/mruby-sprintf/src/sprintf.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/sprintf.o
      MRBC mrbgems/mruby-sprintf/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-sprintf/gem_init.c -> build/android-armeabi/mrbgems/mruby-sprintf/gem_init.o
CC    mrbgems/mruby-print/src/print.c -> build/android-armeabi/mrbgems/mruby-print/src/print.o
      MRBC mrbgems/mruby-print/mrblib/print.rb
CC    build/android-armeabi/mrbgems/mruby-print/gem_init.c -> build/android-armeabi/mrbgems/mruby-print/gem_init.o
CC    mrbgems/mruby-math/src/math.c -> build/android-armeabi/mrbgems/mruby-math/src/math.o
CC    build/android-armeabi/mrbgems/mruby-math/gem_init.c -> build/android-armeabi/mrbgems/mruby-math/gem_init.o
CC    mrbgems/mruby-time/src/time.c -> build/android-armeabi/mrbgems/mruby-time/src/time.o
      MRBC mrbgems/mruby-time/mrblib/time.rb
CC    build/android-armeabi/mrbgems/mruby-time/gem_init.c -> build/android-armeabi/mrbgems/mruby-time/gem_init.o
CC    mrbgems/mruby-struct/src/struct.c -> build/android-armeabi/mrbgems/mruby-struct/src/struct.o
      MRBC mrbgems/mruby-struct/mrblib/struct.rb
CC    build/android-armeabi/mrbgems/mruby-struct/gem_init.c -> build/android-armeabi/mrbgems/mruby-struct/gem_init.o
      MRBC mrbgems/mruby-compar-ext/mrblib/compar.rb
CC    build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.o
      MRBC mrbgems/mruby-enum-ext/mrblib/enum.rb
CC    build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.o
CC    mrbgems/mruby-string-ext/src/string.c -> build/android-armeabi/mrbgems/mruby-string-ext/src/string.o
      MRBC mrbgems/mruby-string-ext/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-string-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-string-ext/gem_init.o
CC    mrbgems/mruby-numeric-ext/src/numeric_ext.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/src/numeric_ext.o
      MRBC mrbgems/mruby-numeric-ext/mrblib/numeric_ext.rb
CC    build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.o
CC    mrbgems/mruby-array-ext/src/array.c -> build/android-armeabi/mrbgems/mruby-array-ext/src/array.o
      MRBC mrbgems/mruby-array-ext/mrblib/array.rb
CC    build/android-armeabi/mrbgems/mruby-array-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-array-ext/gem_init.o
CC    mrbgems/mruby-hash-ext/src/hash-ext.c -> build/android-armeabi/mrbgems/mruby-hash-ext/src/hash-ext.o
      MRBC mrbgems/mruby-hash-ext/mrblib/hash.rb
CC    build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.o
CC    mrbgems/mruby-range-ext/src/range.c -> build/android-armeabi/mrbgems/mruby-range-ext/src/range.o
      MRBC mrbgems/mruby-range-ext/mrblib/range.rb
CC    build/android-armeabi/mrbgems/mruby-range-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-range-ext/gem_init.o
CC    mrbgems/mruby-proc-ext/src/proc.c -> build/android-armeabi/mrbgems/mruby-proc-ext/src/proc.o
      MRBC mrbgems/mruby-proc-ext/mrblib/proc.rb
CC    build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.o
CC    mrbgems/mruby-symbol-ext/src/symbol.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/src/symbol.o
      MRBC mrbgems/mruby-symbol-ext/mrblib/symbol.rb
CC    build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.o
CC    mrbgems/mruby-random/src/random.c -> build/android-armeabi/mrbgems/mruby-random/src/random.o
CC    build/android-armeabi/mrbgems/mruby-random/gem_init.c -> build/android-armeabi/mrbgems/mruby-random/gem_init.o
CC    mrbgems/mruby-object-ext/src/object.c -> build/android-armeabi/mrbgems/mruby-object-ext/src/object.o
      MRBC mrbgems/mruby-object-ext/mrblib/object.rb
CC    build/android-armeabi/mrbgems/mruby-object-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-object-ext/gem_init.o
CC    mrbgems/mruby-objectspace/src/mruby_objectspace.c -> build/android-armeabi/mrbgems/mruby-objectspace/src/mruby_objectspace.o
CC    build/android-armeabi/mrbgems/mruby-objectspace/gem_init.c -> build/android-armeabi/mrbgems/mruby-objectspace/gem_init.o
CC    mrbgems/mruby-fiber/src/fiber.c -> build/android-armeabi/mrbgems/mruby-fiber/src/fiber.o
CC    build/android-armeabi/mrbgems/mruby-fiber/gem_init.c -> build/android-armeabi/mrbgems/mruby-fiber/gem_init.o
      MRBC mrbgems/mruby-enumerator/mrblib/enumerator.rb
CC    build/android-armeabi/mrbgems/mruby-enumerator/gem_init.c -> build/android-armeabi/mrbgems/mruby-enumerator/gem_init.o
      MRBC mrbgems/mruby-enum-lazy/mrblib/lazy.rb
CC    build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.o
CC    build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.o
CC    mrbgems/mruby-kernel-ext/src/kernel.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/src/kernel.o
CC    build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.o
CC    mrbgems/mruby-class-ext/src/class.c -> build/android-armeabi/mrbgems/mruby-class-ext/src/class.o
      MRBC mrbgems/mruby-class-ext/mrblib/module.rb
CC    build/android-armeabi/mrbgems/mruby-class-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-class-ext/gem_init.o
CC    mrbgems/mruby-method/src/method.c -> build/android-armeabi/mrbgems/mruby-method/src/method.o
      MRBC mrbgems/mruby-method/mrblib/kernel.rb
      MRBC mrbgems/mruby-method/mrblib/method.rb
CC    build/android-armeabi/mrbgems/mruby-method/gem_init.c -> build/android-armeabi/mrbgems/mruby-method/gem_init.o
CC    mrbgems/mruby-compiler/core/codegen.c -> build/android-armeabi/mrbgems/mruby-compiler/core/codegen.o
CC    mrbgems/mruby-error/src/exception.c -> build/android-armeabi/mrbgems/mruby-error/src/exception.o
CC    build/android-armeabi/mrbgems/mruby-error/gem_init.c -> build/android-armeabi/mrbgems/mruby-error/gem_init.o
CC    build/android-armeabi/mrbgems/gem_init.c -> build/android-armeabi/mrbgems/gem_init.o
AR    build/android-armeabi/lib/libmruby.a
CC    mrbgems/mruby-bin-mirb/tools/mirb/mirb.c -> build/android-armeabi/mrbgems/mruby-bin-mirb/tools/mirb/mirb.o
LD    build/android-armeabi/bin/mirb.exe
CC    mrbgems/mruby-bin-mruby/tools/mruby/mruby.c -> build/android-armeabi/mrbgems/mruby-bin-mruby/tools/mruby/mruby.o
LD    build/android-armeabi/bin/mruby.exe
CC    mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.c -> build/android-armeabi/mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.o
LD    build/android-armeabi/bin/mruby-strip.exe

Build summary:

================================================
      Config Name: android-armeabi
 Output Directory: build/android-armeabi
    Included Gems:
             mruby-metaprog - Meta-programming features for mruby
             mruby-io - IO and File class
             mruby-pack - Array#pack and String#unpack method
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-compar-ext - Enumerable module extension
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - extensional methods shared by all objects
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - extensional function-like methods
             mruby-class-ext - class/module extension
             mruby-method - Method and UnboundMethod class
================================================

It's successful",True,{}
mruby/mruby,https://github.com/mruby/mruby,4963,2020-04-06T08:54:49Z,2020-04-07T00:54:42Z,2020-04-07T06:23:07Z,CLOSED,False,137,53,17,https://github.com/Reckordp,[remake] Allow config without host,1,[],https://github.com/mruby/mruby/pull/4963,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4963#issuecomment-610112536,"Skip the need on the host if there is still an mrbc in the bin folder. This commit makes it efficient for CrossBuild because it directly compiles for itself.
Config Example:
MRuby::CrossBuild.new('android-armeabi') do |conf|
  params = {
    :arch => 'armeabi',
    :platform => 'android-23',
    :toolchain => :clang,
  }
  toolchain :android, params

  conf.gembox 'full-core'
end
Run it
$ rake MRUBY_CONFIG=examples/targets/build_config_android_armeabi.rb
CC    src/array.c -> build/android-armeabi/src/array.o
CC    src/backtrace.c -> build/android-armeabi/src/backtrace.o
CC    src/class.c -> build/android-armeabi/src/class.o
CC    src/codedump.c -> build/android-armeabi/src/codedump.o
CC    src/compar.c -> build/android-armeabi/src/compar.o
CC    src/crc.c -> build/android-armeabi/src/crc.o
CC    src/debug.c -> build/android-armeabi/src/debug.o
CC    src/dump.c -> build/android-armeabi/src/dump.o
CC    src/enum.c -> build/android-armeabi/src/enum.o
CC    src/error.c -> build/android-armeabi/src/error.o
CC    src/etc.c -> build/android-armeabi/src/etc.o
CC    src/fmt_fp.c -> build/android-armeabi/src/fmt_fp.o
CC    src/gc.c -> build/android-armeabi/src/gc.o
CC    src/hash.c -> build/android-armeabi/src/hash.o
CC    src/init.c -> build/android-armeabi/src/init.o
CC    src/kernel.c -> build/android-armeabi/src/kernel.o
CC    src/load.c -> build/android-armeabi/src/load.o
CC    src/numeric.c -> build/android-armeabi/src/numeric.o
CC    src/object.c -> build/android-armeabi/src/object.o
CC    src/pool.c -> build/android-armeabi/src/pool.o
CC    src/print.c -> build/android-armeabi/src/print.o
CC    src/proc.c -> build/android-armeabi/src/proc.o
CC    src/range.c -> build/android-armeabi/src/range.o
CC    src/state.c -> build/android-armeabi/src/state.o
CC    src/string.c -> build/android-armeabi/src/string.o
CC    src/symbol.c -> build/android-armeabi/src/symbol.o
CC    src/variable.c -> build/android-armeabi/src/variable.o
CC    src/version.c -> build/android-armeabi/src/version.o
CC    src/vm.c -> build/android-armeabi/src/vm.o
GEN   *.rb -> build/android-armeabi/mrblib/mrblib.c
      MRBC mrblib/00class.rb
      MRBC mrblib/10error.rb
      MRBC mrblib/array.rb
      MRBC mrblib/compar.rb
      MRBC mrblib/enum.rb
      MRBC mrblib/hash.rb
      MRBC mrblib/kernel.rb
      MRBC mrblib/numeric.rb
      MRBC mrblib/range.rb
      MRBC mrblib/string.rb
      MRBC mrblib/symbol.rb
CC    build/android-armeabi/mrblib/mrblib.c -> build/android-armeabi/mrblib/mrblib.o
CC    mrbgems/mruby-metaprog/src/metaprog.c -> build/android-armeabi/mrbgems/mruby-metaprog/src/metaprog.o
CC    build/android-armeabi/mrbgems/mruby-metaprog/gem_init.c -> build/android-armeabi/mrbgems/mruby-metaprog/gem_init.o
CC    mrbgems/mruby-io/src/file.c -> build/android-armeabi/mrbgems/mruby-io/src/file.o
CC    mrbgems/mruby-io/src/file_test.c -> build/android-armeabi/mrbgems/mruby-io/src/file_test.o
CC    mrbgems/mruby-io/src/io.c -> build/android-armeabi/mrbgems/mruby-io/src/io.o
CC    mrbgems/mruby-io/src/mruby_io_gem.c -> build/android-armeabi/mrbgems/mruby-io/src/mruby_io_gem.o
      MRBC mrbgems/mruby-io/mrblib/file.rb
      MRBC mrbgems/mruby-io/mrblib/file_constants.rb
      MRBC mrbgems/mruby-io/mrblib/io.rb
      MRBC mrbgems/mruby-io/mrblib/kernel.rb
CC    build/android-armeabi/mrbgems/mruby-io/gem_init.c -> build/android-armeabi/mrbgems/mruby-io/gem_init.o
CC    mrbgems/mruby-pack/src/pack.c -> build/android-armeabi/mrbgems/mruby-pack/src/pack.o
CC    build/android-armeabi/mrbgems/mruby-pack/gem_init.c -> build/android-armeabi/mrbgems/mruby-pack/gem_init.o
CC    mrbgems/mruby-sprintf/src/kernel.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/kernel.o
CC    mrbgems/mruby-sprintf/src/sprintf.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/sprintf.o
      MRBC mrbgems/mruby-sprintf/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-sprintf/gem_init.c -> build/android-armeabi/mrbgems/mruby-sprintf/gem_init.o
CC    mrbgems/mruby-print/src/print.c -> build/android-armeabi/mrbgems/mruby-print/src/print.o
      MRBC mrbgems/mruby-print/mrblib/print.rb
CC    build/android-armeabi/mrbgems/mruby-print/gem_init.c -> build/android-armeabi/mrbgems/mruby-print/gem_init.o
CC    mrbgems/mruby-math/src/math.c -> build/android-armeabi/mrbgems/mruby-math/src/math.o
CC    build/android-armeabi/mrbgems/mruby-math/gem_init.c -> build/android-armeabi/mrbgems/mruby-math/gem_init.o
CC    mrbgems/mruby-time/src/time.c -> build/android-armeabi/mrbgems/mruby-time/src/time.o
      MRBC mrbgems/mruby-time/mrblib/time.rb
CC    build/android-armeabi/mrbgems/mruby-time/gem_init.c -> build/android-armeabi/mrbgems/mruby-time/gem_init.o
CC    mrbgems/mruby-struct/src/struct.c -> build/android-armeabi/mrbgems/mruby-struct/src/struct.o
      MRBC mrbgems/mruby-struct/mrblib/struct.rb
CC    build/android-armeabi/mrbgems/mruby-struct/gem_init.c -> build/android-armeabi/mrbgems/mruby-struct/gem_init.o
      MRBC mrbgems/mruby-compar-ext/mrblib/compar.rb
CC    build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.o
      MRBC mrbgems/mruby-enum-ext/mrblib/enum.rb
CC    build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.o
CC    mrbgems/mruby-string-ext/src/string.c -> build/android-armeabi/mrbgems/mruby-string-ext/src/string.o
      MRBC mrbgems/mruby-string-ext/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-string-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-string-ext/gem_init.o
CC    mrbgems/mruby-numeric-ext/src/numeric_ext.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/src/numeric_ext.o
      MRBC mrbgems/mruby-numeric-ext/mrblib/numeric_ext.rb
CC    build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.o
CC    mrbgems/mruby-array-ext/src/array.c -> build/android-armeabi/mrbgems/mruby-array-ext/src/array.o
      MRBC mrbgems/mruby-array-ext/mrblib/array.rb
CC    build/android-armeabi/mrbgems/mruby-array-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-array-ext/gem_init.o
CC    mrbgems/mruby-hash-ext/src/hash-ext.c -> build/android-armeabi/mrbgems/mruby-hash-ext/src/hash-ext.o
      MRBC mrbgems/mruby-hash-ext/mrblib/hash.rb
CC    build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.o
CC    mrbgems/mruby-range-ext/src/range.c -> build/android-armeabi/mrbgems/mruby-range-ext/src/range.o
      MRBC mrbgems/mruby-range-ext/mrblib/range.rb
CC    build/android-armeabi/mrbgems/mruby-range-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-range-ext/gem_init.o
CC    mrbgems/mruby-proc-ext/src/proc.c -> build/android-armeabi/mrbgems/mruby-proc-ext/src/proc.o
      MRBC mrbgems/mruby-proc-ext/mrblib/proc.rb
CC    build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.o
CC    mrbgems/mruby-symbol-ext/src/symbol.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/src/symbol.o
      MRBC mrbgems/mruby-symbol-ext/mrblib/symbol.rb
CC    build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.o
CC    mrbgems/mruby-random/src/random.c -> build/android-armeabi/mrbgems/mruby-random/src/random.o
CC    build/android-armeabi/mrbgems/mruby-random/gem_init.c -> build/android-armeabi/mrbgems/mruby-random/gem_init.o
CC    mrbgems/mruby-object-ext/src/object.c -> build/android-armeabi/mrbgems/mruby-object-ext/src/object.o
      MRBC mrbgems/mruby-object-ext/mrblib/object.rb
CC    build/android-armeabi/mrbgems/mruby-object-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-object-ext/gem_init.o
CC    mrbgems/mruby-objectspace/src/mruby_objectspace.c -> build/android-armeabi/mrbgems/mruby-objectspace/src/mruby_objectspace.o
CC    build/android-armeabi/mrbgems/mruby-objectspace/gem_init.c -> build/android-armeabi/mrbgems/mruby-objectspace/gem_init.o
CC    mrbgems/mruby-fiber/src/fiber.c -> build/android-armeabi/mrbgems/mruby-fiber/src/fiber.o
CC    build/android-armeabi/mrbgems/mruby-fiber/gem_init.c -> build/android-armeabi/mrbgems/mruby-fiber/gem_init.o
      MRBC mrbgems/mruby-enumerator/mrblib/enumerator.rb
CC    build/android-armeabi/mrbgems/mruby-enumerator/gem_init.c -> build/android-armeabi/mrbgems/mruby-enumerator/gem_init.o
      MRBC mrbgems/mruby-enum-lazy/mrblib/lazy.rb
CC    build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.o
CC    build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.o
CC    mrbgems/mruby-kernel-ext/src/kernel.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/src/kernel.o
CC    build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.o
CC    mrbgems/mruby-class-ext/src/class.c -> build/android-armeabi/mrbgems/mruby-class-ext/src/class.o
      MRBC mrbgems/mruby-class-ext/mrblib/module.rb
CC    build/android-armeabi/mrbgems/mruby-class-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-class-ext/gem_init.o
CC    mrbgems/mruby-method/src/method.c -> build/android-armeabi/mrbgems/mruby-method/src/method.o
      MRBC mrbgems/mruby-method/mrblib/kernel.rb
      MRBC mrbgems/mruby-method/mrblib/method.rb
CC    build/android-armeabi/mrbgems/mruby-method/gem_init.c -> build/android-armeabi/mrbgems/mruby-method/gem_init.o
CC    mrbgems/mruby-compiler/core/codegen.c -> build/android-armeabi/mrbgems/mruby-compiler/core/codegen.o
CC    mrbgems/mruby-error/src/exception.c -> build/android-armeabi/mrbgems/mruby-error/src/exception.o
CC    build/android-armeabi/mrbgems/mruby-error/gem_init.c -> build/android-armeabi/mrbgems/mruby-error/gem_init.o
CC    build/android-armeabi/mrbgems/gem_init.c -> build/android-armeabi/mrbgems/gem_init.o
AR    build/android-armeabi/lib/libmruby.a
CC    mrbgems/mruby-bin-mirb/tools/mirb/mirb.c -> build/android-armeabi/mrbgems/mruby-bin-mirb/tools/mirb/mirb.o
LD    build/android-armeabi/bin/mirb.exe
CC    mrbgems/mruby-bin-mruby/tools/mruby/mruby.c -> build/android-armeabi/mrbgems/mruby-bin-mruby/tools/mruby/mruby.o
LD    build/android-armeabi/bin/mruby.exe
CC    mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.c -> build/android-armeabi/mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.o
LD    build/android-armeabi/bin/mruby-strip.exe

Build summary:

================================================
      Config Name: android-armeabi
 Output Directory: build/android-armeabi
    Included Gems:
             mruby-metaprog - Meta-programming features for mruby
             mruby-io - IO and File class
             mruby-pack - Array#pack and String#unpack method
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-compar-ext - Enumerable module extension
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - extensional methods shared by all objects
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - extensional function-like methods
             mruby-class-ext - class/module extension
             mruby-method - Method and UnboundMethod class
================================================

It's successful","The CI fail from a stack overflow error. You need to pass CI before merging.
Considering possible compiled binary incompatibility, it might be better to recompile mrbc every time despite inefficiency. So this time, I am going to keep as it is.
We are planning to reorganize the build process. Cross build can be simpler then.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4963,2020-04-06T08:54:49Z,2020-04-07T00:54:42Z,2020-04-07T06:23:07Z,CLOSED,False,137,53,17,https://github.com/Reckordp,[remake] Allow config without host,1,[],https://github.com/mruby/mruby/pull/4963,https://github.com/Reckordp,3,https://github.com/mruby/mruby/pull/4963#issuecomment-610173004,"Skip the need on the host if there is still an mrbc in the bin folder. This commit makes it efficient for CrossBuild because it directly compiles for itself.
Config Example:
MRuby::CrossBuild.new('android-armeabi') do |conf|
  params = {
    :arch => 'armeabi',
    :platform => 'android-23',
    :toolchain => :clang,
  }
  toolchain :android, params

  conf.gembox 'full-core'
end
Run it
$ rake MRUBY_CONFIG=examples/targets/build_config_android_armeabi.rb
CC    src/array.c -> build/android-armeabi/src/array.o
CC    src/backtrace.c -> build/android-armeabi/src/backtrace.o
CC    src/class.c -> build/android-armeabi/src/class.o
CC    src/codedump.c -> build/android-armeabi/src/codedump.o
CC    src/compar.c -> build/android-armeabi/src/compar.o
CC    src/crc.c -> build/android-armeabi/src/crc.o
CC    src/debug.c -> build/android-armeabi/src/debug.o
CC    src/dump.c -> build/android-armeabi/src/dump.o
CC    src/enum.c -> build/android-armeabi/src/enum.o
CC    src/error.c -> build/android-armeabi/src/error.o
CC    src/etc.c -> build/android-armeabi/src/etc.o
CC    src/fmt_fp.c -> build/android-armeabi/src/fmt_fp.o
CC    src/gc.c -> build/android-armeabi/src/gc.o
CC    src/hash.c -> build/android-armeabi/src/hash.o
CC    src/init.c -> build/android-armeabi/src/init.o
CC    src/kernel.c -> build/android-armeabi/src/kernel.o
CC    src/load.c -> build/android-armeabi/src/load.o
CC    src/numeric.c -> build/android-armeabi/src/numeric.o
CC    src/object.c -> build/android-armeabi/src/object.o
CC    src/pool.c -> build/android-armeabi/src/pool.o
CC    src/print.c -> build/android-armeabi/src/print.o
CC    src/proc.c -> build/android-armeabi/src/proc.o
CC    src/range.c -> build/android-armeabi/src/range.o
CC    src/state.c -> build/android-armeabi/src/state.o
CC    src/string.c -> build/android-armeabi/src/string.o
CC    src/symbol.c -> build/android-armeabi/src/symbol.o
CC    src/variable.c -> build/android-armeabi/src/variable.o
CC    src/version.c -> build/android-armeabi/src/version.o
CC    src/vm.c -> build/android-armeabi/src/vm.o
GEN   *.rb -> build/android-armeabi/mrblib/mrblib.c
      MRBC mrblib/00class.rb
      MRBC mrblib/10error.rb
      MRBC mrblib/array.rb
      MRBC mrblib/compar.rb
      MRBC mrblib/enum.rb
      MRBC mrblib/hash.rb
      MRBC mrblib/kernel.rb
      MRBC mrblib/numeric.rb
      MRBC mrblib/range.rb
      MRBC mrblib/string.rb
      MRBC mrblib/symbol.rb
CC    build/android-armeabi/mrblib/mrblib.c -> build/android-armeabi/mrblib/mrblib.o
CC    mrbgems/mruby-metaprog/src/metaprog.c -> build/android-armeabi/mrbgems/mruby-metaprog/src/metaprog.o
CC    build/android-armeabi/mrbgems/mruby-metaprog/gem_init.c -> build/android-armeabi/mrbgems/mruby-metaprog/gem_init.o
CC    mrbgems/mruby-io/src/file.c -> build/android-armeabi/mrbgems/mruby-io/src/file.o
CC    mrbgems/mruby-io/src/file_test.c -> build/android-armeabi/mrbgems/mruby-io/src/file_test.o
CC    mrbgems/mruby-io/src/io.c -> build/android-armeabi/mrbgems/mruby-io/src/io.o
CC    mrbgems/mruby-io/src/mruby_io_gem.c -> build/android-armeabi/mrbgems/mruby-io/src/mruby_io_gem.o
      MRBC mrbgems/mruby-io/mrblib/file.rb
      MRBC mrbgems/mruby-io/mrblib/file_constants.rb
      MRBC mrbgems/mruby-io/mrblib/io.rb
      MRBC mrbgems/mruby-io/mrblib/kernel.rb
CC    build/android-armeabi/mrbgems/mruby-io/gem_init.c -> build/android-armeabi/mrbgems/mruby-io/gem_init.o
CC    mrbgems/mruby-pack/src/pack.c -> build/android-armeabi/mrbgems/mruby-pack/src/pack.o
CC    build/android-armeabi/mrbgems/mruby-pack/gem_init.c -> build/android-armeabi/mrbgems/mruby-pack/gem_init.o
CC    mrbgems/mruby-sprintf/src/kernel.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/kernel.o
CC    mrbgems/mruby-sprintf/src/sprintf.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/sprintf.o
      MRBC mrbgems/mruby-sprintf/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-sprintf/gem_init.c -> build/android-armeabi/mrbgems/mruby-sprintf/gem_init.o
CC    mrbgems/mruby-print/src/print.c -> build/android-armeabi/mrbgems/mruby-print/src/print.o
      MRBC mrbgems/mruby-print/mrblib/print.rb
CC    build/android-armeabi/mrbgems/mruby-print/gem_init.c -> build/android-armeabi/mrbgems/mruby-print/gem_init.o
CC    mrbgems/mruby-math/src/math.c -> build/android-armeabi/mrbgems/mruby-math/src/math.o
CC    build/android-armeabi/mrbgems/mruby-math/gem_init.c -> build/android-armeabi/mrbgems/mruby-math/gem_init.o
CC    mrbgems/mruby-time/src/time.c -> build/android-armeabi/mrbgems/mruby-time/src/time.o
      MRBC mrbgems/mruby-time/mrblib/time.rb
CC    build/android-armeabi/mrbgems/mruby-time/gem_init.c -> build/android-armeabi/mrbgems/mruby-time/gem_init.o
CC    mrbgems/mruby-struct/src/struct.c -> build/android-armeabi/mrbgems/mruby-struct/src/struct.o
      MRBC mrbgems/mruby-struct/mrblib/struct.rb
CC    build/android-armeabi/mrbgems/mruby-struct/gem_init.c -> build/android-armeabi/mrbgems/mruby-struct/gem_init.o
      MRBC mrbgems/mruby-compar-ext/mrblib/compar.rb
CC    build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.o
      MRBC mrbgems/mruby-enum-ext/mrblib/enum.rb
CC    build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.o
CC    mrbgems/mruby-string-ext/src/string.c -> build/android-armeabi/mrbgems/mruby-string-ext/src/string.o
      MRBC mrbgems/mruby-string-ext/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-string-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-string-ext/gem_init.o
CC    mrbgems/mruby-numeric-ext/src/numeric_ext.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/src/numeric_ext.o
      MRBC mrbgems/mruby-numeric-ext/mrblib/numeric_ext.rb
CC    build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.o
CC    mrbgems/mruby-array-ext/src/array.c -> build/android-armeabi/mrbgems/mruby-array-ext/src/array.o
      MRBC mrbgems/mruby-array-ext/mrblib/array.rb
CC    build/android-armeabi/mrbgems/mruby-array-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-array-ext/gem_init.o
CC    mrbgems/mruby-hash-ext/src/hash-ext.c -> build/android-armeabi/mrbgems/mruby-hash-ext/src/hash-ext.o
      MRBC mrbgems/mruby-hash-ext/mrblib/hash.rb
CC    build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.o
CC    mrbgems/mruby-range-ext/src/range.c -> build/android-armeabi/mrbgems/mruby-range-ext/src/range.o
      MRBC mrbgems/mruby-range-ext/mrblib/range.rb
CC    build/android-armeabi/mrbgems/mruby-range-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-range-ext/gem_init.o
CC    mrbgems/mruby-proc-ext/src/proc.c -> build/android-armeabi/mrbgems/mruby-proc-ext/src/proc.o
      MRBC mrbgems/mruby-proc-ext/mrblib/proc.rb
CC    build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.o
CC    mrbgems/mruby-symbol-ext/src/symbol.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/src/symbol.o
      MRBC mrbgems/mruby-symbol-ext/mrblib/symbol.rb
CC    build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.o
CC    mrbgems/mruby-random/src/random.c -> build/android-armeabi/mrbgems/mruby-random/src/random.o
CC    build/android-armeabi/mrbgems/mruby-random/gem_init.c -> build/android-armeabi/mrbgems/mruby-random/gem_init.o
CC    mrbgems/mruby-object-ext/src/object.c -> build/android-armeabi/mrbgems/mruby-object-ext/src/object.o
      MRBC mrbgems/mruby-object-ext/mrblib/object.rb
CC    build/android-armeabi/mrbgems/mruby-object-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-object-ext/gem_init.o
CC    mrbgems/mruby-objectspace/src/mruby_objectspace.c -> build/android-armeabi/mrbgems/mruby-objectspace/src/mruby_objectspace.o
CC    build/android-armeabi/mrbgems/mruby-objectspace/gem_init.c -> build/android-armeabi/mrbgems/mruby-objectspace/gem_init.o
CC    mrbgems/mruby-fiber/src/fiber.c -> build/android-armeabi/mrbgems/mruby-fiber/src/fiber.o
CC    build/android-armeabi/mrbgems/mruby-fiber/gem_init.c -> build/android-armeabi/mrbgems/mruby-fiber/gem_init.o
      MRBC mrbgems/mruby-enumerator/mrblib/enumerator.rb
CC    build/android-armeabi/mrbgems/mruby-enumerator/gem_init.c -> build/android-armeabi/mrbgems/mruby-enumerator/gem_init.o
      MRBC mrbgems/mruby-enum-lazy/mrblib/lazy.rb
CC    build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.o
CC    build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.o
CC    mrbgems/mruby-kernel-ext/src/kernel.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/src/kernel.o
CC    build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.o
CC    mrbgems/mruby-class-ext/src/class.c -> build/android-armeabi/mrbgems/mruby-class-ext/src/class.o
      MRBC mrbgems/mruby-class-ext/mrblib/module.rb
CC    build/android-armeabi/mrbgems/mruby-class-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-class-ext/gem_init.o
CC    mrbgems/mruby-method/src/method.c -> build/android-armeabi/mrbgems/mruby-method/src/method.o
      MRBC mrbgems/mruby-method/mrblib/kernel.rb
      MRBC mrbgems/mruby-method/mrblib/method.rb
CC    build/android-armeabi/mrbgems/mruby-method/gem_init.c -> build/android-armeabi/mrbgems/mruby-method/gem_init.o
CC    mrbgems/mruby-compiler/core/codegen.c -> build/android-armeabi/mrbgems/mruby-compiler/core/codegen.o
CC    mrbgems/mruby-error/src/exception.c -> build/android-armeabi/mrbgems/mruby-error/src/exception.o
CC    build/android-armeabi/mrbgems/mruby-error/gem_init.c -> build/android-armeabi/mrbgems/mruby-error/gem_init.o
CC    build/android-armeabi/mrbgems/gem_init.c -> build/android-armeabi/mrbgems/gem_init.o
AR    build/android-armeabi/lib/libmruby.a
CC    mrbgems/mruby-bin-mirb/tools/mirb/mirb.c -> build/android-armeabi/mrbgems/mruby-bin-mirb/tools/mirb/mirb.o
LD    build/android-armeabi/bin/mirb.exe
CC    mrbgems/mruby-bin-mruby/tools/mruby/mruby.c -> build/android-armeabi/mrbgems/mruby-bin-mruby/tools/mruby/mruby.o
LD    build/android-armeabi/bin/mruby.exe
CC    mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.c -> build/android-armeabi/mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.o
LD    build/android-armeabi/bin/mruby-strip.exe

Build summary:

================================================
      Config Name: android-armeabi
 Output Directory: build/android-armeabi
    Included Gems:
             mruby-metaprog - Meta-programming features for mruby
             mruby-io - IO and File class
             mruby-pack - Array#pack and String#unpack method
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-compar-ext - Enumerable module extension
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - extensional methods shared by all objects
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - extensional function-like methods
             mruby-class-ext - class/module extension
             mruby-method - Method and UnboundMethod class
================================================

It's successful","Considering possible compiled binary incompatibility, it might be better to recompile mrbc every time despite inefficiency.

Executable mrbc only runs on the current device (host). When running CrossBuild use mrbc which is already in the bin folder. Well, ExecTools limits only hosts can overwrite mrbc executables in bin

The CI fail from a stack overflow error. You need to pass CI before merging.

can I continue this idea to pass CI?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4963,2020-04-06T08:54:49Z,2020-04-07T00:54:42Z,2020-04-07T06:23:07Z,CLOSED,False,137,53,17,https://github.com/Reckordp,[remake] Allow config without host,1,[],https://github.com/mruby/mruby/pull/4963,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4963#issuecomment-610199072,"Skip the need on the host if there is still an mrbc in the bin folder. This commit makes it efficient for CrossBuild because it directly compiles for itself.
Config Example:
MRuby::CrossBuild.new('android-armeabi') do |conf|
  params = {
    :arch => 'armeabi',
    :platform => 'android-23',
    :toolchain => :clang,
  }
  toolchain :android, params

  conf.gembox 'full-core'
end
Run it
$ rake MRUBY_CONFIG=examples/targets/build_config_android_armeabi.rb
CC    src/array.c -> build/android-armeabi/src/array.o
CC    src/backtrace.c -> build/android-armeabi/src/backtrace.o
CC    src/class.c -> build/android-armeabi/src/class.o
CC    src/codedump.c -> build/android-armeabi/src/codedump.o
CC    src/compar.c -> build/android-armeabi/src/compar.o
CC    src/crc.c -> build/android-armeabi/src/crc.o
CC    src/debug.c -> build/android-armeabi/src/debug.o
CC    src/dump.c -> build/android-armeabi/src/dump.o
CC    src/enum.c -> build/android-armeabi/src/enum.o
CC    src/error.c -> build/android-armeabi/src/error.o
CC    src/etc.c -> build/android-armeabi/src/etc.o
CC    src/fmt_fp.c -> build/android-armeabi/src/fmt_fp.o
CC    src/gc.c -> build/android-armeabi/src/gc.o
CC    src/hash.c -> build/android-armeabi/src/hash.o
CC    src/init.c -> build/android-armeabi/src/init.o
CC    src/kernel.c -> build/android-armeabi/src/kernel.o
CC    src/load.c -> build/android-armeabi/src/load.o
CC    src/numeric.c -> build/android-armeabi/src/numeric.o
CC    src/object.c -> build/android-armeabi/src/object.o
CC    src/pool.c -> build/android-armeabi/src/pool.o
CC    src/print.c -> build/android-armeabi/src/print.o
CC    src/proc.c -> build/android-armeabi/src/proc.o
CC    src/range.c -> build/android-armeabi/src/range.o
CC    src/state.c -> build/android-armeabi/src/state.o
CC    src/string.c -> build/android-armeabi/src/string.o
CC    src/symbol.c -> build/android-armeabi/src/symbol.o
CC    src/variable.c -> build/android-armeabi/src/variable.o
CC    src/version.c -> build/android-armeabi/src/version.o
CC    src/vm.c -> build/android-armeabi/src/vm.o
GEN   *.rb -> build/android-armeabi/mrblib/mrblib.c
      MRBC mrblib/00class.rb
      MRBC mrblib/10error.rb
      MRBC mrblib/array.rb
      MRBC mrblib/compar.rb
      MRBC mrblib/enum.rb
      MRBC mrblib/hash.rb
      MRBC mrblib/kernel.rb
      MRBC mrblib/numeric.rb
      MRBC mrblib/range.rb
      MRBC mrblib/string.rb
      MRBC mrblib/symbol.rb
CC    build/android-armeabi/mrblib/mrblib.c -> build/android-armeabi/mrblib/mrblib.o
CC    mrbgems/mruby-metaprog/src/metaprog.c -> build/android-armeabi/mrbgems/mruby-metaprog/src/metaprog.o
CC    build/android-armeabi/mrbgems/mruby-metaprog/gem_init.c -> build/android-armeabi/mrbgems/mruby-metaprog/gem_init.o
CC    mrbgems/mruby-io/src/file.c -> build/android-armeabi/mrbgems/mruby-io/src/file.o
CC    mrbgems/mruby-io/src/file_test.c -> build/android-armeabi/mrbgems/mruby-io/src/file_test.o
CC    mrbgems/mruby-io/src/io.c -> build/android-armeabi/mrbgems/mruby-io/src/io.o
CC    mrbgems/mruby-io/src/mruby_io_gem.c -> build/android-armeabi/mrbgems/mruby-io/src/mruby_io_gem.o
      MRBC mrbgems/mruby-io/mrblib/file.rb
      MRBC mrbgems/mruby-io/mrblib/file_constants.rb
      MRBC mrbgems/mruby-io/mrblib/io.rb
      MRBC mrbgems/mruby-io/mrblib/kernel.rb
CC    build/android-armeabi/mrbgems/mruby-io/gem_init.c -> build/android-armeabi/mrbgems/mruby-io/gem_init.o
CC    mrbgems/mruby-pack/src/pack.c -> build/android-armeabi/mrbgems/mruby-pack/src/pack.o
CC    build/android-armeabi/mrbgems/mruby-pack/gem_init.c -> build/android-armeabi/mrbgems/mruby-pack/gem_init.o
CC    mrbgems/mruby-sprintf/src/kernel.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/kernel.o
CC    mrbgems/mruby-sprintf/src/sprintf.c -> build/android-armeabi/mrbgems/mruby-sprintf/src/sprintf.o
      MRBC mrbgems/mruby-sprintf/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-sprintf/gem_init.c -> build/android-armeabi/mrbgems/mruby-sprintf/gem_init.o
CC    mrbgems/mruby-print/src/print.c -> build/android-armeabi/mrbgems/mruby-print/src/print.o
      MRBC mrbgems/mruby-print/mrblib/print.rb
CC    build/android-armeabi/mrbgems/mruby-print/gem_init.c -> build/android-armeabi/mrbgems/mruby-print/gem_init.o
CC    mrbgems/mruby-math/src/math.c -> build/android-armeabi/mrbgems/mruby-math/src/math.o
CC    build/android-armeabi/mrbgems/mruby-math/gem_init.c -> build/android-armeabi/mrbgems/mruby-math/gem_init.o
CC    mrbgems/mruby-time/src/time.c -> build/android-armeabi/mrbgems/mruby-time/src/time.o
      MRBC mrbgems/mruby-time/mrblib/time.rb
CC    build/android-armeabi/mrbgems/mruby-time/gem_init.c -> build/android-armeabi/mrbgems/mruby-time/gem_init.o
CC    mrbgems/mruby-struct/src/struct.c -> build/android-armeabi/mrbgems/mruby-struct/src/struct.o
      MRBC mrbgems/mruby-struct/mrblib/struct.rb
CC    build/android-armeabi/mrbgems/mruby-struct/gem_init.c -> build/android-armeabi/mrbgems/mruby-struct/gem_init.o
      MRBC mrbgems/mruby-compar-ext/mrblib/compar.rb
CC    build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-compar-ext/gem_init.o
      MRBC mrbgems/mruby-enum-ext/mrblib/enum.rb
CC    build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-ext/gem_init.o
CC    mrbgems/mruby-string-ext/src/string.c -> build/android-armeabi/mrbgems/mruby-string-ext/src/string.o
      MRBC mrbgems/mruby-string-ext/mrblib/string.rb
CC    build/android-armeabi/mrbgems/mruby-string-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-string-ext/gem_init.o
CC    mrbgems/mruby-numeric-ext/src/numeric_ext.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/src/numeric_ext.o
      MRBC mrbgems/mruby-numeric-ext/mrblib/numeric_ext.rb
CC    build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-numeric-ext/gem_init.o
CC    mrbgems/mruby-array-ext/src/array.c -> build/android-armeabi/mrbgems/mruby-array-ext/src/array.o
      MRBC mrbgems/mruby-array-ext/mrblib/array.rb
CC    build/android-armeabi/mrbgems/mruby-array-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-array-ext/gem_init.o
CC    mrbgems/mruby-hash-ext/src/hash-ext.c -> build/android-armeabi/mrbgems/mruby-hash-ext/src/hash-ext.o
      MRBC mrbgems/mruby-hash-ext/mrblib/hash.rb
CC    build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-hash-ext/gem_init.o
CC    mrbgems/mruby-range-ext/src/range.c -> build/android-armeabi/mrbgems/mruby-range-ext/src/range.o
      MRBC mrbgems/mruby-range-ext/mrblib/range.rb
CC    build/android-armeabi/mrbgems/mruby-range-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-range-ext/gem_init.o
CC    mrbgems/mruby-proc-ext/src/proc.c -> build/android-armeabi/mrbgems/mruby-proc-ext/src/proc.o
      MRBC mrbgems/mruby-proc-ext/mrblib/proc.rb
CC    build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-proc-ext/gem_init.o
CC    mrbgems/mruby-symbol-ext/src/symbol.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/src/symbol.o
      MRBC mrbgems/mruby-symbol-ext/mrblib/symbol.rb
CC    build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-symbol-ext/gem_init.o
CC    mrbgems/mruby-random/src/random.c -> build/android-armeabi/mrbgems/mruby-random/src/random.o
CC    build/android-armeabi/mrbgems/mruby-random/gem_init.c -> build/android-armeabi/mrbgems/mruby-random/gem_init.o
CC    mrbgems/mruby-object-ext/src/object.c -> build/android-armeabi/mrbgems/mruby-object-ext/src/object.o
      MRBC mrbgems/mruby-object-ext/mrblib/object.rb
CC    build/android-armeabi/mrbgems/mruby-object-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-object-ext/gem_init.o
CC    mrbgems/mruby-objectspace/src/mruby_objectspace.c -> build/android-armeabi/mrbgems/mruby-objectspace/src/mruby_objectspace.o
CC    build/android-armeabi/mrbgems/mruby-objectspace/gem_init.c -> build/android-armeabi/mrbgems/mruby-objectspace/gem_init.o
CC    mrbgems/mruby-fiber/src/fiber.c -> build/android-armeabi/mrbgems/mruby-fiber/src/fiber.o
CC    build/android-armeabi/mrbgems/mruby-fiber/gem_init.c -> build/android-armeabi/mrbgems/mruby-fiber/gem_init.o
      MRBC mrbgems/mruby-enumerator/mrblib/enumerator.rb
CC    build/android-armeabi/mrbgems/mruby-enumerator/gem_init.c -> build/android-armeabi/mrbgems/mruby-enumerator/gem_init.o
      MRBC mrbgems/mruby-enum-lazy/mrblib/lazy.rb
CC    build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.c -> build/android-armeabi/mrbgems/mruby-enum-lazy/gem_init.o
CC    build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-toplevel-ext/gem_init.o
CC    mrbgems/mruby-kernel-ext/src/kernel.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/src/kernel.o
CC    build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-kernel-ext/gem_init.o
CC    mrbgems/mruby-class-ext/src/class.c -> build/android-armeabi/mrbgems/mruby-class-ext/src/class.o
      MRBC mrbgems/mruby-class-ext/mrblib/module.rb
CC    build/android-armeabi/mrbgems/mruby-class-ext/gem_init.c -> build/android-armeabi/mrbgems/mruby-class-ext/gem_init.o
CC    mrbgems/mruby-method/src/method.c -> build/android-armeabi/mrbgems/mruby-method/src/method.o
      MRBC mrbgems/mruby-method/mrblib/kernel.rb
      MRBC mrbgems/mruby-method/mrblib/method.rb
CC    build/android-armeabi/mrbgems/mruby-method/gem_init.c -> build/android-armeabi/mrbgems/mruby-method/gem_init.o
CC    mrbgems/mruby-compiler/core/codegen.c -> build/android-armeabi/mrbgems/mruby-compiler/core/codegen.o
CC    mrbgems/mruby-error/src/exception.c -> build/android-armeabi/mrbgems/mruby-error/src/exception.o
CC    build/android-armeabi/mrbgems/mruby-error/gem_init.c -> build/android-armeabi/mrbgems/mruby-error/gem_init.o
CC    build/android-armeabi/mrbgems/gem_init.c -> build/android-armeabi/mrbgems/gem_init.o
AR    build/android-armeabi/lib/libmruby.a
CC    mrbgems/mruby-bin-mirb/tools/mirb/mirb.c -> build/android-armeabi/mrbgems/mruby-bin-mirb/tools/mirb/mirb.o
LD    build/android-armeabi/bin/mirb.exe
CC    mrbgems/mruby-bin-mruby/tools/mruby/mruby.c -> build/android-armeabi/mrbgems/mruby-bin-mruby/tools/mruby/mruby.o
LD    build/android-armeabi/bin/mruby.exe
CC    mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.c -> build/android-armeabi/mrbgems/mruby-bin-strip/tools/mruby-strip/mruby-strip.o
LD    build/android-armeabi/bin/mruby-strip.exe

Build summary:

================================================
      Config Name: android-armeabi
 Output Directory: build/android-armeabi
    Included Gems:
             mruby-metaprog - Meta-programming features for mruby
             mruby-io - IO and File class
             mruby-pack - Array#pack and String#unpack method
             mruby-sprintf - standard Kernel#sprintf method
             mruby-print - standard print/puts/p
             mruby-math - standard Math module
             mruby-time - standard Time class
             mruby-struct - standard Struct class
             mruby-compar-ext - Enumerable module extension
             mruby-enum-ext - Enumerable module extension
             mruby-string-ext - String class extension
             mruby-numeric-ext - Numeric class extension
             mruby-array-ext - Array class extension
             mruby-hash-ext - Hash class extension
             mruby-range-ext - Range class extension
             mruby-proc-ext - Proc class extension
             mruby-symbol-ext - Symbol class extension
             mruby-random - Random class
             mruby-object-ext - extensional methods shared by all objects
             mruby-objectspace - ObjectSpace class
             mruby-fiber - Fiber class
             mruby-enumerator - Enumerator class
             mruby-enum-lazy - Enumerator::Lazy class
             mruby-toplevel-ext - toplevel object (main) methods extension
             mruby-compiler - mruby compiler library
             mruby-bin-mirb - mirb command
               - Binaries: mirb
             mruby-error - extensional error handling
             mruby-bin-mruby - mruby command
               - Binaries: mruby
             mruby-bin-strip - irep dump debug section remover command
               - Binaries: mruby-strip
             mruby-kernel-ext - extensional function-like methods
             mruby-class-ext - class/module extension
             mruby-method - Method and UnboundMethod class
================================================

It's successful",Could you wait for a while? I will reorganize the build process in 2.2 which will be released in May (hopefully).,True,"{'THUMBS_UP': ['https://github.com/Hir0', 'https://github.com/Reckordp']}"
mruby/mruby,https://github.com/mruby/mruby,4964,2020-04-06T09:16:51Z,2020-06-06T08:25:36Z,2020-06-06T08:25:37Z,CLOSED,False,85,33,5,https://github.com/Reckordp,[remake] Notify there is available for upgrade,3,[],https://github.com/mruby/mruby/pull/4964,https://github.com/Reckordp,1,https://github.com/mruby/mruby/pull/4964,"Print available version can be upgrade for current source at the end of log's build. Lockfile after third build
---
mruby_version:
  version: 2.1.0
  release_no:
    host: 20100
  git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
builds:
  mruby_version:
    version: 2.1.0
    release_no:
      host: 20100
    git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
  builds:
    mruby_version:
      version: 2.1.0
      release_no:
        host: 20100
      git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93","Print available version can be upgrade for current source at the end of log's build. Lockfile after third build
---
mruby_version:
  version: 2.1.0
  release_no:
    host: 20100
  git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
builds:
  mruby_version:
    version: 2.1.0
    release_no:
      host: 20100
    git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
  builds:
    mruby_version:
      version: 2.1.0
      release_no:
        host: 20100
      git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93",True,{}
mruby/mruby,https://github.com/mruby/mruby,4964,2020-04-06T09:16:51Z,2020-06-06T08:25:36Z,2020-06-06T08:25:37Z,CLOSED,False,85,33,5,https://github.com/Reckordp,[remake] Notify there is available for upgrade,3,[],https://github.com/mruby/mruby/pull/4964,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4964#issuecomment-610110536,"Print available version can be upgrade for current source at the end of log's build. Lockfile after third build
---
mruby_version:
  version: 2.1.0
  release_no:
    host: 20100
  git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
builds:
  mruby_version:
    version: 2.1.0
    release_no:
      host: 20100
    git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
  builds:
    mruby_version:
      version: 2.1.0
      release_no:
        host: 20100
      git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93",All CI fail for this PR. Could you update?,True,{}
mruby/mruby,https://github.com/mruby/mruby,4964,2020-04-06T09:16:51Z,2020-06-06T08:25:36Z,2020-06-06T08:25:37Z,CLOSED,False,85,33,5,https://github.com/Reckordp,[remake] Notify there is available for upgrade,3,[],https://github.com/mruby/mruby/pull/4964,https://github.com/Reckordp,3,https://github.com/mruby/mruby/pull/4964#issuecomment-610148027,"Print available version can be upgrade for current source at the end of log's build. Lockfile after third build
---
mruby_version:
  version: 2.1.0
  release_no:
    host: 20100
  git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
builds:
  mruby_version:
    version: 2.1.0
    release_no:
      host: 20100
    git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
  builds:
    mruby_version:
      version: 2.1.0
      release_no:
        host: 20100
      git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93",Actually it takes a merge from PR #4963. So I remove ToolsExec on all commit.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4964,2020-04-06T09:16:51Z,2020-06-06T08:25:36Z,2020-06-06T08:25:37Z,CLOSED,False,85,33,5,https://github.com/Reckordp,[remake] Notify there is available for upgrade,3,[],https://github.com/mruby/mruby/pull/4964,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4964#issuecomment-640011901,"Print available version can be upgrade for current source at the end of log's build. Lockfile after third build
---
mruby_version:
  version: 2.1.0
  release_no:
    host: 20100
  git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
builds:
  mruby_version:
    version: 2.1.0
    release_no:
      host: 20100
    git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93
  builds:
    mruby_version:
      version: 2.1.0
      release_no:
        host: 20100
      git_commit: fcbe94730e1b78b616267c11f6964c3e0cfc6a93",I was finally able to take time to investigate this PR and found out this PR misunderstood the intention of the lock file. It's supposed to keep the information of the downloaded gems but the PR compares the version of the mruby.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4965,2020-04-08T05:38:11Z,2020-04-08T13:40:50Z,2020-04-08T13:40:50Z,MERGED,True,11,44,2,https://github.com/mimaki,Merged `cygwin_filename()` into `filename()`.,1,[],https://github.com/mruby/mruby/pull/4965,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/4965,I removed cygwin_filename() method because Cygwin's pathnames are in UNIX format.,I removed cygwin_filename() method because Cygwin's pathnames are in UNIX format.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4968,2020-04-12T05:33:12Z,2020-04-15T00:58:20Z,2020-04-15T12:40:27Z,MERGED,True,42,0,2,https://github.com/dearblue,Check the file descriptor with `IO#initialize`; resolve #4966,1,[],https://github.com/mruby/mruby/pull/4968,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4968,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4968,2020-04-12T05:33:12Z,2020-04-15T00:58:20Z,2020-04-15T12:40:27Z,MERGED,True,42,0,2,https://github.com/dearblue,Check the file descriptor with `IO#initialize`; resolve #4966,1,[],https://github.com/mruby/mruby/pull/4968,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4968#issuecomment-613240800,,"The issue was fixed by 7add524. If there's any uncovered issue, tell me.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4968,2020-04-12T05:33:12Z,2020-04-15T00:58:20Z,2020-04-15T12:40:27Z,MERGED,True,42,0,2,https://github.com/dearblue,Check the file descriptor with `IO#initialize`; resolve #4966,1,[],https://github.com/mruby/mruby/pull/4968,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4968#issuecomment-613427331,,"I don't think there is a problem with select.
# I wasn't aware of the FD_SETSIZE (I'm embarrassed).
However, it' s worthwhile to check file descriptors with IO#initialize:


CRuby removes bad file descriptors with IO#initialize.
https://github.com/ruby/ruby/blob/v2_7_1/io.c#L8270-L8275


On Windows, if you give an invalid file descriptor to _get_osfhandle(), it seems to crash.
This will cause a crash if you give it to a POSIX compatible file function (such as fstat(), read() and write()).
It couldn't be replicated in wine, but I'm guessing from the failure in appveyor.
This is cluttered with commit references in #4966 by CI failures (I'm embarrassed this too), most of which occurred when I give _get_osfhandle() a non-existent file descriptor.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4968,2020-04-12T05:33:12Z,2020-04-15T00:58:20Z,2020-04-15T12:40:27Z,MERGED,True,42,0,2,https://github.com/dearblue,Check the file descriptor with `IO#initialize`; resolve #4966,1,[],https://github.com/mruby/mruby/pull/4968,https://github.com/matz,4,https://github.com/mruby/mruby/pull/4968#issuecomment-613755221,,"Ah, according to POSIX, all those system calls should fail gracefully with EBADF. I didn't know _get_osfhandle() crashes on Windows (sigh).
OK, I will merge this PR with a slight modification.",True,{'HEART': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,4969,2020-04-12T05:35:55Z,2020-04-14T05:46:26Z,2020-04-14T12:59:16Z,MERGED,True,112,13,1,https://github.com/dearblue,Support `MRB_DISABLE_STDIO` for mruby-pack; ref #4954,1,[],https://github.com/mruby/mruby/pull/4969,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4969,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4970,2020-04-12T05:46:24Z,2020-04-14T05:45:26Z,2020-04-14T12:59:14Z,MERGED,True,157,46,4,https://github.com/dearblue, Support `MRB_DISABLE_STDIO` for mruby-sprintf; ref #4954,5,[],https://github.com/mruby/mruby/pull/4970,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4970,"For ""width specifier"" and ""specifier flags"", I get diff src/fmt_fp.c and musl (src/stdio/vfprintf.c in git://git.musl-libc.org/musl) and combined them.","For ""width specifier"" and ""specifier flags"", I get diff src/fmt_fp.c and musl (src/stdio/vfprintf.c in git://git.musl-libc.org/musl) and combined them.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4971,2020-04-12T05:47:06Z,2020-04-14T00:29:01Z,2020-04-14T12:59:10Z,MERGED,True,5,2,1,https://github.com/dearblue,Fixed a build error in mruby-config,1,[],https://github.com/mruby/mruby/pull/4971,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4971,"The build error occurred when the ""build/XXX/bin"" directory did not exist.","The build error occurred when the ""build/XXX/bin"" directory did not exist.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4972,2020-04-13T14:32:25Z,2020-04-14T05:51:01Z,2020-04-14T12:59:19Z,MERGED,True,31,11,4,https://github.com/dearblue,Fix `MRB_TT_CPTR` object with `MRB_NAN_BOXING`,1,[],https://github.com/mruby/mruby/pull/4972,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4972,"Previously, if MRB_NAN_BOXING is defined, for example, mrb_cptr_value() could not keep an odd address.
If it is MRB_32BIT, it can be embedded in NaN as it is.
If it is MRB_64BIT, some operations are shared with MRB_WORD_BOXING.
In this case, the MRB_API function mrb_nan_boxing_cptr_value() is defined.","Previously, if MRB_NAN_BOXING is defined, for example, mrb_cptr_value() could not keep an odd address.
If it is MRB_32BIT, it can be embedded in NaN as it is.
If it is MRB_64BIT, some operations are shared with MRB_WORD_BOXING.
In this case, the MRB_API function mrb_nan_boxing_cptr_value() is defined.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4975,2020-04-24T12:54:06Z,2020-04-24T14:35:10Z,2020-04-26T12:28:25Z,MERGED,True,2,2,1,https://github.com/dearblue,Removed comments mentioning `MRB_WITHOUT_FLOAT`; ref 2e661e8,1,[],https://github.com/mruby/mruby/pull/4975,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4975,"The comment is for messages when MRB_INT16 and MRB_WITHOUT_FLOAT are specified at the same time.
The comment itself is no longer needed now that MRB_INT16 is gone.","The comment is for messages when MRB_INT16 and MRB_WITHOUT_FLOAT are specified at the same time.
The comment itself is no longer needed now that MRB_INT16 is gone.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4976,2020-04-24T12:56:42Z,2020-04-24T14:36:13Z,2020-04-26T12:28:23Z,MERGED,True,5,0,2,https://github.com/dearblue,Support `undef` for `mrb_ary_splice()` instead of `[]`,1,[],https://github.com/mruby/mruby/pull/4976,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4976,"When removing elements from an array, it is possible to avoid creating an empty array.
Before this patch:
mrb_ary_splice(mrb, ary, head, len, mrb_ary_new(mrb));
After this patch:
mrb_ary_splice(mrb, ary, head, len, mrb_undef_value());","When removing elements from an array, it is possible to avoid creating an empty array.
Before this patch:
mrb_ary_splice(mrb, ary, head, len, mrb_ary_new(mrb));
After this patch:
mrb_ary_splice(mrb, ary, head, len, mrb_undef_value());",True,{}
mruby/mruby,https://github.com/mruby/mruby,4977,2020-04-24T13:28:45Z,2020-05-28T09:56:46Z,2020-05-31T07:17:19Z,CLOSED,False,1,1,1,https://github.com/dearblue,"Suppress ""-Wtype-limits"" warning for `mrb->c->eidx`",1,[],https://github.com/mruby/mruby/pull/4977,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4977,"# This pull request has a aspect of raising the issue.
# If you have a better solution, please adopt it.
All callers of ecall() make sure that mrb->c->eidx is greater than 0.
The problem I want to raise is in ecall().
Probably What it wants to do is check the overflow, but there is a problem.

eidx is uint16_t, so it cannot be less than 0.
I think it is better to call mrb_bug() or use mrb_assert() when it gets trapped.","# This pull request has a aspect of raising the issue.
# If you have a better solution, please adopt it.
All callers of ecall() make sure that mrb->c->eidx is greater than 0.
The problem I want to raise is in ecall().
Probably What it wants to do is check the overflow, but there is a problem.

eidx is uint16_t, so it cannot be less than 0.
I think it is better to call mrb_bug() or use mrb_assert() when it gets trapped.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4978,2020-04-26T12:45:02Z,2020-04-27T00:00:14Z,2020-04-28T09:54:38Z,MERGED,True,8,26,1,https://github.com/dearblue,Integrate class `EnsureYieldBreak` under test,1,[],https://github.com/mruby/mruby/pull/4978,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4978,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4979,2020-04-26T12:45:13Z,2020-04-26T23:56:51Z,2020-04-28T09:54:44Z,MERGED,True,0,1,1,https://github.com/dearblue,Remove unused `mruby-error` in `mruby-bin-mruby`,1,[],https://github.com/mruby/mruby/pull/4979,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4979,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4980,2020-04-26T12:45:43Z,2020-04-26T23:59:20Z,2020-04-28T13:45:56Z,MERGED,True,2,2,1,https://github.com/dearblue,Reduce `struct mrb_context`,1,[],https://github.com/mruby/mruby/pull/4980,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4980,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4980,2020-04-26T12:45:43Z,2020-04-26T23:59:20Z,2020-04-28T13:45:56Z,MERGED,True,2,2,1,https://github.com/dearblue,Reduce `struct mrb_context`,1,[],https://github.com/mruby/mruby/pull/4980,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4980#issuecomment-619832805,,"In the case of MSVC, the size doesn't seem to be reduced just by making it a bit field. It seems that it is necessary to make bit field members all the same type, so it becomes smaller if the type is changed to uint8_t.
It is also even smaller if the structure members are sorted by the size of the type.
Examples:

MSVC
GCC
Clang",True,{}
mruby/mruby,https://github.com/mruby/mruby,4980,2020-04-26T12:45:43Z,2020-04-26T23:59:20Z,2020-04-28T13:45:56Z,MERGED,True,2,2,1,https://github.com/dearblue,Reduce `struct mrb_context`,1,[],https://github.com/mruby/mruby/pull/4980,https://github.com/matz,3,https://github.com/mruby/mruby/pull/4980#issuecomment-620305820,,"The effectiveness of bit fields is implementation-dependent. I myself don't care that much. But if OP cares, PR will be welcome.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4980,2020-04-26T12:45:43Z,2020-04-26T23:59:20Z,2020-04-28T13:45:56Z,MERGED,True,2,2,1,https://github.com/dearblue,Reduce `struct mrb_context`,1,[],https://github.com/mruby/mruby/pull/4980,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/4980#issuecomment-620502984,,"I now plan to remove ecall() and embed the ensure block into the same irep as the begin (as well as the rescue).
This will merge the ""exception handler stack"" and ""ensure handler stack"" in the struct mrb_context.

  
    
      mruby/include/mruby.h
    
    
        Lines 162 to 165
      in
      0f229bf
    
  
  
    

        
          
           uint16_t *rescue;                       /* exception handler stack */ 
        

        
          
           uint16_t rsize; 
        

        
          
           struct RProc **ensure;                  /* ensure handler stack */ 
        

        
          
           uint16_t esize, eidx; 
        
    
  


I'm having trouble with break and return in the yield across methods, so it's sad that it's not ready to publish soon...",True,{}
mruby/mruby,https://github.com/mruby/mruby,4980,2020-04-26T12:45:43Z,2020-04-26T23:59:20Z,2020-04-28T13:45:56Z,MERGED,True,2,2,1,https://github.com/dearblue,Reduce `struct mrb_context`,1,[],https://github.com/mruby/mruby/pull/4980,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4980#issuecomment-620618079,,"It seemed so hard when I designed the VM. If you can remove ecall, it's awesome!",True,{'HEART': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,4981,2020-04-27T16:36:38Z,2020-04-28T00:46:57Z,2020-04-28T09:17:34Z,MERGED,True,50,0,1,https://github.com/udzura,Test mruby-io in tmpdir when AF_UNIX cannot be created on cwd,4,[],https://github.com/mruby/mruby/pull/4981,https://github.com/udzura,1,https://github.com/mruby/mruby/pull/4981,"mruby-io cannot create temporary AF_UNIX socket when working directory is vboxfs or NFS.
This is a workaround to test in such kind of filesystems.","mruby-io cannot create temporary AF_UNIX socket when working directory is vboxfs or NFS.
This is a workaround to test in such kind of filesystems.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4981,2020-04-27T16:36:38Z,2020-04-28T00:46:57Z,2020-04-28T09:17:34Z,MERGED,True,50,0,1,https://github.com/udzura,Test mruby-io in tmpdir when AF_UNIX cannot be created on cwd,4,[],https://github.com/mruby/mruby/pull/4981,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/4981#issuecomment-620474378,"mruby-io cannot create temporary AF_UNIX socket when working directory is vboxfs or NFS.
This is a workaround to test in such kind of filesystems.","Running the test leaves tmp.mruby-io-socket-ok.????????. The return value of mkstemp() is an error when it is -1 (negative), so I think that the check is inappropriate.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4984,2020-04-29T08:27:25Z,2020-04-29T23:38:34Z,2020-05-01T01:23:16Z,MERGED,True,2,1,1,https://github.com/dearblue,Sorting the list of gems at build time by name,1,[],https://github.com/mruby/mruby/pull/4984,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4984,"Printing them in sorted order makes it easier to find the desired gem.
But it has come to completely ignore the dependency.","Printing them in sorted order makes it easier to find the desired gem.
But it has come to completely ignore the dependency.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4984,2020-04-29T08:27:25Z,2020-04-29T23:38:34Z,2020-05-01T01:23:16Z,MERGED,True,2,1,1,https://github.com/dearblue,Sorting the list of gems at build time by name,1,[],https://github.com/mruby/mruby/pull/4984,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4984#issuecomment-621099488,"Printing them in sorted order makes it easier to find the desired gem.
But it has come to completely ignore the dependency.","I am not sure about your intention. Sorting is better because we can find gems by names easier, but it has the drawback of losing dependency info. So you are asking for my decision, right?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4984,2020-04-29T08:27:25Z,2020-04-29T23:38:34Z,2020-05-01T01:23:16Z,MERGED,True,2,1,1,https://github.com/dearblue,Sorting the list of gems at build time by name,1,[],https://github.com/mruby/mruby/pull/4984,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/4984#issuecomment-621147952,"Printing them in sorted order makes it easier to find the desired gem.
But it has come to completely ignore the dependency.","The only thing that is aligned is the display.
The inside information is not affected at all.
As for the display so far, I could only predict that it would depend on certain items being on the upper side.
I don't think there's much point in that.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4985,2020-04-29T08:27:57Z,2020-04-29T09:34:04Z,2020-05-01T01:23:17Z,MERGED,True,5,2,2,https://github.com/dearblue,Makes `mrb_any_to_s()` accept an object whose class is `NULL`,1,[],https://github.com/mruby/mruby/pull/4985,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4985,"When using mrb_any_to_s() for debugging purposes, giving an object whose class is NULL no longer causes a SIGSEGV and no crash.
This is achieved by making mrb_class_name() and mrb_str_cat_cstr() null safe.

I want to display a MRB_TT_BREAK object.","When using mrb_any_to_s() for debugging purposes, giving an object whose class is NULL no longer causes a SIGSEGV and no crash.
This is achieved by making mrb_class_name() and mrb_str_cat_cstr() null safe.

I want to display a MRB_TT_BREAK object.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4986,2020-04-29T08:28:12Z,2020-04-29T09:34:40Z,2020-05-01T01:23:16Z,MERGED,True,1,1,1,https://github.com/dearblue,Avoid comparing pointers and integers,1,[],https://github.com/mruby/mruby/pull/4986,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4986,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4987,2020-04-29T09:34:37Z,2020-04-30T08:13:12Z,2020-04-30T08:34:38Z,MERGED,True,62,97,2,https://github.com/shuujii,Avoid changing directory in `mruby-io` test,1,[],https://github.com/mruby/mruby/pull/4987,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4987,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4987,2020-04-29T09:34:37Z,2020-04-30T08:13:12Z,2020-04-30T08:34:38Z,MERGED,True,62,97,2,https://github.com/shuujii,Avoid changing directory in `mruby-io` test,1,[],https://github.com/mruby/mruby/pull/4987,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4987#issuecomment-621097625,,Thank you for the pull-request. I just want to make sure whether it works on @udzura's environment.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4987,2020-04-29T09:34:37Z,2020-04-30T08:13:12Z,2020-04-30T08:34:38Z,MERGED,True,62,97,2,https://github.com/shuujii,Avoid changing directory in `mruby-io` test,1,[],https://github.com/mruby/mruby/pull/4987,https://github.com/udzura,3,https://github.com/mruby/mruby/pull/4987#issuecomment-621626951,,Thanks! @shuujii -san! I'll check it soon!!,True,{}
mruby/mruby,https://github.com/mruby/mruby,4987,2020-04-29T09:34:37Z,2020-04-30T08:13:12Z,2020-04-30T08:34:38Z,MERGED,True,62,97,2,https://github.com/shuujii,Avoid changing directory in `mruby-io` test,1,[],https://github.com/mruby/mruby/pull/4987,https://github.com/udzura,4,https://github.com/mruby/mruby/pull/4987#issuecomment-621630710,,"All check is passed on my mruby on vboxsf!!
vagrant@ubuntu-bionic:/opt/mruby$ mount | grep /opt/mruby                                                                                          
opt_mruby on /opt/mruby type vboxsf (rw,nodev,relatime)                                                                                            
vagrant@ubuntu-bionic:/opt/mruby$ rake test                                                                                                        
                                                                                                                                                   
Build summary:                                                 
                                                                      
================================================           
      Config Name: host                                          
 Output Directory: build/host                                                 
         Binaries: mrbc                                                    
    Included Gems:                                                       
             mruby-metaprog - Meta-programming features for mruby             
             mruby-io - IO and File class                                
...

>>> Test test <<<                                      
mrbtest - Embeddable Ruby Test                         
                                                         
....................~
Skip: File.expand_path (with ENV) (mrbgems: mruby-io)
  Total: 1239                                          
     OK: 1238                                                    
     KO: 0                                                            
  Crash: 0                                                       
Warning: 0                                                
   Skip: 1                                               
   Time: 0.7 seconds                                    

>>> Bintest test <<<                                   
bintest - Command Binary Test                            
                                                          
........................................................
  Total: 56                                                
     OK: 56                                               
     KO: 0                                            
  Crash: 0                                            
Warning: 0                                                    
   Skip: 0                                                          
   Time: 0.81 seconds",True,{}
mruby/mruby,https://github.com/mruby/mruby,4988,2020-04-30T04:43:49Z,2020-04-30T08:12:38Z,2020-04-30T08:34:34Z,MERGED,True,5,6,1,https://github.com/shuujii,Refine `.travis.yml`,1,[],https://github.com/mruby/mruby/pull/4988,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4988,"Disable automatic update and clean up on brew install (install time
160 sec -> 5 sec).
Avoid using deprecated keys.","Disable automatic update and clean up on brew install (install time
160 sec -> 5 sec).
Avoid using deprecated keys.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4990,2020-05-04T06:53:47Z,2020-05-05T13:57:41Z,2020-05-05T23:12:29Z,MERGED,True,3,2,1,https://github.com/komainu8,Enable MRB_METHOD_T_STRUCT by default on 32bit GUN/Linux,1,[],https://github.com/mruby/mruby/pull/4990,https://github.com/komainu8,1,https://github.com/mruby/mruby/pull/4990,"Hello,
We can't also use the highest 2 bits of function pointers on 32bit GNU/Linux same as #4948.
How about we decide whether 32bit architecture by using MRB_32BIT?","Hello,
We can't also use the highest 2 bits of function pointers on 32bit GNU/Linux same as #4948.
How about we decide whether 32bit architecture by using MRB_32BIT?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4990,2020-05-04T06:53:47Z,2020-05-05T13:57:41Z,2020-05-05T23:12:29Z,MERGED,True,3,2,1,https://github.com/komainu8,Enable MRB_METHOD_T_STRUCT by default on 32bit GUN/Linux,1,[],https://github.com/mruby/mruby/pull/4990,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4990#issuecomment-624071724,"Hello,
We can't also use the highest 2 bits of function pointers on 32bit GNU/Linux same as #4948.
How about we decide whether 32bit architecture by using MRB_32BIT?","I am not sure MRB_32BIT is a correct predicate. It sounds OK but not for sure. If we see any problem, we will revert the change.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4990,2020-05-04T06:53:47Z,2020-05-05T13:57:41Z,2020-05-05T23:12:29Z,MERGED,True,3,2,1,https://github.com/komainu8,Enable MRB_METHOD_T_STRUCT by default on 32bit GUN/Linux,1,[],https://github.com/mruby/mruby/pull/4990,https://github.com/komainu8,3,https://github.com/mruby/mruby/pull/4990#issuecomment-624353905,"Hello,
We can't also use the highest 2 bits of function pointers on 32bit GNU/Linux same as #4948.
How about we decide whether 32bit architecture by using MRB_32BIT?",I see.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4992,2020-05-06T06:58:20Z,2020-08-18T04:25:33Z,2020-08-18T04:25:33Z,CLOSED,False,12,0,2,https://github.com/LanzaSchneider,Add integer division like 7 / 2 => 3,2,[],https://github.com/mruby/mruby/pull/4992,https://github.com/LanzaSchneider,1,https://github.com/mruby/mruby/pull/4992,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4992,2020-05-06T06:58:20Z,2020-08-18T04:25:33Z,2020-08-18T04:25:33Z,CLOSED,False,12,0,2,https://github.com/LanzaSchneider,Add integer division like 7 / 2 => 3,2,[],https://github.com/mruby/mruby/pull/4992,https://github.com/matz,2,https://github.com/mruby/mruby/pull/4992#issuecomment-624517697,,"The integer division is the biggest difference from CRuby. Since we don't implement Bignums in mruby, we use Float numbers instead on overflow. So some integer calculations may result in float numbers. That's the reason we use float division by default instead of integer division.
The options for the future are:

make division integer division by default (this PR; compatible with Ruby)
1.1.  overflow should make float as it does now (inconsistency? maybe)
1.2.  overflow should raise an exception (big limitation; acceptable?)
1.3.  implement Bignum using mpz or some other library (need more RAM)
make division float division as it is now
2.1. Python3 chose this change; CRuby can follow after mruby

Any opinion?",True,{}
mruby/mruby,https://github.com/mruby/mruby,4992,2020-05-06T06:58:20Z,2020-08-18T04:25:33Z,2020-08-18T04:25:33Z,CLOSED,False,12,0,2,https://github.com/LanzaSchneider,Add integer division like 7 / 2 => 3,2,[],https://github.com/mruby/mruby/pull/4992,https://github.com/fourmond,3,https://github.com/mruby/mruby/pull/4992#issuecomment-624537232,,"From my narrow perspective of someone who embeds mruby into a program for data analysis, the current status (option 2, i.e. float division) is much less confusing for my users than integer division. Some data plotting programs like gnuplot default to integer division, but it's the kind of things that cause severe headaches from time to time, even to someone like me who understands what type casting is about.
If you choose to make option 1 the default, is there any possibility for changing the default (back to 2) at mruby compile time ? Thanks a lot.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4992,2020-05-06T06:58:20Z,2020-08-18T04:25:33Z,2020-08-18T04:25:33Z,CLOSED,False,12,0,2,https://github.com/LanzaSchneider,Add integer division like 7 / 2 => 3,2,[],https://github.com/mruby/mruby/pull/4992,https://github.com/pulsejet,4,https://github.com/mruby/mruby/pull/4992#issuecomment-625804762,,"For whatever my opinion might count for, I am primarily using mruby to port legacy code to the web (getting cruby to cross compile to wasm and actually work is a nightmare), so this is the only patch that I had to make to mruby for everything to be consistent. I don't really see the harm of having such a switch that will change integer division to cruby behavior (which will be turned off by default).",True,{}
mruby/mruby,https://github.com/mruby/mruby,4992,2020-05-06T06:58:20Z,2020-08-18T04:25:33Z,2020-08-18T04:25:33Z,CLOSED,False,12,0,2,https://github.com/LanzaSchneider,Add integer division like 7 / 2 => 3,2,[],https://github.com/mruby/mruby/pull/4992,https://github.com/matz,5,https://github.com/mruby/mruby/pull/4992#issuecomment-675200195,,"At the moment I started mruby, I had a plan to make Ruby integer division to result in float numbers, but due to the compatibility issue, I abandoned the plan. So there's little reason to keep this behavior as an experiment for Ruby's future.
So I will merge this pull-request to mruby3 branch for the future.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4995,2020-05-09T06:52:43Z,2020-05-09T09:59:23Z,2020-05-19T14:05:53Z,MERGED,True,3,3,1,https://github.com/shuujii,Fix some `Hash` methods are inconsistent with `values`,1,[],https://github.com/mruby/mruby/pull/4995,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/4995,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,4996,2020-05-09T12:27:50Z,2020-05-09T13:41:24Z,2020-05-09T15:05:19Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix boundary check for `OP_LOADI16`; ref fa8668c,1,[],https://github.com/mruby/mruby/pull/4996,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4996,"It was making a negative integer if the highest-order bit of a 16-bit integer was 1.
no patched:
p 0x7fff  # => 32767
p 0x8000  # => -32768
p 0xffff  # => -1
p 0x10000 # => 65536","It was making a negative integer if the highest-order bit of a 16-bit integer was 1.
no patched:
p 0x7fff  # => 32767
p 0x8000  # => -32768
p 0xffff  # => -1
p 0x10000 # => 65536",True,{}
mruby/mruby,https://github.com/mruby/mruby,4997,2020-05-09T13:40:17Z,2020-05-09T14:01:03Z,2020-05-09T15:05:19Z,MERGED,True,0,3,1,https://github.com/dearblue,Remove byteorder constants; ref 87576b8,1,[],https://github.com/mruby/mruby/pull/4997,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4997,The FLAG_BYTEORDER_NATIVE and FLAG_BYTEORDER_NONATIVE are no longer needed.,The FLAG_BYTEORDER_NATIVE and FLAG_BYTEORDER_NONATIVE are no longer needed.,True,{}
mruby/mruby,https://github.com/mruby/mruby,4998,2020-05-10T11:46:45Z,2020-05-11T00:59:24Z,2020-05-31T07:16:46Z,MERGED,True,2,2,1,https://github.com/dearblue,Get an irep symbol if it's `OP_GETSV` or `OP_SETSV`,1,[],https://github.com/mruby/mruby/pull/4998,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4998,"It's a meaningless patch that has no effect at the moment, but I've noticed it, so I'm putting it out.","It's a meaningless patch that has no effect at the moment, but I've noticed it, so I'm putting it out.",True,{}
mruby/mruby,https://github.com/mruby/mruby,4999,2020-05-10T11:48:04Z,2020-05-11T00:58:11Z,2020-05-31T07:16:45Z,MERGED,True,27,23,1,https://github.com/dearblue,Update `doc/opcode.md` [ci skip],1,[],https://github.com/mruby/mruby/pull/4999,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/4999,"The difference of include/mruby/ops.h is applied.

OP_NOP - update semantics
OP_GETSV - update semantics
OP_SETSV - update semantics
OP_GETUPVAR - update prefix
OP_SETUPVAR - update prefix
OP_JMPIF - update operands and semantics
OP_JMPNOT - update operands and semantics
OP_JMPNIL - add entry
OP_ONERR - update semantics
OP_POPERR - update prefix
OP_EPOP - update prefix
OP_SENDB - update semantics
OP_ADD - update prefix and operands
OP_ADDI - update operands and semantics
OP_SUB - update prefix and operands
OP_SUBI - update semantics
OP_MUL - update prefix and operands
OP_DIV - update prefix and operands
OP_EQ - update prefix and operands
OP_LT - update prefix and operands
OP_LE - update prefix and operands
OP_GT - update prefix and operands
OP_GE - update prefix and operands
OP_ARYDUP - add entry
OP_INTERN - add entry
OP_HASHCAT - add entry
OP_ERR - update semantics","The difference of include/mruby/ops.h is applied.

OP_NOP - update semantics
OP_GETSV - update semantics
OP_SETSV - update semantics
OP_GETUPVAR - update prefix
OP_SETUPVAR - update prefix
OP_JMPIF - update operands and semantics
OP_JMPNOT - update operands and semantics
OP_JMPNIL - add entry
OP_ONERR - update semantics
OP_POPERR - update prefix
OP_EPOP - update prefix
OP_SENDB - update semantics
OP_ADD - update prefix and operands
OP_ADDI - update operands and semantics
OP_SUB - update prefix and operands
OP_SUBI - update semantics
OP_MUL - update prefix and operands
OP_DIV - update prefix and operands
OP_EQ - update prefix and operands
OP_LT - update prefix and operands
OP_LE - update prefix and operands
OP_GT - update prefix and operands
OP_GE - update prefix and operands
OP_ARYDUP - add entry
OP_INTERN - add entry
OP_HASHCAT - add entry
OP_ERR - update semantics",True,{}
mruby/mruby,https://github.com/mruby/mruby,5000,2020-05-15T12:36:58Z,2020-05-15T14:42:20Z,2020-05-19T14:05:51Z,MERGED,True,2,2,1,https://github.com/shuujii,Unify `eql?` receiver in `Hash` according to Ruby,1,[],https://github.com/mruby/mruby/pull/5000,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5000,"Example
# example.rb
class A
  def eql?(o)
    p self.class
    super
  end
  def hash
    1
  end
end

class B < A; end

h = {A.new => 1}
h[B.new]
Before this patch:
$ bin/mruby example.rb
A
After this patch (same as Ruby)
$ bin/mruby example.rb
B","Example
# example.rb
class A
  def eql?(o)
    p self.class
    super
  end
  def hash
    1
  end
end

class B < A; end

h = {A.new => 1}
h[B.new]
Before this patch:
$ bin/mruby example.rb
A
After this patch (same as Ruby)
$ bin/mruby example.rb
B",True,{}
mruby/mruby,https://github.com/mruby/mruby,5002,2020-05-19T08:13:54Z,2020-05-19T08:34:57Z,2020-05-19T08:34:57Z,MERGED,True,19,1,2,https://github.com/RoryO,Adding warnings for mrb_load functions leaking RProc objects,1,[],https://github.com/mruby/mruby/pull/5002,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5002,"From discoveries in #5001, adding documentation on the unexpected behavior of calling mrb_load_* functions leaking RProc objects. I took a look at the load_iseq paths and they exhibit the same behavior, so I documented that as well.
@matz expressed concern that fixing the leaking behavior in the core load_iseq or mrb_load_exec functions may cause other GC problems, so best case we can do currently is explain the situation and demonstrate how to overcome it.","From discoveries in #5001, adding documentation on the unexpected behavior of calling mrb_load_* functions leaking RProc objects. I took a look at the load_iseq paths and they exhibit the same behavior, so I documented that as well.
@matz expressed concern that fixing the leaking behavior in the core load_iseq or mrb_load_exec functions may cause other GC problems, so best case we can do currently is explain the situation and demonstrate how to overcome it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5003,2020-05-20T04:33:35Z,2020-05-20T04:49:11Z,2020-10-19T06:41:27Z,MERGED,True,9,0,2,https://github.com/shuujii,Retry `rake -m` on AppVeyor [skip travis],1,[],https://github.com/mruby/mruby/pull/5003,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5003,"The following error occurs when using rake -m on AppVeyor:
fatal error C1041: cannot open program database 'C:\projects\mruby\vc140.pdb'; if multiple CL.EXE write to the same .PDB file, please use /FS

Therefore, the issue is solved by not creating the PDB file. It is expected
to be somewhat faster by not generating debugging information (I don't think
debugging information is necessary for normal CI).","The following error occurs when using rake -m on AppVeyor:
fatal error C1041: cannot open program database 'C:\projects\mruby\vc140.pdb'; if multiple CL.EXE write to the same .PDB file, please use /FS

Therefore, the issue is solved by not creating the PDB file. It is expected
to be somewhat faster by not generating debugging information (I don't think
debugging information is necessary for normal CI).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5006,2020-05-23T16:28:21Z,2020-05-23T23:31:07Z,2020-05-23T23:31:07Z,MERGED,True,15,1,4,https://github.com/mame,Do not destruct rest arguments for __send__,1,[],https://github.com/mruby/mruby/pull/5006,https://github.com/mame,1,https://github.com/mruby/mruby/pull/5006,"Formerly, __send__(*args) modified args with Array#shift.
This bug affects optcarrot.
This changeset avoids the array destruction by using
args = args[1, len-1].","Formerly, __send__(*args) modified args with Array#shift.
This bug affects optcarrot.
This changeset avoids the array destruction by using
args = args[1, len-1].",True,{}
mruby/mruby,https://github.com/mruby/mruby,5006,2020-05-23T16:28:21Z,2020-05-23T23:31:07Z,2020-05-23T23:31:07Z,MERGED,True,15,1,4,https://github.com/mame,Do not destruct rest arguments for __send__,1,[],https://github.com/mruby/mruby/pull/5006,https://github.com/mame,2,https://github.com/mruby/mruby/pull/5006#issuecomment-633088739,"Formerly, __send__(*args) modified args with Array#shift.
This bug affects optcarrot.
This changeset avoids the array destruction by using
args = args[1, len-1].","This code demonstrates the bug behavior:
def foo(x)
end

ary = [:foo, :bar]
p ary #=> [:foo, :bar]
send(*ary)
p ary #=> [:bar]",True,{}
mruby/mruby,https://github.com/mruby/mruby,5007,2020-05-25T22:25:21Z,2020-05-25T23:17:24Z,2020-10-19T06:41:25Z,MERGED,True,13547,15,2,https://github.com/shuujii,Add `y.tab.c` to remove Bison from build dependencies; ref 4ce3997c,1,[],https://github.com/mruby/mruby/pull/5007,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5007,"I sometimes see Bison related problems in setting up build environments.
Therefore to remove Bison from build time dependencies, add y.tab.c
generated by Bison to the repository.
The reduction of dependency at build time also reduces the labor and time
for setup and installation in CI.
In addition, a path in #line directive is converted to a relative path so
that its path is constant regardless of development environments.","I sometimes see Bison related problems in setting up build environments.
Therefore to remove Bison from build time dependencies, add y.tab.c
generated by Bison to the repository.
The reduction of dependency at build time also reduces the labor and time
for setup and installation in CI.
In addition, a path in #line directive is converted to a relative path so
that its path is constant regardless of development environments.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5008,2020-05-26T03:10:55Z,2020-05-26T03:43:40Z,2020-10-19T06:41:28Z,MERGED,True,0,26,2,https://github.com/shuujii,"Revert part of ""Start GitHub Actions"" (4ce3997c)",1,[],https://github.com/mruby/mruby/pull/5008,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5008,Because some changes have been overridden.,Because some changes have been overridden.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5009,2020-05-26T03:11:10Z,2020-05-26T11:17:50Z,2020-10-19T06:41:27Z,MERGED,True,0,15,2,https://github.com/shuujii,Removed Bison related settings from `.travis.yml` and `appveyor.yml`,1,[],https://github.com/mruby/mruby/pull/5009,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5009,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5010,2020-05-26T14:18:19Z,2020-05-26T14:37:23Z,2020-05-27T02:44:18Z,MERGED,True,1,1,1,https://github.com/udzura,Detect newly added mrbgems when re-creating gem_init.c,1,[],https://github.com/mruby/mruby/pull/5010,https://github.com/udzura,1,https://github.com/mruby/mruby/pull/5010,"When building current mruby, adding new mgems by modifying build_config.rb or mrbgems.rake will additonally check out mgems into project. That is as we expect.
But #{build_dir}/mrbgems/gem_init.c won't be re-generated and re-built for now.
That file should have a dependency to mgems' directories and source files.","When building current mruby, adding new mgems by modifying build_config.rb or mrbgems.rake will additonally check out mgems into project. That is as we expect.
But #{build_dir}/mrbgems/gem_init.c won't be re-generated and re-built for now.
That file should have a dependency to mgems' directories and source files.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5011,2020-05-27T09:44:45Z,2020-05-27T13:15:45Z,2020-10-19T06:41:27Z,MERGED,True,3,2,1,https://github.com/shuujii,"Respect CFLAGS, CXXFLAGS, and LDFLAGS env vars in appveyor_config.rb",1,[],https://github.com/mruby/mruby/pull/5011,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5011,[skip travis],[skip travis],True,{}
mruby/mruby,https://github.com/mruby/mruby,5013,2020-05-29T05:04:33Z,2020-06-08T00:59:43Z,2020-10-19T06:41:26Z,MERGED,True,2,3,1,https://github.com/shuujii,Print exception backtrace if possible without `-v` in test,1,[],https://github.com/mruby/mruby/pull/5013,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5013,Backtrace is useful for debugging.,Backtrace is useful for debugging.,True,{'HEART': ['https://github.com/jethrodaniel']}
mruby/mruby,https://github.com/mruby/mruby,5014,2020-05-31T07:30:09Z,2020-06-01T13:58:17Z,2020-06-02T13:08:42Z,MERGED,True,22,14,2,https://github.com/dearblue,Get local variable names from orphan block; ref #3710,1,[],https://github.com/mruby/mruby/pull/5014,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5014,This patch is resolve first case in #3710.,This patch is resolve first case in #3710.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5015,2020-05-31T09:41:32Z,2020-08-18T04:31:16Z,2020-12-23T13:07:06Z,CLOSED,False,4,18,1,https://github.com/shuujii,Fix `Fixnum` and `Float` comparison in `Hash` lookup,1,[],https://github.com/mruby/mruby/pull/5015,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5015,"Before this patch:
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
true
After this patch (same as Ruby)
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
false","Before this patch:
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
true
After this patch (same as Ruby)
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
false",True,{}
mruby/mruby,https://github.com/mruby/mruby,5015,2020-05-31T09:41:32Z,2020-08-18T04:31:16Z,2020-12-23T13:07:06Z,CLOSED,False,4,18,1,https://github.com/shuujii,Fix `Fixnum` and `Float` comparison in `Hash` lookup,1,[],https://github.com/mruby/mruby/pull/5015,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5015#issuecomment-663011272,"Before this patch:
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
true
After this patch (same as Ruby)
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
false",I think current implementation does not follow ISO Ruby because ISO Ruby requires eql? method to be used for hash key matching and 1.0.eql?(1) is false.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5015,2020-05-31T09:41:32Z,2020-08-18T04:31:16Z,2020-12-23T13:07:06Z,CLOSED,False,4,18,1,https://github.com/shuujii,Fix `Fixnum` and `Float` comparison in `Hash` lookup,1,[],https://github.com/mruby/mruby/pull/5015,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5015#issuecomment-663020170,"Before this patch:
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
true
After this patch (same as Ruby)
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
false","Yes, but we should fix (or change) the relationship of Integer and Float first. I am working on it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5015,2020-05-31T09:41:32Z,2020-08-18T04:31:16Z,2020-12-23T13:07:06Z,CLOSED,False,4,18,1,https://github.com/shuujii,Fix `Fixnum` and `Float` comparison in `Hash` lookup,1,[],https://github.com/mruby/mruby/pull/5015,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5015#issuecomment-675242726,"Before this patch:
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
true
After this patch (same as Ruby)
$ bin/mruby -e 'p({1 => 2}.key?(1.0))'
false",Merged to mruby3 branch.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5016,2020-05-31T13:56:35Z,2020-06-02T05:50:12Z,2020-06-02T13:08:41Z,CLOSED,False,1073,1220,6,https://github.com/dearblue,Remove `patch_irep()` in `mruby-eval`,1,[],https://github.com/mruby/mruby/pull/5016,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5016,"It can now deal with operands in the range of OP_EXT*.


It can now call the same method as the variable name without arguments.
def a
  ""Safe!""
end

a = ""Auto!""

eval ""a()"" # call method `a`



It also includes changes in mrbgems/mruby-compiler/core/y.tab.c, so the difference is inflated by more than six times.
The net is as follows:
% git diff --stat master.. -- :^mrbgems/mruby-compiler/core/y.tab.c
 include/mruby/compile.h               |   4 +-
 mrbgems/mruby-compiler/core/codegen.c | 101 +++++++++-------
 mrbgems/mruby-compiler/core/parse.y   |  15 ++-
 mrbgems/mruby-eval/src/eval.c         | 215 +---------------------------------
 mrbgems/mruby-eval/test/eval.rb       |  21 ++++
 5 files changed, 98 insertions(+), 258 deletions(-)
I wish there was a better way to do it.","It can now deal with operands in the range of OP_EXT*.


It can now call the same method as the variable name without arguments.
def a
  ""Safe!""
end

a = ""Auto!""

eval ""a()"" # call method `a`



It also includes changes in mrbgems/mruby-compiler/core/y.tab.c, so the difference is inflated by more than six times.
The net is as follows:
% git diff --stat master.. -- :^mrbgems/mruby-compiler/core/y.tab.c
 include/mruby/compile.h               |   4 +-
 mrbgems/mruby-compiler/core/codegen.c | 101 +++++++++-------
 mrbgems/mruby-compiler/core/parse.y   |  15 ++-
 mrbgems/mruby-eval/src/eval.c         | 215 +---------------------------------
 mrbgems/mruby-eval/test/eval.rb       |  21 ++++
 5 files changed, 98 insertions(+), 258 deletions(-)
I wish there was a better way to do it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5016,2020-05-31T13:56:35Z,2020-06-02T05:50:12Z,2020-06-02T13:08:41Z,CLOSED,False,1073,1220,6,https://github.com/dearblue,Remove `patch_irep()` in `mruby-eval`,1,[],https://github.com/mruby/mruby/pull/5016,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5016#issuecomment-636772541,"It can now deal with operands in the range of OP_EXT*.


It can now call the same method as the variable name without arguments.
def a
  ""Safe!""
end

a = ""Auto!""

eval ""a()"" # call method `a`



It also includes changes in mrbgems/mruby-compiler/core/y.tab.c, so the difference is inflated by more than six times.
The net is as follows:
% git diff --stat master.. -- :^mrbgems/mruby-compiler/core/y.tab.c
 include/mruby/compile.h               |   4 +-
 mrbgems/mruby-compiler/core/codegen.c | 101 +++++++++-------
 mrbgems/mruby-compiler/core/parse.y   |  15 ++-
 mrbgems/mruby-eval/src/eval.c         | 215 +---------------------------------
 mrbgems/mruby-eval/test/eval.rb       |  21 ++++
 5 files changed, 98 insertions(+), 258 deletions(-)
I wish there was a better way to do it.","It also includes changes in mrbgems/mruby-compiler/core/y.tab.c, so the difference is inflated by more than six times.
I wish there was a better way to do it.

For the time being, why not just ignore #line directive and yyrline in the difference in the following steps?
$ touch .git/info/attributes
$ echo '/mrbgems/mruby-compiler/core/y.tab.c diff=tabc' >> .git/info/attributes
$ git config diff.tabc.textconv ""ruby --disable-gems -0pe 'gsub(/^\\x23line [^\\n]+?\\n|^[^\\n]+?YYRLINEYYN.+?^}\\x3b\\n/m, %())'""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5016,2020-05-31T13:56:35Z,2020-06-02T05:50:12Z,2020-06-02T13:08:41Z,CLOSED,False,1073,1220,6,https://github.com/dearblue,Remove `patch_irep()` in `mruby-eval`,1,[],https://github.com/mruby/mruby/pull/5016,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5016#issuecomment-636826463,"It can now deal with operands in the range of OP_EXT*.


It can now call the same method as the variable name without arguments.
def a
  ""Safe!""
end

a = ""Auto!""

eval ""a()"" # call method `a`



It also includes changes in mrbgems/mruby-compiler/core/y.tab.c, so the difference is inflated by more than six times.
The net is as follows:
% git diff --stat master.. -- :^mrbgems/mruby-compiler/core/y.tab.c
 include/mruby/compile.h               |   4 +-
 mrbgems/mruby-compiler/core/codegen.c | 101 +++++++++-------
 mrbgems/mruby-compiler/core/parse.y   |  15 ++-
 mrbgems/mruby-eval/src/eval.c         | 215 +---------------------------------
 mrbgems/mruby-eval/test/eval.rb       |  21 ++++
 5 files changed, 98 insertions(+), 258 deletions(-)
I wish there was a better way to do it.","Thanks for the comment.
The difference displayed for the time being will be less, but hmm, it is different from what I thought...
Up until about a week ago, FreeBSD was a 3.5 series binary package of bison, so the difference was huge.
It's not always up-to-date bison available, so in that case I may need someone to help me out...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5016,2020-05-31T13:56:35Z,2020-06-02T05:50:12Z,2020-06-02T13:08:41Z,CLOSED,False,1073,1220,6,https://github.com/dearblue,Remove `patch_irep()` in `mruby-eval`,1,[],https://github.com/mruby/mruby/pull/5016,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5016#issuecomment-637294285,"It can now deal with operands in the range of OP_EXT*.


It can now call the same method as the variable name without arguments.
def a
  ""Safe!""
end

a = ""Auto!""

eval ""a()"" # call method `a`



It also includes changes in mrbgems/mruby-compiler/core/y.tab.c, so the difference is inflated by more than six times.
The net is as follows:
% git diff --stat master.. -- :^mrbgems/mruby-compiler/core/y.tab.c
 include/mruby/compile.h               |   4 +-
 mrbgems/mruby-compiler/core/codegen.c | 101 +++++++++-------
 mrbgems/mruby-compiler/core/parse.y   |  15 ++-
 mrbgems/mruby-eval/src/eval.c         | 215 +---------------------------------
 mrbgems/mruby-eval/test/eval.rb       |  21 ++++
 5 files changed, 98 insertions(+), 258 deletions(-)
I wish there was a better way to do it.",Merged with the y.tab.c generated by the latest bison.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5016,2020-05-31T13:56:35Z,2020-06-02T05:50:12Z,2020-06-02T13:08:41Z,CLOSED,False,1073,1220,6,https://github.com/dearblue,Remove `patch_irep()` in `mruby-eval`,1,[],https://github.com/mruby/mruby/pull/5016,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/5016#issuecomment-637530494,"It can now deal with operands in the range of OP_EXT*.


It can now call the same method as the variable name without arguments.
def a
  ""Safe!""
end

a = ""Auto!""

eval ""a()"" # call method `a`



It also includes changes in mrbgems/mruby-compiler/core/y.tab.c, so the difference is inflated by more than six times.
The net is as follows:
% git diff --stat master.. -- :^mrbgems/mruby-compiler/core/y.tab.c
 include/mruby/compile.h               |   4 +-
 mrbgems/mruby-compiler/core/codegen.c | 101 +++++++++-------
 mrbgems/mruby-compiler/core/parse.y   |  15 ++-
 mrbgems/mruby-eval/src/eval.c         | 215 +---------------------------------
 mrbgems/mruby-eval/test/eval.rb       |  21 ++++
 5 files changed, 98 insertions(+), 258 deletions(-)
I wish there was a better way to do it.","Thanks @matz. And I am sorry for the lack of words.
In this PR, I was using bison-3.6.2 to convert, so it was possible to merge as is (if there are no other problems).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5017,2020-06-01T03:15:22Z,2020-06-01T12:26:57Z,2020-06-01T12:26:57Z,MERGED,True,1,0,1,https://github.com/RoryO,Fix float constant redefinition warnings,1,[],https://github.com/mruby/mruby/pull/5017,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5017,"Building and using mruby.h with the Microsoft compiler emits warnings
C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\float.h(69): warning C4005: 'DBL_EPSILON': macro redefinition
mruby.h(78): note: see previous definition of 'DBL_EPSILON'
C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\float.h(83): warning C4005: 'FLT_EPSILON': macro redefinition
mruby.h(75): note: see previous definition of 'FLT_EPSILON'
C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\float.h(98): warning C4005: 'LDBL_EPSILON': macro redefinition
mruby.h(81): note: see previous definition of 'LDBL_EPSILON'

Including float.h looks like it fixes the issue. It looks like we include float.h elsewhere so this looks like a safe addition.","Building and using mruby.h with the Microsoft compiler emits warnings
C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\float.h(69): warning C4005: 'DBL_EPSILON': macro redefinition
mruby.h(78): note: see previous definition of 'DBL_EPSILON'
C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\float.h(83): warning C4005: 'FLT_EPSILON': macro redefinition
mruby.h(75): note: see previous definition of 'FLT_EPSILON'
C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\float.h(98): warning C4005: 'LDBL_EPSILON': macro redefinition
mruby.h(81): note: see previous definition of 'LDBL_EPSILON'

Including float.h looks like it fixes the issue. It looks like we include float.h elsewhere so this looks like a safe addition.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5018,2020-06-01T17:05:23Z,2020-06-01T17:11:14Z,2020-06-02T16:37:01Z,CLOSED,False,2,1,1,https://github.com/dmlary,mruby-io: Add include sys/time.h,2,[],https://github.com/mruby/mruby/pull/5018,https://github.com/dmlary,1,https://github.com/mruby/mruby/pull/5018,"The incomplete type for struct timeval in mruby-io was not sufficient to compile it on my platform.  Got errors about unknown size for the type.

Removed forward declaration of struct timeval in mruby-io
Added include for sys/time.h, which defines struct timeval","The incomplete type for struct timeval in mruby-io was not sufficient to compile it on my platform.  Got errors about unknown size for the type.

Removed forward declaration of struct timeval in mruby-io
Added include for sys/time.h, which defines struct timeval",True,{}
mruby/mruby,https://github.com/mruby/mruby,5018,2020-06-01T17:05:23Z,2020-06-01T17:11:14Z,2020-06-02T16:37:01Z,CLOSED,False,2,1,1,https://github.com/dmlary,mruby-io: Add include sys/time.h,2,[],https://github.com/mruby/mruby/pull/5018,https://github.com/dmlary,2,https://github.com/mruby/mruby/pull/5018#issuecomment-636992877,"The incomplete type for struct timeval in mruby-io was not sufficient to compile it on my platform.  Got errors about unknown size for the type.

Removed forward declaration of struct timeval in mruby-io
Added include for sys/time.h, which defines struct timeval","Alright, this is clearly not ready for cross-platform at the moment.  Closing it until I get a solution that can pass CI.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5018,2020-06-01T17:05:23Z,2020-06-01T17:11:14Z,2020-06-02T16:37:01Z,CLOSED,False,2,1,1,https://github.com/dmlary,mruby-io: Add include sys/time.h,2,[],https://github.com/mruby/mruby/pull/5018,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5018#issuecomment-637134615,"The incomplete type for struct timeval in mruby-io was not sufficient to compile it on my platform.  Got errors about unknown size for the type.

Removed forward declaration of struct timeval in mruby-io
Added include for sys/time.h, which defines struct timeval","Does just adding #include <sys/time.h>  work?
Your change was
static struct timeval
￼time2timeval(mrb_state *mrb, mrb_value time)

to
static struct timeval;
￼time2timeval(mrb_state *mrb, mrb_value time)

which is equal to
static struct timeval;
int ￼time2timeval(mrb_state *mrb, mrb_value time)

You have changed the return type of time2timeval. That's the reason CI failed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5018,2020-06-01T17:05:23Z,2020-06-01T17:11:14Z,2020-06-02T16:37:01Z,CLOSED,False,2,1,1,https://github.com/dmlary,mruby-io: Add include sys/time.h,2,[],https://github.com/mruby/mruby/pull/5018,https://github.com/dmlary,4,https://github.com/mruby/mruby/pull/5018#issuecomment-637143755,"The incomplete type for struct timeval in mruby-io was not sufficient to compile it on my platform.  Got errors about unknown size for the type.

Removed forward declaration of struct timeval in mruby-io
Added include for sys/time.h, which defines struct timeval","Yes, I accidentally added a semicolon when I re-added the static struct timeval.  I was definitely reading the code wrong thinking it was a forward declaration instead of declaring the return type of the function.
I figured out how to get the github actions running in my fork.  I'll verify the changes there first before reopening this PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5018,2020-06-01T17:05:23Z,2020-06-01T17:11:14Z,2020-06-02T16:37:01Z,CLOSED,False,2,1,1,https://github.com/dmlary,mruby-io: Add include sys/time.h,2,[],https://github.com/mruby/mruby/pull/5018,https://github.com/dmlary,5,https://github.com/mruby/mruby/pull/5018#issuecomment-637669886,"The incomplete type for struct timeval in mruby-io was not sufficient to compile it on my platform.  Got errors about unknown size for the type.

Removed forward declaration of struct timeval in mruby-io
Added include for sys/time.h, which defines struct timeval","Haha, it turns out this was already done in 36efc33, in the non-windows includes.  It's just not in the 2.1.0 release, which is what I was working off of.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5019,2020-06-05T03:58:57Z,2020-06-05T04:04:37Z,2020-06-05T14:09:49Z,MERGED,True,64,19,8,https://github.com/mimaki,Merge mruby 2.1.1,20,[],https://github.com/mruby/mruby/pull/5019,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/5019,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5019,2020-06-05T03:58:57Z,2020-06-05T04:04:37Z,2020-06-05T14:09:49Z,MERGED,True,64,19,8,https://github.com/mimaki,Merge mruby 2.1.1,20,[],https://github.com/mruby/mruby/pull/5019,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5019#issuecomment-639263711,,"mrbgems/mruby-io/test/mruby_io_test.c should not be merged into master.
Also, if you're going to include a fix for #4981 into 2.1.1, I think it's better to include #4987.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5019,2020-06-05T03:58:57Z,2020-06-05T04:04:37Z,2020-06-05T14:09:49Z,MERGED,True,64,19,8,https://github.com/mimaki,Merge mruby 2.1.1,20,[],https://github.com/mruby/mruby/pull/5019,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5019#issuecomment-639285612,,Could you explain why we should not include mrbgems/mruby-io/test/mruby_io_test.c into the master?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5019,2020-06-05T03:58:57Z,2020-06-05T04:04:37Z,2020-06-05T14:09:49Z,MERGED,True,64,19,8,https://github.com/mimaki,Merge mruby 2.1.1,20,[],https://github.com/mruby/mruby/pull/5019,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5019#issuecomment-639298146,,"Only the changes made in 2.1.1 branch should be merged from 2.1.1 branch to master branch.
The changes to mrbgems/mruby-io/test/mruby_io_test.c in 2.1.1 branch are part of the changes made in mater branch, which were later re-fixed, so the merging has resulted in a mix of old changes.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5019,2020-06-05T03:58:57Z,2020-06-05T04:04:37Z,2020-06-05T14:09:49Z,MERGED,True,64,19,8,https://github.com/mimaki,Merge mruby 2.1.1,20,[],https://github.com/mruby/mruby/pull/5019,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5019#issuecomment-639302331,,Just for confirmation. Do you mean we should revert the changes done to mruby_io_test.c in 81d340e?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5019,2020-06-05T03:58:57Z,2020-06-05T04:04:37Z,2020-06-05T14:09:49Z,MERGED,True,64,19,8,https://github.com/mimaki,Merge mruby 2.1.1,20,[],https://github.com/mruby/mruby/pull/5019,https://github.com/matz,6,https://github.com/mruby/mruby/pull/5019#issuecomment-639519271,,I understand. Thank you for the report @shuujii,True,{}
mruby/mruby,https://github.com/mruby/mruby,5020,2020-06-08T05:31:51Z,2020-06-08T06:51:04Z,2020-06-08T06:52:09Z,MERGED,True,3,1,1,https://github.com/jethrodaniel,only use GEMNAME if defined in assert.rb,1,[],https://github.com/mruby/mruby/pull/5020,https://github.com/jethrodaniel,1,https://github.com/mruby/mruby/pull/5020,"Check if the constant GEMNAME is defined before use in assert.rb
This is added to prevent an undefined constant error when using
assert.rb in other environments - for example, testing CRuby.
Before
ruby -I test -r assert -e ""assert('w') { assert_true true; assert_true false }; report""
Traceback (most recent call last):
        2: from -e:1:in `<main>'
        1: from /home/user/mruby/test/assert.rb:107:in `assert'
/home/user/mruby/test/assert.rb:59:in `assertion_string': uninitialized constant GEMNAME (NameError)
        3: from -e:1:in `<main>'
        2: from /home/user/mruby/test/assert.rb:119:in `assert'
        1: from /home/user/mruby/test/assert.rb:125:in `rescue in assert'
/home/user/mruby/test/assert.rb:59:in `assertion_string': uninitialized constant GEMNAME (NameError)

After
ruby -I test -r assert -e ""assert('w') { assert_true true; assert_true false }; report""
F
Fail: w
 - Assertion[2]
    Expected false to be true.
  Total: 1
     OK: 0
     KO: 1
  Crash: 0
Warning: 0
   Skip: 0
   Time: 0.0 seconds","Check if the constant GEMNAME is defined before use in assert.rb
This is added to prevent an undefined constant error when using
assert.rb in other environments - for example, testing CRuby.
Before
ruby -I test -r assert -e ""assert('w') { assert_true true; assert_true false }; report""
Traceback (most recent call last):
        2: from -e:1:in `<main>'
        1: from /home/user/mruby/test/assert.rb:107:in `assert'
/home/user/mruby/test/assert.rb:59:in `assertion_string': uninitialized constant GEMNAME (NameError)
        3: from -e:1:in `<main>'
        2: from /home/user/mruby/test/assert.rb:119:in `assert'
        1: from /home/user/mruby/test/assert.rb:125:in `rescue in assert'
/home/user/mruby/test/assert.rb:59:in `assertion_string': uninitialized constant GEMNAME (NameError)

After
ruby -I test -r assert -e ""assert('w') { assert_true true; assert_true false }; report""
F
Fail: w
 - Assertion[2]
    Expected false to be true.
  Total: 1
     OK: 0
     KO: 1
  Crash: 0
Warning: 0
   Skip: 0
   Time: 0.0 seconds",True,{}
mruby/mruby,https://github.com/mruby/mruby,5020,2020-06-08T05:31:51Z,2020-06-08T06:51:04Z,2020-06-08T06:52:09Z,MERGED,True,3,1,1,https://github.com/jethrodaniel,only use GEMNAME if defined in assert.rb,1,[],https://github.com/mruby/mruby/pull/5020,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5020#issuecomment-640405169,"Check if the constant GEMNAME is defined before use in assert.rb
This is added to prevent an undefined constant error when using
assert.rb in other environments - for example, testing CRuby.
Before
ruby -I test -r assert -e ""assert('w') { assert_true true; assert_true false }; report""
Traceback (most recent call last):
        2: from -e:1:in `<main>'
        1: from /home/user/mruby/test/assert.rb:107:in `assert'
/home/user/mruby/test/assert.rb:59:in `assertion_string': uninitialized constant GEMNAME (NameError)
        3: from -e:1:in `<main>'
        2: from /home/user/mruby/test/assert.rb:119:in `assert'
        1: from /home/user/mruby/test/assert.rb:125:in `rescue in assert'
/home/user/mruby/test/assert.rb:59:in `assertion_string': uninitialized constant GEMNAME (NameError)

After
ruby -I test -r assert -e ""assert('w') { assert_true true; assert_true false }; report""
F
Fail: w
 - Assertion[2]
    Expected false to be true.
  Total: 1
     OK: 0
     KO: 1
  Crash: 0
Warning: 0
   Skip: 0
   Time: 0.0 seconds",Thank you!,True,{'THUMBS_UP': ['https://github.com/jethrodaniel']}
mruby/mruby,https://github.com/mruby/mruby,5021,2020-06-09T12:57:02Z,2020-06-09T13:41:45Z,2020-06-10T13:51:01Z,MERGED,True,4,13,1,https://github.com/dearblue,Update `test/t/kernel.rb`,1,[],https://github.com/mruby/mruby/pull/5021,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5021,"Remove unnecessoury assert
Fix typo","Remove unnecessoury assert
Fix typo",True,{}
mruby/mruby,https://github.com/mruby/mruby,5022,2020-06-09T12:57:44Z,2020-06-09T13:42:30Z,2020-06-10T13:51:02Z,MERGED,True,1,0,1,https://github.com/dearblue,Need `build/XXX/mrbgems/mruby-test` directory,1,[],https://github.com/mruby/mruby/pull/5022,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5022,"An error may occur when performing rake clean all or rake clean test.
The directory is needed before writing to mrbgems/mruby-test/assert.c.","An error may occur when performing rake clean all or rake clean test.
The directory is needed before writing to mrbgems/mruby-test/assert.c.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5023,2020-06-09T13:12:18Z,2020-06-11T03:21:27Z,2020-06-11T12:42:28Z,MERGED,True,1,2,1,https://github.com/dearblue,Remove `mrb_assert()` in `Module.nesting`,1,[],https://github.com/mruby/mruby/pull/5023,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5023,"The following code was causing SIGSEGV:
Module.method(:nesting).call","The following code was causing SIGSEGV:
Module.method(:nesting).call",True,{}
mruby/mruby,https://github.com/mruby/mruby,5023,2020-06-09T13:12:18Z,2020-06-11T03:21:27Z,2020-06-11T12:42:28Z,MERGED,True,1,2,1,https://github.com/dearblue,Remove `mrb_assert()` in `Module.nesting`,1,[],https://github.com/mruby/mruby/pull/5023,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5023#issuecomment-642005523,"The following code was causing SIGSEGV:
Module.method(:nesting).call",Could you please explain why it was closed?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5023,2020-06-09T13:12:18Z,2020-06-11T03:21:27Z,2020-06-11T12:42:28Z,MERGED,True,1,2,1,https://github.com/dearblue,Remove `mrb_assert()` in `Module.nesting`,1,[],https://github.com/mruby/mruby/pull/5023,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5023#issuecomment-642381888,"The following code was causing SIGSEGV:
Module.method(:nesting).call","Oops, I pushed the wrong button. I tried to merge it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5028,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/mmozeiko,2,https://github.com/mruby/mruby/pull/5028#issuecomment-650481335,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","Some more investigations show that this is MSVC codegen bug introduced in version 19.23, and is in current 19.24.
Version 19.22 generates correct code.
Minimal example code that reproduces issue: https://gcc.godbolt.org/z/GBgNYT
Top-right is correct code with v19.22
Bottom-right is bad code with v19.23
It has following two instruction that causes crash:
        mov     edx, 51966                                ; 0000cafeH
        mov     eax, DWORD PTR [rdx]

It looks that newer MSVC versions do not like how mrb_value unions work in mrb_ary_shuffle_bang function - when changing nil type to Random type something goes wrong and pointer p in mrb_value is incorrectly used.
Alternative to fully disabling optimizations is to make mrb_value r volatile:
  volatile mrb_value r = mrb_nil_value();

Then accesses to it won't trigger this bug.",True,{'THUMBS_UP': ['https://github.com/RoryO']}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/RoryO,3,https://github.com/mruby/mruby/pull/5028#issuecomment-650487760,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.",Thanks to @mmozeiko 's excellent compiler detective work I've narrowed the scope to adding volatile to r while keeping optimizations on. The reproduction test case still passes. I never thought of marking r as volatile as it seemed completely unrelated.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/RoryO,4,https://github.com/mruby/mruby/pull/5028#issuecomment-650488919,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","Oh no, adding volatile to this actually increases the scope of impact. I'm sorry I didn't do a deep_clean before rebuilding and testing locally. mrb_istruct_ptr(mrb_value) needs a volatile qualifier and every caller to mrb_istruct_ptr also needs the volatile qualifier. Although there are only a few places where we call mrb_istruct_ptr it makes me uncomfortable scattering this fix.
src\class.c
831:          *p = mrb_istruct_ptr(ss);

mrbgems\mruby-rational\src\rational.c
17:#define rational_ptr(mrb, v) (struct mrb_rational*)mrb_istruct_ptr(v)

mrbgems\mruby-random\src\random.c
154:#define random_ptr(v) (rand_state*)mrb_istruct_ptr(v)

mrbgems\mruby-inline-struct\test\inline.c
9:  char *string = (char*)mrb_istruct_ptr(self);
35:  return mrb_str_new_cstr(mrb, (const char*)mrb_istruct_ptr(self));
53:  return mrb_bool_value(((char*)mrb_istruct_ptr(object))[0] == 's');
67:  char *ptr = (char*)mrb_istruct_ptr(self);

mrbgems\mruby-complex\src\complex.c
27:#define complex_ptr(mrb, v) (struct mrb_complex*)mrb_istruct_ptr(v)

include\mruby\istruct.h
38:MRB_INLINE void* mrb_istruct_ptr(mrb_value object)

@matz what would you like to do here? We can either

Mark the function mrb_shuffle_bang as unoptimized for MSC >=1923 to whatever version fixes the compiler bug or
Introduce a conditional volatile qualifier a few places into the code with the same #if defined _MSC_VER && _MSC_VER >= 1923 logic",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/mmozeiko,5,https://github.com/mruby/mruby/pull/5028#issuecomment-650489930,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","Oh, I did not try with other compilers. Just the volatile there compiled for me on MSVC.
If you don't like putting that volatile everywhere (which is reasonable) I think you can leave it without it, but do a roundtrip through volatile like this:
   volatile mrb_value rr;
   rr = r;
   r = rr;

Do this before random_check, or maybe before mrb_nil_p. That should also prevent this bug, but I have not checked it. And it won't change type of r, so rest of functions should be fine.",True,{'THUMBS_UP': ['https://github.com/RoryO']}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/RoryO,6,https://github.com/mruby/mruby/pull/5028#issuecomment-650493495,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","Oh brilliant! Round tripping to a temporary variable does work. That limits the scope to just this function and eliminates the need for pervasive volatile qualifiers, and my previous question is now invalid. However, running rake locally for compilation works using the default configuration, while using the compile flags in build.yml returns an error error C2678: binary '=': no operator found which takes a left-hand operand of type 'volatile mrb_value'
I guess this goes back to my original question about CI. The CI compiler settings are different than what the end user gets when running rake. Should we just remove the custom compiler flags from CI?
I've been at this all day and out of steam. Let me know what you want to do and I'll do it tomorrow.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/RoryO,7,https://github.com/mruby/mruby/pull/5028#issuecomment-651416214,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","Okay, I have finally finished and updated the PR description accordingly. The CIFuzz check fails that looks the fault of upstream. Although it looks like VS 2013 32 bit has math failures. It wasn't in the configuration previously, I'll remove it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/shuujii,8,https://github.com/mruby/mruby/pull/5028#issuecomment-651522480,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","I would like to have separate PR for handling optimization bugs and changing CI configurations. I have no objection to the former, but have some comments to the latter.

It is intentional not to run tests in parallel due to the following reasons.

Prevent logs from mixing.
Rarely, tests may not be finished (it may depend on the environment). I'm wondering if Ruby crashed and it becomes like an infinite loop.


I don't think similar environments (e.g. MSVC 2019 64-bit) need to be tested on multiple CI platforms.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/RoryO,9,https://github.com/mruby/mruby/pull/5028#issuecomment-651584715,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","It is intentional not to run tests in parallel due to the following reasons.

Prevent logs from mixing.
Rarely, tests may not be finished (it may depend on the environment). I'm wondering if Ruby crashed and it becomes like an infinite loop.




Do you mean running rake with -m? I did not add it, it was already there. The only CI changes I did was putting back the compiler optimization compiler flag from Github Actions, matching what the user gets when running rake; and adding the 2019 version to Appveyor. I suspect we removed the optimization flag from Github because we ran into compiler bugs at some point, and we did not have 2019 on Appveyor, so we were blind to this bug.


I don't think similar environments (e.g. MSVC 2019 64-bit) need to be tested on multiple CI platforms.


I agree. I've used the Windows Github actions platform and found it poor compared to Appveyor. I am in favor of removing the Windows Github action and make the Appveyor build the source for Windows.
I can create another PR which

Removes the use of rake -m on CI
Removes the Windows Github action

Do you agree?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/shuujii,10,https://github.com/mruby/mruby/pull/5028#issuecomment-651647168,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","Removes the use of rake -m on CI


I mean running tests (not running builds) with rake -m.
https://github.com/mruby/mruby/pull/5028/files#diff-180360612c6b8c4ed830919bbb4dd459L38-R48
Originally the builds were run in parallel (rake -m), but the tests were not run in parallel (rake -E $stdout.sync=true test).


Removes the Windows Github action


I don't have a strong opinion on removing it from either AppVeyor or GitHub Actions if the duplication is eliminated. However, AppVeyor can not execute jobs in parallel, so I am a little worried that the total CI time will increase steadily as the number of jobs increases.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/RoryO,11,https://github.com/mruby/mruby/pull/5028#issuecomment-652003904,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","Removes the use of rake -m on CI


I mean running tests (not running builds) with rake -m.
https://github.com/mruby/mruby/pull/5028/files#diff-180360612c6b8c4ed830919bbb4dd459L38-R48

Oh I see! I was making the builds use exactly the same parameters, as shown in the GH action command
https://github.com/mruby/mruby/pull/5028/files#diff-898e737ee4e56ba042bda31764bed49eR101
Which is relevant to



Removes the Windows Github action


I don't have a strong opinion on removing it from either AppVeyor or GitHub Actions if the duplication is eliminated. However, AppVeyor can not execute jobs in parallel, so I am a little worried that the total CI time will increase steadily as the number of jobs increases.

Well that's a different issue. We test all MSC compilers back to the first 2013 version when MS initially made the compilers free. It looks like we only use current LTS supported Ubuntu compilers; so the last 5 years. If we support only the current MSC compiler year and the previous release, 2019 and 2017, that cuts it down to four builds. So revising the proposal


Remove -m for tests


Remove GH Windows action, change Appveyor to use 2019 and 2017 compilers


Since we're on the subject, what's the Travis build for? Was it being replaced by Github Actions and wasn't removed yet?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/matz,12,https://github.com/mruby/mruby/pull/5028#issuecomment-652186221,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","We are not going to remove TravisCI soon. For some reason, Travis and GitHub Actions behave differently. Maybe in the future.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5028,2020-06-26T22:37:45Z,2020-06-30T01:41:27Z,2020-07-01T22:31:22Z,MERGED,True,61,27,3,https://github.com/RoryO,Work around MSC optimization generating non functional code with Array#shuffle,11,[],https://github.com/mruby/mruby/pull/5028,https://github.com/RoryO,13,https://github.com/mruby/mruby/pull/5028#issuecomment-652651203,"Quite the interesting issue here.
Summary of changes


Work around MSC and MSC++ compiler bug where it would optimize away a union access which may contain a static value in random.c


Updated appveyor config, added MS 2019 compilers, and uses the highest Ruby version available on the appveyor image


Removed special compiler flags in github actions MSC build


Description
Currently the tests with master fails with the Microsoft compiler v19 with optimizations enabled. This only happens with MSC and from what I can determine only with MSC > 19. The simplest reproduction is the Ruby expression from the Random test
[1, 2].shuffle Random.new
Passing a Random instance to an Array causes a segfault. I have some insight as to what happens though I do not know how to fix it besides disabling optimization entirely for the mrb_ary_shuffle_bang C function.
With optimizations enabled the MSC compiler infers some hard coded values incorrectly and stores them in registers. Code down the line treats the values in the registers as pointers which leads to a crash. I've tried expanding all the macros out, setting intermediate values as a part of the macro expansion, and marking the suspect variables as volatile. Using declspec(noinline) on all relevant functions it still does not fix it. Nothing I know how to do forces the compiler to stop over optimizing and generating hard numbers. However, I am no expert and I am well out of my depth at this point trying to debug optimized code.
More in depth, the MSC compiler hard sets register rbx to a literal 0x18 value when casting to rand_state *. This causes the pointer to go wild later in random_rand trying to follow a pointer to memory address 0x18


It also setsrsi to 0x2 breaking C calling conventions and overwriting the pointer to the mrb_state* stored inrsi.","Thank you. @matz, do you have an opinion on how far back we should support Microsoft compilers?
e: Microsoft provides bug fix support for five years from a compiler release date. I think it's best following that https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing",True,{}
mruby/mruby,https://github.com/mruby/mruby,5029,2020-07-05T03:45:59Z,2020-07-05T13:04:26Z,2020-07-05T13:04:26Z,MERGED,True,4,3,1,https://github.com/RoryO,"object_id of true, false, and undef are all 0",1,[],https://github.com/mruby/mruby/pull/5029,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5029,"Currently it looks like a bug where object_id of true and false is both zero. It looks like we expect the macro MakeID2 as a bit shift << instead of xor ^.
This uses hardcoded values similar to how C Ruby uses a bitshift for special object names. I would prefer calculating the actual intptr_t of nil, false and true instances in the mrb_state though from what I can tell there aren't actual instances of these special values created? We also use 0 for free/undefined types and false. I did not change that, though I can if it's felt safe.
Before
> true.object_id
 => 0
> false.object_id
 => 0
> nil.object_id
 => 1

After
> true.object_id
 => 3
> false.object_id
 => 0
> nil.object_id
 => 4","Currently it looks like a bug where object_id of true and false is both zero. It looks like we expect the macro MakeID2 as a bit shift << instead of xor ^.
This uses hardcoded values similar to how C Ruby uses a bitshift for special object names. I would prefer calculating the actual intptr_t of nil, false and true instances in the mrb_state though from what I can tell there aren't actual instances of these special values created? We also use 0 for free/undefined types and false. I did not change that, though I can if it's felt safe.
Before
> true.object_id
 => 0
> false.object_id
 => 0
> nil.object_id
 => 1

After
> true.object_id
 => 3
> false.object_id
 => 0
> nil.object_id
 => 4",True,{}
mruby/mruby,https://github.com/mruby/mruby,5030,2020-07-06T03:02:56Z,2020-07-11T04:58:41Z,2020-07-12T07:59:57Z,MERGED,True,2,0,1,https://github.com/RoryO,Fix compiling mruby-io on msc with UTF8 enabled,2,[],https://github.com/mruby/mruby/pull/5030,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5030,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5030,2020-07-06T03:02:56Z,2020-07-11T04:58:41Z,2020-07-12T07:59:57Z,MERGED,True,2,0,1,https://github.com/RoryO,Fix compiling mruby-io on msc with UTF8 enabled,2,[],https://github.com/mruby/mruby/pull/5030,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5030#issuecomment-656989921,,PR merged. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5030,2020-07-06T03:02:56Z,2020-07-11T04:58:41Z,2020-07-12T07:59:57Z,MERGED,True,2,0,1,https://github.com/RoryO,Fix compiling mruby-io on msc with UTF8 enabled,2,[],https://github.com/mruby/mruby/pull/5030,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5030#issuecomment-657188626,,"Sorry, my confirmation wasn't enough.
The current MinGW seems to define ssize_t only if there is a special preprocessor definition in advance.
Therefore, I think this PR is generally okay.
However, Legacy MinGW on FreeBSD had its own ssize_t.
Also, maybe MinGW-w64 also has its own.
I about this will issue a new PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5031,2020-07-06T04:04:37Z,2020-07-08T01:09:45Z,2020-07-08T04:18:49Z,MERGED,True,37,42,2,https://github.com/RoryO,Update Windows CI settings,7,[],https://github.com/mruby/mruby/pull/5031,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5031,"Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?","Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5031,2020-07-06T04:04:37Z,2020-07-08T01:09:45Z,2020-07-08T04:18:49Z,MERGED,True,37,42,2,https://github.com/RoryO,Update Windows CI settings,7,[],https://github.com/mruby/mruby/pull/5031,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5031#issuecomment-654127092,"Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?",Did you give up rake -m (multi-tasking) to build? Any specific reason?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5031,2020-07-06T04:04:37Z,2020-07-08T01:09:45Z,2020-07-08T04:18:49Z,MERGED,True,37,42,2,https://github.com/RoryO,Update Windows CI settings,7,[],https://github.com/mruby/mruby/pull/5031,https://github.com/RoryO,3,https://github.com/mruby/mruby/pull/5031#issuecomment-654458544,"Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?","@shuujii has a good point on #5028 (#5028 (comment)) where running tests with -m makes interpreting test output difficult as all the output is mixed. I tried separating the build command using rake -m and the test command which does not use -m. However, building with -m and then testing without -m leads to some strange segfaults on all nix system, seen in this commit b3dace6
I can put the test back as one line using -m as that is what it was before. One, it is strange how the build process with -m causes a segfault. Two, I think it is a good point that running test with multitask makes output hard to figure out
I did turn on -v with tests though so we can see exactly what tests failed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5031,2020-07-06T04:04:37Z,2020-07-08T01:09:45Z,2020-07-08T04:18:49Z,MERGED,True,37,42,2,https://github.com/RoryO,Update Windows CI settings,7,[],https://github.com/mruby/mruby/pull/5031,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5031#issuecomment-654541462,"Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?","However, building with -m and then testing without -m leads to some strange segfaults on all nix system, seen in this commit b3dace6

It may be because MRUBY_CONFIG envvar is not set to the build action.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5031,2020-07-06T04:04:37Z,2020-07-08T01:09:45Z,2020-07-08T04:18:49Z,MERGED,True,37,42,2,https://github.com/RoryO,Update Windows CI settings,7,[],https://github.com/mruby/mruby/pull/5031,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/5031#issuecomment-654542944,"Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?","It may be because MRUBY_CONFIG envvar is not set to the build action.

Sorry, it's not just MRUBY_CONFIG. It's also CC, CXX, CFLAGS, etc.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5031,2020-07-06T04:04:37Z,2020-07-08T01:09:45Z,2020-07-08T04:18:49Z,MERGED,True,37,42,2,https://github.com/RoryO,Update Windows CI settings,7,[],https://github.com/mruby/mruby/pull/5031,https://github.com/RoryO,6,https://github.com/mruby/mruby/pull/5031#issuecomment-654587619,"Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?","🤦 You're right, I read the yaml file wrong. I thought the env key applied to all of that step, not just the run step. That will fix it.
Apologies if there is notification spam as I push more commits testing this. Not possible working with CI otherwise.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5031,2020-07-06T04:04:37Z,2020-07-08T01:09:45Z,2020-07-08T04:18:49Z,MERGED,True,37,42,2,https://github.com/RoryO,Update Windows CI settings,7,[],https://github.com/mruby/mruby/pull/5031,https://github.com/RoryO,7,https://github.com/mruby/mruby/pull/5031#issuecomment-655053479,"Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?",Thanks @shuujii that was the issue. Everything works now.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5031,2020-07-06T04:04:37Z,2020-07-08T01:09:45Z,2020-07-08T04:18:49Z,MERGED,True,37,42,2,https://github.com/RoryO,Update Windows CI settings,7,[],https://github.com/mruby/mruby/pull/5031,https://github.com/matz,8,https://github.com/mruby/mruby/pull/5031#issuecomment-655189658,"Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?",@RoryO can you remove -v from tests? It's too verbose when I look into logs. I will use -v on my box.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5031,2020-07-06T04:04:37Z,2020-07-08T01:09:45Z,2020-07-08T04:18:49Z,MERGED,True,37,42,2,https://github.com/RoryO,Update Windows CI settings,7,[],https://github.com/mruby/mruby/pull/5031,https://github.com/matz,9,https://github.com/mruby/mruby/pull/5031#issuecomment-655220586,"Following from discussion on #5028

Does not use rake -m for avoiding mixing output from rake tasks. Further, it appears building with -m introduces other issues while performing separate build and test tasks. The project builds in less than a minute so I do not think the parallelization helps.
Removes MSC build from github actions
Removes VS 2013 from Appveyor matrix as 2013 is no longer supported by MS (https://docs.microsoft.com/en-us/visualstudio/releases/2019/servicing)

@shuujii I think this addresses your comments?",Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5032,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5032#issuecomment-659779681,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","I missed that ObjectSpace.memsize_of does not recurse. It was originally designed to analyze single object allocation.
Do we really need recurring enhancement for mruby?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/RoryO,3,https://github.com/mruby/mruby/pull/5032#issuecomment-659795189,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.",If you wish I can remove it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5032#issuecomment-659809982,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","I will do some fixes and refactoring to improve compatibility with CRuby. I am working on it.
Thank you!",True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/RoryO,5,https://github.com/mruby/mruby/pull/5032#issuecomment-659828681,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","Please show me if there's anything I can do to help, including working on C Ruby as well. I do not wish to burden!",True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/matz,6,https://github.com/mruby/mruby/pull/5032#issuecomment-659829277,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.",Never mind. It's fun!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/shuujii,7,https://github.com/mruby/mruby/pull/5032#issuecomment-660591870,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","I've noticed that ObjectSpace.memsize_of doesn't exist in JRuby and so on. Do we need to maintain incompatible features among Ruby implementations in the mruby repository?
ObjectSpace.memsize_of may not return an exact value, so I personally find it difficult to use. Therefore, I feel it's better to provide it as an external gem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/matz,8,https://github.com/mruby/mruby/pull/5032#issuecomment-660607838,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.",Separating to a gem. Hmm. OK.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/RoryO,9,https://github.com/mruby/mruby/pull/5032#issuecomment-660703259,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","ObjectSpace.memsize_of may not return an exact value

Can you provide some examples? I wanted to make it accurate along with matz' corrections. I think this is an important tool for an embedded project.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/matz,10,https://github.com/mruby/mruby/pull/5032#issuecomment-660717041,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","I think he meant the result does not count alignment gaps nor allocation overhead, which are not easy to calculate.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/matz,11,https://github.com/mruby/mruby/pull/5032#issuecomment-660717618,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","I made a separated gem for memsize_of. The diff is here:
https://gist.github.com/matz/0ece6c6fbeeb7609dd44e894f276ee7e
If I commit this change, we will lose @RoryO's name and history from the repository.
Maybe he can commit the above change as a PR.",True,{'THUMBS_UP': ['https://github.com/RoryO']}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/shuujii,12,https://github.com/mruby/mruby/pull/5032#issuecomment-661045303,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","ObjectSpace.memsize_of may not return an exact value

Can you provide some examples? I wanted to make it accurate along with matz' corrections. I think this is an important tool for an embedded project.

Here are some examples. I'm not sure what value users typically expect or appropriate for the return value of ObjectSpace.memsize_of.

Currently, the method returns 0 for Symbol. However, creating one non-inline symbol uses one slot in mrb_state::symtbl (which may also uses a slot in mrb_state::symhash). Also, if the symbol name is not ro_data, allocate a buffer for it.
Currently, the method returns RVALUE size for shared String. In the case of shared Strings, I think shared buffer size (including size of mrb_shared_string) should be accounted for in one of the objects that share the same buffer. However, I don't think it's obvious which objects should be accounted for. Information may need to be added to RString to identify the object, even if it is clear. I don't think it's desirable to increase runtime costs and so on just for the feature.
Currently, the method retuerns 0 for Fixnum. However, it may be using a slot in literal pool.


I made a separated gem for memsize_of.

My intention was to provide it in a different repository than mruby/mruby (e.g. RoryO/mruby-os-memsize).
I personally feel that return value definition of the method is unclear. The meaning of the value may change due to changes in internal implementation because it strongly depends on the internal implementation.
Still, the methods may have some uses depending on the use case, but I'm a little wondering if it is necessary to officially provide such a seemingly unclear feature (also, I'm a little worried that the maintenance cost seems to be high against the frequency of use).
I agree with separating gems when maintaining in mruby/mruby because the method is required require 'objspace' in CRuby.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5032,2020-07-10T22:38:58Z,2020-07-16T22:10:59Z,2020-07-22T13:44:45Z,MERGED,True,427,0,9,https://github.com/RoryO,Add ObjectSpace.memsize_of,12,[],https://github.com/mruby/mruby/pull/5032,https://github.com/matz,13,https://github.com/mruby/mruby/pull/5032#issuecomment-661429079,"Hello, this is my first significant contribution. I hope the review is not a burden.
This implements the mri method of ObjectSpace.memsize_of. With mruby we care a great deal about tracking resource use therefore I feel this is useful. All of the code is new, none copied. The mruby structures differ from C Ruby structures so existing C Ruby code isn't useful.
One difference between this implementation and the mri one is an addition of a recurse parameter. Specifying ObjectSpace.memsize_of obj, recurse: true will recursively descend into collection members and instance variables. Do let me know if I should not include this option and I will remove it.
Additionally, I added a protocol for MRB_TT_DATA objects. If a data object implements the memsize method this code will call that method and use it's return value for the size total. This allows a chance for including data objects into memory calculations, a gap I noticed from mri.","Considering the fact memsize_of is that highly depends on the mruby internal, it should be maintained mainly by the core developer (i.e. me).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5033,2020-07-11T07:40:24Z,2020-07-11T07:43:34Z,2020-07-11T12:16:01Z,MERGED,True,0,2,1,https://github.com/dearblue,Remove the prototype declaration `mrb_free_backtrace()`,1,[],https://github.com/mruby/mruby/pull/5033,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5033,This function is removed by 9644ad5.,This function is removed by 9644ad5.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5034,2020-07-12T08:23:06Z,2020-07-12T23:47:02Z,2020-07-13T12:51:18Z,MERGED,True,3,0,1,https://github.com/dearblue,Fix `ssize_t` for mingw; ref #5030,1,[],https://github.com/mruby/mruby/pull/5034,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5034,Legacy MinGW and MinGW-w64 had own ssize_t.,Legacy MinGW and MinGW-w64 had own ssize_t.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5036,2020-07-14T11:11:32Z,2020-07-15T05:03:10Z,2020-10-19T06:41:26Z,MERGED,True,12,14,2,https://github.com/shuujii,Fix `${build_dir}/mrbgems/gem_init.c` generation condition; ref #5010,1,[],https://github.com/mruby/mruby/pull/5036,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5036,"The ${build_dir}/mrbgems/gem_init.c generation condition has been changed
at #5010, but it is somewhat insufficient, for example, there was a problem
with rake && rake test, which was also regenerated in rake test.","The ${build_dir}/mrbgems/gem_init.c generation condition has been changed
at #5010, but it is somewhat insufficient, for example, there was a problem
with rake && rake test, which was also regenerated in rake test.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5037,2020-07-14T12:50:22Z,2020-07-15T00:57:49Z,2020-10-19T06:41:29Z,MERGED,True,2,2,1,https://github.com/shuujii,Set `STDOUT.sync=true` when testing on AppVeyor [skip travis],1,[],https://github.com/mruby/mruby/pull/5037,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5037,This issue is a correction error at 5a682bf.,This issue is a correction error at 5a682bf.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5038,2020-07-16T14:29:30Z,2020-07-16T22:12:32Z,2020-07-24T03:06:47Z,MERGED,True,8,1,2,https://github.com/dearblue,Fixed shift width for `MRB_ENV_SET_BIDX()`,1,[],https://github.com/mruby/mruby/pull/5038,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5038,ref c07f24c and close #5035,ref c07f24c and close #5035,True,{}
mruby/mruby,https://github.com/mruby/mruby,5040,2020-07-18T03:22:16Z,2020-07-18T21:43:14Z,2020-07-18T23:39:14Z,MERGED,True,47,1,2,https://github.com/RoryO,Add ObjectSpace.memsize_of_all,3,[],https://github.com/mruby/mruby/pull/5040,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5040,Much simpler and I hope less error prone than before.,Much simpler and I hope less error prone than before.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5040,2020-07-18T03:22:16Z,2020-07-18T21:43:14Z,2020-07-18T23:39:14Z,MERGED,True,47,1,2,https://github.com/RoryO,Add ObjectSpace.memsize_of_all,3,[],https://github.com/mruby/mruby/pull/5040,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5040#issuecomment-660553883,Much simpler and I hope less error prone than before.,"I updated a little.

memsize_of_all measures the size of all instances of the class and its subclass
the argument of memsize_of_all is optional",True,{}
mruby/mruby,https://github.com/mruby/mruby,5040,2020-07-18T03:22:16Z,2020-07-18T21:43:14Z,2020-07-18T23:39:14Z,MERGED,True,47,1,2,https://github.com/RoryO,Add ObjectSpace.memsize_of_all,3,[],https://github.com/mruby/mruby/pull/5040,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5040#issuecomment-660554028,Much simpler and I hope less error prone than before.,"@RoryO Thank you for the contribution. Would you like to add your name to the AUTHORS file?
If so, send us PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5041,2020-07-19T22:42:44Z,2020-07-19T23:23:47Z,2020-07-19T23:35:26Z,MERGED,True,322,82,6,https://github.com/RoryO,Extract memsize to gem,2,[],https://github.com/mruby/mruby/pull/5041,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5041,In the future I will keep in mind the option of using new gems for adding functionality.,In the future I will keep in mind the option of using new gems for adding functionality.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5045,2020-07-21T15:41:25Z,2020-07-24T03:02:06Z,2020-07-24T03:15:21Z,MERGED,True,23,235,6,https://github.com/dearblue,Improve `mruby-os-memsize`,6,[],https://github.com/mruby/mruby/pull/5045,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5045,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5049,2020-07-25T09:31:35Z,2020-07-25T10:40:05Z,2020-10-19T06:41:30Z,MERGED,True,1,1,1,https://github.com/shuujii,Use type tag for hash code in `ht_hash_func()`,1,[],https://github.com/mruby/mruby/pull/5049,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5049,"The function corresponding to ht_hash_func() was as follows in the days of
khash implementation (before d78acc7).
mrb_hash_ht_hash_func(mrb_state *mrb, mrb_value key)
{
  enum mrb_vtype t = mrb_type(key);
  ...
  switch (t) {
  ...
  default:
    hv = mrb_funcall(mrb, key, ""hash"", 0);
    h = (khint_t)t ^ (khint_t)mrb_fixnum(hv);
    break;
  }
  ...
}
When switched to the segmented list implementation (d78acc7), this function
was changed as follows.
sg_hash_func(mrb_state *mrb, seglist *t, mrb_value key)
{
  enum mrb_vtype tt = mrb_type(key);
  ...
  switch (tt) {
  ...
  default:
    hv = mrb_funcall(mrb, key, ""hash"", 0);
    h = (size_t)t ^ (size_t)mrb_fixnum(hv);
    break;
  }
  ...
}
Since the argument t was added, the variable for type tag was changed from
t to tt, but the variable used in the expression of h remained t.
Probably this is an omission of change, so fixed it.","The function corresponding to ht_hash_func() was as follows in the days of
khash implementation (before d78acc7).
mrb_hash_ht_hash_func(mrb_state *mrb, mrb_value key)
{
  enum mrb_vtype t = mrb_type(key);
  ...
  switch (t) {
  ...
  default:
    hv = mrb_funcall(mrb, key, ""hash"", 0);
    h = (khint_t)t ^ (khint_t)mrb_fixnum(hv);
    break;
  }
  ...
}
When switched to the segmented list implementation (d78acc7), this function
was changed as follows.
sg_hash_func(mrb_state *mrb, seglist *t, mrb_value key)
{
  enum mrb_vtype tt = mrb_type(key);
  ...
  switch (tt) {
  ...
  default:
    hv = mrb_funcall(mrb, key, ""hash"", 0);
    h = (size_t)t ^ (size_t)mrb_fixnum(hv);
    break;
  }
  ...
}
Since the argument t was added, the variable for type tag was changed from
t to tt, but the variable used in the expression of h remained t.
Probably this is an omission of change, so fixed it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5049,2020-07-25T09:31:35Z,2020-07-25T10:40:05Z,2020-10-19T06:41:30Z,MERGED,True,1,1,1,https://github.com/shuujii,Use type tag for hash code in `ht_hash_func()`,1,[],https://github.com/mruby/mruby/pull/5049,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5049#issuecomment-663840281,"The function corresponding to ht_hash_func() was as follows in the days of
khash implementation (before d78acc7).
mrb_hash_ht_hash_func(mrb_state *mrb, mrb_value key)
{
  enum mrb_vtype t = mrb_type(key);
  ...
  switch (t) {
  ...
  default:
    hv = mrb_funcall(mrb, key, ""hash"", 0);
    h = (khint_t)t ^ (khint_t)mrb_fixnum(hv);
    break;
  }
  ...
}
When switched to the segmented list implementation (d78acc7), this function
was changed as follows.
sg_hash_func(mrb_state *mrb, seglist *t, mrb_value key)
{
  enum mrb_vtype tt = mrb_type(key);
  ...
  switch (tt) {
  ...
  default:
    hv = mrb_funcall(mrb, key, ""hash"", 0);
    h = (size_t)t ^ (size_t)mrb_fixnum(hv);
    break;
  }
  ...
}
Since the argument t was added, the variable for type tag was changed from
t to tt, but the variable used in the expression of h remained t.
Probably this is an omission of change, so fixed it.",Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5050,2020-07-26T04:22:48Z,2020-07-26T04:56:27Z,2020-08-08T05:04:44Z,MERGED,True,1,7,1,https://github.com/dearblue,Update document for `ObjectSpace.memsize_of` [ci skip],1,[],https://github.com/mruby/mruby/pull/5050,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5050,The recurse keyword is removed by f00657e.,The recurse keyword is removed by f00657e.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5051,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5051#issuecomment-663991030,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","Could you explain the intention behind the pull-request?
Actually those static_assert lines are introduced with the past PR without considering much.
Do we really need it?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5051#issuecomment-663998777,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","I want to check the size of the structure at compile time.
The existing mrb_static_assert() takes two arguments, but the motivation is that it's hard to think of the message and you want to omit it.
In a commit a week ago, when using mrb_static_assert() the same expression and message was applied.
dearblue@6c4ed12#diff-0508f329afb350b1d3332d25d56166adR3214
   mrb_static_assert(sizeof(struct mrb_irep_catch_hander) == 7, ""sizeof(struct mrb_irep_catch_hander) == 7"");",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5051#issuecomment-669745094,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","After some consideration, I decided to remove static_assert for several reasons:

those assertions are incomplete. We can find those issues with ASAN as well.
the current fallback implementation uses dynamic assertion, which does not really work like static_assert

So, I will remove the lines that use mrb_static_assert from the core and bundled gems, and make fallback implementation empty for compatibility.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/5051#issuecomment-670483358,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","There is a way to emulate a static_assert that is evaluated at compile time.
#define _mrb_static_assert_cat0(a, b) a##b
#define _mrb_static_assert_cat(a, b) _mrb_static_assert_cat0(a, b)
#ifdef __COUNTER__
# define _mrb_static_assert_id(prefix) _mrb_static_assert_cat(prefix, __COUNTER__)
#else
# define _mrb_static_assert_id(prefix) _mrb_static_assert_cat(prefix, __LINE__)
#endif
#define mrb_static_assert(exp, str) typedef char _mrb_static_assert_id(_mrb_static_assert_)[(exp) ? 1 : -1]

mrb_static_assert(sizeof(RVALUE) <= sizeof(void*) * 6, ""RVALUE size must be within 6 words"");
Since assertions themselves are useful, they should at least be enabled in the environment with static_assert, rather than removed, I think.
In particular, I think the above RVALUE size check is very useful since it is often unintentionally violated.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/matz,6,https://github.com/mruby/mruby/pull/5051#issuecomment-670797638,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","I tried your version of static_assert but I get the following warnings for every mrb_static_assert.
warning: typedef ‘_mrb_static_assert_0’ locally defined but not used [-Wunused-local-typedefs]

I will try different versions from the Internet.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/shuujii,7,https://github.com/mruby/mruby/pull/5051#issuecomment-670816231,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","I tried your version of static_assert but I get the following warnings for every mrb_static_assert.
warning: typedef ‘_mrb_static_assert_0’ locally defined but not used [-Wunused-local-typedefs]


Could you please tell me about the followings, as it doesn't reproduce in my environment?

What is the compiler version?
Will the warning be given even if used outside of functions?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/matz,8,https://github.com/mruby/mruby/pull/5051#issuecomment-670822607,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","gcc -v says gcc version 9.3.0 (Ubuntu 9.3.0-10ubuntu2). I compiled with -x c++ -std=gnu++03.
if mrb_static_assert() is used outside of functions, it doesn't warn anything.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/shuujii,9,https://github.com/mruby/mruby/pull/5051#issuecomment-670829236,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","Thank you for your reply.
Maybe the warning can be suppressed by _Pragma. If anything, I personally think it's better to be able to use mrb_static_assert outside of functions as well as static_assert.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/matz,10,https://github.com/mruby/mruby/pull/5051#issuecomment-670829425,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","I understand. If there's any way we can use static_assert() outside of functions without warnings, I'd love to merge.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/dearblue,11,https://github.com/mruby/mruby/pull/5051#issuecomment-671026248,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.","@shuujii

#define mrb_static_assert(exp, str) typedef char _mrb_static_assert_id(_mrb_static_assert_)[(exp) ? 1 : -1]

Using struct instead of typedef seems to get rid of the warning.
#define mrb_static_assert(exp, str) struct _mrb_static_assert_id(_mrb_static_assert_) { char x[(exp) ? 1 : -1]; }
I confirmed with gcc 6, 7, 8, 9, 10, 11 and clang 6, 7, 8, 9, 10, 11.
Do you make a pull request?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5051,2020-07-26T04:27:13Z,2020-08-06T07:00:16Z,2020-08-09T10:41:25Z,CLOSED,False,6,2,1,https://github.com/dearblue,Add `mrb_static_assert1()` macro,1,[],https://github.com/mruby/mruby/pull/5051,https://github.com/shuujii,12,https://github.com/mruby/mruby/pull/5051#issuecomment-671035824,"This macro function is a variant of mrb_static_assert() that takes only one argument.

I'll use it in a patch that removes ecall() that I think I can suggest in the near future.",@dearblue Great! I will make a pull request. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5052,2020-07-26T04:28:05Z,2020-08-05T08:38:52Z,2020-08-08T05:04:48Z,MERGED,True,30,100,1,https://github.com/dearblue,Extend the `cipush()` and `cipop()` functions,1,[],https://github.com/mruby/mruby/pull/5052,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5052,"Returns the updated call info.
Unify the processing around cipush().
cipop() restores the stack.","Returns the updated call info.
Unify the processing around cipush().
cipop() restores the stack.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5052,2020-07-26T04:28:05Z,2020-08-05T08:38:52Z,2020-08-08T05:04:48Z,MERGED,True,30,100,1,https://github.com/dearblue,Extend the `cipush()` and `cipop()` functions,1,[],https://github.com/mruby/mruby/pull/5052,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5052#issuecomment-663991785,"Returns the updated call info.
Unify the processing around cipush().
cipop() restores the stack.","From those three changes, the first and the last ones look OK to me.
I am a little bit concerned about the middle one. It's shorter but harder to read. Caller arguments do not have names, so you have to remember the meaning of those 8 arguments. I know it has a positive effect that prevents initialization errors, but still. Any opinion?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5052,2020-07-26T04:28:05Z,2020-08-05T08:38:52Z,2020-08-08T05:04:48Z,MERGED,True,30,100,1,https://github.com/dearblue,Extend the `cipush()` and `cipop()` functions,1,[],https://github.com/mruby/mruby/pull/5052,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5052#issuecomment-664004335,"Returns the updated call info.
Unify the processing around cipush().
cipop() restores the stack.","The operation of cipush() and cipop() was one of the parts that was hard to understand when I started reading src/vm.c.
It meant that it was hard to figure out which range in the code was involved.
If it is said that it is ""just getting used to"", it is until that point, but I think that it is easier to understand if it is organized.
Should I reduce the arguments to about cipush(mrb_state *mrb, int push_stacks, int acc)?
Or are there still more?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5052,2020-07-26T04:28:05Z,2020-08-05T08:38:52Z,2020-08-08T05:04:48Z,MERGED,True,30,100,1,https://github.com/dearblue,Extend the `cipush()` and `cipop()` functions,1,[],https://github.com/mruby/mruby/pull/5052,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5052#issuecomment-669063419,"Returns the updated call info.
Unify the processing around cipush().
cipop() restores the stack.","After some consideration, I decided to accept this PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5058,2020-08-04T13:13:27Z,2020-08-04T21:51:55Z,2020-08-08T05:04:43Z,MERGED,True,3,3,1,https://github.com/dearblue,Improve `rake benchmark`,1,[],https://github.com/mruby/mruby/pull/5058,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5058,"Use POSIX format instead of GNU extension for time command.
For example FreeBSD's time(1) does not have GNU extensions available.
Sort benchmark/bm_*.rb.
This is because the order of the bar graph cannot be uniquely determined depending on the result of Dir.glob.","Use POSIX format instead of GNU extension for time command.
For example FreeBSD's time(1) does not have GNU extensions available.
Sort benchmark/bm_*.rb.
This is because the order of the bar graph cannot be uniquely determined depending on the result of Dir.glob.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5058,2020-08-04T13:13:27Z,2020-08-04T21:51:55Z,2020-08-08T05:04:43Z,MERGED,True,3,3,1,https://github.com/dearblue,Improve `rake benchmark`,1,[],https://github.com/mruby/mruby/pull/5058,None,2,https://github.com/mruby/mruby/pull/5058#issuecomment-668588477,"Use POSIX format instead of GNU extension for time command.
For example FreeBSD's time(1) does not have GNU extensions available.
Sort benchmark/bm_*.rb.
This is because the order of the bar graph cannot be uniquely determined depending on the result of Dir.glob.","DeepCode failed to analyze this pull request
Something went wrong despite trying multiple times, sorry about that.
Please comment this pull request with ""Retry DeepCode"" to manually retry, or contact us so that a human can look into the issue.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5059,2020-08-06T08:45:24Z,2020-08-06T08:47:37Z,2020-08-06T08:47:37Z,MERGED,True,16,16,5,https://github.com/mimaki,Merge mruby 2.1.2,7,[],https://github.com/mruby/mruby/pull/5059,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/5059,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5060,2020-08-08T04:55:34Z,2020-08-08T06:59:54Z,2020-09-21T11:57:31Z,CLOSED,False,487,293,13,https://github.com/dearblue,Improve `ensure`,6,[],https://github.com/mruby/mruby/pull/5060,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5060,"Summary
Details are described in the commit message, but if there are any deficiencies, please point out.

Remove the function ecall()
Extend mruby binary format
Remove OP_PUSHERR, OP_POPERR, OP_EPUSH and OP_EPOP
Extend OP_EXCEPT
Extend OP_RAISE and rename to OP_RAISEIF
Added instruction OP_JUW
Extend RBreak object (with ""tag"")
Resolves #1888

Binary size
The binary was built with the following build_config.rb.
MRuby::Build.new do
  toolchain ""gcc""
  gembox ""full-core""
  enable_test
end
1.9742bce19/bin/mruby is currentry master (9742bce), 2.925422003/bin/mruby is this pull request (9254220).
% strip -so mruby.1 1.9742bce19/bin/mruby
% strip -so mruby.2 2.925422003/bin/mruby
% ll mruby.1 mruby.2
-rwxr-xr-x  1 dearblue  wheel  844264  8月  8 11:37 mruby.1
-rwxr-xr-x  1 dearblue  wheel  845096  8月  8 11:37 mruby.2
Benchmark
Result by rake MRUBY_CONFIG=benchmark/build_config_boxing.rb benchmark.
I think that it is a change in the degree of error.

Currentry master (9742bce)

This pull request (9254220)


Heap usage
It is measured with valgrind --tool=massif.
It is built by build_config.rb of ""Binary size"" above.
mrbtest
There is not much difference in peak value.
At some point this pull request seems to show more memory usage, but I don't know the details (order of test items?).

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mrbtest
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)


mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
Please note that this is a micro-benchmark, so in practice there will be no such difference.

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)","Summary
Details are described in the commit message, but if there are any deficiencies, please point out.

Remove the function ecall()
Extend mruby binary format
Remove OP_PUSHERR, OP_POPERR, OP_EPUSH and OP_EPOP
Extend OP_EXCEPT
Extend OP_RAISE and rename to OP_RAISEIF
Added instruction OP_JUW
Extend RBreak object (with ""tag"")
Resolves #1888

Binary size
The binary was built with the following build_config.rb.
MRuby::Build.new do
  toolchain ""gcc""
  gembox ""full-core""
  enable_test
end
1.9742bce19/bin/mruby is currentry master (9742bce), 2.925422003/bin/mruby is this pull request (9254220).
% strip -so mruby.1 1.9742bce19/bin/mruby
% strip -so mruby.2 2.925422003/bin/mruby
% ll mruby.1 mruby.2
-rwxr-xr-x  1 dearblue  wheel  844264  8月  8 11:37 mruby.1
-rwxr-xr-x  1 dearblue  wheel  845096  8月  8 11:37 mruby.2
Benchmark
Result by rake MRUBY_CONFIG=benchmark/build_config_boxing.rb benchmark.
I think that it is a change in the degree of error.

Currentry master (9742bce)

This pull request (9254220)


Heap usage
It is measured with valgrind --tool=massif.
It is built by build_config.rb of ""Binary size"" above.
mrbtest
There is not much difference in peak value.
At some point this pull request seems to show more memory usage, but I don't know the details (order of test items?).

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mrbtest
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)


mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
Please note that this is a micro-benchmark, so in practice there will be no such difference.

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5060,2020-08-08T04:55:34Z,2020-08-08T06:59:54Z,2020-09-21T11:57:31Z,CLOSED,False,487,293,13,https://github.com/dearblue,Improve `ensure`,6,[],https://github.com/mruby/mruby/pull/5060,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5060#issuecomment-670826828,"Summary
Details are described in the commit message, but if there are any deficiencies, please point out.

Remove the function ecall()
Extend mruby binary format
Remove OP_PUSHERR, OP_POPERR, OP_EPUSH and OP_EPOP
Extend OP_EXCEPT
Extend OP_RAISE and rename to OP_RAISEIF
Added instruction OP_JUW
Extend RBreak object (with ""tag"")
Resolves #1888

Binary size
The binary was built with the following build_config.rb.
MRuby::Build.new do
  toolchain ""gcc""
  gembox ""full-core""
  enable_test
end
1.9742bce19/bin/mruby is currentry master (9742bce), 2.925422003/bin/mruby is this pull request (9254220).
% strip -so mruby.1 1.9742bce19/bin/mruby
% strip -so mruby.2 2.925422003/bin/mruby
% ll mruby.1 mruby.2
-rwxr-xr-x  1 dearblue  wheel  844264  8月  8 11:37 mruby.1
-rwxr-xr-x  1 dearblue  wheel  845096  8月  8 11:37 mruby.2
Benchmark
Result by rake MRUBY_CONFIG=benchmark/build_config_boxing.rb benchmark.
I think that it is a change in the degree of error.

Currentry master (9742bce)

This pull request (9254220)


Heap usage
It is measured with valgrind --tool=massif.
It is built by build_config.rb of ""Binary size"" above.
mrbtest
There is not much difference in peak value.
At some point this pull request seems to show more memory usage, but I don't know the details (order of test items?).

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mrbtest
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)


mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
Please note that this is a micro-benchmark, so in practice there will be no such difference.

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)",Thank you! I will add some review comments to the PR.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5060,2020-08-08T04:55:34Z,2020-08-08T06:59:54Z,2020-09-21T11:57:31Z,CLOSED,False,487,293,13,https://github.com/dearblue,Improve `ensure`,6,[],https://github.com/mruby/mruby/pull/5060,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5060#issuecomment-670835576,"Summary
Details are described in the commit message, but if there are any deficiencies, please point out.

Remove the function ecall()
Extend mruby binary format
Remove OP_PUSHERR, OP_POPERR, OP_EPUSH and OP_EPOP
Extend OP_EXCEPT
Extend OP_RAISE and rename to OP_RAISEIF
Added instruction OP_JUW
Extend RBreak object (with ""tag"")
Resolves #1888

Binary size
The binary was built with the following build_config.rb.
MRuby::Build.new do
  toolchain ""gcc""
  gembox ""full-core""
  enable_test
end
1.9742bce19/bin/mruby is currentry master (9742bce), 2.925422003/bin/mruby is this pull request (9254220).
% strip -so mruby.1 1.9742bce19/bin/mruby
% strip -so mruby.2 2.925422003/bin/mruby
% ll mruby.1 mruby.2
-rwxr-xr-x  1 dearblue  wheel  844264  8月  8 11:37 mruby.1
-rwxr-xr-x  1 dearblue  wheel  845096  8月  8 11:37 mruby.2
Benchmark
Result by rake MRUBY_CONFIG=benchmark/build_config_boxing.rb benchmark.
I think that it is a change in the degree of error.

Currentry master (9742bce)

This pull request (9254220)


Heap usage
It is measured with valgrind --tool=massif.
It is built by build_config.rb of ""Binary size"" above.
mrbtest
There is not much difference in peak value.
At some point this pull request seems to show more memory usage, but I don't know the details (order of test items?).

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mrbtest
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)


mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
Please note that this is a micro-benchmark, so in practice there will be no such difference.

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)",merged,True,{}
mruby/mruby,https://github.com/mruby/mruby,5060,2020-08-08T04:55:34Z,2020-08-08T06:59:54Z,2020-09-21T11:57:31Z,CLOSED,False,487,293,13,https://github.com/dearblue,Improve `ensure`,6,[],https://github.com/mruby/mruby/pull/5060,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5060#issuecomment-670842076,"Summary
Details are described in the commit message, but if there are any deficiencies, please point out.

Remove the function ecall()
Extend mruby binary format
Remove OP_PUSHERR, OP_POPERR, OP_EPUSH and OP_EPOP
Extend OP_EXCEPT
Extend OP_RAISE and rename to OP_RAISEIF
Added instruction OP_JUW
Extend RBreak object (with ""tag"")
Resolves #1888

Binary size
The binary was built with the following build_config.rb.
MRuby::Build.new do
  toolchain ""gcc""
  gembox ""full-core""
  enable_test
end
1.9742bce19/bin/mruby is currentry master (9742bce), 2.925422003/bin/mruby is this pull request (9254220).
% strip -so mruby.1 1.9742bce19/bin/mruby
% strip -so mruby.2 2.925422003/bin/mruby
% ll mruby.1 mruby.2
-rwxr-xr-x  1 dearblue  wheel  844264  8月  8 11:37 mruby.1
-rwxr-xr-x  1 dearblue  wheel  845096  8月  8 11:37 mruby.2
Benchmark
Result by rake MRUBY_CONFIG=benchmark/build_config_boxing.rb benchmark.
I think that it is a change in the degree of error.

Currentry master (9742bce)

This pull request (9254220)


Heap usage
It is measured with valgrind --tool=massif.
It is built by build_config.rb of ""Binary size"" above.
mrbtest
There is not much difference in peak value.
At some point this pull request seems to show more memory usage, but I don't know the details (order of test items?).

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mrbtest
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)


mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
Please note that this is a micro-benchmark, so in practice there will be no such difference.

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)","I appreciate this PR, especially because it allows Fiber context switch from ensure clause.  Thank you.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5060,2020-08-08T04:55:34Z,2020-08-08T06:59:54Z,2020-09-21T11:57:31Z,CLOSED,False,487,293,13,https://github.com/dearblue,Improve `ensure`,6,[],https://github.com/mruby/mruby/pull/5060,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/5060#issuecomment-670849340,"Summary
Details are described in the commit message, but if there are any deficiencies, please point out.

Remove the function ecall()
Extend mruby binary format
Remove OP_PUSHERR, OP_POPERR, OP_EPUSH and OP_EPOP
Extend OP_EXCEPT
Extend OP_RAISE and rename to OP_RAISEIF
Added instruction OP_JUW
Extend RBreak object (with ""tag"")
Resolves #1888

Binary size
The binary was built with the following build_config.rb.
MRuby::Build.new do
  toolchain ""gcc""
  gembox ""full-core""
  enable_test
end
1.9742bce19/bin/mruby is currentry master (9742bce), 2.925422003/bin/mruby is this pull request (9254220).
% strip -so mruby.1 1.9742bce19/bin/mruby
% strip -so mruby.2 2.925422003/bin/mruby
% ll mruby.1 mruby.2
-rwxr-xr-x  1 dearblue  wheel  844264  8月  8 11:37 mruby.1
-rwxr-xr-x  1 dearblue  wheel  845096  8月  8 11:37 mruby.2
Benchmark
Result by rake MRUBY_CONFIG=benchmark/build_config_boxing.rb benchmark.
I think that it is a change in the degree of error.

Currentry master (9742bce)

This pull request (9254220)


Heap usage
It is measured with valgrind --tool=massif.
It is built by build_config.rb of ""Binary size"" above.
mrbtest
There is not much difference in peak value.
At some point this pull request seems to show more memory usage, but I don't know the details (order of test items?).

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mrbtest
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)


mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
Please note that this is a micro-benchmark, so in practice there will be no such difference.

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)","You are welcome.
Originally I started by thinking that I would like to convey break with ""mruby VM Interrupt + Timeout.timeout"", but I could not imagine that it was related to Fiber (I can understand if I think about the mechanism of mruby thing).
Thank you for review and merging.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5060,2020-08-08T04:55:34Z,2020-08-08T06:59:54Z,2020-09-21T11:57:31Z,CLOSED,False,487,293,13,https://github.com/dearblue,Improve `ensure`,6,[],https://github.com/mruby/mruby/pull/5060,https://github.com/matz,6,https://github.com/mruby/mruby/pull/5060#issuecomment-695963713,"Summary
Details are described in the commit message, but if there are any deficiencies, please point out.

Remove the function ecall()
Extend mruby binary format
Remove OP_PUSHERR, OP_POPERR, OP_EPUSH and OP_EPOP
Extend OP_EXCEPT
Extend OP_RAISE and rename to OP_RAISEIF
Added instruction OP_JUW
Extend RBreak object (with ""tag"")
Resolves #1888

Binary size
The binary was built with the following build_config.rb.
MRuby::Build.new do
  toolchain ""gcc""
  gembox ""full-core""
  enable_test
end
1.9742bce19/bin/mruby is currentry master (9742bce), 2.925422003/bin/mruby is this pull request (9254220).
% strip -so mruby.1 1.9742bce19/bin/mruby
% strip -so mruby.2 2.925422003/bin/mruby
% ll mruby.1 mruby.2
-rwxr-xr-x  1 dearblue  wheel  844264  8月  8 11:37 mruby.1
-rwxr-xr-x  1 dearblue  wheel  845096  8月  8 11:37 mruby.2
Benchmark
Result by rake MRUBY_CONFIG=benchmark/build_config_boxing.rb benchmark.
I think that it is a change in the degree of error.

Currentry master (9742bce)

This pull request (9254220)


Heap usage
It is measured with valgrind --tool=massif.
It is built by build_config.rb of ""Binary size"" above.
mrbtest
There is not much difference in peak value.
At some point this pull request seems to show more memory usage, but I don't know the details (order of test items?).

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mrbtest
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)


mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
Please note that this is a micro-benchmark, so in practice there will be no such difference.

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)","@dearblue This PR cannot be compiled by the C++ compiler regarding goto in vm.c. Try rake TARGET=host-cxx. I will investigate it later, but if you have any idea, let me know.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5060,2020-08-08T04:55:34Z,2020-08-08T06:59:54Z,2020-09-21T11:57:31Z,CLOSED,False,487,293,13,https://github.com/dearblue,Improve `ensure`,6,[],https://github.com/mruby/mruby/pull/5060,https://github.com/dearblue,7,https://github.com/mruby/mruby/pull/5060#issuecomment-696053333,"Summary
Details are described in the commit message, but if there are any deficiencies, please point out.

Remove the function ecall()
Extend mruby binary format
Remove OP_PUSHERR, OP_POPERR, OP_EPUSH and OP_EPOP
Extend OP_EXCEPT
Extend OP_RAISE and rename to OP_RAISEIF
Added instruction OP_JUW
Extend RBreak object (with ""tag"")
Resolves #1888

Binary size
The binary was built with the following build_config.rb.
MRuby::Build.new do
  toolchain ""gcc""
  gembox ""full-core""
  enable_test
end
1.9742bce19/bin/mruby is currentry master (9742bce), 2.925422003/bin/mruby is this pull request (9254220).
% strip -so mruby.1 1.9742bce19/bin/mruby
% strip -so mruby.2 2.925422003/bin/mruby
% ll mruby.1 mruby.2
-rwxr-xr-x  1 dearblue  wheel  844264  8月  8 11:37 mruby.1
-rwxr-xr-x  1 dearblue  wheel  845096  8月  8 11:37 mruby.2
Benchmark
Result by rake MRUBY_CONFIG=benchmark/build_config_boxing.rb benchmark.
I think that it is a change in the degree of error.

Currentry master (9742bce)

This pull request (9254220)


Heap usage
It is measured with valgrind --tool=massif.
It is built by build_config.rb of ""Binary size"" above.
mrbtest
There is not much difference in peak value.
At some point this pull request seems to show more memory usage, but I don't know the details (order of test items?).

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mrbtest
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)


mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
Please note that this is a micro-benchmark, so in practice there will be no such difference.

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)","The cause is that the variable is declared and initialized at the destination of goto at the same time.
It can be expected to be solved by applying the following patch:
diff --git a/src/vm.c b/src/vm.c
index 9a0797912..f3b94888e 100644
--- a/src/vm.c
+++ b/src/vm.c
@@ -919,10 +919,9 @@ prepare_tagged_break(mrb_state *mrb, uint32_t tag, const struct RProc *proc, mrb

 #define CHECKPOINT_RESTORE(tag) \
   do { \
-    DEBUG_ONLY_EXPR(int current_checkpoint_tag = (tag)); \
+    DEBUG_ONLY_EXPR(static const int current_checkpoint_tag = (tag)); \
     if (FALSE) { \
       CHECKPOINT_LABEL_MAKE(tag): \
-      DEBUG_ONLY_EXPR(current_checkpoint_tag = (tag)); \
       do {

 #define CHECKPOINT_MAIN(tag) \

This current_checkpoint_tag variable is only intended to make sure that the tag given to CHECKPOINT* is the same as the pair.
Therefore, it is not absolutely necessary, so removing DEBUG_ONLY_EXPR(...) will still work.
Sorry to trouble you, but can I ask you to decide whether to apply the patch or remove DEBUG_ONLY_EXPR(...)?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5060,2020-08-08T04:55:34Z,2020-08-08T06:59:54Z,2020-09-21T11:57:31Z,CLOSED,False,487,293,13,https://github.com/dearblue,Improve `ensure`,6,[],https://github.com/mruby/mruby/pull/5060,https://github.com/matz,8,https://github.com/mruby/mruby/pull/5060#issuecomment-696067814,"Summary
Details are described in the commit message, but if there are any deficiencies, please point out.

Remove the function ecall()
Extend mruby binary format
Remove OP_PUSHERR, OP_POPERR, OP_EPUSH and OP_EPOP
Extend OP_EXCEPT
Extend OP_RAISE and rename to OP_RAISEIF
Added instruction OP_JUW
Extend RBreak object (with ""tag"")
Resolves #1888

Binary size
The binary was built with the following build_config.rb.
MRuby::Build.new do
  toolchain ""gcc""
  gembox ""full-core""
  enable_test
end
1.9742bce19/bin/mruby is currentry master (9742bce), 2.925422003/bin/mruby is this pull request (9254220).
% strip -so mruby.1 1.9742bce19/bin/mruby
% strip -so mruby.2 2.925422003/bin/mruby
% ll mruby.1 mruby.2
-rwxr-xr-x  1 dearblue  wheel  844264  8月  8 11:37 mruby.1
-rwxr-xr-x  1 dearblue  wheel  845096  8月  8 11:37 mruby.2
Benchmark
Result by rake MRUBY_CONFIG=benchmark/build_config_boxing.rb benchmark.
I think that it is a change in the degree of error.

Currentry master (9742bce)

This pull request (9254220)


Heap usage
It is measured with valgrind --tool=massif.
It is built by build_config.rb of ""Binary size"" above.
mrbtest
There is not much difference in peak value.
At some point this pull request seems to show more memory usage, but I don't know the details (order of test items?).

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mrbtest
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)


mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
Please note that this is a micro-benchmark, so in practice there will be no such difference.

Measuring method
% valgrind --tool=massif --stacks=yes --trace-children=no build/host/bin/mruby -e '1000000.times { begin; 1+1; rescue; 2+2; ensure; 3+3; end; }'
% ms_print --threshold=100 massif.out.* | head -n33

Currentry master (9742bce)

This pull request (9254220)","I modified the line that caused the problem. It could be my fault. Sorry if it's the case.
I'd rather remove DEBUG_ONLY_EXPR() lines here.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5061,2020-08-09T11:53:42Z,2020-08-09T12:57:31Z,2020-10-19T06:41:25Z,MERGED,True,9,3,1,https://github.com/shuujii,Allow `mrb_static_assert()` to be used outside of functions,1,[],https://github.com/mruby/mruby/pull/5061,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5061,The use of struct is an idea by @dearblue.,The use of struct is an idea by @dearblue.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5062,2020-08-11T11:57:51Z,2020-08-11T13:33:45Z,2020-10-19T06:41:29Z,MERGED,True,8,4,1,https://github.com/shuujii,Use normal `static_assert` in `mrb_static_assert` as much as possible,1,[],https://github.com/mruby/mruby/pull/5062,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5062,"_Static_assert can also be used with -std=gnu99 on GCC >= 4.6.
static_assert can be used on MSVC.
static_assert can be used even on old G++/Clang++ if
__GXX_EXPERIMENTAL_CXX0X__ is defined.","_Static_assert can also be used with -std=gnu99 on GCC >= 4.6.
static_assert can be used on MSVC.
static_assert can be used even on old G++/Clang++ if
__GXX_EXPERIMENTAL_CXX0X__ is defined.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5063,2020-08-11T13:28:48Z,2020-08-11T13:31:10Z,2020-08-12T04:50:08Z,MERGED,True,2,2,1,https://github.com/dearblue,Use `struct _stat32` instead of `struct __stat32`,1,[],https://github.com/mruby/mruby/pull/5063,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5063,"It is described as struct __stat32 in the MSVC reference manual.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/stat-functions?view=vs-2019
But it doesn't really exist, so it must use struct _stat32.
It also replaces struct __stat64 with struct _stat64 to make it look nicer.","It is described as struct __stat32 in the MSVC reference manual.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/stat-functions?view=vs-2019
But it doesn't really exist, so it must use struct _stat32.
It also replaces struct __stat64 with struct _stat64 to make it look nicer.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5063,2020-08-11T13:28:48Z,2020-08-11T13:31:10Z,2020-08-12T04:50:08Z,MERGED,True,2,2,1,https://github.com/dearblue,Use `struct _stat32` instead of `struct __stat32`,1,[],https://github.com/mruby/mruby/pull/5063,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5063#issuecomment-672329776,"It is described as struct __stat32 in the MSVC reference manual.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/stat-functions?view=vs-2019
But it doesn't really exist, so it must use struct _stat32.
It also replaces struct __stat64 with struct _stat64 to make it look nicer.","Thank you for the PR. But on 32bit MinGW, we got the following error:
D:/a/mruby/mruby/mrbgems/mruby-io/src/file.c:400: undefined reference to '__imp__fstat32'

The stackoverflow says it is caused by calling 32bit library function from 64bit application. Is there any workaround?
I wanted to use 32bit time_t because (mrb_int)time64_t caused out-of-range error. If we can cast 64bit time_t into 32bit mrb_int, it is OK too.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5063,2020-08-11T13:28:48Z,2020-08-11T13:31:10Z,2020-08-12T04:50:08Z,MERGED,True,2,2,1,https://github.com/dearblue,Use `struct _stat32` instead of `struct __stat32`,1,[],https://github.com/mruby/mruby/pull/5063,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5063#issuecomment-672386464,"It is described as struct __stat32 in the MSVC reference manual.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/stat-functions?view=vs-2019
But it doesn't really exist, so it must use struct _stat32.
It also replaces struct __stat64 with struct _stat64 to make it look nicer.","By the latest CI build, everything OK on GitHub Actions. On AppVeyor, a test fails with 32bit build with the error.
ArgumentError: File#mtime => -550329529 out of Time range (mrbgems: mruby-io)

which indicates something was wrong with time_t to mrb_int conversion. But the time (current time) should fit in 32bit, so I have no idea why it fails.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5063,2020-08-11T13:28:48Z,2020-08-11T13:31:10Z,2020-08-12T04:50:08Z,MERGED,True,2,2,1,https://github.com/dearblue,Use `struct _stat32` instead of `struct __stat32`,1,[],https://github.com/mruby/mruby/pull/5063,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5063#issuecomment-672410369,"It is described as struct __stat32 in the MSVC reference manual.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/stat-functions?view=vs-2019
But it doesn't really exist, so it must use struct _stat32.
It also replaces struct __stat64 with struct _stat64 to make it look nicer.","It's about the mruby3 branch, right?
The current time uses up to 31 bits.
However, in MRB_INT32 + MRB_WORD_BOXING, the sign is up to 31 bits, so it seems that it is erroneously converted to a negative integer.
% ruby27 -e'n = Time.now.to_i; p n | n[30] * -0x80000000'
-550290679
The workaround I came up with is:

Use MRB_NO_BOXING (mrb_static_assert() to fails)
Convert with mrb_float_value() instead of mrb_fixnum_value() (not tried)

I don't know __imp__fstat32.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5063,2020-08-11T13:28:48Z,2020-08-11T13:31:10Z,2020-08-12T04:50:08Z,MERGED,True,2,2,1,https://github.com/dearblue,Use `struct _stat32` instead of `struct __stat32`,1,[],https://github.com/mruby/mruby/pull/5063,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/5063#issuecomment-672427181,"It is described as struct __stat32 in the MSVC reference manual.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/stat-functions?view=vs-2019
But it doesn't really exist, so it must use struct _stat32.
It also replaces struct __stat64 with struct _stat64 to make it look nicer.","Sorry.


Use MRB_NO_BOXING (it crashed...)


It was a mistake to get caught in mrb_static_assert instead of crash.
In file included from /tmp/mruby3/src/gc.c:9:0:
/tmp/mruby3/src/gc.c: In function 'mrb_init_gc':
/tmp/mruby3/include/mruby.h:72:38: error: static assertion failed: ""RVALUE size must be within 6 words""
 # define mrb_static_assert(exp, str) _Static_assert(exp, str)
                                      ^
/tmp/mruby3/src/gc.c:1623:3: note: in expansion of macro 'mrb_static_assert'
   mrb_static_assert(sizeof(RVALUE) <= sizeof(void*) * 6,
   ^

I tried this on FreeBSD 12.1 using old mingw32 (not 64 bit version) and wine (i386-wine).
target/cross-mingw32.rb
load File.join(__dir__, ""host.rb"")

MRuby::CrossBuild.new(""cross-mingw32"") do |conf|
  toolchain :gcc

  conf.compilers.each do |cc|
    cc.command = ""mingw32-gcc""
    #cc.defines << %w(MRB_NAN_BOXING)
    cc.defines << %w(MRB_NO_BOXING)
    #cc.defines << %w(MRB_NO_BOXING MRB_INT64)
  end
  exts.executable = "".exe""
  archiver.command = ""mingw32-ar""
  linker.command = ""mingw32-gcc""
  linker.libraries << %w(ws2_32)

  gem core: ""mruby-bin-mruby""
  gem core: ""mruby-io""
  gem core: ""mruby-print""
  gem core: ""mruby-sprintf""
  gem core: ""mruby-time""
  conf.test_runner.command = ""wine""
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,5063,2020-08-11T13:28:48Z,2020-08-11T13:31:10Z,2020-08-12T04:50:08Z,MERGED,True,2,2,1,https://github.com/dearblue,Use `struct _stat32` instead of `struct __stat32`,1,[],https://github.com/mruby/mruby/pull/5063,https://github.com/matz,6,https://github.com/mruby/mruby/pull/5063#issuecomment-672571078,"It is described as struct __stat32 in the MSVC reference manual.
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/stat-functions?view=vs-2019
But it doesn't really exist, so it must use struct _stat32.
It also replaces struct __stat64 with struct _stat64 to make it look nicer.","Ah, I didn't notice 31bit overflow. Let me think a while.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5064,2020-08-12T10:57:56Z,2020-08-12T11:02:26Z,2020-08-12T11:09:08Z,CLOSED,False,1,1,1,https://github.com/shuujii,Simplify MSVC detection to `marb_static_assert`,1,[],https://github.com/mruby/mruby/pull/5064,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5064,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5064,2020-08-12T10:57:56Z,2020-08-12T11:02:26Z,2020-08-12T11:09:08Z,CLOSED,False,1,1,1,https://github.com/shuujii,Simplify MSVC detection to `marb_static_assert`,1,[],https://github.com/mruby/mruby/pull/5064,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5064#issuecomment-672804624,,"Sorry, I made a typo, so I will recreate the PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5065,2020-08-12T11:08:29Z,2020-08-12T12:51:45Z,2020-10-19T06:41:29Z,MERGED,True,1,1,1,https://github.com/shuujii,Simplify MSVC detection to `mrb_static_assert`,1,[],https://github.com/mruby/mruby/pull/5065,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5065,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5068,2020-08-29T12:04:32Z,2020-08-29T14:04:03Z,2020-08-29T14:04:03Z,MERGED,True,9,4,3,https://github.com/sizious,mruby-io: Fixing compilation issue under the legacy MinGW environment,1,[],https://github.com/mruby/mruby/pull/5068,https://github.com/sizious,1,https://github.com/mruby/mruby/pull/5068,"With recent changes in the mruby-io gem, it's now impossible to build mruby under the legacy MinGW environment. This little PR solve that issue.
The MRB_MINGW32_LEGACY macro has been added in common.h in order to identify the legacy MinGW environment. Please also note MinGW should not be confused with MinGW-w64.
For more info about MinGW defined macros used here, see: https://sourceforge.net/p/predef/wiki/Compilers/","With recent changes in the mruby-io gem, it's now impossible to build mruby under the legacy MinGW environment. This little PR solve that issue.
The MRB_MINGW32_LEGACY macro has been added in common.h in order to identify the legacy MinGW environment. Please also note MinGW should not be confused with MinGW-w64.
For more info about MinGW defined macros used here, see: https://sourceforge.net/p/predef/wiki/Compilers/",True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/RoryO,1,https://github.com/mruby/mruby/pull/5069,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.","Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/RoryO,2,https://github.com/mruby/mruby/pull/5069#issuecomment-683363440,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.",It appears either mingw or the CI system doesn't allow removing temp directories. That is a strange situation either way. I will work around it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5069#issuecomment-683508717,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.","I am wondering whether it may be better to specify manually via a macro define, e.g. MRB_USE_MALLOC_TRIM.
In that case, we don't have to add a complex detection code. No worry about cross-compiling nor compiler portability.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/RoryO,4,https://github.com/mruby/mruby/pull/5069#issuecomment-685106846,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.","Oh yes it should be prefixed with MRB_.
Are you saying you would like it off by default and enabling it with a custom build_config?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5069#issuecomment-685167898,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.",@RoryO yes. Altough it's less intelligent. I'd like to follow KISS principle here.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/RoryO,6,https://github.com/mruby/mruby/pull/5069#issuecomment-685183323,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.","Okay, I have done that.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/matz,7,https://github.com/mruby/mruby/pull/5069#issuecomment-685206418,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.",Thank you! It will be merged to mruby3 branch.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/RoryO,8,https://github.com/mruby/mruby/pull/5069#issuecomment-685224387,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.",Oh that’s new! Okay I changed the base branch.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/matz,9,https://github.com/mruby/mruby/pull/5069#issuecomment-685225227,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.","Oh, you didn't have to. I did it on my side.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/matz,10,https://github.com/mruby/mruby/pull/5069#issuecomment-685225288,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.",Thank you anyway.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/RoryO,11,https://github.com/mruby/mruby/pull/5069#issuecomment-685225688,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.",Should this be closed then?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/matz,12,https://github.com/mruby/mruby/pull/5069#issuecomment-685229758,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.",I will close when I push to GitHub. I am struggling with other issues. Wait for a while.,True,{'THUMBS_UP': ['https://github.com/RoryO']}
mruby/mruby,https://github.com/mruby/mruby,5069,2020-08-30T00:27:47Z,2020-09-04T12:04:03Z,2020-09-04T12:04:04Z,CLOSED,False,6,0,1,https://github.com/RoryO,Adding malloc_trim call on full GC,5,[],https://github.com/mruby/mruby/pull/5069,https://github.com/matz,13,https://github.com/mruby/mruby/pull/5069#issuecomment-687101184,"Follow up on #5047. Does a couple things:

Adds a few methods to MRuby::Command::Compiler for asking about headers and functions. I took inspiration from how meson does it, which has a nice API.
Wraps the necessary includes and call within a #define set inside gcc.rake. That way if a user has a custom build_config.rb they can remove the define if they wish, like if they are using a different allocator than glib.",Merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5072,2020-09-04T15:02:32Z,2020-09-05T09:24:57Z,2020-09-05T09:24:57Z,CLOSED,False,3,1,1,https://github.com/udzura,Skip C and Ruby comments from scan target,3,[],https://github.com/mruby/mruby/pull/5072,https://github.com/udzura,1,https://github.com/mruby/mruby/pull/5072,Keep build OK when broken codes are included in comments.,Keep build OK when broken codes are included in comments.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5072,2020-09-04T15:02:32Z,2020-09-05T09:24:57Z,2020-09-05T09:24:57Z,CLOSED,False,3,1,1,https://github.com/udzura,Skip C and Ruby comments from scan target,3,[],https://github.com/mruby/mruby/pull/5072,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5072#issuecomment-687415736,Keep build OK when broken codes are included in comments.,"I understand the concept. But mere skipping does not work, since test suites contain symbols like :""#{1+2}.
There are a few choices:

avoid using those weird symbols in test suites (they are not used in the real applications)
implement better code scanner",True,{}
mruby/mruby,https://github.com/mruby/mruby,5072,2020-09-04T15:02:32Z,2020-09-05T09:24:57Z,2020-09-05T09:24:57Z,CLOSED,False,3,1,1,https://github.com/udzura,Skip C and Ruby comments from scan target,3,[],https://github.com/mruby/mruby/pull/5072,https://github.com/udzura,3,https://github.com/mruby/mruby/pull/5072#issuecomment-687471175,Keep build OK when broken codes are included in comments.,"Thanks for response. For example, mruby-http has a broken symbol in its comment...
https://github.com/mattn/mruby-http/blob/master/src/mrb_http.c#L652",True,{}
mruby/mruby,https://github.com/mruby/mruby,5072,2020-09-04T15:02:32Z,2020-09-05T09:24:57Z,2020-09-05T09:24:57Z,CLOSED,False,3,1,1,https://github.com/udzura,Skip C and Ruby comments from scan target,3,[],https://github.com/mruby/mruby/pull/5072,https://github.com/udzura,4,https://github.com/mruby/mruby/pull/5072#issuecomment-687482359,Keep build OK when broken codes are included in comments.,"At this moment the problem I got should be solved by #5074 !
I found scanning comments (and adding unused symbols to presym) itself might not be a big problem...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5072,2020-09-04T15:02:32Z,2020-09-05T09:24:57Z,2020-09-05T09:24:57Z,CLOSED,False,3,1,1,https://github.com/udzura,Skip C and Ruby comments from scan target,3,[],https://github.com/mruby/mruby/pull/5072,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5072#issuecomment-687578148,Keep build OK when broken codes are included in comments.,Addressed by b2e92f6,True,{}
mruby/mruby,https://github.com/mruby/mruby,5073,2020-09-04T23:46:14Z,2020-09-05T09:23:56Z,2020-09-05T09:23:56Z,MERGED,True,10,6,1,https://github.com/udzura,Scan ruby files in directories,2,[],https://github.com/mruby/mruby/pull/5073,https://github.com/udzura,1,https://github.com/mruby/mruby/pull/5073,Old patterns skip ruby files like mrblib/foo/bar.rb. I've added glob patterns to improve coverage.,Old patterns skip ruby files like mrblib/foo/bar.rb. I've added glob patterns to improve coverage.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5074,2020-09-05T00:02:54Z,2020-09-05T09:23:55Z,2020-09-05T09:23:55Z,MERGED,True,4,4,1,https://github.com/udzura,Ensure exact match for symbols like `foo!/foo?/foo=` on presym.inc generation,2,[],https://github.com/mruby/mruby/pull/5074,https://github.com/udzura,1,https://github.com/mruby/mruby/pull/5074,"e.g. symbols like ""foo[]="" make invalid C codes... even in comments!
https://github.com/mattn/mruby-http/blob/master/src/mrb_http.c#L652","e.g. symbols like ""foo[]="" make invalid C codes... even in comments!
https://github.com/mattn/mruby-http/blob/master/src/mrb_http.c#L652",True,{}
mruby/mruby,https://github.com/mruby/mruby,5076,2020-09-07T12:41:37Z,2020-09-07T14:22:14Z,2020-09-24T13:39:30Z,MERGED,True,0,7,1,https://github.com/dearblue,Remove `enum call_type`,1,[],https://github.com/mruby/mruby/pull/5076,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5076,It seems to be unnecessary from mruby-1.0.0 or earlier.,It seems to be unnecessary from mruby-1.0.0 or earlier.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5079,2020-09-17T10:53:18Z,2020-09-17T11:20:04Z,2020-09-17T12:03:44Z,MERGED,True,21,5,1,https://github.com/wataash,Fix *.d parsing with gcc 9.3.0,1,[],https://github.com/mruby/mruby/pull/5079,https://github.com/wataash,1,https://github.com/mruby/mruby/pull/5079,"Before this commit:

  $ rake
  ...
  $ rm build/host/src/gc.o
  $ rake
  rake aborted!
  Don't know how to build task '/home/foo/mruby/build/host/src/gc.o' (See the list of available tasks with `rake --tasks`)
  ...

After this commit:

  $ rake
  ...
  $ rm build/host/src/gc.o
  $ rake
  CC    src/gc.c -> build/host/src/gc.o
  ...

With gcc 9.3.0 on Ubuntu 20.04, build/host/src/array.d looks like:

  /build/host/src/array.o: /src/array.c \
   /include/mruby.h /include/mrbconf.h \
   /include/mruby/common.h \
   ...
   /include/mruby/range.h \
   /src/value_array.h

and it has been parsed to:

  [
                                           # /src/array.c missing
    ""/include/mruby.h /include/mrbconf.h"", # incorrectly parsed
    ""/include/mruby/common.h"",
    ...
    ""/src/value_array.h"",
  ]

After this change, *.d will be parsed correctly.

  [
    ""/src/array.c"",
    ""/include/mruby.h"",
    ""/include/mrbconf.h"",
    ""/include/mruby/common.h"",
    ...
    ""/src/value_array.h"",
  ]

Ref. #4571
cc @shuujii","Before this commit:

  $ rake
  ...
  $ rm build/host/src/gc.o
  $ rake
  rake aborted!
  Don't know how to build task '/home/foo/mruby/build/host/src/gc.o' (See the list of available tasks with `rake --tasks`)
  ...

After this commit:

  $ rake
  ...
  $ rm build/host/src/gc.o
  $ rake
  CC    src/gc.c -> build/host/src/gc.o
  ...

With gcc 9.3.0 on Ubuntu 20.04, build/host/src/array.d looks like:

  /build/host/src/array.o: /src/array.c \
   /include/mruby.h /include/mrbconf.h \
   /include/mruby/common.h \
   ...
   /include/mruby/range.h \
   /src/value_array.h

and it has been parsed to:

  [
                                           # /src/array.c missing
    ""/include/mruby.h /include/mrbconf.h"", # incorrectly parsed
    ""/include/mruby/common.h"",
    ...
    ""/src/value_array.h"",
  ]

After this change, *.d will be parsed correctly.

  [
    ""/src/array.c"",
    ""/include/mruby.h"",
    ""/include/mrbconf.h"",
    ""/include/mruby/common.h"",
    ...
    ""/src/value_array.h"",
  ]

Ref. #4571
cc @shuujii",True,{}
mruby/mruby,https://github.com/mruby/mruby,5079,2020-09-17T10:53:18Z,2020-09-17T11:20:04Z,2020-09-17T12:03:44Z,MERGED,True,21,5,1,https://github.com/wataash,Fix *.d parsing with gcc 9.3.0,1,[],https://github.com/mruby/mruby/pull/5079,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5079#issuecomment-694178117,"Before this commit:

  $ rake
  ...
  $ rm build/host/src/gc.o
  $ rake
  rake aborted!
  Don't know how to build task '/home/foo/mruby/build/host/src/gc.o' (See the list of available tasks with `rake --tasks`)
  ...

After this commit:

  $ rake
  ...
  $ rm build/host/src/gc.o
  $ rake
  CC    src/gc.c -> build/host/src/gc.o
  ...

With gcc 9.3.0 on Ubuntu 20.04, build/host/src/array.d looks like:

  /build/host/src/array.o: /src/array.c \
   /include/mruby.h /include/mrbconf.h \
   /include/mruby/common.h \
   ...
   /include/mruby/range.h \
   /src/value_array.h

and it has been parsed to:

  [
                                           # /src/array.c missing
    ""/include/mruby.h /include/mrbconf.h"", # incorrectly parsed
    ""/include/mruby/common.h"",
    ...
    ""/src/value_array.h"",
  ]

After this change, *.d will be parsed correctly.

  [
    ""/src/array.c"",
    ""/include/mruby.h"",
    ""/include/mrbconf.h"",
    ""/include/mruby/common.h"",
    ...
    ""/src/value_array.h"",
  ]

Ref. #4571
cc @shuujii","Thank you for your report.
It doesn't depend on the version of GCC, but if the paths are short, it seems to be concatenated without line breaks (reproduced in Clang and older GCC).",True,{'THUMBS_UP': ['https://github.com/wataash']}
mruby/mruby,https://github.com/mruby/mruby,5079,2020-09-17T10:53:18Z,2020-09-17T11:20:04Z,2020-09-17T12:03:44Z,MERGED,True,21,5,1,https://github.com/wataash,Fix *.d parsing with gcc 9.3.0,1,[],https://github.com/mruby/mruby/pull/5079,https://github.com/wataash,3,https://github.com/mruby/mruby/pull/5079#issuecomment-694185541,"Before this commit:

  $ rake
  ...
  $ rm build/host/src/gc.o
  $ rake
  rake aborted!
  Don't know how to build task '/home/foo/mruby/build/host/src/gc.o' (See the list of available tasks with `rake --tasks`)
  ...

After this commit:

  $ rake
  ...
  $ rm build/host/src/gc.o
  $ rake
  CC    src/gc.c -> build/host/src/gc.o
  ...

With gcc 9.3.0 on Ubuntu 20.04, build/host/src/array.d looks like:

  /build/host/src/array.o: /src/array.c \
   /include/mruby.h /include/mrbconf.h \
   /include/mruby/common.h \
   ...
   /include/mruby/range.h \
   /src/value_array.h

and it has been parsed to:

  [
                                           # /src/array.c missing
    ""/include/mruby.h /include/mrbconf.h"", # incorrectly parsed
    ""/include/mruby/common.h"",
    ...
    ""/src/value_array.h"",
  ]

After this change, *.d will be parsed correctly.

  [
    ""/src/array.c"",
    ""/include/mruby.h"",
    ""/include/mrbconf.h"",
    ""/include/mruby/common.h"",
    ...
    ""/src/value_array.h"",
  ]

Ref. #4571
cc @shuujii","ah thanks!
I generalized the comment on #5081.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5080,2020-09-17T11:30:44Z,2020-09-17T12:05:30Z,2020-09-17T12:06:59Z,MERGED,True,1,1,1,https://github.com/wataash,Fix skipping reading file,1,[],https://github.com/mruby/mruby/pull/5080,https://github.com/wataash,1,https://github.com/mruby/mruby/pull/5080,"I did a stupid mistake on #5079 by accident, I'm sorry.","I did a stupid mistake on #5079 by accident, I'm sorry.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5081,2020-09-17T12:01:17Z,2020-09-17T12:05:43Z,2020-09-17T12:06:48Z,MERGED,True,4,17,1,https://github.com/wataash,*.d format is version-independent,1,[],https://github.com/mruby/mruby/pull/5081,https://github.com/wataash,1,https://github.com/mruby/mruby/pull/5081,"As pointed out by @shuujii on #5079 ,
multi-path in single-line could be appear even with older-gcc or clang.","As pointed out by @shuujii on #5079 ,
multi-path in single-line could be appear even with older-gcc or clang.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5082,2020-09-18T04:34:48Z,2020-09-18T04:42:02Z,2020-09-18T05:07:27Z,MERGED,True,0,3,1,https://github.com/wataash,Remove redundant type-check,1,[],https://github.com/mruby/mruby/pull/5082,https://github.com/wataash,1,https://github.com/mruby/mruby/pull/5082,since mrb_str_to_str() also does it.,since mrb_str_to_str() also does it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5083,2020-09-18T05:13:41Z,2020-09-18T05:16:24Z,2020-09-18T05:38:30Z,MERGED,True,12,4,4,https://github.com/wataash,examples/mrbgems: clarify the caller,1,[],https://github.com/mruby/mruby/pull/5083,https://github.com/wataash,1,https://github.com/mruby/mruby/pull/5083,"Before this commit:
mruby -e 'CRubyExtension.ruby_method' # => A Ruby Extension
mruby -e 'CRubyExtension.c_method'    # => A C Extension
mruby -e 'CExtension.c_method'        # => A C Extension
mruby -e 'RubyExtension.ruby_method'  # => A Ruby Extension
After this commit:
mruby -e 'CRubyExtension.ruby_method' # => CRubyExtension: A Ruby Extension
mruby -e 'CRubyExtension.c_method'    # => CRubyExtension: A C Extension
mruby -e 'CExtension.c_method'        # => CExtension: A C Extension
mruby -e 'RubyExtension.ruby_method'  # => RubyExtension: A Ruby Extension","Before this commit:
mruby -e 'CRubyExtension.ruby_method' # => A Ruby Extension
mruby -e 'CRubyExtension.c_method'    # => A C Extension
mruby -e 'CExtension.c_method'        # => A C Extension
mruby -e 'RubyExtension.ruby_method'  # => A Ruby Extension
After this commit:
mruby -e 'CRubyExtension.ruby_method' # => CRubyExtension: A Ruby Extension
mruby -e 'CRubyExtension.c_method'    # => CRubyExtension: A C Extension
mruby -e 'CExtension.c_method'        # => CExtension: A C Extension
mruby -e 'RubyExtension.ruby_method'  # => RubyExtension: A Ruby Extension",True,{}
mruby/mruby,https://github.com/mruby/mruby,5083,2020-09-18T05:13:41Z,2020-09-18T05:16:24Z,2020-09-18T05:38:30Z,MERGED,True,12,4,4,https://github.com/wataash,examples/mrbgems: clarify the caller,1,[],https://github.com/mruby/mruby/pull/5083,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5083#issuecomment-694656587,"Before this commit:
mruby -e 'CRubyExtension.ruby_method' # => A Ruby Extension
mruby -e 'CRubyExtension.c_method'    # => A C Extension
mruby -e 'CExtension.c_method'        # => A C Extension
mruby -e 'RubyExtension.ruby_method'  # => A Ruby Extension
After this commit:
mruby -e 'CRubyExtension.ruby_method' # => CRubyExtension: A Ruby Extension
mruby -e 'CRubyExtension.c_method'    # => CRubyExtension: A C Extension
mruby -e 'CExtension.c_method'        # => CExtension: A C Extension
mruby -e 'RubyExtension.ruby_method'  # => RubyExtension: A Ruby Extension","Thank you for your contribution.
@wataash Do you want to add your name to the AUTHORS file?
If you are willing, send us PR to update the file.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5083,2020-09-18T05:13:41Z,2020-09-18T05:16:24Z,2020-09-18T05:38:30Z,MERGED,True,12,4,4,https://github.com/wataash,examples/mrbgems: clarify the caller,1,[],https://github.com/mruby/mruby/pull/5083,https://github.com/wataash,3,https://github.com/mruby/mruby/pull/5083#issuecomment-694661433,"Before this commit:
mruby -e 'CRubyExtension.ruby_method' # => A Ruby Extension
mruby -e 'CRubyExtension.c_method'    # => A C Extension
mruby -e 'CExtension.c_method'        # => A C Extension
mruby -e 'RubyExtension.ruby_method'  # => A Ruby Extension
After this commit:
mruby -e 'CRubyExtension.ruby_method' # => CRubyExtension: A Ruby Extension
mruby -e 'CRubyExtension.c_method'    # => CRubyExtension: A C Extension
mruby -e 'CExtension.c_method'        # => CExtension: A C Extension
mruby -e 'RubyExtension.ruby_method'  # => RubyExtension: A Ruby Extension","Great to hear that, thanks!
But some of my PRs were done while I'd been working at @iij, who is already added to AUTHORS.
So let me add my name when I send more patches as my personal contributions... :)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/matz,1,https://github.com/mruby/mruby/pull/5084,Update to mruby3.,Update to mruby3.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5084#issuecomment-699453765,Update to mruby3.,"I have a question.
For now, presym.inc is commonly used for all targets, but are there any plans to separate it?
If not, is the concept acceptable?
As a factor when separating for each target I am thinking of:

Instead of build/repo/**/..., get the symbols only from the required mrbgem. Symbols contained only in the test will be extracted if necessary.
Instead of build/presym.inc, it will be output to build/<TARGET>/include/mruby/build/presym.inc.
Add a switch to bin/mrbc to enter the contents of the presym file. It is used with the -S switch.
It may need to separate the build part of the bin/mrbc file from the ""host"" target.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5084#issuecomment-699454409,Update to mruby3.,"To avoid repeated compilation, presym need to be generated before mrbc. That is the biggest constraint.
If you have any idea, let me know.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5084#issuecomment-699460460,Update to mruby3.,"If it can enter the presym file into bin/mrbc, then the ""host"" target bin/mrbc can be used for other targets as well.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5084#issuecomment-699462073,Update to mruby3.,"I am not sure whether I understand your statement. mrbc is built using the core, core using symbols generated from presym. If we update the presym we need to compile everything again.
If we use mrbc to generate presym, the build steps would be:

build core without presym
build mrbc using the first core
generate binary files and presym using mrbc
recompile everything again (this time including gems)

It is redundant. I have several ideas to avoid recompilation, but it requires a big rewrite regarding mrbc.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/5084#issuecomment-699465779,Update to mruby3.,"In my opinion:

""host"" will generate and compile presym in the current way.
Generate a presym for each target.
The per-target *.rb file is compiled by passing the per-target presym to the bin/mrbc of ""host"".

I think it's true that the change to mrbc.c will be large due to the addition of the ability to read the presym file.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/shuujii,7,https://github.com/mruby/mruby/pull/5084#issuecomment-722191466,Update to mruby3.,"My understanding is that mruby should be able to build without presym for the following reasons:

Regular expressions are currently used to extract presym from Ruby files, but it is not strict, so I think it is better to use mruby itself (mrbc) to parse them.
For example, adding a class, method, or instance variable to one Ruby file will change symbol IDs, so most files, including C files, will need to be recompiled. This is inconvenient, especially for trial and error during development.

To achieve 1, the core would have to be built twice with and without presym, but I don't think that's a big deal for the following reasons:

If only mrbc is built, using ccache and parallel builds, even my low spec machine can build it in about 1 second.
If we can specify pre-built mrbc, we don't have to build it every time. Because I think there are not so many changes which affect the result produced by mrbc, this should  be fine in most cases.

Achieving 2 also has the side effect of speeding up compilation of Ruby files because we can always use optimally built mrbc (for this reason, my personal repository has been doing something similar for some time).
I'll try to build without presym. However, even if it does, it will probably be partially incompatible with the current presym (C macros change). Also, I think it will take a while.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/matz,8,https://github.com/mruby/mruby/pull/5084#issuecomment-722210910,Update to mruby3.,"Currently it doesn't work correctly at least in GC terms.

Regarding ObjectSpace.count_objects, similar things could happen with T_FLOAT in CRuby. So I think that's OK not to count immediate values. But your example may indicate the existence of a bug. Let me investigate it later. I couldn't reproduce the issu on my machine yet.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/matz,9,https://github.com/mruby/mruby/pull/5084#issuecomment-722211681,Update to mruby3.,"Regarding presym generation, using mrbc sounds tempting. But rewriting the build process needs more time that I have at hand. Maybe later.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/shuujii,10,https://github.com/mruby/mruby/pull/5084#issuecomment-722284588,Update to mruby3.,"Regarding ObjectSpace.count_objects, similar things could happen with T_FLOAT in CRuby. So I think that's OK not to count immediate values.

The variable int (1<<30) in that example is not immediate.

But your example may indicate the existence of a bug.

As mentioned before, mrb_immediate_p is true even for Integer which is not an immediate, so the cause is the object is not a GC target, I think.
I think there are various other bugs caused by the same cause, such as the following.
p 1073741824 == 1073741824+0  #=> false",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/dearblue,11,https://github.com/mruby/mruby/pull/5084#issuecomment-723521971,Update to mruby3.,"MRuby::Build.new now always generates bin/mrbc, even on non-hosts.
Is this intentional?
# build_config.rb

MRuby::Build.new do
  toolchain ""clang""
end

MRuby::Build.new(""host2"") do
  toolchain ""clang""
end
% rake -m MRUBY_CONFIG=build_config.rb
...SNIP...

Build summary:

================================================
      Config Name: host
 Output Directory: build/host
         Binaries: mrbc
    Included Gems:
             mruby-bin-mrbc - mruby compiler executable
             mruby-compiler - mruby compiler library
================================================

================================================
      Config Name: host2
 Output Directory: build/host2
         Binaries: mrbc
    Included Gems:
             mruby-bin-mrbc - mruby compiler executable
             mruby-compiler - mruby compiler library
================================================",True,{}
mruby/mruby,https://github.com/mruby/mruby,5084,2020-09-18T06:16:52Z,2020-10-15T09:31:07Z,2020-11-15T07:39:10Z,MERGED,True,9463,7852,164,https://github.com/matz,Mruby3,259,[],https://github.com/mruby/mruby/pull/5084,https://github.com/shuujii,12,https://github.com/mruby/mruby/pull/5084#issuecomment-727529357,Update to mruby3.,"As mentioned before, mrb_immediate_p is true even for Integer which is not an immediate

I'm very sorry, mrb_immediate_p is no problem with Word-boxing because it does not use type tag. Also, with No-boxing or NaN-boxing, Integer is always an immediate value, so mrb_immediate_p was not affected.

so the cause is the object is not a GC target, I think.

This again is not a problem with mrb_immediate_p, so I'll create a PR later.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5087,2020-09-24T13:55:41Z,2020-09-25T13:54:26Z,2020-09-25T14:49:47Z,MERGED,True,23,18,6,https://github.com/dearblue,"Prohibit string changes by ""s""/""z"" specifier of `mrb_get_args()`",1,[],https://github.com/mruby/mruby/pull/5087,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5087,"The s specifier is a string pointer obtained without performing mrb_str_modify(), so it cannot be changed.
The z specifier cannot be changed because it is a string pointer obtained by RSTRING_CSTR() which returns const char *.","The s specifier is a string pointer obtained without performing mrb_str_modify(), so it cannot be changed.
The z specifier cannot be changed because it is a string pointer obtained by RSTRING_CSTR() which returns const char *.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5089,2020-10-12T04:58:34Z,2020-10-12T05:29:40Z,2020-10-12T05:29:40Z,MERGED,True,3,3,1,https://github.com/taiyoslime,fix improper test of Range#min,1,[],https://github.com/mruby/mruby/pull/5089,https://github.com/taiyoslime,1,https://github.com/mruby/mruby/pull/5089,Fix improper test in mrbgems/mruby-range-ext/test/range.rb that tests Range#max even though it is the part of Range#min.,Fix improper test in mrbgems/mruby-range-ext/test/range.rb that tests Range#max even though it is the part of Range#min.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5090,2020-10-12T06:04:32Z,2020-10-12T07:19:04Z,2020-10-12T07:19:04Z,MERGED,True,1,1,1,https://github.com/smallkirby,Fix argument error when built with MRB_WITHOUT_FLOAT flag,1,[],https://github.com/mruby/mruby/pull/5090,https://github.com/smallkirby,1,https://github.com/mruby/mruby/pull/5090,"Fixed Point
Fixed improper argument of mrb_fixnum_value().
Error
When built with MRB_WITHOUT_FLOAT flag, build fails as below:
$ CFLAGS=""-DMRB_WITHOUT_FLOAT"" rake
CC    src/vm.c -> build/host/src/vm.o
CC    src/error.c -> build/host/src/error.o
CC    src/dump.c -> build/host/src/dump.o
CC    src/string.c -> build/host/src/string.o
CC    src/init.c -> build/host/src/init.o
CC    src/hash.c -> build/host/src/hash.o
CC    src/numeric.c -> build/host/src/numeric.o
/home/wataru/dev-mruby/src/numeric.c: In function ‘integral_div’:
/home/wataru/dev-mruby/src/numeric.c:161:27: warning: passing argument 1 of ‘mrb_fixnum_value’ makes integer from pointer without a cast [-Wint-conversion]
  161 |   return mrb_fixnum_value(mrb, mrb_fixnum(xv) / y);
      |                           ^~~
      |                           |
      |                           mrb_state * {aka struct mrb_state *}
In file included from /home/wataru/dev-mruby/include/mruby.h:90,
                 from /home/wataru/dev-mruby/src/numeric.c:15:
/home/wataru/dev-mruby/include/mruby/value.h:291:47: note: expected ‘mrb_int’ {aka ‘long int’} but argument is of type ‘mrb_state *’ {aka ‘struct mrb_state *’}
  291 | MRB_INLINE mrb_value mrb_fixnum_value(mrb_int i)
      |                                       ~~~~~~~~^
/home/wataru/dev-mruby/src/numeric.c:161:10: error: too many arguments to function ‘mrb_fixnum_value’
  161 |   return mrb_fixnum_value(mrb, mrb_fixnum(xv) / y);
      |          ^~~~~~~~~~~~~~~~
In file included from /home/wataru/dev-mruby/include/mruby.h:90,
                 from /home/wataru/dev-mruby/src/numeric.c:15:
/home/wataru/dev-mruby/include/mruby/value.h:291:22: note: declared here
  291 | MRB_INLINE mrb_value mrb_fixnum_value(mrb_int i)
      |                      ^~~~~~~~~~~~~~~~
/home/wataru/dev-mruby/src/numeric.c: In function ‘integral_div’:
/home/wataru/dev-mruby/src/numeric.c:161:27: warning: passing argument 1 of ‘mrb_fixnum_value’ makes integer from pointer without a cast [-Wint-conversion]
  161 |   return mrb_fixnum_value(mrb, mrb_fixnum(xv) / y);
      |                           ^~~
      |                           |
      |                           mrb_state * {aka struct mrb_state *}
In file included from /home/wataru/dev-mruby/include/mruby.h:90,
                 from /home/wataru/dev-mruby/src/numeric.c:15:
/home/wataru/dev-mruby/include/mruby/value.h:291:47: note: expected ‘mrb_int’ {aka ‘long int’} but argument is of type ‘mrb_state *’ {aka ‘struct mrb_state *’}
  291 | MRB_INLINE mrb_value mrb_fixnum_value(mrb_int i)
      |                                       ~~~~~~~~^
/home/wataru/dev-mruby/src/numeric.c:161:10: error: too many arguments to function ‘mrb_fixnum_value’
  161 |   return mrb_fixnum_value(mrb, mrb_fixnum(xv) / y);
      |          ^~~~~~~~~~~~~~~~
In file included from /home/wataru/dev-mruby/include/mruby.h:90,
                 from /home/wataru/dev-mruby/src/numeric.c:15:
/home/wataru/dev-mruby/include/mruby/value.h:291:22: note: declared here
  291 | MRB_INLINE mrb_value mrb_fixnum_value(mrb_int i)
      |                      ^~~~~~~~~~~~~~~~
rake aborted!
Command failed with status (1): [gcc -std=gnu99 -DMRB_WITHOUT_FLOAT -I""/hom...]
/home/wataru/dev-mruby/lib/mruby/build/command.rb:39:in `_run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:44:in `rescue in _run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:40:in `_run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:90:in `run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:113:in `block (2 levels) in define_rules'
/home/wataru/.rvm/gems/ruby-2.6.6/gems/rake-13.0.1/exe/rake:27:in `<top (required)>'
/home/wataru/.rvm/gems/ruby-2.6.6@metasploit-framework/bin/ruby_executable_hooks:24:in `eval'
/home/wataru/.rvm/gems/ruby-2.6.6@metasploit-framework/bin/ruby_executable_hooks:24:in `<main>'

Caused by:
Command failed with status (1): [gcc -std=gnu99 -DMRB_WITHOUT_FLOAT -I""/hom...]
/home/wataru/dev-mruby/lib/mruby/build/command.rb:41:in `_run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:90:in `run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:113:in `block (2 levels) in define_rules'
/home/wataru/.rvm/gems/ruby-2.6.6/gems/rake-13.0.1/exe/rake:27:in `<top (required)>'
/home/wataru/.rvm/gems/ruby-2.6.6@metasploit-framework/bin/ruby_executable_hooks:24:in `eval'
/home/wataru/.rvm/gems/ruby-2.6.6@metasploit-framework/bin/ruby_executable_hooks:24:in `<main>'
Tasks: TOP => default => all => /home/wataru/dev-mruby/build/host/lib/libmruby.flags.mak => /home/wataru/dev-mruby/build/host/lib/libmruby.a => /home/wataru/dev-mruby/build/host/src/numeric.o
(See full trace by running task with --trace)

After this fix, this error does not happen.
However, we have to edit another file as below to complete build without MRB_WITHOUT_FLOAT flag.
Build
To build with MRB_WITHOUT_FLOAT flag, we have to edit mrbgems/default.gembox as belows:
--- a/mrbgems/default.gembox
+++ b/mrbgems/default.gembox
@@ -15,7 +15,7 @@ MRuby::GemBox.new do |conf|
   conf.gem :core => ""mruby-print""
 
   # Use standard Math module
-  conf.gem :core => ""mruby-math""
+  # conf.gem :core => ""mruby-math""
 
   # Use standard Time class
   conf.gem :core => ""mruby-time""
@@ -73,7 +73,7 @@ MRuby::GemBox.new do |conf|
 
   # Use Rational/Complex numbers
   conf.gem :core => ""mruby-rational""
-  conf.gem :core => ""mruby-complex""
+  # conf.gem :core => ""mruby-complex""","Fixed Point
Fixed improper argument of mrb_fixnum_value().
Error
When built with MRB_WITHOUT_FLOAT flag, build fails as below:
$ CFLAGS=""-DMRB_WITHOUT_FLOAT"" rake
CC    src/vm.c -> build/host/src/vm.o
CC    src/error.c -> build/host/src/error.o
CC    src/dump.c -> build/host/src/dump.o
CC    src/string.c -> build/host/src/string.o
CC    src/init.c -> build/host/src/init.o
CC    src/hash.c -> build/host/src/hash.o
CC    src/numeric.c -> build/host/src/numeric.o
/home/wataru/dev-mruby/src/numeric.c: In function ‘integral_div’:
/home/wataru/dev-mruby/src/numeric.c:161:27: warning: passing argument 1 of ‘mrb_fixnum_value’ makes integer from pointer without a cast [-Wint-conversion]
  161 |   return mrb_fixnum_value(mrb, mrb_fixnum(xv) / y);
      |                           ^~~
      |                           |
      |                           mrb_state * {aka struct mrb_state *}
In file included from /home/wataru/dev-mruby/include/mruby.h:90,
                 from /home/wataru/dev-mruby/src/numeric.c:15:
/home/wataru/dev-mruby/include/mruby/value.h:291:47: note: expected ‘mrb_int’ {aka ‘long int’} but argument is of type ‘mrb_state *’ {aka ‘struct mrb_state *’}
  291 | MRB_INLINE mrb_value mrb_fixnum_value(mrb_int i)
      |                                       ~~~~~~~~^
/home/wataru/dev-mruby/src/numeric.c:161:10: error: too many arguments to function ‘mrb_fixnum_value’
  161 |   return mrb_fixnum_value(mrb, mrb_fixnum(xv) / y);
      |          ^~~~~~~~~~~~~~~~
In file included from /home/wataru/dev-mruby/include/mruby.h:90,
                 from /home/wataru/dev-mruby/src/numeric.c:15:
/home/wataru/dev-mruby/include/mruby/value.h:291:22: note: declared here
  291 | MRB_INLINE mrb_value mrb_fixnum_value(mrb_int i)
      |                      ^~~~~~~~~~~~~~~~
/home/wataru/dev-mruby/src/numeric.c: In function ‘integral_div’:
/home/wataru/dev-mruby/src/numeric.c:161:27: warning: passing argument 1 of ‘mrb_fixnum_value’ makes integer from pointer without a cast [-Wint-conversion]
  161 |   return mrb_fixnum_value(mrb, mrb_fixnum(xv) / y);
      |                           ^~~
      |                           |
      |                           mrb_state * {aka struct mrb_state *}
In file included from /home/wataru/dev-mruby/include/mruby.h:90,
                 from /home/wataru/dev-mruby/src/numeric.c:15:
/home/wataru/dev-mruby/include/mruby/value.h:291:47: note: expected ‘mrb_int’ {aka ‘long int’} but argument is of type ‘mrb_state *’ {aka ‘struct mrb_state *’}
  291 | MRB_INLINE mrb_value mrb_fixnum_value(mrb_int i)
      |                                       ~~~~~~~~^
/home/wataru/dev-mruby/src/numeric.c:161:10: error: too many arguments to function ‘mrb_fixnum_value’
  161 |   return mrb_fixnum_value(mrb, mrb_fixnum(xv) / y);
      |          ^~~~~~~~~~~~~~~~
In file included from /home/wataru/dev-mruby/include/mruby.h:90,
                 from /home/wataru/dev-mruby/src/numeric.c:15:
/home/wataru/dev-mruby/include/mruby/value.h:291:22: note: declared here
  291 | MRB_INLINE mrb_value mrb_fixnum_value(mrb_int i)
      |                      ^~~~~~~~~~~~~~~~
rake aborted!
Command failed with status (1): [gcc -std=gnu99 -DMRB_WITHOUT_FLOAT -I""/hom...]
/home/wataru/dev-mruby/lib/mruby/build/command.rb:39:in `_run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:44:in `rescue in _run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:40:in `_run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:90:in `run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:113:in `block (2 levels) in define_rules'
/home/wataru/.rvm/gems/ruby-2.6.6/gems/rake-13.0.1/exe/rake:27:in `<top (required)>'
/home/wataru/.rvm/gems/ruby-2.6.6@metasploit-framework/bin/ruby_executable_hooks:24:in `eval'
/home/wataru/.rvm/gems/ruby-2.6.6@metasploit-framework/bin/ruby_executable_hooks:24:in `<main>'

Caused by:
Command failed with status (1): [gcc -std=gnu99 -DMRB_WITHOUT_FLOAT -I""/hom...]
/home/wataru/dev-mruby/lib/mruby/build/command.rb:41:in `_run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:90:in `run'
/home/wataru/dev-mruby/lib/mruby/build/command.rb:113:in `block (2 levels) in define_rules'
/home/wataru/.rvm/gems/ruby-2.6.6/gems/rake-13.0.1/exe/rake:27:in `<top (required)>'
/home/wataru/.rvm/gems/ruby-2.6.6@metasploit-framework/bin/ruby_executable_hooks:24:in `eval'
/home/wataru/.rvm/gems/ruby-2.6.6@metasploit-framework/bin/ruby_executable_hooks:24:in `<main>'
Tasks: TOP => default => all => /home/wataru/dev-mruby/build/host/lib/libmruby.flags.mak => /home/wataru/dev-mruby/build/host/lib/libmruby.a => /home/wataru/dev-mruby/build/host/src/numeric.o
(See full trace by running task with --trace)

After this fix, this error does not happen.
However, we have to edit another file as below to complete build without MRB_WITHOUT_FLOAT flag.
Build
To build with MRB_WITHOUT_FLOAT flag, we have to edit mrbgems/default.gembox as belows:
--- a/mrbgems/default.gembox
+++ b/mrbgems/default.gembox
@@ -15,7 +15,7 @@ MRuby::GemBox.new do |conf|
   conf.gem :core => ""mruby-print""
 
   # Use standard Math module
-  conf.gem :core => ""mruby-math""
+  # conf.gem :core => ""mruby-math""
 
   # Use standard Time class
   conf.gem :core => ""mruby-time""
@@ -73,7 +73,7 @@ MRuby::GemBox.new do |conf|
 
   # Use Rational/Complex numbers
   conf.gem :core => ""mruby-rational""
-  conf.gem :core => ""mruby-complex""
+  # conf.gem :core => ""mruby-complex""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5091,2020-10-12T08:02:06Z,2020-10-12T09:23:23Z,2020-10-12T09:23:23Z,MERGED,True,0,1,1,https://github.com/n4o847,Remove unnecessary assignment in String#upto,1,[],https://github.com/mruby/mruby/pull/5091,https://github.com/n4o847,1,https://github.com/mruby/mruby/pull/5091,"Remove unnecessary assignment in String#upto.
len is already assigned to in L409 and not modified afterwards. So no need to assign in L425.","Remove unnecessary assignment in String#upto.
len is already assigned to in L409 and not modified afterwards. So no need to assign in L425.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5092,2020-10-13T05:12:26Z,2020-10-13T05:12:48Z,2020-10-13T05:40:30Z,CLOSED,False,1449,1252,11,https://github.com/taiyoslime,(resubmitted) Introduce endless range (a part of #5085),1,[],https://github.com/mruby/mruby/pull/5092,https://github.com/taiyoslime,1,https://github.com/mruby/mruby/pull/5092,resubmitted in #5093 (edited),resubmitted in #5093 (edited),True,{}
mruby/mruby,https://github.com/mruby/mruby,5092,2020-10-13T05:12:26Z,2020-10-13T05:12:48Z,2020-10-13T05:40:30Z,CLOSED,False,1449,1252,11,https://github.com/taiyoslime,(resubmitted) Introduce endless range (a part of #5085),1,[],https://github.com/mruby/mruby/pull/5092,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5092#issuecomment-707493949,resubmitted in #5093 (edited),Why did you close the issue? Are you going to resubmit?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5092,2020-10-13T05:12:26Z,2020-10-13T05:12:48Z,2020-10-13T05:40:30Z,CLOSED,False,1449,1252,11,https://github.com/taiyoslime,(resubmitted) Introduce endless range (a part of #5085),1,[],https://github.com/mruby/mruby/pull/5092,https://github.com/taiyoslime,3,https://github.com/mruby/mruby/pull/5092#issuecomment-707494757,resubmitted in #5093 (edited),"Actually yes, I apologize for the confusion.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5093,2020-10-13T05:17:55Z,2020-10-15T09:36:43Z,2021-05-20T18:15:55Z,MERGED,True,1449,1252,11,https://github.com/taiyoslime,Introduce endless range (a part of #5085),1,[],https://github.com/mruby/mruby/pull/5093,https://github.com/taiyoslime,1,https://github.com/mruby/mruby/pull/5093,"We introduced endless range feature, which is proposed in #5085 and already supported in CRuby.
Current Behavior
> Range.new(1,nil)
bad value for range (ArgumentError)

Example behavior after this commit
# mruby 
> Range.new(1,nil)
 => 1..
> (1...)
 => 1...
> (1..).each {|n| p n}
1
2
3
(snip)
> ('a'...).each {|c| p c; break if c>='f'}
""a""
""b""
""c""
""d""
""e""
""f""
 => nil
 > ""Ruby""[1..]
 => ""uby""
 > a = [0, 1, 2, 3, 4]; a[1..] = 5
 => 5
 > a
 => [0, 5]

# CRuby(2.6.6)
2.6.6 :001 > Range.new(1,nil)
 => 1.. 
2.6.6 :002 > (1...)
 => 1... 
2.6.6 :001 > (1..).each {|n| p n}
1
2
3
(snip)
2.6.6 :011 > ('a'...).each {|c| p c; break if c>='f'}
""a""
""b""
""c""
""d""
""e""
""f""
 => nil
2.6.6 :001 > ""Ruby""[1..]
 => ""uby"" 
2.6.6 :002 > a = [0, 1, 2, 3, 4]; a[1..] = 5
2.6.6 :003 > a
 => [0, 5]

For other changes, please see the diff.
Things to notice

Based on CRuby, Range#size returns Float::INFINITY when it is endless. Under MRB_WITHOUT_FLOAT environment, we implemented to return nil for now.

# CRuby(2.6.6)
2.6.6 :015 > (1..).size
 => Infinity

# mruby
> (1..).size
=> Infinity

# mruby (built with MRB_WITHOUT_FLOAT flag)
> (1..).size
=> nil


Range#last

According to ISO, Range#last is an alias of Range#end (15.2.14.4.10), which is actually not the case in current Ruby anymore (e.g. Range#last can take 0 or 1 argument, but Range#end does not take arguments.). Since the core of mruby basically needs to follow ISO, those features in CRuby have been implemented as extension(mruby-range-ext) in current mruby.
In CRuby, Range#last raises a RangeError when it is endless. (while Range#end returns nil), so we implemented this feature to extension(mruby-range-ext)'s Range#last following that implementation.



# CRuby(2.6.6)
2.6.6 :002 > (1..).last
Traceback (most recent call last):
        5: from /home/wataru/ruby/bin/irb:23:in `<main>'
        4: from /home/wataru/ruby/bin/irb:23:in `load'
        3: from /home/wataru/.rvm/gems/ruby-2.6.6/gems/irb-1.2.4/exe/irb:11:in `<top (required)>'
        2: from (irb):2
        1: from (irb):2:in `last'
RangeError (cannot get the last element of endless range)

# mruby (core)
> (1..).last
 => nil

# mruby (with mruby-range-ext)
> (1..).last
cannot get the last element of endless range (RangeError)


To implement Range#each, we need to prepare upto method of String wihich correspond to endless range separately from the existing String#upto (CRuby also takes the same steps). According to the other implementation in mruby, we implement String#__upto_endless for private in use.","We introduced endless range feature, which is proposed in #5085 and already supported in CRuby.
Current Behavior
> Range.new(1,nil)
bad value for range (ArgumentError)

Example behavior after this commit
# mruby 
> Range.new(1,nil)
 => 1..
> (1...)
 => 1...
> (1..).each {|n| p n}
1
2
3
(snip)
> ('a'...).each {|c| p c; break if c>='f'}
""a""
""b""
""c""
""d""
""e""
""f""
 => nil
 > ""Ruby""[1..]
 => ""uby""
 > a = [0, 1, 2, 3, 4]; a[1..] = 5
 => 5
 > a
 => [0, 5]

# CRuby(2.6.6)
2.6.6 :001 > Range.new(1,nil)
 => 1.. 
2.6.6 :002 > (1...)
 => 1... 
2.6.6 :001 > (1..).each {|n| p n}
1
2
3
(snip)
2.6.6 :011 > ('a'...).each {|c| p c; break if c>='f'}
""a""
""b""
""c""
""d""
""e""
""f""
 => nil
2.6.6 :001 > ""Ruby""[1..]
 => ""uby"" 
2.6.6 :002 > a = [0, 1, 2, 3, 4]; a[1..] = 5
2.6.6 :003 > a
 => [0, 5]

For other changes, please see the diff.
Things to notice

Based on CRuby, Range#size returns Float::INFINITY when it is endless. Under MRB_WITHOUT_FLOAT environment, we implemented to return nil for now.

# CRuby(2.6.6)
2.6.6 :015 > (1..).size
 => Infinity

# mruby
> (1..).size
=> Infinity

# mruby (built with MRB_WITHOUT_FLOAT flag)
> (1..).size
=> nil


Range#last

According to ISO, Range#last is an alias of Range#end (15.2.14.4.10), which is actually not the case in current Ruby anymore (e.g. Range#last can take 0 or 1 argument, but Range#end does not take arguments.). Since the core of mruby basically needs to follow ISO, those features in CRuby have been implemented as extension(mruby-range-ext) in current mruby.
In CRuby, Range#last raises a RangeError when it is endless. (while Range#end returns nil), so we implemented this feature to extension(mruby-range-ext)'s Range#last following that implementation.



# CRuby(2.6.6)
2.6.6 :002 > (1..).last
Traceback (most recent call last):
        5: from /home/wataru/ruby/bin/irb:23:in `<main>'
        4: from /home/wataru/ruby/bin/irb:23:in `load'
        3: from /home/wataru/.rvm/gems/ruby-2.6.6/gems/irb-1.2.4/exe/irb:11:in `<top (required)>'
        2: from (irb):2
        1: from (irb):2:in `last'
RangeError (cannot get the last element of endless range)

# mruby (core)
> (1..).last
 => nil

# mruby (with mruby-range-ext)
> (1..).last
cannot get the last element of endless range (RangeError)


To implement Range#each, we need to prepare upto method of String wihich correspond to endless range separately from the existing String#upto (CRuby also takes the same steps). According to the other implementation in mruby, we implement String#__upto_endless for private in use.",True,{'THUMBS_UP': ['https://github.com/wataash']}
mruby/mruby,https://github.com/mruby/mruby,5093,2020-10-13T05:17:55Z,2020-10-15T09:36:43Z,2021-05-20T18:15:55Z,MERGED,True,1449,1252,11,https://github.com/taiyoslime,Introduce endless range (a part of #5085),1,[],https://github.com/mruby/mruby/pull/5093,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5093#issuecomment-707495160,"We introduced endless range feature, which is proposed in #5085 and already supported in CRuby.
Current Behavior
> Range.new(1,nil)
bad value for range (ArgumentError)

Example behavior after this commit
# mruby 
> Range.new(1,nil)
 => 1..
> (1...)
 => 1...
> (1..).each {|n| p n}
1
2
3
(snip)
> ('a'...).each {|c| p c; break if c>='f'}
""a""
""b""
""c""
""d""
""e""
""f""
 => nil
 > ""Ruby""[1..]
 => ""uby""
 > a = [0, 1, 2, 3, 4]; a[1..] = 5
 => 5
 > a
 => [0, 5]

# CRuby(2.6.6)
2.6.6 :001 > Range.new(1,nil)
 => 1.. 
2.6.6 :002 > (1...)
 => 1... 
2.6.6 :001 > (1..).each {|n| p n}
1
2
3
(snip)
2.6.6 :011 > ('a'...).each {|c| p c; break if c>='f'}
""a""
""b""
""c""
""d""
""e""
""f""
 => nil
2.6.6 :001 > ""Ruby""[1..]
 => ""uby"" 
2.6.6 :002 > a = [0, 1, 2, 3, 4]; a[1..] = 5
2.6.6 :003 > a
 => [0, 5]

For other changes, please see the diff.
Things to notice

Based on CRuby, Range#size returns Float::INFINITY when it is endless. Under MRB_WITHOUT_FLOAT environment, we implemented to return nil for now.

# CRuby(2.6.6)
2.6.6 :015 > (1..).size
 => Infinity

# mruby
> (1..).size
=> Infinity

# mruby (built with MRB_WITHOUT_FLOAT flag)
> (1..).size
=> nil


Range#last

According to ISO, Range#last is an alias of Range#end (15.2.14.4.10), which is actually not the case in current Ruby anymore (e.g. Range#last can take 0 or 1 argument, but Range#end does not take arguments.). Since the core of mruby basically needs to follow ISO, those features in CRuby have been implemented as extension(mruby-range-ext) in current mruby.
In CRuby, Range#last raises a RangeError when it is endless. (while Range#end returns nil), so we implemented this feature to extension(mruby-range-ext)'s Range#last following that implementation.



# CRuby(2.6.6)
2.6.6 :002 > (1..).last
Traceback (most recent call last):
        5: from /home/wataru/ruby/bin/irb:23:in `<main>'
        4: from /home/wataru/ruby/bin/irb:23:in `load'
        3: from /home/wataru/.rvm/gems/ruby-2.6.6/gems/irb-1.2.4/exe/irb:11:in `<top (required)>'
        2: from (irb):2
        1: from (irb):2:in `last'
RangeError (cannot get the last element of endless range)

# mruby (core)
> (1..).last
 => nil

# mruby (with mruby-range-ext)
> (1..).last
cannot get the last element of endless range (RangeError)


To implement Range#each, we need to prepare upto method of String wihich correspond to endless range separately from the existing String#upto (CRuby also takes the same steps). According to the other implementation in mruby, we implement String#__upto_endless for private in use.",I will merge this PR after updating master by mruby3 branch.,True,"{'THUMBS_UP': ['https://github.com/smallkirby'], 'HOORAY': ['https://github.com/taiyoslime'], 'LAUGH': ['https://github.com/n4o847']}"
mruby/mruby,https://github.com/mruby/mruby,5094,2020-10-16T01:50:51Z,2020-10-16T01:56:55Z,2020-10-16T01:56:55Z,MERGED,True,8,6,2,https://github.com/mimaki,mruby 3.0.0-preview.,1,[],https://github.com/mruby/mruby/pull/5094,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/5094,"Change mruby version to 3.0.0 for preview.
Some document (e.g. doc/limitations.md) has not changed yet.","Change mruby version to 3.0.0 for preview.
Some document (e.g. doc/limitations.md) has not changed yet.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5097,2020-10-18T11:31:23Z,2020-10-19T13:55:14Z,2020-10-24T13:34:38Z,CLOSED,False,123,126,23,https://github.com/dearblue,Prohibit changes by `RARRAY_PTR()` and `ARY_PTR()`,1,[],https://github.com/mruby/mruby/pull/5097,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5097,"Previously, explicit write-barriers were required to change content using these macros.
From now on it can use ARY_PTR_NEED_WB() instead if it wants to get a pointer without const that requires write-barrier.
But if it wants to change only a few contents of the array object, the mrb_ary_set() function will be more useful.
With this change, the following function specifications will change:

The mrb_get_argv() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is a splat argument (array object) and to write-barrier if necessary.
The ""a""/""*"" specifier of the mrb_get_args() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is an array object and write-barrier if necessary.
And it requires calling mrb_ary_modify() on the unmodified array object, which is also difficult (this is similar to #5087).","Previously, explicit write-barriers were required to change content using these macros.
From now on it can use ARY_PTR_NEED_WB() instead if it wants to get a pointer without const that requires write-barrier.
But if it wants to change only a few contents of the array object, the mrb_ary_set() function will be more useful.
With this change, the following function specifications will change:

The mrb_get_argv() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is a splat argument (array object) and to write-barrier if necessary.
The ""a""/""*"" specifier of the mrb_get_args() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is an array object and write-barrier if necessary.
And it requires calling mrb_ary_modify() on the unmodified array object, which is also difficult (this is similar to #5087).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5097,2020-10-18T11:31:23Z,2020-10-19T13:55:14Z,2020-10-24T13:34:38Z,CLOSED,False,123,126,23,https://github.com/dearblue,Prohibit changes by `RARRAY_PTR()` and `ARY_PTR()`,1,[],https://github.com/mruby/mruby/pull/5097,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5097#issuecomment-711734335,"Previously, explicit write-barriers were required to change content using these macros.
From now on it can use ARY_PTR_NEED_WB() instead if it wants to get a pointer without const that requires write-barrier.
But if it wants to change only a few contents of the array object, the mrb_ary_set() function will be more useful.
With this change, the following function specifications will change:

The mrb_get_argv() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is a splat argument (array object) and to write-barrier if necessary.
The ""a""/""*"" specifier of the mrb_get_args() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is an array object and write-barrier if necessary.
And it requires calling mrb_ary_modify() on the unmodified array object, which is also difficult (this is similar to #5087).","I'm against this breaking changes because I think changing the behavior of RARRAY_PTR/ARY_PTR have a big impact. At least my product at hand will not work.
If you want to ensure that array content is not changed, it would be better to create another APIs (e.g. RARRAY_CONST_PTR/ARY_CONST_PTR). I kind of remember that similar APIs was added to CRuby when RGenGC or something was introduced.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5097,2020-10-18T11:31:23Z,2020-10-19T13:55:14Z,2020-10-24T13:34:38Z,CLOSED,False,123,126,23,https://github.com/dearblue,Prohibit changes by `RARRAY_PTR()` and `ARY_PTR()`,1,[],https://github.com/mruby/mruby/pull/5097,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5097#issuecomment-711818969,"Previously, explicit write-barriers were required to change content using these macros.
From now on it can use ARY_PTR_NEED_WB() instead if it wants to get a pointer without const that requires write-barrier.
But if it wants to change only a few contents of the array object, the mrb_ary_set() function will be more useful.
With this change, the following function specifications will change:

The mrb_get_argv() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is a splat argument (array object) and to write-barrier if necessary.
The ""a""/""*"" specifier of the mrb_get_args() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is an array object and write-barrier if necessary.
And it requires calling mrb_ary_modify() on the unmodified array object, which is also difficult (this is similar to #5087).","I agree with @shuujii regarding MRB_ARY_PTR_NEED_WB. It is better but incompatible too much.
Maybe some changes regarding mrb_get_args are acceptable.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5097,2020-10-18T11:31:23Z,2020-10-19T13:55:14Z,2020-10-24T13:34:38Z,CLOSED,False,123,126,23,https://github.com/dearblue,Prohibit changes by `RARRAY_PTR()` and `ARY_PTR()`,1,[],https://github.com/mruby/mruby/pull/5097,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5097#issuecomment-712173341,"Previously, explicit write-barriers were required to change content using these macros.
From now on it can use ARY_PTR_NEED_WB() instead if it wants to get a pointer without const that requires write-barrier.
But if it wants to change only a few contents of the array object, the mrb_ary_set() function will be more useful.
With this change, the following function specifications will change:

The mrb_get_argv() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is a splat argument (array object) and to write-barrier if necessary.
The ""a""/""*"" specifier of the mrb_get_args() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is an array object and write-barrier if necessary.
And it requires calling mrb_ary_modify() on the unmodified array object, which is also difficult (this is similar to #5087).","I checked CRuby's RARRAY_PTR() again, but it doesn't have const.
What I made a mistake, and I feel like I was to be bewitched by a fox...
I will withdraw this proposal because their opinions are plausible.
I will make a pull request related to mrb_get_args() later.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5098,2020-10-19T06:17:40Z,2020-10-29T01:42:56Z,2020-11-21T03:56:44Z,MERGED,True,50,81,31,https://github.com/shuujii,Revert `MRUBY_TARGET` mechanism; ref #5096,1,[],https://github.com/mruby/mruby/pull/5098,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5098,"In explanation of mruby, the expression build_config.rb is frequently
used including official documents, so I think that it will not make sense
if the file is no longer used.
The MRUBY_TARGET mechanism seems to have little improvement, so I don't
think it should be changed to avoid unnecessary confusion.
MRUBY_TARGET and MRuby.targets represent somewhat different things,
so using the same term ""target"" is a bit confusing.

The mechanism that can be written short when using a file under
build_config (renamed from target) directory remains
(build_config/${MRUBY_CONFIG}.rb is used if the path specified
in MRUBY_CONFIG doesn't exist).","In explanation of mruby, the expression build_config.rb is frequently
used including official documents, so I think that it will not make sense
if the file is no longer used.
The MRUBY_TARGET mechanism seems to have little improvement, so I don't
think it should be changed to avoid unnecessary confusion.
MRUBY_TARGET and MRuby.targets represent somewhat different things,
so using the same term ""target"" is a bit confusing.

The mechanism that can be written short when using a file under
build_config (renamed from target) directory remains
(build_config/${MRUBY_CONFIG}.rb is used if the path specified
in MRUBY_CONFIG doesn't exist).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5098,2020-10-19T06:17:40Z,2020-10-29T01:42:56Z,2020-11-21T03:56:44Z,MERGED,True,50,81,31,https://github.com/shuujii,Revert `MRUBY_TARGET` mechanism; ref #5096,1,[],https://github.com/mruby/mruby/pull/5098,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5098#issuecomment-718531591,"In explanation of mruby, the expression build_config.rb is frequently
used including official documents, so I think that it will not make sense
if the file is no longer used.
The MRUBY_TARGET mechanism seems to have little improvement, so I don't
think it should be changed to avoid unnecessary confusion.
MRUBY_TARGET and MRuby.targets represent somewhat different things,
so using the same term ""target"" is a bit confusing.

The mechanism that can be written short when using a file under
build_config (renamed from target) directory remains
(build_config/${MRUBY_CONFIG}.rb is used if the path specified
in MRUBY_CONFIG doesn't exist).",Thank you for merging!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5099,2020-10-22T14:34:10Z,2020-10-23T06:43:19Z,2020-10-24T13:34:37Z,MERGED,True,54,46,19,https://github.com/dearblue,"Prohibit array changes by ""a""/""*"" specifier of `mrb_get_args()`",1,[],https://github.com/mruby/mruby/pull/5099,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5099,"The ""a""/""*"" specifier of the mrb_get_args() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is an array object and write-barrier if necessary.
And it requires calling mrb_ary_modify() on the unmodified array object, which is also difficult (this is similar to #5087).

This is a part of #5097.","The ""a""/""*"" specifier of the mrb_get_args() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is an array object and write-barrier if necessary.
And it requires calling mrb_ary_modify() on the unmodified array object, which is also difficult (this is similar to #5087).

This is a part of #5097.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5100,2020-10-22T14:36:12Z,2020-10-23T06:41:47Z,2020-10-24T13:34:38Z,MERGED,True,4,4,3,https://github.com/dearblue,Prohibit array changes by `mrb_get_argv()`,1,[],https://github.com/mruby/mruby/pull/5100,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5100,"The mrb_get_argv() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is a splat argument (array object) and to write-barrier if necessary.

This is a part of #5097.","The mrb_get_argv() function will now return const mrb_value *.
This is because it is difficult for the caller to check if it is a splat argument (array object) and to write-barrier if necessary.

This is a part of #5097.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5101,2020-10-24T13:49:58Z,2020-10-24T14:03:59Z,2020-10-24T14:16:43Z,MERGED,True,11,29,2,https://github.com/dearblue,Reorganize `env_new()` as `mrb_env_new()`,1,[],https://github.com/mruby/mruby/pull/5101,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5101,"The mrb_env_new() function is a global function, but it is still treated as an internal function.","The mrb_env_new() function is a global function, but it is still treated as an internal function.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5102,2020-10-28T12:37:31Z,2020-10-29T01:41:57Z,2020-11-08T07:40:53Z,MERGED,True,3,4,3,https://github.com/dearblue,Fixed build with `conf.enable_cxx_exception`,1,[],https://github.com/mruby/mruby/pull/5102,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5102,The problem was manifested by commit 5069fb1.,The problem was manifested by commit 5069fb1.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5103,2020-10-28T14:29:10Z,2020-10-28T22:01:10Z,2020-11-21T03:56:36Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix `mrb_obj_id` to `Float`,1,[],https://github.com/mruby/mruby/pull/5103,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5103,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5104,2020-10-29T09:27:46Z,2020-10-29T13:51:44Z,2020-11-21T03:56:38Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `doc/guides/compile.md` [ci skip],1,[],https://github.com/mruby/mruby/pull/5104,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5104,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5105,2020-10-29T09:49:14Z,2020-10-29T13:52:18Z,2020-11-21T03:56:38Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `Range#last`,1,[],https://github.com/mruby/mruby/pull/5105,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5105,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5108,2020-11-01T04:43:55Z,2020-11-01T09:19:01Z,2020-11-01T09:19:01Z,MERGED,True,20,1,2,https://github.com/mimaki,Add `preview` to version.,2,[],https://github.com/mruby/mruby/pull/5108,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/5108,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5110,2020-11-01T12:25:21Z,2020-11-01T13:19:41Z,2020-11-01T13:19:41Z,MERGED,True,3,3,2,https://github.com/bshastry,ossfuzz: Fix mruby include paths,1,[],https://github.com/mruby/mruby/pull/5110,https://github.com/bshastry,1,https://github.com/mruby/mruby/pull/5110,See google/oss-fuzz#4583,See google/oss-fuzz#4583,True,{}
mruby/mruby,https://github.com/mruby/mruby,5111,2020-11-02T05:25:25Z,2020-11-02T06:14:25Z,2020-11-21T03:56:37Z,MERGED,True,5,8,2,https://github.com/shuujii,Fix parallel build,1,[],https://github.com/mruby/mruby/pull/5111,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5111,"When rake -m and so on are used to build in parallel, building may be
started before presym files are generated. Then, for example, the following
error occurs and this issue is fixed.
In file included from /Users/shuujii/mruby/mruby/include/mruby.h:92:
/mruby/mruby/include/mruby/presym.h:16:10: fatal error: '../build/presym.inc' file not found
#include <../build/presym.inc>
         ^~~~~~~~~~~~~~~~~~~~~","When rake -m and so on are used to build in parallel, building may be
started before presym files are generated. Then, for example, the following
error occurs and this issue is fixed.
In file included from /Users/shuujii/mruby/mruby/include/mruby.h:92:
/mruby/mruby/include/mruby/presym.h:16:10: fatal error: '../build/presym.inc' file not found
#include <../build/presym.inc>
         ^~~~~~~~~~~~~~~~~~~~~",True,{}
mruby/mruby,https://github.com/mruby/mruby,5112,2020-11-03T07:18:03Z,2020-11-03T09:12:51Z,2020-11-21T03:56:35Z,MERGED,True,0,3,1,https://github.com/shuujii,Fix dependencies of `y.tab.o`,1,[],https://github.com/mruby/mruby/pull/5112,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5112,"In the case of y.tab.o, y.tab.d was not read, so y.tab.c was not
recompiled by updating header files.
It seemed that the cause was overwriting the rake rule, so I deleted
unnecessary settings.","In the case of y.tab.o, y.tab.d was not read, so y.tab.c was not
recompiled by updating header files.
It seemed that the cause was overwriting the rake rule, so I deleted
unnecessary settings.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5113,2020-11-03T07:18:22Z,2020-11-03T09:13:56Z,2020-11-21T03:56:40Z,MERGED,True,4,3,1,https://github.com/shuujii,Reduce recompilation when updating presym target files,1,[],https://github.com/mruby/mruby/pull/5113,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5113,"Fix that updating presym target files would recompile almost all files even
if symbols did not change.","Fix that updating presym target files would recompile almost all files even
if symbols did not change.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5115,2020-11-08T02:11:21Z,2020-11-08T03:30:30Z,2020-11-08T07:40:54Z,MERGED,True,2,0,1,https://github.com/dearblue,Suppress `-Wunused-function`,1,[],https://github.com/mruby/mruby/pull/5115,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5115,"If no gem was specified, it was warning because init_mrbgems() was not used.
ref: #4250","If no gem was specified, it was warning because init_mrbgems() was not used.
ref: #4250",True,{}
mruby/mruby,https://github.com/mruby/mruby,5117,2020-11-08T05:33:11Z,2020-11-08T05:38:18Z,2020-11-08T07:40:53Z,MERGED,True,4,0,1,https://github.com/dearblue,Fixed build NaN boxing with 32-bit CPU mode,1,[],https://github.com/mruby/mruby/pull/5117,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5117,SET_CPTR_VALUE() requires the p field on 32-bit CPU mode.,SET_CPTR_VALUE() requires the p field on 32-bit CPU mode.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5118,2020-11-08T05:33:49Z,2020-11-10T02:51:00Z,2020-11-14T02:34:41Z,MERGED,True,35,24,3,https://github.com/dearblue,Define `mrb_value` in struct for Word/NaN boxing,1,[],https://github.com/mruby/mruby/pull/5118,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5118,"This is to make it possible to distinguish between mrb_value and mrb_sym in C++ ""Function overloading"" and C11 ""Generic selection"".","This is to make it possible to distinguish between mrb_value and mrb_sym in C++ ""Function overloading"" and C11 ""Generic selection"".",True,{}
mruby/mruby,https://github.com/mruby/mruby,5119,2020-11-09T00:35:57Z,2020-11-09T02:19:22Z,2020-11-09T02:26:01Z,MERGED,True,9,1,1,https://github.com/kou,Don't check FD for STDIN/STDOUT/STDERR; #5114,1,[],https://github.com/mruby/mruby/pull/5119,https://github.com/kou,1,https://github.com/mruby/mruby/pull/5119,"We don't need to require valid STDIN/STDOUT/STDERR. If we require it, we
can't use mruby on environment that doesn't have valid
STDIN/STDOUT/STDERR such as Windows service process. Windows service
process doesn't have valid STDIN.","We don't need to require valid STDIN/STDOUT/STDERR. If we require it, we
can't use mruby on environment that doesn't have valid
STDIN/STDOUT/STDERR such as Windows service process. Windows service
process doesn't have valid STDIN.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5119,2020-11-09T00:35:57Z,2020-11-09T02:19:22Z,2020-11-09T02:26:01Z,MERGED,True,9,1,1,https://github.com/kou,Don't check FD for STDIN/STDOUT/STDERR; #5114,1,[],https://github.com/mruby/mruby/pull/5119,https://github.com/kou,2,https://github.com/mruby/mruby/pull/5119#issuecomment-723707043,"We don't need to require valid STDIN/STDOUT/STDERR. If we require it, we
can't use mruby on environment that doesn't have valid
STDIN/STDOUT/STDERR such as Windows service process. Windows service
process doesn't have valid STDIN.","The MinGW build is failed but it doesn't show any details: https://github.com/mruby/mruby/pull/5119/checks?check_run_id=1371799912
It's also failed on master: https://github.com/mruby/mruby/runs/1369511422
But it's succeeded on my fork: https://github.com/kou/mruby/runs/1371799791",True,{}
mruby/mruby,https://github.com/mruby/mruby,5120,2020-11-10T07:03:51Z,2020-11-10T07:07:37Z,2020-11-10T07:09:12Z,MERGED,True,1,1,1,https://github.com/kou,Fix typo in backward compatible mrb_exc_new_str_lit() macro,1,[],https://github.com/mruby/mruby/pull/5120,https://github.com/kou,1,https://github.com/mruby/mruby/pull/5120,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5121,2020-11-10T10:54:28Z,2020-11-10T12:56:43Z,2020-11-21T03:56:40Z,MERGED,True,1944,1002,4,https://github.com/shuujii,Reduce memory usage of Hash object,1,[],https://github.com/mruby/mruby/pull/5121,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5121,"Implementation Summary

Change entry list from segmented list to flat array.
Change value of hash bucket from pointer to entry to index of entry list,
and represent it by variable length bits according to capacity of hash
buckets.
Store management information about entry list and hash table to struct RHash as much as possible.

Benchmark Summary
Only the results of typical situations on 64-bit Word-boxing are present
here. For more detailed information, including consideration, see below
(although most of the body is written in Japanese).

https://shuujii.github.io/mruby-hash-benchmark

Memory Usage
Lower value is better.



Hash Size
Baseline
New
Factor




16
344B
256B
0.74419x


40
1,464B
840B
0.57377x


200
8,056B
3,784B
0.46971x


500
17,169B
9,944B
0.57949x



Performance
Higher value is better.
mrb_hash_set



Hash Size
Baseline
New
Factor




16
1.41847M i/s
1.36004M i/s
0.95881x


40
0.39224M i/s
0.31888M i/s
0.81296x


200
0.03780M i/s
0.04290M i/s
1.13494x


500
0.01225M i/s
0.01314M i/s
1.07275x



mrb_hash_get



Hash Size
Baseline
New
Factor




16
26.05920M i/s
30.19543M i/s
1.15872x


40
44.26420M i/s
32.75781M i/s
0.74005x


200
44.55171M i/s
31.56926M i/s
0.70860x


500
39.19250M i/s
29.73806M i/s
0.75877x



mrb_hash_each



Hash Size
Baseline
New
Factor




16
25.11964M i/s
30.34167M i/s
1.20789x


40
11.74253M i/s
13.25539M i/s
1.12884x


200
2.01133M i/s
2.97214M i/s
1.47770x


500
0.87411M i/s
1.21178M i/s
1.38631x



Hash#[]=



Hash Size
Baseline
New
Factor




16
0.50095M i/s
0.56490M i/s
1.12764x


40
0.19132M i/s
0.18392M i/s
0.96129x


200
0.03624M i/s
0.03256M i/s
0.89860x


500
0.01527M i/s
0.01236M i/s
0.80935x



Hash#[]



Hash Size
Baseline
New
Factor




16
11.53211M i/s
12.78806M i/s
1.10891x


40
15.26920M i/s
13.37529M i/s
0.87596x


200
15.28550M i/s
13.36410M i/s
0.87430x


500
14.57695M i/s
12.75388M i/s
0.87494x



Hash#each



Hash Size
Baseline
New
Factor




16
0.30462M i/s
0.27080M i/s
0.88898x


40
0.12912M i/s
0.11704M i/s
0.90642x


200
0.02638M i/s
0.02402M i/s
0.91071x


500
0.01066M i/s
0.00959M i/s
0.89953x



Hash#delete



Hash Size
Baseline
New
Factor




16
7.84167M i/s
6.96419M i/s
0.88810x


40
6.91292M i/s
7.41427M i/s
1.07252x


200
3.75952M i/s
7.32080M i/s
1.94727x


500
2.10754M i/s
7.05963M i/s
3.34970x



Hash#shift



Hash Size
Baseline
New
Factor




16
14.66444M i/s
13.18876M i/s
0.89937x


40
11.95124M i/s
11.10420M i/s
0.92913x


200
5.53681M i/s
7.88155M i/s
1.42348x


500
2.96728M i/s
5.40405M i/s
1.82121x



Hash#dup



Hash Size
Baseline
New
Factor




16
0.15063M i/s
5.37889M i/s
35.71024x


40
0.06515M i/s
3.38196M i/s
51.91279x


200
0.01359M i/s
1.46538M i/s
107.84056x


500
0.00559M i/s
0.75411M i/s
134.88057x



Binary Size
Lower value is better.



File
Baseline
New
Factor




mruby
730,408B
734,176B
1.00519x


libmruby.a
1,068,134B
1,072,846B
1.00441x



Other Fixes
The following issues have also been fixed in the parts where there was some
change this time.

Heap use-after-free in Hash#value?
Heap use-after-free in ht_hash_equal
Heap use-after-free in ht_hash_func
Heap use-after-free in mrb_hash_merge
Self-replacement does not work for Hash#replace
Repeated deletes and inserts increase memory usage of Hash
Hash#rehash does not reindex completely
mrb_hash_delete_key does not cause an error for frozen object
mrb_hash_new_capa does not allocate required space first
mrb_os_memsize_of_hash_table result is incorrect","Implementation Summary

Change entry list from segmented list to flat array.
Change value of hash bucket from pointer to entry to index of entry list,
and represent it by variable length bits according to capacity of hash
buckets.
Store management information about entry list and hash table to struct RHash as much as possible.

Benchmark Summary
Only the results of typical situations on 64-bit Word-boxing are present
here. For more detailed information, including consideration, see below
(although most of the body is written in Japanese).

https://shuujii.github.io/mruby-hash-benchmark

Memory Usage
Lower value is better.



Hash Size
Baseline
New
Factor




16
344B
256B
0.74419x


40
1,464B
840B
0.57377x


200
8,056B
3,784B
0.46971x


500
17,169B
9,944B
0.57949x



Performance
Higher value is better.
mrb_hash_set



Hash Size
Baseline
New
Factor




16
1.41847M i/s
1.36004M i/s
0.95881x


40
0.39224M i/s
0.31888M i/s
0.81296x


200
0.03780M i/s
0.04290M i/s
1.13494x


500
0.01225M i/s
0.01314M i/s
1.07275x



mrb_hash_get



Hash Size
Baseline
New
Factor




16
26.05920M i/s
30.19543M i/s
1.15872x


40
44.26420M i/s
32.75781M i/s
0.74005x


200
44.55171M i/s
31.56926M i/s
0.70860x


500
39.19250M i/s
29.73806M i/s
0.75877x



mrb_hash_each



Hash Size
Baseline
New
Factor




16
25.11964M i/s
30.34167M i/s
1.20789x


40
11.74253M i/s
13.25539M i/s
1.12884x


200
2.01133M i/s
2.97214M i/s
1.47770x


500
0.87411M i/s
1.21178M i/s
1.38631x



Hash#[]=



Hash Size
Baseline
New
Factor




16
0.50095M i/s
0.56490M i/s
1.12764x


40
0.19132M i/s
0.18392M i/s
0.96129x


200
0.03624M i/s
0.03256M i/s
0.89860x


500
0.01527M i/s
0.01236M i/s
0.80935x



Hash#[]



Hash Size
Baseline
New
Factor




16
11.53211M i/s
12.78806M i/s
1.10891x


40
15.26920M i/s
13.37529M i/s
0.87596x


200
15.28550M i/s
13.36410M i/s
0.87430x


500
14.57695M i/s
12.75388M i/s
0.87494x



Hash#each



Hash Size
Baseline
New
Factor




16
0.30462M i/s
0.27080M i/s
0.88898x


40
0.12912M i/s
0.11704M i/s
0.90642x


200
0.02638M i/s
0.02402M i/s
0.91071x


500
0.01066M i/s
0.00959M i/s
0.89953x



Hash#delete



Hash Size
Baseline
New
Factor




16
7.84167M i/s
6.96419M i/s
0.88810x


40
6.91292M i/s
7.41427M i/s
1.07252x


200
3.75952M i/s
7.32080M i/s
1.94727x


500
2.10754M i/s
7.05963M i/s
3.34970x



Hash#shift



Hash Size
Baseline
New
Factor




16
14.66444M i/s
13.18876M i/s
0.89937x


40
11.95124M i/s
11.10420M i/s
0.92913x


200
5.53681M i/s
7.88155M i/s
1.42348x


500
2.96728M i/s
5.40405M i/s
1.82121x



Hash#dup



Hash Size
Baseline
New
Factor




16
0.15063M i/s
5.37889M i/s
35.71024x


40
0.06515M i/s
3.38196M i/s
51.91279x


200
0.01359M i/s
1.46538M i/s
107.84056x


500
0.00559M i/s
0.75411M i/s
134.88057x



Binary Size
Lower value is better.



File
Baseline
New
Factor




mruby
730,408B
734,176B
1.00519x


libmruby.a
1,068,134B
1,072,846B
1.00441x



Other Fixes
The following issues have also been fixed in the parts where there was some
change this time.

Heap use-after-free in Hash#value?
Heap use-after-free in ht_hash_equal
Heap use-after-free in ht_hash_func
Heap use-after-free in mrb_hash_merge
Self-replacement does not work for Hash#replace
Repeated deletes and inserts increase memory usage of Hash
Hash#rehash does not reindex completely
mrb_hash_delete_key does not cause an error for frozen object
mrb_hash_new_capa does not allocate required space first
mrb_os_memsize_of_hash_table result is incorrect",True,{}
mruby/mruby,https://github.com/mruby/mruby,5121,2020-11-10T10:54:28Z,2020-11-10T12:56:43Z,2020-11-21T03:56:40Z,MERGED,True,1944,1002,4,https://github.com/shuujii,Reduce memory usage of Hash object,1,[],https://github.com/mruby/mruby/pull/5121,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5121#issuecomment-724683773,"Implementation Summary

Change entry list from segmented list to flat array.
Change value of hash bucket from pointer to entry to index of entry list,
and represent it by variable length bits according to capacity of hash
buckets.
Store management information about entry list and hash table to struct RHash as much as possible.

Benchmark Summary
Only the results of typical situations on 64-bit Word-boxing are present
here. For more detailed information, including consideration, see below
(although most of the body is written in Japanese).

https://shuujii.github.io/mruby-hash-benchmark

Memory Usage
Lower value is better.



Hash Size
Baseline
New
Factor




16
344B
256B
0.74419x


40
1,464B
840B
0.57377x


200
8,056B
3,784B
0.46971x


500
17,169B
9,944B
0.57949x



Performance
Higher value is better.
mrb_hash_set



Hash Size
Baseline
New
Factor




16
1.41847M i/s
1.36004M i/s
0.95881x


40
0.39224M i/s
0.31888M i/s
0.81296x


200
0.03780M i/s
0.04290M i/s
1.13494x


500
0.01225M i/s
0.01314M i/s
1.07275x



mrb_hash_get



Hash Size
Baseline
New
Factor




16
26.05920M i/s
30.19543M i/s
1.15872x


40
44.26420M i/s
32.75781M i/s
0.74005x


200
44.55171M i/s
31.56926M i/s
0.70860x


500
39.19250M i/s
29.73806M i/s
0.75877x



mrb_hash_each



Hash Size
Baseline
New
Factor




16
25.11964M i/s
30.34167M i/s
1.20789x


40
11.74253M i/s
13.25539M i/s
1.12884x


200
2.01133M i/s
2.97214M i/s
1.47770x


500
0.87411M i/s
1.21178M i/s
1.38631x



Hash#[]=



Hash Size
Baseline
New
Factor




16
0.50095M i/s
0.56490M i/s
1.12764x


40
0.19132M i/s
0.18392M i/s
0.96129x


200
0.03624M i/s
0.03256M i/s
0.89860x


500
0.01527M i/s
0.01236M i/s
0.80935x



Hash#[]



Hash Size
Baseline
New
Factor




16
11.53211M i/s
12.78806M i/s
1.10891x


40
15.26920M i/s
13.37529M i/s
0.87596x


200
15.28550M i/s
13.36410M i/s
0.87430x


500
14.57695M i/s
12.75388M i/s
0.87494x



Hash#each



Hash Size
Baseline
New
Factor




16
0.30462M i/s
0.27080M i/s
0.88898x


40
0.12912M i/s
0.11704M i/s
0.90642x


200
0.02638M i/s
0.02402M i/s
0.91071x


500
0.01066M i/s
0.00959M i/s
0.89953x



Hash#delete



Hash Size
Baseline
New
Factor




16
7.84167M i/s
6.96419M i/s
0.88810x


40
6.91292M i/s
7.41427M i/s
1.07252x


200
3.75952M i/s
7.32080M i/s
1.94727x


500
2.10754M i/s
7.05963M i/s
3.34970x



Hash#shift



Hash Size
Baseline
New
Factor




16
14.66444M i/s
13.18876M i/s
0.89937x


40
11.95124M i/s
11.10420M i/s
0.92913x


200
5.53681M i/s
7.88155M i/s
1.42348x


500
2.96728M i/s
5.40405M i/s
1.82121x



Hash#dup



Hash Size
Baseline
New
Factor




16
0.15063M i/s
5.37889M i/s
35.71024x


40
0.06515M i/s
3.38196M i/s
51.91279x


200
0.01359M i/s
1.46538M i/s
107.84056x


500
0.00559M i/s
0.75411M i/s
134.88057x



Binary Size
Lower value is better.



File
Baseline
New
Factor




mruby
730,408B
734,176B
1.00519x


libmruby.a
1,068,134B
1,072,846B
1.00441x



Other Fixes
The following issues have also been fixed in the parts where there was some
change this time.

Heap use-after-free in Hash#value?
Heap use-after-free in ht_hash_equal
Heap use-after-free in ht_hash_func
Heap use-after-free in mrb_hash_merge
Self-replacement does not work for Hash#replace
Repeated deletes and inserts increase memory usage of Hash
Hash#rehash does not reindex completely
mrb_hash_delete_key does not cause an error for frozen object
mrb_hash_new_capa does not allocate required space first
mrb_os_memsize_of_hash_table result is incorrect",I am greatly impressed. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5121,2020-11-10T10:54:28Z,2020-11-10T12:56:43Z,2020-11-21T03:56:40Z,MERGED,True,1944,1002,4,https://github.com/shuujii,Reduce memory usage of Hash object,1,[],https://github.com/mruby/mruby/pull/5121,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5121#issuecomment-724684916,"Implementation Summary

Change entry list from segmented list to flat array.
Change value of hash bucket from pointer to entry to index of entry list,
and represent it by variable length bits according to capacity of hash
buckets.
Store management information about entry list and hash table to struct RHash as much as possible.

Benchmark Summary
Only the results of typical situations on 64-bit Word-boxing are present
here. For more detailed information, including consideration, see below
(although most of the body is written in Japanese).

https://shuujii.github.io/mruby-hash-benchmark

Memory Usage
Lower value is better.



Hash Size
Baseline
New
Factor




16
344B
256B
0.74419x


40
1,464B
840B
0.57377x


200
8,056B
3,784B
0.46971x


500
17,169B
9,944B
0.57949x



Performance
Higher value is better.
mrb_hash_set



Hash Size
Baseline
New
Factor




16
1.41847M i/s
1.36004M i/s
0.95881x


40
0.39224M i/s
0.31888M i/s
0.81296x


200
0.03780M i/s
0.04290M i/s
1.13494x


500
0.01225M i/s
0.01314M i/s
1.07275x



mrb_hash_get



Hash Size
Baseline
New
Factor




16
26.05920M i/s
30.19543M i/s
1.15872x


40
44.26420M i/s
32.75781M i/s
0.74005x


200
44.55171M i/s
31.56926M i/s
0.70860x


500
39.19250M i/s
29.73806M i/s
0.75877x



mrb_hash_each



Hash Size
Baseline
New
Factor




16
25.11964M i/s
30.34167M i/s
1.20789x


40
11.74253M i/s
13.25539M i/s
1.12884x


200
2.01133M i/s
2.97214M i/s
1.47770x


500
0.87411M i/s
1.21178M i/s
1.38631x



Hash#[]=



Hash Size
Baseline
New
Factor




16
0.50095M i/s
0.56490M i/s
1.12764x


40
0.19132M i/s
0.18392M i/s
0.96129x


200
0.03624M i/s
0.03256M i/s
0.89860x


500
0.01527M i/s
0.01236M i/s
0.80935x



Hash#[]



Hash Size
Baseline
New
Factor




16
11.53211M i/s
12.78806M i/s
1.10891x


40
15.26920M i/s
13.37529M i/s
0.87596x


200
15.28550M i/s
13.36410M i/s
0.87430x


500
14.57695M i/s
12.75388M i/s
0.87494x



Hash#each



Hash Size
Baseline
New
Factor




16
0.30462M i/s
0.27080M i/s
0.88898x


40
0.12912M i/s
0.11704M i/s
0.90642x


200
0.02638M i/s
0.02402M i/s
0.91071x


500
0.01066M i/s
0.00959M i/s
0.89953x



Hash#delete



Hash Size
Baseline
New
Factor




16
7.84167M i/s
6.96419M i/s
0.88810x


40
6.91292M i/s
7.41427M i/s
1.07252x


200
3.75952M i/s
7.32080M i/s
1.94727x


500
2.10754M i/s
7.05963M i/s
3.34970x



Hash#shift



Hash Size
Baseline
New
Factor




16
14.66444M i/s
13.18876M i/s
0.89937x


40
11.95124M i/s
11.10420M i/s
0.92913x


200
5.53681M i/s
7.88155M i/s
1.42348x


500
2.96728M i/s
5.40405M i/s
1.82121x



Hash#dup



Hash Size
Baseline
New
Factor




16
0.15063M i/s
5.37889M i/s
35.71024x


40
0.06515M i/s
3.38196M i/s
51.91279x


200
0.01359M i/s
1.46538M i/s
107.84056x


500
0.00559M i/s
0.75411M i/s
134.88057x



Binary Size
Lower value is better.



File
Baseline
New
Factor




mruby
730,408B
734,176B
1.00519x


libmruby.a
1,068,134B
1,072,846B
1.00441x



Other Fixes
The following issues have also been fixed in the parts where there was some
change this time.

Heap use-after-free in Hash#value?
Heap use-after-free in ht_hash_equal
Heap use-after-free in ht_hash_func
Heap use-after-free in mrb_hash_merge
Self-replacement does not work for Hash#replace
Repeated deletes and inserts increase memory usage of Hash
Hash#rehash does not reindex completely
mrb_hash_delete_key does not cause an error for frozen object
mrb_hash_new_capa does not allocate required space first
mrb_os_memsize_of_hash_table result is incorrect",I made the operation missed. Merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5122,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5122#issuecomment-725811282,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","Basically I agree with the concept in this changes. I have a few request.

Rename MRB_WSYM to MRB_SYM. I'd like shorter names for the most frequent use-case.
Remove MRB_XSYM, MRB_GSYM. They don't need macro support since their use is not encouraged.
Rename MRB_OSYM to MRB_OPSYM for clarification.
Rename MRB_CSYM to MRB_CVSYM.
Rename MRB_ISYM to MRB_IVSYM.
I don't think MRB_BSYM, MRB_PSYM, and MRB_SSYM are good names. Probably MRB_SYM_B, SYM_P, SYM_E respectively?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/yurie,3,https://github.com/mruby/mruby/pull/5122#issuecomment-725827358,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","​I think that the readability is not good.
日本語ですら文章で説明するのがちょっと難しいです、すみません…",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5122#issuecomment-725832281,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","@yurie Is your opinion, for or against the change?
それは @shuujii さん提案の変更をしないで元のままほうが良いという意味ですか？ それとも私の変更案が良くないという意味ですか？",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/yurie,5,https://github.com/mruby/mruby/pull/5122#issuecomment-725839011,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","それは @shuujii さん提案の変更をしないで元のままほうが良いという意味ですか？ それとも私の変更案が良くないという意味ですか？

「元のまま」が必ずしもベストとは言い切れませんが、この提案はちょっとどうかなと思いました。
まつもとさんがこのPRを採用したいと言うならば、まつもとさんの変更案は妥当かなと思いますが…
(微妙なニュアンスを英語で伝える自信がないので日本語ですみません…)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/5122#issuecomment-725888260,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","I don't oppose to changing the proposed name because I certainly don't think it's clear enough. However, if it is not consistent, it will be difficult to understand. However, if it becomes inconsistent, it will be rather unclear.


Rename MRB_WSYM to MRB_SYM. I'd like shorter names for the most frequent use-case.
Remove MRB_XSYM, MRB_GSYM. They don't need macro support since their use is not encouraged.


I understand.


Rename MRB_OSYM to MRB_OPSYM for clarification.
Rename MRB_CSYM to MRB_CVSYM.
Rename MRB_ISYM to MRB_IVSYM.


I agree to clarify the modifiers. However, I think it is clear if the position of modifiers and the presence or absence of delimiter _ are consistent, including MRB_SYM_B, etc. (MRB_OP_SYM? MRB_SYMOP?, MRB_SYM_OP?)
It may be that the modifiers position matches the punctuation position, but the operator can't be identified either.


I don't think MRB_BSYM, MRB_PSYM, and MRB_SSYM are good names. Probably MRB_SYM_B, SYM_P, SYM_E respectively?


Probably the E means ""Equal"". If so, all the others such as CV (Class Variable) and P (Predicate) represent properties, so only E represents punctuation name, which is inconsistent and uncomfortable.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/shuujii,7,https://github.com/mruby/mruby/pull/5122#issuecomment-725890044,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","日本語でも記述します。

提案したした名称は確かに十分に分かりやすいとは思わないので、変更することに反対はありません。ただ、一貫性がなくなるとかえって分かりにくくなると思います。


Rename MRB_OSYM to MRB_OPSYM for clarification.
Rename MRB_CSYM to MRB_CVSYM.
Rename MRB_ISYM to MRB_IVSYM.


修飾子を分かりやすくするのには同意します。ただ、MRB_SYM_B なども含めて、修飾子の位置と区切りの _ の有無は一貫しているほうが分かりやすいと思います (MRB_OP_SYM? MRB_SYMOP?, MRB_SYM_OP?)。
記号 (@ や ! など) の位置と修飾子の位置を一致させているのかもしれませんが、オペレーターの場合はどちらか特定できません。


I don't think MRB_BSYM, MRB_PSYM, and MRB_SSYM are good names. Probably MRB_SYM_B, SYM_P, SYM_E respectively?


おそらく、E は ""Equal"" の意味だと思います。そうであれば、CV (Class Variable) や P (Predicate) など他はすべて性質を表していると思うので、E だけ記号の名称を表していて一貫性がなく違和感があります。",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/shuujii,8,https://github.com/mruby/mruby/pull/5122#issuecomment-725897104,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","@yurie この変更提案は、将来的に presym なしでビルドできるように、それを妨げる部分をなくすことを目的としています (presym なしでビルドできるべきだと考える理由はこちらを参照してください)。
現在のマクロだと、例えば、MRB_QSYM(foo_p) を mrb_intern_lit(mrb, ""foo?"") に置き換える良い方法が思い付かないので、記号部分を除いた foo を指定するように変更したいと考えています。
マクロ名に強い拘りはありませんが、「元のまま」だと変更提案の意図は満たせません。",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/yurie,9,https://github.com/mruby/mruby/pull/5122#issuecomment-725909245,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","@shuujii
I'm afraid you don't get the primary purpose of presym.
I'm explaining it briefly in today's event.
If you're available, I hope you'll watch it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/shuujii,10,https://github.com/mruby/mruby/pull/5122#issuecomment-725971938,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","@yurie presym の主目的はメモリー使用量の削減だと認識しています (配信も拝見しましたが認識は変わりませんでした)。
この変更提案は、(将来的に) presym ありでも presym なしでもどちらでもビルドできるようにするというためのものです。そのため、presym ありでビルドする (そしてメモリー使用量を削減する) ことを妨げるものではありません。",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/matz,11,https://github.com/mruby/mruby/pull/5122#issuecomment-725974276,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","MRB_SYM_B and MRB_SYM_E are named from appending characters (! (bang) and = (equal) respectively). To be consistent, MRB_SYM_P should have been MRB_SYM_Q (question) but traditionally ? suffix is converted to _p in mruby C source code.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/shuujii,12,https://github.com/mruby/mruby/pull/5122#issuecomment-726000732,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","traditionally ? suffix is converted to _p in mruby C source code

Yes. Therefore, MRB_SYM_P looks like a macro that returns a boolean value like mrb_symbol_p (and the spelling is quite similar).
Also, MRB_CVSYM etc. and MRB_SYM_E etc. look quite different, so it is hard to recognize that they are macros that provide similar features, I think.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/matz,13,https://github.com/mruby/mruby/pull/5122#issuecomment-726070833,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","Reasonable. How about MRB_SYM_B, MRB_SYM_Q, MRB_SYM_E?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/shuujii,14,https://github.com/mruby/mruby/pull/5122#issuecomment-726478236,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","OK. Then I will change as follows:

MRB_OSYM -> MRB_OPSYM
MRB_XSYM -> remove
MRB_CSYM -> MRB_CVSYM
MRB_ISYM -> MRB_IVSYM
MRB_GSYM -> remove
MRB_BSYM -> MRB_SYM_B
MRB_PSYM -> MRB_SYM_Q
MRB_SSYM -> MRB_SYM_E
MRB_WSYM -> MRB_SYM",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/matz,15,https://github.com/mruby/mruby/pull/5122#issuecomment-726485249,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.",Agreed. I will merge updated PR.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/shuujii,16,https://github.com/mruby/mruby/pull/5122#issuecomment-726515618,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.",I have updated and force pushed.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/lopopolo,17,https://github.com/mruby/mruby/pull/5122#issuecomment-735608367,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","In case you are looking for use cases for building mruby without presym, I'd like to share one.
I would like to build without presym since when my project embeds mruby, it does not compile src/symbol.c and replaces the Symbol implementation with its own, defined in another language and exposed over MRB_API compatible FFI bindings.
The C macros used in presym make it painful or impossible to support this setup.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5122,2020-11-12T00:50:58Z,2020-11-13T05:05:27Z,2020-11-30T09:20:29Z,MERGED,True,4849,4391,16,https://github.com/shuujii,Change name and usage of presym macros,1,[],https://github.com/mruby/mruby/pull/5122,https://github.com/lopopolo,18,https://github.com/mruby/mruby/pull/5122#issuecomment-735662227,"To be also able to build mruby without presym in the future. However, it is
NOT compatible with previous macros.
Example



Type
Symbol
Old Usage
New Usage




Operator
&
MRB_QSYM(and)
MRB_OSYM(and)


Special variable
$,
mrb_intern_lit(mrb,""$,"")
MRB_XSYM(ofs)


Class variable
@@foo
MRB_QSYM(00_foo)
MRB_CSYM(foo)


Instance variable
@foo
MRB_QSYM(0_foo)
MRB_ISYM(foo)


Global variable
$foo
mrb_intern_lit(mrb,""$foo"")
MRB_GSYM(foo)


Bang method
foo!
MRB_QSYM(foo_b)
MRB_BSYM(foo)


Predicate method
foo?
MRB_QSYM(foo_p)
MRB_PSYM(foo)


Setter method
foo=
MRB_QSYM(foo_e)
MRB_SSYM(foo)


Word characters
foo
MRB_SYM(foo)
MRB_WSYM(foo)



The names specified for MRB_XSYM use the shortest aliases from Ruby
standard or English library.
This change makes it possible to define, for example, MRB_ISYM(foo) as
mrb_intern_lit(mrb, ""@"" ""foo""), which is useful if we support building
without presym in the future.","I deleted a previous comment because I missed that presym is glued into mrb_intern via find_symbol:

  
    
      mruby/src/symbol.c
    
    
         Line 151
      in
      9f5c077
    
  
  
    

        
          
           i = presym_find(name, len);",True,{}
mruby/mruby,https://github.com/mruby/mruby,5124,2020-11-12T11:30:55Z,2020-11-12T13:18:58Z,2020-11-21T03:56:43Z,MERGED,True,3,9,3,https://github.com/shuujii,Remove unused argument of `mrb_obj_iv_tbl_memsize`,1,[],https://github.com/mruby/mruby/pull/5124,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5124,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5125,2020-11-13T07:31:52Z,2020-11-13T07:45:52Z,2020-11-21T03:56:43Z,MERGED,True,3,3,3,https://github.com/shuujii,Rename `mrb_os_memsize_of_hash_table` to `mrb_hash_memsize`,1,[],https://github.com/mruby/mruby/pull/5125,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5125,"The term hash_table can be misleading because the return value of this
function includes memory usage of entire Hash object, including not only
hash table part but also entry list part, etc.
This function takes a Hash object as a receiver and is defined in
src/hash.c, so it is natural to have a mrb_hash_ prefix.","The term hash_table can be misleading because the return value of this
function includes memory usage of entire Hash object, including not only
hash table part but also entry list part, etc.
This function takes a Hash object as a receiver and is defined in
src/hash.c, so it is natural to have a mrb_hash_ prefix.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5126,2020-11-13T07:32:36Z,2020-11-13T07:47:21Z,2020-11-21T03:56:45Z,MERGED,True,3,13,1,https://github.com/shuujii,Use `enable_sanitizer` to simplify `build_config/clang-asan.rb`,1,[],https://github.com/mruby/mruby/pull/5126,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5126,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5127,2020-11-13T08:08:24Z,2020-11-13T09:13:47Z,2020-11-21T03:56:39Z,MERGED,True,5,4,1,https://github.com/shuujii,Include size of iv table in `ObjectSpace.memsize_of` to `Hash` object,1,[],https://github.com/mruby/mruby/pull/5127,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5127,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5128,2020-11-13T13:10:27Z,2020-11-14T07:08:10Z,2020-11-21T03:56:44Z,MERGED,True,1,7,1,https://github.com/shuujii,Simplify `MRuby::Command#_run` to avoid duplicated compilation,1,[],https://github.com/mruby/mruby/pull/5128,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5128,"ref: #4959 (comment)
Compiles twice because it falls back to build.filename(command) when
command fails. This process was added at 9968af4 to support ccache gcc
etc. At that time, it seems that it was necessary because
build.filename(command) quoted the whole command, but now it does not
quote, so we can just run build.filename(command).
Example
$ echo 1 > src/a.c
$ rake -v
Before this patch:
(snip)
gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -I""/mruby/mruby/include"" -MMD -o ""/mruby/mruby/build/host/src/a.o"" -c ""/mruby/mruby/src/a.c""
/mruby/mruby/src/a.c:1:1: error: expected identifier or '('
1
^
1 error generated.
gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -I""/mruby/mruby/include"" -MMD -o ""/mruby/mruby/build/host/src/a.o"" -c ""/mruby/mruby/src/a.c""
/mruby/mruby/src/a.c:1:1: error: expected identifier or '('
1
^
1 error generated.
rake aborted!
(snip)
After this patch:
(snip)
gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -I""/mruby/mruby/include"" -MMD -o ""/mruby/mruby/build/host/src/a.o"" -c ""/mruby/mruby/src/a.c""
/mruby/mruby/src/a.c:1:1: error: expected identifier or '('
1
^
1 error generated.
rake aborted!
(snip)","ref: #4959 (comment)
Compiles twice because it falls back to build.filename(command) when
command fails. This process was added at 9968af4 to support ccache gcc
etc. At that time, it seems that it was necessary because
build.filename(command) quoted the whole command, but now it does not
quote, so we can just run build.filename(command).
Example
$ echo 1 > src/a.c
$ rake -v
Before this patch:
(snip)
gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -I""/mruby/mruby/include"" -MMD -o ""/mruby/mruby/build/host/src/a.o"" -c ""/mruby/mruby/src/a.c""
/mruby/mruby/src/a.c:1:1: error: expected identifier or '('
1
^
1 error generated.
gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -I""/mruby/mruby/include"" -MMD -o ""/mruby/mruby/build/host/src/a.o"" -c ""/mruby/mruby/src/a.c""
/mruby/mruby/src/a.c:1:1: error: expected identifier or '('
1
^
1 error generated.
rake aborted!
(snip)
After this patch:
(snip)
gcc -std=gnu99 -g -O3 -Wall -Wundef -Wdeclaration-after-statement -Werror-implicit-function-declaration -Wwrite-strings -I""/mruby/mruby/include"" -MMD -o ""/mruby/mruby/build/host/src/a.o"" -c ""/mruby/mruby/src/a.c""
/mruby/mruby/src/a.c:1:1: error: expected identifier or '('
1
^
1 error generated.
rake aborted!
(snip)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5129,2020-11-14T02:59:35Z,2020-11-14T07:06:48Z,2020-11-21T13:38:56Z,MERGED,True,13,16,3,https://github.com/dearblue,Don't use private structs with `mrb_mt_foreach()`,1,[],https://github.com/mruby/mruby/pull/5129,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5129,"The MRB_API function mrb_mt_foreach() previously used the private structure struct mt_elem.
Therefore, use mrb_method_t instead.

Alternatively, I think it's better to remove the MRB_API.","The MRB_API function mrb_mt_foreach() previously used the private structure struct mt_elem.
Therefore, use mrb_method_t instead.

Alternatively, I think it's better to remove the MRB_API.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5130,2020-11-14T07:44:48Z,2020-11-14T07:53:24Z,2020-11-21T03:56:46Z,MERGED,True,9,0,1,https://github.com/shuujii,Workaround to build `mirb` with Homebrew's readline on Mac; fix #4537,1,[],https://github.com/mruby/mruby/pull/5130,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5130,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5131,2020-11-14T07:58:25Z,2020-11-14T08:01:38Z,2020-11-21T03:56:43Z,MERGED,True,0,2,1,https://github.com/shuujii,Remove unused constant in `lib/mruby/build/command.rb`,1,[],https://github.com/mruby/mruby/pull/5131,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5131,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5132,2020-11-14T09:46:56Z,2020-11-14T09:52:49Z,2020-11-21T03:56:42Z,MERGED,True,1,2,1,https://github.com/shuujii,Remove redundant command execution in `header_search_paths`,1,[],https://github.com/mruby/mruby/pull/5132,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5132,"There is no need to execute command in duplicate for the same
reason as #5128.","There is no need to execute command in duplicate for the same
reason as #5128.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5134,2020-11-15T07:57:26Z,2020-11-15T14:15:00Z,2020-11-21T03:56:38Z,MERGED,True,0,1,1,https://github.com/shuujii,Fix that large integer is not GCed with Word-boxing,1,[],https://github.com/mruby/mruby/pull/5134,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5134,"Example (32-bit Word-boxing)
# example.rb
int_count = ObjectSpace.count_objects[:T_INTEGER]||0
int = 1<<30
p (ObjectSpace.count_objects[:T_INTEGER]||0) - int_count
int = nil
GC.start
p (ObjectSpace.count_objects[:T_INTEGER]||0) - int_count
Before this patch:
$ bin/mruby example.rb
1
1
After this patch:
$ bin/mruby example.rb
1
0","Example (32-bit Word-boxing)
# example.rb
int_count = ObjectSpace.count_objects[:T_INTEGER]||0
int = 1<<30
p (ObjectSpace.count_objects[:T_INTEGER]||0) - int_count
int = nil
GC.start
p (ObjectSpace.count_objects[:T_INTEGER]||0) - int_count
Before this patch:
$ bin/mruby example.rb
1
1
After this patch:
$ bin/mruby example.rb
1
0",True,{}
mruby/mruby,https://github.com/mruby/mruby,5135,2020-11-15T11:31:12Z,2020-11-15T14:15:35Z,2020-11-21T03:56:37Z,MERGED,True,3,3,1,https://github.com/shuujii,Fix paths of gem files to be scanned for presym,1,[],https://github.com/mruby/mruby/pull/5135,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5135,"When building from outside MRUBY_ROOT (e.g. rake -f), gem files were not
scanned.","When building from outside MRUBY_ROOT (e.g. rake -f), gem files were not
scanned.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5137,2020-11-16T07:23:56Z,2020-11-16T13:49:42Z,2020-11-21T03:56:46Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `uintptr_t` instead of `unsigned long` in `include/mruby/boxing_word.h`,1,[],https://github.com/mruby/mruby/pull/5137,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5137,"mrb_bool  on LLP64 environment seems to become false if, for example,
mrb_value is a pointer whose lower 32 bits are 0.","mrb_bool  on LLP64 environment seems to become false if, for example,
mrb_value is a pointer whose lower 32 bits are 0.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5138,2020-11-16T07:53:38Z,2020-11-16T13:48:06Z,2020-11-21T03:56:44Z,MERGED,True,0,15,1,https://github.com/shuujii,Simplify `obj_free`,1,[],https://github.com/mruby/mruby/pull/5138,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5138,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5139,2020-11-16T11:30:16Z,2020-11-16T13:49:04Z,2020-11-21T03:56:34Z,MERGED,True,3,3,2,https://github.com/shuujii,Avoid undefined behavior,1,[],https://github.com/mruby/mruby/pull/5139,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5139,"ASAN report (MRB_INT32)
$ bin/mruby -ve '-0x40000000'
mruby 3.0.0preview (2020-10-16)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_NEGATE:
00001       NODE_INT 40000000 base 16
irep 0x6070000001e0 nregs=2 nlocals=1 pools=0 syms=0 reps=0 iseq=9
file: -e
/mruby/src/codedump.c:173:49: runtime error: left shift of 49152 by 16 places cannot be represented in type 'int'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /mruby/src/codedump.c:173:49 in
    1 000 OP_LOADI32	R1	-1073741824
    1 006 OP_RETURN	R1
    1 008 OP_STOP

/mruby/src/vm.c:1138:7: runtime error: left shift of 49152 by 16 places cannot be represented in type 'mrb_int' (aka 'int')
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /mruby/src/vm.c:1138:7 in","ASAN report (MRB_INT32)
$ bin/mruby -ve '-0x40000000'
mruby 3.0.0preview (2020-10-16)
00001 NODE_SCOPE:
00001   NODE_BEGIN:
00001     NODE_NEGATE:
00001       NODE_INT 40000000 base 16
irep 0x6070000001e0 nregs=2 nlocals=1 pools=0 syms=0 reps=0 iseq=9
file: -e
/mruby/src/codedump.c:173:49: runtime error: left shift of 49152 by 16 places cannot be represented in type 'int'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /mruby/src/codedump.c:173:49 in
    1 000 OP_LOADI32	R1	-1073741824
    1 006 OP_RETURN	R1
    1 008 OP_STOP

/mruby/src/vm.c:1138:7: runtime error: left shift of 49152 by 16 places cannot be represented in type 'mrb_int' (aka 'int')
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /mruby/src/vm.c:1138:7 in",True,{}
mruby/mruby,https://github.com/mruby/mruby,5141,2020-11-17T09:50:58Z,2020-11-17T13:07:34Z,2020-11-21T03:56:35Z,MERGED,True,1,0,1,https://github.com/shuujii,Fix deprecated `set-env` command error on GitHub Actions [ci skip],1,[],https://github.com/mruby/mruby/pull/5141,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5141,"I tried $GITHUB_PATH and $GITHUB_ENV instead of set-env, but
for some reason path was not recognized, so I changed to using
ACTIONS_ALLOW_UNSECURE_COMMANDS.","I tried $GITHUB_PATH and $GITHUB_ENV instead of set-env, but
for some reason path was not recognized, so I changed to using
ACTIONS_ALLOW_UNSECURE_COMMANDS.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5143,2020-11-18T06:35:11Z,2020-11-18T08:29:35Z,2020-11-21T03:56:45Z,MERGED,True,5,5,1,https://github.com/shuujii,Use `mrb_int_value` instead of `mrb_fixnum_value` in `src/hash.c`,1,[],https://github.com/mruby/mruby/pull/5143,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5143,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5144,2020-11-18T06:42:18Z,2020-11-18T08:27:49Z,2020-11-18T08:28:08Z,MERGED,True,4,2,1,https://github.com/xiaohuizhang98,Check if irep->reps is NULL,1,[],https://github.com/mruby/mruby/pull/5144,https://github.com/xiaohuizhang98,1,https://github.com/mruby/mruby/pull/5144,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5144,2020-11-18T06:42:18Z,2020-11-18T08:27:49Z,2020-11-18T08:28:08Z,MERGED,True,4,2,1,https://github.com/xiaohuizhang98,Check if irep->reps is NULL,1,[],https://github.com/mruby/mruby/pull/5144,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5144#issuecomment-729520613,,Thanks for your contribution.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5145,2020-11-18T07:03:44Z,2020-11-18T08:28:48Z,2020-11-21T03:56:42Z,MERGED,True,0,1,1,https://github.com/shuujii,"Remove unused `MRuby::Build#enable_{bin,}test=`",1,[],https://github.com/mruby/mruby/pull/5145,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5145,"The writers seem to be unnecessary because MRuby::Build#enable_{bin,}test
are used from the beginning.","The writers seem to be unnecessary because MRuby::Build#enable_{bin,}test
are used from the beginning.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5146,2020-11-18T08:06:32Z,2020-11-18T10:19:49Z,2020-11-21T03:56:36Z,MERGED,True,1,4,1,https://github.com/shuujii,Fix integer overflow error in mrdb test,1,[],https://github.com/mruby/mruby/pull/5146,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5146,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5147,2020-11-18T09:08:36Z,2020-11-18T09:13:32Z,2020-11-18T09:41:48Z,MERGED,True,4,2,1,https://github.com/xiaohuizhang98,Check if irep->reps is NULL in lv_defined_p,1,[],https://github.com/mruby/mruby/pull/5147,https://github.com/xiaohuizhang98,1,https://github.com/mruby/mruby/pull/5147,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5148,2020-11-18T09:13:16Z,2020-11-18T09:47:07Z,2020-11-18T09:47:07Z,CLOSED,False,4,2,1,https://github.com/xiaohuizhang98,Check if irep->reps is NULL in get_irep_record_size,1,[],https://github.com/mruby/mruby/pull/5148,https://github.com/xiaohuizhang98,1,https://github.com/mruby/mruby/pull/5148,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5149,2020-11-18T09:48:10Z,2020-11-18T09:48:18Z,2020-11-18T09:55:58Z,MERGED,True,2,4,1,https://github.com/matz,"Revert ""Check if irep->reps is NULL in lv_defined_p""",1,[],https://github.com/mruby/mruby/pull/5149,https://github.com/matz,1,https://github.com/mruby/mruby/pull/5149,Reverts #5147,Reverts #5147,True,{}
mruby/mruby,https://github.com/mruby/mruby,5150,2020-11-19T02:51:08Z,2020-11-19T03:41:54Z,2020-11-21T03:56:34Z,MERGED,True,19,17,6,https://github.com/shuujii,Allow `bintest` even if build name is not `host`,1,[],https://github.com/mruby/mruby/pull/5150,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5150,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5152,2020-11-20T10:50:58Z,2020-11-20T13:22:15Z,2020-11-21T03:56:39Z,MERGED,True,2,2,3,https://github.com/shuujii,Move `lib/mruby-core-ext.rb` to `lib/mruby/core_ext.rb` for consistency,1,[],https://github.com/mruby/mruby/pull/5152,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5152,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5153,2020-11-20T10:51:10Z,2020-11-20T13:23:29Z,2020-11-21T03:56:41Z,MERGED,True,9,11,1,https://github.com/shuujii,Refactor `src/mruby_core.rake`,1,[],https://github.com/mruby/mruby/pull/5153,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5153,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5155,2020-11-20T14:05:51Z,2020-11-20T14:13:08Z,2020-11-21T03:56:41Z,MERGED,True,8,9,1,https://github.com/shuujii,Refactor `mrblib/mrblib.rake`,1,[],https://github.com/mruby/mruby/pull/5155,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5155,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5156,2020-11-21T03:48:52Z,2020-11-21T05:38:01Z,2020-12-06T02:19:03Z,MERGED,True,1,1,1,https://github.com/shuujii,Improve determining C++ compiler in `tasks/toolchains/gcc.rake`,1,[],https://github.com/mruby/mruby/pull/5156,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5156,"Consider CC envvar as C compiler on which to make the decision.
Consider the case where C compiler is ccache gcc, etc.","Consider CC envvar as C compiler on which to make the decision.
Consider the case where C compiler is ccache gcc, etc.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5157,2020-11-21T06:27:05Z,2020-11-21T10:22:50Z,2020-11-22T01:50:16Z,MERGED,True,1151,1025,6,https://github.com/dearblue,Allow to mixed and specify `*.rb` and `*.mrb` in `bin/mruby`,1,[],https://github.com/mruby/mruby/pull/5157,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5157,"It is not decides by the extension.
The first 64 bytes of the file are read, and if there is a NUL symbol in it, it is recognized as a binary file and read as a mrb file.
If there is no NUL symbol, it is judged as a text file and it is processed as a Ruby script.
The bin/mruby -b switch is still available which treats the given file as a .mrb file.
New MRB_API function:

include/mruby/dump.h and src/load.c

mrb_load_detect_file_cxt() (remove with MRB_DISABLE_STDIO)



New internal function (not static):

include/mruby/compile.h and mrbgems/mruby-compiler/core/parse.y

mrb_parse_file_continue() (remove with MRB_DISABLE_STDIO)
mrb_load_file_continue_cxt() (remove with MRB_DISABLE_STDIO)



NOTE:

Even script files now always open in binary mode for bin/mruby.
The \r\n is also handled by the nextc() function already, so there is no problem even on Windows.
The nextc0() function in mrbgems/mruby-compiler/core/parse.y can now specify a string buffer and a file pointer at the same time.
In this case, get it from the string buffer first.","It is not decides by the extension.
The first 64 bytes of the file are read, and if there is a NUL symbol in it, it is recognized as a binary file and read as a mrb file.
If there is no NUL symbol, it is judged as a text file and it is processed as a Ruby script.
The bin/mruby -b switch is still available which treats the given file as a .mrb file.
New MRB_API function:

include/mruby/dump.h and src/load.c

mrb_load_detect_file_cxt() (remove with MRB_DISABLE_STDIO)



New internal function (not static):

include/mruby/compile.h and mrbgems/mruby-compiler/core/parse.y

mrb_parse_file_continue() (remove with MRB_DISABLE_STDIO)
mrb_load_file_continue_cxt() (remove with MRB_DISABLE_STDIO)



NOTE:

Even script files now always open in binary mode for bin/mruby.
The \r\n is also handled by the nextc() function already, so there is no problem even on Windows.
The nextc0() function in mrbgems/mruby-compiler/core/parse.y can now specify a string buffer and a file pointer at the same time.
In this case, get it from the string buffer first.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5157,2020-11-21T06:27:05Z,2020-11-21T10:22:50Z,2020-11-22T01:50:16Z,MERGED,True,1151,1025,6,https://github.com/dearblue,Allow to mixed and specify `*.rb` and `*.mrb` in `bin/mruby`,1,[],https://github.com/mruby/mruby/pull/5157,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5157#issuecomment-731520437,"It is not decides by the extension.
The first 64 bytes of the file are read, and if there is a NUL symbol in it, it is recognized as a binary file and read as a mrb file.
If there is no NUL symbol, it is judged as a text file and it is processed as a Ruby script.
The bin/mruby -b switch is still available which treats the given file as a .mrb file.
New MRB_API function:

include/mruby/dump.h and src/load.c

mrb_load_detect_file_cxt() (remove with MRB_DISABLE_STDIO)



New internal function (not static):

include/mruby/compile.h and mrbgems/mruby-compiler/core/parse.y

mrb_parse_file_continue() (remove with MRB_DISABLE_STDIO)
mrb_load_file_continue_cxt() (remove with MRB_DISABLE_STDIO)



NOTE:

Even script files now always open in binary mode for bin/mruby.
The \r\n is also handled by the nextc() function already, so there is no problem even on Windows.
The nextc0() function in mrbgems/mruby-compiler/core/parse.y can now specify a string buffer and a file pointer at the same time.
In this case, get it from the string buffer first.","Interesting idea. A few comments before merge.

mrb files always start with RITE header mark. Probably you can use this to detect mrb files as well
You don't have to remove NUL check to avoid accidental detection
I think mrb_parse_file_continue() and mrb_load_file_continue_cxt() should be private (static)
mrb_load_detect_file_cxt() depends on mruby-compiler gem so it should not be in the core (load.c)
I am not fully satisfied with the name mrb_load_detect_file_cxt() but I have no other name candidate now",True,{}
mruby/mruby,https://github.com/mruby/mruby,5157,2020-11-21T06:27:05Z,2020-11-21T10:22:50Z,2020-11-22T01:50:16Z,MERGED,True,1151,1025,6,https://github.com/dearblue,Allow to mixed and specify `*.rb` and `*.mrb` in `bin/mruby`,1,[],https://github.com/mruby/mruby/pull/5157,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5157#issuecomment-731524126,"It is not decides by the extension.
The first 64 bytes of the file are read, and if there is a NUL symbol in it, it is recognized as a binary file and read as a mrb file.
If there is no NUL symbol, it is judged as a text file and it is processed as a Ruby script.
The bin/mruby -b switch is still available which treats the given file as a .mrb file.
New MRB_API function:

include/mruby/dump.h and src/load.c

mrb_load_detect_file_cxt() (remove with MRB_DISABLE_STDIO)



New internal function (not static):

include/mruby/compile.h and mrbgems/mruby-compiler/core/parse.y

mrb_parse_file_continue() (remove with MRB_DISABLE_STDIO)
mrb_load_file_continue_cxt() (remove with MRB_DISABLE_STDIO)



NOTE:

Even script files now always open in binary mode for bin/mruby.
The \r\n is also handled by the nextc() function already, so there is no problem even on Windows.
The nextc0() function in mrbgems/mruby-compiler/core/parse.y can now specify a string buffer and a file pointer at the same time.
In this case, get it from the string buffer first.",indeed. I'll try.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5157,2020-11-21T06:27:05Z,2020-11-21T10:22:50Z,2020-11-22T01:50:16Z,MERGED,True,1151,1025,6,https://github.com/dearblue,Allow to mixed and specify `*.rb` and `*.mrb` in `bin/mruby`,1,[],https://github.com/mruby/mruby/pull/5157,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5157#issuecomment-731566459,"It is not decides by the extension.
The first 64 bytes of the file are read, and if there is a NUL symbol in it, it is recognized as a binary file and read as a mrb file.
If there is no NUL symbol, it is judged as a text file and it is processed as a Ruby script.
The bin/mruby -b switch is still available which treats the given file as a .mrb file.
New MRB_API function:

include/mruby/dump.h and src/load.c

mrb_load_detect_file_cxt() (remove with MRB_DISABLE_STDIO)



New internal function (not static):

include/mruby/compile.h and mrbgems/mruby-compiler/core/parse.y

mrb_parse_file_continue() (remove with MRB_DISABLE_STDIO)
mrb_load_file_continue_cxt() (remove with MRB_DISABLE_STDIO)



NOTE:

Even script files now always open in binary mode for bin/mruby.
The \r\n is also handled by the nextc() function already, so there is no problem even on Windows.
The nextc0() function in mrbgems/mruby-compiler/core/parse.y can now specify a string buffer and a file pointer at the same time.
In this case, get it from the string buffer first.","Thank you for marge.
I didn't specifically state what I was able to achieve with this PR.
Although it is a brief explanation, I was able to achieve the following two things:

It can be specified in bin/mruby without distinguishing between "".rb"" files and "".mrb"" files.
It can be specified as a mixture of "".rb"" and "".mrb"" files, such as bin/mruby -r lib1.mrb -r lib2.rb < app.mrb.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5157,2020-11-21T06:27:05Z,2020-11-21T10:22:50Z,2020-11-22T01:50:16Z,MERGED,True,1151,1025,6,https://github.com/dearblue,Allow to mixed and specify `*.rb` and `*.mrb` in `bin/mruby`,1,[],https://github.com/mruby/mruby/pull/5157,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5157#issuecomment-731585259,"It is not decides by the extension.
The first 64 bytes of the file are read, and if there is a NUL symbol in it, it is recognized as a binary file and read as a mrb file.
If there is no NUL symbol, it is judged as a text file and it is processed as a Ruby script.
The bin/mruby -b switch is still available which treats the given file as a .mrb file.
New MRB_API function:

include/mruby/dump.h and src/load.c

mrb_load_detect_file_cxt() (remove with MRB_DISABLE_STDIO)



New internal function (not static):

include/mruby/compile.h and mrbgems/mruby-compiler/core/parse.y

mrb_parse_file_continue() (remove with MRB_DISABLE_STDIO)
mrb_load_file_continue_cxt() (remove with MRB_DISABLE_STDIO)



NOTE:

Even script files now always open in binary mode for bin/mruby.
The \r\n is also handled by the nextc() function already, so there is no problem even on Windows.
The nextc0() function in mrbgems/mruby-compiler/core/parse.y can now specify a string buffer and a file pointer at the same time.
In this case, get it from the string buffer first.",Could you please add brief explanation to doc/mruby3  .md?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5157,2020-11-21T06:27:05Z,2020-11-21T10:22:50Z,2020-11-22T01:50:16Z,MERGED,True,1151,1025,6,https://github.com/dearblue,Allow to mixed and specify `*.rb` and `*.mrb` in `bin/mruby`,1,[],https://github.com/mruby/mruby/pull/5157,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/5157#issuecomment-731665545,"It is not decides by the extension.
The first 64 bytes of the file are read, and if there is a NUL symbol in it, it is recognized as a binary file and read as a mrb file.
If there is no NUL symbol, it is judged as a text file and it is processed as a Ruby script.
The bin/mruby -b switch is still available which treats the given file as a .mrb file.
New MRB_API function:

include/mruby/dump.h and src/load.c

mrb_load_detect_file_cxt() (remove with MRB_DISABLE_STDIO)



New internal function (not static):

include/mruby/compile.h and mrbgems/mruby-compiler/core/parse.y

mrb_parse_file_continue() (remove with MRB_DISABLE_STDIO)
mrb_load_file_continue_cxt() (remove with MRB_DISABLE_STDIO)



NOTE:

Even script files now always open in binary mode for bin/mruby.
The \r\n is also handled by the nextc() function already, so there is no problem even on Windows.
The nextc0() function in mrbgems/mruby-compiler/core/parse.y can now specify a string buffer and a file pointer at the same time.
In this case, get it from the string buffer first.","Yes, it will be the result of Google Translate.
I will make a PR later.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5158,2020-11-21T06:27:55Z,2020-11-21T06:49:30Z,2020-11-21T13:38:57Z,MERGED,True,1,1,1,https://github.com/dearblue,"Fix typo ""overfow"" to ""overflow"" [ci skip]",1,[],https://github.com/mruby/mruby/pull/5158,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5158,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5159,2020-11-21T06:42:20Z,2020-11-21T07:57:49Z,2020-11-21T13:40:41Z,CLOSED,False,4,2,2,https://github.com/dearblue,Avoid loop initial declarations,1,[],https://github.com/mruby/mruby/pull/5159,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5159,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5159,2020-11-21T06:42:20Z,2020-11-21T07:57:49Z,2020-11-21T13:40:41Z,CLOSED,False,4,2,2,https://github.com/dearblue,Avoid loop initial declarations,1,[],https://github.com/mruby/mruby/pull/5159,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5159#issuecomment-731518973,,"Thank you. But I am thinking that it might be OK to allow loop initial declarations. Most compilers allow them. For example, micropython uses them already.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5159,2020-11-21T06:42:20Z,2020-11-21T07:57:49Z,2020-11-21T13:40:41Z,CLOSED,False,4,2,2,https://github.com/dearblue,Avoid loop initial declarations,1,[],https://github.com/mruby/mruby/pull/5159,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5159#issuecomment-731519970,,"I welcome a change of policy!
In that case, can you revise this document?
CONTRIBUTING.md#comply-with-c99-isoiec-98991999",True,{}
mruby/mruby,https://github.com/mruby/mruby,5159,2020-11-21T06:42:20Z,2020-11-21T07:57:49Z,2020-11-21T13:40:41Z,CLOSED,False,4,2,2,https://github.com/dearblue,Avoid loop initial declarations,1,[],https://github.com/mruby/mruby/pull/5159,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5159#issuecomment-731520592,,"In that case, we should. If anyone knows any platform with issues from this change, let us know.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5159,2020-11-21T06:42:20Z,2020-11-21T07:57:49Z,2020-11-21T13:40:41Z,CLOSED,False,4,2,2,https://github.com/dearblue,Avoid loop initial declarations,1,[],https://github.com/mruby/mruby/pull/5159,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/5159#issuecomment-731522435,,"But I am thinking that it might be OK to allow loop initial declarations

This is good news for me too!",True,{}
mruby/mruby,https://github.com/mruby/mruby,5159,2020-11-21T06:42:20Z,2020-11-21T07:57:49Z,2020-11-21T13:40:41Z,CLOSED,False,4,2,2,https://github.com/dearblue,Avoid loop initial declarations,1,[],https://github.com/mruby/mruby/pull/5159,https://github.com/matz,6,https://github.com/mruby/mruby/pull/5159#issuecomment-731525400,,"I checked micropython and qmk_firmware and several others. All of them use new style declarations.
I consider using them is OK now. Maybe we should update other targets as well (e.g. VC 2013).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5160,2020-11-21T06:43:10Z,2020-11-21T06:50:04Z,2020-11-21T13:38:55Z,MERGED,True,0,1,1,https://github.com/dearblue,Unable for the `MRB_TT_CPTR` object to have a singleton class,1,[],https://github.com/mruby/mruby/pull/5160,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5160,This object is treated as an immediate value.,This object is treated as an immediate value.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5161,2020-11-21T06:49:36Z,2020-11-21T07:08:45Z,2020-11-21T13:38:55Z,MERGED,True,2,2,1,https://github.com/dearblue,Fix documents for `mrb_ary_splice()` [ci skip],1,[],https://github.com/mruby/mruby/pull/5161,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5161,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5162,2020-11-21T06:51:01Z,2020-11-21T07:07:03Z,2020-12-06T02:19:04Z,MERGED,True,2,2,3,https://github.com/shuujii,Move some `.rake` files to `tasks` directory for consistency,1,[],https://github.com/mruby/mruby/pull/5162,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5162,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5164,2020-11-21T08:21:05Z,2020-11-21T08:41:37Z,2020-12-06T02:18:58Z,MERGED,True,2,0,1,https://github.com/shuujii,Automatically enable `MRB_ENABLE_DEBUG_HOOK` if `mruby-bin-debugger` is used,1,[],https://github.com/mruby/mruby/pull/5164,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5164,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5165,2020-11-21T08:51:14Z,2020-11-21T08:53:43Z,2020-12-06T02:19:01Z,MERGED,True,19,149,1,https://github.com/shuujii,Fix incorrect build name and simplify `build_config/boxing.rb` [ci skip],1,[],https://github.com/mruby/mruby/pull/5165,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5165,boxing-nan-m64 was duplicated.,boxing-nan-m64 was duplicated.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5166,2020-11-21T12:26:02Z,2020-11-21T14:59:33Z,2020-12-06T02:19:07Z,MERGED,True,1094,1085,41,https://github.com/shuujii,"Rename `MRB_{ENABLE,DISABLE}_` to `MRB_{USE,NO}_`; close #5163",1,[],https://github.com/mruby/mruby/pull/5166,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5166,"Previous Name
New Name




MRB_ENABLE_ALL_SYMBOLS
MRB_USE_ALL_SYMBOLS


MRB_ENABLE_SYMBOLL_ALL
MRB_USE_ALL_SYMBOLS


MRB_ENABLE_CXX_ABI
MRB_USE_CXX_ABI


MRB_ENABLE_CXX_EXCEPTION
MRB_USE_CXX_EXCEPTION


MRB_ENABLE_DEBUG_HOOK
MRB_USE_DEBUG_HOOK


MRB_DISABLE_DIRECT_THREADING
MRB_NO_DIRECT_THREADING


MRB_DISABLE_STDIO
MRB_NO_STDIO


ENABLE_LINENOISE
MRB_USE_LINENOISE


ENABLE_READLINE
MRB_USE_READLINE


DISABLE_MIRB_UNDERSCORE
MRB_NO_MIRB_UNDERSCORE


DISABLE_GEMS
MRB_NO_GEMS




MRB_ENABLE_SYMBOLL_ALL seems to be a typo, so it is fixed.
MRB_ prefix is added to those without.
The previous names can also be used for compatibility.","Previous Name
New Name




MRB_ENABLE_ALL_SYMBOLS
MRB_USE_ALL_SYMBOLS


MRB_ENABLE_SYMBOLL_ALL
MRB_USE_ALL_SYMBOLS


MRB_ENABLE_CXX_ABI
MRB_USE_CXX_ABI


MRB_ENABLE_CXX_EXCEPTION
MRB_USE_CXX_EXCEPTION


MRB_ENABLE_DEBUG_HOOK
MRB_USE_DEBUG_HOOK


MRB_DISABLE_DIRECT_THREADING
MRB_NO_DIRECT_THREADING


MRB_DISABLE_STDIO
MRB_NO_STDIO


ENABLE_LINENOISE
MRB_USE_LINENOISE


ENABLE_READLINE
MRB_USE_READLINE


DISABLE_MIRB_UNDERSCORE
MRB_NO_MIRB_UNDERSCORE


DISABLE_GEMS
MRB_NO_GEMS




MRB_ENABLE_SYMBOLL_ALL seems to be a typo, so it is fixed.
MRB_ prefix is added to those without.
The previous names can also be used for compatibility.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5167,2020-11-21T13:43:57Z,2020-11-21T15:02:35Z,2020-11-22T06:14:07Z,MERGED,True,12,16,2,https://github.com/dearblue,Improved `Object#define_singleton_method`,1,[],https://github.com/mruby/mruby/pull/5167,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5167,"Integrate the implementation with Module#define_method.

Introduce the internal function mrb_mod_define_method_m() (no static)
The Object#define_singleton_method method can now accept a second argument","Integrate the implementation with Module#define_method.

Introduce the internal function mrb_mod_define_method_m() (no static)
The Object#define_singleton_method method can now accept a second argument",True,{}
mruby/mruby,https://github.com/mruby/mruby,5169,2020-11-22T04:46:58Z,2020-11-22T05:41:49Z,2020-12-06T02:19:02Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix size of local variable array in struct dumped file,1,[],https://github.com/mruby/mruby/pull/5169,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5169,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5170,2020-11-22T06:33:35Z,2020-11-22T09:00:54Z,2020-11-22T11:53:28Z,MERGED,True,9,0,1,https://github.com/dearblue,Fix GC mark leaks for `MRB_TT_BREAK`; fix #5168,1,[],https://github.com/mruby/mruby/pull/5170,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5170,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5170,2020-11-22T06:33:35Z,2020-11-22T09:00:54Z,2020-11-22T11:53:28Z,MERGED,True,9,0,1,https://github.com/dearblue,Fix GC mark leaks for `MRB_TT_BREAK`; fix #5168,1,[],https://github.com/mruby/mruby/pull/5170,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5170#issuecomment-731718129,,Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5171,2020-11-22T06:57:26Z,2020-11-22T13:55:25Z,2020-12-23T13:04:16Z,CLOSED,False,4,4,3,https://github.com/shuujii,Reduce the minimum string buffer size from 128 to 63 bytes,1,[],https://github.com/mruby/mruby/pull/5171,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5171,"Similar change has been made in CRuby.

ruby/ruby#2151
https://bugs.ruby-lang.org/issues/15802

Because mruby is more resource-saving oriented than CRuby, I think it's
better to reduce that.
In addition, the reason why 63 is used instead of 64 seems to be helpful as
follows.

https://bugs.ruby-lang.org/issues/12025","Similar change has been made in CRuby.

ruby/ruby#2151
https://bugs.ruby-lang.org/issues/15802

Because mruby is more resource-saving oriented than CRuby, I think it's
better to reduce that.
In addition, the reason why 63 is used instead of 64 seems to be helpful as
follows.

https://bugs.ruby-lang.org/issues/12025",True,{}
mruby/mruby,https://github.com/mruby/mruby,5171,2020-11-22T06:57:26Z,2020-11-22T13:55:25Z,2020-12-23T13:04:16Z,CLOSED,False,4,4,3,https://github.com/shuujii,Reduce the minimum string buffer size from 128 to 63 bytes,1,[],https://github.com/mruby/mruby/pull/5171,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5171#issuecomment-731738943,"Similar change has been made in CRuby.

ruby/ruby#2151
https://bugs.ruby-lang.org/issues/15802

Because mruby is more resource-saving oriented than CRuby, I think it's
better to reduce that.
In addition, the reason why 63 is used instead of 64 seems to be helpful as
follows.

https://bugs.ruby-lang.org/issues/12025","After investigation again, MRB_STR_BUF_MIN_SIZE is only used when capa passed to mrb_str_buf_new is less than MRB_STR_BUF_MIN_SIZE.
This behavior itself doesn't seem to make much sense, and this function doesn't seem to be used much either. Therefore, I feel that mrb_str_buf_new can be an alias for mrb_str_new_capa and MRB_STR_BUF_MIN_SIZE can be removed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5171,2020-11-22T06:57:26Z,2020-11-22T13:55:25Z,2020-12-23T13:04:16Z,CLOSED,False,4,4,3,https://github.com/shuujii,Reduce the minimum string buffer size from 128 to 63 bytes,1,[],https://github.com/mruby/mruby/pull/5171,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5171#issuecomment-731751586,"Similar change has been made in CRuby.

ruby/ruby#2151
https://bugs.ruby-lang.org/issues/15802

Because mruby is more resource-saving oriented than CRuby, I think it's
better to reduce that.
In addition, the reason why 63 is used instead of 64 seems to be helpful as
follows.

https://bugs.ruby-lang.org/issues/12025","Agreed. Let's close this issue, and remove MRB_STR_BUF_MIN_SIZE.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5171,2020-11-22T06:57:26Z,2020-11-22T13:55:25Z,2020-12-23T13:04:16Z,CLOSED,False,4,4,3,https://github.com/shuujii,Reduce the minimum string buffer size from 128 to 63 bytes,1,[],https://github.com/mruby/mruby/pull/5171,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5171#issuecomment-731752170,"Similar change has been made in CRuby.

ruby/ruby#2151
https://bugs.ruby-lang.org/issues/15802

Because mruby is more resource-saving oriented than CRuby, I think it's
better to reduce that.
In addition, the reason why 63 is used instead of 64 seems to be helpful as
follows.

https://bugs.ruby-lang.org/issues/12025",Thank you for the suggestion.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5172,2020-11-22T08:00:50Z,2020-11-22T09:03:30Z,2020-12-06T02:19:03Z,MERGED,True,7,7,2,https://github.com/shuujii,Move global function for build to `lib/mruby/core_ext.rb`,1,[],https://github.com/mruby/mruby/pull/5172,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5172,"Because _pp is originally defined in lib/mruby/core_ext.rb, other global
functions are moved to the file.","Because _pp is originally defined in lib/mruby/core_ext.rb, other global
functions are moved to the file.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5173,2020-11-22T11:47:41Z,2020-11-22T13:38:34Z,2020-12-06T02:19:06Z,MERGED,True,10,5,5,https://github.com/shuujii,Refine build log for generated files,1,[],https://github.com/mruby/mruby/pull/5173,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5173,"Output GEN log for generated files
MRBC log is outputted one for each mrbc execution

Before this patch:
CC    src/array.c -> build/host/src/array.o
(snip)
GEN   mrblib/*.rb -> build/host/mrblib/mrblib.c
      MRBC mrblib/00class.rb
      MRBC mrblib/10error.rb
(snip)
CC    mrbgems/mruby-time/src/time.c -> build/host/mrbgems/mruby-time/src/time.o
      MRBC mrbgems/mruby-time/mrblib/time.rb
(snip)
CC    mrbgems/mruby-socket/test/sockettest.c -> build/host/mrbgems/mruby-socket/test/sockettest.o
      MRBC mrbgems/mruby-socket/test/addrinfo.rb
      MRBC mrbgems/mruby-socket/test/basicsocket.rb
(snip)
After this patch:
GEN   build/presym
GEN   build/presym.inc
CC    src/array.c -> build/host/src/array.o
(snip)
GEN   mrblib/*.rb -> build/host/mrblib/mrblib.c
      MRBC mrblib/00class.rb
           mrblib/10error.rb
(snip)
CC    mrbgems/mruby-time/src/time.c -> build/host/mrbgems/mruby-time/src/time.o
GEN   build/host/mrbgems/mruby-time/gem_init.c
      MRBC mrbgems/mruby-time/mrblib/time.rb
(snip)
CC    mrbgems/mruby-socket/test/sockettest.c -> build/host/mrbgems/mruby-socket/test/sockettest.o
GEN   build/host/mrbgems/mruby-socket/gem_test.c
      MRBC mrbgems/mruby-socket/test/addrinfo.rb
      MRBC mrbgems/mruby-socket/test/basicsocket.rb
(snip)","Output GEN log for generated files
MRBC log is outputted one for each mrbc execution

Before this patch:
CC    src/array.c -> build/host/src/array.o
(snip)
GEN   mrblib/*.rb -> build/host/mrblib/mrblib.c
      MRBC mrblib/00class.rb
      MRBC mrblib/10error.rb
(snip)
CC    mrbgems/mruby-time/src/time.c -> build/host/mrbgems/mruby-time/src/time.o
      MRBC mrbgems/mruby-time/mrblib/time.rb
(snip)
CC    mrbgems/mruby-socket/test/sockettest.c -> build/host/mrbgems/mruby-socket/test/sockettest.o
      MRBC mrbgems/mruby-socket/test/addrinfo.rb
      MRBC mrbgems/mruby-socket/test/basicsocket.rb
(snip)
After this patch:
GEN   build/presym
GEN   build/presym.inc
CC    src/array.c -> build/host/src/array.o
(snip)
GEN   mrblib/*.rb -> build/host/mrblib/mrblib.c
      MRBC mrblib/00class.rb
           mrblib/10error.rb
(snip)
CC    mrbgems/mruby-time/src/time.c -> build/host/mrbgems/mruby-time/src/time.o
GEN   build/host/mrbgems/mruby-time/gem_init.c
      MRBC mrbgems/mruby-time/mrblib/time.rb
(snip)
CC    mrbgems/mruby-socket/test/sockettest.c -> build/host/mrbgems/mruby-socket/test/sockettest.o
GEN   build/host/mrbgems/mruby-socket/gem_test.c
      MRBC mrbgems/mruby-socket/test/addrinfo.rb
      MRBC mrbgems/mruby-socket/test/basicsocket.rb
(snip)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5174,2020-11-22T11:58:43Z,2020-11-22T13:37:30Z,2020-11-23T12:18:18Z,MERGED,True,15,0,1,https://github.com/dearblue,Add brief explanation about `bin/mruby`; ref #5157 [ci skip],1,[],https://github.com/mruby/mruby/pull/5174,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5174,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5176,2020-11-22T16:47:10Z,2020-11-27T00:44:41Z,2020-11-27T00:44:41Z,CLOSED,False,1,1,1,https://github.com/abinoam,Fix #5175 - problem in c flags at gcc.rake,1,[],https://github.com/mruby/mruby/pull/5176,https://github.com/abinoam,1,https://github.com/mruby/mruby/pull/5176,Fix #5175,Fix #5175,True,{}
mruby/mruby,https://github.com/mruby/mruby,5176,2020-11-22T16:47:10Z,2020-11-27T00:44:41Z,2020-11-27T00:44:41Z,CLOSED,False,1,1,1,https://github.com/abinoam,Fix #5175 - problem in c flags at gcc.rake,1,[],https://github.com/mruby/mruby/pull/5176,https://github.com/abinoam,2,https://github.com/mruby/mruby/pull/5176#issuecomment-734518892,Fix #5175,Closing as it was fixed at mruby-esp32/mruby-esp32#20,True,{}
mruby/mruby,https://github.com/mruby/mruby,5178,2020-11-22T23:07:33Z,2020-11-24T00:44:21Z,2020-11-24T00:44:22Z,MERGED,True,3,3,2,https://github.com/abinoam,Fix #5177 by setting MRUBY_CONFIG early,1,[],https://github.com/mruby/mruby/pull/5178,https://github.com/abinoam,1,https://github.com/mruby/mruby/pull/5178,"Fix #5177
I'm not sure this is the intended way.
I've just split the two steps:

Calculating MRUBY_CONFIG
Loading MRUBY_CONFIG

... so Rakefile could hook between the 2 steps.","Fix #5177
I'm not sure this is the intended way.
I've just split the two steps:

Calculating MRUBY_CONFIG
Loading MRUBY_CONFIG

... so Rakefile could hook between the 2 steps.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5178,2020-11-22T23:07:33Z,2020-11-24T00:44:21Z,2020-11-24T00:44:22Z,MERGED,True,3,3,2,https://github.com/abinoam,Fix #5177 by setting MRUBY_CONFIG early,1,[],https://github.com/mruby/mruby/pull/5178,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5178#issuecomment-731912620,"Fix #5177
I'm not sure this is the intended way.
I've just split the two steps:

Calculating MRUBY_CONFIG
Loading MRUBY_CONFIG

... so Rakefile could hook between the 2 steps.","Thank you for the great report!
Basically I agree with the patch. I have a few comments.

After setting MRUBY_CONFIG, we can use load MRUBY_CONFIG, so I don't think load_config method is needed.
mruby_config_path method is usually called only once, so I don't think the result cache is needed. If the result cache is used, we can write @mruby_config_path || = (...), so I don't think _mruby_config_path method is needed either.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5178,2020-11-22T23:07:33Z,2020-11-24T00:44:21Z,2020-11-24T00:44:22Z,MERGED,True,3,3,2,https://github.com/abinoam,Fix #5177 by setting MRUBY_CONFIG early,1,[],https://github.com/mruby/mruby/pull/5178,https://github.com/abinoam,3,https://github.com/mruby/mruby/pull/5178#issuecomment-732055609,"Fix #5177
I'm not sure this is the intended way.
I've just split the two steps:

Calculating MRUBY_CONFIG
Loading MRUBY_CONFIG

... so Rakefile could hook between the 2 steps.","Thank you for your detailed feedback.
Tonight I'll fix it (when I get home).
It will be a honor for me to have a PR of mine accepted in mruby! 👍",True,{}
mruby/mruby,https://github.com/mruby/mruby,5178,2020-11-22T23:07:33Z,2020-11-24T00:44:21Z,2020-11-24T00:44:22Z,MERGED,True,3,3,2,https://github.com/abinoam,Fix #5177 by setting MRUBY_CONFIG early,1,[],https://github.com/mruby/mruby/pull/5178,https://github.com/abinoam,4,https://github.com/mruby/mruby/pull/5178#issuecomment-732339586,"Fix #5177
I'm not sure this is the intended way.
I've just split the two steps:

Calculating MRUBY_CONFIG
Loading MRUBY_CONFIG

... so Rakefile could hook between the 2 steps.","Dear @shuujii ,
I've just applied your suggestion.
Please tell me if there's something more I should do.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5180,2020-11-23T05:48:37Z,2020-11-23T08:05:28Z,2020-11-23T08:06:01Z,MERGED,True,4,4,1,https://github.com/wataash,Fix unintended variable shadowing,1,[],https://github.com/mruby/mruby/pull/5180,https://github.com/wataash,1,https://github.com/mruby/mruby/pull/5180,pool[i] pointed to invalid memory.,pool[i] pointed to invalid memory.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5181,2020-11-23T07:56:32Z,2020-11-23T08:02:45Z,2020-12-06T02:19:05Z,MERGED,True,3,3,1,https://github.com/shuujii,Raise an exception instead of exiting when `mrbc` fails,1,[],https://github.com/mruby/mruby/pull/5181,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5181,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5182,2020-11-23T07:57:07Z,2020-11-23T08:01:02Z,2020-12-06T02:19:08Z,MERGED,True,4,4,1,https://github.com/shuujii,Use local variables instead of top level constants in `boxing.rb` [ci skip],1,[],https://github.com/mruby/mruby/pull/5182,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5182,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5183,2020-11-23T07:57:21Z,2020-11-23T08:02:00Z,2020-12-06T02:18:59Z,MERGED,True,1,1,1,https://github.com/shuujii,Change output condition in `_pp`,1,[],https://github.com/mruby/mruby/pull/5183,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5183,"Output even with rake -v (to help debugging)
Not output when rake -s","Output even with rake -v (to help debugging)
Not output when rake -s",True,{}
mruby/mruby,https://github.com/mruby/mruby,5184,2020-11-23T12:34:41Z,2020-11-23T13:07:48Z,2020-11-29T12:43:38Z,MERGED,True,4,5,1,https://github.com/dearblue,"Avoid warnings from clang's ""-Wembedded-directive""",1,[],https://github.com/mruby/mruby/pull/5184,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5184,"If it gives clang-11.0 -Wembedded-directive, a warning will be reported in include/mruby/boxing_nan.h.
include/mruby/boxing_nan.h:48:2: warning: embedding a directive within macro arguments has undefined behavior [-Wembedded-directive]
include/mruby/boxing_nan.h:52:2: warning: embedding a directive within macro arguments has undefined behavior [-Wembedded-directive]

The cause of this is #5117.
ref. e993b83","If it gives clang-11.0 -Wembedded-directive, a warning will be reported in include/mruby/boxing_nan.h.
include/mruby/boxing_nan.h:48:2: warning: embedding a directive within macro arguments has undefined behavior [-Wembedded-directive]
include/mruby/boxing_nan.h:52:2: warning: embedding a directive within macro arguments has undefined behavior [-Wembedded-directive]

The cause of this is #5117.
ref. e993b83",True,{}
mruby/mruby,https://github.com/mruby/mruby,5186,2020-11-24T07:40:43Z,2020-11-24T07:58:09Z,2020-12-06T02:19:05Z,MERGED,True,11,21,2,https://github.com/shuujii,Optimize `presym_find`,1,[],https://github.com/mruby/mruby/pull/5186,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5186,"Chang to compare string length first.
Benchmark
Code

https://github.com/shuujii/mruby-presym_find-benchmark

Result
Previous: 10.240772M i/s (25M times in 2.441222s)
     New: 16.412985M i/s (25M times in 1.523184s)","Chang to compare string length first.
Benchmark
Code

https://github.com/shuujii/mruby-presym_find-benchmark

Result
Previous: 10.240772M i/s (25M times in 2.441222s)
     New: 16.412985M i/s (25M times in 1.523184s)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5189,2020-11-25T05:30:33Z,2020-11-25T05:33:04Z,2020-12-06T02:18:59Z,MERGED,True,6,2,2,https://github.com/shuujii,Fix C source compilation with `MRB_USE_ALL_SYMBOLS`; ref #5187,1,[],https://github.com/mruby/mruby/pull/5189,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5189,"However, compiling by mrbc fails with another issue (#5116).","However, compiling by mrbc fails with another issue (#5116).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5190,2020-11-25T06:29:37Z,2020-11-25T06:31:40Z,2020-12-06T02:18:58Z,MERGED,True,8,7,2,https://github.com/shuujii,Allow compiler name in build log to be customized,1,[],https://github.com/mruby/mruby/pull/5190,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5190,"For example, in the case of the C++ compiler, it is output as
CXX  build/host/src/gc.cxx -> build/host/src/gc.cxx.o (FYI, in the case
of enable_cxx_abi, it outputs CC ... because the option to compile as
C++ is added to C compiler).","For example, in the case of the C++ compiler, it is output as
CXX  build/host/src/gc.cxx -> build/host/src/gc.cxx.o (FYI, in the case
of enable_cxx_abi, it outputs CC ... because the option to compile as
C++ is added to C compiler).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5193,2020-11-26T04:57:10Z,2020-11-26T05:20:12Z,2020-12-06T02:19:02Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix loop condition in `mrb_sym_all_symbols`,1,[],https://github.com/mruby/mruby/pull/5193,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5193,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5194,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5194#issuecomment-734207802,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","The presym files will be output below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

There were descriptions about the presym files in doc/guides/compile.md, but I deleted them for the following reasons.

Originally only directories were described.
Output destination, etc. is likely to change in the future.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5194#issuecomment-734266419,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.",I was surprised the change was far smaller than I thought.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5194#issuecomment-734303442,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","I ran into a failure of rake MRUBY_CONFIG=cross-32bit.
When specifying a directory directly in conf.gem, it seems that the directory where mruby/presym.inc is located is not added.
% rake30 -v MRUBY_CONFIG=cross-32bit
mkdir -p /var/tmp/mruby/build/cross-32bit/mrbgems/c_and_ruby_extension_example/src
CC    examples/mrbgems/c_and_ruby_extension_example/src/example.c -> build/cross-32bit/mrbgems/c_and_ruby_extension_example/src/example.o
gcc -std=gnu99 -g -O3 -Wall -Wundef -Werror-implicit-function-declaration -Wwrite-strings -m32 -DMRBGEM_C_AND_RUBY_EXTENSION_EXAMPLE_VERSION=0.0.0 -I""/var/tmp/mruby/include"" -MMD -o ""/var/tmp/mruby/build/cross-32bit/mrbgems/c_and_ruby_extension_example/src/example.o"" -c ""/var/tmp/mruby/examples/mrbgems/c_and_ruby_extension_example/src/example.c""
In file included from /var/tmp/mruby/include/mruby.h:96,
                 from /var/tmp/mruby/examples/mrbgems/c_and_ruby_extension_example/src/example.c:1:
/var/tmp/mruby/include/mruby/presym.h:19:10: fatal error: mruby/presym.inc: No such file or directory
   19 | #include <mruby/presym.inc>
      |          ^~~~~~~~~~~~~~~~~~
compilation terminated.
rake aborted!
Command failed with status (1): [gcc -std=gnu99 -g -O3 -Wall -Wundef -Werro...]
/var/tmp/mruby/lib/mruby/build/command.rb:37:in `_run'
/var/tmp/mruby/lib/mruby/build/command.rb:83:in `run'
/var/tmp/mruby/lib/mruby/build/command.rb:106:in `block (2 levels) in define_rules'
/var/tmp/mruby/Rakefile:118:in `block (2 levels) in <top (required)>'
/var/tmp/mruby/Rakefile:118:in `each'
/var/tmp/mruby/Rakefile:118:in `block in <top (required)>'
/usr/local/bin/rake30:23:in `load'
/usr/local/bin/rake30:23:in `<main>'
Tasks: TOP => /var/tmp/mruby/build/cross-32bit/bin/mruby => /var/tmp/mruby/build/cross-32bit/lib/libmruby.a => /var/tmp/mruby/build/cross-32bit/mrbgems/c_and_ruby_extension_example/src/example.o
(See full trace by running task with --trace)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/5194#issuecomment-734305076,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","Also, it will probably cause problems as it will use host/bin/mrbc with incompatible presym in MRuby::CrossBuild.
In that case mrbgems/mruby-bin-mrbc needs the ability to read any sorted presym files.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/matz,6,https://github.com/mruby/mruby/pull/5194#issuecomment-734308242,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","Hmm, considering cross-compiling, we might need to revert part of this pull-request.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/matz,7,https://github.com/mruby/mruby/pull/5194#issuecomment-734322142,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","Besides that, I faced multiple errors after this pull-request, such as
NoMethodError: undefined method `*' for nil:NilClass
/home/matz/work/mruby/tasks/presym.rake:81:in `block (4 levels) in <top (required)>'

Or
mruby/include/mruby/presym.h:14:48: error: redeclaration of enumerator 'MRB_SYM__pton'
   14 | #define MRB_PRESYM_NAMED(lit, num, type, name) MRB_##type##__##name = (num<<1),
      |                                                ^~~~",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/shuujii,8,https://github.com/mruby/mruby/pull/5194#issuecomment-734325686,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","I will investigate at build errors later.
I would like to do the following for presym related, and I hope that if these are realized, most of the problems will be solved.

Make it buildable without presym.
Symbol output to the structured dump by mrbc does not output the ID directly, but outputs a macro such as MRB_SYM(). I think this will keep the output constant regardless of presym state at the time of mrbc build.
Make presym parsing from C source more strict using C preprocessor. I feel that all static symbols are output to C source by 2, so I think that all symbols can be extracted without parsing Ruby files.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/shuujii,9,https://github.com/mruby/mruby/pull/5194#issuecomment-734327252,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.",@matz Could you please show me the build configuration?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/shuujii,10,https://github.com/mruby/mruby/pull/5194#issuecomment-734361750,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","@matz It seems that it does not depend on build configuration and it may be reproduced in CI environment, so I will investigate it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/shuujii,11,https://github.com/mruby/mruby/pull/5194#issuecomment-734531583,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","BTW, in the current cross-32bit.rb, the cross environment is for 32-bit, but it looks like files output by mrbc created in the 64-bit host environment are compiled and linked. Will this work fine?
I feel that at least some compile options had to be unified in the host and cross environments.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/matz,12,https://github.com/mruby/mruby/pull/5194#issuecomment-734535481,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","The generated binary should be independent of the host architecture. If not, it must be a bug.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/shuujii,13,https://github.com/mruby/mruby/pull/5194#issuecomment-734628992,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","For example, the example below does not seem to work fine, although it is not an architectural difference but a compile option difference.
# cross.rb
MRuby::Lockfile.disable

MRuby::Build.new do |conf|
  conf.toolchain :gcc
  conf.enable_debug
end

MRuby::CrossBuild.new(""cross"") do |conf|
  conf.toolchain :gcc
  conf.cc.defines << ""MRB_UTF8_STRING""
  conf.enable_debug
  conf.enable_test
end
$ rake CONFIG=cross.rb -m
$ build/cross/bin/mrbtest
mrbtest - Embeddable Ruby Test


Fail: String#inspect [15.2.10.5.46] (core)
 - Assertion[3]
    Expected: ""\""\\xe3\\x82\\x8b\""""
      Actual: ""\""る\""""
  Total: 659
     OK: 658
     KO: 1
  Crash: 0
Warning: 0
   Skip: 0",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/shuujii,14,https://github.com/mruby/mruby/pull/5194#issuecomment-734633666,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","Well, the expected value is correct, so it's not an issue of binary representation.

  
    
      mruby/test/t/string.rb
    
    
        Lines 771 to 775
      in
      6059834
    
  
  
    

        
          
           if UTF8STRING 
        

        
          
             assert_equal '""る""', ""る"".inspect 
        

        
          
           else 
        

        
          
             assert_equal '""\xe3\x82\x8b""', ""る"".inspect 
        

        
          
           end 
        
    
  


When compiling Ruby files, it is not UTF8STRING, so it seems that the latter is used.
I think it is better to unify compile options in the host and cross environments because such the issue is likely to occur.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/dearblue,15,https://github.com/mruby/mruby/pull/5194#issuecomment-734872640,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","I will investigate at build errors later.
I would like to do the following for presym related, and I hope that if these are realized, most of the problems will be solved.


Make it buildable without presym.


Symbol output to the structured dump by mrbc does not output the ID directly, but outputs a macro such as MRB_SYM(). I think this will keep the output constant regardless of presym state at the time of mrbc build.


Make presym parsing from C source more strict using C preprocessor. I feel that all static symbols are output to C source by 2, so I think that all symbols can be extracted without parsing Ruby files.



It seems that (2) and (3) can be realized immediately. Especially, I think (3) is a great idea.
However, I am concerned about (1).
At this point, Class # new is premised on"" presym "".

  
    
      mruby/src/class.c
    
    
        Lines 2739 to 2744
      in
      6d07d9b
    
  
  
    

        
          
           const mrb_sym new_syms[] = { MRB_SYM(allocate), MRB_SYM(initialize) }; 
        

        
          
           static const mrb_irep new_irep = { 
        

        
          
             3, 6, 0, MRB_IREP_STATIC, 
        

        
          
             new_iseq, NULL, new_syms, NULL, NULL, NULL, 
        

        
          
             sizeof(new_iseq), 0, 2, 0, 0, 
        

        
          
           }; 
        
    
  


Also, if static method tables are implemented in the future, I think this will also assume ""presym"".
If (1) is realized, what will happen to static const mrb_sym mid = ...?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/shuujii,16,https://github.com/mruby/mruby/pull/5194#issuecomment-734878366,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","If (1) is realized, what will happen to static const mrb_sym mid = ...?

Without presym, I think we can initialize it in mrb_init_class.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5194,2020-11-26T09:54:05Z,2020-11-26T12:17:48Z,2020-12-06T02:18:59Z,MERGED,True,154,149,6,https://github.com/shuujii,Create presym files for each build target,1,[],https://github.com/mruby/mruby/pull/5194,https://github.com/dearblue,17,https://github.com/mruby/mruby/pull/5194#issuecomment-735042642,"Previously, presym files were always created in build/{presym,presym.inc}.
However, this constraint is inconvenient because it is common to use
multiple build configurations and build targets in a single mruby tree.
Therefore, change to create presym file for each build target.","🤔 Hmm,

Presym (static const mrb_sym) cannot be used in static method table definition
If it wants to use presym for static method table definition as well, it requires code redundancy with #if ~ #else ~ #endif

I could only think of that...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5195,2020-11-26T13:31:14Z,2020-11-26T13:47:23Z,2020-12-06T02:18:57Z,MERGED,True,1,1,1,https://github.com/shuujii,Add `tools/*` to target directory for presym parsing,1,[],https://github.com/mruby/mruby/pull/5195,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5195,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5196,2020-11-26T23:11:52Z,2020-11-26T23:57:04Z,2020-12-06T02:19:00Z,MERGED,True,6,6,2,https://github.com/shuujii,Fix build failure; ref #5194,1,[],https://github.com/mruby/mruby/pull/5196,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5196,"Fix the following two issues:

Compile failure when external gem is specified.

#5194 (comment)


When there are multiple build targets, presym parsing sometimes fails or
output result of presym is broken.

#5194 (comment)



The root cause of 2 is unknown, but it seems to occur when presym parsing is
performed in parallel, therefore I change them so that they are not run in
parallel.","Fix the following two issues:

Compile failure when external gem is specified.

#5194 (comment)


When there are multiple build targets, presym parsing sometimes fails or
output result of presym is broken.

#5194 (comment)



The root cause of 2 is unknown, but it seems to occur when presym parsing is
performed in parallel, therefore I change them so that they are not run in
parallel.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5197,2020-11-27T11:19:02Z,2020-11-27T13:08:26Z,2020-12-06T02:19:01Z,MERGED,True,4,4,1,https://github.com/shuujii,Fix incorrect regexp creation in `tasks/presym.rake`,1,[],https://github.com/mruby/mruby/pull/5197,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5197,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5198,2020-11-28T03:58:28Z,2020-12-02T02:07:37Z,2020-12-06T02:19:06Z,MERGED,True,8,9,2,https://github.com/shuujii,Remove unused Rake rules,1,[],https://github.com/mruby/mruby/pull/5198,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5198,"Currently, the source file language in the core is C only, and C++,
Objective-C, and Assembly are not used, so Rake rules for them are removed.","Currently, the source file language in the core is C only, and C++,
Objective-C, and Assembly are not used, so Rake rules for them are removed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5200,2020-11-28T06:17:48Z,2020-11-29T05:50:23Z,2020-11-29T12:43:38Z,MERGED,True,14,11,5,https://github.com/dearblue,Change the catch handler address to 32 bits,1,[],https://github.com/mruby/mruby/pull/5200,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5200,Follow commit 7150c67 .,Follow commit 7150c67 .,True,{}
mruby/mruby,https://github.com/mruby/mruby,5200,2020-11-28T06:17:48Z,2020-11-29T05:50:23Z,2020-11-29T12:43:38Z,MERGED,True,14,11,5,https://github.com/dearblue,Change the catch handler address to 32 bits,1,[],https://github.com/mruby/mruby/pull/5200,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5200#issuecomment-735345239,Follow commit 7150c67 .,Cancel the introduction of include/mruby/binary.h.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5202,2020-11-29T05:35:08Z,2020-12-07T05:07:23Z,2020-12-07T05:07:23Z,CLOSED,False,1956,1448,12,https://github.com/shuujii,Allow build without presym,1,[],https://github.com/mruby/mruby/pull/5202,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5202,"Usage

You can build without presym by MRuby::Build#disable_presym.
Macros such as MRB_SYM are expanded to mrb_intern_lit if presym is
disabled, therefore the mruby state variable is required. The macros can
be used when the variable name is mrb. If you want to use other variable
names, you need to use macros with _2 suffix, such as MRB_SYM_2.

Note
Ruby files will be dumped in mrb format if presym is disabled. C struct
format may also be available if symbol array is initialized in init
function, but it is not supported.","Usage

You can build without presym by MRuby::Build#disable_presym.
Macros such as MRB_SYM are expanded to mrb_intern_lit if presym is
disabled, therefore the mruby state variable is required. The macros can
be used when the variable name is mrb. If you want to use other variable
names, you need to use macros with _2 suffix, such as MRB_SYM_2.

Note
Ruby files will be dumped in mrb format if presym is disabled. C struct
format may also be available if symbol array is initialized in init
function, but it is not supported.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5202,2020-11-29T05:35:08Z,2020-12-07T05:07:23Z,2020-12-07T05:07:23Z,CLOSED,False,1956,1448,12,https://github.com/shuujii,Allow build without presym,1,[],https://github.com/mruby/mruby/pull/5202,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5202#issuecomment-735412643,"Usage

You can build without presym by MRuby::Build#disable_presym.
Macros such as MRB_SYM are expanded to mrb_intern_lit if presym is
disabled, therefore the mruby state variable is required. The macros can
be used when the variable name is mrb. If you want to use other variable
names, you need to use macros with _2 suffix, such as MRB_SYM_2.

Note
Ruby files will be dumped in mrb format if presym is disabled. C struct
format may also be available if symbol array is initialized in init
function, but it is not supported.","This change causes incompatibilities that in some cases it will not work unless MRB_SYM_2 etc. is used instead of MRB_SYM etc. Therefore, I would like this change to be included in the release version of mruby3. I also think it is necessary as a way to easily avoid issues related to presym.
An issue related to current presym, for example, is that the state of presym must match at the time of compiling mrbc and at the time of compiling the C struct dumped file by mrbc.
This can be an issue, especially in cross-compilation. In fact, the current cross-32bit.rb doesn't work.
$ rake CONFIG=cross-32bit -m
$ build/cross-32bit/bin/mruby -e ''
stack level too deep (SystemStackError)
To work around this issue, gems must match in the host and cross environments, including external gems (now scans C source even with external gems due to aae8237). However, some gems may only be built in a cross environment. There may be a way to create presym file manually, but it seems to be hard.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5202,2020-11-29T05:35:08Z,2020-12-07T05:07:23Z,2020-12-07T05:07:23Z,CLOSED,False,1956,1448,12,https://github.com/shuujii,Allow build without presym,1,[],https://github.com/mruby/mruby/pull/5202,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/5202#issuecomment-735486690,"Usage

You can build without presym by MRuby::Build#disable_presym.
Macros such as MRB_SYM are expanded to mrb_intern_lit if presym is
disabled, therefore the mruby state variable is required. The macros can
be used when the variable name is mrb. If you want to use other variable
names, you need to use macros with _2 suffix, such as MRB_SYM_2.

Note
Ruby files will be dumped in mrb format if presym is disabled. C struct
format may also be available if symbol array is initialized in init
function, but it is not supported.",The above cross-compilation example is due in part to the fact that presym files have been separated for each build target at #5194. Should #5194 be reverted once?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5202,2020-11-29T05:35:08Z,2020-12-07T05:07:23Z,2020-12-07T05:07:23Z,CLOSED,False,1956,1448,12,https://github.com/shuujii,Allow build without presym,1,[],https://github.com/mruby/mruby/pull/5202,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5202#issuecomment-739666420,"Usage

You can build without presym by MRuby::Build#disable_presym.
Macros such as MRB_SYM are expanded to mrb_intern_lit if presym is
disabled, therefore the mruby state variable is required. The macros can
be used when the variable name is mrb. If you want to use other variable
names, you need to use macros with _2 suffix, such as MRB_SYM_2.

Note
Ruby files will be dumped in mrb format if presym is disabled. C struct
format may also be available if symbol array is initialized in init
function, but it is not supported.","Since (part of) #5194 is reverted, we need to retry this PR. I close this at the moment.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5203,2020-11-29T07:07:17Z,2020-11-29T07:24:31Z,2020-12-01T11:51:00Z,MERGED,True,1,0,1,https://github.com/komainu8,Fix heap buffer overflow when dump irep,1,[],https://github.com/mruby/mruby/pull/5203,https://github.com/komainu8,1,https://github.com/mruby/mruby/pull/5203,"Currently, the size of writing in heap by write_irep_record() is bigger than The size that is calculated by get_irep_record_size.
Therefore, irep is dumped over the size of allocating memory when we execute dump_irep().
Reproduce
rake test fail by the buffer overflow.
I used fc98aa2 in the following procedure.
% git clone git@github.com:kou/mruby-pp.git
% cd mruby-pp
% git submodule update --init
% git submodule update --remote
% rake test
% gdb --args ""./mruby/build/host/bin/mrbc"" -Bgem_mrblib_irep_mruby_pp -o- ""./mrblib/0_prettyprint.rb"" ""./mrblib/1_pp.rb""
(gdb) b dump.c:804
(gdb) b dump.c:835
(gdb) start
(gdb) c
(gdb) p section_irep_size
$1 = 11990
(gdb) c
(gdb) p section_irep_size
$2 = 12002

Cause
mruby write the following data in write_irep_record().
bin += uint16_to_bin(irep->clen, bin);

However, the size that is calclated by get_irep_record_size() doesn't include the size of uint16_to_bin(irep->clen, bin) as below.
static size_t
get_irep_record_size_1(mrb_state *mrb, const mrb_irep *irep)
{
  size_t size = 0;

  size += get_irep_header_size(mrb);
  size += get_iseq_block_size(mrb, irep);
  size += get_catch_table_block_size(mrb, irep);
  size += get_pool_block_size(mrb, irep);
  size += get_syms_block_size(mrb, irep);
  return size;
}","Currently, the size of writing in heap by write_irep_record() is bigger than The size that is calculated by get_irep_record_size.
Therefore, irep is dumped over the size of allocating memory when we execute dump_irep().
Reproduce
rake test fail by the buffer overflow.
I used fc98aa2 in the following procedure.
% git clone git@github.com:kou/mruby-pp.git
% cd mruby-pp
% git submodule update --init
% git submodule update --remote
% rake test
% gdb --args ""./mruby/build/host/bin/mrbc"" -Bgem_mrblib_irep_mruby_pp -o- ""./mrblib/0_prettyprint.rb"" ""./mrblib/1_pp.rb""
(gdb) b dump.c:804
(gdb) b dump.c:835
(gdb) start
(gdb) c
(gdb) p section_irep_size
$1 = 11990
(gdb) c
(gdb) p section_irep_size
$2 = 12002

Cause
mruby write the following data in write_irep_record().
bin += uint16_to_bin(irep->clen, bin);

However, the size that is calclated by get_irep_record_size() doesn't include the size of uint16_to_bin(irep->clen, bin) as below.
static size_t
get_irep_record_size_1(mrb_state *mrb, const mrb_irep *irep)
{
  size_t size = 0;

  size += get_irep_header_size(mrb);
  size += get_iseq_block_size(mrb, irep);
  size += get_catch_table_block_size(mrb, irep);
  size += get_pool_block_size(mrb, irep);
  size += get_syms_block_size(mrb, irep);
  return size;
}",True,{}
mruby/mruby,https://github.com/mruby/mruby,5203,2020-11-29T07:07:17Z,2020-11-29T07:24:31Z,2020-12-01T11:51:00Z,MERGED,True,1,0,1,https://github.com/komainu8,Fix heap buffer overflow when dump irep,1,[],https://github.com/mruby/mruby/pull/5203,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5203#issuecomment-735377475,"Currently, the size of writing in heap by write_irep_record() is bigger than The size that is calculated by get_irep_record_size.
Therefore, irep is dumped over the size of allocating memory when we execute dump_irep().
Reproduce
rake test fail by the buffer overflow.
I used fc98aa2 in the following procedure.
% git clone git@github.com:kou/mruby-pp.git
% cd mruby-pp
% git submodule update --init
% git submodule update --remote
% rake test
% gdb --args ""./mruby/build/host/bin/mrbc"" -Bgem_mrblib_irep_mruby_pp -o- ""./mrblib/0_prettyprint.rb"" ""./mrblib/1_pp.rb""
(gdb) b dump.c:804
(gdb) b dump.c:835
(gdb) start
(gdb) c
(gdb) p section_irep_size
$1 = 11990
(gdb) c
(gdb) p section_irep_size
$2 = 12002

Cause
mruby write the following data in write_irep_record().
bin += uint16_to_bin(irep->clen, bin);

However, the size that is calclated by get_irep_record_size() doesn't include the size of uint16_to_bin(irep->clen, bin) as below.
static size_t
get_irep_record_size_1(mrb_state *mrb, const mrb_irep *irep)
{
  size_t size = 0;

  size += get_irep_header_size(mrb);
  size += get_iseq_block_size(mrb, irep);
  size += get_catch_table_block_size(mrb, irep);
  size += get_pool_block_size(mrb, irep);
  size += get_syms_block_size(mrb, irep);
  return size;
}","The description is confusing because I didn't want to make the mrb_irep structure larger, but the calculation of sizeof(mrb_irep::clen) has already been done.

  
    
      mruby/src/dump.c
    
    
        Lines 265 to 269
      in
      d443947
    
  
  
    

        
          
           get_catch_table_block_size(mrb_state *mrb, const mrb_irep *irep) 
        

        
          
           { 
        

        
          
             size_t size = 0; 
        

        
          
            
        

        
          
             size += sizeof(uint16_t); /* number of catch handler */ 
        
    
  


Perhaps I should have put together the output functions of ""irep"" and ""catch handler table"".",True,{}
mruby/mruby,https://github.com/mruby/mruby,5203,2020-11-29T07:07:17Z,2020-11-29T07:24:31Z,2020-12-01T11:51:00Z,MERGED,True,1,0,1,https://github.com/komainu8,Fix heap buffer overflow when dump irep,1,[],https://github.com/mruby/mruby/pull/5203,https://github.com/komainu8,3,https://github.com/mruby/mruby/pull/5203#issuecomment-736129553,"Currently, the size of writing in heap by write_irep_record() is bigger than The size that is calculated by get_irep_record_size.
Therefore, irep is dumped over the size of allocating memory when we execute dump_irep().
Reproduce
rake test fail by the buffer overflow.
I used fc98aa2 in the following procedure.
% git clone git@github.com:kou/mruby-pp.git
% cd mruby-pp
% git submodule update --init
% git submodule update --remote
% rake test
% gdb --args ""./mruby/build/host/bin/mrbc"" -Bgem_mrblib_irep_mruby_pp -o- ""./mrblib/0_prettyprint.rb"" ""./mrblib/1_pp.rb""
(gdb) b dump.c:804
(gdb) b dump.c:835
(gdb) start
(gdb) c
(gdb) p section_irep_size
$1 = 11990
(gdb) c
(gdb) p section_irep_size
$2 = 12002

Cause
mruby write the following data in write_irep_record().
bin += uint16_to_bin(irep->clen, bin);

However, the size that is calclated by get_irep_record_size() doesn't include the size of uint16_to_bin(irep->clen, bin) as below.
static size_t
get_irep_record_size_1(mrb_state *mrb, const mrb_irep *irep)
{
  size_t size = 0;

  size += get_irep_header_size(mrb);
  size += get_iseq_block_size(mrb, irep);
  size += get_catch_table_block_size(mrb, irep);
  size += get_pool_block_size(mrb, irep);
  size += get_syms_block_size(mrb, irep);
  return size;
}","Oh... I'm very sorry that I send the wrong modification.
@dearblue Thank you very much for your comment and modification of this problem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5203,2020-11-29T07:07:17Z,2020-11-29T07:24:31Z,2020-12-01T11:51:00Z,MERGED,True,1,0,1,https://github.com/komainu8,Fix heap buffer overflow when dump irep,1,[],https://github.com/mruby/mruby/pull/5203,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5203#issuecomment-736498013,"Currently, the size of writing in heap by write_irep_record() is bigger than The size that is calculated by get_irep_record_size.
Therefore, irep is dumped over the size of allocating memory when we execute dump_irep().
Reproduce
rake test fail by the buffer overflow.
I used fc98aa2 in the following procedure.
% git clone git@github.com:kou/mruby-pp.git
% cd mruby-pp
% git submodule update --init
% git submodule update --remote
% rake test
% gdb --args ""./mruby/build/host/bin/mrbc"" -Bgem_mrblib_irep_mruby_pp -o- ""./mrblib/0_prettyprint.rb"" ""./mrblib/1_pp.rb""
(gdb) b dump.c:804
(gdb) b dump.c:835
(gdb) start
(gdb) c
(gdb) p section_irep_size
$1 = 11990
(gdb) c
(gdb) p section_irep_size
$2 = 12002

Cause
mruby write the following data in write_irep_record().
bin += uint16_to_bin(irep->clen, bin);

However, the size that is calclated by get_irep_record_size() doesn't include the size of uint16_to_bin(irep->clen, bin) as below.
static size_t
get_irep_record_size_1(mrb_state *mrb, const mrb_irep *irep)
{
  size_t size = 0;

  size += get_irep_header_size(mrb);
  size += get_iseq_block_size(mrb, irep);
  size += get_catch_table_block_size(mrb, irep);
  size += get_pool_block_size(mrb, irep);
  size += get_syms_block_size(mrb, irep);
  return size;
}","@komainu8
What was reported is definitely your achievement.
Otherwise I wouldn't notice the problem and couldn't fix it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5204,2020-11-29T10:13:10Z,2020-11-29T11:15:50Z,2020-12-06T02:19:08Z,MERGED,True,3,3,1,https://github.com/shuujii,Use `MRB_SYM` in `src/gc.c`,1,[],https://github.com/mruby/mruby/pull/5204,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5204,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5205,2020-11-30T14:02:45Z,2020-11-30T14:20:00Z,2020-12-31T13:48:23Z,MERGED,True,4,4,1,https://github.com/dearblue,Fixed print catch handler address in codedump; ref #5200,1,[],https://github.com/mruby/mruby/pull/5205,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5205,"It became 32 bits in #5200, but only the upper 16 bits were printed.","It became 32 bits in #5200, but only the upper 16 bits were printed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5206,2020-11-30T14:12:01Z,2020-11-30T14:21:20Z,2020-12-31T13:48:24Z,MERGED,True,10,38,1,https://github.com/dearblue,Improves dump irep,2,[],https://github.com/mruby/mruby/pull/5206,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5206,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5206,2020-11-30T14:12:01Z,2020-11-30T14:21:20Z,2020-12-31T13:48:24Z,MERGED,True,10,38,1,https://github.com/dearblue,Improves dump irep,2,[],https://github.com/mruby/mruby/pull/5206,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5206#issuecomment-735841088,,Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5207,2020-12-01T03:25:50Z,2020-12-01T07:46:20Z,2020-12-06T02:19:07Z,MERGED,True,140,153,5,https://github.com/shuujii,"Revert ""Create presym files for each build target"" (58ba883e)",1,[],https://github.com/mruby/mruby/pull/5207,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5207,"Due to the above changes, it may not work with the existing build
configurations in cross-compilation (even if we can build without presym),
therefore revert it once (ref #5202 (comment)). Sorry for the lack of consideration.","Due to the above changes, it may not work with the existing build
configurations in cross-compilation (even if we can build without presym),
therefore revert it once (ref #5202 (comment)). Sorry for the lack of consideration.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5207,2020-12-01T03:25:50Z,2020-12-01T07:46:20Z,2020-12-06T02:19:07Z,MERGED,True,140,153,5,https://github.com/shuujii,"Revert ""Create presym files for each build target"" (58ba883e)",1,[],https://github.com/mruby/mruby/pull/5207,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5207#issuecomment-736288102,"Due to the above changes, it may not work with the existing build
configurations in cross-compilation (even if we can build without presym),
therefore revert it once (ref #5202 (comment)). Sorry for the lack of consideration.",It's OK we can make it safe before the release. Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5207,2020-12-01T03:25:50Z,2020-12-01T07:46:20Z,2020-12-06T02:19:07Z,MERGED,True,140,153,5,https://github.com/shuujii,"Revert ""Create presym files for each build target"" (58ba883e)",1,[],https://github.com/mruby/mruby/pull/5207,https://github.com/zzak,3,https://github.com/mruby/mruby/pull/5207#issuecomment-736294988,"Due to the above changes, it may not work with the existing build
configurations in cross-compilation (even if we can build without presym),
therefore revert it once (ref #5202 (comment)). Sorry for the lack of consideration.","@shuujii Hello! Thank you for your work on build system recently!!
I'm trying to build against your branch including the presym changes to compile mruby-compiler gem but I get this error:
In file included from src/mruby/include/mruby.h:96,
                 from src/mruby/mrbgems/mruby-compiler/core/codegen.c:11:
src/mruby/mrbgems/mruby-compiler/core/codegen.c: In function ‘codegen’:
src/mruby/include/mruby/presym.h:46:25: error: ‘MRB_SYM__compile’ undeclared (first use in this function); did you mean ‘MRB_SYM__coding’?
 #define MRB_SYM(name)   MRB_SYM__##name    /* Word characters */
                         ^~~~~~~~~
src/mruby/mrbgems/mruby-compiler/core/codegen.c:2719:24: note: in expansion of macro ‘MRB_SYM’
       sym = new_sym(s, MRB_SYM(compile));
                        ^~~~~~~
src/mruby/include/mruby/presym.h:46:25: note: each undeclared identifier is reported only once for each function it appears in
 #define MRB_SYM(name)   MRB_SYM__##name    /* Word characters */
                         ^~~~~~~~~
src/mruby/mrbgems/mruby-compiler/core/codegen.c:2719:24: note: in expansion of macro ‘MRB_SYM’
       sym = new_sym(s, MRB_SYM(compile));

Here is the command I used:
cc -D""MRB_NO_GEMS"" -I""src/mruby/include"" -I""src/mruby/build/host/include"" -o ""src/mruby/build/host/mrbgems/mruby-compiler/core/codegen.o"" -c ""src/mruby/mrbgems/mruby-compiler/core/codegen.c""

Inside ""src/mruby/build/host/include"" is just ""mruby/presym.inc"", if it's helpful I can paste the full contents of this file.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5207,2020-12-01T03:25:50Z,2020-12-01T07:46:20Z,2020-12-06T02:19:07Z,MERGED,True,140,153,5,https://github.com/shuujii,"Revert ""Create presym files for each build target"" (58ba883e)",1,[],https://github.com/mruby/mruby/pull/5207,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5207#issuecomment-736384593,"Due to the above changes, it may not work with the existing build
configurations in cross-compilation (even if we can build without presym),
therefore revert it once (ref #5202 (comment)). Sorry for the lack of consideration.","Hi @zzak.
You've tried 58ba883 (or https://github.com/shuujii/mruby/tree/create-presym-files-for-each-build-target), right?
There were some problems with that, so I've fixed them afterwards. Could you try it with the version just before this revert commit (98d5aa8)? If it still reproduces, could you please show me the build configuration?
BTW, it is strange that MRB_NO_GEMS is defined even though mruby-compiler gem is used.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5207,2020-12-01T03:25:50Z,2020-12-01T07:46:20Z,2020-12-06T02:19:07Z,MERGED,True,140,153,5,https://github.com/shuujii,"Revert ""Create presym files for each build target"" (58ba883e)",1,[],https://github.com/mruby/mruby/pull/5207,https://github.com/zzak,5,https://github.com/mruby/mruby/pull/5207#issuecomment-736864644,"Due to the above changes, it may not work with the existing build
configurations in cross-compilation (even if we can build without presym),
therefore revert it once (ref #5202 (comment)). Sorry for the lack of consideration.","@shuujii Thanks for your reply.
I've tried both revisions, with ""build/host/include/presym.inc"" version and with ""build/presym.inc"" version.
Now that you mentioned about MRB_NO_GEMS (I was trying to compile libmruby_core.a by hand), and the fact that my presym.inc file seems much shorter than the one generated by mruby HEAD -- I think something in my configuration is missing or incorrect.
I'd love to share this with you and get your feedback.
Would it be possible to email you?
My address is zzakscott  gmail",True,{}
mruby/mruby,https://github.com/mruby/mruby,5207,2020-12-01T03:25:50Z,2020-12-01T07:46:20Z,2020-12-06T02:19:07Z,MERGED,True,140,153,5,https://github.com/shuujii,"Revert ""Create presym files for each build target"" (58ba883e)",1,[],https://github.com/mruby/mruby/pull/5207,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/5207#issuecomment-739135036,"Due to the above changes, it may not work with the existing build
configurations in cross-compilation (even if we can build without presym),
therefore revert it once (ref #5202 (comment)). Sorry for the lack of consideration.","@zzak If you were manually compiling to create libmruby_core.a, #5212 no longer requires you to do so.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5208,2020-12-02T10:26:41Z,2020-12-02T12:35:22Z,2020-12-06T02:19:00Z,MERGED,True,1700,1298,4,https://github.com/shuujii,Fix build for C++ version >= C++11 when `enable_cxx_exception`; close #5199,1,[],https://github.com/mruby/mruby/pull/5208,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5208,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5209,2020-12-02T14:16:14Z,2020-12-02T22:17:37Z,2020-12-06T02:19:06Z,MERGED,True,2,2,1,https://github.com/shuujii,"Remove `build/presym{,.inc}` by `rake clean` [ci skip]",1,[],https://github.com/mruby/mruby/pull/5209,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5209,"Currently, adding gems to build configuration and rebuilding does not
regenerate presym, which can lead to build errors.
Therefore in this case we need to remove the presym file and then rebuild
mruby, but when the presym file is regenerated we will need to recompile
most of the files, so it seems useful to have the presym file deleted by
rake clean.","Currently, adding gems to build configuration and rebuilding does not
regenerate presym, which can lead to build errors.
Therefore in this case we need to remove the presym file and then rebuild
mruby, but when the presym file is regenerated we will need to recompile
most of the files, so it seems useful to have the presym file deleted by
rake clean.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5211,2020-12-04T00:35:07Z,2020-12-04T03:50:49Z,2020-12-06T02:19:04Z,MERGED,True,1,0,2,https://github.com/shuujii,Move `mrbc` test to `mruby-bin-mrbc` gem from `mruby-compiler` gem,1,[],https://github.com/mruby/mruby/pull/5211,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5211,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5212,2020-12-05T00:40:57Z,2020-12-05T05:08:30Z,2020-12-06T02:19:03Z,MERGED,True,51,45,10,https://github.com/shuujii,Make it possible that `libmruby.a` is not created,1,[],https://github.com/mruby/mruby/pull/5212,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5212,"Previously, libmruby.a was created even if only mruby-bin-mrbc or mruby-compiler was specified for gem, but by specifying disable_libmruby,
the creation of libmruby.a can be suppressed.
Note
The #5084 (comment)
incompatibility seems to be difficult for users to avoid, so the original
behavior has been restored. Therefore, if we need mrbc other than the
host build, we need to explicitly specify mruby-bin-mrbc gem.
Due to the above changes, build_config/boxing.rb etc. will not work, but I
have added mruby-bin-mrbc to default.gembox to fix it. I don't think
this change is a big deal because originally mruby-compiler was included.","Previously, libmruby.a was created even if only mruby-bin-mrbc or mruby-compiler was specified for gem, but by specifying disable_libmruby,
the creation of libmruby.a can be suppressed.
Note
The #5084 (comment)
incompatibility seems to be difficult for users to avoid, so the original
behavior has been restored. Therefore, if we need mrbc other than the
host build, we need to explicitly specify mruby-bin-mrbc gem.
Due to the above changes, build_config/boxing.rb etc. will not work, but I
have added mruby-bin-mrbc to default.gembox to fix it. I don't think
this change is a big deal because originally mruby-compiler was included.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5214,2020-12-05T09:42:19Z,2020-12-05T13:22:18Z,2020-12-23T13:06:33Z,MERGED,True,3,0,1,https://github.com/shuujii,Allow obsoluted `MRB_METHOD_T_STRUCT`,1,[],https://github.com/mruby/mruby/pull/5214,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5214,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5215,2020-12-05T10:26:55Z,2020-12-05T13:19:41Z,2020-12-23T13:06:36Z,MERGED,True,25,20,1,https://github.com/shuujii,"Update ""Configuration Options Changed"" in `doc/mruby3.md` [ci skip]",1,[],https://github.com/mruby/mruby/pull/5215,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5215,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5216,2020-12-05T11:01:06Z,2020-12-05T13:20:12Z,2020-12-23T13:06:35Z,MERGED,True,0,1,1,https://github.com/shuujii,Remove unused `@endian` in `MRuby::CrossBuild#initialize`,1,[],https://github.com/mruby/mruby/pull/5216,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5216,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5217,2020-12-06T06:27:55Z,2020-12-06T08:30:35Z,2020-12-23T13:06:33Z,MERGED,True,2,2,1,https://github.com/shuujii,Call `super` before creating `host` build in `MRuby::CrossBuild#initialize`,1,[],https://github.com/mruby/mruby/pull/5217,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5217,"Call super (block) ahead so that creation of the host build can be
skipped if pre-built mrbc can be specified in the future.
close #5213.","Call super (block) ahead so that creation of the host build can be
skipped if pre-built mrbc can be specified in the future.
close #5213.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5218,2020-12-06T07:07:31Z,2020-12-12T09:26:29Z,2020-12-23T13:07:12Z,CLOSED,False,1,1,1,https://github.com/shuujii,Suppress `-Wtautological-compare` warning,1,[],https://github.com/mruby/mruby/pull/5218,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5218,"/mruby/src/debug.c:69:18: warning: comparison of unsigned expression >= 0 is always true [-Wtautological-compare]
  if (irep && pc >= 0 && pc < irep->ilen) {
              ~~ ^  ~","/mruby/src/debug.c:69:18: warning: comparison of unsigned expression >= 0 is always true [-Wtautological-compare]
  if (irep && pc >= 0 && pc < irep->ilen) {
              ~~ ^  ~",True,{}
mruby/mruby,https://github.com/mruby/mruby,5218,2020-12-06T07:07:31Z,2020-12-12T09:26:29Z,2020-12-23T13:07:12Z,CLOSED,False,1,1,1,https://github.com/shuujii,Suppress `-Wtautological-compare` warning,1,[],https://github.com/mruby/mruby/pull/5218,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5218#issuecomment-739479087,"/mruby/src/debug.c:69:18: warning: comparison of unsigned expression >= 0 is always true [-Wtautological-compare]
  if (irep && pc >= 0 && pc < irep->ilen) {
              ~~ ^  ~","BTW, I also feel that it is not good that the type of pc are different in the following functions.

get_file(mrb_irep_debug_info *info, uint32_t pc)
mrb_debug_get_filename(mrb_state *mrb, const mrb_irep *irep, ptrdiff_t pc)
mrb_debug_get_line(mrb_state *mrb, const mrb_irep *irep, size_t pc)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5218,2020-12-06T07:07:31Z,2020-12-12T09:26:29Z,2020-12-23T13:07:12Z,CLOSED,False,1,1,1,https://github.com/shuujii,Suppress `-Wtautological-compare` warning,1,[],https://github.com/mruby/mruby/pull/5218,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5218#issuecomment-739664056,"/mruby/src/debug.c:69:18: warning: comparison of unsigned expression >= 0 is always true [-Wtautological-compare]
  if (irep && pc >= 0 && pc < irep->ilen) {
              ~~ ^  ~",@shuujii Indeed. All of them made to be uint32_t by ed29d74.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5218,2020-12-06T07:07:31Z,2020-12-12T09:26:29Z,2020-12-23T13:07:12Z,CLOSED,False,1,1,1,https://github.com/shuujii,Suppress `-Wtautological-compare` warning,1,[],https://github.com/mruby/mruby/pull/5218,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5218#issuecomment-742500716,"/mruby/src/debug.c:69:18: warning: comparison of unsigned expression >= 0 is always true [-Wtautological-compare]
  if (irep && pc >= 0 && pc < irep->ilen) {
              ~~ ^  ~",The warning doesn't seem to suppress.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5218,2020-12-06T07:07:31Z,2020-12-12T09:26:29Z,2020-12-23T13:07:12Z,CLOSED,False,1,1,1,https://github.com/shuujii,Suppress `-Wtautological-compare` warning,1,[],https://github.com/mruby/mruby/pull/5218,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5218#issuecomment-742567174,"/mruby/src/debug.c:69:18: warning: comparison of unsigned expression >= 0 is always true [-Wtautological-compare]
  if (irep && pc >= 0 && pc < irep->ilen) {
              ~~ ^  ~",Really? Let me see.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5220,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.","The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5220#issuecomment-743966068,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.","All tests with presym for the following gems reported so far succeed, except for the dependency appPlant/mruby-process.

iij/mruby-digest
matsumotory/mruby-mrbgem-template
matsumotory/mruby-simplehttpserver
mattn/mruby-http
mattn/mruby-onig-regexp

appPlant/mruby-process test fails even without this PR, and the cause is probably on the gem side.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/5220#issuecomment-745111805,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.","Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).

This situation is usually only for global variables and special variables such as $0, so adding corresponding MRB_SYM family macros will almost avoid it.
Even though these variables are deprecated, they are still used in the core gems for compatibility with Ruby, so it may be good to support them.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5220#issuecomment-745287340,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.",I am reviewing this pull-request. It takes a little more time.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5220#issuecomment-756724600,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.","After applying the patch, we have to add -I <path-to-build-dir>/include to the compiler options when we compile a program linking to libmruby.a. Is there any way to work around it?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/5220#issuecomment-756782275,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.","Certainly that is incompatible. But I'm sorry, I can't think of any good ideas.
mruby-config --cflags prints include paths, so compatibility may not be broken if this output is used, but I feel like it's not being used very often.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/shuujii,7,https://github.com/mruby/mruby/pull/5220#issuecomment-757111115,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.","If we copy presym.inc in the host build to include/mruby/presym.inc when building mruby, we may be able to build without adding to include path in most cases.
However, when linking libmruby.a built other than host, build/NAME/include must be prioritized over include/. Otherwise, we may get a runtime error instead of a build error, which may obscure the cause of the error.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/matz,8,https://github.com/mruby/mruby/pull/5220#issuecomment-757111195,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.","CFuzz test fails for exactly this reason, FYI.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/shuujii,9,https://github.com/mruby/mruby/pull/5220#issuecomment-757125254,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.",Existing code may be able to build if presym.inc is not included in the existing header files. I'll try to fix it with this solution.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/dearblue,10,https://github.com/mruby/mruby/pull/5220#issuecomment-757204258,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.","There are two cross-build issues.
(1) If the host build target does not exist, it seems that mrbc cannot be built.
% rake30 MRUBY_CONFIG=cross-32bit
rake aborted!
Don't know how to build task '/var/tmp/mruby/build/host/mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.i' (See the list of available tasks with `rake --tasks`)
Did you mean?  /var/tmp/mruby/build/host/mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.o
               /var/tmp/mruby/mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.c
               /var/tmp/mruby/build/cross-32bit/mrbgems/mruby-bin-mruby/tools/mruby/mruby.o
/usr/local/bin/rake30:23:in `load'
/usr/local/bin/rake30:23:in `<main>'
Tasks: TOP => default => all => gensym => /var/tmp/mruby/build/cross-32bit/presym
(See full trace by running task with --trace)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/dearblue,11,https://github.com/mruby/mruby/pull/5220#issuecomment-757205572,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.","(2) When I add mruby-bin-mrbc to the cross build target, it seems that the <cross-build-dir> /include/mruby/presym.inc file is not generated.
% cat cross1.rb
MRuby::CrossBuild.new(""cross"") do |conf|
  toolchain ""clang""
  gem core: ""mruby-bin-mrbc""
end

% rake30 MRUBY_CONFIG=cross1.rb `pwd`/build/cross/include/mruby/presym.inc
rake aborted!
Don't know how to build task '/var/tmp/mruby/build/cross/include/mruby/presym.inc' (See the list of available tasks with `rake --tasks`)
Did you mean?  /var/tmp/mruby/build/cross/src/numeric.o
/usr/local/bin/rake30:23:in `load'
/usr/local/bin/rake30:23:in `<main>'
(See full trace by running task with --trace)
As a result, the build will fail.
% rake30 -v MRUBY_CONFIG=cross1.rb
mkdir -p /var/tmp/mruby/build/cross/mrbgems/mruby-bin-mrbc/tools/mrbc
CC    mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.c -> build/cross/mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.o
clang -c -std=gnu99 -g -O3 -Wall -Wundef -Werror-implicit-function-declaration -Wwrite-strings -Wzero-length-array -DMRBGEM_MRUBY_BIN_MRBC_VERSION=0.0.0 -I""/var/tmp/mruby/include"" -I""/var/tmp/mruby/build/cross/include"" -MMD -MF ""/var/tmp/mruby/build/cross/mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.o.d"" -o ""/var/tmp/mruby/build/cross/mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.o"" ""/var/tmp/mruby/mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.c""
In file included from /var/tmp/mruby/mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.c:1:
In file included from /var/tmp/mruby/include/mruby.h:1412:
In file included from /var/tmp/mruby/include/mruby/presym.h:15:
/var/tmp/mruby/include/mruby/presym/enable.h:19:11: fatal error: 'mruby/presym.inc' file not found
# include <mruby/presym.inc>
          ^~~~~~~~~~~~~~~~~~
1 error generated.
rake aborted!
Command failed with status (1): [clang -c -std=gnu99 -g -O3 -Wall -Wundef -...]
/var/tmp/mruby/lib/mruby/build/command.rb:37:in `_run'
/var/tmp/mruby/lib/mruby/build/command.rb:99:in `run'
/var/tmp/mruby/lib/mruby/build/command.rb:120:in `block (2 levels) in define_rules'
/usr/local/bin/rake30:23:in `load'
/usr/local/bin/rake30:23:in `<main>'
Tasks: TOP => default => all => gensym => /var/tmp/mruby/build/cross/presym => /var/tmp/mruby/build/cross/mrblib/mrblib.i => /var/tmp/mruby/build/cross/mrblib/mrblib.c => /var/tmp/mruby/build/cross/bin/mrbc => /var/tmp/mruby/build/cross/mrbgems/mruby-bin-mrbc/tools/mrbc/mrbc.o
(See full trace by running task with --trace)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5220,2020-12-13T06:39:23Z,2021-01-06T08:16:14Z,2021-01-09T14:21:23Z,MERGED,True,2658,1808,32,https://github.com/shuujii,Improve source scanning for presym,1,[],https://github.com/mruby/mruby/pull/5220,https://github.com/shuujii,12,https://github.com/mruby/mruby/pull/5220#issuecomment-757235022,"The accuracy is greatly improved by using the C preprocessor to scan C
sources for presym. C preprocessor can perfectly interpret all comments and
preprocessor directives, so it can detect all symbols defined, for example
mrbgems/mruby-socket/src/const.cstub.
Also, as described later, this change will greatly improve the accuracy of
presym detection from Ruby sources.
Result
The number of lines in the presym file for all gems is as follows:
Previous:   999 (false positive = 89, undetected = 297)
New:       1207
Build process
The new build process (with presym) is as follows:

Build mrbc without presym (more on building without presym later).
Compile Ruby sources to C struct format with the mrbc created in
step 1, and create mrblib.c and gem_init.c. Note that the symbols
in the created files are output as MRB_SYM family macros or
mrb_intern_lit instead of IDs (details will be described later).
C preprocessor processes C sources including the created files of
step 2 and outputs them as .i files. In these files, for example,
MRB_IVSYM(foo) is converted to <@! ""@"" ""foo"" !@> and
mrb_define_module(mrb, ""Foo"") is converted to <@! ""Foo"" !@>.
Scan the files created in step 3 and create presym and presym.inc
files.

The files created in step 2 should output all static symbols defined in Ruby
sources, including local variables, so we can detect all presyms by just
scanning C sources without scanning Ruby sources directly.
Further, by this process, the files to be scanned becomes the same as the
files to be compiled, so that there is no excess or deficiency.
Related changes
The following changes have been made in relation to realizing this feature.
Allow build without presym
It enables build without presym to achieve the ""Build process: 1"". This
incorporates #5202, see its issue for details.
Note that when presym is enabled, even adding a local variable to a Ruby
source may change contents of presym and require recompilation of almost
all C sources. This is inconvenient, especially during trial and error in
development, but this feature is also useful because it does not cause
this problem if presym is disabled.
Automatically create build target for mrbc without presym
The mrbc used in the ""Build process: 1"" will be built by automatically
creating a build target for it. The build name is SOURCE_BUILD_NAME/mrbc.
Constantize output of C struct format by mrbc
To realizing the ""Build process: 2"", as mentioned above, symbol IDs are not
output directly in C struct format output by mrbc. As a result, the output
becomes constant regardless of the state of presym at the time of mrbc
build, and it is possible to detect symbols of Ruby sources in the same way
as other C sources.
Note that mrb_intern_lit is used for symbols that do not become presym,
but in this state, the corresponding element in the symbol array cannot be
statically initialized, so it is initialized at run time (therefore, in this
case, the const qualifier is not added to the symbol array).
Specify arbitrary mrbc file
To realizing the ""Build process: 2"", enabled to specify mrbc created by
another build target or pre-built mrbc. Use MRuby::Build#mrbcfile = to
specify it explicitly. You can omit the ""Build process: 1"" by specifying
pre-built mrbc, and you can always use an optimized build to compile Ruby
sources faster. I think changes that affect the output of mrbc are rare,
so in many cases it helps to improve efficiency.
With presym, the build will be a little slower due to more build steps, but
this feature will improve it a bit.
Create presym files for each build target
This feature was proposed at #5194 and merged once, but was reverted in
5c205e6 due to problems especially with cross-compilation. It has been
introduced again because this change solves the problem.
The presym files will be created below.

build/NAME/presym
build/NAME/include/mruby/presym.inc

Other changes

Because presym detection accuracy is greatly improved as mentioned above,
MRuby::Gem::Specification#cdump? is set to true by default, and
disable_cdump is added instead of enable_cdump. Also, support for gem
specific presym files has been discontinued (#5151 (comment)).
Previously, mrbc was automatically created for the host build, but it
will not be created if the build target for mrbc mentioned above is
automatically created. At this time, mrbc file of the mrbc build is
copied to bin/.
Two types of .d files will be created, .o.d and .i.d. oThis is
because if .i depends on presym.inc, the dependency will circulate, so
the .d file cannot be shared.
Changed file created with enable_cxx_exception to X-cxx.cxx from
X.cxx to use the mruby standard Rake rule.

Note
Almost all C sources will need to be recompiled if there are any changes to
persym.inc (if not recompiled properly, it will often result in run-time
error). If gcc toolchain is used, dependencies are resolved by the .d
file, so it become automatically recompile target, but if not (e.g. MSVC),
it is necessary to manually make it recompile target.
Also, even if gcc toolchain is used, it may not become recompile target if
external gems does not use the mruby standard Rake rule. In particular, if
the standard rule is overwritten, such as
https://github.com/mruby/mruby/pull/5112/files, .d file will not be read,
so be careful.",@dearblue Thank you for the reports.  I will investigate.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5221,2020-12-13T07:29:38Z,2020-12-13T14:36:18Z,2020-12-14T12:23:46Z,MERGED,True,27,27,18,https://github.com/jbampton,Fix spelling,1,[],https://github.com/mruby/mruby/pull/5221,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5221,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5222,2020-12-15T09:37:35Z,2020-12-15T13:30:39Z,2020-12-15T13:34:44Z,MERGED,True,30,30,18,https://github.com/jbampton,"refactor: remove trailing whitespace from C, Header, Ruby and YAML files",1,[],https://github.com/mruby/mruby/pull/5222,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5222,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5222,2020-12-15T09:37:35Z,2020-12-15T13:30:39Z,2020-12-15T13:34:44Z,MERGED,True,30,30,18,https://github.com/jbampton,"refactor: remove trailing whitespace from C, Header, Ruby and YAML files",1,[],https://github.com/mruby/mruby/pull/5222,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5222#issuecomment-745287986,,Thank you!,True,{'THUMBS_UP': ['https://github.com/jbampton']}
mruby/mruby,https://github.com/mruby/mruby,5223,2020-12-15T09:44:21Z,2020-12-15T13:32:33Z,2020-12-23T13:06:33Z,MERGED,True,6,0,1,https://github.com/shuujii,Ensure initialization of `RVALUE_zero` in `mrb_obj_alloc`,1,[],https://github.com/mruby/mruby/pull/5223,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5223,"Union initialization initializes the first member. The first member of
RVALUE is struct free_obj, but because it is only 4-words, it seems that
initialization after the 5th word is not ensured.
Therefore, I created 6-words struct RVALUE_initializer for initialization
and made it the first member.","Union initialization initializes the first member. The first member of
RVALUE is struct free_obj, but because it is only 4-words, it seems that
initialization after the 5th word is not ensured.
Therefore, I created 6-words struct RVALUE_initializer for initialization
and made it the first member.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5224,2020-12-15T12:49:59Z,2020-12-16T13:26:22Z,2020-12-16T14:45:00Z,MERGED,True,129,110,6,https://github.com/jbampton,feat(CI): add a GitHub Action to lint the YAML,1,[],https://github.com/mruby/mruby/pull/5224,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5224,"Run only on pull request
Add a .yamllint config file
Lint YAML","Run only on pull request
Add a .yamllint config file
Lint YAML",True,{}
mruby/mruby,https://github.com/mruby/mruby,5224,2020-12-15T12:49:59Z,2020-12-16T13:26:22Z,2020-12-16T14:45:00Z,MERGED,True,129,110,6,https://github.com/jbampton,feat(CI): add a GitHub Action to lint the YAML,1,[],https://github.com/mruby/mruby/pull/5224,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5224#issuecomment-745286998,"Run only on pull request
Add a .yamllint config file
Lint YAML","Thank you for running Lint for YAML files. But do we really need to run YAML lint on every pull-request?
Considering YAML files are not change often, I am afraid it's too much.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5224,2020-12-15T12:49:59Z,2020-12-16T13:26:22Z,2020-12-16T14:45:00Z,MERGED,True,129,110,6,https://github.com/jbampton,feat(CI): add a GitHub Action to lint the YAML,1,[],https://github.com/mruby/mruby/pull/5224,https://github.com/jbampton,3,https://github.com/mruby/mruby/pull/5224#issuecomment-745294222,"Run only on pull request
Add a .yamllint config file
Lint YAML","Hey @matz I think it's good to have the YAML lint check on the CI to stop regressions.
Plus so far it takes less than 10 seconds to run.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5224,2020-12-15T12:49:59Z,2020-12-16T13:26:22Z,2020-12-16T14:45:00Z,MERGED,True,129,110,6,https://github.com/jbampton,feat(CI): add a GitHub Action to lint the YAML,1,[],https://github.com/mruby/mruby/pull/5224,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5224#issuecomment-746334258,"Run only on pull request
Add a .yamllint config file
Lint YAML",".gitlab-ci.yml is generated by rake gitlab_config using YAML.dump. So if you want to change the YAML format, you need to modify tasks/gitlab.rake, too. However can it be output in the following format?

  
    
      mruby/.gitlab-ci.yml
    
    
        Lines 2 to 4
      in
      fbe5033
    
  
  
    

        
          
           stages: 
        

        
          
             - pretest 
        

        
          
             - test 
        
    
  


By the way, currently rake gitlab_config gives an error. I feel that no one is using GitLab CI, so I personally think that it is okay to delete the related part.",True,{'THUMBS_UP': ['https://github.com/jbampton']}
mruby/mruby,https://github.com/mruby/mruby,5224,2020-12-15T12:49:59Z,2020-12-16T13:26:22Z,2020-12-16T14:45:00Z,MERGED,True,129,110,6,https://github.com/jbampton,feat(CI): add a GitHub Action to lint the YAML,1,[],https://github.com/mruby/mruby/pull/5224,https://github.com/jbampton,5,https://github.com/mruby/mruby/pull/5224#issuecomment-746404574,"Run only on pull request
Add a .yamllint config file
Lint YAML","You can always ignore files from YAML linting as seen here:
https://yamllint.readthedocs.io/en/stable/configuration.html#ignoring-paths
Just needs an edit to the .yamllint config file.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5225,2020-12-15T13:08:33Z,2020-12-15T13:31:27Z,2020-12-23T13:06:35Z,MERGED,True,1,0,1,https://github.com/shuujii,Output build log at the time of installation,1,[],https://github.com/mruby/mruby/pull/5225,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5225,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5226,2020-12-16T10:18:09Z,2020-12-16T11:25:36Z,2020-12-23T13:06:34Z,MERGED,True,25,25,6,https://github.com/shuujii,Guess toolchain when `MRuby::Build#toolchain` argument is omitted,1,[],https://github.com/mruby/mruby/pull/5226,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5226,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5227,2020-12-16T13:22:26Z,2020-12-16T13:25:59Z,2020-12-23T13:06:36Z,MERGED,True,9,9,5,https://github.com/shuujii,Rename build configuration files for CI,1,[],https://github.com/mruby/mruby/pull/5227,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5227,"Currently, there are build configuration files for CI, travis.rb and
appveyor.rb, but they are used for GCC/Clang and MSVC, not for Travis CI
and Appveyor, respectively.
Therefore, rename them to gcc-clang.rb and msvc.rb, respectively, and
move them under build_config/ci/ to clarify that they are for CI.","Currently, there are build configuration files for CI, travis.rb and
appveyor.rb, but they are used for GCC/Clang and MSVC, not for Travis CI
and Appveyor, respectively.
Therefore, rename them to gcc-clang.rb and msvc.rb, respectively, and
move them under build_config/ci/ to clarify that they are for CI.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5228,2020-12-17T06:26:09Z,2020-12-18T14:43:11Z,2020-12-18T22:54:54Z,MERGED,True,22,5,5,https://github.com/jbampton,feat(CI): add a GitHub Action to check spelling,1,[],https://github.com/mruby/mruby/pull/5228,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5228,"Fix spelling
Run only on pull request
Using https://github.com/client9/misspell","Fix spelling
Run only on pull request
Using https://github.com/client9/misspell",True,{}
mruby/mruby,https://github.com/mruby/mruby,5228,2020-12-17T06:26:09Z,2020-12-18T14:43:11Z,2020-12-18T22:54:54Z,MERGED,True,22,5,5,https://github.com/jbampton,feat(CI): add a GitHub Action to check spelling,1,[],https://github.com/mruby/mruby/pull/5228,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5228#issuecomment-748120774,"Fix spelling
Run only on pull request
Using https://github.com/client9/misspell","Considering the spelling errors it found, I admit it really is useful.",True,"{'THUMBS_UP': ['https://github.com/jbampton'], 'HOORAY': ['https://github.com/jbampton']}"
mruby/mruby,https://github.com/mruby/mruby,5229,2020-12-19T07:39:29Z,2020-12-19T07:42:40Z,2020-12-19T07:44:05Z,MERGED,True,6,6,5,https://github.com/jbampton,🔒 Fix missing HTTPS on links,1,[],https://github.com/mruby/mruby/pull/5229,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5229,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5230,2020-12-19T07:48:57Z,2020-12-19T08:28:54Z,2020-12-31T13:48:25Z,MERGED,True,7,2,2,https://github.com/dearblue,Ignore `mruby-bin-config` in cross-building,2,[],https://github.com/mruby/mruby/pull/5230,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5230,"If it adds mruby-bin-config inside MRuby::CrossBuild, the build will fail.
# mingw32_config.rb

MRuby::CrossBuild.new(""cross-mingw32"") do |conf|
  toolchain ""gcc""

  compilers.each { |cc| cc.command = ""mingw32-#{cc.command}"" }
  linker.command = ""mingw32-gcc""
  archiver.command = ""mingw32-ar""
  exts.executable = "".exe""

  gem core: ""mruby-bin-config""
end
% rake30 MRUBY_CONFIG=mingw32_config.rb
...SNIP...
rake aborted!
Don't know how to build task '/var/tmp/mruby/build/cross-mingw32/bin/mruby-config.exe' (See the list of available tasks with `rake --tasks`)
I think I was able to build it before, but as far as I can see mrbgems/mruby-bin-config/mrbgem.rake, It's trying to ignore it in cross build.

  
    
      mruby/mrbgems/mruby-bin-config/mrbgem.rake
    
    
         Line 1
      in
      08d4365
    
  
  
    

        
          
           unless MRuby::Build.current.kind_of?(MRuby::CrossBuild) 
        
    
  


However, MRuby::Build.current and MRuby::CrossBuild.current are treated differently and were not previously ignored as intended.

  
    
      mruby/lib/mruby/build.rb
    
    
         Line 119
      in
      08d4365
    
  
  
    

        
          
           MRuby.targets[@name] = self.class.current = current = self 
        
    
  


I fixed it and made it output in the form of a warning so that I could see that it was ignored.
% rake30 MRUBY_CONFIG=mingw32_config.rb
WARN  mruby-bin-config - This mrbgem is ignored within cross-mingw32
...SNIP...","If it adds mruby-bin-config inside MRuby::CrossBuild, the build will fail.
# mingw32_config.rb

MRuby::CrossBuild.new(""cross-mingw32"") do |conf|
  toolchain ""gcc""

  compilers.each { |cc| cc.command = ""mingw32-#{cc.command}"" }
  linker.command = ""mingw32-gcc""
  archiver.command = ""mingw32-ar""
  exts.executable = "".exe""

  gem core: ""mruby-bin-config""
end
% rake30 MRUBY_CONFIG=mingw32_config.rb
...SNIP...
rake aborted!
Don't know how to build task '/var/tmp/mruby/build/cross-mingw32/bin/mruby-config.exe' (See the list of available tasks with `rake --tasks`)
I think I was able to build it before, but as far as I can see mrbgems/mruby-bin-config/mrbgem.rake, It's trying to ignore it in cross build.

  
    
      mruby/mrbgems/mruby-bin-config/mrbgem.rake
    
    
         Line 1
      in
      08d4365
    
  
  
    

        
          
           unless MRuby::Build.current.kind_of?(MRuby::CrossBuild) 
        
    
  


However, MRuby::Build.current and MRuby::CrossBuild.current are treated differently and were not previously ignored as intended.

  
    
      mruby/lib/mruby/build.rb
    
    
         Line 119
      in
      08d4365
    
  
  
    

        
          
           MRuby.targets[@name] = self.class.current = current = self 
        
    
  


I fixed it and made it output in the form of a warning so that I could see that it was ignored.
% rake30 MRUBY_CONFIG=mingw32_config.rb
WARN  mruby-bin-config - This mrbgem is ignored within cross-mingw32
...SNIP...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5230,2020-12-19T07:48:57Z,2020-12-19T08:28:54Z,2020-12-31T13:48:25Z,MERGED,True,7,2,2,https://github.com/dearblue,Ignore `mruby-bin-config` in cross-building,2,[],https://github.com/mruby/mruby/pull/5230,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5230#issuecomment-748450890,"If it adds mruby-bin-config inside MRuby::CrossBuild, the build will fail.
# mingw32_config.rb

MRuby::CrossBuild.new(""cross-mingw32"") do |conf|
  toolchain ""gcc""

  compilers.each { |cc| cc.command = ""mingw32-#{cc.command}"" }
  linker.command = ""mingw32-gcc""
  archiver.command = ""mingw32-ar""
  exts.executable = "".exe""

  gem core: ""mruby-bin-config""
end
% rake30 MRUBY_CONFIG=mingw32_config.rb
...SNIP...
rake aborted!
Don't know how to build task '/var/tmp/mruby/build/cross-mingw32/bin/mruby-config.exe' (See the list of available tasks with `rake --tasks`)
I think I was able to build it before, but as far as I can see mrbgems/mruby-bin-config/mrbgem.rake, It's trying to ignore it in cross build.

  
    
      mruby/mrbgems/mruby-bin-config/mrbgem.rake
    
    
         Line 1
      in
      08d4365
    
  
  
    

        
          
           unless MRuby::Build.current.kind_of?(MRuby::CrossBuild) 
        
    
  


However, MRuby::Build.current and MRuby::CrossBuild.current are treated differently and were not previously ignored as intended.

  
    
      mruby/lib/mruby/build.rb
    
    
         Line 119
      in
      08d4365
    
  
  
    

        
          
           MRuby.targets[@name] = self.class.current = current = self 
        
    
  


I fixed it and made it output in the form of a warning so that I could see that it was ignored.
% rake30 MRUBY_CONFIG=mingw32_config.rb
WARN  mruby-bin-config - This mrbgem is ignored within cross-mingw32
...SNIP...","Sorry, I made a wrong change in 73b4152. Thank you!",True,{}
mruby/mruby,https://github.com/mruby/mruby,5231,2020-12-19T07:54:40Z,2020-12-19T07:59:12Z,2020-12-19T08:30:11Z,MERGED,True,6,6,5,https://github.com/jbampton,🔒 Fix missing HTTPS on links,1,[],https://github.com/mruby/mruby/pull/5231,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5231,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5231,2020-12-19T07:54:40Z,2020-12-19T07:59:12Z,2020-12-19T08:30:11Z,MERGED,True,6,6,5,https://github.com/jbampton,🔒 Fix missing HTTPS on links,1,[],https://github.com/mruby/mruby/pull/5231,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5231#issuecomment-748441488,,"@jbampton Do you want to add your name to AUTHORS file? If so, make a pull-request. We welcome you.",True,"{'THUMBS_UP': ['https://github.com/jbampton'], 'HEART': ['https://github.com/jbampton']}"
mruby/mruby,https://github.com/mruby/mruby,5232,2020-12-19T08:28:42Z,2020-12-19T08:31:54Z,2020-12-19T08:45:05Z,MERGED,True,144,41,12,https://github.com/jbampton,feat(CI): add a GitHub Action to lint the Markdown,1,[],https://github.com/mruby/mruby/pull/5232,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5232,"Run on pull request only
Using https://www.npmjs.com/package/markdownlint-cli
Lint Markdown for rules:

MD009/no-trailing-spaces
MD012/no-multiple-blanks
MD022/blanks-around-headings
MD031/blanks-around-fences
MD032/blanks-around-lists","Run on pull request only
Using https://www.npmjs.com/package/markdownlint-cli
Lint Markdown for rules:

MD009/no-trailing-spaces
MD012/no-multiple-blanks
MD022/blanks-around-headings
MD031/blanks-around-fences
MD032/blanks-around-lists",True,{}
mruby/mruby,https://github.com/mruby/mruby,5233,2020-12-19T10:30:24Z,2020-12-19T13:43:59Z,2020-12-19T13:50:51Z,MERGED,True,1,0,1,https://github.com/jbampton,Add my name to the AUTHORS file,1,[],https://github.com/mruby/mruby/pull/5233,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5233,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5234,2020-12-19T12:44:32Z,2020-12-19T13:44:24Z,2020-12-19T13:51:43Z,MERGED,True,6,6,2,https://github.com/jbampton,refactor: remove trailing whitespace,1,[],https://github.com/mruby/mruby/pull/5234,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5234,"Pretty sure the rules are relaxed for code blocks when it comes to linting Markdown.
So the linter doesn't find the unneeded trailing whitespace in code blocks.
The Doxyfile is a text file and we don't have checking on the CI for those yet.","Pretty sure the rules are relaxed for code blocks when it comes to linting Markdown.
So the linter doesn't find the unneeded trailing whitespace in code blocks.
The Doxyfile is a text file and we don't have checking on the CI for those yet.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5235,2020-12-19T13:57:16Z,2020-12-20T09:12:24Z,2020-12-21T02:12:17Z,MERGED,True,3,3,2,https://github.com/jbampton,refactor: fix case of GitHub and fix missing HTTPS on link,1,[],https://github.com/mruby/mruby/pull/5235,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5235,changed github to GitHub,changed github to GitHub,True,{}
mruby/mruby,https://github.com/mruby/mruby,5236,2020-12-20T06:33:16Z,2020-12-20T09:13:48Z,2020-12-23T13:06:36Z,MERGED,True,106,52,3,https://github.com/shuujii,Reorganize GitHub Actions configuration [skip travis][skip appveyor],1,[],https://github.com/mruby/mruby/pull/5236,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5236,"Skip if commit message contains ci skip, skip ci, or skip gha
ENCLOSED WITH BRACKETS (excluding lint job).
Separate build and test. This is because builds can be run in parallel,
but running tests in parallel can cause logs to get mixed up or not
finished.
Don't use Chocolatey because it seems to take 1-2 minutes to start up.
Use the cache better.
Use actions/checkout@v2 instead of actions/checkout@v1.
Remove unnecessary package installation.
Remove unnecessary flag settings.
Remove -j for rake because it doesn't seem to have any effect.
Rename main.yml to oss-fuzz.yml to clarify.","Skip if commit message contains ci skip, skip ci, or skip gha
ENCLOSED WITH BRACKETS (excluding lint job).
Separate build and test. This is because builds can be run in parallel,
but running tests in parallel can cause logs to get mixed up or not
finished.
Don't use Chocolatey because it seems to take 1-2 minutes to start up.
Use the cache better.
Use actions/checkout@v2 instead of actions/checkout@v1.
Remove unnecessary package installation.
Remove unnecessary flag settings.
Remove -j for rake because it doesn't seem to have any effect.
Rename main.yml to oss-fuzz.yml to clarify.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5236,2020-12-20T06:33:16Z,2020-12-20T09:13:48Z,2020-12-23T13:06:36Z,MERGED,True,106,52,3,https://github.com/shuujii,Reorganize GitHub Actions configuration [skip travis][skip appveyor],1,[],https://github.com/mruby/mruby/pull/5236,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5236#issuecomment-748808126,"Skip if commit message contains ci skip, skip ci, or skip gha
ENCLOSED WITH BRACKETS (excluding lint job).
Separate build and test. This is because builds can be run in parallel,
but running tests in parallel can cause logs to get mixed up or not
finished.
Don't use Chocolatey because it seems to take 1-2 minutes to start up.
Use the cache better.
Use actions/checkout@v2 instead of actions/checkout@v1.
Remove unnecessary package installation.
Remove unnecessary flag settings.
Remove -j for rake because it doesn't seem to have any effect.
Rename main.yml to oss-fuzz.yml to clarify.","The skip feature seems to be effective when push, but not when pull-request.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5237,2020-12-20T13:53:10Z,2020-12-20T23:33:43Z,2020-12-23T13:06:37Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `git ls-files` instead of `find` in `spell-checker.yml` [ci skip],1,[],https://github.com/mruby/mruby/pull/5237,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5237,To avoid including .git directory.,To avoid including .git directory.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5237,2020-12-20T13:53:10Z,2020-12-20T23:33:43Z,2020-12-23T13:06:37Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `git ls-files` instead of `find` in `spell-checker.yml` [ci skip],1,[],https://github.com/mruby/mruby/pull/5237,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5237#issuecomment-748611020,To avoid including .git directory.,"BTW, IMHO, it may be better not to use emoji because it may not be read and written well depending on the environment.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5238,2020-12-21T07:22:43Z,2020-12-21T08:07:21Z,2020-12-23T13:06:34Z,MERGED,True,8,8,1,https://github.com/shuujii,Fix typo in `.github/workflows/build.yml` [skip travis][skip appveyor],1,[],https://github.com/mruby/mruby/pull/5238,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5238,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5239,2020-12-21T08:48:55Z,2020-12-21T14:11:41Z,2020-12-21T15:34:59Z,MERGED,True,3,3,3,https://github.com/jbampton,refactor: fix Rake link and fix missing HTTPS on links,1,[],https://github.com/mruby/mruby/pull/5239,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5239,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5241,2020-12-21T13:07:09Z,2021-01-06T09:06:19Z,2021-01-10T04:38:34Z,MERGED,True,121,93,8,https://github.com/dearblue,Take advantage of gembox,1,[],https://github.com/mruby/mruby/pull/5241,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5241,"I think that it is easy to use if it is divided according to the type of library and the general purpose.
It is a subdivision from the previous default.gembox.
By type gembox:

stdlib: Add some standard Ruby methods not provided by core.
stdlib-ext: Add some standard Ruby methods that are not provided by stdlib.
stdlib-io: Provides IO, File, Socket, print, etc. Conflict with MRB_NO_STDIO
math: Add a class related to math. Conflict with MRB_NO_FLOAT
metaprog: Adds features related to metaprogramming.

Purpose gembox:

default.gembox: Import the same gems as before
default-no-stdio.gembox: Import the stdlib and math
default-no-fpu.gembox: Import the stdlib only


I think there is room for debate about the gembox name and classification.","I think that it is easy to use if it is divided according to the type of library and the general purpose.
It is a subdivision from the previous default.gembox.
By type gembox:

stdlib: Add some standard Ruby methods not provided by core.
stdlib-ext: Add some standard Ruby methods that are not provided by stdlib.
stdlib-io: Provides IO, File, Socket, print, etc. Conflict with MRB_NO_STDIO
math: Add a class related to math. Conflict with MRB_NO_FLOAT
metaprog: Adds features related to metaprogramming.

Purpose gembox:

default.gembox: Import the same gems as before
default-no-stdio.gembox: Import the stdlib and math
default-no-fpu.gembox: Import the stdlib only


I think there is room for debate about the gembox name and classification.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5241,2020-12-21T13:07:09Z,2021-01-06T09:06:19Z,2021-01-10T04:38:34Z,MERGED,True,121,93,8,https://github.com/dearblue,Take advantage of gembox,1,[],https://github.com/mruby/mruby/pull/5241,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5241#issuecomment-749330042,"I think that it is easy to use if it is divided according to the type of library and the general purpose.
It is a subdivision from the previous default.gembox.
By type gembox:

stdlib: Add some standard Ruby methods not provided by core.
stdlib-ext: Add some standard Ruby methods that are not provided by stdlib.
stdlib-io: Provides IO, File, Socket, print, etc. Conflict with MRB_NO_STDIO
math: Add a class related to math. Conflict with MRB_NO_FLOAT
metaprog: Adds features related to metaprogramming.

Purpose gembox:

default.gembox: Import the same gems as before
default-no-stdio.gembox: Import the stdlib and math
default-no-fpu.gembox: Import the stdlib only


I think there is room for debate about the gembox name and classification.",Done.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5241,2020-12-21T13:07:09Z,2021-01-06T09:06:19Z,2021-01-10T04:38:34Z,MERGED,True,121,93,8,https://github.com/dearblue,Take advantage of gembox,1,[],https://github.com/mruby/mruby/pull/5241,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5241#issuecomment-749330240,"I think that it is easy to use if it is divided according to the type of library and the general purpose.
It is a subdivision from the previous default.gembox.
By type gembox:

stdlib: Add some standard Ruby methods not provided by core.
stdlib-ext: Add some standard Ruby methods that are not provided by stdlib.
stdlib-io: Provides IO, File, Socket, print, etc. Conflict with MRB_NO_STDIO
math: Add a class related to math. Conflict with MRB_NO_FLOAT
metaprog: Adds features related to metaprogramming.

Purpose gembox:

default.gembox: Import the same gems as before
default-no-stdio.gembox: Import the stdlib and math
default-no-fpu.gembox: Import the stdlib only


I think there is room for debate about the gembox name and classification.","Oops, I made a mistake. Reopen.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5242,2020-12-22T06:13:32Z,2020-12-23T06:59:30Z,2020-12-23T10:27:09Z,MERGED,True,1,0,1,https://github.com/jbampton,Create CODEOWNERS file,1,[],https://github.com/mruby/mruby/pull/5242,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5242,"You can use a CODEOWNERS file to define individuals or teams that are responsible for code in a repository.
Code owners are automatically requested for review when someone opens a pull request that modifies code that they own. Code owners are not automatically requested to review draft pull requests.
https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/about-code-owners
This creates a bit more automation so that after you merge this PR, next time someone submits a PR @matz will be automatically assigned as the PR reviewer as CODEOWNER
CODEOWNERS can even be assigned directories or file types

The Reviewers section will get filled out automatically with Matz","You can use a CODEOWNERS file to define individuals or teams that are responsible for code in a repository.
Code owners are automatically requested for review when someone opens a pull request that modifies code that they own. Code owners are not automatically requested to review draft pull requests.
https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/about-code-owners
This creates a bit more automation so that after you merge this PR, next time someone submits a PR @matz will be automatically assigned as the PR reviewer as CODEOWNER
CODEOWNERS can even be assigned directories or file types

The Reviewers section will get filled out automatically with Matz",True,{}
mruby/mruby,https://github.com/mruby/mruby,5243,2020-12-23T06:40:34Z,2020-12-23T06:55:39Z,2020-12-23T07:30:39Z,MERGED,True,73,0,1,https://github.com/boatrite,Add example for cross-compiling to Nintendo GameBoyAdvance,1,[],https://github.com/mruby/mruby/pull/5243,https://github.com/boatrite,1,https://github.com/mruby/mruby/pull/5243,"Hey everyone!
I've gotten mruby running on a Nintendo GameBoyAdvance and wanted to contribute my build config to the project.
It's pretty simple. I modeled it after the Dreamcast one, but in this case I'm using the the devkitPro toolchain to do the cross-compiling.
The biggest drawback here is that I've only tested it on Linux. I don't have access to a Mac and would have no idea how to even start going about doing any development on a Windows machine, but since the build configs here seem to mostly act as examples, I think there's still plenty of value in adding it as-is.
Happy Holidays!","Hey everyone!
I've gotten mruby running on a Nintendo GameBoyAdvance and wanted to contribute my build config to the project.
It's pretty simple. I modeled it after the Dreamcast one, but in this case I'm using the the devkitPro toolchain to do the cross-compiling.
The biggest drawback here is that I've only tested it on Linux. I don't have access to a Mac and would have no idea how to even start going about doing any development on a Windows machine, but since the build configs here seem to mostly act as examples, I think there's still plenty of value in adding it as-is.
Happy Holidays!",True,{}
mruby/mruby,https://github.com/mruby/mruby,5243,2020-12-23T06:40:34Z,2020-12-23T06:55:39Z,2020-12-23T07:30:39Z,MERGED,True,73,0,1,https://github.com/boatrite,Add example for cross-compiling to Nintendo GameBoyAdvance,1,[],https://github.com/mruby/mruby/pull/5243,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5243#issuecomment-749973674,"Hey everyone!
I've gotten mruby running on a Nintendo GameBoyAdvance and wanted to contribute my build config to the project.
It's pretty simple. I modeled it after the Dreamcast one, but in this case I'm using the the devkitPro toolchain to do the cross-compiling.
The biggest drawback here is that I've only tested it on Linux. I don't have access to a Mac and would have no idea how to even start going about doing any development on a Windows machine, but since the build configs here seem to mostly act as examples, I think there's still plenty of value in adding it as-is.
Happy Holidays!",Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5244,2020-12-25T14:30:40Z,2020-12-25T23:44:09Z,2020-12-31T13:48:24Z,MERGED,True,1,1,1,https://github.com/dearblue,Improves out of memory messages for `eval`,1,[],https://github.com/mruby/mruby/pull/5244,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5244,"The comment says that if mrb_parse_nstring() returns NULL, it is only out of memory.
I'm worried about compatibility if I set the exception class to NoMemoryError, so it's still RuntimeError.","The comment says that if mrb_parse_nstring() returns NULL, it is only out of memory.
I'm worried about compatibility if I set the exception class to NoMemoryError, so it's still RuntimeError.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5245,2020-12-26T15:14:04Z,2020-12-31T15:24:54Z,2021-01-01T10:35:46Z,MERGED,True,2,2,2,https://github.com/jbampton,Update copyright year for 2021,1,[],https://github.com/mruby/mruby/pull/5245,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5245,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5246,2020-12-27T07:52:14Z,2020-12-27T11:05:45Z,2020-12-27T11:05:53Z,MERGED,True,2304,1784,5,https://github.com/SeekingMeaning,Add support for squiggly heredocs,3,[],https://github.com/mruby/mruby/pull/5246,https://github.com/SeekingMeaning,1,https://github.com/mruby/mruby/pull/5246,"Hello, I have added support for squiggly heredocs to mruby. Please tell me if I did anything wrong! (Should I commit y.tab.c?)","Hello, I have added support for squiggly heredocs to mruby. Please tell me if I did anything wrong! (Should I commit y.tab.c?)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5246,2020-12-27T07:52:14Z,2020-12-27T11:05:45Z,2020-12-27T11:05:53Z,MERGED,True,2304,1784,5,https://github.com/SeekingMeaning,Add support for squiggly heredocs,3,[],https://github.com/mruby/mruby/pull/5246,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5246#issuecomment-751453953,"Hello, I have added support for squiggly heredocs to mruby. Please tell me if I did anything wrong! (Should I commit y.tab.c?)",Thank you!,True,"{'HEART': ['https://github.com/SeekingMeaning', 'https://github.com/shreeve']}"
mruby/mruby,https://github.com/mruby/mruby,5247,2020-12-27T21:27:55Z,2020-12-28T08:03:53Z,2020-12-28T09:38:11Z,MERGED,True,1041,1020,3,https://github.com/SeekingMeaning,Fix for empty lines in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5247,https://github.com/SeekingMeaning,1,https://github.com/mruby/mruby/pull/5247,"Sorry, I have made a mistake in my previous PR #5246 and forgot to check for empty lines in squiggly heredocs.","Sorry, I have made a mistake in my previous PR #5246 and forgot to check for empty lines in squiggly heredocs.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5247,2020-12-27T21:27:55Z,2020-12-28T08:03:53Z,2020-12-28T09:38:11Z,MERGED,True,1041,1020,3,https://github.com/SeekingMeaning,Fix for empty lines in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5247,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5247#issuecomment-751630228,"Sorry, I have made a mistake in my previous PR #5246 and forgot to check for empty lines in squiggly heredocs.","The following result seems to be different from Ruby.
# example.rb
p <<~EOS
\t
 a
EOS
$ ruby example.rb
""\t\n a\n""
$ mruby example.rb
""\na\n""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5247,2020-12-27T21:27:55Z,2020-12-28T08:03:53Z,2020-12-28T09:38:11Z,MERGED,True,1041,1020,3,https://github.com/SeekingMeaning,Fix for empty lines in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5247,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/5247#issuecomment-751633509,"Sorry, I have made a mistake in my previous PR #5246 and forgot to check for empty lines in squiggly heredocs.","BTW, in Ruby, if the tab is a hard tab (not \t), the result seems to change and I'm not sure if it is intentional or not.
https://wandbox.org/permlink/po9PrAiZKOOkZWnn",True,{}
mruby/mruby,https://github.com/mruby/mruby,5247,2020-12-27T21:27:55Z,2020-12-28T08:03:53Z,2020-12-28T09:38:11Z,MERGED,True,1041,1020,3,https://github.com/SeekingMeaning,Fix for empty lines in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5247,https://github.com/SeekingMeaning,4,https://github.com/mruby/mruby/pull/5247#issuecomment-751641264,"Sorry, I have made a mistake in my previous PR #5246 and forgot to check for empty lines in squiggly heredocs.",Thank you for bringing this up @shuujii; I shall look into this further,True,{}
mruby/mruby,https://github.com/mruby/mruby,5247,2020-12-27T21:27:55Z,2020-12-28T08:03:53Z,2020-12-28T09:38:11Z,MERGED,True,1041,1020,3,https://github.com/SeekingMeaning,Fix for empty lines in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5247,https://github.com/SeekingMeaning,5,https://github.com/mruby/mruby/pull/5247#issuecomment-751650624,"Sorry, I have made a mistake in my previous PR #5246 and forgot to check for empty lines in squiggly heredocs.","The following input gives me an unexpected output:
Input: (⇥ represents a tab, and · represents a space)
<<~EOS
⇥This line is prefixed by a tab character.
··⇥This line is prefixed by two spaces and a tab character.
⇥··This line is prefixed by a tab character and two spaces.
EOS

Output:
This line is prefixed by a tab character.
This line is prefixed by two spaces and a tab character.
··This line is prefixed by a tab character and two spaces.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5248,2020-12-28T00:24:10Z,2020-12-28T06:19:13Z,2020-12-28T06:19:14Z,MERGED,True,33,0,2,https://github.com/SeekingMeaning,Add `Hash#except` [Ruby 3.0],1,[],https://github.com/mruby/mruby/pull/5248,https://github.com/SeekingMeaning,1,https://github.com/mruby/mruby/pull/5248,This PR adds Hash#except to match mruby with Ruby 3,This PR adds Hash#except to match mruby with Ruby 3,True,{}
mruby/mruby,https://github.com/mruby/mruby,5249,2020-12-29T02:23:58Z,2020-12-29T04:51:42Z,2020-12-29T18:47:09Z,MERGED,True,1089,1102,4,https://github.com/SeekingMeaning,Fix mixed indentation and escaped tabs in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5249,https://github.com/SeekingMeaning,1,https://github.com/mruby/mruby/pull/5249,"This fixes most of the issues @shuujii mentioned in #5247
# examples.rb
p <<~EOS
\t
 a
EOS
p <<~EOS
	(hard tab)
 a
EOS
p <<~EOS
\t(escaped tab)
 a
EOS
$ ruby examples.rb
""\t\n a\n""
""\t(hard tab)\na\n""
""\t(escaped tab)\n a\n""
$ mruby examples.rb
""\t\n a\n""
""\t(hard tab)\n a\n""
""\t(escaped tab)\n a\n""","This fixes most of the issues @shuujii mentioned in #5247
# examples.rb
p <<~EOS
\t
 a
EOS
p <<~EOS
	(hard tab)
 a
EOS
p <<~EOS
\t(escaped tab)
 a
EOS
$ ruby examples.rb
""\t\n a\n""
""\t(hard tab)\na\n""
""\t(escaped tab)\n a\n""
$ mruby examples.rb
""\t\n a\n""
""\t(hard tab)\n a\n""
""\t(escaped tab)\n a\n""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5249,2020-12-29T02:23:58Z,2020-12-29T04:51:42Z,2020-12-29T18:47:09Z,MERGED,True,1089,1102,4,https://github.com/SeekingMeaning,Fix mixed indentation and escaped tabs in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5249,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5249#issuecomment-752013062,"This fixes most of the issues @shuujii mentioned in #5247
# examples.rb
p <<~EOS
\t
 a
EOS
p <<~EOS
	(hard tab)
 a
EOS
p <<~EOS
\t(escaped tab)
 a
EOS
$ ruby examples.rb
""\t\n a\n""
""\t(hard tab)\na\n""
""\t(escaped tab)\n a\n""
$ mruby examples.rb
""\t\n a\n""
""\t(hard tab)\n a\n""
""\t(escaped tab)\n a\n""","$ ruby examples.rb
""\t\n a\n""
""\t(hard tab)\na\n""
""\t(escaped tab)\n a\n""

$ mruby examples.rb
""\t\n a\n""
""\t(hard tab)\n a\n""
""\t(escaped tab)\n a\n""


The result for ""hard tab"" is different, is it intentional?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5249,2020-12-29T02:23:58Z,2020-12-29T04:51:42Z,2020-12-29T18:47:09Z,MERGED,True,1089,1102,4,https://github.com/SeekingMeaning,Fix mixed indentation and escaped tabs in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5249,https://github.com/SeekingMeaning,3,https://github.com/mruby/mruby/pull/5249#issuecomment-752050952,"This fixes most of the issues @shuujii mentioned in #5247
# examples.rb
p <<~EOS
\t
 a
EOS
p <<~EOS
	(hard tab)
 a
EOS
p <<~EOS
\t(escaped tab)
 a
EOS
$ ruby examples.rb
""\t\n a\n""
""\t(hard tab)\na\n""
""\t(escaped tab)\n a\n""
$ mruby examples.rb
""\t\n a\n""
""\t(hard tab)\n a\n""
""\t(escaped tab)\n a\n""","Yes, it is intentional. I'm not sure why Ruby deletes the space (similar to #5247 (comment))
I guess Ruby doesn't like tabs and spaces to be mixed",True,{}
mruby/mruby,https://github.com/mruby/mruby,5249,2020-12-29T02:23:58Z,2020-12-29T04:51:42Z,2020-12-29T18:47:09Z,MERGED,True,1089,1102,4,https://github.com/SeekingMeaning,Fix mixed indentation and escaped tabs in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5249,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5249#issuecomment-752057457,"This fixes most of the issues @shuujii mentioned in #5247
# examples.rb
p <<~EOS
\t
 a
EOS
p <<~EOS
	(hard tab)
 a
EOS
p <<~EOS
\t(escaped tab)
 a
EOS
$ ruby examples.rb
""\t\n a\n""
""\t(hard tab)\na\n""
""\t(escaped tab)\n a\n""
$ mruby examples.rb
""\t\n a\n""
""\t(hard tab)\n a\n""
""\t(escaped tab)\n a\n""","The following result seems to be different from Ruby.
# example.rb
p <<~EOS
 ( )
  a
EOS
$ ruby example.rb
""( )\n a\n""
$ mruby example.rb
"" )\na\n""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5249,2020-12-29T02:23:58Z,2020-12-29T04:51:42Z,2020-12-29T18:47:09Z,MERGED,True,1089,1102,4,https://github.com/SeekingMeaning,Fix mixed indentation and escaped tabs in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5249,https://github.com/SeekingMeaning,5,https://github.com/mruby/mruby/pull/5249#issuecomment-752201499,"This fixes most of the issues @shuujii mentioned in #5247
# examples.rb
p <<~EOS
\t
 a
EOS
p <<~EOS
	(hard tab)
 a
EOS
p <<~EOS
\t(escaped tab)
 a
EOS
$ ruby examples.rb
""\t\n a\n""
""\t(hard tab)\na\n""
""\t(escaped tab)\n a\n""
$ mruby examples.rb
""\t\n a\n""
""\t(hard tab)\n a\n""
""\t(escaped tab)\n a\n""","Oops, I forgot to check if spaces are at the beginning of the line",True,{}
mruby/mruby,https://github.com/mruby/mruby,5250,2020-12-29T10:21:23Z,2020-12-29T13:44:44Z,2021-01-09T03:06:15Z,MERGED,True,1,1,1,https://github.com/shuujii,Refine error message from `mrb_get_arg1`,1,[],https://github.com/mruby/mruby/pull/5250,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5250,"Before this patch:
$ bin/mruby -e '{}.key?'
trace (most recent call last):
-e:1: wrong number of arguments (ArgumentError)
After this patch:
$ bin/mruby -e '{}.key?'
trace (most recent call last):
-e:1: wrong number of arguments (given 0, expected 1) (ArgumentError)","Before this patch:
$ bin/mruby -e '{}.key?'
trace (most recent call last):
-e:1: wrong number of arguments (ArgumentError)
After this patch:
$ bin/mruby -e '{}.key?'
trace (most recent call last):
-e:1: wrong number of arguments (given 0, expected 1) (ArgumentError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5251,2020-12-29T20:10:05Z,2021-01-02T11:28:14Z,2021-01-02T11:28:14Z,MERGED,True,65,41,4,https://github.com/SeekingMeaning,Fix regression for squiggly heredocs,2,[],https://github.com/mruby/mruby/pull/5251,https://github.com/SeekingMeaning,1,https://github.com/mruby/mruby/pull/5251,"This fixes the issue @shuujii mentioned in #5249. (I forgot to check if spaces are at the beginning of the line before counting them as part of the indent.) Also, this PR includes a change to treat tabs as 8 spaces. (Thanks @shuujii! I wouldn't have noticed these things without your reviews!)
# example.rb
p <<~EOS
 ( )
  a
EOS
p <<~EOS
	(hard tab)
      (6 spaces)
EOS
p <<~EOS
	(hard tab)
        (8 spaces)
EOS
p <<~EOS
	(hard tab)
          (10 spaces)
EOS
$ ruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""
$ mruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""","This fixes the issue @shuujii mentioned in #5249. (I forgot to check if spaces are at the beginning of the line before counting them as part of the indent.) Also, this PR includes a change to treat tabs as 8 spaces. (Thanks @shuujii! I wouldn't have noticed these things without your reviews!)
# example.rb
p <<~EOS
 ( )
  a
EOS
p <<~EOS
	(hard tab)
      (6 spaces)
EOS
p <<~EOS
	(hard tab)
        (8 spaces)
EOS
p <<~EOS
	(hard tab)
          (10 spaces)
EOS
$ ruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""
$ mruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5251,2020-12-29T20:10:05Z,2021-01-02T11:28:14Z,2021-01-02T11:28:14Z,MERGED,True,65,41,4,https://github.com/SeekingMeaning,Fix regression for squiggly heredocs,2,[],https://github.com/mruby/mruby/pull/5251,https://github.com/SeekingMeaning,2,https://github.com/mruby/mruby/pull/5251#issuecomment-752227780,"This fixes the issue @shuujii mentioned in #5249. (I forgot to check if spaces are at the beginning of the line before counting them as part of the indent.) Also, this PR includes a change to treat tabs as 8 spaces. (Thanks @shuujii! I wouldn't have noticed these things without your reviews!)
# example.rb
p <<~EOS
 ( )
  a
EOS
p <<~EOS
	(hard tab)
      (6 spaces)
EOS
p <<~EOS
	(hard tab)
        (8 spaces)
EOS
p <<~EOS
	(hard tab)
          (10 spaces)
EOS
$ ruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""
$ mruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""","So I tested this:
p <<~EOS
	(hard tab)
          (10 spaces)
EOS
It appears my first example with mixed tabs and spaces (#5247 (comment)) didn't have enough spaces to reveal that hard tabs are treated as 8-space indents
(Note: this PR doesn't address this)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5251,2020-12-29T20:10:05Z,2021-01-02T11:28:14Z,2021-01-02T11:28:14Z,MERGED,True,65,41,4,https://github.com/SeekingMeaning,Fix regression for squiggly heredocs,2,[],https://github.com/mruby/mruby/pull/5251,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5251#issuecomment-752905439,"This fixes the issue @shuujii mentioned in #5249. (I forgot to check if spaces are at the beginning of the line before counting them as part of the indent.) Also, this PR includes a change to treat tabs as 8 spaces. (Thanks @shuujii! I wouldn't have noticed these things without your reviews!)
# example.rb
p <<~EOS
 ( )
  a
EOS
p <<~EOS
	(hard tab)
      (6 spaces)
EOS
p <<~EOS
	(hard tab)
        (8 spaces)
EOS
p <<~EOS
	(hard tab)
          (10 spaces)
EOS
$ ruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""
$ mruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""","If the end of the line is escaped, the result seems to be different for CRuby and mruby (both in the current master and this PR).


test code (test.rb)
p <<~""TEXT1""
  a \
  b
TEXT1

p <<~""TEXT2""
  a \
b
TEXT2


ruby-3.0.0 (ruby 3.0.0p0 (2020-12-25 revision 95aff21468) [amd64-freebsd12])
% ruby30 test.rb
""a b\n""
""  a b\n""


this PR version (commit 538e42f)
% bin/mruby test2.rb
""a   b\n""
""a b\n""


current mruby HEAD (commit aabfe31)
% bin/mruby test.rb
"" b\n""
"" b\n""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5251,2020-12-29T20:10:05Z,2021-01-02T11:28:14Z,2021-01-02T11:28:14Z,MERGED,True,65,41,4,https://github.com/SeekingMeaning,Fix regression for squiggly heredocs,2,[],https://github.com/mruby/mruby/pull/5251,https://github.com/SeekingMeaning,4,https://github.com/mruby/mruby/pull/5251#issuecomment-752994980,"This fixes the issue @shuujii mentioned in #5249. (I forgot to check if spaces are at the beginning of the line before counting them as part of the indent.) Also, this PR includes a change to treat tabs as 8 spaces. (Thanks @shuujii! I wouldn't have noticed these things without your reviews!)
# example.rb
p <<~EOS
 ( )
  a
EOS
p <<~EOS
	(hard tab)
      (6 spaces)
EOS
p <<~EOS
	(hard tab)
        (8 spaces)
EOS
p <<~EOS
	(hard tab)
          (10 spaces)
EOS
$ ruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""
$ mruby example.rb
""( )\n a\n""
""\t(hard tab)\n(6 spaces)\n""
""(hard tab)\n(8 spaces)\n""
""(hard tab)\n  (10 spaces)\n""",Nice catch! I’ll try to look into that soon,True,{}
mruby/mruby,https://github.com/mruby/mruby,5252,2020-12-31T13:36:44Z,2020-12-31T15:24:13Z,2021-01-10T04:38:34Z,MERGED,True,0,10,1,https://github.com/dearblue,Removed unusable `GC.test`,1,[],https://github.com/mruby/mruby/pull/5252,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5252,The substance of the method was removed in commit 15ceb35.,The substance of the method was removed in commit 15ceb35.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5252,2020-12-31T13:36:44Z,2020-12-31T15:24:13Z,2021-01-10T04:38:34Z,MERGED,True,0,10,1,https://github.com/dearblue,Removed unusable `GC.test`,1,[],https://github.com/mruby/mruby/pull/5252,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5252#issuecomment-752961207,The substance of the method was removed in commit 15ceb35.,"Maybe this can also be deleted?

  
    
      mruby/src/gc.c
    
    
        Lines 185 to 189
      in
      aabfe31
    
  
  
    

        
          
           #ifdef GC_DEBUG 
        

        
          
           #define DEBUG(x) (x) 
        

        
          
           #else 
        

        
          
           #define DEBUG(x) 
        

        
          
           #endif 
        
    
  



  
    
      mruby/src/gc.c
    
    
         Line 795
      in
      aabfe31
    
  
  
    

        
          
           DEBUG(fprintf(stderr, ""obj_free(%p,tt=%d)\n"",obj,obj->tt));",True,{}
mruby/mruby,https://github.com/mruby/mruby,5253,2021-01-02T10:26:13Z,2021-01-02T10:45:09Z,2021-01-09T03:06:15Z,MERGED,True,23,6,2,https://github.com/shuujii,"Refine ""wrong number of arguments"" message in `mrb_get_args`",1,[],https://github.com/mruby/mruby/pull/5253,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5253,"Before this patch:
__send__         #=> wrong number of arguments
{}.default(1,2)  #=> wrong number of arguments
After this patch:
__send__         #=> wrong number of arguments (given 0, expected 1+)
{}.default(1,2)  #=> wrong number of arguments (given 2, expected 0..1)","Before this patch:
__send__         #=> wrong number of arguments
{}.default(1,2)  #=> wrong number of arguments
After this patch:
__send__         #=> wrong number of arguments (given 0, expected 1+)
{}.default(1,2)  #=> wrong number of arguments (given 2, expected 0..1)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5254,2021-01-03T08:59:52Z,2021-01-03T11:25:34Z,2021-01-03T11:25:35Z,MERGED,True,1852,1326,3,https://github.com/SeekingMeaning,Fix for escaped newlines in squiggly heredocs,1,[],https://github.com/mruby/mruby/pull/5254,https://github.com/SeekingMeaning,1,https://github.com/mruby/mruby/pull/5254,"This fixes the issue @dearblue mentioned in #5251
# test.rb
p <<~TEXT1
  a \
  b
TEXT1

p <<~TEXT2
  a \
b
TEXT2
$ ruby test.rb
""a b\n""
""  a b\n""
Before:
$ bin/mruby test.rb
""a   b\n""
""a b\n""
After:
$ bin/mruby test.rb
""a b\n""
""  a b\n""","This fixes the issue @dearblue mentioned in #5251
# test.rb
p <<~TEXT1
  a \
  b
TEXT1

p <<~TEXT2
  a \
b
TEXT2
$ ruby test.rb
""a b\n""
""  a b\n""
Before:
$ bin/mruby test.rb
""a   b\n""
""a b\n""
After:
$ bin/mruby test.rb
""a b\n""
""  a b\n""",True,{'THUMBS_UP': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,5255,2021-01-03T09:52:03Z,2021-01-03T11:28:01Z,2021-01-09T03:06:12Z,MERGED,True,17,7,1,https://github.com/shuujii,Avoid 64-bit operations in `src/hash.c`; close #5201,1,[],https://github.com/mruby/mruby/pull/5255,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5255,The idea of using size_t in ea_next_capa_for is by @dearblue.,The idea of using size_t in ea_next_capa_for is by @dearblue.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5255,2021-01-03T09:52:03Z,2021-01-03T11:28:01Z,2021-01-09T03:06:12Z,MERGED,True,17,7,1,https://github.com/shuujii,Avoid 64-bit operations in `src/hash.c`; close #5201,1,[],https://github.com/mruby/mruby/pull/5255,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5255#issuecomment-753602763,The idea of using size_t in ea_next_capa_for is by @dearblue.,LGTM,True,{}
mruby/mruby,https://github.com/mruby/mruby,5255,2021-01-03T09:52:03Z,2021-01-03T11:28:01Z,2021-01-09T03:06:12Z,MERGED,True,17,7,1,https://github.com/shuujii,Avoid 64-bit operations in `src/hash.c`; close #5201,1,[],https://github.com/mruby/mruby/pull/5255,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5255#issuecomment-753602937,The idea of using size_t in ea_next_capa_for is by @dearblue.,@yamori813 This PR seems to fix #5201. Can you confirm?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5256,2021-01-03T10:52:28Z,2021-01-03T11:25:03Z,2021-01-03T11:25:12Z,MERGED,True,1,1,1,https://github.com/katsuyoshi,replace ; to : of OPT_SETGV in codedump.c,1,[],https://github.com/mruby/mruby/pull/5256,https://github.com/katsuyoshi,1,https://github.com/mruby/mruby/pull/5256,Maybe it's a typo.,Maybe it's a typo.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5256,2021-01-03T10:52:28Z,2021-01-03T11:25:03Z,2021-01-03T11:25:12Z,MERGED,True,1,1,1,https://github.com/katsuyoshi,replace ; to : of OPT_SETGV in codedump.c,1,[],https://github.com/mruby/mruby/pull/5256,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5256#issuecomment-753602491,Maybe it's a typo.,Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5258,2021-01-06T10:14:31Z,2021-01-06T10:50:04Z,2021-01-09T03:06:13Z,MERGED,True,3,4,1,https://github.com/shuujii,Fix build with `enable_cxx_exception`,1,[],https://github.com/mruby/mruby/pull/5258,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5258,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5259,2021-01-06T14:49:26Z,2021-01-07T01:22:10Z,2021-01-09T03:06:12Z,MERGED,True,38,40,1,https://github.com/shuujii,Consider the case a local variable name does not become a named presym,1,[],https://github.com/mruby/mruby/pull/5259,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5259,"Non-ASCII characters are allowed to local variable names, so they are not
always named presym.","Non-ASCII characters are allowed to local variable names, so they are not
always named presym.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5260,2021-01-07T00:11:35Z,2021-01-07T02:45:25Z,2021-01-07T02:45:25Z,MERGED,True,1712,1336,2,https://github.com/SeekingMeaning,Fix line continuations with mixed indentation in squiggly heredocs,2,[],https://github.com/mruby/mruby/pull/5260,https://github.com/SeekingMeaning,1,https://github.com/mruby/mruby/pull/5260,"# test.rb
p <<~EOS
 (space)\
	(hard tab)
EOS

p <<~EOS
	(hard tab)\
\t(escaped tab)
EOS
ruby:
$ ruby test.rb
""(space)\t(hard tab)\n""
""\t(hard tab)\t(escaped tab)\n""
mruby before:
$ mruby test.rb
"" (space)\t(hard tab)\n""
""(hard tab)(escaped tab)\n""
mruby after:
$ mruby test.rb
""(space)\t(hard tab)\n""
""\t(hard tab)\t(escaped tab)\n""","# test.rb
p <<~EOS
 (space)\
	(hard tab)
EOS

p <<~EOS
	(hard tab)\
\t(escaped tab)
EOS
ruby:
$ ruby test.rb
""(space)\t(hard tab)\n""
""\t(hard tab)\t(escaped tab)\n""
mruby before:
$ mruby test.rb
"" (space)\t(hard tab)\n""
""(hard tab)(escaped tab)\n""
mruby after:
$ mruby test.rb
""(space)\t(hard tab)\n""
""\t(hard tab)\t(escaped tab)\n""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5262,2021-01-07T07:49:20Z,2021-01-07T08:12:07Z,2021-01-09T03:06:11Z,MERGED,True,7,2,2,https://github.com/shuujii,Add scan target functions for presym,1,[],https://github.com/mruby/mruby/pull/5262,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5262,"Add the following functions:

mrb_intern_cstr
mrb_define_singleton_method
mrb_define_class_under
mrb_define_module_under","Add the following functions:

mrb_intern_cstr
mrb_define_singleton_method
mrb_define_class_under
mrb_define_module_under",True,{}
mruby/mruby,https://github.com/mruby/mruby,5263,2021-01-07T09:39:42Z,2021-01-07T11:22:35Z,2021-01-09T03:06:16Z,MERGED,True,133,115,2,https://github.com/shuujii,Use namespaces according to Rake conventions,1,[],https://github.com/mruby/mruby/pull/5263,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5263,"Change the Rake task to one that uses namespaces as follows (previous task
names can also be used for compatibility).



Previous Task
New Task




api_doc
doc:api


capi_doc
doc:capi


clean_doc
doc:clean


clean_api_doc
doc:clean:api


clean_capi_doc
doc:clean:capi


view_api
doc:view:api


view_capi
doc:view:capi


gitlab_config
gitlab:config


gitlab_dockers
gitlab:dockers","Change the Rake task to one that uses namespaces as follows (previous task
names can also be used for compatibility).



Previous Task
New Task




api_doc
doc:api


capi_doc
doc:capi


clean_doc
doc:clean


clean_api_doc
doc:clean:api


clean_capi_doc
doc:clean:capi


view_api
doc:view:api


view_capi
doc:view:capi


gitlab_config
gitlab:config


gitlab_dockers
gitlab:dockers",True,{}
mruby/mruby,https://github.com/mruby/mruby,5264,2021-01-07T10:59:38Z,2021-01-07T11:21:14Z,2021-01-09T03:06:14Z,MERGED,True,11,13,5,https://github.com/shuujii,Immediately flush output to stdout/stderr so that logs are not mixed on CI,1,[],https://github.com/mruby/mruby/pull/5264,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5264,Set in build configuration to enable on all CI platforms.,Set in build configuration to enable on all CI platforms.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5265,2021-01-08T06:34:20Z,2021-01-08T14:10:50Z,2021-01-09T03:06:14Z,MERGED,True,1,1,1,https://github.com/shuujii,Reapply 116e128b because it is back at 456878ba,1,[],https://github.com/mruby/mruby/pull/5265,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5265,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5266,2021-01-08T07:15:13Z,2021-01-08T07:37:51Z,2021-01-09T03:06:16Z,MERGED,True,2,2,2,https://github.com/shuujii,Stop immediate flush to stdout/stderr when running in parallel on CI,1,[],https://github.com/mruby/mruby/pull/5266,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5266,"During parallel execution (build), it is sometimes flushed before line
breaks, and lines are concatenated.","During parallel execution (build), it is sometimes flushed before line
breaks, and lines are concatenated.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5267,2021-01-08T11:51:51Z,2021-01-08T12:14:20Z,2021-01-09T03:06:13Z,MERGED,True,138,106,10,https://github.com/shuujii,Delay test code build until `rake test`,1,[],https://github.com/mruby/mruby/pull/5267,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5267,"With this change, the test code will not be built unless rake test is
run, so there will be almost no side effects even if enable_test is
always set (but, gems specified by add_test_dependency are included
in libmruby.a).
Also added are test: build task, which only builds the test code
(including the main code), and test: run task, which only runs tests
independent of build. Therefore, the idiom for building in parallel and
not running tests in parallel is rake -m test:build && rake test:run.","With this change, the test code will not be built unless rake test is
run, so there will be almost no side effects even if enable_test is
always set (but, gems specified by add_test_dependency are included
in libmruby.a).
Also added are test: build task, which only builds the test code
(including the main code), and test: run task, which only runs tests
independent of build. Therefore, the idiom for building in parallel and
not running tests in parallel is rake -m test:build && rake test:run.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5270,2021-01-09T06:01:38Z,2021-01-09T07:34:12Z,2021-02-19T14:32:10Z,MERGED,True,4,2,2,https://github.com/shuujii,Remove unnecessary `#include` in generated files,1,[],https://github.com/mruby/mruby/pull/5270,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5270,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5271,2021-01-10T01:31:08Z,2021-01-10T13:15:52Z,2021-02-19T14:32:04Z,MERGED,True,9,7,3,https://github.com/shuujii,Fix build error in cross-build with presym,1,[],https://github.com/mruby/mruby/pull/5271,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5271,"Fix the following issues.

#5220 (comment)
#5220 (comment)","Fix the following issues.

#5220 (comment)
#5220 (comment)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5272,2021-01-10T05:02:34Z,2021-01-12T13:21:06Z,2021-01-17T14:45:42Z,MERGED,True,224,187,17,https://github.com/dearblue,Reorganize mrb_callinfo,5,[],https://github.com/mruby/mruby/pull/5272,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5272,"Overview

mrb_callinfo::stack will now indicate the current call level.
Previously, stackent saved the previous stack.
mrb_callinfo::pc will now indicate the current call level.
Previously, this saved the previous one.
This change reverts commit a0c1e07.
 mrb_callinfo::argc and mrb_callinfo::acc are represented by int16_t.
Represents mrb_callinfo::env and mrb_callinfo::target_class with union.","Overview

mrb_callinfo::stack will now indicate the current call level.
Previously, stackent saved the previous stack.
mrb_callinfo::pc will now indicate the current call level.
Previously, this saved the previous one.
This change reverts commit a0c1e07.
 mrb_callinfo::argc and mrb_callinfo::acc are represented by int16_t.
Represents mrb_callinfo::env and mrb_callinfo::target_class with union.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5272,2021-01-10T05:02:34Z,2021-01-12T13:21:06Z,2021-01-17T14:45:42Z,MERGED,True,224,187,17,https://github.com/dearblue,Reorganize mrb_callinfo,5,[],https://github.com/mruby/mruby/pull/5272,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5272#issuecomment-761819737,"Overview

mrb_callinfo::stack will now indicate the current call level.
Previously, stackent saved the previous stack.
mrb_callinfo::pc will now indicate the current call level.
Previously, this saved the previous one.
This change reverts commit a0c1e07.
 mrb_callinfo::argc and mrb_callinfo::acc are represented by int16_t.
Represents mrb_callinfo::env and mrb_callinfo::target_class with union.","It seems that mruby-bin-debugger can't be built.
/mruby/mrbgems/mruby-bin-debugger/tools/mrdb/mrdb.c:529:23: error: no member named 'target_class' in 'mrb_callinfo'
      c = mrb->c->ci->target_class->super;
          ~~~~~~~~~~  ^
1 error generated.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5272,2021-01-10T05:02:34Z,2021-01-12T13:21:06Z,2021-01-17T14:45:42Z,MERGED,True,224,187,17,https://github.com/dearblue,Reorganize mrb_callinfo,5,[],https://github.com/mruby/mruby/pull/5272,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5272#issuecomment-761823768,"Overview

mrb_callinfo::stack will now indicate the current call level.
Previously, stackent saved the previous stack.
mrb_callinfo::pc will now indicate the current call level.
Previously, this saved the previous one.
This change reverts commit a0c1e07.
 mrb_callinfo::argc and mrb_callinfo::acc are represented by int16_t.
Represents mrb_callinfo::env and mrb_callinfo::target_class with union.",Thank you for your report. I will fix it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5273,2021-01-10T05:40:33Z,2021-01-14T14:47:26Z,2021-01-16T06:55:43Z,MERGED,True,3,0,1,https://github.com/dearblue,Capture the return value of `Fiber.yield` via C; ref #5261,1,[],https://github.com/mruby/mruby/pull/5273,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5273,"Please note that this pull request contains #5272.
The argument of the second mrb_fiber_resume() is not the return value of Fiber.yield, so it will be corrected.
I will post the result of trying with a slightly modified code of #5261.
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/string.h>
#include <stdio.h>

mrb_state* mrb;

void p(mrb_value value) {
    printf(""--> %s\n"", mrb_str_to_cstr(mrb, mrb_inspect(mrb, value)));
}

int main() {
    mrb = mrb_open();

    mrb_value fiber_class = mrb_obj_value(mrb_class_get(mrb, ""Fiber""));

    mrb_value proc = mrb_load_string(mrb,
        ""proc do |a| Fiber.yield(a + 1); end"");
                  // ^~~~~~~~~~~~~~~~~~ ❓❓❓ What is this value?

    mrb_sym new = mrb_intern_cstr(mrb, ""new"");
    mrb_value fiber = mrb_funcall_with_block(mrb, fiber_class, new, 0, NULL, proc);

    mrb_value start_arg = mrb_fixnum_value(123);
    p(mrb_fiber_resume(mrb, fiber, 1, &start_arg));

    // ☕ ☕ ☕ Modify here ☕ ☕ ☕
    mrb_value second_arg = mrb_float_value(mrb, 1.41421356);
    p(mrb_fiber_resume(mrb, fiber, 1, &second_arg));
    // => 1.41421356 (expect)
    // => Fiber (when reported by #5261)
    // => nil (after commit a0c1e075e)
    // => 1.41421356 (patched this PR)

    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
}","Please note that this pull request contains #5272.
The argument of the second mrb_fiber_resume() is not the return value of Fiber.yield, so it will be corrected.
I will post the result of trying with a slightly modified code of #5261.
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/string.h>
#include <stdio.h>

mrb_state* mrb;

void p(mrb_value value) {
    printf(""--> %s\n"", mrb_str_to_cstr(mrb, mrb_inspect(mrb, value)));
}

int main() {
    mrb = mrb_open();

    mrb_value fiber_class = mrb_obj_value(mrb_class_get(mrb, ""Fiber""));

    mrb_value proc = mrb_load_string(mrb,
        ""proc do |a| Fiber.yield(a + 1); end"");
                  // ^~~~~~~~~~~~~~~~~~ ❓❓❓ What is this value?

    mrb_sym new = mrb_intern_cstr(mrb, ""new"");
    mrb_value fiber = mrb_funcall_with_block(mrb, fiber_class, new, 0, NULL, proc);

    mrb_value start_arg = mrb_fixnum_value(123);
    p(mrb_fiber_resume(mrb, fiber, 1, &start_arg));

    // ☕ ☕ ☕ Modify here ☕ ☕ ☕
    mrb_value second_arg = mrb_float_value(mrb, 1.41421356);
    p(mrb_fiber_resume(mrb, fiber, 1, &second_arg));
    // => 1.41421356 (expect)
    // => Fiber (when reported by #5261)
    // => nil (after commit a0c1e075e)
    // => 1.41421356 (patched this PR)

    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
}",True,{}
mruby/mruby,https://github.com/mruby/mruby,5273,2021-01-10T05:40:33Z,2021-01-14T14:47:26Z,2021-01-16T06:55:43Z,MERGED,True,3,0,1,https://github.com/dearblue,Capture the return value of `Fiber.yield` via C; ref #5261,1,[],https://github.com/mruby/mruby/pull/5273,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5273#issuecomment-757918571,"Please note that this pull request contains #5272.
The argument of the second mrb_fiber_resume() is not the return value of Fiber.yield, so it will be corrected.
I will post the result of trying with a slightly modified code of #5261.
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/string.h>
#include <stdio.h>

mrb_state* mrb;

void p(mrb_value value) {
    printf(""--> %s\n"", mrb_str_to_cstr(mrb, mrb_inspect(mrb, value)));
}

int main() {
    mrb = mrb_open();

    mrb_value fiber_class = mrb_obj_value(mrb_class_get(mrb, ""Fiber""));

    mrb_value proc = mrb_load_string(mrb,
        ""proc do |a| Fiber.yield(a + 1); end"");
                  // ^~~~~~~~~~~~~~~~~~ ❓❓❓ What is this value?

    mrb_sym new = mrb_intern_cstr(mrb, ""new"");
    mrb_value fiber = mrb_funcall_with_block(mrb, fiber_class, new, 0, NULL, proc);

    mrb_value start_arg = mrb_fixnum_value(123);
    p(mrb_fiber_resume(mrb, fiber, 1, &start_arg));

    // ☕ ☕ ☕ Modify here ☕ ☕ ☕
    mrb_value second_arg = mrb_float_value(mrb, 1.41421356);
    p(mrb_fiber_resume(mrb, fiber, 1, &second_arg));
    // => 1.41421356 (expect)
    // => Fiber (when reported by #5261)
    // => nil (after commit a0c1e075e)
    // => 1.41421356 (patched this PR)

    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
}",I think this PR is mixed with #5272. Each PR should be independent as much as possible.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5273,2021-01-10T05:40:33Z,2021-01-14T14:47:26Z,2021-01-16T06:55:43Z,MERGED,True,3,0,1,https://github.com/dearblue,Capture the return value of `Fiber.yield` via C; ref #5261,1,[],https://github.com/mruby/mruby/pull/5273,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5273#issuecomment-757936007,"Please note that this pull request contains #5272.
The argument of the second mrb_fiber_resume() is not the return value of Fiber.yield, so it will be corrected.
I will post the result of trying with a slightly modified code of #5261.
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/string.h>
#include <stdio.h>

mrb_state* mrb;

void p(mrb_value value) {
    printf(""--> %s\n"", mrb_str_to_cstr(mrb, mrb_inspect(mrb, value)));
}

int main() {
    mrb = mrb_open();

    mrb_value fiber_class = mrb_obj_value(mrb_class_get(mrb, ""Fiber""));

    mrb_value proc = mrb_load_string(mrb,
        ""proc do |a| Fiber.yield(a + 1); end"");
                  // ^~~~~~~~~~~~~~~~~~ ❓❓❓ What is this value?

    mrb_sym new = mrb_intern_cstr(mrb, ""new"");
    mrb_value fiber = mrb_funcall_with_block(mrb, fiber_class, new, 0, NULL, proc);

    mrb_value start_arg = mrb_fixnum_value(123);
    p(mrb_fiber_resume(mrb, fiber, 1, &start_arg));

    // ☕ ☕ ☕ Modify here ☕ ☕ ☕
    mrb_value second_arg = mrb_float_value(mrb, 1.41421356);
    p(mrb_fiber_resume(mrb, fiber, 1, &second_arg));
    // => 1.41421356 (expect)
    // => Fiber (when reported by #5261)
    // => nil (after commit a0c1e075e)
    // => 1.41421356 (patched this PR)

    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
}",I will check if it can be separated from #5272.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5273,2021-01-10T05:40:33Z,2021-01-14T14:47:26Z,2021-01-16T06:55:43Z,MERGED,True,3,0,1,https://github.com/dearblue,Capture the return value of `Fiber.yield` via C; ref #5261,1,[],https://github.com/mruby/mruby/pull/5273,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5273#issuecomment-757948204,"Please note that this pull request contains #5272.
The argument of the second mrb_fiber_resume() is not the return value of Fiber.yield, so it will be corrected.
I will post the result of trying with a slightly modified code of #5261.
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/string.h>
#include <stdio.h>

mrb_state* mrb;

void p(mrb_value value) {
    printf(""--> %s\n"", mrb_str_to_cstr(mrb, mrb_inspect(mrb, value)));
}

int main() {
    mrb = mrb_open();

    mrb_value fiber_class = mrb_obj_value(mrb_class_get(mrb, ""Fiber""));

    mrb_value proc = mrb_load_string(mrb,
        ""proc do |a| Fiber.yield(a + 1); end"");
                  // ^~~~~~~~~~~~~~~~~~ ❓❓❓ What is this value?

    mrb_sym new = mrb_intern_cstr(mrb, ""new"");
    mrb_value fiber = mrb_funcall_with_block(mrb, fiber_class, new, 0, NULL, proc);

    mrb_value start_arg = mrb_fixnum_value(123);
    p(mrb_fiber_resume(mrb, fiber, 1, &start_arg));

    // ☕ ☕ ☕ Modify here ☕ ☕ ☕
    mrb_value second_arg = mrb_float_value(mrb, 1.41421356);
    p(mrb_fiber_resume(mrb, fiber, 1, &second_arg));
    // => 1.41421356 (expect)
    // => Fiber (when reported by #5261)
    // => nil (after commit a0c1e075e)
    // => 1.41421356 (patched this PR)

    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
}",I mistakenly thought that the C function was always called with CI_ACC_DIRECT.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5273,2021-01-10T05:40:33Z,2021-01-14T14:47:26Z,2021-01-16T06:55:43Z,MERGED,True,3,0,1,https://github.com/dearblue,Capture the return value of `Fiber.yield` via C; ref #5261,1,[],https://github.com/mruby/mruby/pull/5273,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/5273#issuecomment-757949396,"Please note that this pull request contains #5272.
The argument of the second mrb_fiber_resume() is not the return value of Fiber.yield, so it will be corrected.
I will post the result of trying with a slightly modified code of #5261.
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/string.h>
#include <stdio.h>

mrb_state* mrb;

void p(mrb_value value) {
    printf(""--> %s\n"", mrb_str_to_cstr(mrb, mrb_inspect(mrb, value)));
}

int main() {
    mrb = mrb_open();

    mrb_value fiber_class = mrb_obj_value(mrb_class_get(mrb, ""Fiber""));

    mrb_value proc = mrb_load_string(mrb,
        ""proc do |a| Fiber.yield(a + 1); end"");
                  // ^~~~~~~~~~~~~~~~~~ ❓❓❓ What is this value?

    mrb_sym new = mrb_intern_cstr(mrb, ""new"");
    mrb_value fiber = mrb_funcall_with_block(mrb, fiber_class, new, 0, NULL, proc);

    mrb_value start_arg = mrb_fixnum_value(123);
    p(mrb_fiber_resume(mrb, fiber, 1, &start_arg));

    // ☕ ☕ ☕ Modify here ☕ ☕ ☕
    mrb_value second_arg = mrb_float_value(mrb, 1.41421356);
    p(mrb_fiber_resume(mrb, fiber, 1, &second_arg));
    // => 1.41421356 (expect)
    // => Fiber (when reported by #5261)
    // => nil (after commit a0c1e075e)
    // => 1.41421356 (patched this PR)

    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
}",I will fix #5272 later as well.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5273,2021-01-10T05:40:33Z,2021-01-14T14:47:26Z,2021-01-16T06:55:43Z,MERGED,True,3,0,1,https://github.com/dearblue,Capture the return value of `Fiber.yield` via C; ref #5261,1,[],https://github.com/mruby/mruby/pull/5273,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/5273#issuecomment-758679329,"Please note that this pull request contains #5272.
The argument of the second mrb_fiber_resume() is not the return value of Fiber.yield, so it will be corrected.
I will post the result of trying with a slightly modified code of #5261.
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/string.h>
#include <stdio.h>

mrb_state* mrb;

void p(mrb_value value) {
    printf(""--> %s\n"", mrb_str_to_cstr(mrb, mrb_inspect(mrb, value)));
}

int main() {
    mrb = mrb_open();

    mrb_value fiber_class = mrb_obj_value(mrb_class_get(mrb, ""Fiber""));

    mrb_value proc = mrb_load_string(mrb,
        ""proc do |a| Fiber.yield(a + 1); end"");
                  // ^~~~~~~~~~~~~~~~~~ ❓❓❓ What is this value?

    mrb_sym new = mrb_intern_cstr(mrb, ""new"");
    mrb_value fiber = mrb_funcall_with_block(mrb, fiber_class, new, 0, NULL, proc);

    mrb_value start_arg = mrb_fixnum_value(123);
    p(mrb_fiber_resume(mrb, fiber, 1, &start_arg));

    // ☕ ☕ ☕ Modify here ☕ ☕ ☕
    mrb_value second_arg = mrb_float_value(mrb, 1.41421356);
    p(mrb_fiber_resume(mrb, fiber, 1, &second_arg));
    // => 1.41421356 (expect)
    // => Fiber (when reported by #5261)
    // => nil (after commit a0c1e075e)
    // => 1.41421356 (patched this PR)

    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
    p(mrb_fiber_resume(mrb, fiber, 0, NULL));
}","#5272 was merged earlier, so I fixed this. 😺",True,{}
mruby/mruby,https://github.com/mruby/mruby,5274,2021-01-10T07:59:33Z,2021-01-10T13:07:23Z,2021-02-19T14:32:06Z,MERGED,True,2,1,1,https://github.com/shuujii,Fix the condition to remove `mrbtest` when `rake clean`,1,[],https://github.com/mruby/mruby/pull/5274,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5274,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5275,2021-01-10T12:58:52Z,2021-01-10T13:13:52Z,2021-01-11T08:13:29Z,MERGED,True,82,77,2,https://github.com/dearblue,Replace `tempirep` with `RProc`,1,[],https://github.com/mruby/mruby/pull/5275,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5275,"Previously I used the RData object to avoid a memory leak in mrb_irep if src/load.c failed.
ref: #4250
commit: f1523d2
Considering that the RProc object will be created in the subsequent process, it is preferable to create the RProc object from the beginning.
Along with this, the inside of read_irep() is replaced with the processing centered on the RProc object.
The global function that returns the mrb_irep pointer is still provided for compatibility.","Previously I used the RData object to avoid a memory leak in mrb_irep if src/load.c failed.
ref: #4250
commit: f1523d2
Considering that the RProc object will be created in the subsequent process, it is preferable to create the RProc object from the beginning.
Along with this, the inside of read_irep() is replaced with the processing centered on the RProc object.
The global function that returns the mrb_irep pointer is still provided for compatibility.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5277,2021-01-11T00:43:25Z,2021-01-21T05:56:36Z,2021-02-19T14:32:01Z,MERGED,True,2230,1805,45,https://github.com/shuujii,Avoid including `presym.inc` in existing header files,1,[],https://github.com/mruby/mruby/pull/5277,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5277,"Addressed an issue where existing programs linking libmruby.a could only
be built by adding <build-dir>/include to compiler's include path.","Addressed an issue where existing programs linking libmruby.a could only
be built by adding <build-dir>/include to compiler's include path.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5277,2021-01-11T00:43:25Z,2021-01-21T05:56:36Z,2021-02-19T14:32:01Z,MERGED,True,2230,1805,45,https://github.com/shuujii,Avoid including `presym.inc` in existing header files,1,[],https://github.com/mruby/mruby/pull/5277,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5277#issuecomment-757600736,"Addressed an issue where existing programs linking libmruby.a could only
be built by adding <build-dir>/include to compiler's include path.","I think this issue has been fixed, but CIFuzz still fails randomly.
CIFuzz seems to build mruby with make clean all -j2, so clean and all run in parallel, and clean may be executed after all starts.
I don't think clean is needed in the first place, so I'll create a pull request to https://github.com/google/oss-fuzz.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5277,2021-01-11T00:43:25Z,2021-01-21T05:56:36Z,2021-02-19T14:32:01Z,MERGED,True,2230,1805,45,https://github.com/shuujii,Avoid including `presym.inc` in existing header files,1,[],https://github.com/mruby/mruby/pull/5277,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/5277#issuecomment-761822434,"Addressed an issue where existing programs linking libmruby.a could only
be built by adding <build-dir>/include to compiler's include path.",Is this way not good?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5277,2021-01-11T00:43:25Z,2021-01-21T05:56:36Z,2021-02-19T14:32:01Z,MERGED,True,2230,1805,45,https://github.com/shuujii,Avoid including `presym.inc` in existing header files,1,[],https://github.com/mruby/mruby/pull/5277,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5277#issuecomment-764531407,"Addressed an issue where existing programs linking libmruby.a could only
be built by adding <build-dir>/include to compiler's include path.","Thank you for merging. The pull request to oss-fuzz have also been merged (
google/oss-fuzz@8f99fa0).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5278,2021-01-11T02:39:32Z,2021-01-11T02:57:09Z,2021-01-11T08:13:28Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix annotations [ci skip],1,[],https://github.com/mruby/mruby/pull/5278,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5278,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5279,2021-01-11T03:51:08Z,2021-01-11T03:53:18Z,2021-02-19T14:32:11Z,MERGED,True,0,1,1,https://github.com/shuujii,Remove unneeded `mruby-test` gem in `build_config/no-float.rb` [ci skip],1,[],https://github.com/mruby/mruby/pull/5279,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5279,Use enable_test to enable the test.,Use enable_test to enable the test.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5280,2021-01-11T07:31:40Z,2021-01-11T07:34:06Z,2021-02-19T14:32:10Z,MERGED,True,1,4,1,https://github.com/shuujii,Remove unneeded check to `mrbtest` in `tasks/presym.rake`,1,[],https://github.com/mruby/mruby/pull/5280,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5280,"With the change in #5267, build.products no longer contains mrbtest when
tasks/presym.rake is loaded.","With the change in #5267, build.products no longer contains mrbtest when
tasks/presym.rake is loaded.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5281,2021-01-11T07:31:48Z,2021-01-11T07:35:43Z,2021-02-19T14:32:09Z,MERGED,True,0,7,1,https://github.com/shuujii,Remove the definition of `mrb_uint` in `numeric.h` that is no longer needed,1,[],https://github.com/mruby/mruby/pull/5281,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5281,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5282,2021-01-11T08:23:55Z,2021-01-11T11:34:39Z,2021-01-11T14:27:15Z,MERGED,True,28,23,1,https://github.com/dearblue,Create a `mruby-config` that can be run on the host by cross-building,1,[],https://github.com/mruby/mruby/pull/5282,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5282,"The output directory will be host-bin, so it will be output as <build-dir>/host-bin/mruby-config.
It's still not available for target devices.","The output directory will be host-bin, so it will be output as <build-dir>/host-bin/mruby-config.
It's still not available for target devices.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5283,2021-01-11T11:37:22Z,2021-01-11T12:17:45Z,2021-02-19T14:32:00Z,MERGED,True,1,1,1,https://github.com/shuujii,Add missing cast in `ea_next_capa_for`,1,[],https://github.com/mruby/mruby/pull/5283,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5283,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5285,2021-01-11T14:26:08Z,2021-01-11T14:49:55Z,2021-01-12T14:16:19Z,MERGED,True,11,17,1,https://github.com/dearblue,Remove functions for unimplemented methods,1,[],https://github.com/mruby/mruby/pull/5285,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5285,"Use mrb_notimplement_m() instead.
Hide the unused option_to_fd() when TARGET_OS_IPHONE is enabled.","Use mrb_notimplement_m() instead.
Hide the unused option_to_fd() when TARGET_OS_IPHONE is enabled.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5286,2021-01-11T14:26:27Z,2021-01-11T14:48:42Z,2021-01-12T14:16:18Z,MERGED,True,40,46,1,https://github.com/dearblue,Integrate the argument parsing part of `IO.popen`,1,[],https://github.com/mruby/mruby/pull/5286,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5286,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5288,2021-01-12T07:11:56Z,2021-01-12T07:29:02Z,2021-02-19T14:32:06Z,MERGED,True,8,5,1,https://github.com/shuujii,Fix that sometimes parallel build of test code fails; fix #5284,1,[],https://github.com/mruby/mruby/pull/5288,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5288,"The cause is that mrbgem.rake of mruby-test gem is loaded when test
code is requested to be built, but when mrbgem.rake is loaded,
MRuby::Gem.current is updated, which is not thread safe.
Address this by not loading mrbgem.rake in parallel.","The cause is that mrbgem.rake of mruby-test gem is loaded when test
code is requested to be built, but when mrbgem.rake is loaded,
MRuby::Gem.current is updated, which is not thread safe.
Address this by not loading mrbgem.rake in parallel.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5289,2021-01-12T12:51:30Z,2021-01-12T13:22:45Z,2021-01-12T14:16:20Z,MERGED,True,1,1,1,https://github.com/dearblue,Initialize all area of `struct sockaddr_un`,1,[],https://github.com/mruby/mruby/pull/5289,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5289,"Members of struct sockaddr_un are requesting the definitions of sun_family and sun_path.
https://pubs.opengroup.org/onlinepubs/009696699/basedefs/sys/un.h.html
But the other members are optional and environment dependent.
In fact, other members are defined in the BSD series.
from NetBSD-9.1 https://github.com/NetBSD/src/blob/da504f75982b244b2288bc9970bbc203bd77a9c1/sys/sys/un.h#L49-L53
struct  sockaddr_un {
        unsigned char   sun_len;        /* sockaddr len excluding NUL */
        sa_family_t     sun_family;     /* AF_UNIX */
        char    sun_path[104];          /* path name (gag) */
};
I found this problem through valgrind on FreeBSD.","Members of struct sockaddr_un are requesting the definitions of sun_family and sun_path.
https://pubs.opengroup.org/onlinepubs/009696699/basedefs/sys/un.h.html
But the other members are optional and environment dependent.
In fact, other members are defined in the BSD series.
from NetBSD-9.1 https://github.com/NetBSD/src/blob/da504f75982b244b2288bc9970bbc203bd77a9c1/sys/sys/un.h#L49-L53
struct  sockaddr_un {
        unsigned char   sun_len;        /* sockaddr len excluding NUL */
        sa_family_t     sun_family;     /* AF_UNIX */
        char    sun_path[104];          /* path name (gag) */
};
I found this problem through valgrind on FreeBSD.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5290,2021-01-15T07:13:51Z,2021-01-15T13:49:52Z,2021-01-18T02:05:43Z,CLOSED,False,2,2,2,https://github.com/hasumikin,Avoid syntax error when EXPR_MID appears in conditional operator,1,[],https://github.com/mruby/mruby/pull/5290,https://github.com/hasumikin,1,https://github.com/mruby/mruby/pull/5290,"Unexpected syntax error happens in a code for example,
mruby -e'true ? return : false'
-e:1:15: syntax error, unexpected tSYMBEG, expecting tLABEL_TAG or ':'

As long as I examined, it seems that the error raises when EXPR_MID
token (return, next, break and rescue) appears in the second clause of
conditional operator sentence.
true ? return : false
       ^^^^^^ here

I'm afraid my correction might be too simple to solve the problem
though, very glad if you check it.","Unexpected syntax error happens in a code for example,
mruby -e'true ? return : false'
-e:1:15: syntax error, unexpected tSYMBEG, expecting tLABEL_TAG or ':'

As long as I examined, it seems that the error raises when EXPR_MID
token (return, next, break and rescue) appears in the second clause of
conditional operator sentence.
true ? return : false
       ^^^^^^ here

I'm afraid my correction might be too simple to solve the problem
though, very glad if you check it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5290,2021-01-15T07:13:51Z,2021-01-15T13:49:52Z,2021-01-18T02:05:43Z,CLOSED,False,2,2,2,https://github.com/hasumikin,Avoid syntax error when EXPR_MID appears in conditional operator,1,[],https://github.com/mruby/mruby/pull/5290,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5290#issuecomment-760951240,"Unexpected syntax error happens in a code for example,
mruby -e'true ? return : false'
-e:1:15: syntax error, unexpected tSYMBEG, expecting tLABEL_TAG or ':'

As long as I examined, it seems that the error raises when EXPR_MID
token (return, next, break and rescue) appears in the second clause of
conditional operator sentence.
true ? return : false
       ^^^^^^ here

I'm afraid my correction might be too simple to solve the problem
though, very glad if you check it.","Thank you for the report. I fixed it in a different way to address the issue like the following:
mruby -e 'true ? return :# false
false'",True,{}
mruby/mruby,https://github.com/mruby/mruby,5290,2021-01-15T07:13:51Z,2021-01-15T13:49:52Z,2021-01-18T02:05:43Z,CLOSED,False,2,2,2,https://github.com/hasumikin,Avoid syntax error when EXPR_MID appears in conditional operator,1,[],https://github.com/mruby/mruby/pull/5290,https://github.com/hasumikin,3,https://github.com/mruby/mruby/pull/5290#issuecomment-761932954,"Unexpected syntax error happens in a code for example,
mruby -e'true ? return : false'
-e:1:15: syntax error, unexpected tSYMBEG, expecting tLABEL_TAG or ':'

As long as I examined, it seems that the error raises when EXPR_MID
token (return, next, break and rescue) appears in the second clause of
conditional operator sentence.
true ? return : false
       ^^^^^^ here

I'm afraid my correction might be too simple to solve the problem
though, very glad if you check it.","@matz I've learned one thing, thank you!!",True,{}
mruby/mruby,https://github.com/mruby/mruby,5291,2021-01-16T02:12:09Z,2021-01-16T04:56:27Z,2021-01-16T06:55:43Z,MERGED,True,1,1,1,https://github.com/dearblue,Fixed stack position of return value; ref #5272,1,[],https://github.com/mruby/mruby/pull/5291,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5291,"When I #call the ""proc"" object created by the mrb_proc_new_cfunc() function from Ruby space, the return value did not go into the correct stack position.
This can destroy the calling variable.
This issue is now caused by #5272. sorry.","When I #call the ""proc"" object created by the mrb_proc_new_cfunc() function from Ruby space, the return value did not go into the correct stack position.
This can destroy the calling variable.
This issue is now caused by #5272. sorry.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5291,2021-01-16T02:12:09Z,2021-01-16T04:56:27Z,2021-01-16T06:55:43Z,MERGED,True,1,1,1,https://github.com/dearblue,Fixed stack position of return value; ref #5272,1,[],https://github.com/mruby/mruby/pull/5291,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5291#issuecomment-761295443,"When I #call the ""proc"" object created by the mrb_proc_new_cfunc() function from Ruby space, the return value did not go into the correct stack position.
This can destroy the calling variable.
This issue is now caused by #5272. sorry.","Demonstration code
% cat opcall.c
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/variable.h>
#include <mruby/proc.h>

static mrb_value
cfunc(mrb_state *mrb, mrb_value self)
{
  return mrb_fixnum_value(99);
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();
  mrb_gv_set(mrb, mrb_intern_lit(mrb, ""$x""), mrb_obj_value(mrb_proc_new_cfunc(mrb, cfunc)));
  mrb_p(mrb, mrb_load_string(mrb, ""def vertex; x, y, z = 1, 2, 3; w = $x.call; [x, y, z, w]; end; a = 1; vertex""));
  mrb_close(mrb);
  return 0;
}

% cc `bin/mruby-config --cflags --ldflags` opcall.c `bin/mruby-config --libs` && ./a.out
[99, 2, 3, #<Proc:0x262130>]
What I expect at this time is [1, 2, 3, 99].",True,{}
mruby/mruby,https://github.com/mruby/mruby,5292,2021-01-16T07:01:45Z,2021-01-16T08:55:44Z,2021-01-28T12:19:47Z,MERGED,True,1,0,1,https://github.com/dearblue,Fix NULL pointer dereference with mruby-os-memsize and mruby-method,1,[],https://github.com/mruby/mruby/pull/5292,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5292,"If it gets an insubstantial method object with obj.method, it will raise a SIGSEGV with ObjectSpace.memsize_of(method).

% cat memsizeof.rb
class Object
  def respond_to_missing?(mid, incpriv)
    return true if mid == :xyz
    super
  end
end

m = """".method(:xyz)
p ObjectSpace.memsize_of m

% bin/mruby memsizeof.rb
zsh: segmentation fault (core dumped)  bin/mruby memsizeof.rb","If it gets an insubstantial method object with obj.method, it will raise a SIGSEGV with ObjectSpace.memsize_of(method).

% cat memsizeof.rb
class Object
  def respond_to_missing?(mid, incpriv)
    return true if mid == :xyz
    super
  end
end

m = """".method(:xyz)
p ObjectSpace.memsize_of m

% bin/mruby memsizeof.rb
zsh: segmentation fault (core dumped)  bin/mruby memsizeof.rb",True,{}
mruby/mruby,https://github.com/mruby/mruby,5293,2021-01-17T15:06:16Z,2021-01-17T15:23:14Z,2021-01-28T12:19:47Z,MERGED,True,2,1,1,https://github.com/dearblue,Fix build error for mruby-bin-debugger,1,[],https://github.com/mruby/mruby/pull/5293,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5293,"This is a missing change in #5272.
This issue was reported by @shuujii.
#5272 (comment)","This is a missing change in #5272.
This issue was reported by @shuujii.
#5272 (comment)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5294,2021-01-18T12:46:52Z,2021-01-18T14:19:48Z,2021-02-19T14:32:05Z,MERGED,True,13,9,1,https://github.com/shuujii,Fix that Hash may not contain any empty buckets,1,[],https://github.com/mruby/mruby/pull/5294,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5294,"The Hash implementation assumed that there were always empty buckets, but
sometimes there were only active or deleted buckets (no empty buckets).
Therefore, fix it so that this situation does not occur.
Example
# example.rb
class A
  attr_reader :v
  def initialize(v) @v = v end
  def ==(o) @v == o.v end
  def hash; @v end
  def to_s; ""#{self.class}[#{@v}]"" end
  alias eql? ==
  alias inspect to_s
end

keys = (0..31).map{A.new(_1)}
h = {}
(0..16).each{h[keys[_1]] = _1}
(17..31).each do
  k = keys[_1]
  h[k] = _1
  h.delete(k)
end
p h.keys
Before this patch:
$ bin/mruby example.rb
[A[0], A[1], A[2], A[3], A[4], A[5], A[6], A[7], A[8], A[9], A[10], A[11], A[12], A[13], A[14], A[15], A[16], A[30], A[31]]
After this patch:
$ bin/mruby example.rb
[A[0], A[1], A[2], A[3], A[4], A[5], A[6], A[7], A[8], A[9], A[10], A[11], A[12], A[13], A[14], A[15], A[16]]","The Hash implementation assumed that there were always empty buckets, but
sometimes there were only active or deleted buckets (no empty buckets).
Therefore, fix it so that this situation does not occur.
Example
# example.rb
class A
  attr_reader :v
  def initialize(v) @v = v end
  def ==(o) @v == o.v end
  def hash; @v end
  def to_s; ""#{self.class}[#{@v}]"" end
  alias eql? ==
  alias inspect to_s
end

keys = (0..31).map{A.new(_1)}
h = {}
(0..16).each{h[keys[_1]] = _1}
(17..31).each do
  k = keys[_1]
  h[k] = _1
  h.delete(k)
end
p h.keys
Before this patch:
$ bin/mruby example.rb
[A[0], A[1], A[2], A[3], A[4], A[5], A[6], A[7], A[8], A[9], A[10], A[11], A[12], A[13], A[14], A[15], A[16], A[30], A[31]]
After this patch:
$ bin/mruby example.rb
[A[0], A[1], A[2], A[3], A[4], A[5], A[6], A[7], A[8], A[9], A[10], A[11], A[12], A[13], A[14], A[15], A[16]]",True,{}
mruby/mruby,https://github.com/mruby/mruby,5296,2021-01-23T00:26:13Z,2021-01-23T01:20:22Z,2021-01-23T01:20:22Z,MERGED,True,1,1,1,https://github.com/yevgenko,Fix typo,1,[],https://github.com/mruby/mruby/pull/5296,https://github.com/yevgenko,1,https://github.com/mruby/mruby/pull/5296,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5297,2021-01-25T13:14:50Z,2021-01-25T13:50:29Z,2021-01-25T14:06:48Z,MERGED,True,2,2,2,https://github.com/hasumikin,Fix TYPO and checking minor version in RITE BINARY HEADER,2,[],https://github.com/mruby/mruby/pull/5297,https://github.com/hasumikin,1,https://github.com/mruby/mruby/pull/5297,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5298,2021-01-26T11:31:25Z,2021-01-27T00:25:36Z,2021-01-27T02:39:33Z,CLOSED,False,41,39,11,https://github.com/shuujii,Refactor `E_xxx_ERROR` macros; ref 2ddfd50df,1,[],https://github.com/mruby/mruby/pull/5298,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5298,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5298,2021-01-26T11:31:25Z,2021-01-27T00:25:36Z,2021-01-27T02:39:33Z,CLOSED,False,41,39,11,https://github.com/shuujii,Refactor `E_xxx_ERROR` macros; ref 2ddfd50df,1,[],https://github.com/mruby/mruby/pull/5298,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5298#issuecomment-767595580,,"Sorry at the lack of explanation. I tried to fix it for the following reasons.

MRB_E_SYM is confusing with MRB_SYM_E thus I would like to avoid it.
MRB_E_SYM is not used in the first place.

However, this PR was wrong because I misunderstood the behavior of MRB_E_SYM.

If mruby/presym.h is not included before mruby.h, MRB_SYM is not defined here, so mrb_intern_lit() version seems to be used everytime.

Indeed. I didn't realize it because it was originally the case. Should we just change it to something like #define MRB_E_SYM(sym) mrb_intern_lit (mrb, #sym) here?

The only difference between the two versions of MRB_E_SYM() is slight performance.

Yes. So at first I thought we didn't have to use MRB_SYM in E_xxx_ERROR.

So unless the source file uses MRB_SYM() in it (as described in doc/guides/symbol.md), I don't think we need to include mruby/presym.h (to avoid unnecessary recompilation).

If we use MRB_SYM we need mruby/presym.h, and if we use E_xxx_ERROR MRB_SYM is also used, so I think we can't compile without including mruby/presym.h.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5298,2021-01-26T11:31:25Z,2021-01-27T00:25:36Z,2021-01-27T02:39:33Z,CLOSED,False,41,39,11,https://github.com/shuujii,Refactor `E_xxx_ERROR` macros; ref 2ddfd50df,1,[],https://github.com/mruby/mruby/pull/5298,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5298#issuecomment-767865740,,"Shall I update this PR, or would you update by yourself (to avoid MRB_E_SYM and MRB_SYM_E confusion)?
I prefer using MRB_SYM if available.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5298,2021-01-26T11:31:25Z,2021-01-27T00:25:36Z,2021-01-27T02:39:33Z,CLOSED,False,41,39,11,https://github.com/shuujii,Refactor `E_xxx_ERROR` macros; ref 2ddfd50df,1,[],https://github.com/mruby/mruby/pull/5298,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5298#issuecomment-767919225,,I change MRB_E_SYM to MRB_ERROR_SYM and recreate the PR.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5298,2021-01-26T11:31:25Z,2021-01-27T00:25:36Z,2021-01-27T02:39:33Z,CLOSED,False,41,39,11,https://github.com/shuujii,Refactor `E_xxx_ERROR` macros; ref 2ddfd50df,1,[],https://github.com/mruby/mruby/pull/5298,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/5298#issuecomment-767961879,,"Sorry, MRB_SYM is not used if mruby/presym.h is not included, so it could be compiled. Therefor, don't add include of mruby/presym.h.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5299,2021-01-27T02:37:23Z,2021-01-27T03:02:34Z,2021-02-19T14:32:03Z,MERGED,True,20,28,2,https://github.com/shuujii,"Fix ""Use `MRB_SYM()` for error class retrieval""; ref 2ddfd50df",1,[],https://github.com/mruby/mruby/pull/5299,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5299,"The new macro (MRB_E_SYM) was not being used, so it is being used. Also
MRB_E_SYM is confusing with MRB_SYM_E, so change it to MRB_ERROR_SYM.","The new macro (MRB_E_SYM) was not being used, so it is being used. Also
MRB_E_SYM is confusing with MRB_SYM_E, so change it to MRB_ERROR_SYM.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5299,2021-01-27T02:37:23Z,2021-01-27T03:02:34Z,2021-02-19T14:32:03Z,MERGED,True,20,28,2,https://github.com/shuujii,"Fix ""Use `MRB_SYM()` for error class retrieval""; ref 2ddfd50df",1,[],https://github.com/mruby/mruby/pull/5299,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5299#issuecomment-767982581,"The new macro (MRB_E_SYM) was not being used, so it is being used. Also
MRB_E_SYM is confusing with MRB_SYM_E, so change it to MRB_ERROR_SYM.",Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5300,2021-01-27T02:59:53Z,2021-01-27T03:15:58Z,2021-02-19T14:32:02Z,MERGED,True,7,3,2,https://github.com/shuujii,Avoid 'possible loss of data' casting in binary search,1,[],https://github.com/mruby/mruby/pull/5300,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5300,"Because it may not be expected result.
example: https://wandbox.org/permlink/F5Mp7IEJ1VY3CFLp","Because it may not be expected result.
example: https://wandbox.org/permlink/F5Mp7IEJ1VY3CFLp",True,{}
mruby/mruby,https://github.com/mruby/mruby,5301,2021-01-27T03:21:24Z,2021-01-27T03:32:43Z,2021-02-19T14:32:07Z,MERGED,True,2,2,2,https://github.com/shuujii,"Fix typos in `mruby/presym/{disable,enable}.h` [ci skip]",1,[],https://github.com/mruby/mruby/pull/5301,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5301,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5302,2021-01-27T07:20:01Z,2021-01-27T09:08:59Z,2021-02-19T14:32:11Z,MERGED,True,7,7,3,https://github.com/shuujii,Rename `.i` created for presym scan to `.pi`,1,[],https://github.com/mruby/mruby/pull/5302,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5302,"This is because compiler's -save-temps=obj option creates .i with the
same name.","This is because compiler's -save-temps=obj option creates .i with the
same name.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5303,2021-01-27T12:27:49Z,2021-01-27T14:41:04Z,2021-02-19T14:32:11Z,MERGED,True,45,38,4,https://github.com/shuujii,Split `presym_table` for reduced program size,1,[],https://github.com/mruby/mruby/pull/5303,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5303,"Because a structure that is an element of presym_table has padding, split
it into individual arrays for name and length.
Result (64-bit CPU with full-core gembox)




mruby
libmruby.a




Before
1,087,444B
1,476,872B


After
1,079,340B
1,469,784B","Because a structure that is an element of presym_table has padding, split
it into individual arrays for name and length.
Result (64-bit CPU with full-core gembox)




mruby
libmruby.a




Before
1,087,444B
1,476,872B


After
1,079,340B
1,469,784B",True,{}
mruby/mruby,https://github.com/mruby/mruby,5303,2021-01-27T12:27:49Z,2021-01-27T14:41:04Z,2021-02-19T14:32:11Z,MERGED,True,45,38,4,https://github.com/shuujii,Split `presym_table` for reduced program size,1,[],https://github.com/mruby/mruby/pull/5303,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5303#issuecomment-768309423,"Because a structure that is an element of presym_table has padding, split
it into individual arrays for name and length.
Result (64-bit CPU with full-core gembox)




mruby
libmruby.a




Before
1,087,444B
1,476,872B


After
1,079,340B
1,469,784B","IMHO, macro tricks are complex, obscure, and redundant, so I'd like to avoid them if possible. Also, I think build process is about the same complexity because it just splits what is generated as presym.inc into id.h and table.h.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5303,2021-01-27T12:27:49Z,2021-01-27T14:41:04Z,2021-02-19T14:32:11Z,MERGED,True,45,38,4,https://github.com/shuujii,Split `presym_table` for reduced program size,1,[],https://github.com/mruby/mruby/pull/5303,https://github.com/shuujii,3,https://github.com/mruby/mruby/pull/5303#issuecomment-768310236,"Because a structure that is an element of presym_table has padding, split
it into individual arrays for name and length.
Result (64-bit CPU with full-core gembox)




mruby
libmruby.a




Before
1,087,444B
1,476,872B


After
1,079,340B
1,469,784B","BTW, I forgot to add static to the variables.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5303,2021-01-27T12:27:49Z,2021-01-27T14:41:04Z,2021-02-19T14:32:11Z,MERGED,True,45,38,4,https://github.com/shuujii,Split `presym_table` for reduced program size,1,[],https://github.com/mruby/mruby/pull/5303,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5303#issuecomment-768663649,"Because a structure that is an element of presym_table has padding, split
it into individual arrays for name and length.
Result (64-bit CPU with full-core gembox)




mruby
libmruby.a




Before
1,087,444B
1,476,872B


After
1,079,340B
1,469,784B",Thank you for the merge and a some fixes!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5304,2021-01-28T10:02:01Z,2021-01-28T10:57:17Z,2021-02-19T14:32:08Z,MERGED,True,6,5,4,https://github.com/shuujii,Refine `preprocess_options`; ref d95ffb036,1,[],https://github.com/mruby/mruby/pull/5304,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5304,"If we modify an option that may have been specified by users, we may
make unintended changes, so it is better not to modify it as much as
possible, IMO.","If we modify an option that may have been specified by users, we may
make unintended changes, so it is better not to modify it as much as
possible, IMO.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5305,2021-01-28T12:29:10Z,2021-01-28T13:56:27Z,2021-01-31T08:28:11Z,MERGED,True,3,1,1,https://github.com/dearblue,Check first `0` when converting symbols into strings,1,[],https://github.com/mruby/mruby/pull/5305,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5305,"This was because it caused SIGSEGV when mruby -v displayed an unnamed variable.
% bin/mruby -ve 'call { |(a, b)| }'

  ...SNIP...

irep 0x8007d0050 nregs=3 nlocals=1 pools=0 syms=1 reps=1 iseq=12
file: -e
    1 000 OP_LOADSELF   R1
    1 002 OP_BLOCK      R2      I(0:0x8007d00a0)
    1 005 OP_SENDB      R1      :call   0
    1 009 OP_RETURN     R1
    1 011 OP_STOP

irep 0x8007d00a0 nregs=6 nlocals=5 pools=0 syms=0 reps=0 iseq=29
local variable names:
zsh: segmentation fault (core dumped)  bin/mruby -ve 'call { |(a, b)| }'","This was because it caused SIGSEGV when mruby -v displayed an unnamed variable.
% bin/mruby -ve 'call { |(a, b)| }'

  ...SNIP...

irep 0x8007d0050 nregs=3 nlocals=1 pools=0 syms=1 reps=1 iseq=12
file: -e
    1 000 OP_LOADSELF   R1
    1 002 OP_BLOCK      R2      I(0:0x8007d00a0)
    1 005 OP_SENDB      R1      :call   0
    1 009 OP_RETURN     R1
    1 011 OP_STOP

irep 0x8007d00a0 nregs=6 nlocals=5 pools=0 syms=0 reps=0 iseq=29
local variable names:
zsh: segmentation fault (core dumped)  bin/mruby -ve 'call { |(a, b)| }'",True,{}
mruby/mruby,https://github.com/mruby/mruby,5306,2021-01-28T12:54:21Z,2021-01-29T14:51:27Z,2021-01-31T08:28:11Z,MERGED,True,13,33,1,https://github.com/dearblue,Fixed `String#unpack` to handle the highest range of integer values,2,[],https://github.com/mruby/mruby/pull/5306,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5306,"Previously, problems occurred when the fixnum was exceeded.


32-bit cpu mode with MRB_WORD_BOXING and MRB_INT32:
% bin/mruby -e 'p [0x7fffffff].pack(""N"").unpack(""N"")'
trace (most recent call last):
-e:1: cannot unpack to Integer: 2147483647 (RangeError)


64-bit cpu mode with MRB_WORD_BOXING and MRB_INT64:
% bin/mruby -e 'p [0x7fffffff_ffffffff].pack(""q"").unpack(""q"")'
trace (most recent call last):
-e:1: cannot unpack to Integer: 9223372036854775807 (RangeError)","Previously, problems occurred when the fixnum was exceeded.


32-bit cpu mode with MRB_WORD_BOXING and MRB_INT32:
% bin/mruby -e 'p [0x7fffffff].pack(""N"").unpack(""N"")'
trace (most recent call last):
-e:1: cannot unpack to Integer: 2147483647 (RangeError)


64-bit cpu mode with MRB_WORD_BOXING and MRB_INT64:
% bin/mruby -e 'p [0x7fffffff_ffffffff].pack(""q"").unpack(""q"")'
trace (most recent call last):
-e:1: cannot unpack to Integer: 9223372036854775807 (RangeError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5306,2021-01-28T12:54:21Z,2021-01-29T14:51:27Z,2021-01-31T08:28:11Z,MERGED,True,13,33,1,https://github.com/dearblue,Fixed `String#unpack` to handle the highest range of integer values,2,[],https://github.com/mruby/mruby/pull/5306,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5306#issuecomment-769812010,"Previously, problems occurred when the fixnum was exceeded.


32-bit cpu mode with MRB_WORD_BOXING and MRB_INT32:
% bin/mruby -e 'p [0x7fffffff].pack(""N"").unpack(""N"")'
trace (most recent call last):
-e:1: cannot unpack to Integer: 2147483647 (RangeError)


64-bit cpu mode with MRB_WORD_BOXING and MRB_INT64:
% bin/mruby -e 'p [0x7fffffff_ffffffff].pack(""q"").unpack(""q"")'
trace (most recent call last):
-e:1: cannot unpack to Integer: 9223372036854775807 (RangeError)",I corrected it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5307,2021-01-28T13:11:31Z,2021-01-28T14:01:41Z,2021-01-31T08:28:10Z,MERGED,True,1,1,1,https://github.com/dearblue,Raise SystemStackError if mruby VM stack expansion fails,1,[],https://github.com/mruby/mruby/pull/5307,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5307,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5308,2021-01-29T14:26:18Z,2021-01-30T06:43:51Z,2021-01-31T08:28:10Z,MERGED,True,1,0,1,https://github.com/dearblue,Build internal mrbc in an internal directory,1,[],https://github.com/mruby/mruby/pull/5308,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5308,"I would be glad if it was created under the host's build directory.


my_config.rb
MRuby::Build.new(""host"", ""build/to/custom/directory"") do |conf|
  conf.toolchain ""clang""
  conf.build_dir = ""build/to/another/directory""
end


current (output directory is build/host/mrbc)
% rake MRUBY_CONFIG=my_config.rb

Build summary:

================================================
      Config Name: host
 Output Directory: build/to/another/directory
================================================

================================================
      Config Name: host/mrbc
 Output Directory: build/host/mrbc
         Binaries: mrbc
    Included Gems:
             mruby-bin-mrbc - mruby compiler executable
             mruby-compiler - mruby compiler library
================================================


this PR (output directory is build/to/another/directory/mrbc)
% rake MRUBY_CONFIG=my_config.rb

Build summary:

================================================
      Config Name: host
 Output Directory: build/to/another/directory
================================================

================================================
      Config Name: host/mrbc
 Output Directory: build/to/another/directory/mrbc
         Binaries: mrbc
    Included Gems:
             mruby-bin-mrbc - mruby compiler executable
             mruby-compiler - mruby compiler library
================================================","I would be glad if it was created under the host's build directory.


my_config.rb
MRuby::Build.new(""host"", ""build/to/custom/directory"") do |conf|
  conf.toolchain ""clang""
  conf.build_dir = ""build/to/another/directory""
end


current (output directory is build/host/mrbc)
% rake MRUBY_CONFIG=my_config.rb

Build summary:

================================================
      Config Name: host
 Output Directory: build/to/another/directory
================================================

================================================
      Config Name: host/mrbc
 Output Directory: build/host/mrbc
         Binaries: mrbc
    Included Gems:
             mruby-bin-mrbc - mruby compiler executable
             mruby-compiler - mruby compiler library
================================================


this PR (output directory is build/to/another/directory/mrbc)
% rake MRUBY_CONFIG=my_config.rb

Build summary:

================================================
      Config Name: host
 Output Directory: build/to/another/directory
================================================

================================================
      Config Name: host/mrbc
 Output Directory: build/to/another/directory/mrbc
         Binaries: mrbc
    Included Gems:
             mruby-bin-mrbc - mruby compiler executable
             mruby-compiler - mruby compiler library
================================================",True,{}
mruby/mruby,https://github.com/mruby/mruby,5311,2021-01-31T06:20:23Z,2021-01-31T06:25:58Z,2021-02-19T14:32:02Z,MERGED,True,10,6,4,https://github.com/shuujii,Change `.o.d` back to `.d` because `.pi.d` is no longer created,1,[],https://github.com/mruby/mruby/pull/5311,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5311,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5312,2021-01-31T08:30:05Z,2021-01-31T10:57:32Z,2021-02-06T07:43:06Z,MERGED,True,0,13,1,https://github.com/dearblue,Remove unnecessary configuration macros; ref #5060,1,[],https://github.com/mruby/mruby/pull/5312,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5312,"The following macros will be removed:

ENSURE_STACK_INIT_SIZE
RESCUE_STACK_INIT_SIZE
MRB_ECALL_DEPTH_MAX","The following macros will be removed:

ENSURE_STACK_INIT_SIZE
RESCUE_STACK_INIT_SIZE
MRB_ECALL_DEPTH_MAX",True,{}
mruby/mruby,https://github.com/mruby/mruby,5313,2021-01-31T08:30:42Z,2021-02-01T00:36:12Z,2021-02-06T07:43:06Z,MERGED,True,2,4,1,https://github.com/dearblue,Remove unnecessary `ci0` variables; ref #5272,1,[],https://github.com/mruby/mruby/pull/5313,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5313,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5314,2021-01-31T09:18:10Z,2021-02-01T02:19:14Z,2021-02-06T07:43:06Z,MERGED,True,7,4,3,https://github.com/dearblue,Introduced `MRB_PRESYM_INIT_SYMBOLS()`,1,[],https://github.com/mruby/mruby/pull/5314,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5314,"The init_SYMBOLS() function implicitly defined in MRB_PRESYM_DEFINE_VAR_AND_INITER() requires some familiarity when trying to find it from the caller.
By introducing MRB_PRESYM_INIT_SYMBOLS(), it is possible to find directly from the identifier.","The init_SYMBOLS() function implicitly defined in MRB_PRESYM_DEFINE_VAR_AND_INITER() requires some familiarity when trying to find it from the caller.
By introducing MRB_PRESYM_INIT_SYMBOLS(), it is possible to find directly from the identifier.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5315,2021-01-31T13:58:50Z,2021-02-01T01:12:30Z,2021-02-19T14:32:12Z,MERGED,True,1,1,1,https://github.com/shuujii,Use `mrb_open_core()` instead of `mrb_open()`  in `mrbc`,1,[],https://github.com/mruby/mruby/pull/5315,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5315,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5317,2021-02-03T14:56:36Z,2021-12-01T05:42:20Z,2021-12-01T05:42:20Z,CLOSED,False,439,272,5,https://github.com/shuujii,Reduce memory usage of instance variable table,1,[],https://github.com/mruby/mruby/pull/5317,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5317,"Implementation Summary

Only keys and only values of hash table are contiguous to eliminate
structure padding.
Change upper limit of iv_tbl size to UINT16_MAX (it seems to be
acceptable in mruby because the total number of classes/modules
immediately after starting Redmine is 20,000 or less).
iv_tbl* point hash buckets directly.

Benchmark Summary
Only the results of typical situations on 64-bit Word-boxing are present
here. For more detailed information, including consideration, see below
report (although most of the body is written in Japanese).

https://shuujii.github.io/mruby-iv-benchmark

Memory Usage
Lower value is better.



iv_tbl Size
Baseline
New
Factor




4
88B
52B
0.59091x


30
536B
388B
0.72388x


100
2072B
1540B
0.74324x


200
4120B
3076B
0.74660x



Although not mentioned in the above report, the memory usage of mrbtest
(full-core gembox) is as follows in the result by Valgrind.

Baseline: 108,086 allocs, 16,313,122 bytes allocated
New:       94,273 allocs, 15,875,214 bytes allocated

Performance
Higher value is better.
mrb_obj_iv_set



iv_tbl Size
Baseline
New
Factor




4
88.63003M i/s
92.60611M i/s
1.04486x


30
32.97066M i/s
25.25095M i/s
0.76586x


100
16.33224M i/s
22.74998M i/s
1.39295x


200
5.64484M i/s
6.79949M i/s
1.20455x



mrb_obj_iv_get



iv_tbl Size
Baseline
New
Factor




4
217.58391M i/s
237.59912M i/s
1.09199x


30
139.56195M i/s
160.49470M i/s
1.14999x


100
143.09716M i/s
190.95047M i/s
1.33441x


200
89.75291M i/s
134.78717M i/s
1.50176x



Binary Size
Lower value is better.



File
Baseline
New
Factor




mruby
697,520B
697,520B
1.00000x


libmruby.a
1,046,570B
1,046,682B
0.99989x



Note
The address in struct RObject::iv may change after initialization because
iv_tbl* points directly to hash buckets. Therefore, the address cannot be
copied and shared when include/prepend. So, when sharing iv_tbl, refer to
it via the sharing source class. As a result, the following bug have also
been fixed.

An iv_tbl is not shared when a class includes or prepends an empty module","Implementation Summary

Only keys and only values of hash table are contiguous to eliminate
structure padding.
Change upper limit of iv_tbl size to UINT16_MAX (it seems to be
acceptable in mruby because the total number of classes/modules
immediately after starting Redmine is 20,000 or less).
iv_tbl* point hash buckets directly.

Benchmark Summary
Only the results of typical situations on 64-bit Word-boxing are present
here. For more detailed information, including consideration, see below
report (although most of the body is written in Japanese).

https://shuujii.github.io/mruby-iv-benchmark

Memory Usage
Lower value is better.



iv_tbl Size
Baseline
New
Factor




4
88B
52B
0.59091x


30
536B
388B
0.72388x


100
2072B
1540B
0.74324x


200
4120B
3076B
0.74660x



Although not mentioned in the above report, the memory usage of mrbtest
(full-core gembox) is as follows in the result by Valgrind.

Baseline: 108,086 allocs, 16,313,122 bytes allocated
New:       94,273 allocs, 15,875,214 bytes allocated

Performance
Higher value is better.
mrb_obj_iv_set



iv_tbl Size
Baseline
New
Factor




4
88.63003M i/s
92.60611M i/s
1.04486x


30
32.97066M i/s
25.25095M i/s
0.76586x


100
16.33224M i/s
22.74998M i/s
1.39295x


200
5.64484M i/s
6.79949M i/s
1.20455x



mrb_obj_iv_get



iv_tbl Size
Baseline
New
Factor




4
217.58391M i/s
237.59912M i/s
1.09199x


30
139.56195M i/s
160.49470M i/s
1.14999x


100
143.09716M i/s
190.95047M i/s
1.33441x


200
89.75291M i/s
134.78717M i/s
1.50176x



Binary Size
Lower value is better.



File
Baseline
New
Factor




mruby
697,520B
697,520B
1.00000x


libmruby.a
1,046,570B
1,046,682B
0.99989x



Note
The address in struct RObject::iv may change after initialization because
iv_tbl* points directly to hash buckets. Therefore, the address cannot be
copied and shared when include/prepend. So, when sharing iv_tbl, refer to
it via the sharing source class. As a result, the following bug have also
been fixed.

An iv_tbl is not shared when a class includes or prepends an empty module",True,{}
mruby/mruby,https://github.com/mruby/mruby,5317,2021-02-03T14:56:36Z,2021-12-01T05:42:20Z,2021-12-01T05:42:20Z,CLOSED,False,439,272,5,https://github.com/shuujii,Reduce memory usage of instance variable table,1,[],https://github.com/mruby/mruby/pull/5317,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5317#issuecomment-773326572,"Implementation Summary

Only keys and only values of hash table are contiguous to eliminate
structure padding.
Change upper limit of iv_tbl size to UINT16_MAX (it seems to be
acceptable in mruby because the total number of classes/modules
immediately after starting Redmine is 20,000 or less).
iv_tbl* point hash buckets directly.

Benchmark Summary
Only the results of typical situations on 64-bit Word-boxing are present
here. For more detailed information, including consideration, see below
report (although most of the body is written in Japanese).

https://shuujii.github.io/mruby-iv-benchmark

Memory Usage
Lower value is better.



iv_tbl Size
Baseline
New
Factor




4
88B
52B
0.59091x


30
536B
388B
0.72388x


100
2072B
1540B
0.74324x


200
4120B
3076B
0.74660x



Although not mentioned in the above report, the memory usage of mrbtest
(full-core gembox) is as follows in the result by Valgrind.

Baseline: 108,086 allocs, 16,313,122 bytes allocated
New:       94,273 allocs, 15,875,214 bytes allocated

Performance
Higher value is better.
mrb_obj_iv_set



iv_tbl Size
Baseline
New
Factor




4
88.63003M i/s
92.60611M i/s
1.04486x


30
32.97066M i/s
25.25095M i/s
0.76586x


100
16.33224M i/s
22.74998M i/s
1.39295x


200
5.64484M i/s
6.79949M i/s
1.20455x



mrb_obj_iv_get



iv_tbl Size
Baseline
New
Factor




4
217.58391M i/s
237.59912M i/s
1.09199x


30
139.56195M i/s
160.49470M i/s
1.14999x


100
143.09716M i/s
190.95047M i/s
1.33441x


200
89.75291M i/s
134.78717M i/s
1.50176x



Binary Size
Lower value is better.



File
Baseline
New
Factor




mruby
697,520B
697,520B
1.00000x


libmruby.a
1,046,570B
1,046,682B
0.99989x



Note
The address in struct RObject::iv may change after initialization because
iv_tbl* points directly to hash buckets. Therefore, the address cannot be
copied and shared when include/prepend. So, when sharing iv_tbl, refer to
it via the sharing source class. As a result, the following bug have also
been fixed.

An iv_tbl is not shared when a class includes or prepends an empty module",I like the idea. But I need time to review it. Changes in variable.c is a little bit complex.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5318,2021-02-04T06:08:59Z,2021-02-04T06:24:06Z,2021-02-19T14:32:04Z,MERGED,True,9,5,1,https://github.com/shuujii,Fix breakage where builds except `host` don't refer` mrbc` in `host`,1,[],https://github.com/mruby/mruby/pull/5318,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5318,"Build error occurred under the following conditions.

host build is presym enabled and unspecified mruby-bin-mrbc gem.
Build except host unspecified mruby-bin-mrbc gem and mrbcfile.

Example
Build configuration
MRuby::Build.new{|conf| conf.toolchain}
MRuby::Build.new(""host2""){|conf| conf.toolchain}
Error
rake aborted!
external mrbc or mruby-bin-mrbc gem in current('host2') or 'host' build is required
/mruby/lib/mruby/build.rb:326:in `mrbcfile'
/mruby/tasks/mrblib.rake:9:in `block in <top (required)>'
/mruby/lib/mruby/build.rb:18:in `instance_eval'
/mruby/lib/mruby/build.rb:18:in `block in each_target'
/mruby/lib/mruby/build.rb:17:in `each'
/mruby/lib/mruby/build.rb:17:in `each_target'
/mruby/tasks/mrblib.rake:1:in `<top (required)>'
/mruby/Rakefile:27:in `load'
/mruby/Rakefile:27:in `<top (required)>'","Build error occurred under the following conditions.

host build is presym enabled and unspecified mruby-bin-mrbc gem.
Build except host unspecified mruby-bin-mrbc gem and mrbcfile.

Example
Build configuration
MRuby::Build.new{|conf| conf.toolchain}
MRuby::Build.new(""host2""){|conf| conf.toolchain}
Error
rake aborted!
external mrbc or mruby-bin-mrbc gem in current('host2') or 'host' build is required
/mruby/lib/mruby/build.rb:326:in `mrbcfile'
/mruby/tasks/mrblib.rake:9:in `block in <top (required)>'
/mruby/lib/mruby/build.rb:18:in `instance_eval'
/mruby/lib/mruby/build.rb:18:in `block in each_target'
/mruby/lib/mruby/build.rb:17:in `each'
/mruby/lib/mruby/build.rb:17:in `each_target'
/mruby/tasks/mrblib.rake:1:in `<top (required)>'
/mruby/Rakefile:27:in `load'
/mruby/Rakefile:27:in `<top (required)>'",True,{}
mruby/mruby,https://github.com/mruby/mruby,5319,2021-02-04T12:33:15Z,2021-02-04T13:19:19Z,2021-02-19T14:32:02Z,MERGED,True,8,4,1,https://github.com/shuujii,Check if `.pi` build rules are defined,1,[],https://github.com/mruby/mruby/pull/5319,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5319,".pi files are created for .o files that build.products depends on, but
an error will occur if the build rule is unknown, so add a check.
I don't think this situation would normally arise. However, in
mattn/mruby-onig-regexp, when using bundled onigmo, onigmo's .o files
are added to dependency of libmruby.a in the second and subsequent builds,
and mruby does not know the build rule, so the following error had occured.
rake aborted!
Don't know how to build task '/mruby/build/host/mrbgems/mruby-onig-regexp/onigmo-6.2.0/libonig_objs/ascii.pi' (See the list of available tasks with `rake --tasks`)",".pi files are created for .o files that build.products depends on, but
an error will occur if the build rule is unknown, so add a check.
I don't think this situation would normally arise. However, in
mattn/mruby-onig-regexp, when using bundled onigmo, onigmo's .o files
are added to dependency of libmruby.a in the second and subsequent builds,
and mruby does not know the build rule, so the following error had occured.
rake aborted!
Don't know how to build task '/mruby/build/host/mrbgems/mruby-onig-regexp/onigmo-6.2.0/libonig_objs/ascii.pi' (See the list of available tasks with `rake --tasks`)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5319,2021-02-04T12:33:15Z,2021-02-04T13:19:19Z,2021-02-19T14:32:02Z,MERGED,True,8,4,1,https://github.com/shuujii,Check if `.pi` build rules are defined,1,[],https://github.com/mruby/mruby/pull/5319,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5319#issuecomment-773343464,".pi files are created for .o files that build.products depends on, but
an error will occur if the build rule is unknown, so add a check.
I don't think this situation would normally arise. However, in
mattn/mruby-onig-regexp, when using bundled onigmo, onigmo's .o files
are added to dependency of libmruby.a in the second and subsequent builds,
and mruby does not know the build rule, so the following error had occured.
rake aborted!
Don't know how to build task '/mruby/build/host/mrbgems/mruby-onig-regexp/onigmo-6.2.0/libonig_objs/ascii.pi' (See the list of available tasks with `rake --tasks`)","BTW, with this fix, rake test:integration of mitamae was successful, for the time being. The following tests failed on my box, but I don't think it is a mruby problem due to environmental, etc. problems.

Tests specifying itamae user
Tests related to HTTP redirection

The dependent gems are:



Gem
Commit




ksss/mruby-file-stat
2d3ea9b5d59d2b41133228a71c110b75cb30a31e


k0kubun/mruby-hashie
c69255a94debcd641f2087b569f5625509bde698


k0kubun/mruby-open3
b2dba93fdbd60dcff8aa20b6c56014ac89d267ad


k0kubun/mruby-shellwords
2a284d99b2121615e43d6accdb0e4cde1868a0d8


k0kubun/mruby-specinfra
69fe4306e2b004baa9dd54d4fbf9262988ce7d03


k0kubun/mruby-erb
978257e478633542c440c9248e8cdf33c5ad2074


k0kubun/mruby-tempfile
e628c8fcb4bca3f3456640a8b56d1ae98c594e24


mrbgems/mruby-yaml
0606652a6e99d902cd3101cf2d757a7c0c37a7fd


eagletmt/mruby-etc
e36e8dd99c8c62bb8390c9142c46e0294ee90dbd


ksss/mruby-at_exit
09af1ecdce7b39582023c7614f8305386ee4d789


iij/mruby-dir
89dceefa1250fb1ae868d4cb52498e9e24293cd1


gromnitsky/mruby-dir-glob
334c040a2e2c4c2689f8c3440168011f64d57ada


iij/mruby-env
056ae324451ef16a50c7887e117f0ea30921b71b


mattn/mruby-json
054699892b0d681110e7348440cddb70a3fd671e


fastly/mruby-optparse
e6397a090d1efe04d5dab57c63897f0d79bbad89


zzak/mruby-uri
b3108ae56a48990eb7b79f44aca4ec76e1e60ad8


tatsushid/mruby-schash
c8470d4be2404b4cfbb8011daebc2ca9bb1cdb80


iij/mruby-process
95da206a5764f4e80146979b8e35bd7a9afd6850


mattn/mruby-onig-regexp
76087d150d12f167e95ae10d326099b352cf3d18


ksss/mruby-singleton
73dd4bae1a47d82e49b8f85bf27f49ec4462052e


iij/mruby-errno
b441520


IceDragon200/mruby-catch-throw
2b6eaff4232b4a9473b864df53c2917080af5dcf",True,{}
mruby/mruby,https://github.com/mruby/mruby,5320,2021-02-05T09:46:44Z,2021-04-01T22:57:11Z,2021-04-01T23:02:30Z,MERGED,True,1,5,1,https://github.com/shuujii,Define `MRB_NO_GEMS` if `disable_libmruby` is specified,1,[],https://github.com/mruby/mruby/pull/5320,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5320,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5320,2021-02-05T09:46:44Z,2021-04-01T22:57:11Z,2021-04-01T23:02:30Z,MERGED,True,1,5,1,https://github.com/shuujii,Define `MRB_NO_GEMS` if `disable_libmruby` is specified,1,[],https://github.com/mruby/mruby/pull/5320,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5320#issuecomment-812222119,,"Merged, resolving conflict with #5387.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5321,2021-02-05T12:42:31Z,2021-02-05T14:08:44Z,2021-02-05T14:09:17Z,CLOSED,False,4,4,1,https://github.com/shuujii,"Fix name, super class and message for error class used in `mruby-catch`",1,[],https://github.com/mruby/mruby/pull/5321,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5321,"Example
begin
  throw 1
rescue Exception => e
  puts ""#{e.class}: #{e.message}""
  puts e.class.superclass
end
Before this patch:
$ bin/mruby example.rb
ThrowCatchJump: uncaught throw :1
Exception
After this patch (same as Ruby):
$ bin/mruby example.rb
UncaughtThrowError: uncaught throw 1
ArgumentError","Example
begin
  throw 1
rescue Exception => e
  puts ""#{e.class}: #{e.message}""
  puts e.class.superclass
end
Before this patch:
$ bin/mruby example.rb
ThrowCatchJump: uncaught throw :1
Exception
After this patch (same as Ruby):
$ bin/mruby example.rb
UncaughtThrowError: uncaught throw 1
ArgumentError",True,{}
mruby/mruby,https://github.com/mruby/mruby,5321,2021-02-05T12:42:31Z,2021-02-05T14:08:44Z,2021-02-05T14:09:17Z,CLOSED,False,4,4,1,https://github.com/shuujii,"Fix name, super class and message for error class used in `mruby-catch`",1,[],https://github.com/mruby/mruby/pull/5321,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5321#issuecomment-774034541,"Example
begin
  throw 1
rescue Exception => e
  puts ""#{e.class}: #{e.message}""
  puts e.class.superclass
end
Before this patch:
$ bin/mruby example.rb
ThrowCatchJump: uncaught throw :1
Exception
After this patch (same as Ruby):
$ bin/mruby example.rb
UncaughtThrowError: uncaught throw 1
ArgumentError","The current situation is probably due to the implementation.
CRuby throws an exception from throw only when there is no corresponding catch.
So in CRuby, if you have a corresponding catch, you won't get caught in arescue in the middle.
I think the reason mruby derives from Exception is that it doesn't get caught easily with rescue => e.
We can do the same with mruby by throwing a RBreak object, but before that, the challenge is how to register / unregister a symbol with catch and how to find it with throw.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5321,2021-02-05T12:42:31Z,2021-02-05T14:08:44Z,2021-02-05T14:09:17Z,CLOSED,False,4,4,1,https://github.com/shuujii,"Fix name, super class and message for error class used in `mruby-catch`",1,[],https://github.com/mruby/mruby/pull/5321,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5321#issuecomment-774042727,"Example
begin
  throw 1
rescue Exception => e
  puts ""#{e.class}: #{e.message}""
  puts e.class.superclass
end
Before this patch:
$ bin/mruby example.rb
ThrowCatchJump: uncaught throw :1
Exception
After this patch (same as Ruby):
$ bin/mruby example.rb
UncaughtThrowError: uncaught throw 1
ArgumentError","As you guessed, it's an implementation limitation. In CRuby, global jumps from throw cannot be caught by rescue, for example:
catch(:a) do
  begin
    throw :a
  rescue Exception => e
    p e
  end
end
does not print anything in CRuby, but mruby does. We implemented only one global jump using exceptions. So I don't think this PR is a good idea. It could cause more problems than its benefit.
Options are:

Leave this limitation as it is.
Implement different global jump system (probably using RBreak)

I am not sure whether it's worth implementing it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5321,2021-02-05T12:42:31Z,2021-02-05T14:08:44Z,2021-02-05T14:09:17Z,CLOSED,False,4,4,1,https://github.com/shuujii,"Fix name, super class and message for error class used in `mruby-catch`",1,[],https://github.com/mruby/mruby/pull/5321,https://github.com/shuujii,4,https://github.com/mruby/mruby/pull/5321#issuecomment-774054395,"Example
begin
  throw 1
rescue Exception => e
  puts ""#{e.class}: #{e.message}""
  puts e.class.superclass
end
Before this patch:
$ bin/mruby example.rb
ThrowCatchJump: uncaught throw :1
Exception
After this patch (same as Ruby):
$ bin/mruby example.rb
UncaughtThrowError: uncaught throw 1
ArgumentError","@dearblue and @matz, thank you for the explanation. I understood it well. Well then, I will close this PR and create PR that only fix the message.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5322,2021-02-05T14:15:20Z,2021-02-05T15:42:52Z,2021-02-19T14:32:05Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix message of `ThrowCatchJump` in `mruby-catch` gem,1,[],https://github.com/mruby/mruby/pull/5322,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5322,"Example
begin
  throw 1
rescue Exception => e
  puts e.message
end
Before this patch:
$ bin/mruby example.rb
uncaught throw :1
After this patch (same as Ruby):
$ bin/mruby example.rb
uncaught throw 1","Example
begin
  throw 1
rescue Exception => e
  puts e.message
end
Before this patch:
$ bin/mruby example.rb
uncaught throw :1
After this patch (same as Ruby):
$ bin/mruby example.rb
uncaught throw 1",True,{}
mruby/mruby,https://github.com/mruby/mruby,5323,2021-02-06T04:35:14Z,2021-02-06T07:57:36Z,2021-02-19T14:32:07Z,MERGED,True,84,10,2,https://github.com/shuujii,Make the argument of `Kernel#catch` optional as Ruby does,1,[],https://github.com/mruby/mruby/pull/5323,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5323,"Also implement the following changes.

Add tests
Use Object#equal? to compare tags for Ruby compatibility
Use attr_reader","Also implement the following changes.

Add tests
Use Object#equal? to compare tags for Ruby compatibility
Use attr_reader",True,{}
mruby/mruby,https://github.com/mruby/mruby,5324,2021-02-06T07:45:41Z,2021-02-06T07:58:28Z,2021-02-06T09:49:20Z,MERGED,True,2,2,1,https://github.com/dearblue,Exclude `<build-dir>/mrbc/**/*` from rake target rules,1,[],https://github.com/mruby/mruby/pull/5324,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5324,"Prevents the auto-generated mrbc target source code from being compiled under host conditions.
This is because a build error occurred when conf.enable_cxx_exception was set.","Prevents the auto-generated mrbc target source code from being compiled under host conditions.
This is because a build error occurred when conf.enable_cxx_exception was set.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5325,2021-02-06T08:52:42Z,2021-02-06T09:36:26Z,2021-02-06T09:49:21Z,MERGED,True,5,1,2,https://github.com/dearblue,`compile_as_cxx` should generate a path under` conf.build_dir`,1,[],https://github.com/mruby/mruby/pull/5325,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5325,"If the current directory is different from MRUBY_ROOT and it has conf.build_dir and conf.enable_cxx_exception set, it was generating a pathname outside of build_dir.
As a result, in some cases files unrelated to mruby could be linked.
% pwd
/tmp/mruby/1/2/3/4/5/6

% mruby_dir=/tmp/mruby/a/b/c/d/mruby

% cat my_config.rb
MRuby::Build.new(""host"", ""build/to/custom/directory"") do
  toolchain
  enable_cxx_exception
end

% rake MRUBY_CONFIG=my_config.rb -f $mruby_dir/Rakefile > logs
% grep CXX logs
CXX   a/b/c/d/mruby/src/error-cxx.cxx -> a/b/c/d/mruby/src/error-cxx.o
CXX   a/b/c/d/mruby/src/gc-cxx.cxx -> a/b/c/d/mruby/src/gc-cxx.o
CXX   a/b/c/d/mruby/src/vm-cxx.cxx -> a/b/c/d/mruby/src/vm-cxx.o
CXX   a/b/c/d/mruby/mrbgems/mruby-compiler/core/codegen-cxx.cxx -> a/b/c/d/mruby/mrbgems/mruby-compiler/core/codegen-cxx.o
CXX   a/b/c/d/mruby/mrbgems/mruby-compiler/core/y.tab-cxx.cxx -> a/b/c/d/mruby/mrbgems/mruby-compiler/core/y.tab-cxx.o
CXX   ../a/b/c/d/mruby/src/error-cxx.cxx -> ../a/b/c/d/mruby/src/error-cxx.o
CXX   ../a/b/c/d/mruby/src/gc-cxx.cxx -> ../a/b/c/d/mruby/src/gc-cxx.o
CXX   ../a/b/c/d/mruby/src/vm-cxx.cxx -> ../a/b/c/d/mruby/src/vm-cxx.o","If the current directory is different from MRUBY_ROOT and it has conf.build_dir and conf.enable_cxx_exception set, it was generating a pathname outside of build_dir.
As a result, in some cases files unrelated to mruby could be linked.
% pwd
/tmp/mruby/1/2/3/4/5/6

% mruby_dir=/tmp/mruby/a/b/c/d/mruby

% cat my_config.rb
MRuby::Build.new(""host"", ""build/to/custom/directory"") do
  toolchain
  enable_cxx_exception
end

% rake MRUBY_CONFIG=my_config.rb -f $mruby_dir/Rakefile > logs
% grep CXX logs
CXX   a/b/c/d/mruby/src/error-cxx.cxx -> a/b/c/d/mruby/src/error-cxx.o
CXX   a/b/c/d/mruby/src/gc-cxx.cxx -> a/b/c/d/mruby/src/gc-cxx.o
CXX   a/b/c/d/mruby/src/vm-cxx.cxx -> a/b/c/d/mruby/src/vm-cxx.o
CXX   a/b/c/d/mruby/mrbgems/mruby-compiler/core/codegen-cxx.cxx -> a/b/c/d/mruby/mrbgems/mruby-compiler/core/codegen-cxx.o
CXX   a/b/c/d/mruby/mrbgems/mruby-compiler/core/y.tab-cxx.cxx -> a/b/c/d/mruby/mrbgems/mruby-compiler/core/y.tab-cxx.o
CXX   ../a/b/c/d/mruby/src/error-cxx.cxx -> ../a/b/c/d/mruby/src/error-cxx.o
CXX   ../a/b/c/d/mruby/src/gc-cxx.cxx -> ../a/b/c/d/mruby/src/gc-cxx.o
CXX   ../a/b/c/d/mruby/src/vm-cxx.cxx -> ../a/b/c/d/mruby/src/vm-cxx.o",True,{}
mruby/mruby,https://github.com/mruby/mruby,5326,2021-02-06T09:16:55Z,2021-02-06T09:25:50Z,2021-02-06T09:49:21Z,MERGED,True,81,84,1,https://github.com/dearblue,No need to check class definition,1,[],https://github.com/mruby/mruby/pull/5326,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5326,Because now the Struct class is always defined when this file is included.,Because now the Struct class is always defined when this file is included.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5327,2021-02-06T09:19:10Z,2021-02-06T09:28:54Z,2021-02-06T10:22:30Z,MERGED,True,2,1,1,https://github.com/dearblue,Ignore if `conf.enable_test` does not exist,1,[],https://github.com/mruby/mruby/pull/5327,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5327,"Because if the configuration file didn't contain any conf.enable_test, rake test would report an exception and exit.
% cat my_config.rb
MRuby::Build.new { toolchain }

% rake MRUBY_CONFIG=my_config.rb test

  ...SNIP...

rake aborted!
NoMethodError: undefined method `invoke' for nil:NilClass
/var/tmp/mruby/tasks/test.rake:24:in `block (3 levels) in <top (required)>'
Tasks: TOP => test => test:build => test:build:lib
(See full trace by running task with --trace)","Because if the configuration file didn't contain any conf.enable_test, rake test would report an exception and exit.
% cat my_config.rb
MRuby::Build.new { toolchain }

% rake MRUBY_CONFIG=my_config.rb test

  ...SNIP...

rake aborted!
NoMethodError: undefined method `invoke' for nil:NilClass
/var/tmp/mruby/tasks/test.rake:24:in `block (3 levels) in <top (required)>'
Tasks: TOP => test => test:build => test:build:lib
(See full trace by running task with --trace)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5327,2021-02-06T09:19:10Z,2021-02-06T09:28:54Z,2021-02-06T10:22:30Z,MERGED,True,2,1,1,https://github.com/dearblue,Ignore if `conf.enable_test` does not exist,1,[],https://github.com/mruby/mruby/pull/5327,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5327#issuecomment-774432479,"Because if the configuration file didn't contain any conf.enable_test, rake test would report an exception and exit.
% cat my_config.rb
MRuby::Build.new { toolchain }

% rake MRUBY_CONFIG=my_config.rb test

  ...SNIP...

rake aborted!
NoMethodError: undefined method `invoke' for nil:NilClass
/var/tmp/mruby/tasks/test.rake:24:in `block (3 levels) in <top (required)>'
Tasks: TOP => test => test:build => test:build:lib
(See full trace by running task with --trace)","I wanted to use the Bocchi operator from Ruby-2.3, but I couldn't use it due to compilation requirements...
doc/guides/compile.md#prerequisites",True,{}
mruby/mruby,https://github.com/mruby/mruby,5327,2021-02-06T09:19:10Z,2021-02-06T09:28:54Z,2021-02-06T10:22:30Z,MERGED,True,2,1,1,https://github.com/dearblue,Ignore if `conf.enable_test` does not exist,1,[],https://github.com/mruby/mruby/pull/5327,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5327#issuecomment-774432733,"Because if the configuration file didn't contain any conf.enable_test, rake test would report an exception and exit.
% cat my_config.rb
MRuby::Build.new { toolchain }

% rake MRUBY_CONFIG=my_config.rb test

  ...SNIP...

rake aborted!
NoMethodError: undefined method `invoke' for nil:NilClass
/var/tmp/mruby/tasks/test.rake:24:in `block (3 levels) in <top (required)>'
Tasks: TOP => test => test:build => test:build:lib
(See full trace by running task with --trace)",Shall we upgrade to 2.5 or later?,True,{'THUMBS_UP': ['https://github.com/shuujii']}
mruby/mruby,https://github.com/mruby/mruby,5327,2021-02-06T09:19:10Z,2021-02-06T09:28:54Z,2021-02-06T10:22:30Z,MERGED,True,2,1,1,https://github.com/dearblue,Ignore if `conf.enable_test` does not exist,1,[],https://github.com/mruby/mruby/pull/5327,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5327#issuecomment-774435258,"Because if the configuration file didn't contain any conf.enable_test, rake test would report an exception and exit.
% cat my_config.rb
MRuby::Build.new { toolchain }

% rake MRUBY_CONFIG=my_config.rb test

  ...SNIP...

rake aborted!
NoMethodError: undefined method `invoke' for nil:NilClass
/var/tmp/mruby/tasks/test.rake:24:in `block (3 levels) in <top (required)>'
Tasks: TOP => test => test:build => test:build:lib
(See full trace by running task with --trace)",I would be happy if you could do so.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5327,2021-02-06T09:19:10Z,2021-02-06T09:28:54Z,2021-02-06T10:22:30Z,MERGED,True,2,1,1,https://github.com/dearblue,Ignore if `conf.enable_test` does not exist,1,[],https://github.com/mruby/mruby/pull/5327,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/5327#issuecomment-774442415,"Because if the configuration file didn't contain any conf.enable_test, rake test would report an exception and exit.
% cat my_config.rb
MRuby::Build.new { toolchain }

% rake MRUBY_CONFIG=my_config.rb test

  ...SNIP...

rake aborted!
NoMethodError: undefined method `invoke' for nil:NilClass
/var/tmp/mruby/tasks/test.rake:24:in `block (3 levels) in <top (required)>'
Tasks: TOP => test => test:build => test:build:lib
(See full trace by running task with --trace)","@dearblue, Thank you so much for fixing many bugs in build system.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5328,2021-02-06T12:56:13Z,2021-02-10T11:14:26Z,2021-02-14T04:58:39Z,MERGED,True,78,8,2,https://github.com/dearblue,Reimplement mruby-catch; ref #5321,1,[],https://github.com/mruby/mruby/pull/5328,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5328,"When there is a corresponding tag, the RBreak object is used to make a global jump.
Like CRuby, it can't be caught by rescue.
It is also the same as CRuby that it can be canceled in the middle by ensure.
How to find the corresponding tag with throw
The called catch method remains in the call stack, and the tag also remains in the stack at that time.
So it is possible to find the called location by searching the two.
Note that no method can be given to the proc object specified in RBreak.
Therefore, inside the catch method, the argument block is called in a seemingly meaningless closure.
Also, as a countermeasure against alias etc., the proc object, which is the body of the catch method, is saved when mrbgem is initialized.","When there is a corresponding tag, the RBreak object is used to make a global jump.
Like CRuby, it can't be caught by rescue.
It is also the same as CRuby that it can be canceled in the middle by ensure.
How to find the corresponding tag with throw
The called catch method remains in the call stack, and the tag also remains in the stack at that time.
So it is possible to find the called location by searching the two.
Note that no method can be given to the proc object specified in RBreak.
Therefore, inside the catch method, the argument block is called in a seemingly meaningless closure.
Also, as a countermeasure against alias etc., the proc object, which is the body of the catch method, is saved when mrbgem is initialized.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5328,2021-02-06T12:56:13Z,2021-02-10T11:14:26Z,2021-02-14T04:58:39Z,MERGED,True,78,8,2,https://github.com/dearblue,Reimplement mruby-catch; ref #5321,1,[],https://github.com/mruby/mruby/pull/5328,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5328#issuecomment-774474369,"When there is a corresponding tag, the RBreak object is used to make a global jump.
Like CRuby, it can't be caught by rescue.
It is also the same as CRuby that it can be canceled in the middle by ensure.
How to find the corresponding tag with throw
The called catch method remains in the call stack, and the tag also remains in the stack at that time.
So it is possible to find the called location by searching the two.
Note that no method can be given to the proc object specified in RBreak.
Therefore, inside the catch method, the argument block is called in a seemingly meaningless closure.
Also, as a countermeasure against alias etc., the proc object, which is the body of the catch method, is saved when mrbgem is initialized.","I came up with a way to find the corresponding tag in the call stack and tried it.
The way to throw a RBreak object through a closure from within a method is the one I came up with in the mruby-timeout mrbgem in the timeout branch of my mruby repository.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5331,2021-02-07T10:33:39Z,2021-02-07T22:19:06Z,2021-02-19T14:32:03Z,MERGED,True,2,2,1,https://github.com/shuujii,Explicit top level task to clarify in `tasks/test.rake`,1,[],https://github.com/mruby/mruby/pull/5331,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5331,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5333,2021-02-10T11:24:09Z,2021-02-10T23:26:34Z,2021-02-19T14:32:05Z,MERGED,True,16,1,2,https://github.com/shuujii,Fix heap-buffer-overflow for small `Hash` (HT) in `Hash#rehash`,1,[],https://github.com/mruby/mruby/pull/5333,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5333,"Example
example.rb
h = {}
(1..17).each{h[_1] = _1}
(1..16).each{h.delete(_1)}
h.rehash
ASAN report
$ bin/mruby example.rb
==52587==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000006998 at pc 0x55a29cddf96b bp 0x7fff7b1b1720 sp 0x7fff7b1b1710
READ of size 4 at 0x602000006998 thread T0
    #0 0x55a29cddf96a in ib_it_next /mruby/src/hash.c:639
    #1 0x55a29cde2ca2 in ht_rehash /mruby/src/hash.c:900
    #2 0x55a29cde379f in h_rehash /mruby/src/hash.c:996
    #3 0x55a29cde7f3d in mrb_hash_rehash /mruby/src/hash.c:1735
    #4 0x55a29ce77b62 in mrb_vm_exec /mruby/src/vm.c:1451
    #5 0x55a29ce5fa88 in mrb_vm_run /mruby/src/vm.c:981
    #6 0x55a29ceb87e1 in mrb_top_run /mruby/src/vm.c:2874
    #7 0x55a29cf36bdf in mrb_load_exec mrbgems/mruby-compiler/core/parse.y:6805
    #8 0x55a29cf36f25 in mrb_load_detect_file_cxt mrbgems/mruby-compiler/core/parse.y:6848
    #9 0x55a29cdba0a2 in main /mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:347
    #10 0x7f24ef43b0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
    #11 0x55a29cdb4a6d in _start (/mruby/bin/mruby+0x2a3a6d)

0x602000006998 is located 0 bytes to the right of 8-byte region [0x602000006990,0x602000006998)
allocated by thread T0 here:
    #0 0x7f24f01cfffe in __interceptor_realloc (/lib/x86_64-linux-gnu/libasan.so.5+0x10dffe)
    #1 0x55a29ceb9440 in mrb_default_allocf /mruby/src/state.c:68
    #2 0x55a29cdba747 in mrb_realloc_simple /mruby/src/gc.c:228
    #3 0x55a29cdba928 in mrb_realloc /mruby/src/gc.c:242
    #4 0x55a29cde12e5 in ht_init /mruby/src/hash.c:749
    #5 0x55a29cde2b8e in ht_rehash /mruby/src/hash.c:897
    #6 0x55a29cde379f in h_rehash /mruby/src/hash.c:996
    #7 0x55a29cde7f3d in mrb_hash_rehash /mruby/src/hash.c:1735
    #8 0x55a29ce77b62 in mrb_vm_exec /mruby/src/vm.c:1451
    #9 0x55a29ce5fa88 in mrb_vm_run /mruby/src/vm.c:981
    #10 0x55a29ceb87e1 in mrb_top_run /mruby/src/vm.c:2874
    #11 0x55a29cf36bdf in mrb_load_exec mrbgems/mruby-compiler/core/parse.y:6805
    #12 0x55a29cf36f25 in mrb_load_detect_file_cxt mrbgems/mruby-compiler/core/parse.y:6848
    #13 0x55a29cdba0a2 in main /mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:347
    #14 0x7f24ef43b0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)","Example
example.rb
h = {}
(1..17).each{h[_1] = _1}
(1..16).each{h.delete(_1)}
h.rehash
ASAN report
$ bin/mruby example.rb
==52587==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000006998 at pc 0x55a29cddf96b bp 0x7fff7b1b1720 sp 0x7fff7b1b1710
READ of size 4 at 0x602000006998 thread T0
    #0 0x55a29cddf96a in ib_it_next /mruby/src/hash.c:639
    #1 0x55a29cde2ca2 in ht_rehash /mruby/src/hash.c:900
    #2 0x55a29cde379f in h_rehash /mruby/src/hash.c:996
    #3 0x55a29cde7f3d in mrb_hash_rehash /mruby/src/hash.c:1735
    #4 0x55a29ce77b62 in mrb_vm_exec /mruby/src/vm.c:1451
    #5 0x55a29ce5fa88 in mrb_vm_run /mruby/src/vm.c:981
    #6 0x55a29ceb87e1 in mrb_top_run /mruby/src/vm.c:2874
    #7 0x55a29cf36bdf in mrb_load_exec mrbgems/mruby-compiler/core/parse.y:6805
    #8 0x55a29cf36f25 in mrb_load_detect_file_cxt mrbgems/mruby-compiler/core/parse.y:6848
    #9 0x55a29cdba0a2 in main /mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:347
    #10 0x7f24ef43b0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
    #11 0x55a29cdb4a6d in _start (/mruby/bin/mruby+0x2a3a6d)

0x602000006998 is located 0 bytes to the right of 8-byte region [0x602000006990,0x602000006998)
allocated by thread T0 here:
    #0 0x7f24f01cfffe in __interceptor_realloc (/lib/x86_64-linux-gnu/libasan.so.5+0x10dffe)
    #1 0x55a29ceb9440 in mrb_default_allocf /mruby/src/state.c:68
    #2 0x55a29cdba747 in mrb_realloc_simple /mruby/src/gc.c:228
    #3 0x55a29cdba928 in mrb_realloc /mruby/src/gc.c:242
    #4 0x55a29cde12e5 in ht_init /mruby/src/hash.c:749
    #5 0x55a29cde2b8e in ht_rehash /mruby/src/hash.c:897
    #6 0x55a29cde379f in h_rehash /mruby/src/hash.c:996
    #7 0x55a29cde7f3d in mrb_hash_rehash /mruby/src/hash.c:1735
    #8 0x55a29ce77b62 in mrb_vm_exec /mruby/src/vm.c:1451
    #9 0x55a29ce5fa88 in mrb_vm_run /mruby/src/vm.c:981
    #10 0x55a29ceb87e1 in mrb_top_run /mruby/src/vm.c:2874
    #11 0x55a29cf36bdf in mrb_load_exec mrbgems/mruby-compiler/core/parse.y:6805
    #12 0x55a29cf36f25 in mrb_load_detect_file_cxt mrbgems/mruby-compiler/core/parse.y:6848
    #13 0x55a29cdba0a2 in main /mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:347
    #14 0x7f24ef43b0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5333,2021-02-10T11:24:09Z,2021-02-10T23:26:34Z,2021-02-19T14:32:05Z,MERGED,True,16,1,2,https://github.com/shuujii,Fix heap-buffer-overflow for small `Hash` (HT) in `Hash#rehash`,1,[],https://github.com/mruby/mruby/pull/5333,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5333#issuecomment-776693200,"Example
example.rb
h = {}
(1..17).each{h[_1] = _1}
(1..16).each{h.delete(_1)}
h.rehash
ASAN report
$ bin/mruby example.rb
==52587==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000006998 at pc 0x55a29cddf96b bp 0x7fff7b1b1720 sp 0x7fff7b1b1710
READ of size 4 at 0x602000006998 thread T0
    #0 0x55a29cddf96a in ib_it_next /mruby/src/hash.c:639
    #1 0x55a29cde2ca2 in ht_rehash /mruby/src/hash.c:900
    #2 0x55a29cde379f in h_rehash /mruby/src/hash.c:996
    #3 0x55a29cde7f3d in mrb_hash_rehash /mruby/src/hash.c:1735
    #4 0x55a29ce77b62 in mrb_vm_exec /mruby/src/vm.c:1451
    #5 0x55a29ce5fa88 in mrb_vm_run /mruby/src/vm.c:981
    #6 0x55a29ceb87e1 in mrb_top_run /mruby/src/vm.c:2874
    #7 0x55a29cf36bdf in mrb_load_exec mrbgems/mruby-compiler/core/parse.y:6805
    #8 0x55a29cf36f25 in mrb_load_detect_file_cxt mrbgems/mruby-compiler/core/parse.y:6848
    #9 0x55a29cdba0a2 in main /mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:347
    #10 0x7f24ef43b0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
    #11 0x55a29cdb4a6d in _start (/mruby/bin/mruby+0x2a3a6d)

0x602000006998 is located 0 bytes to the right of 8-byte region [0x602000006990,0x602000006998)
allocated by thread T0 here:
    #0 0x7f24f01cfffe in __interceptor_realloc (/lib/x86_64-linux-gnu/libasan.so.5+0x10dffe)
    #1 0x55a29ceb9440 in mrb_default_allocf /mruby/src/state.c:68
    #2 0x55a29cdba747 in mrb_realloc_simple /mruby/src/gc.c:228
    #3 0x55a29cdba928 in mrb_realloc /mruby/src/gc.c:242
    #4 0x55a29cde12e5 in ht_init /mruby/src/hash.c:749
    #5 0x55a29cde2b8e in ht_rehash /mruby/src/hash.c:897
    #6 0x55a29cde379f in h_rehash /mruby/src/hash.c:996
    #7 0x55a29cde7f3d in mrb_hash_rehash /mruby/src/hash.c:1735
    #8 0x55a29ce77b62 in mrb_vm_exec /mruby/src/vm.c:1451
    #9 0x55a29ce5fa88 in mrb_vm_run /mruby/src/vm.c:981
    #10 0x55a29ceb87e1 in mrb_top_run /mruby/src/vm.c:2874
    #11 0x55a29cf36bdf in mrb_load_exec mrbgems/mruby-compiler/core/parse.y:6805
    #12 0x55a29cf36f25 in mrb_load_detect_file_cxt mrbgems/mruby-compiler/core/parse.y:6848
    #13 0x55a29cdba0a2 in main /mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:347
    #14 0x7f24ef43b0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)","Somehow I could not reproduce the ASAN error on my machine, but I understand what you do.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5334,2021-02-12T06:11:57Z,2021-02-12T06:38:59Z,2021-02-19T14:32:01Z,MERGED,True,58,28,1,https://github.com/shuujii,Avoid possibility of reading uninitialized areas in `h_check_modified()`,1,[],https://github.com/mruby/mruby/pull/5334,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5334,"In h_check_modified(), in the case of MRB_NO_BOXING, ht_ea() or
ht_ea_capa() for AR may read uninitialized area. Therefore, do not use
those macros for AR in MRB_NO_BOXING (but in the case of MRB_64BIT,
ht_ea_capa() is the same as ar_ea_capa(), so use it).
fix #5332","In h_check_modified(), in the case of MRB_NO_BOXING, ht_ea() or
ht_ea_capa() for AR may read uninitialized area. Therefore, do not use
those macros for AR in MRB_NO_BOXING (but in the case of MRB_64BIT,
ht_ea_capa() is the same as ar_ea_capa(), so use it).
fix #5332",True,{}
mruby/mruby,https://github.com/mruby/mruby,5335,2021-02-12T10:20:31Z,2021-02-12T12:10:53Z,2021-02-19T14:32:00Z,MERGED,True,19,12,2,https://github.com/shuujii,"Add `UncaughtThrowError#{tag,value}` for Ruby compatibility",1,[],https://github.com/mruby/mruby/pull/5335,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5335,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5336,2021-02-12T10:28:55Z,2021-02-12T12:11:59Z,2021-02-19T14:32:04Z,MERGED,True,4,2,1,https://github.com/shuujii,Fix build `mruby-catch` gem without presym,1,[],https://github.com/mruby/mruby/pull/5336,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5336,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5337,2021-02-12T10:54:00Z,2021-02-12T12:09:07Z,2021-02-19T14:32:09Z,MERGED,True,0,24,3,https://github.com/shuujii,"Remove ""skip ci"" hack to GitHub Actions [skip travis][skip appveyor]",1,[],https://github.com/mruby/mruby/pull/5337,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5337,"GitHub Actions now supports ""skip ci"" natively:
https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/","GitHub Actions now supports ""skip ci"" natively:
https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/",True,{}
mruby/mruby,https://github.com/mruby/mruby,5339,2021-02-13T02:56:49Z,2021-02-13T05:17:58Z,2021-02-19T14:32:12Z,MERGED,True,7,7,1,https://github.com/shuujii,Update compile prerequisites in `doc/guides/compile.md` [ci skip],1,[],https://github.com/mruby/mruby/pull/5339,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5339,Bison and gperf are optional.,Bison and gperf are optional.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5340,2021-02-13T06:15:01Z,2021-02-13T06:19:35Z,2021-02-13T06:30:50Z,MERGED,True,11,1,1,https://github.com/jbampton,refactor: only use certified GitHub Actions to increase security,1,[],https://github.com/mruby/mruby/pull/5340,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5340,"Official -> ""The individual jobs in a workflow can interact with (and compromise) other jobs. For example, a job querying the environment variables used by a later job, writing files to a shared directory that a later job processes, or even more directly by interacting with the Docker socket and inspecting other running containers and executing commands in them.
This means that a compromise of a single action within a workflow can be very significant, as that compromised action would have access to all secrets configured on your repository, and can use the GITHUB_TOKEN to write to the repository. Consequently, there is significant risk in sourcing actions from third-party repositories on GitHub. ""
https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#using-third-party-actions","Official -> ""The individual jobs in a workflow can interact with (and compromise) other jobs. For example, a job querying the environment variables used by a later job, writing files to a shared directory that a later job processes, or even more directly by interacting with the Docker socket and inspecting other running containers and executing commands in them.
This means that a compromise of a single action within a workflow can be very significant, as that compromised action would have access to all secrets configured on your repository, and can use the GITHUB_TOKEN to write to the repository. Consequently, there is significant risk in sourcing actions from third-party repositories on GitHub. ""
https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#using-third-party-actions",True,{}
mruby/mruby,https://github.com/mruby/mruby,5341,2021-02-13T06:39:20Z,2021-02-13T06:46:52Z,2021-02-13T06:56:16Z,MERGED,True,23,1,3,https://github.com/jbampton,feat(CI): check for trailing whitespace,1,[],https://github.com/mruby/mruby/pull/5341,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5341,"Run on pull request only.
Use a shell script to check for trailing whitespace in all files.
Fail if trailing whitespace is found.","Run on pull request only.
Use a shell script to check for trailing whitespace in all files.
Fail if trailing whitespace is found.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5342,2021-02-13T07:23:31Z,2021-02-13T07:38:03Z,2021-02-13T07:47:00Z,MERGED,True,9,9,7,https://github.com/jbampton,chore: fix spelling,1,[],https://github.com/mruby/mruby/pull/5342,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5342,"Normally a single spell checker can't find all the mistakes or check all types of code.
These mistakes were found by another spell checker inside my editor with a more manual sift / find.","Normally a single spell checker can't find all the mistakes or check all types of code.
These mistakes were found by another spell checker inside my editor with a more manual sift / find.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5343,2021-02-13T07:38:33Z,2021-02-16T04:08:39Z,2021-02-22T02:53:00Z,MERGED,True,10,0,1,https://github.com/jbampton,feat: add Dependabot config file,1,[],https://github.com/mruby/mruby/pull/5343,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5343,"Set for GitHub Actions to check for update everyday.
When you add or update the dependabot.yml file, this triggers an immediate check for version updates. Any options that also affect security updates are used the next time a security alert triggers a pull request for a security update.
https://docs.github.com/en/github/administering-a-repository/configuration-options-for-dependency-updates","Set for GitHub Actions to check for update everyday.
When you add or update the dependabot.yml file, this triggers an immediate check for version updates. Any options that also affect security updates are used the next time a security alert triggers a pull request for a security update.
https://docs.github.com/en/github/administering-a-repository/configuration-options-for-dependency-updates",True,{}
mruby/mruby,https://github.com/mruby/mruby,5343,2021-02-13T07:38:33Z,2021-02-16T04:08:39Z,2021-02-22T02:53:00Z,MERGED,True,10,0,1,https://github.com/jbampton,feat: add Dependabot config file,1,[],https://github.com/mruby/mruby/pull/5343,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5343#issuecomment-778578991,"Set for GitHub Actions to check for update everyday.
When you add or update the dependabot.yml file, this triggers an immediate check for version updates. Any options that also affect security updates are used the next time a security alert triggers a pull request for a security update.
https://docs.github.com/en/github/administering-a-repository/configuration-options-for-dependency-updates","We don't have any package dependency from within mruby/mruby. What does this PR do for?
Probably we should add this to mruby/mruby.github.io?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5343,2021-02-13T07:38:33Z,2021-02-16T04:08:39Z,2021-02-22T02:53:00Z,MERGED,True,10,0,1,https://github.com/jbampton,feat: add Dependabot config file,1,[],https://github.com/mruby/mruby/pull/5343,https://github.com/jbampton,3,https://github.com/mruby/mruby/pull/5343#issuecomment-778580387,"Set for GitHub Actions to check for update everyday.
When you add or update the dependabot.yml file, this triggers an immediate check for version updates. Any options that also affect security updates are used the next time a security alert triggers a pull request for a security update.
https://docs.github.com/en/github/administering-a-repository/configuration-options-for-dependency-updates","This update to is to keep the GitHub Actions up to date.  All the linters, spell checkers, whitespace checker and code-QL all run on GitHub actions and they have versions as they as just software libraries too.  We need to keep them up to date too.
Example below but we have ones for actions/checkout@v2, actions/setup-python@v2, actions/setup-node@v2.1.4, github/codeql-action/analyze@v1, github/codeql-action/autobuild@v1, github/codeql-action/init@v1

  
    
      mruby/.github/workflows/lint.yml
    
    
         Line 29
      in
      d04c651
    
  
  
    

        
          
           uses: actions/setup-node@v2.1.4 
        
    
  


For example setup-python is a verified action:
https://github.com/actions/setup-python
Seen in the GitHub Marketplace here:
https://github.com/marketplace/actions/setup-python",True,{}
mruby/mruby,https://github.com/mruby/mruby,5345,2021-02-13T08:19:07Z,2021-02-13T08:21:12Z,2021-02-13T13:19:06Z,MERGED,True,2,2,2,https://github.com/jbampton,chore: fix missing HTTPS on links,1,[],https://github.com/mruby/mruby/pull/5345,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5345,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5346,2021-02-13T09:00:45Z,2021-02-13T09:25:28Z,2021-02-13T09:26:59Z,MERGED,True,30,35,2,https://github.com/jbampton,refactor: add the spell checker Action to the Lint Action file,1,[],https://github.com/mruby/mruby/pull/5346,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5346,Order jobs in workflow.,Order jobs in workflow.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5347,2021-02-14T02:46:21Z,2021-02-17T03:43:46Z,2021-02-19T14:32:00Z,MERGED,True,41,22,7,https://github.com/shuujii,Add `-s` option to `mrbc` for make variable static,1,[],https://github.com/mruby/mruby/pull/5347,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5347,,,True,{'THUMBS_UP': ['https://github.com/ojej']}
mruby/mruby,https://github.com/mruby/mruby,5348,2021-02-14T05:04:51Z,2021-02-14T08:49:00Z,2021-02-14T13:32:20Z,MERGED,True,1,1,1,https://github.com/dearblue,Place optable in ROM,1,[],https://github.com/mruby/mruby/pull/5348,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5348,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5349,2021-02-14T07:02:23Z,2021-02-15T01:54:29Z,2021-02-19T14:32:09Z,MERGED,True,1,1,1,https://github.com/shuujii,Remove trailing tab in `build_config/dreamcast_shelf.rb` [ci skip],1,[],https://github.com/mruby/mruby/pull/5349,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5349,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5350,2021-02-14T07:08:21Z,2021-02-15T04:49:52Z,2021-02-19T14:32:08Z,MERGED,True,1,16,2,https://github.com/shuujii,Refine checking for trailing whitespace [skip travis][skip appveyor],1,[],https://github.com/mruby/mruby/pull/5350,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5350,"Include tabs in checking.
Use git grep to avoid including .git directory.
Avoid running grep multiple times.","Include tabs in checking.
Use git grep to avoid including .git directory.
Avoid running grep multiple times.",True,{'THUMBS_UP': ['https://github.com/jbampton']}
mruby/mruby,https://github.com/mruby/mruby,5352,2021-02-14T12:05:36Z,2021-02-18T12:51:08Z,2021-02-19T14:32:07Z,MERGED,True,2,2,1,https://github.com/shuujii,Fix type tag that set to `NilClass` and `FalseClass`,1,[],https://github.com/mruby/mruby/pull/5352,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5352,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5353,2021-02-14T13:30:22Z,2021-02-15T01:53:48Z,2021-02-20T09:22:03Z,MERGED,True,43,0,1,https://github.com/dearblue,Introduce EditorConfig [skip ci],1,[],https://github.com/mruby/mruby/pull/5353,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5353,"Helps keep the text file format consistent.
Multiple text editors and IDEs support it, and there may be plugins even if it is not supported.
https://editorconfig.org/
There should be various opinions about the number of characters per line, so I intentionally commented it out.
Anyway, 80 characters is painful.
The intention is not to force the use of the corresponding editor.
I just hope to help anyone using a compatible editor.
I have a plugin installed and used on Vim.","Helps keep the text file format consistent.
Multiple text editors and IDEs support it, and there may be plugins even if it is not supported.
https://editorconfig.org/
There should be various opinions about the number of characters per line, so I intentionally commented it out.
Anyway, 80 characters is painful.
The intention is not to force the use of the corresponding editor.
I just hope to help anyone using a compatible editor.
I have a plugin installed and used on Vim.",True,{'THUMBS_UP': ['https://github.com/jbampton']}
mruby/mruby,https://github.com/mruby/mruby,5355,2021-02-16T04:23:03Z,2021-02-16T04:54:00Z,2021-02-16T04:54:07Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,Bump actions/cache from v2 to v2.1.4,1,['dependencies'],https://github.com/mruby/mruby/pull/5355,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5355,"Bumps actions/cache from v2 to v2.1.4.

Release notes
Sourced from actions/cache's releases.

v2.1.4

Make caching more verbose #650
Use GNU tar on macOS if available #701




Commits

26968a0 Make save/restore logs akin (#509)
aeaf731 Use @actions/cache version 1.0.6 (#525)
56a8a2f Merge pull request #514 from eregon/recommend-setup-ruby-bundler-cache
1bfe3ac Recommend ruby/setup-ruby's bundler-cache: true option
3543324 Merge pull request #434 from DanielHabenicht/patch-1
3303695 Merge pull request #507 from odin-delrio/patch-1
e64ab30 Improved gradle cache key calculation example
26c48dc Merge pull request #506 from actions/cache-matrix-example
72f66cf Added a cache example when using matrix
9f3a4d3 Merge pull request #443 from guilleijo/pipenv-example
Additional commits viewable in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/cache from v2 to v2.1.4.

Release notes
Sourced from actions/cache's releases.

v2.1.4

Make caching more verbose #650
Use GNU tar on macOS if available #701




Commits

26968a0 Make save/restore logs akin (#509)
aeaf731 Use @actions/cache version 1.0.6 (#525)
56a8a2f Merge pull request #514 from eregon/recommend-setup-ruby-bundler-cache
1bfe3ac Recommend ruby/setup-ruby's bundler-cache: true option
3543324 Merge pull request #434 from DanielHabenicht/patch-1
3303695 Merge pull request #507 from odin-delrio/patch-1
e64ab30 Improved gradle cache key calculation example
26c48dc Merge pull request #506 from actions/cache-matrix-example
72f66cf Added a cache example when using matrix
9f3a4d3 Merge pull request #443 from guilleijo/pipenv-example
Additional commits viewable in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5356,2021-02-16T04:23:04Z,2021-02-16T04:54:24Z,2021-02-16T04:54:36Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,Bump actions/upload-artifact from v1 to v2.2.2,1,['dependencies'],https://github.com/mruby/mruby/pull/5356,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5356,"Bumps actions/upload-artifact from v1 to v2.2.2.

Release notes
Sourced from actions/upload-artifact's releases.

v2.2.2

Improved retryability and error handling




Commits

e448a9b Add retries to all HTTP calls + resolve dependabot alerts (#160)
e6bd6b7 Replace ""file(s)"" with ""file"" or ""files"" (#159)
1fd4c85 Merge pull request #152 from actions/joshmgross/fix-codeowners
a2af908 Fix CODEOWNERS team name
928d1a1 Create CODEOWNERS (#149)
e4a7ffa Update README with more retention documentation
726a6dc Adding example of retention-days option. (#131)
3db166e Merge pull request #145 from actions/joshmgross/update-actions-core
d86048c Update @actions/core license
328d690 Update @actions/core to 1.2.6
Additional commits viewable in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/upload-artifact from v1 to v2.2.2.

Release notes
Sourced from actions/upload-artifact's releases.

v2.2.2

Improved retryability and error handling




Commits

e448a9b Add retries to all HTTP calls + resolve dependabot alerts (#160)
e6bd6b7 Replace ""file(s)"" with ""file"" or ""files"" (#159)
1fd4c85 Merge pull request #152 from actions/joshmgross/fix-codeowners
a2af908 Fix CODEOWNERS team name
928d1a1 Create CODEOWNERS (#149)
e4a7ffa Update README with more retention documentation
726a6dc Adding example of retention-days option. (#131)
3db166e Merge pull request #145 from actions/joshmgross/update-actions-core
d86048c Update @actions/core license
328d690 Update @actions/core to 1.2.6
Additional commits viewable in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5357,2021-02-17T04:58:23Z,2021-02-17T06:23:24Z,2021-02-17T06:32:57Z,MERGED,True,1,1,1,https://github.com/k0kubun,Skip --depth=1 when it's locked,1,[],https://github.com/mruby/mruby/pull/5357,https://github.com/k0kubun,1,https://github.com/mruby/mruby/pull/5357,"Problem
When your build_config.rb.lock has a lock entry whose commit is older than the latest commit in the branch like this,
    https://github.com/ksss/mruby-file-stat.git:
      url: https://github.com/ksss/mruby-file-stat.git
      branch: master
      commit: 66cf135ff9642d96a6127a79b307f6314e606deb
      version: 0.0.0

it results in:
GIT   https://github.com/ksss/mruby-file-stat.git -> build/repos/host/mruby-file-stat
Cloning into '/home/mruby/code/mruby/build/repos/host/mruby-file-stat'...
GIT CHECKOUT DETACH /home/runner/work/mitamae/mitamae/mruby/build/repos/host/mruby-file-stat -> 66cf135ff9642d96a6127a79b307f6314e606deb
fatal: reference is not a tree: 66cf135ff9642d96a6127a79b307f6314e606deb
fatal: reference is not a tree: 66cf135ff9642d96a6127a79b307f6314e606deb
rake aborted!

Solution
Do not use --depth 1 for git clone when it's locked to a specific commit.","Problem
When your build_config.rb.lock has a lock entry whose commit is older than the latest commit in the branch like this,
    https://github.com/ksss/mruby-file-stat.git:
      url: https://github.com/ksss/mruby-file-stat.git
      branch: master
      commit: 66cf135ff9642d96a6127a79b307f6314e606deb
      version: 0.0.0

it results in:
GIT   https://github.com/ksss/mruby-file-stat.git -> build/repos/host/mruby-file-stat
Cloning into '/home/mruby/code/mruby/build/repos/host/mruby-file-stat'...
GIT CHECKOUT DETACH /home/runner/work/mitamae/mitamae/mruby/build/repos/host/mruby-file-stat -> 66cf135ff9642d96a6127a79b307f6314e606deb
fatal: reference is not a tree: 66cf135ff9642d96a6127a79b307f6314e606deb
fatal: reference is not a tree: 66cf135ff9642d96a6127a79b307f6314e606deb
rake aborted!

Solution
Do not use --depth 1 for git clone when it's locked to a specific commit.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5359,2021-02-20T09:25:45Z,2021-02-20T11:56:31Z,2021-02-20T12:45:23Z,MERGED,True,1,1,1,https://github.com/dearblue,Comment out `warn` used in the `Array#fetch` method,1,[],https://github.com/mruby/mruby/pull/5359,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5359,"I get an error because the current mruby does not have a Kernel#warn method.
But the warning itself is useful and I'll just comment it out in case it's implemented in the future.","I get an error because the current mruby does not have a Kernel#warn method.
But the warning itself is useful and I'll just comment it out in case it's implemented in the future.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5360,2021-02-21T10:33:58Z,2021-02-21T11:26:29Z,2021-02-21T14:52:09Z,MERGED,True,16,7,1,https://github.com/dearblue,Updated `doc/opcode.md` to match `include/mruby/ops.h` [ci skip],1,[],https://github.com/mruby/mruby/pull/5360,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5360,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5360,2021-02-21T10:33:58Z,2021-02-21T11:26:29Z,2021-02-21T14:52:09Z,MERGED,True,16,7,1,https://github.com/dearblue,Updated `doc/opcode.md` to match `include/mruby/ops.h` [ci skip],1,[],https://github.com/mruby/mruby/pull/5360,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5360#issuecomment-782857065,,Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5362,2021-02-22T15:13:37Z,2021-02-25T12:15:24Z,2021-06-23T12:31:51Z,MERGED,True,831,73,17,https://github.com/dearblue,Binding,5,[],https://github.com/mruby/mruby/pull/5362,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5362,"I have implemented Binding. This is a continuation from #3468.
mrbgems to be added
Implementations of new classes and methods (compared to Ruby-3.0)

mrbgems/mruby-binding (depending mrbgems/mruby-binding-core and mrbgems/mruby-eval)

Binding#eval method


mrbgems/mruby-binding-core (no dependence)

Binding class
Binding#local_variable_defined? method
Binding#local_variable_get method
Binding#local_variable_set method
Binding#local_variables method
Binding#receiver method
Binding#source_location method
Kernel#binding method


mrbgems/mruby-proc-binding (depending mrbgems/mruby-binding)

Proc#binding method


Not implemented

Binding#irb (I'm interested in it, but I'm not sure if I'll implement it in the future)



Reasons for separating everything but the Binding#eval method as mrbgems/mruby-binding-core
To separate the dependency on mruby-compiler.
It would be nice to have a binding for remote control, but I don't think the mruby-compiler is always needed on the receiving end in that case.
I'd like to try something like kishima-san's remote mirb at some point.
(youtube) Remote mirb on M5Stack using mruby/c
Reasons for separating the Proc#binding method as mrbgems/mruby-proc-binding
Because there are methods in core mrbgems that return proc/lambda objects, we want to minimize the problems that can arise from being able to manipulate internal variables.
By keeping them separate as different mrbgem, each user can decide if they want to include them or not.
ref: Feature #7702: Remove Proc#binding - Ruby master - Ruby Issue Tracking System
But black magic is fascinating.......
Limitations

The maximum number of local variables (bind.eval(""var = 1"") or bind.local_variable_set(:var, 1)) that can be added is 50 (net is 49 because self is included).
This is defined as the MRB_IREP_LVAR_MERGE_LIMIT constant (can be specified in build_config in the range 8..240).
It is precomputed before variables are taken in, and if the result exceeds the limit, all local variables before the addition are lost and an exception is raised.
See also: mrb_proc_merge_lvar()

Implementation Overview

Extend the private global function mrb_exec_irep() defined in src/vm.c to allow specifying a hook function to be called when returning from a given proc.
If a binding object is specified in Kernel.#eval, the return from eval is now hooked and the defined local variables are incorporated into the binding object.
The binding object will hold a proc object that will be used as a space for dynamically added local variables. From this variable space, it references the calling proc.

Finally
When I commented on #3468 I thought it would not be possible to add local variables to binding objects, but I was able to work it out.
I hope there are no bugs left that lead to SIGSEGV.......","I have implemented Binding. This is a continuation from #3468.
mrbgems to be added
Implementations of new classes and methods (compared to Ruby-3.0)

mrbgems/mruby-binding (depending mrbgems/mruby-binding-core and mrbgems/mruby-eval)

Binding#eval method


mrbgems/mruby-binding-core (no dependence)

Binding class
Binding#local_variable_defined? method
Binding#local_variable_get method
Binding#local_variable_set method
Binding#local_variables method
Binding#receiver method
Binding#source_location method
Kernel#binding method


mrbgems/mruby-proc-binding (depending mrbgems/mruby-binding)

Proc#binding method


Not implemented

Binding#irb (I'm interested in it, but I'm not sure if I'll implement it in the future)



Reasons for separating everything but the Binding#eval method as mrbgems/mruby-binding-core
To separate the dependency on mruby-compiler.
It would be nice to have a binding for remote control, but I don't think the mruby-compiler is always needed on the receiving end in that case.
I'd like to try something like kishima-san's remote mirb at some point.
(youtube) Remote mirb on M5Stack using mruby/c
Reasons for separating the Proc#binding method as mrbgems/mruby-proc-binding
Because there are methods in core mrbgems that return proc/lambda objects, we want to minimize the problems that can arise from being able to manipulate internal variables.
By keeping them separate as different mrbgem, each user can decide if they want to include them or not.
ref: Feature #7702: Remove Proc#binding - Ruby master - Ruby Issue Tracking System
But black magic is fascinating.......
Limitations

The maximum number of local variables (bind.eval(""var = 1"") or bind.local_variable_set(:var, 1)) that can be added is 50 (net is 49 because self is included).
This is defined as the MRB_IREP_LVAR_MERGE_LIMIT constant (can be specified in build_config in the range 8..240).
It is precomputed before variables are taken in, and if the result exceeds the limit, all local variables before the addition are lost and an exception is raised.
See also: mrb_proc_merge_lvar()

Implementation Overview

Extend the private global function mrb_exec_irep() defined in src/vm.c to allow specifying a hook function to be called when returning from a given proc.
If a binding object is specified in Kernel.#eval, the return from eval is now hooked and the defined local variables are incorporated into the binding object.
The binding object will hold a proc object that will be used as a space for dynamically added local variables. From this variable space, it references the calling proc.

Finally
When I commented on #3468 I thought it would not be possible to add local variables to binding objects, but I was able to work it out.
I hope there are no bugs left that lead to SIGSEGV.......",True,"{'THUMBS_UP': ['https://github.com/dmajkic', 'https://github.com/jethrodaniel'], 'HEART': ['https://github.com/ksss']}"
mruby/mruby,https://github.com/mruby/mruby,5362,2021-02-22T15:13:37Z,2021-02-25T12:15:24Z,2021-06-23T12:31:51Z,MERGED,True,831,73,17,https://github.com/dearblue,Binding,5,[],https://github.com/mruby/mruby/pull/5362,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5362#issuecomment-866013665,"I have implemented Binding. This is a continuation from #3468.
mrbgems to be added
Implementations of new classes and methods (compared to Ruby-3.0)

mrbgems/mruby-binding (depending mrbgems/mruby-binding-core and mrbgems/mruby-eval)

Binding#eval method


mrbgems/mruby-binding-core (no dependence)

Binding class
Binding#local_variable_defined? method
Binding#local_variable_get method
Binding#local_variable_set method
Binding#local_variables method
Binding#receiver method
Binding#source_location method
Kernel#binding method


mrbgems/mruby-proc-binding (depending mrbgems/mruby-binding)

Proc#binding method


Not implemented

Binding#irb (I'm interested in it, but I'm not sure if I'll implement it in the future)



Reasons for separating everything but the Binding#eval method as mrbgems/mruby-binding-core
To separate the dependency on mruby-compiler.
It would be nice to have a binding for remote control, but I don't think the mruby-compiler is always needed on the receiving end in that case.
I'd like to try something like kishima-san's remote mirb at some point.
(youtube) Remote mirb on M5Stack using mruby/c
Reasons for separating the Proc#binding method as mrbgems/mruby-proc-binding
Because there are methods in core mrbgems that return proc/lambda objects, we want to minimize the problems that can arise from being able to manipulate internal variables.
By keeping them separate as different mrbgem, each user can decide if they want to include them or not.
ref: Feature #7702: Remove Proc#binding - Ruby master - Ruby Issue Tracking System
But black magic is fascinating.......
Limitations

The maximum number of local variables (bind.eval(""var = 1"") or bind.local_variable_set(:var, 1)) that can be added is 50 (net is 49 because self is included).
This is defined as the MRB_IREP_LVAR_MERGE_LIMIT constant (can be specified in build_config in the range 8..240).
It is precomputed before variables are taken in, and if the result exceeds the limit, all local variables before the addition are lost and an exception is raised.
See also: mrb_proc_merge_lvar()

Implementation Overview

Extend the private global function mrb_exec_irep() defined in src/vm.c to allow specifying a hook function to be called when returning from a given proc.
If a binding object is specified in Kernel.#eval, the return from eval is now hooked and the defined local variables are incorporated into the binding object.
The binding object will hold a proc object that will be used as a space for dynamically added local variables. From this variable space, it references the calling proc.

Finally
When I commented on #3468 I thought it would not be possible to add local variables to binding objects, but I was able to work it out.
I hope there are no bugs left that lead to SIGSEGV.......","🙀 I'm sorry, there was a bug in this implementation.
The variable defined in binding.eval cannot be referenced well from within the proc object.
bx = binding
block = bx.eval(""a = 1; proc { a }"")
bx.eval(""a = 2"")
p bx.local_variable_get(:a)
p block.call  # Expect 2 but return 1 due to a bug
The cause is that even after eval ends, the proc inside keeps the old proc and keeps referencing that variable.
This conceals the a in the variable space that the binding object holds directly.
As a fix, I'm currently thinking of pre-parsed and merging variables before doing eval inside binding.eval.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5362,2021-02-22T15:13:37Z,2021-02-25T12:15:24Z,2021-06-23T12:31:51Z,MERGED,True,831,73,17,https://github.com/dearblue,Binding,5,[],https://github.com/mruby/mruby/pull/5362,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5362#issuecomment-866390553,"I have implemented Binding. This is a continuation from #3468.
mrbgems to be added
Implementations of new classes and methods (compared to Ruby-3.0)

mrbgems/mruby-binding (depending mrbgems/mruby-binding-core and mrbgems/mruby-eval)

Binding#eval method


mrbgems/mruby-binding-core (no dependence)

Binding class
Binding#local_variable_defined? method
Binding#local_variable_get method
Binding#local_variable_set method
Binding#local_variables method
Binding#receiver method
Binding#source_location method
Kernel#binding method


mrbgems/mruby-proc-binding (depending mrbgems/mruby-binding)

Proc#binding method


Not implemented

Binding#irb (I'm interested in it, but I'm not sure if I'll implement it in the future)



Reasons for separating everything but the Binding#eval method as mrbgems/mruby-binding-core
To separate the dependency on mruby-compiler.
It would be nice to have a binding for remote control, but I don't think the mruby-compiler is always needed on the receiving end in that case.
I'd like to try something like kishima-san's remote mirb at some point.
(youtube) Remote mirb on M5Stack using mruby/c
Reasons for separating the Proc#binding method as mrbgems/mruby-proc-binding
Because there are methods in core mrbgems that return proc/lambda objects, we want to minimize the problems that can arise from being able to manipulate internal variables.
By keeping them separate as different mrbgem, each user can decide if they want to include them or not.
ref: Feature #7702: Remove Proc#binding - Ruby master - Ruby Issue Tracking System
But black magic is fascinating.......
Limitations

The maximum number of local variables (bind.eval(""var = 1"") or bind.local_variable_set(:var, 1)) that can be added is 50 (net is 49 because self is included).
This is defined as the MRB_IREP_LVAR_MERGE_LIMIT constant (can be specified in build_config in the range 8..240).
It is precomputed before variables are taken in, and if the result exceeds the limit, all local variables before the addition are lost and an exception is raised.
See also: mrb_proc_merge_lvar()

Implementation Overview

Extend the private global function mrb_exec_irep() defined in src/vm.c to allow specifying a hook function to be called when returning from a given proc.
If a binding object is specified in Kernel.#eval, the return from eval is now hooked and the defined local variables are incorporated into the binding object.
The binding object will hold a proc object that will be used as a space for dynamically added local variables. From this variable space, it references the calling proc.

Finally
When I commented on #3468 I thought it would not be possible to add local variables to binding objects, but I was able to work it out.
I hope there are no bugs left that lead to SIGSEGV.......",I created a new issue #5491 for you. Shall I investigate it? Or do you wish to fix it by yourself?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5362,2021-02-22T15:13:37Z,2021-02-25T12:15:24Z,2021-06-23T12:31:51Z,MERGED,True,831,73,17,https://github.com/dearblue,Binding,5,[],https://github.com/mruby/mruby/pull/5362,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5362#issuecomment-866788214,"I have implemented Binding. This is a continuation from #3468.
mrbgems to be added
Implementations of new classes and methods (compared to Ruby-3.0)

mrbgems/mruby-binding (depending mrbgems/mruby-binding-core and mrbgems/mruby-eval)

Binding#eval method


mrbgems/mruby-binding-core (no dependence)

Binding class
Binding#local_variable_defined? method
Binding#local_variable_get method
Binding#local_variable_set method
Binding#local_variables method
Binding#receiver method
Binding#source_location method
Kernel#binding method


mrbgems/mruby-proc-binding (depending mrbgems/mruby-binding)

Proc#binding method


Not implemented

Binding#irb (I'm interested in it, but I'm not sure if I'll implement it in the future)



Reasons for separating everything but the Binding#eval method as mrbgems/mruby-binding-core
To separate the dependency on mruby-compiler.
It would be nice to have a binding for remote control, but I don't think the mruby-compiler is always needed on the receiving end in that case.
I'd like to try something like kishima-san's remote mirb at some point.
(youtube) Remote mirb on M5Stack using mruby/c
Reasons for separating the Proc#binding method as mrbgems/mruby-proc-binding
Because there are methods in core mrbgems that return proc/lambda objects, we want to minimize the problems that can arise from being able to manipulate internal variables.
By keeping them separate as different mrbgem, each user can decide if they want to include them or not.
ref: Feature #7702: Remove Proc#binding - Ruby master - Ruby Issue Tracking System
But black magic is fascinating.......
Limitations

The maximum number of local variables (bind.eval(""var = 1"") or bind.local_variable_set(:var, 1)) that can be added is 50 (net is 49 because self is included).
This is defined as the MRB_IREP_LVAR_MERGE_LIMIT constant (can be specified in build_config in the range 8..240).
It is precomputed before variables are taken in, and if the result exceeds the limit, all local variables before the addition are lost and an exception is raised.
See also: mrb_proc_merge_lvar()

Implementation Overview

Extend the private global function mrb_exec_irep() defined in src/vm.c to allow specifying a hook function to be called when returning from a given proc.
If a binding object is specified in Kernel.#eval, the return from eval is now hooked and the defined local variables are incorporated into the binding object.
The binding object will hold a proc object that will be used as a space for dynamically added local variables. From this variable space, it references the calling proc.

Finally
When I commented on #3468 I thought it would not be possible to add local variables to binding objects, but I was able to work it out.
I hope there are no bugs left that lead to SIGSEGV.......","Thank you for creating a new issue.
I am working on a fix. Please give me some time.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5362,2021-02-22T15:13:37Z,2021-02-25T12:15:24Z,2021-06-23T12:31:51Z,MERGED,True,831,73,17,https://github.com/dearblue,Binding,5,[],https://github.com/mruby/mruby/pull/5362,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5362#issuecomment-866795012,"I have implemented Binding. This is a continuation from #3468.
mrbgems to be added
Implementations of new classes and methods (compared to Ruby-3.0)

mrbgems/mruby-binding (depending mrbgems/mruby-binding-core and mrbgems/mruby-eval)

Binding#eval method


mrbgems/mruby-binding-core (no dependence)

Binding class
Binding#local_variable_defined? method
Binding#local_variable_get method
Binding#local_variable_set method
Binding#local_variables method
Binding#receiver method
Binding#source_location method
Kernel#binding method


mrbgems/mruby-proc-binding (depending mrbgems/mruby-binding)

Proc#binding method


Not implemented

Binding#irb (I'm interested in it, but I'm not sure if I'll implement it in the future)



Reasons for separating everything but the Binding#eval method as mrbgems/mruby-binding-core
To separate the dependency on mruby-compiler.
It would be nice to have a binding for remote control, but I don't think the mruby-compiler is always needed on the receiving end in that case.
I'd like to try something like kishima-san's remote mirb at some point.
(youtube) Remote mirb on M5Stack using mruby/c
Reasons for separating the Proc#binding method as mrbgems/mruby-proc-binding
Because there are methods in core mrbgems that return proc/lambda objects, we want to minimize the problems that can arise from being able to manipulate internal variables.
By keeping them separate as different mrbgem, each user can decide if they want to include them or not.
ref: Feature #7702: Remove Proc#binding - Ruby master - Ruby Issue Tracking System
But black magic is fascinating.......
Limitations

The maximum number of local variables (bind.eval(""var = 1"") or bind.local_variable_set(:var, 1)) that can be added is 50 (net is 49 because self is included).
This is defined as the MRB_IREP_LVAR_MERGE_LIMIT constant (can be specified in build_config in the range 8..240).
It is precomputed before variables are taken in, and if the result exceeds the limit, all local variables before the addition are lost and an exception is raised.
See also: mrb_proc_merge_lvar()

Implementation Overview

Extend the private global function mrb_exec_irep() defined in src/vm.c to allow specifying a hook function to be called when returning from a given proc.
If a binding object is specified in Kernel.#eval, the return from eval is now hooked and the defined local variables are incorporated into the binding object.
The binding object will hold a proc object that will be used as a space for dynamically added local variables. From this variable space, it references the calling proc.

Finally
When I commented on #3468 I thought it would not be possible to add local variables to binding objects, but I was able to work it out.
I hope there are no bugs left that lead to SIGSEGV.......",OK.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/katzer,1,https://github.com/mruby/mruby/pull/5363,Fixes failures when you wrapped all mruby tasks under a namespace,Fixes failures when you wrapped all mruby tasks under a namespace,True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5363#issuecomment-783781343,Fixes failures when you wrapped all mruby tasks under a namespace,"This change does not work with rake -m.
rake -m will execute prerequisites in parallel. For example, rake all will execute gensym and build in parallel, but build may fail because build depends on gensym (in fact, CI has failed).

Fixes failures when you wrapped all mruby tasks under a namespace

Could you please show us the code that reproduces this issue?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5363#issuecomment-784151138,Fixes failures when you wrapped all mruby tasks under a namespace,Thank you for the pull-request. But I don't merge a PR that fails CI.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/katzer,4,https://github.com/mruby/mruby/pull/5363#issuecomment-784174443,Fixes failures when you wrapped all mruby tasks under a namespace,I tried without -m 🙈. Would be nice if you update the contribution guidelines.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/katzer,5,https://github.com/mruby/mruby/pull/5363#issuecomment-784176689,Fixes failures when you wrapped all mruby tasks under a namespace,"Could you please show us the code that reproduces this issue?

Imagine you have your own rake build. To avoid naming conflicts I load the mruby's Rakefile within an namespace. Then all mruby tasks have a prefix like mruby:build.
That was working until 3.0.0-beta. Now it fails. Either the rake tasks does not exist because of the added namespace or it will invoke the wrong task.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/shuujii,6,https://github.com/mruby/mruby/pull/5363#issuecomment-784233589,Fixes failures when you wrapped all mruby tasks under a namespace,"Do you mean to edit Rakefile directly and add namespace? If so, I do not recommend it as such things are generally unsupported. For example, I think it is better to use another way such as the following.
# your_rakefile
namespace :mruby do
  %w[all test].each do |task_name|
    task task_name do
      sh *%W[rake -f mruby/Rakefile #{task_name}]
    end
  end
end
namespace :your do
  task :task do |t|
    puts t.name
  end
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/katzer,7,https://github.com/mruby/mruby/pull/5363#issuecomment-784255128,Fixes failures when you wrapped all mruby tasks under a namespace,"I did not edit the external Rakefile, instead something like that:
namespace :mruby do
  Dir.chdir('mruby') { load 'Rakefile' }
end

task build: 'mruby:build' do
  ...
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/katzer,8,https://github.com/mruby/mruby/pull/5363#issuecomment-784255841,Fixes failures when you wrapped all mruby tasks under a namespace,I've updated my PR already to be compatible with rake -m,True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/matz,9,https://github.com/mruby/mruby/pull/5363#issuecomment-784263484,Fixes failures when you wrapped all mruby tasks under a namespace,Thank you for the update. I will review.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/shuujii,10,https://github.com/mruby/mruby/pull/5363#issuecomment-784701590,Fixes failures when you wrapped all mruby tasks under a namespace,"@katzer, thank you for creating the example and the new patch. However, at least rake mruby:test doesn't seem to work, because some explicitly specify top-level tasks.

  
    
      mruby/tasks/test.rake
    
    
         Line 13
      in
      a9ebd47
    
  
  
    

        
          
           task :bin => ""rake:all"" do 
        
    
  


I think this can be fixed as well, but I'm not sure if we can guarantee that all tasks will work. Even if it does, I'm a little worried that it won't be overly complex or hinder future improvements.
BTW, build task (tasks without description) are internal tasks and are not assumed to be specified directly.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5363,2021-02-22T16:18:47Z,2021-03-08T19:58:51Z,2021-03-08T19:59:08Z,CLOSED,False,4,4,2,https://github.com/katzer,Specify tasks as dependencies rather then manual invocation,2,[],https://github.com/mruby/mruby/pull/5363,https://github.com/katzer,11,https://github.com/mruby/mruby/pull/5363#issuecomment-785242144,Fixes failures when you wrapped all mruby tasks under a namespace,"@Shokuji Good point. I tested against the stable branch. Now I see the issue...
What what the reason for 3cf0e85?
It works fine without the rake: toplevel namespace",True,{}
mruby/mruby,https://github.com/mruby/mruby,5364,2021-02-23T07:17:24Z,2021-02-23T07:43:38Z,2021-02-23T07:43:45Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,Bump actions/setup-node from v2.1.4 to v2.1.5,1,['dependencies'],https://github.com/mruby/mruby/pull/5364,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5364,"Bumps actions/setup-node from v2.1.4 to v2.1.5.

Release notes
Sourced from actions/setup-node's releases.

v2.1.5 Release
Improve error and warning line number handling (problem matcher regex)



Commits

46071b5 Fix TypeScript error line/column (#125)
05f0551 chore: operating-system -> os (#184)
23bdee1 Clarifications to the README (#167) (#229)
4257181 Bump acorn from 5.7.3 to 5.7.4 (#122)
7f4d522 Bump lodash from 4.17.15 to 4.17.19 (#174)
68fafec refactor: use core.info instead of console.log (#185)
See full diff in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/setup-node from v2.1.4 to v2.1.5.

Release notes
Sourced from actions/setup-node's releases.

v2.1.5 Release
Improve error and warning line number handling (problem matcher regex)



Commits

46071b5 Fix TypeScript error line/column (#125)
05f0551 chore: operating-system -> os (#184)
23bdee1 Clarifications to the README (#167) (#229)
4257181 Bump acorn from 5.7.3 to 5.7.4 (#122)
7f4d522 Bump lodash from 4.17.15 to 4.17.19 (#174)
68fafec refactor: use core.info instead of console.log (#185)
See full diff in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5367,2021-02-28T07:50:05Z,2021-02-28T11:26:33Z,2021-03-14T08:10:54Z,MERGED,True,9,2,2,https://github.com/dearblue,Support libedit on mirb for FreeBSD,1,[],https://github.com/mruby/mruby/pull/5367,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5367,"Since FreeBSD 11, which came out over four years ago, ""readline"" has been removed from the base system.
I thought it was strange...","Since FreeBSD 11, which came out over four years ago, ""readline"" has been removed from the base system.
I thought it was strange...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5368,2021-03-01T00:20:31Z,2021-03-02T07:53:34Z,2021-03-15T14:14:10Z,MERGED,True,49,11,12,https://github.com/jbampton,feat: add pre-commit framework,1,[],https://github.com/mruby/mruby/pull/5368,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5368,"Official -> ""Git hook scripts are useful for identifying simple issues before submission to code review. We run our hooks on every commit to automatically point out issues in code such as missing semicolons, trailing whitespace, and debug statements. By pointing these issues out before code review, this allows a code reviewer to focus on the architecture of a change while not wasting time with trivial style nitpicks.""
https://pre-commit.com/
Using a pre-commit framework speeds up development as a lot of tests can be run on the local machine giving instant feedback.  So we don't have to wait for the CI / GitHub actions to run to get feedback.  The pre-commit automatically fixes some of the issues when you do git commit and if there are any issues the tests are marked as red failed.  Then you will need to commit again so that all the tests pass green.
There are many more pre-commit checks listed here -> https://pre-commit.com/hooks.html
Lets get this PR merged and then I will look at adding more pre-commit tests 👍
The next image shows the final pre-commit run -> running for this PR on my local machine:","Official -> ""Git hook scripts are useful for identifying simple issues before submission to code review. We run our hooks on every commit to automatically point out issues in code such as missing semicolons, trailing whitespace, and debug statements. By pointing these issues out before code review, this allows a code reviewer to focus on the architecture of a change while not wasting time with trivial style nitpicks.""
https://pre-commit.com/
Using a pre-commit framework speeds up development as a lot of tests can be run on the local machine giving instant feedback.  So we don't have to wait for the CI / GitHub actions to run to get feedback.  The pre-commit automatically fixes some of the issues when you do git commit and if there are any issues the tests are marked as red failed.  Then you will need to commit again so that all the tests pass green.
There are many more pre-commit checks listed here -> https://pre-commit.com/hooks.html
Lets get this PR merged and then I will look at adding more pre-commit tests 👍
The next image shows the final pre-commit run -> running for this PR on my local machine:",True,{}
mruby/mruby,https://github.com/mruby/mruby,5368,2021-03-01T00:20:31Z,2021-03-02T07:53:34Z,2021-03-15T14:14:10Z,MERGED,True,49,11,12,https://github.com/jbampton,feat: add pre-commit framework,1,[],https://github.com/mruby/mruby/pull/5368,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5368#issuecomment-798845210,"Official -> ""Git hook scripts are useful for identifying simple issues before submission to code review. We run our hooks on every commit to automatically point out issues in code such as missing semicolons, trailing whitespace, and debug statements. By pointing these issues out before code review, this allows a code reviewer to focus on the architecture of a change while not wasting time with trivial style nitpicks.""
https://pre-commit.com/
Using a pre-commit framework speeds up development as a lot of tests can be run on the local machine giving instant feedback.  So we don't have to wait for the CI / GitHub actions to run to get feedback.  The pre-commit automatically fixes some of the issues when you do git commit and if there are any issues the tests are marked as red failed.  Then you will need to commit again so that all the tests pass green.
There are many more pre-commit checks listed here -> https://pre-commit.com/hooks.html
Lets get this PR merged and then I will look at adding more pre-commit tests 👍
The next image shows the final pre-commit run -> running for this PR on my local machine:","I'm a little late, but here's a report on the results of trying out pre-commit.
In my machine, the related installation of pre-commit fails, so I can't do git commit anymore.
That's why I did a ""pre-commit uninstall"".
% uname -v
FreeBSD 12.2-RELEASE-p4 GENERIC

% sudo pkg install devel/py-pre-commit
...SNIP...

% pre-commit install
pre-commit installed at .git/hooks/pre-commit

% touch test-precommit
% git add test-precommit
% git ci -m test
[WARNING] Unstaged files detected.
[INFO] Stashing unstaged files to /usr/home/dearblue/.cache/pre-commit/patch1615701609.
[INFO] Initializing environment for https://github.com/pre-commit/pre-commit-hooks.
[INFO] Initializing environment for https://github.com/igorshubovych/markdownlint-cli.
[INFO] Initializing environment for https://github.com/adrienverge/yamllint.
[INFO] Installing environment for https://github.com/pre-commit/pre-commit-hooks.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/igorshubovych/markdownlint-cli.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Restored changes from /usr/home/dearblue/.cache/pre-commit/patch1615701609.
An unexpected error has occurred: CalledProcessError: command: ('/usr/local/bin/python3.7', '-mnodeenv', '--prebuilt', '--clean-src', '/usr/home/dearblue/.cache/pre-commit/repoq916t6ot/node_env-default')
return code: 1
expected return code: 0
stdout: (none)
stderr:
     * Install prebuilt node (15.11.0) .
    Traceback (most recent call last):
      File ""/usr/local/lib/python3.7/runpy.py"", line 193, in _run_module_as_main
        ""__main__"", mod_spec)
      File ""/usr/local/lib/python3.7/runpy.py"", line 85, in _run_code
        exec(code, run_globals)
      File ""/usr/local/lib/python3.7/site-packages/nodeenv.py"", line 1471, in <module>
        main()
      File ""/usr/local/lib/python3.7/site-packages/nodeenv.py"", line 1065, in main
        create_environment(env_dir, opt)
      File ""/usr/local/lib/python3.7/site-packages/nodeenv.py"", line 951, in create_environment
        install_node(env_dir, src_dir, opt)
      File ""/usr/local/lib/python3.7/site-packages/nodeenv.py"", line 716, in install_node
        install_node_wrapped(env_dir, src_dir, opt)
      File ""/usr/local/lib/python3.7/site-packages/nodeenv.py"", line 738, in install_node_wrapped
        download_node_src(node_url, src_dir, opt)
      File ""/usr/local/lib/python3.7/site-packages/nodeenv.py"", line 565, in download_node_src
        dl_contents = io.BytesIO(urlopen(node_url).read())
      File ""/usr/local/lib/python3.7/site-packages/nodeenv.py"", line 601, in urlopen
        return urllib2.urlopen(req)
      File ""/usr/local/lib/python3.7/urllib/request.py"", line 222, in urlopen
        return opener.open(url, data, timeout)
      File ""/usr/local/lib/python3.7/urllib/request.py"", line 531, in open
        response = meth(req, response)
      File ""/usr/local/lib/python3.7/urllib/request.py"", line 641, in http_response
        'http', request, response, code, msg, hdrs)
      File ""/usr/local/lib/python3.7/urllib/request.py"", line 569, in error
        return self._call_chain(*args)
      File ""/usr/local/lib/python3.7/urllib/request.py"", line 503, in _call_chain
        result = func(*args)
      File ""/usr/local/lib/python3.7/urllib/request.py"", line 649, in http_error_default
        raise HTTPError(req.full_url, code, msg, hdrs, fp)
    urllib.error.HTTPError: HTTP Error 404: Not Found

Check the log at /usr/home/dearblue/.cache/pre-commit/pre-commit.log",True,{}
mruby/mruby,https://github.com/mruby/mruby,5368,2021-03-01T00:20:31Z,2021-03-02T07:53:34Z,2021-03-15T14:14:10Z,MERGED,True,49,11,12,https://github.com/jbampton,feat: add pre-commit framework,1,[],https://github.com/mruby/mruby/pull/5368,https://github.com/jbampton,3,https://github.com/mruby/mruby/pull/5368#issuecomment-798888959,"Official -> ""Git hook scripts are useful for identifying simple issues before submission to code review. We run our hooks on every commit to automatically point out issues in code such as missing semicolons, trailing whitespace, and debug statements. By pointing these issues out before code review, this allows a code reviewer to focus on the architecture of a change while not wasting time with trivial style nitpicks.""
https://pre-commit.com/
Using a pre-commit framework speeds up development as a lot of tests can be run on the local machine giving instant feedback.  So we don't have to wait for the CI / GitHub actions to run to get feedback.  The pre-commit automatically fixes some of the issues when you do git commit and if there are any issues the tests are marked as red failed.  Then you will need to commit again so that all the tests pass green.
There are many more pre-commit checks listed here -> https://pre-commit.com/hooks.html
Lets get this PR merged and then I will look at adding more pre-commit tests 👍
The next image shows the final pre-commit run -> running for this PR on my local machine:",Seems the error message mentions missing Node:,True,{}
mruby/mruby,https://github.com/mruby/mruby,5368,2021-03-01T00:20:31Z,2021-03-02T07:53:34Z,2021-03-15T14:14:10Z,MERGED,True,49,11,12,https://github.com/jbampton,feat: add pre-commit framework,1,[],https://github.com/mruby/mruby/pull/5368,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5368#issuecomment-798900259,"Official -> ""Git hook scripts are useful for identifying simple issues before submission to code review. We run our hooks on every commit to automatically point out issues in code such as missing semicolons, trailing whitespace, and debug statements. By pointing these issues out before code review, this allows a code reviewer to focus on the architecture of a change while not wasting time with trivial style nitpicks.""
https://pre-commit.com/
Using a pre-commit framework speeds up development as a lot of tests can be run on the local machine giving instant feedback.  So we don't have to wait for the CI / GitHub actions to run to get feedback.  The pre-commit automatically fixes some of the issues when you do git commit and if there are any issues the tests are marked as red failed.  Then you will need to commit again so that all the tests pass green.
There are many more pre-commit checks listed here -> https://pre-commit.com/hooks.html
Lets get this PR merged and then I will look at adding more pre-commit tests 👍
The next image shows the final pre-commit run -> running for this PR on my local machine:","Hmmm, node is already installed from a package by FreeBSD, and markdownlint works fine with sudo npm install -g markdownlint-cli.
% node --version
v15.9.0
% nodeenv --version
1.5.0
Maybe the node version is old, but building from raw source code that I don't understand is very difficult for me...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5368,2021-03-01T00:20:31Z,2021-03-02T07:53:34Z,2021-03-15T14:14:10Z,MERGED,True,49,11,12,https://github.com/jbampton,feat: add pre-commit framework,1,[],https://github.com/mruby/mruby/pull/5368,https://github.com/jbampton,5,https://github.com/mruby/mruby/pull/5368#issuecomment-798902687,"Official -> ""Git hook scripts are useful for identifying simple issues before submission to code review. We run our hooks on every commit to automatically point out issues in code such as missing semicolons, trailing whitespace, and debug statements. By pointing these issues out before code review, this allows a code reviewer to focus on the architecture of a change while not wasting time with trivial style nitpicks.""
https://pre-commit.com/
Using a pre-commit framework speeds up development as a lot of tests can be run on the local machine giving instant feedback.  So we don't have to wait for the CI / GitHub actions to run to get feedback.  The pre-commit automatically fixes some of the issues when you do git commit and if there are any issues the tests are marked as red failed.  Then you will need to commit again so that all the tests pass green.
There are many more pre-commit checks listed here -> https://pre-commit.com/hooks.html
Lets get this PR merged and then I will look at adding more pre-commit tests 👍
The next image shows the final pre-commit run -> running for this PR on my local machine:","Can you install pre-commit in one of the standard ways ?
https://pre-commit.com/

I am running pre-commit version 2.11.1

Under mruby folder I have:",True,{}
mruby/mruby,https://github.com/mruby/mruby,5368,2021-03-01T00:20:31Z,2021-03-02T07:53:34Z,2021-03-15T14:14:10Z,MERGED,True,49,11,12,https://github.com/jbampton,feat: add pre-commit framework,1,[],https://github.com/mruby/mruby/pull/5368,https://github.com/dearblue,6,https://github.com/mruby/mruby/pull/5368#issuecomment-798914227,"Official -> ""Git hook scripts are useful for identifying simple issues before submission to code review. We run our hooks on every commit to automatically point out issues in code such as missing semicolons, trailing whitespace, and debug statements. By pointing these issues out before code review, this allows a code reviewer to focus on the architecture of a change while not wasting time with trivial style nitpicks.""
https://pre-commit.com/
Using a pre-commit framework speeds up development as a lot of tests can be run on the local machine giving instant feedback.  So we don't have to wait for the CI / GitHub actions to run to get feedback.  The pre-commit automatically fixes some of the issues when you do git commit and if there are any issues the tests are marked as red failed.  Then you will need to commit again so that all the tests pass green.
There are many more pre-commit checks listed here -> https://pre-commit.com/hooks.html
Lets get this PR merged and then I will look at adding more pre-commit tests 👍
The next image shows the final pre-commit run -> running for this PR on my local machine:","Thanks! The pre-commit is works!
As it turns out, the FreeBSD package that provided it was out of date.
% sudo pkg delete py37-pre-commit
...SNIP...
[1/1] Deleting files for py37-pre-commit-1.21.0: 100%

% sudo pip install pre-commit
...SNIP...
Installing collected packages: pre-commit
Successfully installed pre-commit-2.11.1
However, it seems that unmanaged files are also covered by yamllint, which is a problem.
% pre-commit run -v --all-files
identity.................................................................Passed
- hook id: identity
- duration: 0.17s

...SNIP...

Check hooks apply to the repository......................................Passed
- hook id: check-hooks-apply
- duration: 0.41s
Check for added large files..............................................Passed
- hook id: check-added-large-files
- duration: 0.36s
Check for case conflicts.................................................Passed
- hook id: check-case-conflict
- duration: 0.23s
Check for merge conflicts................................................Passed
- hook id: check-merge-conflict
- duration: 0.16s
Check Yaml...............................................................Passed
- hook id: check-yaml
- duration: 0.44s
Fix End of Files.........................................................Passed
- hook id: end-of-file-fixer
- duration: 0.17s
fix UTF-8 byte order marker..............................................Passed
- hook id: fix-byte-order-marker
- duration: 0.17s
Mixed line ending........................................................Passed
- hook id: mixed-line-ending
- duration: 0.23s
Trim Trailing Whitespace.................................................Passed
- hook id: trailing-whitespace
- duration: 0.24s
Run markdownlint.........................................................Passed
- hook id: markdownlint
- duration: 0.68s
Check YAML files with yamllint...........................................Failed
- hook id: yamllint
- duration: 14.7s
- exit code: 1

./build_config/concept.yaml
  4:14      warning  too few spaces before comment  (comments)
  9:10      warning  too few spaces before comment  (comments)
  10:8      warning  too few spaces before comment  (comments)
  13:3      error    wrong indentation: expected 4 but found 2  (indentation)
  16:1      error    wrong indentation: expected 2 but found 0  (indentation)
  18:1      error    wrong indentation: expected 2 but found 0  (indentation)
  21:5      error    wrong indentation: expected 6 but found 4  (indentation)
  22:9      warning  too few spaces before comment  (comments)

./build_config/concept.yaml
  4:14      warning  too few spaces before comment  (comments)
  9:10      warning  too few spaces before comment  (comments)
  10:8      warning  too few spaces before comment  (comments)
  13:3      error    wrong indentation: expected 4 but found 2  (indentation)
  16:1      error    wrong indentation: expected 2 but found 0  (indentation)
  18:1      error    wrong indentation: expected 2 but found 0  (indentation)
  21:5      error    wrong indentation: expected 6 but found 4  (indentation)
  22:9      warning  too few spaces before comment  (comments)

./build_config/concept.yaml
  4:14      warning  too few spaces before comment  (comments)
  9:10      warning  too few spaces before comment  (comments)
  10:8      warning  too few spaces before comment  (comments)
  13:3      error    wrong indentation: expected 4 but found 2  (indentation)
  16:1      error    wrong indentation: expected 2 but found 0  (indentation)
  18:1      error    wrong indentation: expected 2 but found 0  (indentation)
  21:5      error    wrong indentation: expected 6 but found 4  (indentation)
  22:9      warning  too few spaces before comment  (comments)
I have therefore changed the .pre-commit-config.yaml file, but I am not sure if it is correct.
diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index 0a9da963f..6d48f4125 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -35,5 +35,5 @@ repos:
     hooks:
       - id: yamllint
         name: Check YAML files with yamllint
-        entry: yamllint --strict .
+        entry: yamllint --strict
         types: [yaml]",True,{}
mruby/mruby,https://github.com/mruby/mruby,5368,2021-03-01T00:20:31Z,2021-03-02T07:53:34Z,2021-03-15T14:14:10Z,MERGED,True,49,11,12,https://github.com/jbampton,feat: add pre-commit framework,1,[],https://github.com/mruby/mruby/pull/5368,https://github.com/jbampton,7,https://github.com/mruby/mruby/pull/5368#issuecomment-798915649,"Official -> ""Git hook scripts are useful for identifying simple issues before submission to code review. We run our hooks on every commit to automatically point out issues in code such as missing semicolons, trailing whitespace, and debug statements. By pointing these issues out before code review, this allows a code reviewer to focus on the architecture of a change while not wasting time with trivial style nitpicks.""
https://pre-commit.com/
Using a pre-commit framework speeds up development as a lot of tests can be run on the local machine giving instant feedback.  So we don't have to wait for the CI / GitHub actions to run to get feedback.  The pre-commit automatically fixes some of the issues when you do git commit and if there are any issues the tests are marked as red failed.  Then you will need to commit again so that all the tests pass green.
There are many more pre-commit checks listed here -> https://pre-commit.com/hooks.html
Lets get this PR merged and then I will look at adding more pre-commit tests 👍
The next image shows the final pre-commit run -> running for this PR on my local machine:","We can ignore files or directories from yamllint:
https://yamllint.readthedocs.io/en/stable/configuration.html#ignoring-paths",True,{}
mruby/mruby,https://github.com/mruby/mruby,5368,2021-03-01T00:20:31Z,2021-03-02T07:53:34Z,2021-03-15T14:14:10Z,MERGED,True,49,11,12,https://github.com/jbampton,feat: add pre-commit framework,1,[],https://github.com/mruby/mruby/pull/5368,https://github.com/dearblue,8,https://github.com/mruby/mruby/pull/5368#issuecomment-799453467,"Official -> ""Git hook scripts are useful for identifying simple issues before submission to code review. We run our hooks on every commit to automatically point out issues in code such as missing semicolons, trailing whitespace, and debug statements. By pointing these issues out before code review, this allows a code reviewer to focus on the architecture of a change while not wasting time with trivial style nitpicks.""
https://pre-commit.com/
Using a pre-commit framework speeds up development as a lot of tests can be run on the local machine giving instant feedback.  So we don't have to wait for the CI / GitHub actions to run to get feedback.  The pre-commit automatically fixes some of the issues when you do git commit and if there are any issues the tests are marked as red failed.  Then you will need to commit again so that all the tests pass green.
There are many more pre-commit checks listed here -> https://pre-commit.com/hooks.html
Lets get this PR merged and then I will look at adding more pre-commit tests 👍
The next image shows the final pre-commit run -> running for this PR on my local machine:","I don't think it's realistic to add every single file/directory that is not managed by git.
I tried looking at the pre-commit documentation a bit, and it seems that the necessary arguments are passed each time the command is invoked.


The configuration file I tried:
diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index 0a9da963f..d7943a2bc 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -9,6 +9,12 @@ repos:
     hooks:
       - id: identity
       - id: check-hooks-apply
+  - repo: local
+    hooks:
+    - id: checkargv
+      name: test argv by ruby
+      entry: ruby30 -e 'p ARGV; exit 1'
+      language: system
   - repo: https://github.com/pre-commit/pre-commit-hooks
     rev: v3.4.0
     hooks:
@@ -35,5 +41,5 @@ repos:
     hooks:
       - id: yamllint
         name: Check YAML files with yamllint
-        entry: yamllint --strict .
+        entry: yamllint --strict
         types: [yaml]

Now, when I run pre-commit run --all-files, I see that ruby30 was called several times.
I can also confirm that this change also causes errors in .pre-commit-config.yaml.


Currently it is run as yamlint --strict . but I don't think it is necessary to specify the directory.
Is there a different reason that I am not aware of?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5370,2021-03-04T13:04:42Z,2021-03-04T13:46:10Z,2021-03-30T03:17:50Z,MERGED,True,0,0,1,https://github.com/shuujii,Remove unused `mrblib/init_mrblib.c`,1,[],https://github.com/mruby/mruby/pull/5370,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5370,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5371,2021-03-04T13:19:03Z,2021-03-04T13:47:09Z,2021-03-30T03:17:50Z,MERGED,True,5,7,2,https://github.com/shuujii,Update minimal build configuration [ci skip],1,[],https://github.com/mruby/mruby/pull/5371,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5371,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5372,2021-03-05T04:55:31Z,2021-03-05T05:39:42Z,2021-03-30T03:17:49Z,MERGED,True,2,1,1,https://github.com/shuujii,Fix load 64-bit integer from mrb format; fix #5369,1,[],https://github.com/mruby/mruby/pull/5372,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5372,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5373,2021-03-05T08:30:29Z,2021-03-05T08:36:12Z,2021-03-05T08:36:12Z,MERGED,True,18,20,6,https://github.com/mimaki,Merge mruby 3.0.0,3,[],https://github.com/mruby/mruby/pull/5373,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/5373,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5374,2021-03-06T18:30:41Z,2021-03-07T09:12:16Z,2021-03-07T09:17:49Z,MERGED,True,6,6,6,https://github.com/jbampton,chore: fix spelling,1,[],https://github.com/mruby/mruby/pull/5374,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5374,Changed Javascript to JavaScript,Changed Javascript to JavaScript,True,{}
mruby/mruby,https://github.com/mruby/mruby,5375,2021-03-08T05:32:11Z,2021-03-09T07:09:58Z,2021-03-11T18:47:55Z,MERGED,True,1,1,1,https://github.com/lopopolo,bug(presym): Fix mrb_cmp declaration of <=> symbol for funcall,1,[],https://github.com/mruby/mruby/pull/5375,https://github.com/lopopolo,1,https://github.com/mruby/mruby/pull/5375,"mrb_cmp uses MRB_SYM macro for cmp token, which uses the literal symbol :cmp. It should be using MRB_OPSYM(cmp) to use :<=>.
Before
$ rake
$ ./bin/mirb
mirb - Embeddable Interactive Ruby Shell

> class A; include Comparable; def <=>(other); 1; end; end
 => :<=>
> A.new..A.new
undefined method 'cmp' (NoMethodError)

After
$ rake
$ ./bin/mirb
mirb - Embeddable Interactive Ruby Shell

> class A; include Comparable; def <=>(other); 1; end; end
 => :<=>
> A.new..A.new
 => #<A:0x7fcb3000cbc0>..#<A:0x7fcb3000cb60>","mrb_cmp uses MRB_SYM macro for cmp token, which uses the literal symbol :cmp. It should be using MRB_OPSYM(cmp) to use :<=>.
Before
$ rake
$ ./bin/mirb
mirb - Embeddable Interactive Ruby Shell

> class A; include Comparable; def <=>(other); 1; end; end
 => :<=>
> A.new..A.new
undefined method 'cmp' (NoMethodError)

After
$ rake
$ ./bin/mirb
mirb - Embeddable Interactive Ruby Shell

> class A; include Comparable; def <=>(other); 1; end; end
 => :<=>
> A.new..A.new
 => #<A:0x7fcb3000cbc0>..#<A:0x7fcb3000cb60>",True,{}
mruby/mruby,https://github.com/mruby/mruby,5377,2021-03-08T18:38:00Z,2021-03-09T06:03:35Z,2021-03-09T06:17:13Z,MERGED,True,33,33,11,https://github.com/jbampton,chore: fix grammar,1,[],https://github.com/mruby/mruby/pull/5377,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5377,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5378,2021-03-08T18:58:47Z,2021-03-09T06:29:21Z,2021-03-09T07:14:22Z,MERGED,True,2,2,1,https://github.com/jbampton,chore: upgrade markdownlint GitHub Action node version to 14,1,[],https://github.com/mruby/mruby/pull/5378,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5378,Upgrade to  markdownlint-cli version 0.27.1,Upgrade to  markdownlint-cli version 0.27.1,True,{}
mruby/mruby,https://github.com/mruby/mruby,5379,2021-03-15T03:29:49Z,2021-03-15T03:41:33Z,2021-03-30T03:17:49Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `AUTHORS` [ci skip],1,[],https://github.com/mruby/mruby/pull/5379,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5379,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5381,2021-03-17T14:17:50Z,2021-03-18T13:49:20Z,2021-03-27T08:38:10Z,MERGED,True,14,7,1,https://github.com/dearblue,Allow `break` in `build_config`.,1,[],https://github.com/mruby/mruby/pull/5381,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5381,"If I break out of a block given to MRuby::Build.new with break or throw, I will get a seemingly inexplicable error because the presym-related initialization is not done.
% cat build_config1.rb
MRuby::Build.new do
  toolchain
  break
end

% rake CONFIG=build_config1.rb
rake aborted!
external mrbc or mruby-bin-mrbc gem in current('host') or 'host' build is required
/var/tmp/mruby/lib/mruby/build.rb:332:in `mrbcfile'
/var/tmp/mruby/tasks/mrblib.rake:9:in `block in <top (required)>'
/var/tmp/mruby/lib/mruby/build.rb:18:in `instance_eval'
/var/tmp/mruby/lib/mruby/build.rb:18:in `block in each_target'
/var/tmp/mruby/lib/mruby/build.rb:17:in `each'
/var/tmp/mruby/lib/mruby/build.rb:17:in `each_target'
/var/tmp/mruby/tasks/mrblib.rake:1:in `<top (required)>'
/var/tmp/mruby/Rakefile:27:in `load'
/var/tmp/mruby/Rakefile:27:in `<top (required)>'
(See full trace by running task with --trace)
If a non-exceptional global jump occurs, it can be initialized by ensure to solve this problem.","If I break out of a block given to MRuby::Build.new with break or throw, I will get a seemingly inexplicable error because the presym-related initialization is not done.
% cat build_config1.rb
MRuby::Build.new do
  toolchain
  break
end

% rake CONFIG=build_config1.rb
rake aborted!
external mrbc or mruby-bin-mrbc gem in current('host') or 'host' build is required
/var/tmp/mruby/lib/mruby/build.rb:332:in `mrbcfile'
/var/tmp/mruby/tasks/mrblib.rake:9:in `block in <top (required)>'
/var/tmp/mruby/lib/mruby/build.rb:18:in `instance_eval'
/var/tmp/mruby/lib/mruby/build.rb:18:in `block in each_target'
/var/tmp/mruby/lib/mruby/build.rb:17:in `each'
/var/tmp/mruby/lib/mruby/build.rb:17:in `each_target'
/var/tmp/mruby/tasks/mrblib.rake:1:in `<top (required)>'
/var/tmp/mruby/Rakefile:27:in `load'
/var/tmp/mruby/Rakefile:27:in `<top (required)>'
(See full trace by running task with --trace)
If a non-exceptional global jump occurs, it can be initialized by ensure to solve this problem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5383,2021-03-18T08:20:42Z,2021-03-18T11:54:56Z,2021-03-30T03:17:49Z,MERGED,True,59,12,2,https://github.com/shuujii,`Float::NAN/0` should be `Float::NAN`; ref a0b3378b3,1,[],https://github.com/mruby/mruby/pull/5383,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5383,"Before this patch:
$ bin/mruby -e 'p(Float::NAN/0)'
Infinity
After this patch (same as Ruby):
$ bin/mruby -e 'p(Float::NAN/0)'
NaN","Before this patch:
$ bin/mruby -e 'p(Float::NAN/0)'
Infinity
After this patch (same as Ruby):
$ bin/mruby -e 'p(Float::NAN/0)'
NaN",True,{}
mruby/mruby,https://github.com/mruby/mruby,5383,2021-03-18T08:20:42Z,2021-03-18T11:54:56Z,2021-03-30T03:17:49Z,MERGED,True,59,12,2,https://github.com/shuujii,`Float::NAN/0` should be `Float::NAN`; ref a0b3378b3,1,[],https://github.com/mruby/mruby/pull/5383,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5383#issuecomment-801929759,"Before this patch:
$ bin/mruby -e 'p(Float::NAN/0)'
Infinity
After this patch (same as Ruby):
$ bin/mruby -e 'p(Float::NAN/0)'
NaN","Thank you, especially for the tests.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5385,2021-03-21T07:43:51Z,2021-03-22T03:05:03Z,2021-03-30T03:17:48Z,MERGED,True,14,0,1,https://github.com/shuujii,Add configuration for MinGW cross compilation [ci skip],1,[],https://github.com/mruby/mruby/pull/5385,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5385,"With this cross compiler configuration, all tests for full-core gembox on
Windows on GitHub Actions were successful.","With this cross compiler configuration, all tests for full-core gembox on
Windows on GitHub Actions were successful.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5386,2021-03-21T08:59:15Z,2021-03-22T03:06:59Z,2021-03-22T03:06:59Z,MERGED,True,73,0,1,https://github.com/LanzaSchneider,Add example for cross-compiling to Nintendo Switch,1,[],https://github.com/mruby/mruby/pull/5386,https://github.com/LanzaSchneider,1,https://github.com/mruby/mruby/pull/5386,"Cross Compiling configuration for the Nintendo Switch, it requires Nintendo SDK","Cross Compiling configuration for the Nintendo Switch, it requires Nintendo SDK",True,{}
mruby/mruby,https://github.com/mruby/mruby,5387,2021-03-22T03:25:57Z,2021-03-22T03:43:58Z,2021-03-30T03:17:51Z,MERGED,True,1,3,2,https://github.com/shuujii,Use global defines for `mruby-bin-debugger`,1,[],https://github.com/mruby/mruby/pull/5387,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5387,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5388,2021-03-22T03:38:10Z,2021-03-22T03:43:13Z,2021-03-30T03:17:50Z,MERGED,True,2,5,1,https://github.com/shuujii,Reorganize types for `ObjectSpace.count_objects`,1,[],https://github.com/mruby/mruby/pull/5388,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5388,"Addition

T_COMPLEX
T_RATIONAL

Deletion

T_FALSE
T_FREE
T_TRUE
T_SYMBOL
T_UNDEF","Addition

T_COMPLEX
T_RATIONAL

Deletion

T_FALSE
T_FREE
T_TRUE
T_SYMBOL
T_UNDEF",True,{}
mruby/mruby,https://github.com/mruby/mruby,5389,2021-03-26T17:23:56Z,2021-04-10T10:25:52Z,2021-04-10T10:25:52Z,CLOSED,False,22,2,3,https://github.com/take-cheeze,Add IO#getbyte,1,[],https://github.com/mruby/mruby/pull/5389,https://github.com/take-cheeze,1,https://github.com/mruby/mruby/pull/5389,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5391,2021-03-27T08:39:44Z,2021-03-29T08:11:21Z,2021-04-03T07:29:34Z,MERGED,True,18,1,1,https://github.com/dearblue,Fix `SIGSEGV` with mruby-method + mruby-catch,1,[],https://github.com/mruby/mruby/pull/5391,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5391,"Previously, the following code would cause a SIGSEGV.
mm = method(:throw)
define_method(:throw, ->(*args) { mm.call(*args) })
catch { |tag| throw tag }
I think the reason is in the mrb_yield_with_class() function:

Even if a C function is called, CI_ACC_SKIP is used
cipop() is not done if globally jumping from a C function","Previously, the following code would cause a SIGSEGV.
mm = method(:throw)
define_method(:throw, ->(*args) { mm.call(*args) })
catch { |tag| throw tag }
I think the reason is in the mrb_yield_with_class() function:

Even if a C function is called, CI_ACC_SKIP is used
cipop() is not done if globally jumping from a C function",True,{}
mruby/mruby,https://github.com/mruby/mruby,5391,2021-03-27T08:39:44Z,2021-03-29T08:11:21Z,2021-04-03T07:29:34Z,MERGED,True,18,1,1,https://github.com/dearblue,Fix `SIGSEGV` with mruby-method + mruby-catch,1,[],https://github.com/mruby/mruby/pull/5391,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5391#issuecomment-809192773,"Previously, the following code would cause a SIGSEGV.
mm = method(:throw)
define_method(:throw, ->(*args) { mm.call(*args) })
catch { |tag| throw tag }
I think the reason is in the mrb_yield_with_class() function:

Even if a C function is called, CI_ACC_SKIP is used
cipop() is not done if globally jumping from a C function",I just remembered CI_ACC_DIRECT is provided for this purpose. Reverted and fixed.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5392,2021-03-29T08:27:10Z,2021-03-29T08:27:17Z,2021-03-29T08:27:17Z,MERGED,True,1,18,1,https://github.com/matz,"Revert ""Fix `SIGSEGV` with mruby-method + mruby-catch""",1,[],https://github.com/mruby/mruby/pull/5392,https://github.com/matz,1,https://github.com/mruby/mruby/pull/5392,"Reverts #5391
I found a better solution.","Reverts #5391
I found a better solution.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5394,2021-03-30T23:24:18Z,2021-03-31T06:39:47Z,2021-03-31T06:39:47Z,MERGED,True,14,3,4,https://github.com/fundamental,Add support for partial backtraces,2,[],https://github.com/mruby/mruby/pull/5394,https://github.com/fundamental,1,https://github.com/mruby/mruby/pull/5394,"Previously backtraces involving code built without debug information just silently hid stack frames from backtraces.
Consider the code:
[1,2].reverse_each do |val|
  val.invalid_method
end

Before this commit the output without debug symbols was:
trace (most recent call last):
        [1] test.rb:1
test.rb:2: undefined method 'invalid_method' (NoMethodError)

After this commit the output is:
trace (most recent call last):
        [2] test.rb:1
        [1] (unknown):missing-lineno:in reverse_each
test.rb:2: undefined method 'invalid_method' (NoMethodError)

With full debug information the second frame in the backtrace refers to the source in the mruby-array-ext gem.","Previously backtraces involving code built without debug information just silently hid stack frames from backtraces.
Consider the code:
[1,2].reverse_each do |val|
  val.invalid_method
end

Before this commit the output without debug symbols was:
trace (most recent call last):
        [1] test.rb:1
test.rb:2: undefined method 'invalid_method' (NoMethodError)

After this commit the output is:
trace (most recent call last):
        [2] test.rb:1
        [1] (unknown):missing-lineno:in reverse_each
test.rb:2: undefined method 'invalid_method' (NoMethodError)

With full debug information the second frame in the backtrace refers to the source in the mruby-array-ext gem.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5394,2021-03-30T23:24:18Z,2021-03-31T06:39:47Z,2021-03-31T06:39:47Z,MERGED,True,14,3,4,https://github.com/fundamental,Add support for partial backtraces,2,[],https://github.com/mruby/mruby/pull/5394,https://github.com/fundamental,2,https://github.com/mruby/mruby/pull/5394#issuecomment-810646111,"Previously backtraces involving code built without debug information just silently hid stack frames from backtraces.
Consider the code:
[1,2].reverse_each do |val|
  val.invalid_method
end

Before this commit the output without debug symbols was:
trace (most recent call last):
        [1] test.rb:1
test.rb:2: undefined method 'invalid_method' (NoMethodError)

After this commit the output is:
trace (most recent call last):
        [2] test.rb:1
        [1] (unknown):missing-lineno:in reverse_each
test.rb:2: undefined method 'invalid_method' (NoMethodError)

With full debug information the second frame in the backtrace refers to the source in the mruby-array-ext gem.",Looks like this commit is causing some test failures. I'll take a look into updating the test cases.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5394,2021-03-30T23:24:18Z,2021-03-31T06:39:47Z,2021-03-31T06:39:47Z,MERGED,True,14,3,4,https://github.com/fundamental,Add support for partial backtraces,2,[],https://github.com/mruby/mruby/pull/5394,https://github.com/fundamental,3,https://github.com/mruby/mruby/pull/5394#issuecomment-810665798,"Previously backtraces involving code built without debug information just silently hid stack frames from backtraces.
Consider the code:
[1,2].reverse_each do |val|
  val.invalid_method
end

Before this commit the output without debug symbols was:
trace (most recent call last):
        [1] test.rb:1
test.rb:2: undefined method 'invalid_method' (NoMethodError)

After this commit the output is:
trace (most recent call last):
        [2] test.rb:1
        [1] (unknown):missing-lineno:in reverse_each
test.rb:2: undefined method 'invalid_method' (NoMethodError)

With full debug information the second frame in the backtrace refers to the source in the mruby-array-ext gem.",Looks like this should be good to go now.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5395,2021-03-30T23:33:05Z,2021-03-31T01:48:01Z,2021-03-31T01:48:01Z,MERGED,True,76,1,1,https://github.com/fundamental,mrbc: Dump debug info with -g option,1,[],https://github.com/mruby/mruby/pull/5395,https://github.com/fundamental,1,https://github.com/mruby/mruby/pull/5395,"Adds debug information for gems built under enable_debug.
Consider the code:
[1,2].reverse_each do |val|
  val.invalid_method
end

Before this patch: (with enable_debug)
trace (most recent call last):
        [1] test.rb:1
test.rb:2: undefined method 'invalid_method' (NoMethodError)

After this patch: (with enable_debug)
trace (most recent call last):
        [2] test.rb:1
        [1] ...mruby/mrbgems/mruby-array-ext/mrblib/array.rb:297:in reverse_each
test.rb:2: undefined method 'invalid_method' (NoMethodError)

While this might seem like a fairly minor improvement, when you've got 10 stack frames within gems which aren't visible, it makes quite a lot of difference. No changes in behavior should occur when mrbc isn't using the debug flag.","Adds debug information for gems built under enable_debug.
Consider the code:
[1,2].reverse_each do |val|
  val.invalid_method
end

Before this patch: (with enable_debug)
trace (most recent call last):
        [1] test.rb:1
test.rb:2: undefined method 'invalid_method' (NoMethodError)

After this patch: (with enable_debug)
trace (most recent call last):
        [2] test.rb:1
        [1] ...mruby/mrbgems/mruby-array-ext/mrblib/array.rb:297:in reverse_each
test.rb:2: undefined method 'invalid_method' (NoMethodError)

While this might seem like a fairly minor improvement, when you've got 10 stack frames within gems which aren't visible, it makes quite a lot of difference. No changes in behavior should occur when mrbc isn't using the debug flag.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5396,2021-03-31T11:29:18Z,2021-04-01T22:44:15Z,2021-04-01T22:44:15Z,MERGED,True,3,0,1,https://github.com/shuujii,Fix build with `MRB_USE_ALL_SYMBOLS`,1,[],https://github.com/mruby/mruby/pull/5396,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5396,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5397,2021-04-03T07:30:14Z,2021-04-03T09:44:17Z,2021-04-03T12:24:40Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix build failures with `enable_debug` and `enable_cxx_abi`,1,[],https://github.com/mruby/mruby/pull/5397,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5397,"Under C++, there is no implicit conversion from int to enum, which caused a compilation error.","Under C++, there is no implicit conversion from int to enum, which caused a compilation error.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5398,2021-04-03T07:45:27Z,2021-04-03T08:58:30Z,2021-04-03T09:08:12Z,MERGED,True,1,1,1,https://github.com/jbampton,Fix the Authors link in the README,1,[],https://github.com/mruby/mruby/pull/5398,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5398,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5399,2021-04-03T08:16:02Z,2021-04-03T08:57:08Z,2021-04-03T09:07:51Z,MERGED,True,1,1,1,https://github.com/jbampton,chore: fix spelling,1,[],https://github.com/mruby/mruby/pull/5399,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5399,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5400,2021-04-03T09:52:40Z,2021-04-09T13:07:50Z,2021-04-09T13:47:11Z,MERGED,True,5,5,4,https://github.com/jbampton,chore: fix spelling,1,[],https://github.com/mruby/mruby/pull/5400,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5400,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5400,2021-04-03T09:52:40Z,2021-04-09T13:07:50Z,2021-04-09T13:47:11Z,MERGED,True,5,5,4,https://github.com/jbampton,chore: fix spelling,1,[],https://github.com/mruby/mruby/pull/5400,https://github.com/jbampton,2,https://github.com/mruby/mruby/pull/5400#issuecomment-816693203,,Thanks @matz +1 Good Job 🚀🚀🚀,True,{}
mruby/mruby,https://github.com/mruby/mruby,5400,2021-04-03T09:52:40Z,2021-04-09T13:07:50Z,2021-04-09T13:47:11Z,MERGED,True,5,5,4,https://github.com/jbampton,chore: fix spelling,1,[],https://github.com/mruby/mruby/pull/5400,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5400#issuecomment-816694540,,Sorry for being so late.,True,"{'THUMBS_UP': ['https://github.com/jbampton'], 'HOORAY': ['https://github.com/jbampton'], 'ROCKET': ['https://github.com/jbampton']}"
mruby/mruby,https://github.com/mruby/mruby,5401,2021-04-03T12:45:38Z,2021-04-09T12:46:10Z,2021-04-19T13:46:16Z,MERGED,True,162,53,3,https://github.com/dearblue,Reorganize `mcall()` in `mruby-method`,2,[],https://github.com/mruby/mruby/pull/5401,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5401,"Use mrb_exec_irep(). If possible, re-entry into the VM will be suppressed.
Note that due to the effect of being a tail-call, the backtrace of Method#call will be lost, and it will look as if the target method was called directly.
This change fixes the problem of infinite loops when redefining methods that make block calls using mruby-method.
% bin/mruby -e 'mm = method(:proc); define_method(:proc, ->(*a, &b) { mm.call(*a, &b) }); p proc { 1 }'
trace (most recent call last):
        [257] -e:1
        [256] -e:1:in proc
        [255] -e:1:in proc
        ...SNIP...
        [1] -e:1:in proc
-e:1:in proc: stack level too deep (SystemStackError)
Also, this PR contains a patch to extend mrb_exec_irep().","Use mrb_exec_irep(). If possible, re-entry into the VM will be suppressed.
Note that due to the effect of being a tail-call, the backtrace of Method#call will be lost, and it will look as if the target method was called directly.
This change fixes the problem of infinite loops when redefining methods that make block calls using mruby-method.
% bin/mruby -e 'mm = method(:proc); define_method(:proc, ->(*a, &b) { mm.call(*a, &b) }); p proc { 1 }'
trace (most recent call last):
        [257] -e:1
        [256] -e:1:in proc
        [255] -e:1:in proc
        ...SNIP...
        [1] -e:1:in proc
-e:1:in proc: stack level too deep (SystemStackError)
Also, this PR contains a patch to extend mrb_exec_irep().",True,{}
mruby/mruby,https://github.com/mruby/mruby,5402,2021-04-04T07:26:56Z,2021-04-04T08:56:25Z,2021-04-19T13:46:16Z,MERGED,True,39,23,3,https://github.com/dearblue,Making a proc object static for a method with static irep,1,[],https://github.com/mruby/mruby/pull/5402,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5402,"The following methods will be made static.

Class#new
Proc#call
Kernel#catch

Previously, static const RProc could not be registered as a method, but this has been changed to allow it.","The following methods will be made static.

Class#new
Proc#call
Kernel#catch

Previously, static const RProc could not be registered as a method, but this has been changed to allow it.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5404,2021-04-06T03:45:24Z,2021-04-06T03:52:14Z,2021-04-06T03:52:14Z,MERGED,True,2,2,1,https://github.com/shuujii,Fix typo in `doc/guides/link.md` [ci skip],1,[],https://github.com/mruby/mruby/pull/5404,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5404,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5405,2021-04-06T03:52:40Z,2021-04-06T04:14:34Z,2021-04-06T04:14:34Z,MERGED,True,7,8,1,https://github.com/shuujii,Fix heading level in `doc/guides/link.md` [ci skip],1,[],https://github.com/mruby/mruby/pull/5405,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5405,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5406,2021-04-06T15:31:24Z,2021-04-07T02:00:51Z,2021-04-07T02:00:51Z,MERGED,True,50,25,1,https://github.com/sizious,Updating dreamcast_shelf build configuration.,2,[],https://github.com/mruby/mruby/pull/5406,https://github.com/sizious,1,https://github.com/mruby/mruby/pull/5406,This PR contains the updated build_config for the Sega Dreamcast video-game console.,This PR contains the updated build_config for the Sega Dreamcast video-game console.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5407,2021-04-07T07:12:16Z,2021-04-07T07:22:08Z,2021-04-07T07:22:16Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/upload-artifact from v2.2.2 to v2.2.3,1,['dependencies'],https://github.com/mruby/mruby/pull/5407,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5407,"Bumps actions/upload-artifact from v2.2.2 to v2.2.3.

Release notes
Sourced from actions/upload-artifact's releases.

v2.2.3

Fixes for proxy related issues




Commits

ee69f02 Bump @​actions/artifact to version 0.5.1 (#189)
bcd44ad Bump y18n from 4.0.0 to 4.0.1 (#186)
ea3d524 Merge pull request #173 from yacaovsnc/main
e95d1b9 update index.js
0fbc4b7 Display a warning if user tries to upload over 10000 files
a1af2e8 Add on: pull_request trigger to CodeQL workflow (#165)
a4f98af Update README.md
16b8b2b Update where does the upload go section (#162)
See full diff in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/upload-artifact from v2.2.2 to v2.2.3.

Release notes
Sourced from actions/upload-artifact's releases.

v2.2.3

Fixes for proxy related issues




Commits

ee69f02 Bump @​actions/artifact to version 0.5.1 (#189)
bcd44ad Bump y18n from 4.0.0 to 4.0.1 (#186)
ea3d524 Merge pull request #173 from yacaovsnc/main
e95d1b9 update index.js
0fbc4b7 Display a warning if user tries to upload over 10000 files
a1af2e8 Add on: pull_request trigger to CodeQL workflow (#165)
a4f98af Update README.md
16b8b2b Update where does the upload go section (#162)
See full diff in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5408,2021-04-11T01:44:27Z,2021-04-16T07:38:44Z,2021-04-16T19:54:08Z,CLOSED,False,299,259,49,https://github.com/jbampton,feat(CI): add the GitHub Super Linter,1,[],https://github.com/mruby/mruby/pull/5408,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5408,"The GitHub Super Linter is a more robust and better supported
tool than the current GitHub Actions we are using.
Running these checks:
ERROR_ON_MISSING_EXEC_BIT: true
VALIDATE_BASH: true
VALIDATE_MARKDOWN: true
VALIDATE_YAML: true
https://github.com/marketplace/actions/super-linter
https://github.com/github/super-linter
Added the GitHub Super Linter badge to the README.
Also updated the pre-commit framework and added
more documentation on pre-commit.
Added one more pre-commit check: check-executables-have-shebangs
Added one extra check for merge conflicts to our
GitHub Actions.
EditorConfig and Markdown linting.
Minor grammar and spelling fixes.","The GitHub Super Linter is a more robust and better supported
tool than the current GitHub Actions we are using.
Running these checks:
ERROR_ON_MISSING_EXEC_BIT: true
VALIDATE_BASH: true
VALIDATE_MARKDOWN: true
VALIDATE_YAML: true
https://github.com/marketplace/actions/super-linter
https://github.com/github/super-linter
Added the GitHub Super Linter badge to the README.
Also updated the pre-commit framework and added
more documentation on pre-commit.
Added one more pre-commit check: check-executables-have-shebangs
Added one extra check for merge conflicts to our
GitHub Actions.
EditorConfig and Markdown linting.
Minor grammar and spelling fixes.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5408,2021-04-11T01:44:27Z,2021-04-16T07:38:44Z,2021-04-16T19:54:08Z,CLOSED,False,299,259,49,https://github.com/jbampton,feat(CI): add the GitHub Super Linter,1,[],https://github.com/mruby/mruby/pull/5408,https://github.com/jbampton,2,https://github.com/mruby/mruby/pull/5408#issuecomment-819898845,"The GitHub Super Linter is a more robust and better supported
tool than the current GitHub Actions we are using.
Running these checks:
ERROR_ON_MISSING_EXEC_BIT: true
VALIDATE_BASH: true
VALIDATE_MARKDOWN: true
VALIDATE_YAML: true
https://github.com/marketplace/actions/super-linter
https://github.com/github/super-linter
Added the GitHub Super Linter badge to the README.
Also updated the pre-commit framework and added
more documentation on pre-commit.
Added one more pre-commit check: check-executables-have-shebangs
Added one extra check for merge conflicts to our
GitHub Actions.
EditorConfig and Markdown linting.
Minor grammar and spelling fixes.","Hey @matz this is now ready for review 👍
I commented out some Super Linter checks to get the build to pass.  Might have to work on those another day.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5408,2021-04-11T01:44:27Z,2021-04-16T07:38:44Z,2021-04-16T19:54:08Z,CLOSED,False,299,259,49,https://github.com/jbampton,feat(CI): add the GitHub Super Linter,1,[],https://github.com/mruby/mruby/pull/5408,https://github.com/zzak,3,https://github.com/mruby/mruby/pull/5408#issuecomment-820982747,"The GitHub Super Linter is a more robust and better supported
tool than the current GitHub Actions we are using.
Running these checks:
ERROR_ON_MISSING_EXEC_BIT: true
VALIDATE_BASH: true
VALIDATE_MARKDOWN: true
VALIDATE_YAML: true
https://github.com/marketplace/actions/super-linter
https://github.com/github/super-linter
Added the GitHub Super Linter badge to the README.
Also updated the pre-commit framework and added
more documentation on pre-commit.
Added one more pre-commit check: check-executables-have-shebangs
Added one extra check for merge conflicts to our
GitHub Actions.
EditorConfig and Markdown linting.
Minor grammar and spelling fixes.","@jbampton I think it would be better to add the linter (non-blocking) in a single PR before fixing the lint errors. That would make it easier to review.
As for having an actual linter, I'm not sure if matz will use it or will it just be neglected 🤔",True,{}
mruby/mruby,https://github.com/mruby/mruby,5408,2021-04-11T01:44:27Z,2021-04-16T07:38:44Z,2021-04-16T19:54:08Z,CLOSED,False,299,259,49,https://github.com/jbampton,feat(CI): add the GitHub Super Linter,1,[],https://github.com/mruby/mruby/pull/5408,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5408#issuecomment-820982959,"The GitHub Super Linter is a more robust and better supported
tool than the current GitHub Actions we are using.
Running these checks:
ERROR_ON_MISSING_EXEC_BIT: true
VALIDATE_BASH: true
VALIDATE_MARKDOWN: true
VALIDATE_YAML: true
https://github.com/marketplace/actions/super-linter
https://github.com/github/super-linter
Added the GitHub Super Linter badge to the README.
Also updated the pre-commit framework and added
more documentation on pre-commit.
Added one more pre-commit check: check-executables-have-shebangs
Added one extra check for merge conflicts to our
GitHub Actions.
EditorConfig and Markdown linting.
Minor grammar and spelling fixes.",merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5410,2021-04-13T07:16:35Z,2021-04-13T22:25:07Z,2021-04-13T22:25:16Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/cache from v2.1.4 to v2.1.5,1,['dependencies'],https://github.com/mruby/mruby/pull/5410,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5410,"Bumps actions/cache from v2.1.4 to v2.1.5.

Release notes
Sourced from actions/cache's releases.

v2.1.5

Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (actions/cache#527)




Commits

1a9e213 Update cache module to v1.0.7 (#562)
981fa98 Merge pull request #469 from ericmj/patch-1
4498c5b Drop the example based on using pip's internals (#519)
4134e6d It is not recommended to cache node_modules (#537)
62a4d75 Also cache _build for Elixir
See full diff in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/cache from v2.1.4 to v2.1.5.

Release notes
Sourced from actions/cache's releases.

v2.1.5

Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (actions/cache#527)




Commits

1a9e213 Update cache module to v1.0.7 (#562)
981fa98 Merge pull request #469 from ericmj/patch-1
4498c5b Drop the example based on using pip's internals (#519)
4134e6d It is not recommended to cache node_modules (#537)
62a4d75 Also cache _build for Elixir
See full diff in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5411,2021-04-13T14:59:45Z,2021-04-13T22:27:13Z,2021-04-17T00:02:30Z,MERGED,True,1,1,1,https://github.com/lopopolo,Fix incorrect prototype on declaration of mrb_protect_atexit,1,[],https://github.com/mruby/mruby/pull/5411,https://github.com/lopopolo,1,https://github.com/mruby/mruby/pull/5411,"state.c makes a prototype declaration for the private
mrb_protect_atexit which is defined in error.c. error.c defines
this function with a void return type, but state.c defines the
prototype with an int return type.
This mismatch prevents mruby from linking on stricter compilers like
emscripten.
Declaration

  
    
      mruby/src/error.c
    
    
        Lines 594 to 595
      in
      810d13d
    
  
  
    

        
          
           void 
        

        
          
           mrb_protect_atexit(mrb_state *mrb)","state.c makes a prototype declaration for the private
mrb_protect_atexit which is defined in error.c. error.c defines
this function with a void return type, but state.c defines the
prototype with an int return type.
This mismatch prevents mruby from linking on stricter compilers like
emscripten.
Declaration

  
    
      mruby/src/error.c
    
    
        Lines 594 to 595
      in
      810d13d
    
  
  
    

        
          
           void 
        

        
          
           mrb_protect_atexit(mrb_state *mrb)",True,{'THUMBS_UP': ['https://github.com/YunzheZJU']}
mruby/mruby,https://github.com/mruby/mruby,5413,2021-04-15T06:58:15Z,2021-04-15T07:55:44Z,2021-04-15T07:55:44Z,MERGED,True,3,2,1,https://github.com/shuujii,Fix `enable_debug_info?` in `mrbgems/mruby-proc-ext/test/proc.rb`,1,[],https://github.com/mruby/mruby/pull/5413,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5413,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5414,2021-04-17T09:27:38Z,2021-04-17T23:24:15Z,2021-04-17T23:24:15Z,MERGED,True,0,2,1,https://github.com/shuujii,`MRuby::Presym` no longer needs `Rake::DSL`,1,[],https://github.com/mruby/mruby/pull/5414,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5414,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5415,2021-04-18T05:01:28Z,2021-04-19T13:34:20Z,2021-04-19T13:46:17Z,MERGED,True,82,65,4,https://github.com/dearblue,Introducing the `mrb_protect_raw()` API function,1,[],https://github.com/mruby/mruby/pull/5415,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5415,"The purpose is two-fold:


to be able to specify a pointer directly when user data is used
When using mrb_protect(), it is necessary to allocate objects by mrb_obj_cptr() function when using user data.
Adding mrb_protect_raw() will make it simpler to reimplement mrbgems/mruby-error.


to correctly unwind callinfo when an exception is raised from a C function defined as a method (the main topic)
If a method call is made directly under mrb_protect() and a C function is called, control is returned from mrb_protect() if an exception occurs there.
In this case, callinfo is not restored, so it is out of sync.
Moreover, returning to mruby VM (mrb_vm_exec() function) in this state will indicate ci->pc of C function which is equal to NULL, and subsequent JUMP will cause SIGSEGV.
Following is an example that actually causes SIGSEGV:


crash.c
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/error.h>

static mrb_value
level1_body(mrb_state *mrb, mrb_value self)
{
  return mrb_funcall(mrb, self, ""level2"", 0);
}

static mrb_value
level1(mrb_state *mrb, mrb_value self)
{
  return mrb_protect(mrb, level1_body, self, NULL);
}

static mrb_value
level2(mrb_state *mrb, mrb_value self)
{
  mrb_raise(mrb, E_RUNTIME_ERROR, ""error!"");
  return mrb_nil_value();
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();
  mrb_define_method(mrb, mrb->object_class, ""level1"", level1, MRB_ARGS_NONE());
  mrb_define_method(mrb, mrb->object_class, ""level2"", level2, MRB_ARGS_NONE());
  mrb_p(mrb, mrb_load_string(mrb, ""p level1""));
  mrb_close(mrb);
  return 0;
}


compile & run
% `bin/mruby-config --cc --cflags --ldflags` crash.c `bin/mruby-config --libs`

% ./a.out
zsh: segmentation fault (core dumped)  ./a.out


After applying this patch, it will print exception object and exit normally.


The mrb_protect(), mrb_ensure() and mrb_rescue_exceptions() in mrbgems/mruby-error have been rewritten using mrb_protect_raw().","The purpose is two-fold:


to be able to specify a pointer directly when user data is used
When using mrb_protect(), it is necessary to allocate objects by mrb_obj_cptr() function when using user data.
Adding mrb_protect_raw() will make it simpler to reimplement mrbgems/mruby-error.


to correctly unwind callinfo when an exception is raised from a C function defined as a method (the main topic)
If a method call is made directly under mrb_protect() and a C function is called, control is returned from mrb_protect() if an exception occurs there.
In this case, callinfo is not restored, so it is out of sync.
Moreover, returning to mruby VM (mrb_vm_exec() function) in this state will indicate ci->pc of C function which is equal to NULL, and subsequent JUMP will cause SIGSEGV.
Following is an example that actually causes SIGSEGV:


crash.c
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/error.h>

static mrb_value
level1_body(mrb_state *mrb, mrb_value self)
{
  return mrb_funcall(mrb, self, ""level2"", 0);
}

static mrb_value
level1(mrb_state *mrb, mrb_value self)
{
  return mrb_protect(mrb, level1_body, self, NULL);
}

static mrb_value
level2(mrb_state *mrb, mrb_value self)
{
  mrb_raise(mrb, E_RUNTIME_ERROR, ""error!"");
  return mrb_nil_value();
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();
  mrb_define_method(mrb, mrb->object_class, ""level1"", level1, MRB_ARGS_NONE());
  mrb_define_method(mrb, mrb->object_class, ""level2"", level2, MRB_ARGS_NONE());
  mrb_p(mrb, mrb_load_string(mrb, ""p level1""));
  mrb_close(mrb);
  return 0;
}


compile & run
% `bin/mruby-config --cc --cflags --ldflags` crash.c `bin/mruby-config --libs`

% ./a.out
zsh: segmentation fault (core dumped)  ./a.out


After applying this patch, it will print exception object and exit normally.


The mrb_protect(), mrb_ensure() and mrb_rescue_exceptions() in mrbgems/mruby-error have been rewritten using mrb_protect_raw().",True,{}
mruby/mruby,https://github.com/mruby/mruby,5415,2021-04-18T05:01:28Z,2021-04-19T13:34:20Z,2021-04-19T13:46:17Z,MERGED,True,82,65,4,https://github.com/dearblue,Introducing the `mrb_protect_raw()` API function,1,[],https://github.com/mruby/mruby/pull/5415,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5415#issuecomment-822463132,"The purpose is two-fold:


to be able to specify a pointer directly when user data is used
When using mrb_protect(), it is necessary to allocate objects by mrb_obj_cptr() function when using user data.
Adding mrb_protect_raw() will make it simpler to reimplement mrbgems/mruby-error.


to correctly unwind callinfo when an exception is raised from a C function defined as a method (the main topic)
If a method call is made directly under mrb_protect() and a C function is called, control is returned from mrb_protect() if an exception occurs there.
In this case, callinfo is not restored, so it is out of sync.
Moreover, returning to mruby VM (mrb_vm_exec() function) in this state will indicate ci->pc of C function which is equal to NULL, and subsequent JUMP will cause SIGSEGV.
Following is an example that actually causes SIGSEGV:


crash.c
#include <mruby.h>
#include <mruby/compile.h>
#include <mruby/error.h>

static mrb_value
level1_body(mrb_state *mrb, mrb_value self)
{
  return mrb_funcall(mrb, self, ""level2"", 0);
}

static mrb_value
level1(mrb_state *mrb, mrb_value self)
{
  return mrb_protect(mrb, level1_body, self, NULL);
}

static mrb_value
level2(mrb_state *mrb, mrb_value self)
{
  mrb_raise(mrb, E_RUNTIME_ERROR, ""error!"");
  return mrb_nil_value();
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();
  mrb_define_method(mrb, mrb->object_class, ""level1"", level1, MRB_ARGS_NONE());
  mrb_define_method(mrb, mrb->object_class, ""level2"", level2, MRB_ARGS_NONE());
  mrb_p(mrb, mrb_load_string(mrb, ""p level1""));
  mrb_close(mrb);
  return 0;
}


compile & run
% `bin/mruby-config --cc --cflags --ldflags` crash.c `bin/mruby-config --libs`

% ./a.out
zsh: segmentation fault (core dumped)  ./a.out


After applying this patch, it will print exception object and exit normally.


The mrb_protect(), mrb_ensure() and mrb_rescue_exceptions() in mrbgems/mruby-error have been rewritten using mrb_protect_raw().","Renamed from mrb_vm_protect() to mrb_protect_raw().
And some minor tweaks in this PR in mrbgems/mruby-error/src/exception.c:

Removed prototype declaration of protect_body()
Removed unnecessary mrb_gc_arena_restore() immediately after mrb_protect_raw() in mrb_ensure()
Matching the type of i variable to len variable in mrb_rescue_exceptions()",True,{}
mruby/mruby,https://github.com/mruby/mruby,5417,2021-04-20T07:43:32Z,2021-04-20T08:40:33Z,2021-04-20T08:40:33Z,MERGED,True,1,1,1,https://github.com/shuujii,Remove `MRB_API` from `mrb_get_backtrace` definition,1,[],https://github.com/mruby/mruby/pull/5417,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5417,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5418,2021-04-20T07:53:43Z,2021-04-20T08:41:02Z,2021-04-20T08:41:02Z,MERGED,True,0,5,2,https://github.com/shuujii,Remove unused `#include` in `complex.c` and `rational.c`,1,[],https://github.com/mruby/mruby/pull/5418,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5418,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5419,2021-04-20T08:04:29Z,2021-04-20T08:41:26Z,2021-04-20T08:41:26Z,MERGED,True,0,15,1,https://github.com/shuujii,Remove unused struct in `include/mruby/variable.h`,1,[],https://github.com/mruby/mruby/pull/5419,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5419,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5422,2021-04-23T14:12:09Z,2021-04-25T05:36:17Z,2021-05-02T07:34:54Z,MERGED,True,1,4,1,https://github.com/dearblue,Avoid ill-advised `goto`,1,[],https://github.com/mruby/mruby/pull/5422,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5422,ref #5362,ref #5362,True,{}
mruby/mruby,https://github.com/mruby/mruby,5423,2021-04-24T01:55:09Z,2021-04-25T22:29:08Z,2021-05-02T07:34:54Z,MERGED,True,12,9,7,https://github.com/dearblue,Introduce `MRB_GC_RED`,1,[],https://github.com/mruby/mruby/pull/5423,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5423,Replaces the magic number 7 except in src/gc.c.,Replaces the magic number 7 except in src/gc.c.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5424,2021-04-24T12:35:29Z,2021-04-26T05:29:46Z,2021-05-02T07:34:55Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix annotations for inline iseq of `Class.new` [ci skip],1,[],https://github.com/mruby/mruby/pull/5424,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5424,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5425,2021-04-25T02:19:13Z,2021-04-26T14:13:23Z,2021-05-02T07:34:54Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix symbol leak in `exc_to_s()`,1,[],https://github.com/mruby/mruby/pull/5425,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5425,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5432,2021-04-29T00:37:21Z,2021-04-29T02:17:41Z,2021-04-29T02:17:41Z,MERGED,True,3,3,1,https://github.com/shuujii,Fix typo in `mrbgems/mruby-io/mrblib/io.rb`; ref cb55e7eca,1,[],https://github.com/mruby/mruby/pull/5432,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5432,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/zzak,1,https://github.com/mruby/mruby/pull/5433,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?","To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/shuujii,2,https://github.com/mruby/mruby/pull/5433#issuecomment-829209274,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?",We will need it when we modify parse.y or keywords.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5433#issuecomment-829266340,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?",We put y.tab.c to the repository to avoid bison installation and version compatibility problems.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/zzak,4,https://github.com/mruby/mruby/pull/5433#issuecomment-830757304,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?",@matz @shuujii Can you explain to me how it's used? I can't imagine how this code block is ever executed. 🤔,True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/shuujii,5,https://github.com/mruby/mruby/pull/5433#issuecomment-830758153,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?","Without this code block, editing parse.y will not recreate y.tab.c.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/zzak,6,https://github.com/mruby/mruby/pull/5433#issuecomment-830918354,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?","@shuujii Ok, I didn't know that y.tab.c was generated from parse.y. Can you point me to the code where we call this function? Or is there a separate command we run to regenerate the parser.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/matz,7,https://github.com/mruby/mruby/pull/5433#issuecomment-830974023,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?","bison generates y.tab.c from parse.y. mrb_load_exec() and other functions around are entry points. They are called from mruby, mirb and other commands.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/zzak,8,https://github.com/mruby/mruby/pull/5433#issuecomment-830974636,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?",Thanks @matz. I think I saw in #5437 that we were running this rake task manually to generate y.tab.c? It doesn't seem like mruby or mirb command would need to call bison directly since they are compiled with y.tab.c during build time.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/matz,9,https://github.com/mruby/mruby/pull/5433#issuecomment-830976861,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?","When we touch parse.y, rake will automatically generate y.tab.c using bison. In theory, y.tab.c should not need to be kept in the repository (like other generated files such as *.o), but we have some serious versioning/installation issues on some platforms (Windows and macOS) in the past so that we had to put it in the repository. See #5007",True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/dearblue,10,https://github.com/mruby/mruby/pull/5433#issuecomment-830984422,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?","parse.y :: Suitable for humans. It is this file that we actually modify and extend to parse the Ruby syntax.
y.tab.c :: A file mechanically generated by bison based on parse.y. It does not consider humans reading or making changes to the code.

If parse.y were deleted and we had to maintain y.tab.c directly, we would be in tremendous pain.
bison is one of the programs called"" parser generator "".
Information is also available on wikipedia:

https://en.wikipedia.org/wiki/GNU_Bison
https://en.wikipedia.org/wiki/Compiler-compiler",True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/shuujii,11,https://github.com/mruby/mruby/pull/5433#issuecomment-830991837,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?","Can you point me to the code where we call this function? Or is there a separate command we run to regenerate the parser.

No, there is no separate command to generate y.tab.c. The usual entry point is rake command execution. The following is a brief description of how rake execution generates y.tab.c from parse.y .

default task depends on all task: 
  
    
      mruby/Rakefile
    
    
         Line 38
      in
      24dcd25
    
  
  
    

        
          
           task :default => :all 
        
    
  


all task executes build task: 
  
    
      mruby/Rakefile
    
    
        Lines 41 to 42
      in
      24dcd25
    
  
  
    

        
          
           task :all => :gensym do 
        

        
          
             Rake::Task[:build].invoke 
        
    
  


build task depends on MRuby::Build#products: 
  
    
      mruby/Rakefile
    
    
         Line 52
      in
      24dcd25
    
  
  
    

        
          
           task :build => MRuby.targets.flat_map{|_, build| build.products} 
        
    
  


MRuby::Build#products includes MRuby::Build#libmruby_core_static: 
  
    
      mruby/tasks/libmruby.rake
    
    
         Line 6
      in
      24dcd25
    
  
  
    

        
          
           products << libmruby_core_static 
        
    
  


MRuby::Build#libmruby_core_static depends on MRuby::Build#libmruby_core_objs: 
  
    
      mruby/tasks/libmruby.rake
    
    
         Line 2
      in
      24dcd25
    
  
  
    

        
          
           file libmruby_core_static => libmruby_core_objs.flatten do |t| 
        
    
  


MRuby::Build#libmruby_core_objs includes y.tab.o: 
  
    
      mruby/mrbgems/mruby-compiler/mrbgem.rake
    
    
        Lines 6 to 14
      in
      24dcd25
    
  
  
    

        
          
           objs = %w[codegen y.tab].map do |name| 
        

        
          
             src = ""#{dir}/core/#{name}.c"" 
        

        
          
             if build.cxx_exception_enabled? 
        

        
          
               build.compile_as_cxx(src) 
        

        
          
             else 
        

        
          
               objfile(src.pathmap(""#{build_dir}/core/%n"")) 
        

        
          
             end 
        

        
          
           end 
        

        
          
           build.libmruby_core_objs << objs 
        
    
  


y.tab.o depends on y.tab.c (Rule): 
  
    
      mruby/lib/mruby/build/command.rb
    
    
        Lines 106 to 115
      in
      24dcd25
    
  
  
    

        
          
           if build_dir.include? ""mrbgems/"" 
        

        
          
             generated_file_matcher = Regexp.new(""^#{Regexp.escape build_dir}/(?!mrbc/)(.*)#{Regexp.escape out_ext}$"") 
        

        
          
           else 
        

        
          
             generated_file_matcher = Regexp.new(""^#{Regexp.escape build_dir}/(?!mrbc/|mrbgems/.+/)(.*)#{Regexp.escape out_ext}$"") 
        

        
          
           end 
        

        
          
           source_exts.each do |ext, compile| 
        

        
          
             rule generated_file_matcher => [ 
        

        
          
               proc { |file| 
        

        
          
                 file.sub(generated_file_matcher, ""#{source_dir}/\\1#{ext}"") 
        

        
          
               }, 
        
    
  


y.tab.c depends on parse.y: 
  
    
      mruby/mrbgems/mruby-compiler/mrbgem.rake
    
    
        Lines 19 to 22
      in
      24dcd25
    
  
  
    

        
          
           file ""#{dir}/core/y.tab.c"" => [""#{dir}/core/parse.y"", lex_def] do |t| 
        

        
          
             yacc.run t.name, t.prerequisites.first 
        

        
          
             replace_line_directive(t.name) 
        

        
          
           end",True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/zzak,12,https://github.com/mruby/mruby/pull/5433#issuecomment-831564981,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?","@shuujii @dearblue @matz Thank you for the extra context, this was very helpful. Is it safe to assume then that no MRuby user will ever execute this code path, but it's used by MRuby developers when changing parse.y? For example: update parse.y > rake y.tab.c > git add y.tab.c > git commit mruby/mruby?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5433,2021-04-29T12:26:58Z,2021-04-29T14:04:39Z,2021-05-03T22:52:08Z,CLOSED,False,0,6,1,https://github.com/zzak,"Remove ""parse.y"" directive",1,[],https://github.com/mruby/mruby/pull/5433,https://github.com/matz,13,https://github.com/mruby/mruby/pull/5433#issuecomment-831584616,"To be honest, I was really wondering why this is here, and I can't find any use for it.
It seems that compiling y.tab.c is all that is needed.
Am I missing something?",@zzak yes,True,{'HEART': ['https://github.com/zzak']}
mruby/mruby,https://github.com/mruby/mruby,5434,2021-04-29T16:34:34Z,2021-06-18T01:55:04Z,2021-06-18T19:54:49Z,MERGED,True,26,1,1,https://github.com/jbampton,Add the rules to the markdownlint config file as comments,1,[],https://github.com/mruby/mruby/pull/5434,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5434,Enable MD011 no-reversed-links - Reversed link syntax,Enable MD011 no-reversed-links - Reversed link syntax,True,{}
mruby/mruby,https://github.com/mruby/mruby,5434,2021-04-29T16:34:34Z,2021-06-18T01:55:04Z,2021-06-18T19:54:49Z,MERGED,True,26,1,1,https://github.com/jbampton,Add the rules to the markdownlint config file as comments,1,[],https://github.com/mruby/mruby/pull/5434,https://github.com/jbampton,2,https://github.com/mruby/mruby/pull/5434#issuecomment-862904344,Enable MD011 no-reversed-links - Reversed link syntax,Hey @matz  this is ready for review 👍,True,{}
mruby/mruby,https://github.com/mruby/mruby,5435,2021-04-29T18:45:47Z,,2021-06-03T07:47:52Z,OPEN,False,51,0,2,https://github.com/jbampton,[WIP] - Add the pull request labeler Action,1,[],https://github.com/mruby/mruby/pull/5435,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5435,"https://github.com/actions/labeler
https://github.com/marketplace/actions/labeler
Verified Action
We need to add the labels to this repo from .github/labeler.yml before this PR will work.","https://github.com/actions/labeler
https://github.com/marketplace/actions/labeler
Verified Action
We need to add the labels to this repo from .github/labeler.yml before this PR will work.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5436,2021-04-29T20:11:24Z,2021-06-19T12:53:38Z,2021-06-19T12:53:42Z,CLOSED,False,447,1,4,https://github.com/jbampton,feat(ci): add GNU Aspell as a GitHub Action,1,[],https://github.com/mruby/mruby/pull/5436,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5436,"Prints an ordered list of spelling mistakes to the terminal -> check-spelling-single.sh
Custom English dictionary -> .aspell.en.pws
Full Shell script so far -> check-spelling.sh -> runs against the dictionary
This script runs with Actions and prints out all the spelling mistakes grouped by file
https://en.wikipedia.org/wiki/GNU_Aspell
https://github.com/GNUAspell/aspell
http://aspell.net/","Prints an ordered list of spelling mistakes to the terminal -> check-spelling-single.sh
Custom English dictionary -> .aspell.en.pws
Full Shell script so far -> check-spelling.sh -> runs against the dictionary
This script runs with Actions and prints out all the spelling mistakes grouped by file
https://en.wikipedia.org/wiki/GNU_Aspell
https://github.com/GNUAspell/aspell
http://aspell.net/",True,{}
mruby/mruby,https://github.com/mruby/mruby,5436,2021-04-29T20:11:24Z,2021-06-19T12:53:38Z,2021-06-19T12:53:42Z,CLOSED,False,447,1,4,https://github.com/jbampton,feat(ci): add GNU Aspell as a GitHub Action,1,[],https://github.com/mruby/mruby/pull/5436,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5436#issuecomment-864397683,"Prints an ordered list of spelling mistakes to the terminal -> check-spelling-single.sh
Custom English dictionary -> .aspell.en.pws
Full Shell script so far -> check-spelling.sh -> runs against the dictionary
This script runs with Actions and prints out all the spelling mistakes grouped by file
https://en.wikipedia.org/wiki/GNU_Aspell
https://github.com/GNUAspell/aspell
http://aspell.net/","Spell checking sounds good, but it would be a burden for us to keep maintaining the dictionary for abbreviations and technical terms.
I feel it's not worth the burden. Any idea?",True,"{'THUMBS_UP': ['https://github.com/jbampton'], 'EYES': ['https://github.com/jbampton'], 'HEART': ['https://github.com/jbampton']}"
mruby/mruby,https://github.com/mruby/mruby,5436,2021-04-29T20:11:24Z,2021-06-19T12:53:38Z,2021-06-19T12:53:42Z,CLOSED,False,447,1,4,https://github.com/jbampton,feat(ci): add GNU Aspell as a GitHub Action,1,[],https://github.com/mruby/mruby/pull/5436,https://github.com/jbampton,3,https://github.com/mruby/mruby/pull/5436#issuecomment-864402546,"Prints an ordered list of spelling mistakes to the terminal -> check-spelling-single.sh
Custom English dictionary -> .aspell.en.pws
Full Shell script so far -> check-spelling.sh -> runs against the dictionary
This script runs with Actions and prints out all the spelling mistakes grouped by file
https://en.wikipedia.org/wiki/GNU_Aspell
https://github.com/GNUAspell/aspell
http://aspell.net/","Hey @matz I agree now too.  We already have codespell and misspell 👍

  
    
      mruby/.github/workflows/lint.yml
    
    
         Line 6
      in
      f678620
    
  
  
    

        
          
           misspell: 
        
    
  



  
    
      mruby/.pre-commit-config.yaml
    
    
         Line 32
      in
      f678620
    
  
  
    

        
          
           - repo: https://github.com/codespell-project/codespell",True,{}
mruby/mruby,https://github.com/mruby/mruby,5437,2021-05-02T08:04:16Z,2021-11-06T10:58:29Z,2021-11-11T12:45:49Z,MERGED,True,5,2,1,https://github.com/dearblue,Run the task only once when `parse.y` is updated,1,[],https://github.com/mruby/mruby/pull/5437,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5437,"Previously, the task was executed as many times as there were targets, including mruby-compiler.
% rm mrbgems/mruby-compiler/core/y.tab.c
% rake `pwd`/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> mrbgems/mruby-compiler/core/y.tab.c","Previously, the task was executed as many times as there were targets, including mruby-compiler.
% rm mrbgems/mruby-compiler/core/y.tab.c
% rake `pwd`/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> mrbgems/mruby-compiler/core/y.tab.c",True,{}
mruby/mruby,https://github.com/mruby/mruby,5437,2021-05-02T08:04:16Z,2021-11-06T10:58:29Z,2021-11-11T12:45:49Z,MERGED,True,5,2,1,https://github.com/dearblue,Run the task only once when `parse.y` is updated,1,[],https://github.com/mruby/mruby/pull/5437,https://github.com/zzak,2,https://github.com/mruby/mruby/pull/5437#issuecomment-830919269,"Previously, the task was executed as many times as there were targets, including mruby-compiler.
% rm mrbgems/mruby-compiler/core/y.tab.c
% rake `pwd`/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> mrbgems/mruby-compiler/core/y.tab.c",@dearblue Is this task just something we run manually when we want to regenerate y.tab.c? It doesn't seem to be executed during normal rake tasks.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5437,2021-05-02T08:04:16Z,2021-11-06T10:58:29Z,2021-11-11T12:45:49Z,MERGED,True,5,2,1,https://github.com/dearblue,Run the task only once when `parse.y` is updated,1,[],https://github.com/mruby/mruby/pull/5437,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5437#issuecomment-830980748,"Previously, the task was executed as many times as there were targets, including mruby-compiler.
% rm mrbgems/mruby-compiler/core/y.tab.c
% rake `pwd`/mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> mrbgems/mruby-compiler/core/y.tab.c
YACC  mrbgems/mruby-compiler/core/parse.y -> mrbgems/mruby-compiler/core/y.tab.c","No. I am manually performing the task to clearly reproduce the problem.
Normally it does not need to perform the task manually as it will be executed automatically if needed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5438,2021-05-02T09:31:47Z,2021-10-02T11:12:51Z,2021-10-09T04:10:29Z,MERGED,True,2,2,3,https://github.com/dearblue,Rename mrbgems/mruby-inline-struct with mrbgems/mruby-test-inline-struct,1,[],https://github.com/mruby/mruby/pull/5438,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5438,This gem contains only tests.,This gem contains only tests.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5439,2021-05-02T11:18:47Z,2021-05-02T11:41:43Z,2021-05-03T14:39:27Z,MERGED,True,108,108,1,https://github.com/dearblue,Enclose the table contents of `opcode.md` as code,1,[],https://github.com/mruby/mruby/pull/5439,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5439,Put the script to convert from include/mruby/ops.h at https://gist.github.com/dearblue/c30f9f58a5e3c3a57fa1cfd3570b19c2,Put the script to convert from include/mruby/ops.h at https://gist.github.com/dearblue/c30f9f58a5e3c3a57fa1cfd3570b19c2,True,{}
mruby/mruby,https://github.com/mruby/mruby,5440,2021-05-03T11:17:47Z,2021-05-03T22:59:55Z,2021-05-03T23:03:50Z,MERGED,True,1,1,1,https://github.com/jbampton,Fix whitespace in `src/symbol.c`,1,[],https://github.com/mruby/mruby/pull/5440,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5440,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5441,2021-05-03T14:37:58Z,2021-05-05T00:38:18Z,2021-06-20T02:17:52Z,MERGED,True,1,1,1,https://github.com/dearblue,Update gem spec for `mruby-sleep`,1,[],https://github.com/mruby/mruby/pull/5441,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5441,"To align the spec like any other core mrbgems:

Delete spec.version
Set spec.summary","To align the spec like any other core mrbgems:

Delete spec.version
Set spec.summary",True,{}
mruby/mruby,https://github.com/mruby/mruby,5442,2021-05-03T14:38:48Z,2021-05-05T00:38:45Z,2021-06-20T02:17:52Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix documents for `mruby-io`,1,[],https://github.com/mruby/mruby/pull/5442,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5442,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5443,2021-05-03T22:21:43Z,2021-05-07T08:25:05Z,2021-05-07T10:28:07Z,MERGED,True,9,9,1,https://github.com/jbampton,Order the EditorConfig properties,1,[],https://github.com/mruby/mruby/pull/5443,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5443,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5444,2021-05-03T23:20:27Z,2021-06-16T00:17:36Z,2021-06-16T16:09:54Z,MERGED,True,15,0,1,https://github.com/jbampton,Add documentation on spell checking with misspell,1,[],https://github.com/mruby/mruby/pull/5444,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5444,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5445,2021-05-04T01:02:43Z,2021-06-16T00:15:07Z,2021-06-16T16:09:10Z,MERGED,True,83,40,15,https://github.com/jbampton, Run pre-commit with GitHub Actions,1,[],https://github.com/mruby/mruby/pull/5445,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5445,"Running pre-commit with GitHub Actions now gives us more tests and coverage
Remove duplicate GitHub Actions for merge conflicts and trailing whitespace
Remove duplicate checks for markdownlint and yamllint from the GitHub Super-Linter
Add new custom pre-commit hook running with a shell script to sort alphabetically and uniquify codespell.txt
Add new pre-commit hook to check spelling with codespell
https://github.com/codespell-project/codespell","Running pre-commit with GitHub Actions now gives us more tests and coverage
Remove duplicate GitHub Actions for merge conflicts and trailing whitespace
Remove duplicate checks for markdownlint and yamllint from the GitHub Super-Linter
Add new custom pre-commit hook running with a shell script to sort alphabetically and uniquify codespell.txt
Add new pre-commit hook to check spelling with codespell
https://github.com/codespell-project/codespell",True,{}
mruby/mruby,https://github.com/mruby/mruby,5445,2021-05-04T01:02:43Z,2021-06-16T00:15:07Z,2021-06-16T16:09:10Z,MERGED,True,83,40,15,https://github.com/jbampton, Run pre-commit with GitHub Actions,1,[],https://github.com/mruby/mruby/pull/5445,https://github.com/jbampton,2,https://github.com/mruby/mruby/pull/5445#issuecomment-861884912,"Running pre-commit with GitHub Actions now gives us more tests and coverage
Remove duplicate GitHub Actions for merge conflicts and trailing whitespace
Remove duplicate checks for markdownlint and yamllint from the GitHub Super-Linter
Add new custom pre-commit hook running with a shell script to sort alphabetically and uniquify codespell.txt
Add new pre-commit hook to check spelling with codespell
https://github.com/codespell-project/codespell","I have removed the conflicts now.  Sorry for the delay.
Ready for review now @matz",True,{}
mruby/mruby,https://github.com/mruby/mruby,5446,2021-05-05T07:11:10Z,2021-05-05T10:05:39Z,2021-05-05T10:05:47Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from v3 to v3.17.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5446,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5446,"Bumps github/super-linter from v3 to v3.17.0.

Commits

28cfebb Updating action.yml with new release version
5d2ea81 Cpp (#1492)
1a00fc3 adding fixes (#1516)
d7894a5 Bump @​coffeelint/cli from 4.1.4 to 4.1.5 in /dependencies (#1514)
e0b8b12 Bump ansible-lint from 5.0.7 to 5.0.8 in /dependencies (#1515)
ddd8183 Updating action.yml with new release version (#1512)
See full diff in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from v3 to v3.17.0.

Commits

28cfebb Updating action.yml with new release version
5d2ea81 Cpp (#1492)
1a00fc3 adding fixes (#1516)
d7894a5 Bump @​coffeelint/cli from 4.1.4 to 4.1.5 in /dependencies (#1514)
e0b8b12 Bump ansible-lint from 5.0.7 to 5.0.8 in /dependencies (#1515)
ddd8183 Updating action.yml with new release version (#1512)
See full diff in compare view



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5447,2021-05-05T11:53:25Z,2021-05-07T08:25:44Z,2021-06-20T02:17:53Z,MERGED,True,190,180,5,https://github.com/dearblue,Extend the tab with 8 whitespace,1,[],https://github.com/mruby/mruby/pull/5447,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5447,"This work was done as follows:

check:   git grep $'\011' -- :^oss-fuzz
convert: ruby -pi -e 'nil while $_.sub!(/^(.*?)\t/) { $1 + "" "" * (8 - $1.size % 8) }'

The doc/guide/{compile,mrbgems}.md file adds and removes whitespace to make the directory tree look the same.
In mrbgems/mruby-socket/src/socket.c, there is a part where the indent is changed from 4 to 2 at the same time as the tab is changed.","This work was done as follows:

check:   git grep $'\011' -- :^oss-fuzz
convert: ruby -pi -e 'nil while $_.sub!(/^(.*?)\t/) { $1 + "" "" * (8 - $1.size % 8) }'

The doc/guide/{compile,mrbgems}.md file adds and removes whitespace to make the directory tree look the same.
In mrbgems/mruby-socket/src/socket.c, there is a part where the indent is changed from 4 to 2 at the same time as the tab is changed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5448,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5448#issuecomment-835697848,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","The English text is almost the same as the one translated from Japanese by Google translate.
So, if there is any strange wording, I would like someone to correct it.
in particular:

doc/guides/compile.md
doc/guides/mrbgems.md
About the disclaimer of LICENSE.yaml

Thank you.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5448#issuecomment-835698739,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","Below is a demonstration with build_config/default.rb.
% rake clean license
Cleaned up target build folder
GEN   build/host/LICENSE.yaml 
GEN   build/host/mrbc/LICENSE.yaml 

% cat build/host/LICENSE.yaml
---
DISCLAIMER FOR THIS FILE: |
  Please note that this file may NOT completely cover the license
  terms of the copyrighted work generated based on the mruby build
  configuration file.

  If you suspect a shortage, please check if it is provided as a
  separate file and contact the software provider.
mruby:
  AUTHORS: mruby developers
  LICENSES: MIT
  TERMS:
    mruby:LICENSE: |
      Copyright (c) 2010-2021 mruby developers

      Permission is hereby granted, free of charge, to any person obtaining a
      copy of this software and associated documentation files (the ""Software""),
      to deal in the Software without restriction, including without limitation
      the rights to use, copy, modify, merge, publish, distribute, sublicense,
      and/or sell copies of the Software, and to permit persons to whom the
      Software is furnished to do so, subject to the following conditions:

      The above copyright notice and this permission notice shall be included in
      all copies or substantial portions of the Software.

      THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
      FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
      DEALINGS IN THE SOFTWARE.
    mruby:src/string.c: |
      Source code for the ""strtod"" library procedure.

      Copyright (c) 1988-1993 The Regents of the University of California.
      Copyright (c) 1994 Sun Microsystems, Inc.

      Permission to use, copy, modify, and distribute this
      software and its documentation for any purpose and without
      fee is hereby granted, provided that the above copyright
      notice appear in all copies.  The University of California
      makes no representations about the suitability of this
      software for any purpose.  It is provided ""as is"" without
      express or implied warranty.
mruby gems:
- NAME: mruby-compar-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-enum-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-string-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-numeric-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-array-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-hash-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-range-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-proc-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-symbol-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-object-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-objectspace
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-fiber
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-enumerator
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-enum-lazy
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-toplevel-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-kernel-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-class-ext
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-pack
  AUTHORS:
  - Internet Initiative Japan Inc.
  - mruby developers
  LICENSES:
  - MIT
  TERMS:
    mruby-pack:README.md: |
      Copyright (c) 2012 Internet Initiative Japan Inc.
      Copyright (c) 2017 mruby developers

      Permission is hereby granted, free of charge, to any person obtaining a
      copy of this software and associated documentation files (the ""Software""),
      to deal in the Software without restriction, including without limitation
      the rights to use, copy, modify, merge, publish, distribute, sublicense,
      and/or sell copies of the Software, and to permit persons to whom the
      Software is furnished to do so, subject to the following conditions:

      The above copyright notice and this permission notice shall be included in
      all copies or substantial portions of the Software.

      THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
      FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
      DEALINGS IN THE SOFTWARE.
- NAME: mruby-sprintf
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-time
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-struct
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-random
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-io
  AUTHORS:
  - Internet Initiative Japan Inc.
  - mruby developers
  LICENSES:
  - MIT
  TERMS:
    mruby-io:README.md: |
      Copyright (c) 2013 Internet Initiative Japan Inc.
      Copyright (c) 2017 mruby developers

      Permission is hereby granted, free of charge, to any person obtaining a
      copy of this software and associated documentation files (the ""Software""),
      to deal in the Software without restriction, including without limitation
      the rights to use, copy, modify, merge, publish, distribute, sublicense,
      and/or sell copies of the Software, and to permit persons to whom the
      Software is furnished to do so, subject to the following conditions:

      The above copyright notice and this permission notice shall be included in
      all copies or substantial portions of the Software.

      THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
      FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
      DEALINGS IN THE SOFTWARE.
- NAME: mruby-socket
  AUTHORS:
  - Internet Initiative Japan
  - mruby developers
  LICENSES:
  - MIT
  TERMS:
    mruby-socket:README.md: |
      Copyright (c) 2013 Internet Initiative Japan Inc.
      Copyright (c) 2017 mruby developers

      Permission is hereby granted, free of charge, to any person obtaining a
      copy of this software and associated documentation files (the ""Software""),
      to deal in the Software without restriction, including without limitation
      the rights to use, copy, modify, merge, publish, distribute, sublicense,
      and/or sell copies of the Software, and to permit persons to whom the
      Software is furnished to do so, subject to the following conditions:

      The above copyright notice and this permission notice shall be included in
      all copies or substantial portions of the Software.

      THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
      FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
      DEALINGS IN THE SOFTWARE.
- NAME: mruby-print
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-math
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-complex
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-rational
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-metaprog
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-method
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-compiler
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-eval
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-bin-mrbc
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-bin-mirb
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-bin-mruby
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-bin-strip
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license
- NAME: mruby-bin-config
  AUTHORS:
  - mruby developers
  LICENSES:
  - MIT
  TERMS: same as mruby's license",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5448#issuecomment-835705505,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","CIFuzz / Fuzzing failed.
I'm thinking about how to deal with it ...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5448#issuecomment-835826278,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","In mruby repository, YAML files usually have .yml extension. Should the name LICENSE.yaml be LICENSE.yml?",True,{'THUMBS_UP': ['https://github.com/zzak']}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/zzak,6,https://github.com/mruby/mruby/pull/5448#issuecomment-836046194,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method",Give me some time and I will help review the translations 🙇,True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,7,https://github.com/mruby/mruby/pull/5448#issuecomment-836655532,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","@matz, Thank you. I will fix it.
@zzak,
I can't speak English at all, so all I have to do is paste the results of Google Translate.
Therefore, it may be better for you to commit the modification of the document after this PR has been merged.
If there are confusing expressions or more detailed explanations are needed in the document, I will explain them if you ask me.
Thank you.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,8,https://github.com/mruby/mruby/pull/5448#issuecomment-844164886,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","@zzak, Many thanks for all the suggestions.
I need to update this PR before it is merged, so I would like to accept it after the update is complete.",True,{'THUMBS_UP': ['https://github.com/zzak']}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,9,https://github.com/mruby/mruby/pull/5448#issuecomment-845145738,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","I did cimmit --amend.
The difference is that I replaced the recursive traverse of the unwanted array with Array#flatten.each.
The reason is that when I called #flatten on an array containing hashes, I had the wrong belief that even the ""key"" and ""value"" of the hash would be included.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/matz,10,https://github.com/mruby/mruby/pull/5448#issuecomment-846355389,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method",I replaced fmt_fp.c derived from musl with public domain format-float.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,11,https://github.com/mruby/mruby/pull/5448#issuecomment-846405454,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","I'd like to update this PR, but I'll do it after rebase (with [ci skip]) first so that the edit difference is easy to understand.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,12,https://github.com/mruby/mruby/pull/5448#issuecomment-846416679,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","An error occurred because I used Array#any?, Which is not supported by Ruby 2.3 used in CIFuzz.
When I force-push again, I don't see the diff.
So I will prepare a link: https://github.com/mruby/mruby/compare/c031c4a1a22e692c573d9b08faa2241329aa4676..83ad6bd7644584fab95bbd12ffb5b2a8672cfc5c",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,13,https://github.com/mruby/mruby/pull/5448#issuecomment-1073634758,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method","I have now tested the possibility of reproducing this functionality as an independent GEM and have confirmed that I can achieve the functionality I desire.
I am therefore considering abandoning this PR.
@matz @zzak, Thanks for the review so far.
Would it be a problem if I close this PR?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/matz,14,https://github.com/mruby/mruby/pull/5448#issuecomment-1073985634,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method",No. Please close the issue.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5448,2021-05-09T05:45:30Z,2022-03-22T12:49:09Z,2022-03-22T12:49:19Z,CLOSED,False,211,2,7,https://github.com/dearblue,Generate `LICENSE.yml` file,1,[],https://github.com/mruby/mruby/pull/5448,https://github.com/dearblue,15,https://github.com/mruby/mruby/pull/5448#issuecomment-1075134691,"Outputs the <build-dir>/LICENSE.yml file by combining the mruby/LICENSE and the files related to the license terms for mrbgems added to the build_config file.
If it only wants to generate a LICENSE.yml file, run rake license.
Many common license terms are required to include themselves. Therefore, the purpose is to reduce the effort of users to put them together.
Note, however, that it is ideal and the generated LICENSE.yml file is probably incomplete.
If there is a license terms file in the top directory of mrbgem, it will be automatically collected.
Therefore, it is now recommended by the mrbgem author to put the LICENSE file in each top directory.
The target to be imported as a license clause file is one of the combinations of [""LICENSE"",""COPYRIGHT"",""COPYING""].product(["""","".txt"","".md""]).
Priority: LICENSE > LICENSE.txt > LICENSE.md > ... > COPYING.txt > COPYING.md
In addition, the user can optionally change or add the file name through the MRuby::Gem::Specification#terms property.
If it specifies a relative path, the base directory is the top directory of each mrbgem.
MRuby::Gem::Specification.new(""my-gem"") do |spec|
  spec.terms << ""OPTIONAL-LICENSE-FILE""
  spec.terms << ""path/to/ANOTHER-LICENSE-FILE""
  ...
end
The mrbgems that do not have a LICENSE file and are not set to spec.terms are now warned when rake is done.
License terms for the following will be extracted at build time if needed:

src/string.c: Code from strtod()
mrbgems/mruby-sleep
mrbgems/mruby-io
mrbgems/mruby-socket
mrbgems/mruby-pack

The APIs added for users are:

lib/mruby/build.rb

MRuby::Build#terms property


lib/mruby/gem.rb

MRuby::Gem::Specification#terms property


lib/mruby/core_ext.rb

File.extract method",OK. Thank you again.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5450,2021-05-12T05:53:04Z,2021-05-12T07:49:03Z,2021-05-12T07:49:11Z,MERGED,True,13,13,4,https://github.com/apps/dependabot,build(deps): bump actions/checkout from 2 to 2.3.4,1,['dependencies'],https://github.com/mruby/mruby/pull/5450,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5450,"Bumps actions/checkout from 2 to 2.3.4.

Release notes
Sourced from actions/checkout's releases.

v2.3.4

Add missing awaits
Swap to Environment Files

v2.3.3

Remove Unneeded commit information from build logs
Add Licensed to verify third party dependencies

v2.3.2
Add Third Party License Information to Dist Files
v2.3.1
Fix default branch resolution for .wiki and when using SSH
v2.3.0
Fallback to the default branch
v2.2.0
Fetch all history for all tags and branches when fetch-depth=0
v2.1.1
Changes to support GHES (here and here)
v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22




Changelog
Sourced from actions/checkout's changelog.

Changelog
v2.3.1

Fix default branch resolution for .wiki and when using SSH

v2.3.0

Fallback to the default branch

v2.2.0

Fetch all history for all tags and branches when fetch-depth=0

v2.1.1

Changes to support GHES (here and here)

v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22

v2.0.0

Do not pass cred on command line
Add input persist-credentials
Fallback to REST API to download repo




Commits

See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/checkout from 2 to 2.3.4.

Release notes
Sourced from actions/checkout's releases.

v2.3.4

Add missing awaits
Swap to Environment Files

v2.3.3

Remove Unneeded commit information from build logs
Add Licensed to verify third party dependencies

v2.3.2
Add Third Party License Information to Dist Files
v2.3.1
Fix default branch resolution for .wiki and when using SSH
v2.3.0
Fallback to the default branch
v2.2.0
Fetch all history for all tags and branches when fetch-depth=0
v2.1.1
Changes to support GHES (here and here)
v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22




Changelog
Sourced from actions/checkout's changelog.

Changelog
v2.3.1

Fix default branch resolution for .wiki and when using SSH

v2.3.0

Fallback to the default branch

v2.2.0

Fetch all history for all tags and branches when fetch-depth=0

v2.1.1

Changes to support GHES (here and here)

v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22

v2.0.0

Do not pass cred on command line
Add input persist-credentials
Fallback to REST API to download repo




Commits

See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5451,2021-05-13T06:24:45Z,2021-05-13T06:55:34Z,2021-05-13T06:55:48Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 3.17.0 to 3.17.1,1,['dependencies'],https://github.com/mruby/mruby/pull/5451,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5451,"Bumps github/super-linter from 3.17.0 to 3.17.1.

Commits

34b2f80 Updating action.yml with new release version (#1556)
3dc85fc Allow ansible-lint with git diffs (#1554)
5a91fdd Bump docker/login-action from 1 to 1.9.0 (#1547)
fffb573 Bump docker/build-push-action from 2 to 2.4.0 (#1548)
1fbefb8 Bump docker/setup-buildx-action from 1 to 1.3.0 (#1546)
b6bd7d1 Update dependabot.yml (#1544)
3e0bd7f Eslint for json jsonc and json5 (#1524)
d69b94a Bump @​typescript-eslint/parser from 4.22.1 to 4.23.0 in /dependencies (#1538)
2a61a34 Bump accurics/terrascan from 1.5.1 to 1.6.0 (#1539)
fcad692 Bump golangci/golangci-lint from v1.39.0 to v1.40.0 (#1540)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 3.17.0 to 3.17.1.

Commits

34b2f80 Updating action.yml with new release version (#1556)
3dc85fc Allow ansible-lint with git diffs (#1554)
5a91fdd Bump docker/login-action from 1 to 1.9.0 (#1547)
fffb573 Bump docker/build-push-action from 2 to 2.4.0 (#1548)
1fbefb8 Bump docker/setup-buildx-action from 1 to 1.3.0 (#1546)
b6bd7d1 Update dependabot.yml (#1544)
3e0bd7f Eslint for json jsonc and json5 (#1524)
d69b94a Bump @​typescript-eslint/parser from 4.22.1 to 4.23.0 in /dependencies (#1538)
2a61a34 Bump accurics/terrascan from 1.5.1 to 1.6.0 (#1539)
fcad692 Bump golangci/golangci-lint from v1.39.0 to v1.40.0 (#1540)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5456,2021-05-20T10:56:06Z,2021-05-20T23:12:55Z,2021-05-20T23:12:55Z,MERGED,True,2,2,1,https://github.com/shuujii,Support load 64-bit integer from mrb format with MRB_32BIT and MRB_INT64,1,[],https://github.com/mruby/mruby/pull/5456,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5456,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5459,2021-05-22T08:00:39Z,2021-05-22T15:02:55Z,2021-05-22T15:02:55Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `src/fmt_fp.c` [ci skip],1,[],https://github.com/mruby/mruby/pull/5459,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5459,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5460,2021-05-23T08:00:29Z,2022-03-22T12:54:15Z,2022-03-22T12:54:21Z,CLOSED,False,84,60,7,https://github.com/dearblue,Separate non-mruby licenses into files; ref #5448,1,[],https://github.com/mruby/mruby/pull/5460,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5460,"If it is included in the source code, it will be copy instead of move.
@tsahara @matsumotory,
If you think this PR is a problem, please comment.","If it is included in the source code, it will be copy instead of move.
@tsahara @matsumotory,
If you think this PR is a problem, please comment.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5460,2021-05-23T08:00:29Z,2022-03-22T12:54:15Z,2022-03-22T12:54:21Z,CLOSED,False,84,60,7,https://github.com/dearblue,Separate non-mruby licenses into files; ref #5448,1,[],https://github.com/mruby/mruby/pull/5460,https://github.com/tsahara,2,https://github.com/mruby/mruby/pull/5460#issuecomment-846643739,"If it is included in the source code, it will be copy instead of move.
@tsahara @matsumotory,
If you think this PR is a problem, please comment.",it looks okay to me.,True,{'THUMBS_UP': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,5460,2021-05-23T08:00:29Z,2022-03-22T12:54:15Z,2022-03-22T12:54:21Z,CLOSED,False,84,60,7,https://github.com/dearblue,Separate non-mruby licenses into files; ref #5448,1,[],https://github.com/mruby/mruby/pull/5460,https://github.com/matsumotory,3,https://github.com/mruby/mruby/pull/5460#issuecomment-848467999,"If it is included in the source code, it will be copy instead of move.
@tsahara @matsumotory,
If you think this PR is a problem, please comment.",@dearblue Looks good!,True,{'THUMBS_UP': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,5460,2021-05-23T08:00:29Z,2022-03-22T12:54:15Z,2022-03-22T12:54:21Z,CLOSED,False,84,60,7,https://github.com/dearblue,Separate non-mruby licenses into files; ref #5448,1,[],https://github.com/mruby/mruby/pull/5460,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5460#issuecomment-1075139231,"If it is included in the source code, it will be copy instead of move.
@tsahara @matsumotory,
If you think this PR is a problem, please comment.","Since I closed #5448, which was the impetus for this PR, I have decided to close this one as well.
Thank you for your review and confirmation.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5461,2021-05-26T05:58:37Z,2021-05-26T06:09:52Z,2021-05-26T06:10:00Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 3.17.1 to 4.0.2,1,['dependencies'],https://github.com/mruby/mruby/pull/5461,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5461,"Bumps github/super-linter from 3.17.1 to 4.0.2.

Release notes
Sourced from github/super-linter's releases.

Release v4.0.2
Changelog

split up deployments for size and time @​admiralAwkbar (#1592)
bump version to 4.0.1 @​admiralAwkbar (#1588)
Image 4.0 @​admiralAwkbar (#1565)
fix gcc LTO @​M1cha (#1562)
Bump golangci/golangci-lint from v1.40.0 to v1.40.1 @​dependabot (#1561)
fix the string to one liner @​admiralAwkbar (#1557)

This Release allows for the github/super-linter:slim images, see README for more info
See details of all code changes since the previous release



Commits

8eb5d7a Updating action.yml with new release version
0e740f3 split it up (#1592)
c0a3b95 bump version (#1588)
83badbc Image 4.0 (#1565)
866b5af fix gcc LTO (#1562)
49eba1b Bump golangci/golangci-lint from v1.40.0 to v1.40.1 (#1561)
1306e3d fix the string to one liner (#1557)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 3.17.1 to 4.0.2.

Release notes
Sourced from github/super-linter's releases.

Release v4.0.2
Changelog

split up deployments for size and time @​admiralAwkbar (#1592)
bump version to 4.0.1 @​admiralAwkbar (#1588)
Image 4.0 @​admiralAwkbar (#1565)
fix gcc LTO @​M1cha (#1562)
Bump golangci/golangci-lint from v1.40.0 to v1.40.1 @​dependabot (#1561)
fix the string to one liner @​admiralAwkbar (#1557)

This Release allows for the github/super-linter:slim images, see README for more info
See details of all code changes since the previous release



Commits

8eb5d7a Updating action.yml with new release version
0e740f3 split it up (#1592)
c0a3b95 bump version (#1588)
83badbc Image 4.0 (#1565)
866b5af fix gcc LTO (#1562)
49eba1b Bump golangci/golangci-lint from v1.40.0 to v1.40.1 (#1561)
1306e3d fix the string to one liner (#1557)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5463,2021-05-28T06:02:33Z,2021-05-28T07:33:09Z,2021-05-28T07:33:19Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/cache from 2.1.5 to 2.1.6,1,['dependencies'],https://github.com/mruby/mruby/pull/5463,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5463,"Bumps actions/cache from 2.1.5 to 2.1.6.

Release notes
Sourced from actions/cache's releases.

v2.1.6

Catch unhandled ""bad file descriptor"" errors that sometimes occurs when the cache server returns non-successful response (actions/cache#596)




Commits

c64c572 Catch and log unhandled exceptions stemming from closed file descriptor (#596)
cc2d767 Update Rust directories recommended for caching (#433)
2fa955d Update examples.md (#588)
3a69637 elixir typo - stray parenthesis (#569)
366e5ba Update cache key for Elixir (#568)
8d3f2fc Update dependencies (#565)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/cache from 2.1.5 to 2.1.6.

Release notes
Sourced from actions/cache's releases.

v2.1.6

Catch unhandled ""bad file descriptor"" errors that sometimes occurs when the cache server returns non-successful response (actions/cache#596)




Commits

c64c572 Catch and log unhandled exceptions stemming from closed file descriptor (#596)
cc2d767 Update Rust directories recommended for caching (#433)
2fa955d Update examples.md (#588)
3a69637 elixir typo - stray parenthesis (#569)
366e5ba Update cache key for Elixir (#568)
8d3f2fc Update dependencies (#565)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5464,2021-05-30T23:41:54Z,2021-05-31T00:16:34Z,2021-05-31T00:16:34Z,MERGED,True,1,1,1,https://github.com/shuujii,Fix typo in `lib/mruby/presym.rb`,1,[],https://github.com/mruby/mruby/pull/5464,https://github.com/shuujii,1,https://github.com/mruby/mruby/pull/5464,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5469,2021-06-04T06:54:21Z,2021-06-04T07:41:18Z,2021-06-04T07:41:30Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.0.2 to 4.1.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5469,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5469,"Bumps github/super-linter from 4.0.2 to 4.1.0.

Release notes
Sourced from github/super-linter's releases.

Release v4.1.0
Changelog

Update deploy-RELEASE-slim.yml @​admiralAwkbar (#1613)
KUBERNETES_KUBEVAL_OPTIONS @​admiralAwkbar (#1609)
Bump docker/build-push-action from 2.4.0 to 2.5.0 @​dependabot (#1603)
Bump typescript from 4.2.4 to 4.3.2 in /dependencies @​dependabot (#1604)
Bump gherkin-lint from 4.2.1 to 4.2.2 in /dependencies @​dependabot (#1605)
Bump snakemake from 6.4.0 to 6.4.1 in /dependencies @​dependabot (#1606)
update version @​admiralAwkbar (#1607)
fix slim docs @​admiralAwkbar (#1598)
docs: added missing c# to list of slim removed langs @​TomerFi (#1597)
adding the old way @​admiralAwkbar (#1595)
Bump alpine/terragrunt from 0.15.3 to 0.15.4 @​dependabot (#1571)
Bump actions/stale from 3.0.18 to 3.0.19 @​dependabot (#1570)
Bump jscpd from 3.3.25 to 3.3.26 in /dependencies @​dependabot (#1574)
Bump snakemake from 6.3.0 to 6.4.0 in /dependencies @​dependabot (#1579)
Bump mvdan/shfmt from v3.2.4 to v3.3.0 @​dependabot (#1572)
Bump eslint from 7.26.0 to 7.27.0 in /dependencies @​dependabot (#1573)
Bump cfn-lint from 0.49.1 to 0.49.2 in /dependencies @​dependabot (#1577)
Bump cpplint from 1.5.4 to 1.5.5 in /dependencies @​dependabot (#1578)
Bump @​typescript-eslint/parser from 4.23.0 to 4.25.0 in /dependencies @​dependabot (#1582)
Bump @​typescript-eslint/eslint-plugin from 4.23.0 to 4.25.0 in /dependencies @​dependabot (#1583)
Bump ansible-lint from 5.0.8 to 5.0.11 in /dependencies @​dependabot (#1586)
Release-update-to-v4.0.2 @​github-actions (#1594)
Release-update-to-v4.0.1 @​github-actions (#1591)

🐛 Bug Fixes

wildcard search for ansible @​admiralAwkbar (#1608)

🧰 Maintenance

Add community activity stats @​zkoppert (#1602)

See details of all code changes since the previous release



Commits

a3bae14 Updating action.yml with new release version
30812b0 Update deploy-RELEASE-slim.yml (#1613)
6ce478c Kube (#1609)
ebf6194 wildcard search (#1608)
cc1f993 Bump docker/build-push-action from 2.4.0 to 2.5.0 (#1603)
5c21223 Bump typescript from 4.2.4 to 4.3.2 in /dependencies (#1604)
af81af0 Bump gherkin-lint from 4.2.1 to 4.2.2 in /dependencies (#1605)
799dccd Bump snakemake from 6.4.0 to 6.4.1 in /dependencies (#1606)
a6e46de update version (#1607)
ac6fdeb Add community activity stats (#1602)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.0.2 to 4.1.0.

Release notes
Sourced from github/super-linter's releases.

Release v4.1.0
Changelog

Update deploy-RELEASE-slim.yml @​admiralAwkbar (#1613)
KUBERNETES_KUBEVAL_OPTIONS @​admiralAwkbar (#1609)
Bump docker/build-push-action from 2.4.0 to 2.5.0 @​dependabot (#1603)
Bump typescript from 4.2.4 to 4.3.2 in /dependencies @​dependabot (#1604)
Bump gherkin-lint from 4.2.1 to 4.2.2 in /dependencies @​dependabot (#1605)
Bump snakemake from 6.4.0 to 6.4.1 in /dependencies @​dependabot (#1606)
update version @​admiralAwkbar (#1607)
fix slim docs @​admiralAwkbar (#1598)
docs: added missing c# to list of slim removed langs @​TomerFi (#1597)
adding the old way @​admiralAwkbar (#1595)
Bump alpine/terragrunt from 0.15.3 to 0.15.4 @​dependabot (#1571)
Bump actions/stale from 3.0.18 to 3.0.19 @​dependabot (#1570)
Bump jscpd from 3.3.25 to 3.3.26 in /dependencies @​dependabot (#1574)
Bump snakemake from 6.3.0 to 6.4.0 in /dependencies @​dependabot (#1579)
Bump mvdan/shfmt from v3.2.4 to v3.3.0 @​dependabot (#1572)
Bump eslint from 7.26.0 to 7.27.0 in /dependencies @​dependabot (#1573)
Bump cfn-lint from 0.49.1 to 0.49.2 in /dependencies @​dependabot (#1577)
Bump cpplint from 1.5.4 to 1.5.5 in /dependencies @​dependabot (#1578)
Bump @​typescript-eslint/parser from 4.23.0 to 4.25.0 in /dependencies @​dependabot (#1582)
Bump @​typescript-eslint/eslint-plugin from 4.23.0 to 4.25.0 in /dependencies @​dependabot (#1583)
Bump ansible-lint from 5.0.8 to 5.0.11 in /dependencies @​dependabot (#1586)
Release-update-to-v4.0.2 @​github-actions (#1594)
Release-update-to-v4.0.1 @​github-actions (#1591)

🐛 Bug Fixes

wildcard search for ansible @​admiralAwkbar (#1608)

🧰 Maintenance

Add community activity stats @​zkoppert (#1602)

See details of all code changes since the previous release



Commits

a3bae14 Updating action.yml with new release version
30812b0 Update deploy-RELEASE-slim.yml (#1613)
6ce478c Kube (#1609)
ebf6194 wildcard search (#1608)
cc1f993 Bump docker/build-push-action from 2.4.0 to 2.5.0 (#1603)
5c21223 Bump typescript from 4.2.4 to 4.3.2 in /dependencies (#1604)
af81af0 Bump gherkin-lint from 4.2.1 to 4.2.2 in /dependencies (#1605)
799dccd Bump snakemake from 6.4.0 to 6.4.1 in /dependencies (#1606)
a6e46de update version (#1607)
ac6fdeb Add community activity stats (#1602)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5473,2021-06-09T06:03:04Z,2021-06-09T08:11:23Z,2021-06-09T08:11:33Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.1.0 to 4.2.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5473,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5473,"Bumps github/super-linter from 4.1.0 to 4.2.0.

Release notes
Sourced from github/super-linter's releases.

Release v4.2.0
Changelog

adding stale config @​admiralAwkbar (#1639)
Bump sql-lint from 0.0.17 to 0.0.18 in /dependencies @​dependabot (#1627)
Bump cljkondo/clj-kondo from 2021.04.23-alpine to 2021.06.01-alpine @​dependabot (#1622)
Bump wata727/tflint from 0.28.1 to 0.29.0 @​dependabot (#1623)
Bump yoheimuta/protolint from v0.31.0 to v0.32.0 @​dependabot (#1625)
Bump alpine/terragrunt from 0.15.4 to 0.15.5 @​dependabot (#1626)
Bump eslint from 7.27.0 to 7.28.0 in /dependencies @​dependabot (#1628)
Bump prettier from 2.3.0 to 2.3.1 in /dependencies @​dependabot (#1629)
Bump @​typescript-eslint/parser from 4.25.0 to 4.26.1 in /dependencies @​dependabot (#1636)
Bump @​typescript-eslint/eslint-plugin from 4.25.0 to 4.26.1 in /dependencies @​dependabot (#1637)
Bump asl-validator from 1.9.8 to 1.10.0 in /dependencies @​dependabot (#1621)
Release-update-to-v4.1.0 @​github-actions (#1615)

🚀 Features

adding find algorithm @​admiralAwkbar (#1640)

This allows the new flag USE_FIND_ALGORITHM



🧰 Maintenance

adding find algorithm @​admiralAwkbar (#1640)

See details of all code changes since the previous release



Commits

75e9c06 Updating action.yml with new release version
4faa643 adding find algorithm (#1640)
7fe0d99 adding stale config (#1639)
8b38155 Bump sql-lint from 0.0.17 to 0.0.18 in /dependencies (#1627)
8541928 Bump cljkondo/clj-kondo from 2021.04.23-alpine to 2021.06.01-alpine (#1622)
52e54ed Bump wata727/tflint from 0.28.1 to 0.29.0 (#1623)
782a606 Bump yoheimuta/protolint from v0.31.0 to v0.32.0 (#1625)
8e88de7 Bump alpine/terragrunt from 0.15.4 to 0.15.5 (#1626)
793bf74 Bump eslint from 7.27.0 to 7.28.0 in /dependencies (#1628)
28373b0 Bump prettier from 2.3.0 to 2.3.1 in /dependencies (#1629)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.1.0 to 4.2.0.

Release notes
Sourced from github/super-linter's releases.

Release v4.2.0
Changelog

adding stale config @​admiralAwkbar (#1639)
Bump sql-lint from 0.0.17 to 0.0.18 in /dependencies @​dependabot (#1627)
Bump cljkondo/clj-kondo from 2021.04.23-alpine to 2021.06.01-alpine @​dependabot (#1622)
Bump wata727/tflint from 0.28.1 to 0.29.0 @​dependabot (#1623)
Bump yoheimuta/protolint from v0.31.0 to v0.32.0 @​dependabot (#1625)
Bump alpine/terragrunt from 0.15.4 to 0.15.5 @​dependabot (#1626)
Bump eslint from 7.27.0 to 7.28.0 in /dependencies @​dependabot (#1628)
Bump prettier from 2.3.0 to 2.3.1 in /dependencies @​dependabot (#1629)
Bump @​typescript-eslint/parser from 4.25.0 to 4.26.1 in /dependencies @​dependabot (#1636)
Bump @​typescript-eslint/eslint-plugin from 4.25.0 to 4.26.1 in /dependencies @​dependabot (#1637)
Bump asl-validator from 1.9.8 to 1.10.0 in /dependencies @​dependabot (#1621)
Release-update-to-v4.1.0 @​github-actions (#1615)

🚀 Features

adding find algorithm @​admiralAwkbar (#1640)

This allows the new flag USE_FIND_ALGORITHM



🧰 Maintenance

adding find algorithm @​admiralAwkbar (#1640)

See details of all code changes since the previous release



Commits

75e9c06 Updating action.yml with new release version
4faa643 adding find algorithm (#1640)
7fe0d99 adding stale config (#1639)
8b38155 Bump sql-lint from 0.0.17 to 0.0.18 in /dependencies (#1627)
8541928 Bump cljkondo/clj-kondo from 2021.04.23-alpine to 2021.06.01-alpine (#1622)
52e54ed Bump wata727/tflint from 0.28.1 to 0.29.0 (#1623)
782a606 Bump yoheimuta/protolint from v0.31.0 to v0.32.0 (#1625)
8e88de7 Bump alpine/terragrunt from 0.15.4 to 0.15.5 (#1626)
793bf74 Bump eslint from 7.27.0 to 7.28.0 in /dependencies (#1628)
28373b0 Bump prettier from 2.3.0 to 2.3.1 in /dependencies (#1629)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5474,2021-06-10T05:55:59Z,2021-06-10T06:04:10Z,2021-06-10T06:04:19Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.2.0 to 4.2.1,1,['dependencies'],https://github.com/mruby/mruby/pull/5474,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5474,"Bumps github/super-linter from 4.2.0 to 4.2.1.

Release notes
Sourced from github/super-linter's releases.

Release v4.2.1
Changelog

Release-update-to-v4.2.0 @​github-actions (#1642)

🚀 Features

adding rules file  for PHP @​admiralAwkbar (#1644)

PHP_CONFIG_FILE allows for php.ini to be passed to PHP lint
See details of all code changes since the previous release






Commits

15d845b Updating action.yml with new release version
2c135d4 adding rules file (#1644)
3565352 Updating action.yml with new release version (#1642)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.2.0 to 4.2.1.

Release notes
Sourced from github/super-linter's releases.

Release v4.2.1
Changelog

Release-update-to-v4.2.0 @​github-actions (#1642)

🚀 Features

adding rules file  for PHP @​admiralAwkbar (#1644)

PHP_CONFIG_FILE allows for php.ini to be passed to PHP lint
See details of all code changes since the previous release






Commits

15d845b Updating action.yml with new release version
2c135d4 adding rules file (#1644)
3565352 Updating action.yml with new release version (#1642)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5475,2021-06-11T05:50:50Z,2021-06-11T06:14:00Z,2021-06-11T06:14:11Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.2.1 to 4.2.2,1,['dependencies'],https://github.com/mruby/mruby/pull/5475,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5475,"Bumps github/super-linter from 4.2.1 to 4.2.2.

Release notes
Sourced from github/super-linter's releases.

Release v4.2.2
Changelog

Release-update-to-v4.2.1 @​github-actions (#1646)

🚀 Features

LINTER_RULE_PATH fix @​admiralAwkbar (#1649)

🐛 Bug Fixes

LINTER_RULE_PATH fix @​admiralAwkbar (#1649)

See details of all code changes since the previous release



Commits

0ca0ee8 Updating action.yml with new release version
c4280ea LINTER_RULE_PATH fix (#1649)
20eb231 Updating action.yml with new release version (#1646)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.2.1 to 4.2.2.

Release notes
Sourced from github/super-linter's releases.

Release v4.2.2
Changelog

Release-update-to-v4.2.1 @​github-actions (#1646)

🚀 Features

LINTER_RULE_PATH fix @​admiralAwkbar (#1649)

🐛 Bug Fixes

LINTER_RULE_PATH fix @​admiralAwkbar (#1649)

See details of all code changes since the previous release



Commits

0ca0ee8 Updating action.yml with new release version
c4280ea LINTER_RULE_PATH fix (#1649)
20eb231 Updating action.yml with new release version (#1646)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5476,2021-06-12T07:14:05Z,2021-06-12T07:18:35Z,2021-06-20T02:17:52Z,MERGED,True,2,3,1,https://github.com/dearblue,Raise `TypeError` with `super` inside `instance_eval` / `class_eval`,1,[],https://github.com/mruby/mruby/pull/5476,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5476,"Commit d0f6018 introduced an exception as a limitation of mruby.
Subsequent CRuby-2.7 has changed its behavior to raise an exception.
ref: ruby/ruby@55b7ba3","Commit d0f6018 introduced an exception as a limitation of mruby.
Subsequent CRuby-2.7 has changed its behavior to raise an exception.
ref: ruby/ruby@55b7ba3",True,{}
mruby/mruby,https://github.com/mruby/mruby,5479,2021-06-16T23:23:57Z,,2021-08-27T01:23:09Z,OPEN,False,1,0,1,https://github.com/jbampton,Add Discord link,1,[],https://github.com/mruby/mruby/pull/5479,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5479,"Hi @matz  !!
I want to play a greater part in mruby and its success.
So today I created a brand new mruby Discord Server !!
https://discord.gg/KAQKge69Yy
About three months ago Microsoft wanted to buy Discord for 10 billion.
https://discord.com/
Please join and tell the other team members.
I will provide training and even give admin and/or moderator roles to the team.
Kind Regards, John Bampton.","Hi @matz  !!
I want to play a greater part in mruby and its success.
So today I created a brand new mruby Discord Server !!
https://discord.gg/KAQKge69Yy
About three months ago Microsoft wanted to buy Discord for 10 billion.
https://discord.com/
Please join and tell the other team members.
I will provide training and even give admin and/or moderator roles to the team.
Kind Regards, John Bampton.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5479,2021-06-16T23:23:57Z,,2021-08-27T01:23:09Z,OPEN,False,1,0,1,https://github.com/jbampton,Add Discord link,1,[],https://github.com/mruby/mruby/pull/5479,https://github.com/jbampton,2,https://github.com/mruby/mruby/pull/5479#issuecomment-906850694,"Hi @matz  !!
I want to play a greater part in mruby and its success.
So today I created a brand new mruby Discord Server !!
https://discord.gg/KAQKge69Yy
About three months ago Microsoft wanted to buy Discord for 10 billion.
https://discord.com/
Please join and tell the other team members.
I will provide training and even give admin and/or moderator roles to the team.
Kind Regards, John Bampton.","Reporting back now about 6 weeks later we have 23 total members and some ranks and colored roles.
Most are my friends from all over the web.  It can be even way better !!!
Images from this mruby community:",True,{}
mruby/mruby,https://github.com/mruby/mruby,5480,2021-06-17T00:15:45Z,2021-06-17T02:44:21Z,2021-06-17T02:56:29Z,MERGED,True,2,0,1,https://github.com/jbampton,Add two more pre-commit hooks,1,[],https://github.com/mruby/mruby/pull/5480,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5480,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5480,2021-06-17T00:15:45Z,2021-06-17T02:44:21Z,2021-06-17T02:56:29Z,MERGED,True,2,0,1,https://github.com/jbampton,Add two more pre-commit hooks,1,[],https://github.com/mruby/mruby/pull/5480,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5480#issuecomment-862843838,,Could you explain what added two lines do?,True,"{'THUMBS_UP': ['https://github.com/jbampton'], 'EYES': ['https://github.com/jbampton']}"
mruby/mruby,https://github.com/mruby/mruby,5480,2021-06-17T00:15:45Z,2021-06-17T02:44:21Z,2021-06-17T02:56:29Z,MERGED,True,2,0,1,https://github.com/jbampton,Add two more pre-commit hooks,1,[],https://github.com/mruby/mruby/pull/5480,https://github.com/jbampton,3,https://github.com/mruby/mruby/pull/5480#issuecomment-862847131,,"Both hooks are from the official pre-commit repo:
https://github.com/pre-commit/pre-commit-hooks
So we have:
https://github.com/pre-commit/pre-commit-hooks#check-vcs-permalinks
https://github.com/pre-commit/pre-commit-hooks#detect-private-key",True,{}
mruby/mruby,https://github.com/mruby/mruby,5480,2021-06-17T00:15:45Z,2021-06-17T02:44:21Z,2021-06-17T02:56:29Z,MERGED,True,2,0,1,https://github.com/jbampton,Add two more pre-commit hooks,1,[],https://github.com/mruby/mruby/pull/5480,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5480#issuecomment-862873166,,Thank you.,True,"{'THUMBS_UP': ['https://github.com/jbampton'], 'HEART': ['https://github.com/jbampton'], 'HOORAY': ['https://github.com/jbampton']}"
mruby/mruby,https://github.com/mruby/mruby,5481,2021-06-17T00:27:49Z,2021-06-17T01:26:48Z,2021-06-17T01:39:07Z,MERGED,True,1,1,1,https://github.com/jbampton,Fix shebang by removing whitespace,1,[],https://github.com/mruby/mruby/pull/5481,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5481,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5482,2021-06-17T02:06:38Z,2021-06-17T02:43:07Z,2021-06-17T02:58:06Z,MERGED,True,7,7,3,https://github.com/jbampton,Standardize commands inside backticks,1,[],https://github.com/mruby/mruby/pull/5482,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5482,Remove whitespace,Remove whitespace,True,{}
mruby/mruby,https://github.com/mruby/mruby,5483,2021-06-17T14:05:12Z,2021-06-17T22:26:35Z,2021-06-17T22:26:42Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/upload-artifact from 2.2.3 to 2.2.4,1,['dependencies'],https://github.com/mruby/mruby/pull/5483,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5483,"Bumps actions/upload-artifact from 2.2.3 to 2.2.4.

Release notes
Sourced from actions/upload-artifact's releases.

v2.2.4

Retry on HTTP 500 responses from the service




Commits

27121b0 Ingest v0.5.2 of @​actions/artifact (#224)
4537e11 Bump ws from 7.2.3 to 7.5.0 (#221)
2368fec Avoid triggering push for Dependabot branches (again) (#223)
52a3c6b Bump glob-parent from 5.1.1 to 5.1.2 (#219)
76f4433 Bump hosted-git-info from 2.8.5 to 2.8.9 (#203)
4642646 Merge pull request #222 from actions/brcrista/dependabot-push
8507687 avoid triggering push for Dependabot branches
0482dbb Merge pull request #202 from actions/dependabot/npm_and_yarn/lodash-4.17.21
5851818 Merge pull request #211 from JasonGross/patch-1
4db8255 Fix the grammar in a warning message
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/upload-artifact from 2.2.3 to 2.2.4.

Release notes
Sourced from actions/upload-artifact's releases.

v2.2.4

Retry on HTTP 500 responses from the service




Commits

27121b0 Ingest v0.5.2 of @​actions/artifact (#224)
4537e11 Bump ws from 7.2.3 to 7.5.0 (#221)
2368fec Avoid triggering push for Dependabot branches (again) (#223)
52a3c6b Bump glob-parent from 5.1.1 to 5.1.2 (#219)
76f4433 Bump hosted-git-info from 2.8.5 to 2.8.9 (#203)
4642646 Merge pull request #222 from actions/brcrista/dependabot-push
8507687 avoid triggering push for Dependabot branches
0482dbb Merge pull request #202 from actions/dependabot/npm_and_yarn/lodash-4.17.21
5851818 Merge pull request #211 from JasonGross/patch-1
4db8255 Fix the grammar in a warning message
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5484,2021-06-18T22:42:01Z,2021-06-19T02:06:03Z,2021-06-19T04:01:16Z,MERGED,True,10,13,4,https://github.com/jbampton,Enable markdownlint rule MD046 code-block-style,1,[],https://github.com/mruby/mruby/pull/5484,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5484,Fix C Markdown code block style,Fix C Markdown code block style,True,{}
mruby/mruby,https://github.com/mruby/mruby,5485,2021-06-19T06:22:34Z,2021-06-19T12:22:05Z,2021-06-20T02:17:51Z,CLOSED,False,35,14,3,https://github.com/dearblue,Added `MRB_API` function to get only block arguments,1,[],https://github.com/mruby/mruby/pull/5485,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5485,"MRB_API function added:

 mrb_get_arg_block()
 mrb_block_given_p() -- The name comes from CRuby's rb_block_given_p ()

At the same time, it applies to f_instance_eval() and f_class_eval() of mruby-eval.","MRB_API function added:

 mrb_get_arg_block()
 mrb_block_given_p() -- The name comes from CRuby's rb_block_given_p ()

At the same time, it applies to f_instance_eval() and f_class_eval() of mruby-eval.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5485,2021-06-19T06:22:34Z,2021-06-19T12:22:05Z,2021-06-20T02:17:51Z,CLOSED,False,35,14,3,https://github.com/dearblue,Added `MRB_API` function to get only block arguments,1,[],https://github.com/mruby/mruby/pull/5485,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5485#issuecomment-864390656,"MRB_API function added:

 mrb_get_arg_block()
 mrb_block_given_p() -- The name comes from CRuby's rb_block_given_p ()

At the same time, it applies to f_instance_eval() and f_class_eval() of mruby-eval.",I am not fully satisfied with mrb_get_arg_block (mrb_block_given_p is OK). Why do we need this function where we can retrieve the block argument with mrb_get_args. Thus I don't understand the benefit of the changes for eval.c neither.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5485,2021-06-19T06:22:34Z,2021-06-19T12:22:05Z,2021-06-20T02:17:51Z,CLOSED,False,35,14,3,https://github.com/dearblue,Added `MRB_API` function to get only block arguments,1,[],https://github.com/mruby/mruby/pull/5485,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5485#issuecomment-864395968,"MRB_API function added:

 mrb_get_arg_block()
 mrb_block_given_p() -- The name comes from CRuby's rb_block_given_p ()

At the same time, it applies to f_instance_eval() and f_class_eval() of mruby-eval.","There is no strong reason, but:

Because there is mrb_get_arg{c,v,1}() functions.
Because it is heavy to use mrb_get_args() inside the mrb_block_given_p() function.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5485,2021-06-19T06:22:34Z,2021-06-19T12:22:05Z,2021-06-20T02:17:51Z,CLOSED,False,35,14,3,https://github.com/dearblue,Added `MRB_API` function to get only block arguments,1,[],https://github.com/mruby/mruby/pull/5485,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5485#issuecomment-864397891,"MRB_API function added:

 mrb_get_arg_block()
 mrb_block_given_p() -- The name comes from CRuby's rb_block_given_p ()

At the same time, it applies to f_instance_eval() and f_class_eval() of mruby-eval.","OK, I will modify and merge the patch.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5485,2021-06-19T06:22:34Z,2021-06-19T12:22:05Z,2021-06-20T02:17:51Z,CLOSED,False,35,14,3,https://github.com/dearblue,Added `MRB_API` function to get only block arguments,1,[],https://github.com/mruby/mruby/pull/5485,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5485#issuecomment-864399303,"MRB_API function added:

 mrb_get_arg_block()
 mrb_block_given_p() -- The name comes from CRuby's rb_block_given_p ()

At the same time, it applies to f_instance_eval() and f_class_eval() of mruby-eval.",merged by f678620,True,{'HEART': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,5486,2021-06-20T02:35:55Z,2021-06-21T01:24:44Z,2021-06-26T02:02:17Z,MERGED,True,84,90,18,https://github.com/dearblue,Added `MRB_OBJ_ALLOC()` macro that does not require a cast,2,[],https://github.com/mruby/mruby/pull/5486,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5486,"Also, rewrite type_name() in src/object.c using MRB_VTYPE_FOREACH() added for implementation.","Also, rewrite type_name() in src/object.c using MRB_VTYPE_FOREACH() added for implementation.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5487,2021-06-21T21:02:36Z,2021-06-22T04:14:35Z,2021-06-22T04:18:46Z,MERGED,True,44,59,9,https://github.com/jbampton,"Enable markdownlint rules MD003,MD005,MD007",1,[],https://github.com/mruby/mruby/pull/5487,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5487,"Lint Markdown
https://github.com/DavidAnson/markdownlint#rules--aliases","Lint Markdown
https://github.com/DavidAnson/markdownlint#rules--aliases",True,{}
mruby/mruby,https://github.com/mruby/mruby,5488,2021-06-22T02:38:42Z,2021-06-22T07:36:38Z,2021-06-22T22:26:35Z,CLOSED,False,8,8,14,https://github.com/jbampton,Standardize Ruby file names,1,[],https://github.com/mruby/mruby/pull/5488,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5488,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5488,2021-06-22T02:38:42Z,2021-06-22T07:36:38Z,2021-06-22T22:26:35Z,CLOSED,False,8,8,14,https://github.com/jbampton,Standardize Ruby file names,1,[],https://github.com/mruby/mruby/pull/5488,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5488#issuecomment-865672870,,"Underscores (_) are used to combine words in a description, and hyphens (-) are used to combine descriptions. There are the following two files that don't follow the rule. We will rename them.

android_arm64-v8a.rb → android_arm64_v8a.rb
no-float.rb → host-nofloat.rb

Additional two files, clang-asan.rb and ci/gcc-clang.rb are bit controversial. For the time being, we will keep the names as they are.",True,"{'THUMBS_UP': ['https://github.com/jbampton'], 'EYES': ['https://github.com/jbampton'], 'ROCKET': ['https://github.com/jbampton'], 'HOORAY': ['https://github.com/jbampton'], 'HEART': ['https://github.com/jbampton']}"
mruby/mruby,https://github.com/mruby/mruby,5489,2021-06-22T03:20:29Z,2021-06-22T04:13:14Z,2021-06-22T04:18:29Z,MERGED,True,2,2,1,https://github.com/jbampton,pre-commit autoupdate,1,[],https://github.com/mruby/mruby/pull/5489,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5489,https://pre-commit.com/#pre-commit-autoupdate,https://pre-commit.com/#pre-commit-autoupdate,True,{}
mruby/mruby,https://github.com/mruby/mruby,5490,2021-06-22T05:44:11Z,,2021-06-22T06:39:35Z,OPEN,False,407,405,25,https://github.com/jbampton,Add prettier pre-commit hook,1,[],https://github.com/mruby/mruby/pull/5490,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5490,"Add prettier config file .prettierrc
https://prettier.io/docs/en/configuration.html
Add .prettierignore
https://prettier.io/docs/en/ignore.html
https://prettier.io/docs/en/precommit.html","Add prettier config file .prettierrc
https://prettier.io/docs/en/configuration.html
Add .prettierignore
https://prettier.io/docs/en/ignore.html
https://prettier.io/docs/en/precommit.html",True,{}
mruby/mruby,https://github.com/mruby/mruby,5492,2021-06-23T00:56:51Z,2021-06-23T01:54:51Z,2021-06-23T04:24:37Z,MERGED,True,2,16,2,https://github.com/jbampton,Add official pre-commit file-contents-sorter,1,[],https://github.com/mruby/mruby/pull/5492,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5492,"Remove unneeded bash script sort-codespell-wordlist.sh
https://github.com/pre-commit/pre-commit-hooks#file-contents-sorter","Remove unneeded bash script sort-codespell-wordlist.sh
https://github.com/pre-commit/pre-commit-hooks#file-contents-sorter",True,{}
mruby/mruby,https://github.com/mruby/mruby,5493,2021-06-26T02:20:25Z,2021-06-28T00:13:55Z,2021-06-28T14:17:36Z,MERGED,True,247,133,10,https://github.com/dearblue,Fixed finding variables from `proc` in `binding.eval` failed,1,[],https://github.com/mruby/mruby/pull/5493,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5493,"Previously the following code did not produce the expected results:
bx = binding
block = bx.eval(""a = 1; proc { a }"")
bx.eval(""a = 2"")
p block.call  # Expect 2 but return 1 due to a bug
The previous implementation of Binding#eval evaluated the code and then merged the top layer variables.
This patch will parse and expand the variable space before making a call to eval.
This means that the call to Binding#eval will do the parsing twice.
In addition, the following changes will be made:

Make mrb_parser_foreach_top_variable(), mrb_binding_extract_proc() and mrb_binding_extract_env() functions private global functions.
Remove the posthook argument from mrb_exec_irep().
The posthook argument was introduced to implement the binding method.
This patch is unnecessary because it uses a different implementation method.

ref #5362
fixed #5491","Previously the following code did not produce the expected results:
bx = binding
block = bx.eval(""a = 1; proc { a }"")
bx.eval(""a = 2"")
p block.call  # Expect 2 but return 1 due to a bug
The previous implementation of Binding#eval evaluated the code and then merged the top layer variables.
This patch will parse and expand the variable space before making a call to eval.
This means that the call to Binding#eval will do the parsing twice.
In addition, the following changes will be made:

Make mrb_parser_foreach_top_variable(), mrb_binding_extract_proc() and mrb_binding_extract_env() functions private global functions.
Remove the posthook argument from mrb_exec_irep().
The posthook argument was introduced to implement the binding method.
This patch is unnecessary because it uses a different implementation method.

ref #5362
fixed #5491",True,{}
mruby/mruby,https://github.com/mruby/mruby,5494,2021-06-26T02:21:12Z,2021-06-26T03:17:14Z,2021-06-28T14:17:36Z,MERGED,True,1,0,1,https://github.com/dearblue,Fix memory leak in `Kernel#eval`,1,[],https://github.com/mruby/mruby/pull/5494,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5494,The mrbc_context remained unreleased when the mrb_parse_nstring() function returned NULL.,The mrbc_context remained unreleased when the mrb_parse_nstring() function returned NULL.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5495,2021-06-26T02:22:01Z,2021-06-27T05:32:44Z,2021-06-28T14:17:36Z,MERGED,True,1005,1001,3,https://github.com/dearblue,Fixed finding variables defined in the upper proc failed,1,[],https://github.com/mruby/mruby/pull/5495,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5495,"If no new variable was defined in the eval method, the variable was hidden from the nested eval method.
a = 1
p eval %(b = 2; eval %(a)) # => 1 (good)
p eval %(eval %(a)) # => undefined method 'a' (NoMethodError)
This issue has occurred since mruby 3.0.0.","If no new variable was defined in the eval method, the variable was hidden from the nested eval method.
a = 1
p eval %(b = 2; eval %(a)) # => 1 (good)
p eval %(eval %(a)) # => undefined method 'a' (NoMethodError)
This issue has occurred since mruby 3.0.0.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5496,2021-06-26T02:29:05Z,,2021-06-26T02:29:06Z,OPEN,False,27,17,3,https://github.com/dearblue,Make `mrb_load_exec()` return `nil` if there is a syntax error,1,[],https://github.com/mruby/mruby/pull/5496,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5496,"Previously it returned undef.
So for example, if there was a syntax error, the following code would cause SIGSEGV.
const char *code = ""syntax ? error ?"";
mrb_p(mrb, mrb_load_string(mrb, code));
This affects the behavior of the MRB_API function below:

mrb_load_file()
mrb_load_file_cxt()
mrb_load_detect_file_cxt()
mrb_load_string()
mrb_load_nstring()
mrb_load_string_cxt()
mrb_load_nstring_cxt()

I mentioned earlier why I want to change from undef to nil, but here's why I decided to change it:

Returns nil if an error occurred when returning from mrb_top_run().
The specific error can be found by confirming that mrb->exc is non-NULL.
Even if mrbc_context::no_exec is true, it is sufficient to check if it is either proc or nil.

However, this change can cause compatibility issues if it has already used mrb_undef_p() to distinguish between syntax errors.
This is the reason for making changes to the mrdb.c file (although the behavior does not change with or without changes).

Just to be sure.
I think the current behavior of returning undef is non-bug.","Previously it returned undef.
So for example, if there was a syntax error, the following code would cause SIGSEGV.
const char *code = ""syntax ? error ?"";
mrb_p(mrb, mrb_load_string(mrb, code));
This affects the behavior of the MRB_API function below:

mrb_load_file()
mrb_load_file_cxt()
mrb_load_detect_file_cxt()
mrb_load_string()
mrb_load_nstring()
mrb_load_string_cxt()
mrb_load_nstring_cxt()

I mentioned earlier why I want to change from undef to nil, but here's why I decided to change it:

Returns nil if an error occurred when returning from mrb_top_run().
The specific error can be found by confirming that mrb->exc is non-NULL.
Even if mrbc_context::no_exec is true, it is sufficient to check if it is either proc or nil.

However, this change can cause compatibility issues if it has already used mrb_undef_p() to distinguish between syntax errors.
This is the reason for making changes to the mrdb.c file (although the behavior does not change with or without changes).

Just to be sure.
I think the current behavior of returning undef is non-bug.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5497,2021-06-28T14:19:18Z,2021-06-29T00:50:00Z,2021-07-17T11:33:51Z,MERGED,True,15,0,1,https://github.com/dearblue,Drop unnecessary upper procs linked from class/module/def syntax,1,[],https://github.com/mruby/mruby/pull/5497,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5497,"It does not need to hold an anonymous proc for constant search.
Also, this change can be expected to cause an anonymous proc to be GC'd.
This is useful for metaprogramming that makes heavy use of the class/module/def syntax in the class_eval/eval method.
Example:


code
p ObjectSpace.count_objects

String.class_eval do
  def a
  end
end

p ObjectSpace.count_objects

String.class_eval do
  eval <<~CODE
    def b
    end
  CODE
end

p ObjectSpace.count_objects


result of building mruby-head (d63c0df) with build_config/default.rb
{:TOTAL=>1024, :FREE=>262, :T_PROC=>495, :T_ENV=>61, ...}
{:TOTAL=>1024, :FREE=>259, :T_PROC=>497, :T_ENV=>62, ...}
{:TOTAL=>1024, :FREE=>255, :T_PROC=>500, :T_ENV=>63, ...}



result of building mruby with this patch and build_config/default.rb
{:TOTAL=>1024, :FREE=>264, :T_PROC=>494, :T_ENV=>60, ...}
{:TOTAL=>1024, :FREE=>262, :T_PROC=>495, :T_ENV=>61, ...}
{:TOTAL=>1024, :FREE=>261, :T_PROC=>496, :T_ENV=>61, ...}","It does not need to hold an anonymous proc for constant search.
Also, this change can be expected to cause an anonymous proc to be GC'd.
This is useful for metaprogramming that makes heavy use of the class/module/def syntax in the class_eval/eval method.
Example:


code
p ObjectSpace.count_objects

String.class_eval do
  def a
  end
end

p ObjectSpace.count_objects

String.class_eval do
  eval <<~CODE
    def b
    end
  CODE
end

p ObjectSpace.count_objects


result of building mruby-head (d63c0df) with build_config/default.rb
{:TOTAL=>1024, :FREE=>262, :T_PROC=>495, :T_ENV=>61, ...}
{:TOTAL=>1024, :FREE=>259, :T_PROC=>497, :T_ENV=>62, ...}
{:TOTAL=>1024, :FREE=>255, :T_PROC=>500, :T_ENV=>63, ...}



result of building mruby with this patch and build_config/default.rb
{:TOTAL=>1024, :FREE=>264, :T_PROC=>494, :T_ENV=>60, ...}
{:TOTAL=>1024, :FREE=>262, :T_PROC=>495, :T_ENV=>61, ...}
{:TOTAL=>1024, :FREE=>261, :T_PROC=>496, :T_ENV=>61, ...}",True,{}
mruby/mruby,https://github.com/mruby/mruby,5498,2021-06-28T14:26:08Z,2021-06-29T00:48:32Z,2021-07-17T11:33:51Z,MERGED,True,3,9,5,https://github.com/dearblue,Avoid warnings with `ruby -cw`,1,[],https://github.com/mruby/mruby/pull/5498,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5498,"% for rb in `git ls-files '*/mrblib/*.rb' 'mrblib'`; do ruby30 -cw $rb > /dev/null; done
mrbgems/mruby-array-ext/mrblib/array.rb:389: warning: assigned but unused variable - ary
mrbgems/mruby-array-ext/mrblib/array.rb:663: warning: assigned but unused variable - len
mrbgems/mruby-hash-ext/mrblib/hash.rb:119: warning: possibly useless use of a variable in void context
mrbgems/mruby-hash-ext/mrblib/hash.rb:259: warning: assigned but unused variable - keys
mrbgems/mruby-io/mrblib/io.rb:229: warning: literal in condition
mrbgems/mruby-io/mrblib/io.rb:280: warning: literal in condition
mrbgems/mruby-string-ext/mrblib/string.rb:347: warning: assigned but unused variable - len
mrbgems/mruby-toplevel-ext/mrblib/toplevel.rb:2: warning: parentheses after method name is interpreted as an argument list, not a decomposed argument","% for rb in `git ls-files '*/mrblib/*.rb' 'mrblib'`; do ruby30 -cw $rb > /dev/null; done
mrbgems/mruby-array-ext/mrblib/array.rb:389: warning: assigned but unused variable - ary
mrbgems/mruby-array-ext/mrblib/array.rb:663: warning: assigned but unused variable - len
mrbgems/mruby-hash-ext/mrblib/hash.rb:119: warning: possibly useless use of a variable in void context
mrbgems/mruby-hash-ext/mrblib/hash.rb:259: warning: assigned but unused variable - keys
mrbgems/mruby-io/mrblib/io.rb:229: warning: literal in condition
mrbgems/mruby-io/mrblib/io.rb:280: warning: literal in condition
mrbgems/mruby-string-ext/mrblib/string.rb:347: warning: assigned but unused variable - len
mrbgems/mruby-toplevel-ext/mrblib/toplevel.rb:2: warning: parentheses after method name is interpreted as an argument list, not a decomposed argument",True,{}
mruby/mruby,https://github.com/mruby/mruby,5501,2021-07-07T12:29:40Z,2021-07-07T13:05:50Z,2021-07-07T13:08:27Z,MERGED,True,10,9,1,https://github.com/jbampton,Style the CONTRIBUTING guide,1,[],https://github.com/mruby/mruby/pull/5501,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5501,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5502,2021-07-07T13:19:37Z,2021-07-07T22:24:00Z,2021-07-08T08:29:19Z,MERGED,True,2,1,1,https://github.com/jbampton,Add information on yamllint as comments,1,[],https://github.com/mruby/mruby/pull/5502,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5502,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5503,2021-07-09T13:32:45Z,2021-07-09T22:53:53Z,2021-07-10T16:01:50Z,MERGED,True,1,1,1,https://github.com/ntl,"Mrbgem gem_init.c: add headers for irep loading when cdump is disabled, but presym is enabled",1,[],https://github.com/mruby/mruby/pull/5503,https://github.com/ntl,1,https://github.com/mruby/mruby/pull/5503,"When disable_cdump is declared on a Mrbgem spec, the procedure for loading MRuby code from the gem's mrblib directory is slightly different; instead of loading the mrblib code as a Proc built from the compiled irep, the compiled irep is loaded directly. The header files mruby.h and mruby/proc.h are needed only when the irep is loaded directly. They are currently included only when presym is disabled, they should be included whenever either presym is disabled or when disable_cdump is called. The cdump? predicate method happens to return true in either case (presym disabled or cdump disabled), so this change should be safe.","When disable_cdump is declared on a Mrbgem spec, the procedure for loading MRuby code from the gem's mrblib directory is slightly different; instead of loading the mrblib code as a Proc built from the compiled irep, the compiled irep is loaded directly. The header files mruby.h and mruby/proc.h are needed only when the irep is loaded directly. They are currently included only when presym is disabled, they should be included whenever either presym is disabled or when disable_cdump is called. The cdump? predicate method happens to return true in either case (presym disabled or cdump disabled), so this change should be safe.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5504,2021-07-09T13:35:58Z,2021-07-11T23:19:20Z,2021-07-12T14:19:18Z,CLOSED,False,1,1,1,https://github.com/ntl,"Mrbgem gem_init.c: mrb_top_run, not mrb_load_proc",1,[],https://github.com/mruby/mruby/pull/5504,https://github.com/ntl,1,https://github.com/mruby/mruby/pull/5504,"Some background: I am currently trying to load mrbgems compiled as dynamic libraries. This has been done before, I see that mattn's mruby-require library can load dynamically linked mrbgems:
https://github.com/mattn/mruby-require/blob/master/src/mrb_require.c#L340-L387
When an mrbgem contains ruby code in mrblib/, the gem_init.c generated by MRuby's build system embeds irep for the ruby. Under default circumstances, where neither presym nor cdump have been disabled, the irep is wrapped by a proc, which is loaded via mrb_load_proc. This does not work when the mrbgem's initialization function, e.g. GENERATED_TMP_some_mrbgem_gem_init, is called while the MRuby interpreter is already running -- which is not normally the case, but is for me when I'm loading mrbgems on-the-fly that have been compiled as dynamic libraries.
This change modifies the mrb_load_proc call to use mrb_top_run instead, which is safe to use even when the MRuby interpreter is active. Unless I am mistaken (which is very possible, as I'm still very new to MRuby's internals), mrb_top_run should be safe in the common case where the mrbgem is loaded during MRuby initialization.","Some background: I am currently trying to load mrbgems compiled as dynamic libraries. This has been done before, I see that mattn's mruby-require library can load dynamically linked mrbgems:
https://github.com/mattn/mruby-require/blob/master/src/mrb_require.c#L340-L387
When an mrbgem contains ruby code in mrblib/, the gem_init.c generated by MRuby's build system embeds irep for the ruby. Under default circumstances, where neither presym nor cdump have been disabled, the irep is wrapped by a proc, which is loaded via mrb_load_proc. This does not work when the mrbgem's initialization function, e.g. GENERATED_TMP_some_mrbgem_gem_init, is called while the MRuby interpreter is already running -- which is not normally the case, but is for me when I'm loading mrbgems on-the-fly that have been compiled as dynamic libraries.
This change modifies the mrb_load_proc call to use mrb_top_run instead, which is safe to use even when the MRuby interpreter is active. Unless I am mistaken (which is very possible, as I'm still very new to MRuby's internals), mrb_top_run should be safe in the common case where the mrbgem is loaded during MRuby initialization.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5505,2021-07-09T14:38:13Z,2021-07-09T22:42:26Z,2021-07-17T11:33:51Z,MERGED,True,0,1,1,https://github.com/dearblue,Do not include `stdint.h` before `mruby.h`,1,[],https://github.com/mruby/mruby/pull/5505,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5505,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5505,2021-07-09T14:38:13Z,2021-07-09T22:42:26Z,2021-07-17T11:33:51Z,MERGED,True,0,1,1,https://github.com/dearblue,Do not include `stdint.h` before `mruby.h`,1,[],https://github.com/mruby/mruby/pull/5505,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5505#issuecomment-877494245,,Recent changes in my Emacs configuration added the header lines automagically. I will investigate and fix it.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5506,2021-07-13T14:06:39Z,2021-07-13T23:11:57Z,2021-07-13T23:12:05Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.2.2 to 4.3.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5506,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5506,"Bumps github/super-linter from 4.2.2 to 4.3.0.

Release notes
Sourced from github/super-linter's releases.

Release v4.3.0
Changelog

Bump rubocop-performance from 1.7.1 to 1.11.0 in /dependencies @​dependabot (#1748)
Bump python from 3.9-alpine to 3.9.6-alpine @​dependabot (#1725)
Bump typescript from 4.3.4 to 4.3.5 in /dependencies @​dependabot (#1730)
Bump rubocop from 1.6.1 to 1.13.0 in /dependencies @​dependabot (#1727)
Bump @​typescript-eslint/eslint-plugin from 4.28.0 to 4.28.3 in /dependencies @​dependabot (#1746)
Bump docker/setup-buildx-action from 1.3.0 to 1.5.1 @​dependabot (#1738)
Bump docker/build-push-action from 2.5.0 to 2.6.1 @​dependabot (#1724)
Bump eslint from 7.29.0 to 7.30.0 in /dependencies @​dependabot (#1732)
Bump immer from 9.0.3 to 9.0.5 in /dependencies @​dependabot (#1740)
Bump accurics/terrascan from 1.7.0 to 1.8.0 @​dependabot (#1726)
Bump eslint-plugin-jsonc from 1.3.1 to 1.4.0 in /dependencies @​dependabot (#1731)
Bump sql-lint from 0.0.18 to 0.0.19 in /dependencies @​dependabot (#1742)
Bump @​typescript-eslint/parser from 4.28.1 to 4.28.3 in /dependencies @​dependabot (#1745)
Bump mypy from 0.812 to 0.910 in /dependencies @​dependabot (#1717)
Bump @​typescript-eslint/parser from 4.27.0 to 4.28.1 in /dependencies @​dependabot (#1718)
Bump docker/login-action from 1.9.0 to 1.10.0 @​dependabot (#1710)
Bump rubocop-github from 0.16.1 to 0.16.2 in /dependencies @​dependabot (#1711)
Bump alpine/terragrunt from 1.0.0 to 1.0.1 @​dependabot (#1713)
Bump prettier from 2.3.1 to 2.3.2 in /dependencies @​dependabot (#1714)
Bump @​typescript-eslint/eslint-plugin from 4.27.0 to 4.28.0 in /dependencies @​dependabot (#1715)
Fix terragrunt file picker from selecting packer files @​Osazz (#1707)
Bump golangci/golangci-lint from v1.40.1 to v1.41.1 @​dependabot (#1679)
Bump @​typescript-eslint/eslint-plugin from 4.26.1 to 4.27.0 in /dependencies @​dependabot (#1681)
Bump @​typescript-eslint/parser from 4.26.1 to 4.27.0 in /dependencies @​dependabot (#1682)
Bump typescript from 4.3.2 to 4.3.4 in /dependencies @​dependabot (#1683)
Bump eslint from 7.28.0 to 7.29.0 in /dependencies @​dependabot (#1684)
Bump cljkondo/clj-kondo from 2021.06.01-alpine to 2021.06.18-alpine @​aliscco (#1688)
Bump alpine from 3.13.5 to 3.14.0 @​dependabot (#1678)
Bump dotenvlinter/dotenv-linter from 3.0.0 to 3.1.0 @​dependabot (#1653)
Bump accurics/terrascan from 1.6.0 to 1.7.0 @​dependabot (#1654)
Bump bobheadxi/deployments from 0.5.2 to 0.6.0 @​dependabot (#1655)
Bump alpine/terragrunt from 0.15.5 to 1.0.0 @​dependabot (#1656)
Bump wata727/tflint from 0.29.0 to 0.29.1 @​dependabot (#1657)
Bump npm-groovy-lint from 8.1.0 to 8.2.0 in /dependencies @​dependabot (#1658)
Bump htmlhint from 0.14.2 to 0.15.1 in /dependencies @​dependabot (#1659)
Bump eslint-plugin-jsonc from 1.2.1 to 1.3.1 in /dependencies @​dependabot (#1660)
Bump immer from 9.0.2 to 9.0.3 in /dependencies @​dependabot (#1661)
Bump rubocop-rspec from 2.3.0 to 2.4.0 in /dependencies @​dependabot (#1662)
Release-update-to-v4.2.2 @​github-actions (#1651)

🚀 Features

Ignore files marked with @​generated marker @​stepancheg (#1689)
Use GitHub Action cache @​admiralAwkbar (#1687)

🧰 Maintenance

Ignore files marked with @​generated marker @​stepancheg (#1689)



... (truncated)


Commits

d3cb3c5 Updating action.yml with new release version
477c032 Bump rubocop-performance from 1.7.1 to 1.11.0 in /dependencies (#1748)
ef3dfce Bump python from 3.9-alpine to 3.9.6-alpine (#1725)
59329c7 Bump typescript from 4.3.4 to 4.3.5 in /dependencies (#1730)
a6f91ac Bump rubocop from 1.6.1 to 1.13.0 in /dependencies (#1727)
a3ab343 Bump @​typescript-eslint/eslint-plugin in /dependencies (#1746)
df37da7 Bump docker/setup-buildx-action from 1.3.0 to 1.5.1 (#1738)
c65cb09 Bump docker/build-push-action from 2.5.0 to 2.6.1 (#1724)
7187c4d Bump eslint from 7.29.0 to 7.30.0 in /dependencies (#1732)
d80b86d Bump immer from 9.0.3 to 9.0.5 in /dependencies (#1740)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.2.2 to 4.3.0.

Release notes
Sourced from github/super-linter's releases.

Release v4.3.0
Changelog

Bump rubocop-performance from 1.7.1 to 1.11.0 in /dependencies @​dependabot (#1748)
Bump python from 3.9-alpine to 3.9.6-alpine @​dependabot (#1725)
Bump typescript from 4.3.4 to 4.3.5 in /dependencies @​dependabot (#1730)
Bump rubocop from 1.6.1 to 1.13.0 in /dependencies @​dependabot (#1727)
Bump @​typescript-eslint/eslint-plugin from 4.28.0 to 4.28.3 in /dependencies @​dependabot (#1746)
Bump docker/setup-buildx-action from 1.3.0 to 1.5.1 @​dependabot (#1738)
Bump docker/build-push-action from 2.5.0 to 2.6.1 @​dependabot (#1724)
Bump eslint from 7.29.0 to 7.30.0 in /dependencies @​dependabot (#1732)
Bump immer from 9.0.3 to 9.0.5 in /dependencies @​dependabot (#1740)
Bump accurics/terrascan from 1.7.0 to 1.8.0 @​dependabot (#1726)
Bump eslint-plugin-jsonc from 1.3.1 to 1.4.0 in /dependencies @​dependabot (#1731)
Bump sql-lint from 0.0.18 to 0.0.19 in /dependencies @​dependabot (#1742)
Bump @​typescript-eslint/parser from 4.28.1 to 4.28.3 in /dependencies @​dependabot (#1745)
Bump mypy from 0.812 to 0.910 in /dependencies @​dependabot (#1717)
Bump @​typescript-eslint/parser from 4.27.0 to 4.28.1 in /dependencies @​dependabot (#1718)
Bump docker/login-action from 1.9.0 to 1.10.0 @​dependabot (#1710)
Bump rubocop-github from 0.16.1 to 0.16.2 in /dependencies @​dependabot (#1711)
Bump alpine/terragrunt from 1.0.0 to 1.0.1 @​dependabot (#1713)
Bump prettier from 2.3.1 to 2.3.2 in /dependencies @​dependabot (#1714)
Bump @​typescript-eslint/eslint-plugin from 4.27.0 to 4.28.0 in /dependencies @​dependabot (#1715)
Fix terragrunt file picker from selecting packer files @​Osazz (#1707)
Bump golangci/golangci-lint from v1.40.1 to v1.41.1 @​dependabot (#1679)
Bump @​typescript-eslint/eslint-plugin from 4.26.1 to 4.27.0 in /dependencies @​dependabot (#1681)
Bump @​typescript-eslint/parser from 4.26.1 to 4.27.0 in /dependencies @​dependabot (#1682)
Bump typescript from 4.3.2 to 4.3.4 in /dependencies @​dependabot (#1683)
Bump eslint from 7.28.0 to 7.29.0 in /dependencies @​dependabot (#1684)
Bump cljkondo/clj-kondo from 2021.06.01-alpine to 2021.06.18-alpine @​aliscco (#1688)
Bump alpine from 3.13.5 to 3.14.0 @​dependabot (#1678)
Bump dotenvlinter/dotenv-linter from 3.0.0 to 3.1.0 @​dependabot (#1653)
Bump accurics/terrascan from 1.6.0 to 1.7.0 @​dependabot (#1654)
Bump bobheadxi/deployments from 0.5.2 to 0.6.0 @​dependabot (#1655)
Bump alpine/terragrunt from 0.15.5 to 1.0.0 @​dependabot (#1656)
Bump wata727/tflint from 0.29.0 to 0.29.1 @​dependabot (#1657)
Bump npm-groovy-lint from 8.1.0 to 8.2.0 in /dependencies @​dependabot (#1658)
Bump htmlhint from 0.14.2 to 0.15.1 in /dependencies @​dependabot (#1659)
Bump eslint-plugin-jsonc from 1.2.1 to 1.3.1 in /dependencies @​dependabot (#1660)
Bump immer from 9.0.2 to 9.0.3 in /dependencies @​dependabot (#1661)
Bump rubocop-rspec from 2.3.0 to 2.4.0 in /dependencies @​dependabot (#1662)
Release-update-to-v4.2.2 @​github-actions (#1651)

🚀 Features

Ignore files marked with @​generated marker @​stepancheg (#1689)
Use GitHub Action cache @​admiralAwkbar (#1687)

🧰 Maintenance

Ignore files marked with @​generated marker @​stepancheg (#1689)



... (truncated)


Commits

d3cb3c5 Updating action.yml with new release version
477c032 Bump rubocop-performance from 1.7.1 to 1.11.0 in /dependencies (#1748)
ef3dfce Bump python from 3.9-alpine to 3.9.6-alpine (#1725)
59329c7 Bump typescript from 4.3.4 to 4.3.5 in /dependencies (#1730)
a6f91ac Bump rubocop from 1.6.1 to 1.13.0 in /dependencies (#1727)
a3ab343 Bump @​typescript-eslint/eslint-plugin in /dependencies (#1746)
df37da7 Bump docker/setup-buildx-action from 1.3.0 to 1.5.1 (#1738)
c65cb09 Bump docker/build-push-action from 2.5.0 to 2.6.1 (#1724)
7187c4d Bump eslint from 7.29.0 to 7.30.0 in /dependencies (#1732)
d80b86d Bump immer from 9.0.3 to 9.0.5 in /dependencies (#1740)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5507,2021-07-14T14:05:54Z,2021-07-14T22:25:54Z,2021-07-14T22:26:01Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.3.0 to 4.4.1,1,['dependencies'],https://github.com/mruby/mruby/pull/5507,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5507,"Bumps github/super-linter from 4.3.0 to 4.4.1.

Release notes
Sourced from github/super-linter's releases.

v4.4.1
Changelog

Fixed Release GITHUB_TOKEN that was removed

See details of all code changes since previous release



Commits

8aa951b add the token here
c2d7926 cleanup release process (#1756)
b3e0c02 yamllint format (#1754)
100c674 adding tflint config (#1753)
d24eb27 move from jsonlint to eslint (#1752)
95a3bc1 Updating action.yml with new release version (#1751)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.3.0 to 4.4.1.

Release notes
Sourced from github/super-linter's releases.

v4.4.1
Changelog

Fixed Release GITHUB_TOKEN that was removed

See details of all code changes since previous release



Commits

8aa951b add the token here
c2d7926 cleanup release process (#1756)
b3e0c02 yamllint format (#1754)
100c674 adding tflint config (#1753)
d24eb27 move from jsonlint to eslint (#1752)
95a3bc1 Updating action.yml with new release version (#1751)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5508,2021-07-15T14:06:06Z,2021-07-15T22:57:59Z,2021-07-15T22:58:07Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.4.1 to 4.5.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5508,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5508,"Bumps github/super-linter from 4.4.1 to 4.5.0.

Release notes
Sourced from github/super-linter's releases.

v4.5.0
Changelog

Adding terrascan config file @​aldivaca (#1761)
Release-update-to-v4.4.1 @​github-actions (#1759)

🚀 Features

adding clang @​admiralAwkbar (#1762)
Added support for changing Checkstyle rules file name @​tiguchi (#1760)

🧰 Maintenance

adding clang @​admiralAwkbar (#1762)
Added support for changing Checkstyle rules file name @​tiguchi (#1760)

See details of all code changes since previous release



Commits

1481793 adding clang (#1762)
8b75fbf Adding terrascan config file (#1761)
fad8d1c Added support for changing Checkstyle rules file name (#1760)
df43d3f Updating action.yml with new release version (#1759)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.4.1 to 4.5.0.

Release notes
Sourced from github/super-linter's releases.

v4.5.0
Changelog

Adding terrascan config file @​aldivaca (#1761)
Release-update-to-v4.4.1 @​github-actions (#1759)

🚀 Features

adding clang @​admiralAwkbar (#1762)
Added support for changing Checkstyle rules file name @​tiguchi (#1760)

🧰 Maintenance

adding clang @​admiralAwkbar (#1762)
Added support for changing Checkstyle rules file name @​tiguchi (#1760)

See details of all code changes since previous release



Commits

1481793 adding clang (#1762)
8b75fbf Adding terrascan config file (#1761)
fad8d1c Added support for changing Checkstyle rules file name (#1760)
df43d3f Updating action.yml with new release version (#1759)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5509,2021-07-17T11:31:57Z,2021-07-17T11:55:18Z,2021-08-01T05:02:38Z,MERGED,True,4,4,1,https://github.com/dearblue,Avoid implicit casting from void pointers for C++,1,[],https://github.com/mruby/mruby/pull/5509,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5509,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5510,2021-07-17T11:37:07Z,2021-07-18T05:34:48Z,2021-08-01T05:02:38Z,MERGED,True,3,0,1,https://github.com/dearblue,Output an error if the `INTPTR_MAX` macro is undefined in C++,1,[],https://github.com/mruby/mruby/pull/5510,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5510,"When doing conf.enable_cxx_abi and compiling with FreeBSD + clang or MinGW, such as INTPTR_MAX constant macro is not defined if #include <stdint.h> precedes #include <mruby.h>.
Currently I get a warning when I use an undefined macro, but if I don't notice it I get confused in a link error.
It can be expected that the problem will be easier to understand by making a clear error.
Adding -Werror=undef as a compiler flag can also result in an error, but this can be a problem if the system header file itself uses undefined macros, for example.
This patch does minimal confirmation only, but has no side effects.","When doing conf.enable_cxx_abi and compiling with FreeBSD + clang or MinGW, such as INTPTR_MAX constant macro is not defined if #include <stdint.h> precedes #include <mruby.h>.
Currently I get a warning when I use an undefined macro, but if I don't notice it I get confused in a link error.
It can be expected that the problem will be easier to understand by making a clear error.
Adding -Werror=undef as a compiler flag can also result in an error, but this can be a problem if the system header file itself uses undefined macros, for example.
This patch does minimal confirmation only, but has no side effects.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5511,2021-07-17T11:46:47Z,2021-07-18T22:40:22Z,2021-08-01T05:02:37Z,MERGED,True,8,0,2,https://github.com/dearblue,Explicit write barrier for binding,1,[],https://github.com/mruby/mruby/pull/5511,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5511,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5514,2021-07-23T14:06:34Z,2021-07-24T04:21:08Z,2021-07-24T04:21:18Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.5.0 to 4.5.1,1,['dependencies'],https://github.com/mruby/mruby/pull/5514,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5514,"Bumps github/super-linter from 4.5.0 to 4.5.1.

Release notes
Sourced from github/super-linter's releases.

v4.5.1
Changelog

Update action.yml to point to new image from failure on 4.5.0
Switch from wata727/tflint to ghcr.io/terraform-linters/tflint-bundle @​wata727 (#1777)
feat: support bats @​yxliang01 (#1778)
Bump actions/stale from 3.0.19 to 4 @​dependabot (#1779)
Bump stylelint-scss from 3.19.0 to 3.20.1 in /dependencies @​dependabot (#1780)
Bump eslint-plugin-json from 1.4.0 to 3.0.0 in /dependencies @​dependabot (#1781)
Bump eslint-plugin-vue from 7.13.0 to 7.14.0 in /dependencies @​dependabot (#1782)
Bump eslint from 7.30.0 to 7.31.0 in /dependencies @​dependabot (#1783)
Adding actionlint @​admiralAwkbar (#1775)
adding vue @​admiralAwkbar (#1776)
docs(dockerfile-slim): fix typo @​yxliang01 (#1769)
Better link to clang-format in README.md @​stepancheg (#1766)
Release-update-to-v4.5.0 @​github-actions (#1763)

🧰 Maintenance

Minor clang-format linter cleanup @​stepancheg (#1764)

See details of all code changes since previous release



Commits

4bdbf17 Switch from wata727/tflint to ghcr.io/terraform-linters/tflint-bundle (#1777)
f6910e3 feat: support bats (#1778)
fa3fc56 Bump actions/stale from 3.0.19 to 4 (#1779)
ac32f2d Bump stylelint-scss from 3.19.0 to 3.20.1 in /dependencies (#1780)
5f891f1 Bump eslint-plugin-json from 1.4.0 to 3.0.0 in /dependencies (#1781)
60182fe Bump eslint-plugin-vue from 7.13.0 to 7.14.0 in /dependencies (#1782)
1a82030 Bump eslint from 7.30.0 to 7.31.0 in /dependencies (#1783)
ab24b82 Adding actionlint (#1775)
8abafde adding vue (#1776)
4438723 docs(dockerfile-slim): fix typo (#1769)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.5.0 to 4.5.1.

Release notes
Sourced from github/super-linter's releases.

v4.5.1
Changelog

Update action.yml to point to new image from failure on 4.5.0
Switch from wata727/tflint to ghcr.io/terraform-linters/tflint-bundle @​wata727 (#1777)
feat: support bats @​yxliang01 (#1778)
Bump actions/stale from 3.0.19 to 4 @​dependabot (#1779)
Bump stylelint-scss from 3.19.0 to 3.20.1 in /dependencies @​dependabot (#1780)
Bump eslint-plugin-json from 1.4.0 to 3.0.0 in /dependencies @​dependabot (#1781)
Bump eslint-plugin-vue from 7.13.0 to 7.14.0 in /dependencies @​dependabot (#1782)
Bump eslint from 7.30.0 to 7.31.0 in /dependencies @​dependabot (#1783)
Adding actionlint @​admiralAwkbar (#1775)
adding vue @​admiralAwkbar (#1776)
docs(dockerfile-slim): fix typo @​yxliang01 (#1769)
Better link to clang-format in README.md @​stepancheg (#1766)
Release-update-to-v4.5.0 @​github-actions (#1763)

🧰 Maintenance

Minor clang-format linter cleanup @​stepancheg (#1764)

See details of all code changes since previous release



Commits

4bdbf17 Switch from wata727/tflint to ghcr.io/terraform-linters/tflint-bundle (#1777)
f6910e3 feat: support bats (#1778)
fa3fc56 Bump actions/stale from 3.0.19 to 4 (#1779)
ac32f2d Bump stylelint-scss from 3.19.0 to 3.20.1 in /dependencies (#1780)
5f891f1 Bump eslint-plugin-json from 1.4.0 to 3.0.0 in /dependencies (#1781)
60182fe Bump eslint-plugin-vue from 7.13.0 to 7.14.0 in /dependencies (#1782)
1a82030 Bump eslint from 7.30.0 to 7.31.0 in /dependencies (#1783)
ab24b82 Adding actionlint (#1775)
8abafde adding vue (#1776)
4438723 docs(dockerfile-slim): fix typo (#1769)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5516,2021-07-25T07:24:20Z,2021-07-25T09:21:20Z,2021-07-25T10:05:43Z,CLOSED,False,1,1,1,https://github.com/dearblue,Fixed that sizeof(pointer) was used for buf size,1,[],https://github.com/mruby/mruby/pull/5516,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5516,"In a 32-bit environment, it was fixed to 4 bytes and no writing was performed.","In a 32-bit environment, it was fixed to 4 bytes and no writing was performed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5516,2021-07-25T07:24:20Z,2021-07-25T09:21:20Z,2021-07-25T10:05:43Z,CLOSED,False,1,1,1,https://github.com/dearblue,Fixed that sizeof(pointer) was used for buf size,1,[],https://github.com/mruby/mruby/pull/5516,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5516#issuecomment-886172558,"In a 32-bit environment, it was fixed to 4 bytes and no writing was performed.",Thank you. I have already fixed this issue in c2c0250 and 26340a8,True,{'THUMBS_UP': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,5517,2021-07-25T07:37:51Z,,2021-08-03T14:24:23Z,OPEN,False,144,25,2,https://github.com/dearblue,Fixed local variables not separated between copied binding objects,1,[],https://github.com/mruby/mruby/pull/5517,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5517,This is because I forgot to implement the Binding#initialize_copy method.,This is because I forgot to implement the Binding#initialize_copy method.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5517,2021-07-25T07:37:51Z,,2021-08-03T14:24:23Z,OPEN,False,144,25,2,https://github.com/dearblue,Fixed local variables not separated between copied binding objects,1,[],https://github.com/mruby/mruby/pull/5517,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5517#issuecomment-886280302,This is because I forgot to implement the Binding#initialize_copy method.,"Hmm, the current behavior seems to comply CRuby behavior. Do we need to fix it?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5517,2021-07-25T07:37:51Z,,2021-08-03T14:24:23Z,OPEN,False,144,25,2,https://github.com/dearblue,Fixed local variables not separated between copied binding objects,1,[],https://github.com/mruby/mruby/pull/5517,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5517#issuecomment-887481193,This is because I forgot to implement the Binding#initialize_copy method.,"I'm sorry, it may have been a confusing expression.
Can you see the example below?


Ruby 3.0.1
% ruby30 -e 'b1 = binding; b2 = b1.dup; b1.eval(""x = 1""); p b2.eval(""x"")'
(eval):1:in `<main>': undefined local variable or method `x' for main:Object (NameError)
        from -e:1:in `eval'
        from -e:1:in `<main>'


current mruby head (1f1dca1)
% bin/mruby -e 'b1 = binding; b2 = b1.dup; b1.eval(""x = 1""); p b2.eval(""x"")'
1


this PR
% bin/mruby -e 'b1 = binding; b2 = b1.dup; b1.eval(""x = 1""); p b2.eval(""x"")'
trace (most recent call last):
        [1] -e:1
(eval):1:in eval: undefined method 'x' (NoMethodError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5517,2021-07-25T07:37:51Z,,2021-08-03T14:24:23Z,OPEN,False,144,25,2,https://github.com/dearblue,Fixed local variables not separated between copied binding objects,1,[],https://github.com/mruby/mruby/pull/5517,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5517#issuecomment-887561718,This is because I forgot to implement the Binding#initialize_copy method.,"OK, I understand the need for the change. But still, we need to check the following behavior:
x = 5
bind1 = binding
bind1.local_variable_set(:y, 10)
bind2 = bind1.dup
p bind2.local_variable_get(:x)      #=> 5
p bind2.local_variable_get(:y)      #=> 10
bind1.local_variable_set(:y, 20) 
p bind2.local_variable_get(:y)      #=> 20 (from CRuby, mruby, 10 from the PR)
p bind1.local_variable_get(:y)      #=> 20 
x = 50
p bind1.local_variable_get(:x)      #=> 50
p bind2.local_variable_get(:x)      #=> 50",True,{}
mruby/mruby,https://github.com/mruby/mruby,5517,2021-07-25T07:37:51Z,,2021-08-03T14:24:23Z,OPEN,False,144,25,2,https://github.com/dearblue,Fixed local variables not separated between copied binding objects,1,[],https://github.com/mruby/mruby/pull/5517,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/5517#issuecomment-888365415,This is because I forgot to implement the Binding#initialize_copy method.,"I'm sorry again, I didn't confirm enough.
For now, the solution is to create a proc object for the origin binding object with the Binding#initialize_copy method.

But there is a concern, and if it repeats binding.dup.dup.dup.dup....., the proc gets deeper and deeper. Therefore, I think it is necessary to perform two more processes.

(1) If there is no local variable, do not link to origin proc
(2) If proc->upper seems to be too deep, raise an exception as ""mruby limit""

Please give me some time...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5517,2021-07-25T07:37:51Z,,2021-08-03T14:24:23Z,OPEN,False,144,25,2,https://github.com/dearblue,Fixed local variables not separated between copied binding objects,1,[],https://github.com/mruby/mruby/pull/5517,https://github.com/matz,6,https://github.com/mruby/mruby/pull/5517#issuecomment-888661773,This is because I forgot to implement the Binding#initialize_copy method.,OK.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5518,2021-07-28T11:26:31Z,2021-07-28T14:08:10Z,2021-07-28T15:10:24Z,MERGED,True,1,1,1,https://github.com/jbampton,pre-commit autoupdate,1,[],https://github.com/mruby/mruby/pull/5518,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5518,https://pre-commit.com/#pre-commit-autoupdate,https://pre-commit.com/#pre-commit-autoupdate,True,{}
mruby/mruby,https://github.com/mruby/mruby,5519,2021-07-29T02:27:41Z,2021-07-30T02:11:52Z,2021-07-30T02:11:52Z,CLOSED,False,13,13964,5,https://github.com/matz,y.tab.c: remove auto generated `y.tab.c` from repository.,4,[],https://github.com/mruby/mruby/pull/5519,https://github.com/matz,1,https://github.com/mruby/mruby/pull/5519,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5519,2021-07-29T02:27:41Z,2021-07-30T02:11:52Z,2021-07-30T02:11:52Z,CLOSED,False,13,13964,5,https://github.com/matz,y.tab.c: remove auto generated `y.tab.c` from repository.,4,[],https://github.com/mruby/mruby/pull/5519,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5519#issuecomment-889576686,,The challenge was in vain. Retracted.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5521,2021-08-06T14:05:47Z,2021-08-06T21:46:36Z,2021-08-06T21:46:48Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.5.1 to 4.6.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5521,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5521,"Bumps github/super-linter from 4.5.1 to 4.6.0.

Release notes
Sourced from github/super-linter's releases.

v4.6.0
Changelog

Added Sqlfluff to lint SQL files @​admiralAwkbar (#1834)
adding black binary @​admiralAwkbar (#1830)
Bump eslint from 7.31.0 to 7.32.0 in /dependencies @​dependabot (#1819)
Bump @​typescript-eslint/eslint-plugin from 4.28.4 to 4.29.0 in /dependencies @​dependabot (#1824)
Bump types-requests from 2.25.0 to 2.25.2 in /dependencies @​dependabot (#1825)
Bump mvdan/shfmt from v3.3.0 to v3.3.1 @​dependabot (#1813)
Bump cljkondo/clj-kondo from 2021.06.18-alpine to 2021.07.28-alpine @​dependabot (#1814)
Bump eslint-plugin-vue from 7.14.0 to 7.15.0 in /dependencies @​dependabot (#1816)
Bump @​stoplight/spectral from 5.9.1 to 5.9.2 in /dependencies @​dependabot (#1817)
Bump @​typescript-eslint/parser from 4.28.4 to 4.28.5 in /dependencies @​dependabot (#1818)
Bump pylint from 2.9.5 to 2.9.6 in /dependencies @​dependabot (#1820)
Bump isort from 5.9.2 to 5.9.3 in /dependencies @​dependabot (#1822)
Bump snakefmt from 0.4.1 to 0.4.2 in /dependencies @​dependabot (#1823)
Update CONTRIBUTING.md @​admiralAwkbar (#1808)
Bump @​typescript-eslint/eslint-plugin from 4.28.3 to 4.28.4 in /dependencies @​dependabot (#1804)
Bump pylint from 2.9.0 to 2.9.5 in /dependencies @​dependabot (#1806)
Copy TFLint plugins to the final stage @​wata727 (#1798)
Bump accurics/terrascan from 1.8.0 to 1.8.1 @​dependabot (#1800)
Bump alpine/terragrunt from 1.0.1 to 1.0.3 @​dependabot (#1801)
Bump @​typescript-eslint/parser from 4.28.3 to 4.28.4 in /dependencies @​dependabot (#1802)
Bump eslint-plugin-jest from 24.3.6 to 24.4.0 in /dependencies @​dependabot (#1803)
Bump markdownlint-cli from 0.27.1 to 0.28.1 in /dependencies @​dependabot (#1805)
Release-update-to-v4.5.1 @​github-actions (#1792)

See details of all code changes since previous release



Commits

148622b Sqlfluff (#1834)
f0406f5 adding black binary (#1830)
36d7ca8 Bump eslint from 7.31.0 to 7.32.0 in /dependencies (#1819)
49bdea9 Bump @​typescript-eslint/eslint-plugin in /dependencies (#1824)
578b66c Bump types-requests from 2.25.0 to 2.25.2 in /dependencies (#1825)
6d194b4 Bump mvdan/shfmt from v3.3.0 to v3.3.1 (#1813)
6feec17 Bump cljkondo/clj-kondo from 2021.06.18-alpine to 2021.07.28-alpine (#1814)
a91c7ef Bump eslint-plugin-vue from 7.14.0 to 7.15.0 in /dependencies (#1816)
8913bfe Bump @​stoplight/spectral from 5.9.1 to 5.9.2 in /dependencies (#1817)
aa772e5 Bump @​typescript-eslint/parser from 4.28.4 to 4.28.5 in /dependencies (#1818)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.5.1 to 4.6.0.

Release notes
Sourced from github/super-linter's releases.

v4.6.0
Changelog

Added Sqlfluff to lint SQL files @​admiralAwkbar (#1834)
adding black binary @​admiralAwkbar (#1830)
Bump eslint from 7.31.0 to 7.32.0 in /dependencies @​dependabot (#1819)
Bump @​typescript-eslint/eslint-plugin from 4.28.4 to 4.29.0 in /dependencies @​dependabot (#1824)
Bump types-requests from 2.25.0 to 2.25.2 in /dependencies @​dependabot (#1825)
Bump mvdan/shfmt from v3.3.0 to v3.3.1 @​dependabot (#1813)
Bump cljkondo/clj-kondo from 2021.06.18-alpine to 2021.07.28-alpine @​dependabot (#1814)
Bump eslint-plugin-vue from 7.14.0 to 7.15.0 in /dependencies @​dependabot (#1816)
Bump @​stoplight/spectral from 5.9.1 to 5.9.2 in /dependencies @​dependabot (#1817)
Bump @​typescript-eslint/parser from 4.28.4 to 4.28.5 in /dependencies @​dependabot (#1818)
Bump pylint from 2.9.5 to 2.9.6 in /dependencies @​dependabot (#1820)
Bump isort from 5.9.2 to 5.9.3 in /dependencies @​dependabot (#1822)
Bump snakefmt from 0.4.1 to 0.4.2 in /dependencies @​dependabot (#1823)
Update CONTRIBUTING.md @​admiralAwkbar (#1808)
Bump @​typescript-eslint/eslint-plugin from 4.28.3 to 4.28.4 in /dependencies @​dependabot (#1804)
Bump pylint from 2.9.0 to 2.9.5 in /dependencies @​dependabot (#1806)
Copy TFLint plugins to the final stage @​wata727 (#1798)
Bump accurics/terrascan from 1.8.0 to 1.8.1 @​dependabot (#1800)
Bump alpine/terragrunt from 1.0.1 to 1.0.3 @​dependabot (#1801)
Bump @​typescript-eslint/parser from 4.28.3 to 4.28.4 in /dependencies @​dependabot (#1802)
Bump eslint-plugin-jest from 24.3.6 to 24.4.0 in /dependencies @​dependabot (#1803)
Bump markdownlint-cli from 0.27.1 to 0.28.1 in /dependencies @​dependabot (#1805)
Release-update-to-v4.5.1 @​github-actions (#1792)

See details of all code changes since previous release



Commits

148622b Sqlfluff (#1834)
f0406f5 adding black binary (#1830)
36d7ca8 Bump eslint from 7.31.0 to 7.32.0 in /dependencies (#1819)
49bdea9 Bump @​typescript-eslint/eslint-plugin in /dependencies (#1824)
578b66c Bump types-requests from 2.25.0 to 2.25.2 in /dependencies (#1825)
6d194b4 Bump mvdan/shfmt from v3.3.0 to v3.3.1 (#1813)
6feec17 Bump cljkondo/clj-kondo from 2021.06.18-alpine to 2021.07.28-alpine (#1814)
a91c7ef Bump eslint-plugin-vue from 7.14.0 to 7.15.0 in /dependencies (#1816)
8913bfe Bump @​stoplight/spectral from 5.9.1 to 5.9.2 in /dependencies (#1817)
aa772e5 Bump @​typescript-eslint/parser from 4.28.4 to 4.28.5 in /dependencies (#1818)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5522,2021-08-07T05:37:22Z,2021-08-08T23:39:12Z,2021-08-28T06:56:52Z,MERGED,True,4,0,1,https://github.com/dearblue,"Fixed compilation error of ""mruby-pack"" with `MRB_NO_STDIO`",1,[],https://github.com/mruby/mruby/pull/5522,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5522,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5523,2021-08-07T06:57:21Z,2021-08-08T00:25:23Z,2021-08-08T02:38:08Z,MERGED,True,1,1,1,https://github.com/jbampton,docs: fix case of mruby,1,[],https://github.com/mruby/mruby/pull/5523,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5523,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5524,2021-08-08T14:30:14Z,2021-08-09T21:21:18Z,2021-08-28T06:56:51Z,MERGED,True,2,1,1,https://github.com/dearblue,Expose all header files of the gems for small compilation,1,[],https://github.com/mruby/mruby/pull/5524,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5524,"After building mruby, if the user compiles and links to libmruby.a, expose the included directory of the captured gems.
This is a change to the <build-dir> /lib/libmruby.flags.mak file and will result in being added to bin/mruby-config --cflags.
This eliminates the need for the user to look up the path and add the compiler flag if the user wants to take advantage of her gems publishing features.
In the main build with rake CONFIG=..., there is no problem because it can only be seen from the gems that depends directly and indirectly as before.
However, when compiling independently by the user using bin/mruby-config, a header file name collision may occur if a unique header directory is added.","After building mruby, if the user compiles and links to libmruby.a, expose the included directory of the captured gems.
This is a change to the <build-dir> /lib/libmruby.flags.mak file and will result in being added to bin/mruby-config --cflags.
This eliminates the need for the user to look up the path and add the compiler flag if the user wants to take advantage of her gems publishing features.
In the main build with rake CONFIG=..., there is no problem because it can only be seen from the gems that depends directly and indirectly as before.
However, when compiling independently by the user using bin/mruby-config, a header file name collision may occur if a unique header directory is added.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5525,2021-08-09T00:16:17Z,2021-08-09T02:38:32Z,2021-08-09T03:04:46Z,MERGED,True,1,1,1,https://github.com/jbampton,pre-commit autoupdate,1,[],https://github.com/mruby/mruby/pull/5525,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5525,https://pre-commit.com/#pre-commit-autoupdate,https://pre-commit.com/#pre-commit-autoupdate,True,{}
mruby/mruby,https://github.com/mruby/mruby,5526,2021-08-10T14:06:16Z,2021-08-10T21:27:53Z,2021-08-10T21:28:12Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.6.0 to 4.6.1,1,['dependencies'],https://github.com/mruby/mruby/pull/5526,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5526,"Bumps github/super-linter from 4.6.0 to 4.6.1.

Release notes
Sourced from github/super-linter's releases.

v4.6.1
Changelog

Fix black binary download @​jalaziz (#1837)
Bump alpine/terragrunt from 1.0.3 to 1.0.4 @​dependabot (#1842)
Bump accurics/terrascan from 1.8.1 to 1.9.0 @​dependabot (#1843)
Bump terraform-linters/tflint-bundle from v0.30.0 to v0.31.0 @​dependabot (#1844)
Bump cljkondo/clj-kondo from 2021.07.28-alpine to 2021.08.06-alpine @​dependabot (#1845)
Bump eslint-plugin-vue from 7.15.0 to 7.15.1 in /dependencies @​dependabot (#1846)
Bump alpine from 3.14.0 to 3.14.1 @​dependabot (#1847)
Bump @​typescript-eslint/parser from 4.28.5 to 4.29.0 in /dependencies @​dependabot (#1848)
Bump eslint-plugin-json from 3.0.0 to 3.1.0 in /dependencies @​dependabot (#1849)
Bump types-requests from 2.25.2 to 2.25.6 in /dependencies @​dependabot (#1850)
Update stale.yml @​admiralAwkbar (#1835)
Release-update-to-v4.6.0 @​github-actions (#1836)

See details of all code changes since previous release



Commits

c18d840 Fix black binary download (#1837)
11d197c Bump alpine/terragrunt from 1.0.3 to 1.0.4 (#1842)
d8a1b02 Bump accurics/terrascan from 1.8.1 to 1.9.0 (#1843)
6c3f146 Bump terraform-linters/tflint-bundle from v0.30.0 to v0.31.0 (#1844)
38143d6 Bump cljkondo/clj-kondo from 2021.07.28-alpine to 2021.08.06-alpine (#1845)
46b7766 Bump eslint-plugin-vue from 7.15.0 to 7.15.1 in /dependencies (#1846)
a318907 Bump alpine from 3.14.0 to 3.14.1 (#1847)
a5e4275 Bump @​typescript-eslint/parser from 4.28.5 to 4.29.0 in /dependencies (#1848)
56d2c99 Bump eslint-plugin-json from 3.0.0 to 3.1.0 in /dependencies (#1849)
57bd036 Bump types-requests from 2.25.2 to 2.25.6 in /dependencies (#1850)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.6.0 to 4.6.1.

Release notes
Sourced from github/super-linter's releases.

v4.6.1
Changelog

Fix black binary download @​jalaziz (#1837)
Bump alpine/terragrunt from 1.0.3 to 1.0.4 @​dependabot (#1842)
Bump accurics/terrascan from 1.8.1 to 1.9.0 @​dependabot (#1843)
Bump terraform-linters/tflint-bundle from v0.30.0 to v0.31.0 @​dependabot (#1844)
Bump cljkondo/clj-kondo from 2021.07.28-alpine to 2021.08.06-alpine @​dependabot (#1845)
Bump eslint-plugin-vue from 7.15.0 to 7.15.1 in /dependencies @​dependabot (#1846)
Bump alpine from 3.14.0 to 3.14.1 @​dependabot (#1847)
Bump @​typescript-eslint/parser from 4.28.5 to 4.29.0 in /dependencies @​dependabot (#1848)
Bump eslint-plugin-json from 3.0.0 to 3.1.0 in /dependencies @​dependabot (#1849)
Bump types-requests from 2.25.2 to 2.25.6 in /dependencies @​dependabot (#1850)
Update stale.yml @​admiralAwkbar (#1835)
Release-update-to-v4.6.0 @​github-actions (#1836)

See details of all code changes since previous release



Commits

c18d840 Fix black binary download (#1837)
11d197c Bump alpine/terragrunt from 1.0.3 to 1.0.4 (#1842)
d8a1b02 Bump accurics/terrascan from 1.8.1 to 1.9.0 (#1843)
6c3f146 Bump terraform-linters/tflint-bundle from v0.30.0 to v0.31.0 (#1844)
38143d6 Bump cljkondo/clj-kondo from 2021.07.28-alpine to 2021.08.06-alpine (#1845)
46b7766 Bump eslint-plugin-vue from 7.15.0 to 7.15.1 in /dependencies (#1846)
a318907 Bump alpine from 3.14.0 to 3.14.1 (#1847)
a5e4275 Bump @​typescript-eslint/parser from 4.28.5 to 4.29.0 in /dependencies (#1848)
56d2c99 Bump eslint-plugin-json from 3.0.0 to 3.1.0 in /dependencies (#1849)
57bd036 Bump types-requests from 2.25.2 to 2.25.6 in /dependencies (#1850)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5530,2021-08-13T06:12:57Z,2021-08-13T09:11:27Z,2021-08-28T06:56:52Z,MERGED,True,9,3,3,https://github.com/dearblue,Check the class with `I` specifier of `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5530,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5530,"Previously, the I specifier only checked if the object was MRB_TT_ISTRUCT.
So it was at risk of getting pointers to different C structs if multiple classes were to use the MRB_TT_ISTRUCT instance.
Change this behavior and change the C argument corresponding to the I specifier to (void *, struct RClass).
This change is not compatible with the previous mruby.
Please note that if the user uses the previous specifications, SIGSEGV may occur or the machine stack may be destroyed.
resolve #5527","Previously, the I specifier only checked if the object was MRB_TT_ISTRUCT.
So it was at risk of getting pointers to different C structs if multiple classes were to use the MRB_TT_ISTRUCT instance.
Change this behavior and change the C argument corresponding to the I specifier to (void *, struct RClass).
This change is not compatible with the previous mruby.
Please note that if the user uses the previous specifications, SIGSEGV may occur or the machine stack may be destroyed.
resolve #5527",True,{}
mruby/mruby,https://github.com/mruby/mruby,5532,2021-08-13T19:00:23Z,2021-08-13T23:18:11Z,2021-08-13T23:18:11Z,MERGED,True,3,0,1,https://github.com/dantecatalfamo,Add instructions for installing doxygen on RHEL/Fedora/CentOS,1,[],https://github.com/mruby/mruby/pull/5532,https://github.com/dantecatalfamo,1,https://github.com/mruby/mruby/pull/5532,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5533,2021-08-20T04:34:04Z,2021-08-21T06:25:46Z,2021-08-21T06:25:46Z,MERGED,True,26,0,1,https://github.com/dantecatalfamo,Add SerenityOS crossbuild,3,[],https://github.com/mruby/mruby/pull/5533,https://github.com/dantecatalfamo,1,https://github.com/mruby/mruby/pull/5533,"Cross compile mruby for SerenityOS (https://github.com/SerenityOS/serenity)
This goes along with the port I wrote for serenityOS","Cross compile mruby for SerenityOS (https://github.com/SerenityOS/serenity)
This goes along with the port I wrote for serenityOS",True,{}
mruby/mruby,https://github.com/mruby/mruby,5533,2021-08-20T04:34:04Z,2021-08-21T06:25:46Z,2021-08-21T06:25:46Z,MERGED,True,26,0,1,https://github.com/dantecatalfamo,Add SerenityOS crossbuild,3,[],https://github.com/mruby/mruby/pull/5533,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5533#issuecomment-903068173,"Cross compile mruby for SerenityOS (https://github.com/SerenityOS/serenity)
This goes along with the port I wrote for serenityOS",Thank you! I will merge the PR.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5535,2021-08-21T06:26:17Z,2021-08-24T07:33:15Z,2021-08-28T06:56:51Z,MERGED,True,105,85,2,https://github.com/dearblue,Checks the frozen object with `mrb_get_args()`,2,[],https://github.com/mruby/mruby/pull/5535,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5535,Please refer to the two commit messages.,Please refer to the two commit messages.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5535,2021-08-21T06:26:17Z,2021-08-24T07:33:15Z,2021-08-28T06:56:51Z,MERGED,True,105,85,2,https://github.com/dearblue,Checks the frozen object with `mrb_get_args()`,2,[],https://github.com/mruby/mruby/pull/5535,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5535#issuecomment-903757562,Please refer to the two commit messages.,"I renamed given to pickarg.
Also, the comment was sent to my repository, so I'll link it here.
dearblue@5fd80f1#r55270551",True,{}
mruby/mruby,https://github.com/mruby/mruby,5536,2021-08-21T07:02:38Z,2021-08-22T03:37:34Z,2021-08-28T06:56:53Z,MERGED,True,5,0,1,https://github.com/dearblue,Stirs internal state when `seed` is set in `Random`,1,[],https://github.com/mruby/mruby/pull/5536,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5536,"This is to avoid the approximation of Random#rand when seeds are close together.
For example, the first #rand values after doing Random#srand(0) and Random#srand(1) are very similar.
Below is the sequence of mruby before this patch was given a seed of 0...20:
% bin/mruby -e 'r = Random.new; 20.times { |i| r.srand(i); puts ""seed=%2d  %s"" % [i, 10.times.map { ""%0.3f"" % r.rand }.join("" "")] }'
seed= 0  0.643 0.585 0.198 0.732 0.087 0.605 0.548 0.468 0.573 0.966
seed= 1  0.643 0.585 0.198 0.607 0.370 0.605 0.633 0.593 0.395 0.439
seed= 2  0.643 0.585 0.197 0.981 0.652 0.730 0.875 0.713 0.529 0.269
seed= 3  0.643 0.585 0.198 0.857 0.934 0.730 0.960 0.216 0.286 0.523
seed= 4  0.643 0.585 0.197 0.231 0.217 0.605 0.959 0.958 0.478 0.482
seed= 5  0.643 0.585 0.197 0.106 0.249 0.605 0.044 0.330 0.925 0.047
seed= 6  0.643 0.585 0.197 0.481 0.781 0.731 0.285 0.960 0.804 0.725
seed= 7  0.643 0.585 0.197 0.356 0.813 0.731 0.370 0.711 0.937 0.448
seed= 8  0.643 0.585 0.198 0.732 0.329 0.108 0.243 0.974 0.766 0.936
seed= 9  0.643 0.585 0.198 0.607 0.611 0.108 0.827 0.102 0.962 0.597
seed=10  0.643 0.585 0.198 0.981 0.393 0.233 0.569 0.723 0.472 0.805
seed=11  0.643 0.585 0.198 0.857 0.676 0.233 0.154 0.222 0.603 0.371
seed=12  0.643 0.585 0.198 0.231 0.458 0.108 0.654 0.979 0.928 0.577
seed=13  0.643 0.585 0.198 0.106 0.490 0.108 0.239 0.355 0.749 0.831
seed=14  0.643 0.585 0.198 0.481 0.523 0.233 0.981 0.486 0.505 0.131
seed=15  0.643 0.585 0.198 0.356 0.555 0.234 0.565 0.233 0.011 0.666
seed=16  0.643 0.585 0.197 0.730 0.573 0.611 0.904 0.512 0.971 0.153
seed=17  0.643 0.585 0.197 0.605 0.855 0.611 0.240 0.636 0.041 0.509
seed=18  0.643 0.585 0.196 0.979 0.137 0.736 0.229 0.765 0.674 0.832
seed=19  0.643 0.585 0.197 0.855 0.420 0.736 0.566 0.268 0.183 0.219","This is to avoid the approximation of Random#rand when seeds are close together.
For example, the first #rand values after doing Random#srand(0) and Random#srand(1) are very similar.
Below is the sequence of mruby before this patch was given a seed of 0...20:
% bin/mruby -e 'r = Random.new; 20.times { |i| r.srand(i); puts ""seed=%2d  %s"" % [i, 10.times.map { ""%0.3f"" % r.rand }.join("" "")] }'
seed= 0  0.643 0.585 0.198 0.732 0.087 0.605 0.548 0.468 0.573 0.966
seed= 1  0.643 0.585 0.198 0.607 0.370 0.605 0.633 0.593 0.395 0.439
seed= 2  0.643 0.585 0.197 0.981 0.652 0.730 0.875 0.713 0.529 0.269
seed= 3  0.643 0.585 0.198 0.857 0.934 0.730 0.960 0.216 0.286 0.523
seed= 4  0.643 0.585 0.197 0.231 0.217 0.605 0.959 0.958 0.478 0.482
seed= 5  0.643 0.585 0.197 0.106 0.249 0.605 0.044 0.330 0.925 0.047
seed= 6  0.643 0.585 0.197 0.481 0.781 0.731 0.285 0.960 0.804 0.725
seed= 7  0.643 0.585 0.197 0.356 0.813 0.731 0.370 0.711 0.937 0.448
seed= 8  0.643 0.585 0.198 0.732 0.329 0.108 0.243 0.974 0.766 0.936
seed= 9  0.643 0.585 0.198 0.607 0.611 0.108 0.827 0.102 0.962 0.597
seed=10  0.643 0.585 0.198 0.981 0.393 0.233 0.569 0.723 0.472 0.805
seed=11  0.643 0.585 0.198 0.857 0.676 0.233 0.154 0.222 0.603 0.371
seed=12  0.643 0.585 0.198 0.231 0.458 0.108 0.654 0.979 0.928 0.577
seed=13  0.643 0.585 0.198 0.106 0.490 0.108 0.239 0.355 0.749 0.831
seed=14  0.643 0.585 0.198 0.481 0.523 0.233 0.981 0.486 0.505 0.131
seed=15  0.643 0.585 0.198 0.356 0.555 0.234 0.565 0.233 0.011 0.666
seed=16  0.643 0.585 0.197 0.730 0.573 0.611 0.904 0.512 0.971 0.153
seed=17  0.643 0.585 0.197 0.605 0.855 0.611 0.240 0.636 0.041 0.509
seed=18  0.643 0.585 0.196 0.979 0.137 0.736 0.229 0.765 0.674 0.832
seed=19  0.643 0.585 0.197 0.855 0.420 0.736 0.566 0.268 0.183 0.219",True,{}
mruby/mruby,https://github.com/mruby/mruby,5536,2021-08-21T07:02:38Z,2021-08-22T03:37:34Z,2021-08-28T06:56:53Z,MERGED,True,5,0,1,https://github.com/dearblue,Stirs internal state when `seed` is set in `Random`,1,[],https://github.com/mruby/mruby/pull/5536,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5536#issuecomment-903072485,"This is to avoid the approximation of Random#rand when seeds are close together.
For example, the first #rand values after doing Random#srand(0) and Random#srand(1) are very similar.
Below is the sequence of mruby before this patch was given a seed of 0...20:
% bin/mruby -e 'r = Random.new; 20.times { |i| r.srand(i); puts ""seed=%2d  %s"" % [i, 10.times.map { ""%0.3f"" % r.rand }.join("" "")] }'
seed= 0  0.643 0.585 0.198 0.732 0.087 0.605 0.548 0.468 0.573 0.966
seed= 1  0.643 0.585 0.198 0.607 0.370 0.605 0.633 0.593 0.395 0.439
seed= 2  0.643 0.585 0.197 0.981 0.652 0.730 0.875 0.713 0.529 0.269
seed= 3  0.643 0.585 0.198 0.857 0.934 0.730 0.960 0.216 0.286 0.523
seed= 4  0.643 0.585 0.197 0.231 0.217 0.605 0.959 0.958 0.478 0.482
seed= 5  0.643 0.585 0.197 0.106 0.249 0.605 0.044 0.330 0.925 0.047
seed= 6  0.643 0.585 0.197 0.481 0.781 0.731 0.285 0.960 0.804 0.725
seed= 7  0.643 0.585 0.197 0.356 0.813 0.731 0.370 0.711 0.937 0.448
seed= 8  0.643 0.585 0.198 0.732 0.329 0.108 0.243 0.974 0.766 0.936
seed= 9  0.643 0.585 0.198 0.607 0.611 0.108 0.827 0.102 0.962 0.597
seed=10  0.643 0.585 0.198 0.981 0.393 0.233 0.569 0.723 0.472 0.805
seed=11  0.643 0.585 0.198 0.857 0.676 0.233 0.154 0.222 0.603 0.371
seed=12  0.643 0.585 0.198 0.231 0.458 0.108 0.654 0.979 0.928 0.577
seed=13  0.643 0.585 0.198 0.106 0.490 0.108 0.239 0.355 0.749 0.831
seed=14  0.643 0.585 0.198 0.481 0.523 0.233 0.981 0.486 0.505 0.131
seed=15  0.643 0.585 0.198 0.356 0.555 0.234 0.565 0.233 0.011 0.666
seed=16  0.643 0.585 0.197 0.730 0.573 0.611 0.904 0.512 0.971 0.153
seed=17  0.643 0.585 0.197 0.605 0.855 0.611 0.240 0.636 0.041 0.509
seed=18  0.643 0.585 0.196 0.979 0.137 0.736 0.229 0.765 0.674 0.832
seed=19  0.643 0.585 0.197 0.855 0.420 0.736 0.566 0.268 0.183 0.219","This idea is inspired by a way to use RC4, one of the cryptographic algorithms, a little more securely.
The original idea was to update the initial internal state more than 100 times before retrieving the value.
I can't remember the source already.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5536,2021-08-21T07:02:38Z,2021-08-22T03:37:34Z,2021-08-28T06:56:53Z,MERGED,True,5,0,1,https://github.com/dearblue,Stirs internal state when `seed` is set in `Random`,1,[],https://github.com/mruby/mruby/pull/5536,https://github.com/matz,3,https://github.com/mruby/mruby/pull/5536#issuecomment-903208313,"This is to avoid the approximation of Random#rand when seeds are close together.
For example, the first #rand values after doing Random#srand(0) and Random#srand(1) are very similar.
Below is the sequence of mruby before this patch was given a seed of 0...20:
% bin/mruby -e 'r = Random.new; 20.times { |i| r.srand(i); puts ""seed=%2d  %s"" % [i, 10.times.map { ""%0.3f"" % r.rand }.join("" "")] }'
seed= 0  0.643 0.585 0.198 0.732 0.087 0.605 0.548 0.468 0.573 0.966
seed= 1  0.643 0.585 0.198 0.607 0.370 0.605 0.633 0.593 0.395 0.439
seed= 2  0.643 0.585 0.197 0.981 0.652 0.730 0.875 0.713 0.529 0.269
seed= 3  0.643 0.585 0.198 0.857 0.934 0.730 0.960 0.216 0.286 0.523
seed= 4  0.643 0.585 0.197 0.231 0.217 0.605 0.959 0.958 0.478 0.482
seed= 5  0.643 0.585 0.197 0.106 0.249 0.605 0.044 0.330 0.925 0.047
seed= 6  0.643 0.585 0.197 0.481 0.781 0.731 0.285 0.960 0.804 0.725
seed= 7  0.643 0.585 0.197 0.356 0.813 0.731 0.370 0.711 0.937 0.448
seed= 8  0.643 0.585 0.198 0.732 0.329 0.108 0.243 0.974 0.766 0.936
seed= 9  0.643 0.585 0.198 0.607 0.611 0.108 0.827 0.102 0.962 0.597
seed=10  0.643 0.585 0.198 0.981 0.393 0.233 0.569 0.723 0.472 0.805
seed=11  0.643 0.585 0.198 0.857 0.676 0.233 0.154 0.222 0.603 0.371
seed=12  0.643 0.585 0.198 0.231 0.458 0.108 0.654 0.979 0.928 0.577
seed=13  0.643 0.585 0.198 0.106 0.490 0.108 0.239 0.355 0.749 0.831
seed=14  0.643 0.585 0.198 0.481 0.523 0.233 0.981 0.486 0.505 0.131
seed=15  0.643 0.585 0.198 0.356 0.555 0.234 0.565 0.233 0.011 0.666
seed=16  0.643 0.585 0.197 0.730 0.573 0.611 0.904 0.512 0.971 0.153
seed=17  0.643 0.585 0.197 0.605 0.855 0.611 0.240 0.636 0.041 0.509
seed=18  0.643 0.585 0.196 0.979 0.137 0.736 0.229 0.765 0.674 0.832
seed=19  0.643 0.585 0.197 0.855 0.420 0.736 0.566 0.268 0.183 0.219",This is a nice idea. Thank you.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5537,2021-08-21T07:08:09Z,2021-08-22T22:34:37Z,2021-08-28T06:56:52Z,MERGED,True,9,32,15,https://github.com/dearblue,Organize the include of header files,1,[],https://github.com/mruby/mruby/pull/5537,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5537,"#include <math.h> is done in mruby.h.
Eliminate the need to worry about the MRB_NO_FLOAT macro.


Include mruby header files before standard header files.
If the standard header file is already placed before mruby.h, the standard header file added in the future tends to be placed before mruby.h.


This change should some reduce the chances of macros that must be defined becoming undefined in C++ or including problematic header files in a particular mruby build configuration.","#include <math.h> is done in mruby.h.
Eliminate the need to worry about the MRB_NO_FLOAT macro.


Include mruby header files before standard header files.
If the standard header file is already placed before mruby.h, the standard header file added in the future tends to be placed before mruby.h.


This change should some reduce the chances of macros that must be defined becoming undefined in C++ or including problematic header files in a particular mruby build configuration.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5538,2021-08-25T08:29:08Z,2021-08-26T02:11:04Z,2021-08-26T11:43:38Z,MERGED,True,1,1,1,https://github.com/jbampton,pre-commit autoupdate,1,[],https://github.com/mruby/mruby/pull/5538,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5538,https://pre-commit.com/#pre-commit-autoupdate,https://pre-commit.com/#pre-commit-autoupdate,True,{}
mruby/mruby,https://github.com/mruby/mruby,5539,2021-08-26T14:05:41Z,2021-08-26T22:43:48Z,2021-08-26T22:43:57Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.6.1 to 4.6.2,1,['dependencies'],https://github.com/mruby/mruby/pull/5539,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5539,"Bumps github/super-linter from 4.6.1 to 4.6.2.

Release notes
Sourced from github/super-linter's releases.

v4.6.2
Changelog

Bump @​typescript-eslint/parser from 4.29.1 to 4.29.3 in /dependencies @​dependabot (#1886)
Bump @​typescript-eslint/eslint-plugin from 4.29.1 to 4.29.3 in /dependencies @​dependabot (#1887)
Bump docker/build-push-action from 2.6.1 to 2.7.0 @​dependabot (#1874)
Bump actions/github-script from 4.0.2 to 4.1 @​dependabot (#1875)
Bump alpine/terragrunt from 1.0.4 to 1.0.5 @​dependabot (#1876)
Bump golangci/golangci-lint from v1.41.1 to v1.42.0 @​dependabot (#1877)
Bump eslint-plugin-jsonc from 1.5.0 to 1.6.0 in /dependencies @​dependabot (#1879)
Bump @​coffeelint/cli from 5.0.1 to 5.0.2 in /dependencies @​dependabot (#1880)
Bump @​typescript-eslint/eslint-plugin from 4.29.1 to 4.29.2 in /dependencies @​dependabot (#1881)
Bump eslint-plugin-prettier from 3.4.0 to 3.4.1 in /dependencies @​dependabot (#1882)
Bump sqlfluff from 0.6.2 to 0.6.4 in /dependencies @​dependabot (#1883)
Bump pylint from 2.9.6 to 2.10.2 in /dependencies @​dependabot (#1884)
Bump yamllint from 1.26.2 to 1.26.3 in /dependencies @​dependabot (#1885)
Add react and react-hooks to eslint plugins @​BretFisher (#1871)
Bump @​typescript-eslint/eslint-plugin from 4.29.0 to 4.29.1 in /dependencies @​dependabot (#1865)
Bump @​typescript-eslint/parser from 4.29.0 to 4.29.1 in /dependencies @​dependabot (#1866)
Bump eslint-plugin-vue from 7.15.1 to 7.16.0 in /dependencies @​dependabot (#1867)
Bump eslint-plugin-jsonc from 1.4.0 to 1.5.0 in /dependencies @​dependabot (#1868)
Bump snakemake from 6.6.1 to 6.7.0 in /dependencies @​dependabot (#1869)
Bump codacy/codacy-coverage-reporter-action from 1.0.1 to 1.1 @​dependabot (#1864)
remove super-linter user due to permissions @​admiralAwkbar (#1870)
Update link to the document of actionlint configuration file @​rhysd (#1857)
Use unprivileged user by default @​sanmai-NL (#1862)
Update, clean up VS Code dev container definition @​sanmai-NL (#1863)
Update GitHub Actions config file default @​aoggz (#1855)
Release-update-to-v4.6.1 @​github-actions (#1851)

🐛 Bug Fixes

fixed go issues @​admiralAwkbar (#1890)

🧰 Maintenance

Editorial: linked the example linter.yml file, added example form that file @​philipbrembeck (#1872)

See details of all code changes since previous release



Commits

695dd08 fixed go issues (#1890)
8f99738 Bump @​typescript-eslint/parser from 4.29.1 to 4.29.3 in /dependencies (#1886)
cbeb1a3 Bump @​typescript-eslint/eslint-plugin in /dependencies (#1887)
cd3beb6 Bump docker/build-push-action from 2.6.1 to 2.7.0 (#1874)
ae84560 Bump actions/github-script from 4.0.2 to 4.1 (#1875)
ecd314a Bump alpine/terragrunt from 1.0.4 to 1.0.5 (#1876)
fb955df Bump golangci/golangci-lint from v1.41.1 to v1.42.0 (#1877)
3029c39 Bump eslint-plugin-jsonc from 1.5.0 to 1.6.0 in /dependencies (#1879)
fa4bb2c Bump @​coffeelint/cli from 5.0.1 to 5.0.2 in /dependencies (#1880)
20a2ebf Bump @​typescript-eslint/eslint-plugin in /dependencies (#1881)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.6.1 to 4.6.2.

Release notes
Sourced from github/super-linter's releases.

v4.6.2
Changelog

Bump @​typescript-eslint/parser from 4.29.1 to 4.29.3 in /dependencies @​dependabot (#1886)
Bump @​typescript-eslint/eslint-plugin from 4.29.1 to 4.29.3 in /dependencies @​dependabot (#1887)
Bump docker/build-push-action from 2.6.1 to 2.7.0 @​dependabot (#1874)
Bump actions/github-script from 4.0.2 to 4.1 @​dependabot (#1875)
Bump alpine/terragrunt from 1.0.4 to 1.0.5 @​dependabot (#1876)
Bump golangci/golangci-lint from v1.41.1 to v1.42.0 @​dependabot (#1877)
Bump eslint-plugin-jsonc from 1.5.0 to 1.6.0 in /dependencies @​dependabot (#1879)
Bump @​coffeelint/cli from 5.0.1 to 5.0.2 in /dependencies @​dependabot (#1880)
Bump @​typescript-eslint/eslint-plugin from 4.29.1 to 4.29.2 in /dependencies @​dependabot (#1881)
Bump eslint-plugin-prettier from 3.4.0 to 3.4.1 in /dependencies @​dependabot (#1882)
Bump sqlfluff from 0.6.2 to 0.6.4 in /dependencies @​dependabot (#1883)
Bump pylint from 2.9.6 to 2.10.2 in /dependencies @​dependabot (#1884)
Bump yamllint from 1.26.2 to 1.26.3 in /dependencies @​dependabot (#1885)
Add react and react-hooks to eslint plugins @​BretFisher (#1871)
Bump @​typescript-eslint/eslint-plugin from 4.29.0 to 4.29.1 in /dependencies @​dependabot (#1865)
Bump @​typescript-eslint/parser from 4.29.0 to 4.29.1 in /dependencies @​dependabot (#1866)
Bump eslint-plugin-vue from 7.15.1 to 7.16.0 in /dependencies @​dependabot (#1867)
Bump eslint-plugin-jsonc from 1.4.0 to 1.5.0 in /dependencies @​dependabot (#1868)
Bump snakemake from 6.6.1 to 6.7.0 in /dependencies @​dependabot (#1869)
Bump codacy/codacy-coverage-reporter-action from 1.0.1 to 1.1 @​dependabot (#1864)
remove super-linter user due to permissions @​admiralAwkbar (#1870)
Update link to the document of actionlint configuration file @​rhysd (#1857)
Use unprivileged user by default @​sanmai-NL (#1862)
Update, clean up VS Code dev container definition @​sanmai-NL (#1863)
Update GitHub Actions config file default @​aoggz (#1855)
Release-update-to-v4.6.1 @​github-actions (#1851)

🐛 Bug Fixes

fixed go issues @​admiralAwkbar (#1890)

🧰 Maintenance

Editorial: linked the example linter.yml file, added example form that file @​philipbrembeck (#1872)

See details of all code changes since previous release



Commits

695dd08 fixed go issues (#1890)
8f99738 Bump @​typescript-eslint/parser from 4.29.1 to 4.29.3 in /dependencies (#1886)
cbeb1a3 Bump @​typescript-eslint/eslint-plugin in /dependencies (#1887)
cd3beb6 Bump docker/build-push-action from 2.6.1 to 2.7.0 (#1874)
ae84560 Bump actions/github-script from 4.0.2 to 4.1 (#1875)
ecd314a Bump alpine/terragrunt from 1.0.4 to 1.0.5 (#1876)
fb955df Bump golangci/golangci-lint from v1.41.1 to v1.42.0 (#1877)
3029c39 Bump eslint-plugin-jsonc from 1.5.0 to 1.6.0 in /dependencies (#1879)
fa4bb2c Bump @​coffeelint/cli from 5.0.1 to 5.0.2 in /dependencies (#1880)
20a2ebf Bump @​typescript-eslint/eslint-plugin in /dependencies (#1881)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5540,2021-08-27T13:58:09Z,2021-08-28T03:50:47Z,2021-08-28T06:56:52Z,MERGED,True,22,37,1,https://github.com/dearblue,Refactor the `mrb_get_args()` function,1,[],https://github.com/mruby/mruby/pull/5540,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5540,"Removed the ARGV macro.
The current path doesn't go into the mruby VM and there's also no need to separate variables.
Use common functions to check object types.

Use mrb_ensure_string_type() to check the string instead of mrb_to_str().
This is for consistency with array and hash.
Use mrb_ensure_array_type() to check the array instead of to_ary().
Use mrb_ensure_hash_type() to check the hash instead of to_hash().
Add and use ensure_class_type() to check class and module.


Changed the argument index type from mrb_int to int.
Even if it is int16_t, it is enough.
mrb_int is overkill, especially if MRB_32BIT and MRB_INT64 are defined.","Removed the ARGV macro.
The current path doesn't go into the mruby VM and there's also no need to separate variables.
Use common functions to check object types.

Use mrb_ensure_string_type() to check the string instead of mrb_to_str().
This is for consistency with array and hash.
Use mrb_ensure_array_type() to check the array instead of to_ary().
Use mrb_ensure_hash_type() to check the hash instead of to_hash().
Add and use ensure_class_type() to check class and module.


Changed the argument index type from mrb_int to int.
Even if it is int16_t, it is enough.
mrb_int is overkill, especially if MRB_32BIT and MRB_INT64 are defined.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5541,2021-08-28T07:04:39Z,2021-08-28T23:32:06Z,2021-10-09T04:10:29Z,MERGED,True,13,51,2,https://github.com/dearblue,Integrate the processing of similar specifiers of `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5541,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5541,"It is o, C, S, A and H specifiers that are integrated.
As a side effect, the C! Specifier can now be used.","It is o, C, S, A and H specifiers that are integrated.
As a side effect, the C! Specifier can now be used.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5542,2021-08-28T07:05:18Z,2021-08-29T22:38:45Z,2021-10-09T04:10:29Z,MERGED,True,21,10,2,https://github.com/dearblue,Allow `nil` for `c!` and `I!` specifiers of `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5542,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5542,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5543,2021-08-31T14:07:24Z,2021-08-31T22:03:01Z,2021-08-31T22:03:10Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.6.2 to 4.6.3,1,['dependencies'],https://github.com/mruby/mruby/pull/5543,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5543,"Bumps github/super-linter from 4.6.2 to 4.6.3.

Release notes
Sourced from github/super-linter's releases.

v4.7.0
Changelog

Updating tflint naming and vars @​admiralAwkbar (#1899)
Add a template config file for ShellCheck @​Kurt-von-Laven (#1900)
Bump dotenvlinter/dotenv-linter from 3.1.0 to 3.1.1 @​dependabot (#1901)
Bump accurics/terrascan from 1.9.0 to 1.10.0 @​dependabot (#1902)
Bump alpine from 3.14.1 to 3.14.2 @​dependabot (#1903)
Bump typescript from 4.3.5 to 4.4.2 in /dependencies @​dependabot (#1904)
Bump eslint-plugin-vue from 7.16.0 to 7.17.0 in /dependencies @​dependabot (#1905)
Bump eslint-plugin-react from 7.24.0 to 7.25.1 in /dependencies @​dependabot (#1906)
Bump kiwisolver from 1.3.1 to 1.3.2 in /dependencies @​dependabot (#1908)
Release-update-to-v4.6.2 @​github-actions (#1893)

See details of all code changes since previous release



Commits

aea4568 Update action.yml
8227f79 Add a template config file for ShellCheck (#1900)
9896c4b Bump dotenvlinter/dotenv-linter from 3.1.0 to 3.1.1 (#1901)
a91d869 Bump accurics/terrascan from 1.9.0 to 1.10.0 (#1902)
37198a2 Bump alpine from 3.14.1 to 3.14.2 (#1903)
4089a5d Bump typescript from 4.3.5 to 4.4.2 in /dependencies (#1904)
a9acf15 Bump eslint-plugin-vue from 7.16.0 to 7.17.0 in /dependencies (#1905)
80510b4 Bump eslint-plugin-react from 7.24.0 to 7.25.1 in /dependencies (#1906)
12ff0cb Bump kiwisolver from 1.3.1 to 1.3.2 in /dependencies (#1908)
5f65429 adding tflint (#1899)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.6.2 to 4.6.3.

Release notes
Sourced from github/super-linter's releases.

v4.7.0
Changelog

Updating tflint naming and vars @​admiralAwkbar (#1899)
Add a template config file for ShellCheck @​Kurt-von-Laven (#1900)
Bump dotenvlinter/dotenv-linter from 3.1.0 to 3.1.1 @​dependabot (#1901)
Bump accurics/terrascan from 1.9.0 to 1.10.0 @​dependabot (#1902)
Bump alpine from 3.14.1 to 3.14.2 @​dependabot (#1903)
Bump typescript from 4.3.5 to 4.4.2 in /dependencies @​dependabot (#1904)
Bump eslint-plugin-vue from 7.16.0 to 7.17.0 in /dependencies @​dependabot (#1905)
Bump eslint-plugin-react from 7.24.0 to 7.25.1 in /dependencies @​dependabot (#1906)
Bump kiwisolver from 1.3.1 to 1.3.2 in /dependencies @​dependabot (#1908)
Release-update-to-v4.6.2 @​github-actions (#1893)

See details of all code changes since previous release



Commits

aea4568 Update action.yml
8227f79 Add a template config file for ShellCheck (#1900)
9896c4b Bump dotenvlinter/dotenv-linter from 3.1.0 to 3.1.1 (#1901)
a91d869 Bump accurics/terrascan from 1.9.0 to 1.10.0 (#1902)
37198a2 Bump alpine from 3.14.1 to 3.14.2 (#1903)
4089a5d Bump typescript from 4.3.5 to 4.4.2 in /dependencies (#1904)
a9acf15 Bump eslint-plugin-vue from 7.16.0 to 7.17.0 in /dependencies (#1905)
80510b4 Bump eslint-plugin-react from 7.24.0 to 7.25.1 in /dependencies (#1906)
12ff0cb Bump kiwisolver from 1.3.1 to 1.3.2 in /dependencies (#1908)
5f65429 adding tflint (#1899)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5544,2021-09-01T02:26:14Z,2021-09-01T04:59:04Z,2021-09-01T04:59:04Z,MERGED,True,1,1,1,https://github.com/stuarth,Use gender-neutral pronouns,1,[],https://github.com/mruby/mruby/pull/5544,https://github.com/stuarth,1,https://github.com/mruby/mruby/pull/5544,"I think this is an improvement on the existing language, but happy to defer to whatever existing norms and decisions y'all have developed. Cheers!","I think this is an improvement on the existing language, but happy to defer to whatever existing norms and decisions y'all have developed. Cheers!",True,{}
mruby/mruby,https://github.com/mruby/mruby,5545,2021-09-01T14:06:40Z,2021-09-01T22:26:25Z,2021-09-01T22:26:35Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.6.3 to 4.7.1,1,['dependencies'],https://github.com/mruby/mruby/pull/5545,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5545,"Bumps github/super-linter from 4.6.3 to 4.7.1.

Release notes
Sourced from github/super-linter's releases.

v4.7.1
Changelog

fixed release and documentation @​admiralAwkbar (#1914)

See details of all code changes since previous release



Commits

7c32110 fix bug
8eb4d62 fixed releasedoc (#1914)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.6.3 to 4.7.1.

Release notes
Sourced from github/super-linter's releases.

v4.7.1
Changelog

fixed release and documentation @​admiralAwkbar (#1914)

See details of all code changes since previous release



Commits

7c32110 fix bug
8eb4d62 fixed releasedoc (#1914)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5548,2021-09-08T14:04:33Z,2021-09-08T22:34:03Z,2021-09-08T22:34:15Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.7.1 to 4.7.2,1,['dependencies'],https://github.com/mruby/mruby/pull/5548,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5548,"Bumps github/super-linter from 4.7.1 to 4.7.2.

Release notes
Sourced from github/super-linter's releases.

v4.7.2
Changelog

Bump alpine/terragrunt from 1.0.5 to 1.0.6 @​dependabot (#1925)
Bump @​typescript-eslint/eslint-plugin from 4.29.3 to 4.31.0 in /dependencies @​dependabot (#1940)
Bump python from 3.9.6-alpine to 3.9.7-alpine @​dependabot (#1927)
Bump axios from 0.21.3 to 0.21.4 in /dependencies @​dependabot (#1942)
suppress warn messages @​admiralAwkbar (#1943)
Bump eslint-plugin-prettier from 3.4.1 to 4.0.0 in /dependencies @​dependabot (#1928)
Bump @​typescript-eslint/parser from 4.29.3 to 4.31.0 in /dependencies @​dependabot (#1938)
pull from image: @​admiralAwkbar (#1941)
Bump docker/setup-buildx-action from 1.5.1 to 1.6.0 @​dependabot (#1926)
Install type stubs at mypy runtime @​JonZeolla (#1937)
Bump axios from 0.21.1 to 0.21.3 in /dependencies @​dependabot (#1930)
Bump node-fetch from 2.6.1 to 3.0.0 in /dependencies @​dependabot (#1931)
Bump immer from 9.0.5 to 9.0.6 in /dependencies @​dependabot (#1933)
Bump typing-extensions from 3.10.0.0 to 3.10.0.2 in /dependencies @​dependabot (#1934)
Bump ansible-lint from 5.1.2 to 5.1.3 in /dependencies @​dependabot (#1935)
Bump cfn-lint from 0.53.0 to 0.53.1 in /dependencies @​dependabot (#1936)

See details of all code changes since previous release



Commits

121999d Bump alpine/terragrunt from 1.0.5 to 1.0.6 (#1925)
c596971 Bump @​typescript-eslint/eslint-plugin in /dependencies (#1940)
c2e9860 Bump python from 3.9.6-alpine to 3.9.7-alpine (#1927)
825ff01 Bump axios from 0.21.3 to 0.21.4 in /dependencies (#1942)
c649496 suppress warn messages (#1943)
7f7afc8 Bump eslint-plugin-prettier from 3.4.1 to 4.0.0 in /dependencies (#1928)
1f6eaa8 Bump @​typescript-eslint/parser from 4.29.3 to 4.31.0 in /dependencies (#1938)
229123d pull from image: (#1941)
d77b7dd Bump docker/setup-buildx-action from 1.5.1 to 1.6.0 (#1926)
d90f45a Install type stubs at mypy runtime (#1937)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.7.1 to 4.7.2.

Release notes
Sourced from github/super-linter's releases.

v4.7.2
Changelog

Bump alpine/terragrunt from 1.0.5 to 1.0.6 @​dependabot (#1925)
Bump @​typescript-eslint/eslint-plugin from 4.29.3 to 4.31.0 in /dependencies @​dependabot (#1940)
Bump python from 3.9.6-alpine to 3.9.7-alpine @​dependabot (#1927)
Bump axios from 0.21.3 to 0.21.4 in /dependencies @​dependabot (#1942)
suppress warn messages @​admiralAwkbar (#1943)
Bump eslint-plugin-prettier from 3.4.1 to 4.0.0 in /dependencies @​dependabot (#1928)
Bump @​typescript-eslint/parser from 4.29.3 to 4.31.0 in /dependencies @​dependabot (#1938)
pull from image: @​admiralAwkbar (#1941)
Bump docker/setup-buildx-action from 1.5.1 to 1.6.0 @​dependabot (#1926)
Install type stubs at mypy runtime @​JonZeolla (#1937)
Bump axios from 0.21.1 to 0.21.3 in /dependencies @​dependabot (#1930)
Bump node-fetch from 2.6.1 to 3.0.0 in /dependencies @​dependabot (#1931)
Bump immer from 9.0.5 to 9.0.6 in /dependencies @​dependabot (#1933)
Bump typing-extensions from 3.10.0.0 to 3.10.0.2 in /dependencies @​dependabot (#1934)
Bump ansible-lint from 5.1.2 to 5.1.3 in /dependencies @​dependabot (#1935)
Bump cfn-lint from 0.53.0 to 0.53.1 in /dependencies @​dependabot (#1936)

See details of all code changes since previous release



Commits

121999d Bump alpine/terragrunt from 1.0.5 to 1.0.6 (#1925)
c596971 Bump @​typescript-eslint/eslint-plugin in /dependencies (#1940)
c2e9860 Bump python from 3.9.6-alpine to 3.9.7-alpine (#1927)
825ff01 Bump axios from 0.21.3 to 0.21.4 in /dependencies (#1942)
c649496 suppress warn messages (#1943)
7f7afc8 Bump eslint-plugin-prettier from 3.4.1 to 4.0.0 in /dependencies (#1928)
1f6eaa8 Bump @​typescript-eslint/parser from 4.29.3 to 4.31.0 in /dependencies (#1938)
229123d pull from image: (#1941)
d77b7dd Bump docker/setup-buildx-action from 1.5.1 to 1.6.0 (#1926)
d90f45a Install type stubs at mypy runtime (#1937)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5549,2021-09-09T14:04:08Z,2021-09-10T01:15:20Z,2021-09-10T01:15:29Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.7.2 to 4.7.3,1,['dependencies'],https://github.com/mruby/mruby/pull/5549,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5549,"Bumps github/super-linter from 4.7.2 to 4.7.3.

Release notes
Sourced from github/super-linter's releases.

v4.7.3
Changelog

Create README.md for SLIM GitHub Action @​admiralAwkbar (#1947)
Bump version for proper downloads...

🚀 Features

feat: adding slim action @​sorenmat (#1946)

🧰 Maintenance

feat: adding slim action @​sorenmat (#1946)

See details of all code changes since previous release



Commits

6585574 Create README.md (#1947)
7038c42 feat: adding slim action (#1946)
0d9c177 Update action.yml
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.7.2 to 4.7.3.

Release notes
Sourced from github/super-linter's releases.

v4.7.3
Changelog

Create README.md for SLIM GitHub Action @​admiralAwkbar (#1947)
Bump version for proper downloads...

🚀 Features

feat: adding slim action @​sorenmat (#1946)

🧰 Maintenance

feat: adding slim action @​sorenmat (#1946)

See details of all code changes since previous release



Commits

6585574 Create README.md (#1947)
7038c42 feat: adding slim action (#1946)
0d9c177 Update action.yml
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5552,2021-09-25T10:00:13Z,2021-09-27T02:47:12Z,2021-10-09T04:10:28Z,CLOSED,False,6,6,6,https://github.com/dearblue,Avoid using `__ENCODING__` pseudo-variables,1,[],https://github.com/mruby/mruby/pull/5552,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5552,"mruby-compiler replaces the __ENCODING__ pseudo-variable with a string literal.
In other words, __ENCODING__ is not affected by libmruby.a at runtime.
So if MRB_UTF8_STRING was defined and there was no mruby-bin-mrbc gem, some tests would fail.
% cat test_config.rb
MRuby::Build.new do
  toolchain ""clang""
  enable_test
  enable_debug
end

MRuby::Build.new(""utf8"") do
  toolchain ""clang""
  enable_test
  enable_debug
  defines << %w(MRB_UTF8_STRING)
  gem core: ""mruby-string-ext""
  gem core: ""mruby-symbol-ext""
end

% rake CONFIG=test_config.rb test
    ...SNIP...
>>> Test utf8 <<<
mrbtest - Embeddable Ruby Test

F.............F.......................................FF........................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
......F.........................................................................
...................
Fail: Integer#chr (mrbgems: mruby-string-ext)
 - Assertion[14]
    ArgumentError expected but nothing was raised.
Fail: String#concat (mrbgems: mruby-string-ext)
 - Assertion[4]
    Expected: ""H\xab""
      Actual: ""H«""
 - Assertion[5]
    RangeError expected but nothing was raised.
Fail: Symbol#size (mrbgems: mruby-symbol-ext)
 - Assertion[3]
    Expected: 22
      Actual: 8
 - Assertion[4]
    Expected: 6
      Actual: 4
Fail: Symbol#length (mrbgems: mruby-symbol-ext)
 - Assertion[3]
    Expected: 22
      Actual: 8
 - Assertion[4]
    Expected: 6
      Actual: 4
Fail: String#inspect [15.2.10.5.46] (core)
 - Assertion[3]
    Expected: ""\""\\xe3\\x82\\x8b\""""
      Actual: ""\""る\""""
  Total: 739
     OK: 734
     KO: 5
  Crash: 0
Warning: 0
   Skip: 0
rake aborted!","mruby-compiler replaces the __ENCODING__ pseudo-variable with a string literal.
In other words, __ENCODING__ is not affected by libmruby.a at runtime.
So if MRB_UTF8_STRING was defined and there was no mruby-bin-mrbc gem, some tests would fail.
% cat test_config.rb
MRuby::Build.new do
  toolchain ""clang""
  enable_test
  enable_debug
end

MRuby::Build.new(""utf8"") do
  toolchain ""clang""
  enable_test
  enable_debug
  defines << %w(MRB_UTF8_STRING)
  gem core: ""mruby-string-ext""
  gem core: ""mruby-symbol-ext""
end

% rake CONFIG=test_config.rb test
    ...SNIP...
>>> Test utf8 <<<
mrbtest - Embeddable Ruby Test

F.............F.......................................FF........................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
......F.........................................................................
...................
Fail: Integer#chr (mrbgems: mruby-string-ext)
 - Assertion[14]
    ArgumentError expected but nothing was raised.
Fail: String#concat (mrbgems: mruby-string-ext)
 - Assertion[4]
    Expected: ""H\xab""
      Actual: ""H«""
 - Assertion[5]
    RangeError expected but nothing was raised.
Fail: Symbol#size (mrbgems: mruby-symbol-ext)
 - Assertion[3]
    Expected: 22
      Actual: 8
 - Assertion[4]
    Expected: 6
      Actual: 4
Fail: Symbol#length (mrbgems: mruby-symbol-ext)
 - Assertion[3]
    Expected: 22
      Actual: 8
 - Assertion[4]
    Expected: 6
      Actual: 4
Fail: String#inspect [15.2.10.5.46] (core)
 - Assertion[3]
    Expected: ""\""\\xe3\\x82\\x8b\""""
      Actual: ""\""る\""""
  Total: 739
     OK: 734
     KO: 5
  Crash: 0
Warning: 0
   Skip: 0
rake aborted!",True,{}
mruby/mruby,https://github.com/mruby/mruby,5553,2021-09-28T14:07:16Z,2021-09-28T14:14:39Z,2021-09-28T14:14:49Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.7.3 to 4.8.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5553,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5553,"Bumps github/super-linter from 4.7.3 to 4.8.0.

Release notes
Sourced from github/super-linter's releases.

v4.8.0
Changelog

Bump cljkondo/clj-kondo from 2021.09.15-alpine to 2021.09.25-alpine @​dependabot (#1997)
Bump eslint-plugin-jsonc from 1.6.0 to 1.7.0 in /dependencies @​dependabot (#1998)
Bump @​coffeelint/cli from 5.0.3 to 5.0.4 in /dependencies @​dependabot (#1999)
Bump yoheimuta/protolint from v0.34.1 to v0.35.1 @​dependabot (#1995)
docs: correct GITHUB_CUSTOM_API_URL format @​patrickhuy (#1991)
docs: add example to actionlint.yml @​patrickhuy (#1992)
Bump snakemake from 6.8.0 to 6.8.1 in /dependencies @​dependabot (#2004)
Bump cfn-lint from 0.54.1 to 0.54.2 in /dependencies @​dependabot (#2003)
Bump sqlfluff from 0.6.5 to 0.6.6 in /dependencies @​dependabot (#2001)
Bump eslint-plugin-react from 7.25.3 to 7.26.0 in /dependencies @​dependabot (#2000)
Bump actions/github-script from 4.1 to 5 @​dependabot (#1996)
Bump types-requests from 2.25.6 to 2.25.9 in /dependencies @​dependabot (#2002)
Correct spelling of ""sqlfluff"" in README. @​Kurt-von-Laven (#1988)
Bump cljkondo/clj-kondo from 2021.08.06-alpine to 2021.09.15-alpine @​dependabot (#1972)
Bump eslint-plugin-jest from 24.4.0 to 24.4.2 in /dependencies @​dependabot (#1974)
Support Containerfile as alternative to Dockerfile @​ioanrogers (#1987)
Bump @​coffeelint/cli from 5.0.2 to 5.0.3 in /dependencies @​dependabot (#1975)
Bump prettier from 2.4.0 to 2.4.1 in /dependencies @​dependabot (#1977)
Bump stylelint-scss from 3.20.1 to 3.21.0 in /dependencies @​dependabot (#1978)
Bump eslint-plugin-vue from 7.17.0 to 7.18.0 in /dependencies @​dependabot (#1981)
Bump @​typescript-eslint/parser from 4.31.0 to 4.31.2 in /dependencies @​dependabot (#1983)
Bump htmlhint from 0.15.1 to 0.15.2 in /dependencies @​dependabot (#1980)
Bump eslint-plugin-react from 7.25.1 to 7.25.3 in /dependencies @​dependabot (#1979)
Bump alpine/terragrunt from 1.0.6 to 1.0.7 @​dependabot (#1971)
Bump yoheimuta/protolint from v0.32.0 to v0.34.1 @​dependabot (#1970)
Bump @​typescript-eslint/eslint-plugin from 4.31.0 to 4.31.2 in /dependencies @​dependabot (#1984)
Bump pylint from 2.10.2 to 2.11.1 in /dependencies @​dependabot (#1982)
Correct Mark Not Stale job - take 2 @​tunetheweb (#1966)
Bump golangci/golangci-lint from v1.42.0 to v1.42.1 @​dependabot (#1958)
Bump terraform-linters/tflint-bundle from v0.31.0 to v0.32.1 @​dependabot (#1959)
Bump typescript from 4.4.2 to 4.4.3 in /dependencies @​dependabot (#1960)
Bump prettier from 2.3.2 to 2.4.0 in /dependencies @​dependabot (#1961)
Correct expressions in GitHub Actions workflows @​tunetheweb (#1952)
Bump snakemake from 6.7.0 to 6.8.0 in /dependencies @​dependabot (#1962)
Bump sqlfluff from 0.6.4 to 0.6.5 in /dependencies @​dependabot (#1963)
Bump cfn-lint from 0.53.1 to 0.54.1 in /dependencies @​dependabot (#1964)
Update black binary to 21.9b0 @​jalaziz (#1909)
adding composer code @​admiralAwkbar (#1950)
Match AWS States file using ""States"" JSON key @​thibaultdelor (#1949)

🚀 Features

Add Gitleaks for secret scanning @​massongit (#1951)

🧰 Maintenance

Add Gitleaks for secret scanning @​massongit (#1951)



... (truncated)


Commits

ec410c9 bump version for release
4cd0893 Bump cljkondo/clj-kondo from 2021.09.15-alpine to 2021.09.25-alpine (#1997)
1aaa8ae Bump eslint-plugin-jsonc from 1.6.0 to 1.7.0 in /dependencies (#1998)
ccfc5eb Bump @​coffeelint/cli from 5.0.3 to 5.0.4 in /dependencies (#1999)
fac1470 Bump yoheimuta/protolint from v0.34.1 to v0.35.1 (#1995)
69f7945 really bad test
9b8c1ba docs: correct GITHUB_CUSTOM_API_URL format (#1991)
ebd175a Merge branch 'master' of https://github.com/github/super-linter
6e11f26 fix gitleaks
a6672db docs: add example to actionlint.yml (#1992)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.7.3 to 4.8.0.

Release notes
Sourced from github/super-linter's releases.

v4.8.0
Changelog

Bump cljkondo/clj-kondo from 2021.09.15-alpine to 2021.09.25-alpine @​dependabot (#1997)
Bump eslint-plugin-jsonc from 1.6.0 to 1.7.0 in /dependencies @​dependabot (#1998)
Bump @​coffeelint/cli from 5.0.3 to 5.0.4 in /dependencies @​dependabot (#1999)
Bump yoheimuta/protolint from v0.34.1 to v0.35.1 @​dependabot (#1995)
docs: correct GITHUB_CUSTOM_API_URL format @​patrickhuy (#1991)
docs: add example to actionlint.yml @​patrickhuy (#1992)
Bump snakemake from 6.8.0 to 6.8.1 in /dependencies @​dependabot (#2004)
Bump cfn-lint from 0.54.1 to 0.54.2 in /dependencies @​dependabot (#2003)
Bump sqlfluff from 0.6.5 to 0.6.6 in /dependencies @​dependabot (#2001)
Bump eslint-plugin-react from 7.25.3 to 7.26.0 in /dependencies @​dependabot (#2000)
Bump actions/github-script from 4.1 to 5 @​dependabot (#1996)
Bump types-requests from 2.25.6 to 2.25.9 in /dependencies @​dependabot (#2002)
Correct spelling of ""sqlfluff"" in README. @​Kurt-von-Laven (#1988)
Bump cljkondo/clj-kondo from 2021.08.06-alpine to 2021.09.15-alpine @​dependabot (#1972)
Bump eslint-plugin-jest from 24.4.0 to 24.4.2 in /dependencies @​dependabot (#1974)
Support Containerfile as alternative to Dockerfile @​ioanrogers (#1987)
Bump @​coffeelint/cli from 5.0.2 to 5.0.3 in /dependencies @​dependabot (#1975)
Bump prettier from 2.4.0 to 2.4.1 in /dependencies @​dependabot (#1977)
Bump stylelint-scss from 3.20.1 to 3.21.0 in /dependencies @​dependabot (#1978)
Bump eslint-plugin-vue from 7.17.0 to 7.18.0 in /dependencies @​dependabot (#1981)
Bump @​typescript-eslint/parser from 4.31.0 to 4.31.2 in /dependencies @​dependabot (#1983)
Bump htmlhint from 0.15.1 to 0.15.2 in /dependencies @​dependabot (#1980)
Bump eslint-plugin-react from 7.25.1 to 7.25.3 in /dependencies @​dependabot (#1979)
Bump alpine/terragrunt from 1.0.6 to 1.0.7 @​dependabot (#1971)
Bump yoheimuta/protolint from v0.32.0 to v0.34.1 @​dependabot (#1970)
Bump @​typescript-eslint/eslint-plugin from 4.31.0 to 4.31.2 in /dependencies @​dependabot (#1984)
Bump pylint from 2.10.2 to 2.11.1 in /dependencies @​dependabot (#1982)
Correct Mark Not Stale job - take 2 @​tunetheweb (#1966)
Bump golangci/golangci-lint from v1.42.0 to v1.42.1 @​dependabot (#1958)
Bump terraform-linters/tflint-bundle from v0.31.0 to v0.32.1 @​dependabot (#1959)
Bump typescript from 4.4.2 to 4.4.3 in /dependencies @​dependabot (#1960)
Bump prettier from 2.3.2 to 2.4.0 in /dependencies @​dependabot (#1961)
Correct expressions in GitHub Actions workflows @​tunetheweb (#1952)
Bump snakemake from 6.7.0 to 6.8.0 in /dependencies @​dependabot (#1962)
Bump sqlfluff from 0.6.4 to 0.6.5 in /dependencies @​dependabot (#1963)
Bump cfn-lint from 0.53.1 to 0.54.1 in /dependencies @​dependabot (#1964)
Update black binary to 21.9b0 @​jalaziz (#1909)
adding composer code @​admiralAwkbar (#1950)
Match AWS States file using ""States"" JSON key @​thibaultdelor (#1949)

🚀 Features

Add Gitleaks for secret scanning @​massongit (#1951)

🧰 Maintenance

Add Gitleaks for secret scanning @​massongit (#1951)



... (truncated)


Commits

ec410c9 bump version for release
4cd0893 Bump cljkondo/clj-kondo from 2021.09.15-alpine to 2021.09.25-alpine (#1997)
1aaa8ae Bump eslint-plugin-jsonc from 1.6.0 to 1.7.0 in /dependencies (#1998)
ccfc5eb Bump @​coffeelint/cli from 5.0.3 to 5.0.4 in /dependencies (#1999)
fac1470 Bump yoheimuta/protolint from v0.34.1 to v0.35.1 (#1995)
69f7945 really bad test
9b8c1ba docs: correct GITHUB_CUSTOM_API_URL format (#1991)
ebd175a Merge branch 'master' of https://github.com/github/super-linter
6e11f26 fix gitleaks
a6672db docs: add example to actionlint.yml (#1992)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5554,2021-10-04T14:08:10Z,2021-10-07T01:30:13Z,2021-10-07T01:30:26Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.8.0 to 4.8.1,1,['dependencies'],https://github.com/mruby/mruby/pull/5554,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5554,"Bumps github/super-linter from 4.8.0 to 4.8.1.

Release notes
Sourced from github/super-linter's releases.

v4.8.1
Changelog

Enhancement: Add support for google-java-format @​guotongfei (#1969)

🚀 Features

update clang-format @​admiralAwkbar (#2007)

🐛 Bug Fixes

psalm debugging @​admiralAwkbar (#2008)

See details of all code changes since previous release



Commits

fd9c428 bump for release
57e0530 cleaner (#2008)
3472ac3 Add textlint (#2006)
81422f3 update clang-format (#2007)
1afc7f8 Enhancement: Add support for google-java-format (#1969)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.8.0 to 4.8.1.

Release notes
Sourced from github/super-linter's releases.

v4.8.1
Changelog

Enhancement: Add support for google-java-format @​guotongfei (#1969)

🚀 Features

update clang-format @​admiralAwkbar (#2007)

🐛 Bug Fixes

psalm debugging @​admiralAwkbar (#2008)

See details of all code changes since previous release



Commits

fd9c428 bump for release
57e0530 cleaner (#2008)
3472ac3 Add textlint (#2006)
81422f3 update clang-format (#2007)
1afc7f8 Enhancement: Add support for google-java-format (#1969)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5555,2021-10-09T04:39:05Z,2021-10-09T05:15:06Z,2021-10-30T12:29:58Z,MERGED,True,9,1,1,https://github.com/dearblue,Partially allow overriding of `String#[]` methods,1,[],https://github.com/mruby/mruby/pull/5555,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5555,"This is for the purpose of supporting Regexp.


configuration and build
% cat regexp_config.rb
MRuby::Lockfile.disable
MRuby::Build.new do
  toolchain ""clang""
  enable_debug
  gem core: ""mruby-bin-mruby""
  gem core: ""mruby-print""
  gem mgem: ""mruby-onig-regexp""
  #gem mgem: ""mruby-regexp-pcre""
end

% rake MRUBY_CONFIG=regexp_config.rb


mruby HEAD (bec074e)
% build/host/bin/mruby -e 'p ""abcdefg""[/.(?=...$)/]'
-e:1: can't convert OnigRegexp into Integer (TypeError)


with this patch
% build/host/bin/mruby -e 'p ""abcdefg""[/.(?=...$)/]'
""d""","This is for the purpose of supporting Regexp.


configuration and build
% cat regexp_config.rb
MRuby::Lockfile.disable
MRuby::Build.new do
  toolchain ""clang""
  enable_debug
  gem core: ""mruby-bin-mruby""
  gem core: ""mruby-print""
  gem mgem: ""mruby-onig-regexp""
  #gem mgem: ""mruby-regexp-pcre""
end

% rake MRUBY_CONFIG=regexp_config.rb


mruby HEAD (bec074e)
% build/host/bin/mruby -e 'p ""abcdefg""[/.(?=...$)/]'
-e:1: can't convert OnigRegexp into Integer (TypeError)


with this patch
% build/host/bin/mruby -e 'p ""abcdefg""[/.(?=...$)/]'
""d""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5556,2021-10-09T04:40:25Z,2021-10-09T05:00:09Z,2021-10-30T12:29:57Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix typo for `OP_SETIDX`,1,[],https://github.com/mruby/mruby/pull/5556,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5556,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5557,2021-10-12T09:05:06Z,2021-10-12T11:16:18Z,2021-10-13T10:02:53Z,MERGED,True,1,1,1,https://github.com/jbampton,pre-commit autoupdate,1,[],https://github.com/mruby/mruby/pull/5557,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5557,https://pre-commit.com/index.html#pre-commit-autoupdate,https://pre-commit.com/index.html#pre-commit-autoupdate,True,{}
mruby/mruby,https://github.com/mruby/mruby,5558,2021-10-14T09:58:21Z,2021-10-15T00:47:24Z,2021-10-15T04:33:03Z,MERGED,True,1,1,1,https://github.com/jbampton,Fix grammar in doc/guides/mrbgems.md,1,[],https://github.com/mruby/mruby/pull/5558,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5558,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5559,2021-10-18T03:48:18Z,2021-10-18T04:07:33Z,2021-10-18T04:15:24Z,MERGED,True,1,1,1,https://github.com/igrep,Fix a syntax error in commented-out code,1,[],https://github.com/mruby/mruby/pull/5559,https://github.com/igrep,1,https://github.com/mruby/mruby/pull/5559,"By uncommenting the line changed by this commit, ruby -c build_config/default.rb complains of a syntax error due to the illegally nested double quotes.","By uncommenting the line changed by this commit, ruby -c build_config/default.rb complains of a syntax error due to the illegally nested double quotes.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5560,2021-10-18T14:05:54Z,2021-10-18T23:06:29Z,2021-10-18T23:06:38Z,MERGED,True,12,12,4,https://github.com/apps/dependabot,build(deps): bump actions/checkout from 2.3.4 to 2.3.5,1,['dependencies'],https://github.com/mruby/mruby/pull/5560,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5560,"Bumps actions/checkout from 2.3.4 to 2.3.5.

Release notes
Sourced from actions/checkout's releases.

v2.3.5
Update dependencies



Commits

1e204e9 update licensed check (#606)
0299a0d update dist (#605)
be0f448 Bump ws from 5.2.2 to 5.2.3 (#604)
56c00a7 Bump tmpl from 1.0.4 to 1.0.5 (#588)
85e47d1 Bump path-parse from 1.0.6 to 1.0.7 (#568)
3fc17f8 Bump hosted-git-info from 2.8.5 to 2.8.9 (#500)
e3bc06d Bump lodash from 4.17.15 to 4.17.21 (#499)
442567b Bump handlebars from 4.5.3 to 4.7.7 (#497)
7f00b66 Bump y18n from 4.0.0 to 4.0.1 (#469)
eccf386 Bump @​actions/core from 1.1.3 to 1.2.6 (#361)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/checkout from 2.3.4 to 2.3.5.

Release notes
Sourced from actions/checkout's releases.

v2.3.5
Update dependencies



Commits

1e204e9 update licensed check (#606)
0299a0d update dist (#605)
be0f448 Bump ws from 5.2.2 to 5.2.3 (#604)
56c00a7 Bump tmpl from 1.0.4 to 1.0.5 (#588)
85e47d1 Bump path-parse from 1.0.6 to 1.0.7 (#568)
3fc17f8 Bump hosted-git-info from 2.8.5 to 2.8.9 (#500)
e3bc06d Bump lodash from 4.17.15 to 4.17.21 (#499)
442567b Bump handlebars from 4.5.3 to 4.7.7 (#497)
7f00b66 Bump y18n from 4.0.0 to 4.0.1 (#469)
eccf386 Bump @​actions/core from 1.1.3 to 1.2.6 (#361)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5563,2021-10-22T02:06:08Z,2021-10-22T04:41:51Z,2021-10-22T04:41:51Z,MERGED,True,204,6,7,https://github.com/suetanvil,Added testing support for cross-MinGW builds.,1,[],https://github.com/mruby/mruby/pull/5563,https://github.com/suetanvil,1,https://github.com/mruby/mruby/pull/5563,"This adds a build_config that will cross-build a Windows executable
using the MinGW cross-compiler and will also run the unit (i.e.
'rake test') using Wine.
For this to work, I made some modifications to the underlying test
scripts as well as some minor changes to a couple of the tests
themselves.
(As mentioned in this discussion thread.)","This adds a build_config that will cross-build a Windows executable
using the MinGW cross-compiler and will also run the unit (i.e.
'rake test') using Wine.
For this to work, I made some modifications to the underlying test
scripts as well as some minor changes to a couple of the tests
themselves.
(As mentioned in this discussion thread.)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5564,2021-10-24T14:23:34Z,2021-10-24T22:59:02Z,2021-10-30T12:29:58Z,MERGED,True,31,13,7,https://github.com/dearblue,Make `mrb_static_assert()` a variable argument,1,[],https://github.com/mruby/mruby/pull/5564,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5564,"mrb_static_assert() extends the macro function to take one or two arguments.
If the argument is other than that, an error will occur.
References:

static_assert のメッセージ省略を許可 - cpprefjp C++日本語リファレンス
https://cpprefjp.github.io/lang/cpp17/extending_static_assert.html
c - Overloading Macro on Number of Arguments - Stack Overflow
https://stackoverflow.com/a/11763277


The message omission of static_assert () was introduced in C++17, but in C it is likely to be introduced in C23.","mrb_static_assert() extends the macro function to take one or two arguments.
If the argument is other than that, an error will occur.
References:

static_assert のメッセージ省略を許可 - cpprefjp C++日本語リファレンス
https://cpprefjp.github.io/lang/cpp17/extending_static_assert.html
c - Overloading Macro on Number of Arguments - Stack Overflow
https://stackoverflow.com/a/11763277


The message omission of static_assert () was introduced in C++17, but in C it is likely to be introduced in C23.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5565,2021-10-29T13:38:56Z,2021-11-03T10:38:12Z,2021-11-11T12:45:47Z,MERGED,True,5,5,1,https://github.com/dearblue,Improved `Class#new` method,1,[],https://github.com/mruby/mruby/pull/5565,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5565,"The number of registers used is reduced.
Also, previously R6 and R7 were used, which exceeded the limit of new_irep.nregs = 6.
This could cause the VM stack to overrun.","The number of registers used is reduced.
Also, previously R6 and R7 were used, which exceeded the limit of new_irep.nregs = 6.
This could cause the VM stack to overrun.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5566,2021-10-30T00:57:56Z,2021-10-31T08:29:20Z,2021-11-11T12:45:48Z,MERGED,True,1,1,1,https://github.com/dearblue,Avoid redefining `MRB_WORDBOX_NO_FLOAT_TRUNCATE`,1,[],https://github.com/mruby/mruby/pull/5566,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5566,"Adding MRB_WORDBOX_NO_FLOAT_TRUNCATE to the build configuration in 32-bit CPU mode had a double definition.
% cat myconf.rb
MRuby::Build.new do
  toolchain ""clang""
  defines << ""MRB_WORDBOX_NO_FLOAT_TRUNCATE""
  cc.flags << ""-m32""
  linker.flags << ""-m32""
  enable_debug
end

% rake CONFIG=myconf.rb
CPP   src/array.c -> build/host/src/array.pi
In file included from /var/tmp/mruby/src/array.c:7:
In file included from /var/tmp/mruby/include/mruby.h:115:
In file included from /var/tmp/mruby/include/mruby/value.h:203:
/var/tmp/mruby/include/mruby/boxing_word.h:11:10: warning:
      'MRB_WORDBOX_NO_FLOAT_TRUNCATE' macro redefined [-Wmacro-redefined]
# define MRB_WORDBOX_NO_FLOAT_TRUNCATE
         ^
<command line>:3:9: note: previous definition is here
#define MRB_WORDBOX_NO_FLOAT_TRUNCATE 1
        ^
1 warning generated.
...SNIP...","Adding MRB_WORDBOX_NO_FLOAT_TRUNCATE to the build configuration in 32-bit CPU mode had a double definition.
% cat myconf.rb
MRuby::Build.new do
  toolchain ""clang""
  defines << ""MRB_WORDBOX_NO_FLOAT_TRUNCATE""
  cc.flags << ""-m32""
  linker.flags << ""-m32""
  enable_debug
end

% rake CONFIG=myconf.rb
CPP   src/array.c -> build/host/src/array.pi
In file included from /var/tmp/mruby/src/array.c:7:
In file included from /var/tmp/mruby/include/mruby.h:115:
In file included from /var/tmp/mruby/include/mruby/value.h:203:
/var/tmp/mruby/include/mruby/boxing_word.h:11:10: warning:
      'MRB_WORDBOX_NO_FLOAT_TRUNCATE' macro redefined [-Wmacro-redefined]
# define MRB_WORDBOX_NO_FLOAT_TRUNCATE
         ^
<command line>:3:9: note: previous definition is here
#define MRB_WORDBOX_NO_FLOAT_TRUNCATE 1
        ^
1 warning generated.
...SNIP...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5567,2021-10-30T04:30:01Z,2021-10-30T08:46:41Z,2021-11-11T12:45:48Z,MERGED,True,1,1,1,https://github.com/dearblue,Avoid violations of the `mrb_static_assert()` standard,1,[],https://github.com/mruby/mruby/pull/5567,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5567,"ref: #5564
% cc -pedantic -S -Iinclude -DMRB_NO_PRESYM -o- src/array.c > /dev/null
In file included from src/array.c:7:
In file included from include/mruby.h:115:
In file included from include/mruby/value.h:204:
include/mruby/boxing_word.h:133:1: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
mrb_static_assert(sizeof(mrb_value) == sizeof(union mrb_value_));
^
include/mruby.h:109:108: note: expanded from macro 'mrb_static_assert'
    mrb_static_assert_expand(mrb_static_assert_selector(__VA_ARGS__, mrb_static_assert2, mrb_static_assert1)(__VA_ARGS__))
                                                                                                           ^
include/mruby.h:100:10: note: macro 'mrb_static_assert_selector' defined here
# define mrb_static_assert_selector(a, b, name, ...) name
         ^
1 warning generated.","ref: #5564
% cc -pedantic -S -Iinclude -DMRB_NO_PRESYM -o- src/array.c > /dev/null
In file included from src/array.c:7:
In file included from include/mruby.h:115:
In file included from include/mruby/value.h:204:
include/mruby/boxing_word.h:133:1: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
mrb_static_assert(sizeof(mrb_value) == sizeof(union mrb_value_));
^
include/mruby.h:109:108: note: expanded from macro 'mrb_static_assert'
    mrb_static_assert_expand(mrb_static_assert_selector(__VA_ARGS__, mrb_static_assert2, mrb_static_assert1)(__VA_ARGS__))
                                                                                                           ^
include/mruby.h:100:10: note: macro 'mrb_static_assert_selector' defined here
# define mrb_static_assert_selector(a, b, name, ...) name
         ^
1 warning generated.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5568,2021-10-31T13:18:46Z,2021-11-01T04:54:16Z,2021-11-11T12:45:48Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix failed build with `MRB_NAN_BOXING` and `enable_cxx_abi`,1,[],https://github.com/mruby/mruby/pull/5568,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5568,"% c++ -xc++ -std=c++03 -S -Iinclude -DMRB_NAN_BOXING -DMRB_NO_PRESYM -o- src/array.c > /dev/null
In file included from src/array.c:7:
In file included from include/mruby.h:115:
In file included from include/mruby/value.h:201:
include/mruby/boxing_nan.h:95:12: error: cannot initialize return object of type 'enum mrb_vtype' with an rvalue of type 'int'
    return (enum mrb_vtype)(o.u >> 8) & 0x1f;
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.","% c++ -xc++ -std=c++03 -S -Iinclude -DMRB_NAN_BOXING -DMRB_NO_PRESYM -o- src/array.c > /dev/null
In file included from src/array.c:7:
In file included from include/mruby.h:115:
In file included from include/mruby/value.h:201:
include/mruby/boxing_nan.h:95:12: error: cannot initialize return object of type 'enum mrb_vtype' with an rvalue of type 'int'
    return (enum mrb_vtype)(o.u >> 8) & 0x1f;
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5569,2021-10-31T14:08:29Z,2021-11-04T06:54:09Z,2021-11-11T12:45:47Z,MERGED,True,69,0,2,https://github.com/dearblue,Added `Array#product` method,1,[],https://github.com/mruby/mruby/pull/5569,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5569,"Ruby-1.9.0 feature.
ref: https://docs.ruby-lang.org/ja/3.0.0/method/Array/i/product.html","Ruby-1.9.0 feature.
ref: https://docs.ruby-lang.org/ja/3.0.0/method/Array/i/product.html",True,{}
mruby/mruby,https://github.com/mruby/mruby,5570,2021-10-31T14:40:20Z,2021-11-04T06:54:22Z,2021-11-11T12:45:49Z,MERGED,True,41,0,2,https://github.com/dearblue,Added `Random.#bytes` method,1,[],https://github.com/mruby/mruby/pull/5570,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5570,ref: https://docs.ruby-lang.org/ja/3.0.0/method/Random/i/bytes.html,ref: https://docs.ruby-lang.org/ja/3.0.0/method/Random/i/bytes.html,True,{}
mruby/mruby,https://github.com/mruby/mruby,5571,2021-11-03T14:06:39Z,2021-11-03T22:48:15Z,2021-11-03T22:48:25Z,MERGED,True,12,12,4,https://github.com/apps/dependabot,build(deps): bump actions/checkout from 2.3.5 to 2.4.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5571,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5571,"Bumps actions/checkout from 2.3.5 to 2.4.0.

Release notes
Sourced from actions/checkout's releases.

v2.4.0

Convert SSH URLs like org-<ORG_ID>@github.com: to https://github.com/ - pr




Commits

ec3a7ce set insteadOf url for org-id (#621)
fd47087 codeql should analyze lib not dist (#620)
3d677ac script to generate license info (#614)
826ba42 npm audit fix (#612)
eb8a193 update dev dependencies and react to new linting rules (#611)
c49af7c Create codeql-analysis.yml (#602)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/checkout from 2.3.5 to 2.4.0.

Release notes
Sourced from actions/checkout's releases.

v2.4.0

Convert SSH URLs like org-<ORG_ID>@github.com: to https://github.com/ - pr




Commits

ec3a7ce set insteadOf url for org-id (#621)
fd47087 codeql should analyze lib not dist (#620)
3d677ac script to generate license info (#614)
826ba42 npm audit fix (#612)
eb8a193 update dev dependencies and react to new linting rules (#611)
c49af7c Create codeql-analysis.yml (#602)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5576,2021-11-15T14:08:14Z,2021-11-16T07:59:11Z,2021-11-16T07:59:20Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.8.1 to 4.8.3,1,['dependencies'],https://github.com/mruby/mruby/pull/5576,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5576,"Bumps github/super-linter from 4.8.1 to 4.8.3.

Release notes
Sourced from github/super-linter's releases.

v4.8.3
Changelog
It's 4.8.2 but now with updated action.yml to point correctly...
See details of all code changes since previous release
v4.8.2
Changelog

add link for debug @​admiralAwkbar (#2123)
Typescript prettier @​admiralAwkbar (#2121)
Fix calling GitHub API (github.api.~ -> github.rest.~) @​massongit (#2116)
Adding scalafmt @​jmherbst (#2053)
Bump python from 3.9.7-alpine to 3.10.0-alpine @​dependabot (#2039)
Bump actions/checkout from 2.3.4 to 2.4.0 @​dependabot (#2096)
update template @​admiralAwkbar (#2113)
only show errors for openapi linter @​goelrohan6 (#2112)
Bump bobheadxi/deployments from 0.6.0 to 0.6.1 @​dependabot (#2082)
Bump cljkondo/clj-kondo from 2021.09.25-alpine to 2021.10.19-alpine @​dependabot (#2070)
Bump flake8 from 3.9.2 to 4.0.1 in /dependencies @​dependabot (#2048)
Bump snakemake from 6.9.1 to 6.10.0 in /dependencies @​dependabot (#2076)
Bump ansible-lint from 5.2.0 to 5.2.1 in /dependencies @​dependabot (#2077)
Bump pybind11 from 2.7.1 to 2.8.1 in /dependencies @​dependabot (#2087)
Bump sqlfluff from 0.6.6 to 0.8.1 in /dependencies @​dependabot (#2104)
Bump cfn-lint from 0.54.2 to 0.56.0 in /dependencies @​dependabot (#2105)
Bump eslint-plugin-react-hooks from 4.2.0 to 4.3.0 in /dependencies @​dependabot (#2109)
Bump isort from 5.9.3 to 5.10.1 in /dependencies @​dependabot (#2110)
Bump types-requests from 2.25.9 to 2.25.12 in /dependencies @​dependabot (#2111)
Bump golangci/golangci-lint from v1.42.1 to v1.43.0 @​dependabot (#2097)
Bump koalaman/shellcheck from v0.7.2 to v0.8.0 @​dependabot (#2098)
Bump accurics/terrascan from 1.10.0 to 1.12.0 @​dependabot (#2069)
Bump alpine/terragrunt from 1.0.8 to 1.0.10 @​dependabot (#2083)
Bump terraform-linters/tflint-bundle from v0.32.1 to v0.33.1 @​dependabot (#2099)
Bump yoheimuta/protolint from v0.35.1 to v0.35.2 @​dependabot (#2100)
Update Deps @​lindluni (#2107)
Bump @​typescript-eslint/eslint-plugin from 4.32.0 to 4.33.0 in /dependencies @​dependabot (#2035)
Bump @​typescript-eslint/eslint-plugin from 4.31.2 to 4.32.0 in /dependencies @​dependabot (#2014)
Bump alpine/terragrunt from 1.0.7 to 1.0.8 @​dependabot (#2028)
Bump eslint-plugin-jest from 24.4.2 to 24.5.2 in /dependencies @​dependabot (#2029)
Bump standard from 16.0.3 to 16.0.4 in /dependencies @​dependabot (#2030)
Fix github scripts to v5 @​tunetheweb (#2032)
Bump npm-groovy-lint from 8.2.0 to 9.0.0 in /dependencies @​dependabot (#2013)
Improve GITHUB_API_URL default value handling @​tdabasinskas (#2031)
Simplify GitLeaks install process @​PeterDaveHello (#2023)
Update shfmt from v3.3.1 to v3.4.0 @​PeterDaveHello (#2022)
Bump ansible-lint from 5.1.3 to 5.2.0 in /dependencies @​dependabot (#2018)
Bump snakemake from 6.8.1 to 6.9.1 in /dependencies @​dependabot (#2017)
Bump axios from 0.21.4 to 0.22.0 in /dependencies @​dependabot (#2016)
Bump @​typescript-eslint/parser from 4.31.2 to 4.32.0 in /dependencies @​dependabot (#2012)
Bump eslint-plugin-react from 7.26.0 to 7.26.1 in /dependencies @​dependabot (#2011)



... (truncated)


Commits

7d5dc98 Update action.yml
991ac14 add link (#2123)
fb82126 Typescript prettier (#2121)
e0790b4 Fix calling GitHub API (github.api.~ -> github.rest.~) (#2116)
897185a Adding scalafmt (#2053)
1d50613 Bump python from 3.9.7-alpine to 3.10.0-alpine (#2039)
8bdd5de Bump actions/checkout from 2.3.4 to 2.4.0 (#2096)
aac2cfc update template (#2113)
81ba7d8 only show errors for openapi linter (#2112)
ef05cca Bump bobheadxi/deployments from 0.6.0 to 0.6.1 (#2082)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.8.1 to 4.8.3.

Release notes
Sourced from github/super-linter's releases.

v4.8.3
Changelog
It's 4.8.2 but now with updated action.yml to point correctly...
See details of all code changes since previous release
v4.8.2
Changelog

add link for debug @​admiralAwkbar (#2123)
Typescript prettier @​admiralAwkbar (#2121)
Fix calling GitHub API (github.api.~ -> github.rest.~) @​massongit (#2116)
Adding scalafmt @​jmherbst (#2053)
Bump python from 3.9.7-alpine to 3.10.0-alpine @​dependabot (#2039)
Bump actions/checkout from 2.3.4 to 2.4.0 @​dependabot (#2096)
update template @​admiralAwkbar (#2113)
only show errors for openapi linter @​goelrohan6 (#2112)
Bump bobheadxi/deployments from 0.6.0 to 0.6.1 @​dependabot (#2082)
Bump cljkondo/clj-kondo from 2021.09.25-alpine to 2021.10.19-alpine @​dependabot (#2070)
Bump flake8 from 3.9.2 to 4.0.1 in /dependencies @​dependabot (#2048)
Bump snakemake from 6.9.1 to 6.10.0 in /dependencies @​dependabot (#2076)
Bump ansible-lint from 5.2.0 to 5.2.1 in /dependencies @​dependabot (#2077)
Bump pybind11 from 2.7.1 to 2.8.1 in /dependencies @​dependabot (#2087)
Bump sqlfluff from 0.6.6 to 0.8.1 in /dependencies @​dependabot (#2104)
Bump cfn-lint from 0.54.2 to 0.56.0 in /dependencies @​dependabot (#2105)
Bump eslint-plugin-react-hooks from 4.2.0 to 4.3.0 in /dependencies @​dependabot (#2109)
Bump isort from 5.9.3 to 5.10.1 in /dependencies @​dependabot (#2110)
Bump types-requests from 2.25.9 to 2.25.12 in /dependencies @​dependabot (#2111)
Bump golangci/golangci-lint from v1.42.1 to v1.43.0 @​dependabot (#2097)
Bump koalaman/shellcheck from v0.7.2 to v0.8.0 @​dependabot (#2098)
Bump accurics/terrascan from 1.10.0 to 1.12.0 @​dependabot (#2069)
Bump alpine/terragrunt from 1.0.8 to 1.0.10 @​dependabot (#2083)
Bump terraform-linters/tflint-bundle from v0.32.1 to v0.33.1 @​dependabot (#2099)
Bump yoheimuta/protolint from v0.35.1 to v0.35.2 @​dependabot (#2100)
Update Deps @​lindluni (#2107)
Bump @​typescript-eslint/eslint-plugin from 4.32.0 to 4.33.0 in /dependencies @​dependabot (#2035)
Bump @​typescript-eslint/eslint-plugin from 4.31.2 to 4.32.0 in /dependencies @​dependabot (#2014)
Bump alpine/terragrunt from 1.0.7 to 1.0.8 @​dependabot (#2028)
Bump eslint-plugin-jest from 24.4.2 to 24.5.2 in /dependencies @​dependabot (#2029)
Bump standard from 16.0.3 to 16.0.4 in /dependencies @​dependabot (#2030)
Fix github scripts to v5 @​tunetheweb (#2032)
Bump npm-groovy-lint from 8.2.0 to 9.0.0 in /dependencies @​dependabot (#2013)
Improve GITHUB_API_URL default value handling @​tdabasinskas (#2031)
Simplify GitLeaks install process @​PeterDaveHello (#2023)
Update shfmt from v3.3.1 to v3.4.0 @​PeterDaveHello (#2022)
Bump ansible-lint from 5.1.3 to 5.2.0 in /dependencies @​dependabot (#2018)
Bump snakemake from 6.8.1 to 6.9.1 in /dependencies @​dependabot (#2017)
Bump axios from 0.21.4 to 0.22.0 in /dependencies @​dependabot (#2016)
Bump @​typescript-eslint/parser from 4.31.2 to 4.32.0 in /dependencies @​dependabot (#2012)
Bump eslint-plugin-react from 7.26.0 to 7.26.1 in /dependencies @​dependabot (#2011)



... (truncated)


Commits

7d5dc98 Update action.yml
991ac14 add link (#2123)
fb82126 Typescript prettier (#2121)
e0790b4 Fix calling GitHub API (github.api.~ -> github.rest.~) (#2116)
897185a Adding scalafmt (#2053)
1d50613 Bump python from 3.9.7-alpine to 3.10.0-alpine (#2039)
8bdd5de Bump actions/checkout from 2.3.4 to 2.4.0 (#2096)
aac2cfc update template (#2113)
81ba7d8 only show errors for openapi linter (#2112)
ef05cca Bump bobheadxi/deployments from 0.6.0 to 0.6.1 (#2082)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5577,2021-11-17T14:09:12Z,2021-11-18T01:28:35Z,2021-11-18T01:28:49Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.8.3 to 4.8.4,1,['dependencies'],https://github.com/mruby/mruby/pull/5577,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5577,"Bumps github/super-linter from 4.8.3 to 4.8.4.

Release notes
Sourced from github/super-linter's releases.

v4.8.4
Changelog

adding lib to fix go @​admiralAwkbar (#2159)
Bump scalameta/scalafmt from v2.7.5 to v3.1.0 @​dependabot (#2131)
Update black binary to 21.10b0 @​pdonorio (#2141)
Bump alpine from 3.14.2 to 3.14.3 @​dependabot (#2132)
Bump alpine/terragrunt from 1.0.10 to 1.0.11 @​dependabot (#2133)
Add CI timeout @​massongit (#2127)
Bump htmlhint from 0.16.0 to 0.16.1 in /dependencies @​dependabot (#2134)
Bump stylelint-config-standard from 23.0.0 to 24.0.0 in /dependencies @​dependabot (#2135)
Bump stylelint from 14.0.1 to 14.1.0 in /dependencies @​dependabot (#2136)
Bump eslint-plugin-jsx-a11y from 6.4.1 to 6.5.1 in /dependencies @​dependabot (#2137)
Bump eslint-plugin-react from 7.26.1 to 7.27.0 in /dependencies @​dependabot (#2138)
Bump typing-extensions from 3.10.0.2 to 4.0.0 in /dependencies @​dependabot (#2139)
Bump types-requests from 2.25.12 to 2.26.0 in /dependencies @​dependabot (#2140)

See details of all code changes since previous release



Commits

563be7d bump for release
f84b6a6 adding lib (#2159)
1fbb07a Bump scalameta/scalafmt from v2.7.5 to v3.1.0 (#2131)
0d88d49 Update black binary to 21.10b0 (#2141)
eca2494 Bump alpine from 3.14.2 to 3.14.3 (#2132)
957d977 Bump alpine/terragrunt from 1.0.10 to 1.0.11 (#2133)
60ccdfc Add CI timeout (#2127)
474495d Bump htmlhint from 0.16.0 to 0.16.1 in /dependencies (#2134)
492e9d0 Bump stylelint-config-standard from 23.0.0 to 24.0.0 in /dependencies (#2135)
fbf7a8d Bump stylelint from 14.0.1 to 14.1.0 in /dependencies (#2136)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.8.3 to 4.8.4.

Release notes
Sourced from github/super-linter's releases.

v4.8.4
Changelog

adding lib to fix go @​admiralAwkbar (#2159)
Bump scalameta/scalafmt from v2.7.5 to v3.1.0 @​dependabot (#2131)
Update black binary to 21.10b0 @​pdonorio (#2141)
Bump alpine from 3.14.2 to 3.14.3 @​dependabot (#2132)
Bump alpine/terragrunt from 1.0.10 to 1.0.11 @​dependabot (#2133)
Add CI timeout @​massongit (#2127)
Bump htmlhint from 0.16.0 to 0.16.1 in /dependencies @​dependabot (#2134)
Bump stylelint-config-standard from 23.0.0 to 24.0.0 in /dependencies @​dependabot (#2135)
Bump stylelint from 14.0.1 to 14.1.0 in /dependencies @​dependabot (#2136)
Bump eslint-plugin-jsx-a11y from 6.4.1 to 6.5.1 in /dependencies @​dependabot (#2137)
Bump eslint-plugin-react from 7.26.1 to 7.27.0 in /dependencies @​dependabot (#2138)
Bump typing-extensions from 3.10.0.2 to 4.0.0 in /dependencies @​dependabot (#2139)
Bump types-requests from 2.25.12 to 2.26.0 in /dependencies @​dependabot (#2140)

See details of all code changes since previous release



Commits

563be7d bump for release
f84b6a6 adding lib (#2159)
1fbb07a Bump scalameta/scalafmt from v2.7.5 to v3.1.0 (#2131)
0d88d49 Update black binary to 21.10b0 (#2141)
eca2494 Bump alpine from 3.14.2 to 3.14.3 (#2132)
957d977 Bump alpine/terragrunt from 1.0.10 to 1.0.11 (#2133)
60ccdfc Add CI timeout (#2127)
474495d Bump htmlhint from 0.16.0 to 0.16.1 in /dependencies (#2134)
492e9d0 Bump stylelint-config-standard from 23.0.0 to 24.0.0 in /dependencies (#2135)
fbf7a8d Bump stylelint from 14.0.1 to 14.1.0 in /dependencies (#2136)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5578,2021-11-19T13:57:42Z,2021-11-19T23:50:42Z,2021-12-05T04:33:45Z,MERGED,True,1,1,1,https://github.com/dearblue,Fixes keywords are lost with the `OP_SENDB`,1,[],https://github.com/mruby/mruby/pull/5578,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5578,"If a splat argument was passed, it could write out of range on the VM stack.
% bin/mruby -e 'def m(*args, **opts, &blk) p [args, opts, blk] end; m(*%w(X Y Z), r: 1, g: 2, b: 3) {}'
[[""X"", ""Y"", ""Z""], {}, #<Proc:0x80077d7d0>]","If a splat argument was passed, it could write out of range on the VM stack.
% bin/mruby -e 'def m(*args, **opts, &blk) p [args, opts, blk] end; m(*%w(X Y Z), r: 1, g: 2, b: 3) {}'
[[""X"", ""Y"", ""Z""], {}, #<Proc:0x80077d7d0>]",True,{}
mruby/mruby,https://github.com/mruby/mruby,5579,2021-11-19T13:57:49Z,2021-11-19T23:48:05Z,2021-12-05T04:33:45Z,MERGED,True,2,2,2,https://github.com/dearblue,Fixed a discrepancy in `OP_ASET`,1,[],https://github.com/mruby/mruby/pull/5579,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5579,"There was a discrepancy in the actual behavior, assertions, and documentation.
Therefore, I modified it based on the actual behavior.","There was a discrepancy in the actual behavior, assertions, and documentation.
Therefore, I modified it based on the actual behavior.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5580,2021-11-22T13:06:15Z,2021-11-23T01:03:44Z,2021-12-05T04:33:47Z,MERGED,True,7,19,2,https://github.com/dearblue,Fixed occurs `SIGSEGV` with `mrbgems/mruby-method`,1,[],https://github.com/mruby/mruby/pull/5580,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5580,"Calling the Method#{parameters,source_location} method on a static Proc object resulted in SIGSEGV.
The trigger is #5402.
The original implementation of the Method#{parameters,source_location} method was to temporarily rewrite the object and then call the method of the same name in Proc.
Rewriting of objects placed in the ROM section by #5402 above is prohibited by hardware such as the CPU.
This caused a SIGSEGV.","Calling the Method#{parameters,source_location} method on a static Proc object resulted in SIGSEGV.
The trigger is #5402.
The original implementation of the Method#{parameters,source_location} method was to temporarily rewrite the object and then call the method of the same name in Proc.
Rewriting of objects placed in the ROM section by #5402 above is prohibited by hardware such as the CPU.
This caused a SIGSEGV.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5581,2021-11-23T14:12:21Z,2021-11-24T00:39:50Z,2021-11-24T00:39:58Z,MERGED,True,2,2,2,https://github.com/apps/dependabot,build(deps): bump actions/cache from 2.1.6 to 2.1.7,1,['dependencies'],https://github.com/mruby/mruby/pull/5581,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5581,"Bumps actions/cache from 2.1.6 to 2.1.7.

Release notes
Sourced from actions/cache's releases.

v2.1.7
Support 10GB cache upload using the latest version 1.0.8 of @actions/cache 



Commits

937d244 bumping up action version to 2.1.7 (#683)
eb0698d Bumping up @​actions/cache version to 1.0.8 (#682)
67b6d52 (R renv) Remove unused renv-cache-path variable (#663)
92f67a4 (R renv) Fix Renv package cache location in examples (#660)
6bbe742 Use existing check-dist implementation (#618)
c9db520 Create check-dist.yml (#604)
10906ba Bump ws from 5.2.2 to 5.2.3 (#610)
2ebdcff Add ""see more"" link to GHE-not-supported warning (#609)
5807af2 Fix bugs in example of how to use with pipenv (#607)
0638051 Golang example tweak - add go-build path - rebuild page TOC (#577)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/cache from 2.1.6 to 2.1.7.

Release notes
Sourced from actions/cache's releases.

v2.1.7
Support 10GB cache upload using the latest version 1.0.8 of @actions/cache 



Commits

937d244 bumping up action version to 2.1.7 (#683)
eb0698d Bumping up @​actions/cache version to 1.0.8 (#682)
67b6d52 (R renv) Remove unused renv-cache-path variable (#663)
92f67a4 (R renv) Fix Renv package cache location in examples (#660)
6bbe742 Use existing check-dist implementation (#618)
c9db520 Create check-dist.yml (#604)
10906ba Bump ws from 5.2.2 to 5.2.3 (#610)
2ebdcff Add ""see more"" link to GHE-not-supported warning (#609)
5807af2 Fix bugs in example of how to use with pipenv (#607)
0638051 Golang example tweak - add go-build path - rebuild page TOC (#577)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5584,2021-11-24T14:42:13Z,2021-11-28T09:04:58Z,2021-12-05T04:33:47Z,CLOSED,False,52,2,6,https://github.com/dearblue,Check more `MRB_ARGS_NONE()`,1,[],https://github.com/mruby/mruby/pull/5584,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5584,"The __id__ method implemented in the C function has MRB_ARGS_NONE() specified, but it is also effective in the following cases.
p nil.__id__ opts: 1 rescue p :a
p nil.method(:__id__).call 1 rescue p :b
p nil.method(:__id__).call opts: 1 rescue p :c
p nil.method(:__id__).to_proc.call 1 rescue p :d
p nil.method(:__id__).to_proc.call opts: 1 rescue p :e
p nil.method(:__id__).unbind.bind_call nil, 1 rescue p :f
p nil.method(:__id__).unbind.bind_call nil, opts: 1 rescue p :g
p nil.__send__ :__id__, 1 rescue p :h
p nil.__send__ :__id__, opts: 1 rescue p :i
After applying this patch, all items will output symbols in the same way as CRuby.
For this purpose, add MRB_PROC_NOARG to struct RProc::flags.","The __id__ method implemented in the C function has MRB_ARGS_NONE() specified, but it is also effective in the following cases.
p nil.__id__ opts: 1 rescue p :a
p nil.method(:__id__).call 1 rescue p :b
p nil.method(:__id__).call opts: 1 rescue p :c
p nil.method(:__id__).to_proc.call 1 rescue p :d
p nil.method(:__id__).to_proc.call opts: 1 rescue p :e
p nil.method(:__id__).unbind.bind_call nil, 1 rescue p :f
p nil.method(:__id__).unbind.bind_call nil, opts: 1 rescue p :g
p nil.__send__ :__id__, 1 rescue p :h
p nil.__send__ :__id__, opts: 1 rescue p :i
After applying this patch, all items will output symbols in the same way as CRuby.
For this purpose, add MRB_PROC_NOARG to struct RProc::flags.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5584,2021-11-24T14:42:13Z,2021-11-28T09:04:58Z,2021-12-05T04:33:47Z,CLOSED,False,52,2,6,https://github.com/dearblue,Check more `MRB_ARGS_NONE()`,1,[],https://github.com/mruby/mruby/pull/5584,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5584#issuecomment-981049352,"The __id__ method implemented in the C function has MRB_ARGS_NONE() specified, but it is also effective in the following cases.
p nil.__id__ opts: 1 rescue p :a
p nil.method(:__id__).call 1 rescue p :b
p nil.method(:__id__).call opts: 1 rescue p :c
p nil.method(:__id__).to_proc.call 1 rescue p :d
p nil.method(:__id__).to_proc.call opts: 1 rescue p :e
p nil.method(:__id__).unbind.bind_call nil, 1 rescue p :f
p nil.method(:__id__).unbind.bind_call nil, opts: 1 rescue p :g
p nil.__send__ :__id__, 1 rescue p :h
p nil.__send__ :__id__, opts: 1 rescue p :i
After applying this patch, all items will output symbols in the same way as CRuby.
For this purpose, add MRB_PROC_NOARG to struct RProc::flags.",This PR has been merged as commit 668b12e.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5585,2021-11-24T14:42:19Z,2021-11-25T08:08:33Z,2021-12-05T04:33:46Z,MERGED,True,42,12,5,https://github.com/dearblue,Fixed some methods where keyword arguments are not passed,1,[],https://github.com/mruby/mruby/pull/5585,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5585,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5587,2021-11-28T05:27:04Z,2021-11-28T10:03:33Z,2021-12-05T04:33:46Z,MERGED,True,12,4,1,https://github.com/dearblue,Fix `args_unshift()` in `mrbgems/mruby-method`,1,[],https://github.com/mruby/mruby/pull/5587,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5587,"Both keyword arguments and block arguments were being destroyed when there were no arguments.
The cause of this is #5585. I' m sorry.","Both keyword arguments and block arguments were being destroyed when there were no arguments.
The cause of this is #5585. I' m sorry.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5587,2021-11-28T05:27:04Z,2021-11-28T10:03:33Z,2021-12-05T04:33:46Z,MERGED,True,12,4,1,https://github.com/dearblue,Fix `args_unshift()` in `mrbgems/mruby-method`,1,[],https://github.com/mruby/mruby/pull/5587,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5587#issuecomment-981056724,"Both keyword arguments and block arguments were being destroyed when there were no arguments.
The cause of this is #5585. I' m sorry.",How should we treat #5585 then? Should we revert it?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5587,2021-11-28T05:27:04Z,2021-11-28T10:03:33Z,2021-12-05T04:33:46Z,MERGED,True,12,4,1,https://github.com/dearblue,Fix `args_unshift()` in `mrbgems/mruby-method`,1,[],https://github.com/mruby/mruby/pull/5587,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5587#issuecomment-981073183,"Both keyword arguments and block arguments were being destroyed when there were no arguments.
The cause of this is #5585. I' m sorry.","I don't think there is a need for revert.
However, it wasn't good to mention only the keyword arguments in the #5585 commit message.
#5585's args_unshift() was to fix the missing block arguments.
Perhaps I should have kept the commit itself separate.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5588,2021-11-28T08:40:13Z,2021-11-28T10:04:58Z,2021-12-05T04:33:47Z,MERGED,True,1,1,1,https://github.com/dearblue,Fixed compile error for `mrbgems/mruby-cmath` with `clang++`,1,[],https://github.com/mruby/mruby/pull/5588,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5588,"If the preprocessor check part is only __clang__, CI's such as Ubuntu-2004-clang will fail to compile.
This is why we limited the addition to FreeBSD and OpenBSD, which have clang++ in their base systems.
DragonFly BSD and NetBSD have GCC built into their base systems, so nothing is changed.","If the preprocessor check part is only __clang__, CI's such as Ubuntu-2004-clang will fail to compile.
This is why we limited the addition to FreeBSD and OpenBSD, which have clang++ in their base systems.
DragonFly BSD and NetBSD have GCC built into their base systems, so nothing is changed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5589,2021-11-28T09:28:11Z,2021-11-29T01:14:59Z,2021-12-05T04:33:46Z,MERGED,True,5,11,5,https://github.com/dearblue,"Align ""wrong number of arguments"" messages",1,[],https://github.com/mruby/mruby/pull/5589,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5589,"Make ""N for M"" into the form ""given N, expected M"".
As I worked, I noticed that the argnum_error() function had a part to include the method name in the message.
I think this part is no longer needed by #5394.


Before this patch
% bin/mruby -e '[1, 2, 3].each 0'
trace (most recent call last):
        [1] -e:1
-e:1:in each: 'each': wrong number of arguments (1 for 0) (ArgumentError)


After this patch
% bin/mruby -e '[1, 2, 3].each 0'
trace (most recent call last):
        [1] -e:1
-e:1:in each: wrong number of arguments (given 1, expected 0) (ArgumentError)","Make ""N for M"" into the form ""given N, expected M"".
As I worked, I noticed that the argnum_error() function had a part to include the method name in the message.
I think this part is no longer needed by #5394.


Before this patch
% bin/mruby -e '[1, 2, 3].each 0'
trace (most recent call last):
        [1] -e:1
-e:1:in each: 'each': wrong number of arguments (1 for 0) (ArgumentError)


After this patch
% bin/mruby -e '[1, 2, 3].each 0'
trace (most recent call last):
        [1] -e:1
-e:1:in each: wrong number of arguments (given 1, expected 0) (ArgumentError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5592,2021-12-08T14:05:59Z,2021-12-16T14:08:09Z,2021-12-16T14:08:11Z,CLOSED,False,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/upload-artifact from 2.2.4 to 2.3.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5592,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5592,"Bumps actions/upload-artifact from 2.2.4 to 2.3.0.

Release notes
Sourced from actions/upload-artifact's releases.

v2.3.0 Upload Artifact

Optimizations for faster uploads of larger files that are already compressed
Significantly improved logging when there are chunked uploads
Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files
Various other small bugfixes & optimizations




Commits

da838ae Bump @​actions/artifact to version 0.6.0 (#280)
f4ac36d Improve readme (#278)
5f375cc Document how to correctly use environment variables for path input (#274)
a009a66 Create release-new-action-version.yml (#277)
b9bb657 Bump tmpl from 1.0.4 to 1.0.5 (#250)
0b3de3e Fix README.md links and some formatting updates (#273)
54f3f7f Merge pull request #271 from actions/robherley/dupe-issue-template
f061e61 rm dupe security vulnerability from issue template
ee82d6a Merge pull request #269 from actions/robherley/update-issue-templates
ecd66f1 add issue templates
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/upload-artifact from 2.2.4 to 2.3.0.

Release notes
Sourced from actions/upload-artifact's releases.

v2.3.0 Upload Artifact

Optimizations for faster uploads of larger files that are already compressed
Significantly improved logging when there are chunked uploads
Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files
Various other small bugfixes & optimizations




Commits

da838ae Bump @​actions/artifact to version 0.6.0 (#280)
f4ac36d Improve readme (#278)
5f375cc Document how to correctly use environment variables for path input (#274)
a009a66 Create release-new-action-version.yml (#277)
b9bb657 Bump tmpl from 1.0.4 to 1.0.5 (#250)
0b3de3e Fix README.md links and some formatting updates (#273)
54f3f7f Merge pull request #271 from actions/robherley/dupe-issue-template
f061e61 rm dupe security vulnerability from issue template
ee82d6a Merge pull request #269 from actions/robherley/update-issue-templates
ecd66f1 add issue templates
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5592,2021-12-08T14:05:59Z,2021-12-16T14:08:09Z,2021-12-16T14:08:11Z,CLOSED,False,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/upload-artifact from 2.2.4 to 2.3.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5592,https://github.com/apps/dependabot,2,https://github.com/mruby/mruby/pull/5592#issuecomment-995849809,"Bumps actions/upload-artifact from 2.2.4 to 2.3.0.

Release notes
Sourced from actions/upload-artifact's releases.

v2.3.0 Upload Artifact

Optimizations for faster uploads of larger files that are already compressed
Significantly improved logging when there are chunked uploads
Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files
Various other small bugfixes & optimizations




Commits

da838ae Bump @​actions/artifact to version 0.6.0 (#280)
f4ac36d Improve readme (#278)
5f375cc Document how to correctly use environment variables for path input (#274)
a009a66 Create release-new-action-version.yml (#277)
b9bb657 Bump tmpl from 1.0.4 to 1.0.5 (#250)
0b3de3e Fix README.md links and some formatting updates (#273)
54f3f7f Merge pull request #271 from actions/robherley/dupe-issue-template
f061e61 rm dupe security vulnerability from issue template
ee82d6a Merge pull request #269 from actions/robherley/update-issue-templates
ecd66f1 add issue templates
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",Superseded by #5601.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5596,2021-12-11T13:31:12Z,,2021-12-19T12:15:54Z,OPEN,False,57,27,4,https://github.com/sasq64,Add mrb_get_args_a(),3,[],https://github.com/mruby/mruby/pull/5596,https://github.com/sasq64,1,https://github.com/mruby/mruby/pull/5596,"This pull request adds a new function, mrb_get_args_a(), which works exactly like mrb_get_args() except that it takes
the pointer arguments as an array instead of varargs.
I needed to add this for my mruby binder library that I want to release publicly. It allows you to write code like:
(from my test cases)
    auto* ruby = mrb_open();

    auto* person_class = mrb::make_class<Person>(ruby, ""Person"");
    mrb::add_method<Person>(
        ruby, ""age="", [](Person* p, int age) { p->age = age; });
    mrb::add_method<Person>(
        ruby, ""age"", [](Person const* p) { return p->age; });

    mrb::add_method<Person>(ruby, ""copy_from"", [](Person* p, Person* src) {
        p->name = src->name;
        p->age = src->age;
    });

    mrb::add_method<Person>(
        ruby, ""dup"", [](Person const* p) { return new Person(*p); });

    auto other_age = mrb_load_string(ruby,
        ""person = Person.new ; person.age = 5 ; other = ""
        ""Person.new ; other.copy_from(person) ; person.age = 2 ; other.age"");
    CHECK(mrb::value_to<int>(other_age) == 5);","This pull request adds a new function, mrb_get_args_a(), which works exactly like mrb_get_args() except that it takes
the pointer arguments as an array instead of varargs.
I needed to add this for my mruby binder library that I want to release publicly. It allows you to write code like:
(from my test cases)
    auto* ruby = mrb_open();

    auto* person_class = mrb::make_class<Person>(ruby, ""Person"");
    mrb::add_method<Person>(
        ruby, ""age="", [](Person* p, int age) { p->age = age; });
    mrb::add_method<Person>(
        ruby, ""age"", [](Person const* p) { return p->age; });

    mrb::add_method<Person>(ruby, ""copy_from"", [](Person* p, Person* src) {
        p->name = src->name;
        p->age = src->age;
    });

    mrb::add_method<Person>(
        ruby, ""dup"", [](Person const* p) { return new Person(*p); });

    auto other_age = mrb_load_string(ruby,
        ""person = Person.new ; person.age = 5 ; other = ""
        ""Person.new ; other.copy_from(person) ; person.age = 2 ; other.age"");
    CHECK(mrb::value_to<int>(other_age) == 5);",True,{}
mruby/mruby,https://github.com/mruby/mruby,5596,2021-12-11T13:31:12Z,,2021-12-19T12:15:54Z,OPEN,False,57,27,4,https://github.com/sasq64,Add mrb_get_args_a(),3,[],https://github.com/mruby/mruby/pull/5596,https://github.com/sasq64,2,https://github.com/mruby/mruby/pull/5596#issuecomment-991916388,"This pull request adds a new function, mrb_get_args_a(), which works exactly like mrb_get_args() except that it takes
the pointer arguments as an array instead of varargs.
I needed to add this for my mruby binder library that I want to release publicly. It allows you to write code like:
(from my test cases)
    auto* ruby = mrb_open();

    auto* person_class = mrb::make_class<Person>(ruby, ""Person"");
    mrb::add_method<Person>(
        ruby, ""age="", [](Person* p, int age) { p->age = age; });
    mrb::add_method<Person>(
        ruby, ""age"", [](Person const* p) { return p->age; });

    mrb::add_method<Person>(ruby, ""copy_from"", [](Person* p, Person* src) {
        p->name = src->name;
        p->age = src->age;
    });

    mrb::add_method<Person>(
        ruby, ""dup"", [](Person const* p) { return new Person(*p); });

    auto other_age = mrb_load_string(ruby,
        ""person = Person.new ; person.age = 5 ; other = ""
        ""Person.new ; other.copy_from(person) ; person.age = 2 ; other.age"");
    CHECK(mrb::value_to<int>(other_age) == 5);",Good points. Updated my branch.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5596,2021-12-11T13:31:12Z,,2021-12-19T12:15:54Z,OPEN,False,57,27,4,https://github.com/sasq64,Add mrb_get_args_a(),3,[],https://github.com/mruby/mruby/pull/5596,https://github.com/sasq64,3,https://github.com/mruby/mruby/pull/5596#issuecomment-997377408,"This pull request adds a new function, mrb_get_args_a(), which works exactly like mrb_get_args() except that it takes
the pointer arguments as an array instead of varargs.
I needed to add this for my mruby binder library that I want to release publicly. It allows you to write code like:
(from my test cases)
    auto* ruby = mrb_open();

    auto* person_class = mrb::make_class<Person>(ruby, ""Person"");
    mrb::add_method<Person>(
        ruby, ""age="", [](Person* p, int age) { p->age = age; });
    mrb::add_method<Person>(
        ruby, ""age"", [](Person const* p) { return p->age; });

    mrb::add_method<Person>(ruby, ""copy_from"", [](Person* p, Person* src) {
        p->name = src->name;
        p->age = src->age;
    });

    mrb::add_method<Person>(
        ruby, ""dup"", [](Person const* p) { return new Person(*p); });

    auto other_age = mrb_load_string(ruby,
        ""person = Person.new ; person.age = 5 ; other = ""
        ""Person.new ; other.copy_from(person) ; person.age = 2 ; other.age"");
    CHECK(mrb::value_to<int>(other_age) == 5);",@dearblue Anything else I need to do ?,True,{}
mruby/mruby,https://github.com/mruby/mruby,5596,2021-12-11T13:31:12Z,,2021-12-19T12:15:54Z,OPEN,False,57,27,4,https://github.com/sasq64,Add mrb_get_args_a(),3,[],https://github.com/mruby/mruby/pull/5596,https://github.com/dearblue,4,https://github.com/mruby/mruby/pull/5596#issuecomment-997382281,"This pull request adds a new function, mrb_get_args_a(), which works exactly like mrb_get_args() except that it takes
the pointer arguments as an array instead of varargs.
I needed to add this for my mruby binder library that I want to release publicly. It allows you to write code like:
(from my test cases)
    auto* ruby = mrb_open();

    auto* person_class = mrb::make_class<Person>(ruby, ""Person"");
    mrb::add_method<Person>(
        ruby, ""age="", [](Person* p, int age) { p->age = age; });
    mrb::add_method<Person>(
        ruby, ""age"", [](Person const* p) { return p->age; });

    mrb::add_method<Person>(ruby, ""copy_from"", [](Person* p, Person* src) {
        p->name = src->name;
        p->age = src->age;
    });

    mrb::add_method<Person>(
        ruby, ""dup"", [](Person const* p) { return new Person(*p); });

    auto other_age = mrb_load_string(ruby,
        ""person = Person.new ; person.age = 5 ; other = ""
        ""Person.new ; other.copy_from(person) ; person.age = 2 ; other.age"");
    CHECK(mrb::value_to<int>(other_age) == 5);","I'm a third party just like you, so I don't have the authority to commit.
Please wait for @matz's decision.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5598,2021-12-12T12:49:03Z,2021-12-13T01:28:51Z,2022-01-04T06:47:31Z,MERGED,True,131,0,3,https://github.com/dearblue,"Add `Array#{repeated_combination,repeated_permutation}` methods",1,[],https://github.com/mruby/mruby/pull/5598,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5598,"Ruby 1.9.2 feature.
ref: https://docs.ruby-lang.org/ja/3.1.0/method/Array/i/repeated_combination.html
ref: https://docs.ruby-lang.org/ja/3.1.0/method/Array/i/repeated_permutation.html","Ruby 1.9.2 feature.
ref: https://docs.ruby-lang.org/ja/3.1.0/method/Array/i/repeated_combination.html
ref: https://docs.ruby-lang.org/ja/3.1.0/method/Array/i/repeated_permutation.html",True,{}
mruby/mruby,https://github.com/mruby/mruby,5599,2021-12-13T14:20:12Z,2021-12-15T14:07:13Z,2022-01-04T06:47:32Z,MERGED,True,5,5,2,https://github.com/dearblue,Avoid losing the upper digits for mruby binary,1,[],https://github.com/mruby/mruby/pull/5599,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5599,"rlen keeps 16 bits.
ilen keeps 32 bits.

Note that this change will break mruby binary format compatibility.","rlen keeps 16 bits.
ilen keeps 32 bits.

Note that this change will break mruby binary format compatibility.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5600,2021-12-14T12:09:04Z,2022-04-02T17:42:28Z,2022-04-02T18:06:25Z,CLOSED,False,6,6,1,https://github.com/Rakesh9100,Fixing Typing Error and some Punctuation Error,1,[],https://github.com/mruby/mruby/pull/5600,https://github.com/Rakesh9100,1,https://github.com/mruby/mruby/pull/5600,Fixed some punctuation errors and typos !!,Fixed some punctuation errors and typos !!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5600,2021-12-14T12:09:04Z,2022-04-02T17:42:28Z,2022-04-02T18:06:25Z,CLOSED,False,6,6,1,https://github.com/Rakesh9100,Fixing Typing Error and some Punctuation Error,1,[],https://github.com/mruby/mruby/pull/5600,https://github.com/fundamental,2,https://github.com/mruby/mruby/pull/5600#issuecomment-994264401,Fixed some punctuation errors and typos !!,"I would say ""To build both of them, simply run:"". I wouldn't add the ""by navigating:"" to browser command as it's redundant. Also I don't know that ""complying to STANDARD"" should be altered to ""complying with STANDARD"" as I think the former is equally correct.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5600,2021-12-14T12:09:04Z,2022-04-02T17:42:28Z,2022-04-02T18:06:25Z,CLOSED,False,6,6,1,https://github.com/Rakesh9100,Fixing Typing Error and some Punctuation Error,1,[],https://github.com/mruby/mruby/pull/5600,https://github.com/Rakesh9100,3,https://github.com/mruby/mruby/pull/5600#issuecomment-995430444,Fixed some punctuation errors and typos !!,"I would say ""To build both of them, simply run:"". I wouldn't add the ""by navigating:"" to browser command as it's redundant. Also I don't know that ""complying to STANDARD"" should be altered to ""complying with STANDARD"" as I think the former is equally correct.

Yes, 'simply run' will also be good to say. You can change it to that. But talking about complying, it is good to have “complying with”. It is formally correct.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5600,2021-12-14T12:09:04Z,2022-04-02T17:42:28Z,2022-04-02T18:06:25Z,CLOSED,False,6,6,1,https://github.com/Rakesh9100,Fixing Typing Error and some Punctuation Error,1,[],https://github.com/mruby/mruby/pull/5600,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5600#issuecomment-995432493,Fixed some punctuation errors and typos !!,According to the dictionary 'comply with' is the idiom. I am OK with the change. Or maybe we can use 'conform to' instead.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5601,2021-12-16T14:08:06Z,2021-12-16T22:49:53Z,2021-12-16T22:50:05Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/upload-artifact from 2.2.4 to 2.3.1,1,['dependencies'],https://github.com/mruby/mruby/pull/5601,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5601,"Bumps actions/upload-artifact from 2.2.4 to 2.3.1.

Release notes
Sourced from actions/upload-artifact's releases.

v2.3.1
Fix for empty fails on Windows failing on upload #281
v2.3.0 Upload Artifact

Optimizations for faster uploads of larger files that are already compressed
Significantly improved logging when there are chunked uploads
Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files
Various other small bugfixes & optimizations




Commits

82c141c Bump @​actions/artifact to version 0.6.1 (#286)
da838ae Bump @​actions/artifact to version 0.6.0 (#280)
f4ac36d Improve readme (#278)
5f375cc Document how to correctly use environment variables for path input (#274)
a009a66 Create release-new-action-version.yml (#277)
b9bb657 Bump tmpl from 1.0.4 to 1.0.5 (#250)
0b3de3e Fix README.md links and some formatting updates (#273)
54f3f7f Merge pull request #271 from actions/robherley/dupe-issue-template
f061e61 rm dupe security vulnerability from issue template
ee82d6a Merge pull request #269 from actions/robherley/update-issue-templates
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/upload-artifact from 2.2.4 to 2.3.1.

Release notes
Sourced from actions/upload-artifact's releases.

v2.3.1
Fix for empty fails on Windows failing on upload #281
v2.3.0 Upload Artifact

Optimizations for faster uploads of larger files that are already compressed
Significantly improved logging when there are chunked uploads
Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files
Various other small bugfixes & optimizations




Commits

82c141c Bump @​actions/artifact to version 0.6.1 (#286)
da838ae Bump @​actions/artifact to version 0.6.0 (#280)
f4ac36d Improve readme (#278)
5f375cc Document how to correctly use environment variables for path input (#274)
a009a66 Create release-new-action-version.yml (#277)
b9bb657 Bump tmpl from 1.0.4 to 1.0.5 (#250)
0b3de3e Fix README.md links and some formatting updates (#273)
54f3f7f Merge pull request #271 from actions/robherley/dupe-issue-template
f061e61 rm dupe security vulnerability from issue template
ee82d6a Merge pull request #269 from actions/robherley/update-issue-templates
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5602,2021-12-17T14:14:49Z,2021-12-19T10:11:51Z,2022-01-04T06:47:33Z,MERGED,True,22,0,5,https://github.com/dearblue,Add `bin/mrbc --no-ext-ops` switch,1,[],https://github.com/mruby/mruby/pull/5602,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5602,"Print an error if OP_EXT[123] is needed when generating mruby binary.
This may be useful for mruby/c.
Inspired by #5590.","Print an error if OP_EXT[123] is needed when generating mruby binary.
This may be useful for mruby/c.
Inspired by #5590.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5603,2021-12-17T14:14:59Z,2021-12-18T10:42:31Z,2022-01-04T06:47:31Z,MERGED,True,9,9,1,https://github.com/dearblue,Print error before cleanup in `codegen_error()`,1,[],https://github.com/mruby/mruby/pull/5603,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5603,"Previously, it always pointed to the highest scope as the location of the error.


example code code.rb
huge_num = ""1"" + ""0"" * 300; eval <<CODE, nil, ""test.rb"", 1
class Object
  module A
    #{huge_num}
  end
end
CODE


Before this patch
% bin/mruby code.rb
test.rb:1: integer too big
trace (most recent call last):
        [1] code.rb:1
code.rb:1:in eval: codegen error (ScriptError)


After this patch
% bin/mruby code.rb
test.rb:3: integer too big
trace (most recent call last):
        [1] code.rb:1
code.rb:1:in eval: codegen error (ScriptError)","Previously, it always pointed to the highest scope as the location of the error.


example code code.rb
huge_num = ""1"" + ""0"" * 300; eval <<CODE, nil, ""test.rb"", 1
class Object
  module A
    #{huge_num}
  end
end
CODE


Before this patch
% bin/mruby code.rb
test.rb:1: integer too big
trace (most recent call last):
        [1] code.rb:1
code.rb:1:in eval: codegen error (ScriptError)


After this patch
% bin/mruby code.rb
test.rb:3: integer too big
trace (most recent call last):
        [1] code.rb:1
code.rb:1:in eval: codegen error (ScriptError)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5610,2021-12-21T14:11:39Z,2021-12-21T14:13:44Z,2021-12-21T14:13:55Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.8.4 to 4.8.5,1,['dependencies'],https://github.com/mruby/mruby/pull/5610,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5610,"Bumps github/super-linter from 4.8.4 to 4.8.5.

Release notes
Sourced from github/super-linter's releases.

v4.8.5
Changelog

Bump npm-groovy-lint from 9.0.0 to 9.1.0 in /dependencies @​dependabot (#2249)
Bump stylelint-scss from 4.0.0 to 4.0.1 in /dependencies @​dependabot (#2228)
Bump terraform-linters/tflint-bundle from v0.33.2.0 to v0.34.0.0 @​dependabot (#2225)
Bump @​coffeelint/cli from 5.2.1 to 5.2.2 in /dependencies @​dependabot (#2248)
Bump docker/login-action from 1.10.0 to 1.12.0 @​dependabot (#2250)
Bump zricethezav/gitleaks from v8.0.4 to v8.2.3 @​dependabot (#2241)
Bump cljkondo/clj-kondo from 2021.12.01-alpine to 2021.12.19-alpine @​dependabot (#2242)
Bump alpine/terragrunt from 1.0.11 to 1.1.2 @​dependabot (#2243)
Bump typescript from 4.5.2 to 4.5.4 in /dependencies @​dependabot (#2246)
Bump @​typescript-eslint/parser from 5.4.0 to 5.7.0 in /dependencies @​dependabot (#2247)
Bump zricethezav/gitleaks from v7.6.1 to v8.0.4 @​dependabot (#2188)
Bump scalameta/scalafmt from v3.1.2 to v3.2.1 @​dependabot (#2206)
Bump alpine from 3.14.3 to 3.15.0 @​dependabot (#2187)
Bump terraform-linters/tflint-bundle from v0.33.1 to v0.33.2.0 @​dependabot (#2216)
Bump python from 3.10.0-alpine to 3.10.1-alpine @​dependabot (#2217)
Bump cljkondo/clj-kondo from 2021.10.19-alpine to 2021.12.01-alpine @​dependabot (#2207)
Bump eslint-plugin-vue from 8.1.1 to 8.2.0 in /dependencies @​dependabot (#2210)
Bump prettier from 2.5.0 to 2.5.1 in /dependencies @​dependabot (#2208)
Bump textlint from 12.0.2 to 12.1.0 in /dependencies @​dependabot (#2209)
Bump @​typescript-eslint/eslint-plugin from 5.4.0 to 5.5.0 in /dependencies @​dependabot (#2212)
Bump @​coffeelint/cli from 5.2.0 to 5.2.1 in /dependencies @​dependabot (#2211)
Bump @​typescript-eslint/parser from 5.4.0 to 5.5.0 in /dependencies @​dependabot (#2213)
Update rustfmt with 2021 edition @​yanganto (#2196)
Bump mvdan/shfmt from v3.4.0 to v3.4.1 @​dependabot (#2189)
Bump scalameta/scalafmt from v3.1.0 to v3.1.2 @​dependabot (#2163)
Bump eslint-plugin-jest from 25.2.4 to 25.3.0 in /dependencies @​dependabot (#2190)
Bump immer from 9.0.6 to 9.0.7 in /dependencies @​dependabot (#2191)
Bump prettier from 2.4.1 to 2.5.0 in /dependencies @​dependabot (#2192)
Bump htmlhint from 0.16.1 to 1.0.0 in /dependencies @​dependabot (#2193)
move to docker @​admiralAwkbar (#2176)
Bump @​typescript-eslint/eslint-plugin from 5.3.1 to 5.4.0 in /dependencies @​dependabot (#2168)
Bump eslint-plugin-react from 7.27.0 to 7.27.1 in /dependencies @​dependabot (#2169)
Bump cfn-lint from 0.56.0 to 0.56.2 in /dependencies @​dependabot (#2174)
Bump @​typescript-eslint/parser from 5.3.1 to 5.4.0 in /dependencies @​dependabot (#2164)
Bump markdownlint-cli from 0.29.0 to 0.30.0 in /dependencies @​dependabot (#2165)
Bump eslint-plugin-vue from 8.0.3 to 8.1.1 in /dependencies @​dependabot (#2166)
Bump typescript from 4.4.4 to 4.5.2 in /dependencies @​dependabot (#2167)
Update black binary to 21.11b1 @​pdonorio (#2162)
doc: fix sort oder of options @​rasa (#2161)

🚀 Features

Lint the whole code base with JSCPD @​ferrarimarco (#2180)
Uninstall Dockerfilelint @​ferrarimarco (#2195)

🐛 Bug Fixes

Add RUST_2021 test and fix RUST_2021 file list @​ferrarimarco (#2215)



... (truncated)


Commits

b864136 Bump for release
bcf0247 Bump npm-groovy-lint from 9.0.0 to 9.1.0 in /dependencies (#2249)
4880399 Bump stylelint-scss from 4.0.0 to 4.0.1 in /dependencies (#2228)
518943e Bump terraform-linters/tflint-bundle from v0.33.2.0 to v0.34.0.0 (#2225)
8ef7861 Bump @​coffeelint/cli from 5.2.1 to 5.2.2 in /dependencies (#2248)
2043b95 Bump docker/login-action from 1.10.0 to 1.12.0 (#2250)
5186a02 Bump zricethezav/gitleaks from v8.0.4 to v8.2.3 (#2241)
c872333 Bump cljkondo/clj-kondo from 2021.12.01-alpine to 2021.12.19-alpine (#2242)
17f7cfe Bump alpine/terragrunt from 1.0.11 to 1.1.2 (#2243)
c261756 Bump typescript from 4.5.2 to 4.5.4 in /dependencies (#2246)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.8.4 to 4.8.5.

Release notes
Sourced from github/super-linter's releases.

v4.8.5
Changelog

Bump npm-groovy-lint from 9.0.0 to 9.1.0 in /dependencies @​dependabot (#2249)
Bump stylelint-scss from 4.0.0 to 4.0.1 in /dependencies @​dependabot (#2228)
Bump terraform-linters/tflint-bundle from v0.33.2.0 to v0.34.0.0 @​dependabot (#2225)
Bump @​coffeelint/cli from 5.2.1 to 5.2.2 in /dependencies @​dependabot (#2248)
Bump docker/login-action from 1.10.0 to 1.12.0 @​dependabot (#2250)
Bump zricethezav/gitleaks from v8.0.4 to v8.2.3 @​dependabot (#2241)
Bump cljkondo/clj-kondo from 2021.12.01-alpine to 2021.12.19-alpine @​dependabot (#2242)
Bump alpine/terragrunt from 1.0.11 to 1.1.2 @​dependabot (#2243)
Bump typescript from 4.5.2 to 4.5.4 in /dependencies @​dependabot (#2246)
Bump @​typescript-eslint/parser from 5.4.0 to 5.7.0 in /dependencies @​dependabot (#2247)
Bump zricethezav/gitleaks from v7.6.1 to v8.0.4 @​dependabot (#2188)
Bump scalameta/scalafmt from v3.1.2 to v3.2.1 @​dependabot (#2206)
Bump alpine from 3.14.3 to 3.15.0 @​dependabot (#2187)
Bump terraform-linters/tflint-bundle from v0.33.1 to v0.33.2.0 @​dependabot (#2216)
Bump python from 3.10.0-alpine to 3.10.1-alpine @​dependabot (#2217)
Bump cljkondo/clj-kondo from 2021.10.19-alpine to 2021.12.01-alpine @​dependabot (#2207)
Bump eslint-plugin-vue from 8.1.1 to 8.2.0 in /dependencies @​dependabot (#2210)
Bump prettier from 2.5.0 to 2.5.1 in /dependencies @​dependabot (#2208)
Bump textlint from 12.0.2 to 12.1.0 in /dependencies @​dependabot (#2209)
Bump @​typescript-eslint/eslint-plugin from 5.4.0 to 5.5.0 in /dependencies @​dependabot (#2212)
Bump @​coffeelint/cli from 5.2.0 to 5.2.1 in /dependencies @​dependabot (#2211)
Bump @​typescript-eslint/parser from 5.4.0 to 5.5.0 in /dependencies @​dependabot (#2213)
Update rustfmt with 2021 edition @​yanganto (#2196)
Bump mvdan/shfmt from v3.4.0 to v3.4.1 @​dependabot (#2189)
Bump scalameta/scalafmt from v3.1.0 to v3.1.2 @​dependabot (#2163)
Bump eslint-plugin-jest from 25.2.4 to 25.3.0 in /dependencies @​dependabot (#2190)
Bump immer from 9.0.6 to 9.0.7 in /dependencies @​dependabot (#2191)
Bump prettier from 2.4.1 to 2.5.0 in /dependencies @​dependabot (#2192)
Bump htmlhint from 0.16.1 to 1.0.0 in /dependencies @​dependabot (#2193)
move to docker @​admiralAwkbar (#2176)
Bump @​typescript-eslint/eslint-plugin from 5.3.1 to 5.4.0 in /dependencies @​dependabot (#2168)
Bump eslint-plugin-react from 7.27.0 to 7.27.1 in /dependencies @​dependabot (#2169)
Bump cfn-lint from 0.56.0 to 0.56.2 in /dependencies @​dependabot (#2174)
Bump @​typescript-eslint/parser from 5.3.1 to 5.4.0 in /dependencies @​dependabot (#2164)
Bump markdownlint-cli from 0.29.0 to 0.30.0 in /dependencies @​dependabot (#2165)
Bump eslint-plugin-vue from 8.0.3 to 8.1.1 in /dependencies @​dependabot (#2166)
Bump typescript from 4.4.4 to 4.5.2 in /dependencies @​dependabot (#2167)
Update black binary to 21.11b1 @​pdonorio (#2162)
doc: fix sort oder of options @​rasa (#2161)

🚀 Features

Lint the whole code base with JSCPD @​ferrarimarco (#2180)
Uninstall Dockerfilelint @​ferrarimarco (#2195)

🐛 Bug Fixes

Add RUST_2021 test and fix RUST_2021 file list @​ferrarimarco (#2215)



... (truncated)


Commits

b864136 Bump for release
bcf0247 Bump npm-groovy-lint from 9.0.0 to 9.1.0 in /dependencies (#2249)
4880399 Bump stylelint-scss from 4.0.0 to 4.0.1 in /dependencies (#2228)
518943e Bump terraform-linters/tflint-bundle from v0.33.2.0 to v0.34.0.0 (#2225)
8ef7861 Bump @​coffeelint/cli from 5.2.1 to 5.2.2 in /dependencies (#2248)
2043b95 Bump docker/login-action from 1.10.0 to 1.12.0 (#2250)
5186a02 Bump zricethezav/gitleaks from v8.0.4 to v8.2.3 (#2241)
c872333 Bump cljkondo/clj-kondo from 2021.12.01-alpine to 2021.12.19-alpine (#2242)
17f7cfe Bump alpine/terragrunt from 1.0.11 to 1.1.2 (#2243)
c261756 Bump typescript from 4.5.2 to 4.5.4 in /dependencies (#2246)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5612,2021-12-25T12:24:07Z,2021-12-25T23:13:23Z,2022-01-04T06:47:32Z,MERGED,True,1,1,1,https://github.com/dearblue,Fix summary typo for `mrbgems/mruby-compar-ext`,1,[],https://github.com/mruby/mruby/pull/5612,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5612,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5614,2021-12-28T00:23:09Z,2021-12-28T07:19:52Z,2021-12-28T08:08:12Z,MERGED,True,1,1,1,https://github.com/jbampton,Fix word casing in the README,1,[],https://github.com/mruby/mruby/pull/5614,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5614,Changed Actual to actual mid sentence,Changed Actual to actual mid sentence,True,{}
mruby/mruby,https://github.com/mruby/mruby,5615,2021-12-28T00:31:02Z,2021-12-28T07:19:15Z,2021-12-28T08:08:31Z,MERGED,True,2,2,1,https://github.com/jbampton,pre-commit autoupdate,1,[],https://github.com/mruby/mruby/pull/5615,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5615,https://pre-commit.com/#pre-commit-autoupdate,https://pre-commit.com/#pre-commit-autoupdate,True,{}
mruby/mruby,https://github.com/mruby/mruby,5616,2021-12-28T08:33:25Z,2021-12-29T03:58:43Z,2021-12-29T03:58:43Z,MERGED,True,5,9,3,https://github.com/mimaki,Fix build error and refine definition of `ssize_t` on MSVC.,1,[],https://github.com/mruby/mruby/pull/5616,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/5616,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5619,2021-12-30T13:56:35Z,2021-12-31T06:28:11Z,2022-01-04T06:47:33Z,MERGED,True,15,7,2,https://github.com/dearblue,Get object properties after `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5619,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5619,"ref. #5613
I checked with Valgrind, and the methods that can cause use-after-free are Array#rotate, Array#rotate!, and String#byteslice.
Since String#rindex uses RSTRING_LEN() indirectly inside the function, no reference to the out-of-bounds range is generated.

memo: git grep -EnC16 'mrb_get_args.*"".*[fi].*""'","ref. #5613
I checked with Valgrind, and the methods that can cause use-after-free are Array#rotate, Array#rotate!, and String#byteslice.
Since String#rindex uses RSTRING_LEN() indirectly inside the function, no reference to the out-of-bounds range is generated.

memo: git grep -EnC16 'mrb_get_args.*"".*[fi].*""'",True,{}
mruby/mruby,https://github.com/mruby/mruby,5620,2021-12-30T13:57:25Z,2022-01-02T09:01:53Z,2022-01-04T09:36:07Z,MERGED,True,11,0,1,https://github.com/dearblue,Adjusting the stack for after it enters the virtual machine,1,[],https://github.com/mruby/mruby/pull/5620,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5620,"ref. #5613.
I mentioned in #5540 that there was no reentrant to the virtual machine, but in fact it was still a possibility at that point.
Also, the variable ci needs to be recalculated at the same time.","ref. #5613.
I mentioned in #5540 that there was no reentrant to the virtual machine, but in fact it was still a possibility at that point.
Also, the variable ci needs to be recalculated at the same time.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5620,2021-12-30T13:57:25Z,2022-01-02T09:01:53Z,2022-01-04T09:36:07Z,MERGED,True,11,0,1,https://github.com/dearblue,Adjusting the stack for after it enters the virtual machine,1,[],https://github.com/mruby/mruby/pull/5620,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5620#issuecomment-1003282849,"ref. #5613.
I mentioned in #5540 that there was no reentrant to the virtual machine, but in fact it was still a possibility at that point.
Also, the variable ci needs to be recalculated at the same time.","Since b628397, mrb_as_int no longer call mrb_vm_exec recursively. But mrb_as_float still does (due to float conversion from Rational and Complex numbers).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5620,2021-12-30T13:57:25Z,2022-01-02T09:01:53Z,2022-01-04T09:36:07Z,MERGED,True,11,0,1,https://github.com/dearblue,Adjusting the stack for after it enters the virtual machine,1,[],https://github.com/mruby/mruby/pull/5620,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5620#issuecomment-1004559838,"ref. #5613.
I mentioned in #5540 that there was no reentrant to the virtual machine, but in fact it was still a possibility at that point.
Also, the variable ci needs to be recalculated at the same time.","#5622 has been merged, so I think the changes contained in this PR are unnecessary.
Or am I missing something?
Just in case?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5620,2021-12-30T13:57:25Z,2022-01-02T09:01:53Z,2022-01-04T09:36:07Z,MERGED,True,11,0,1,https://github.com/dearblue,Adjusting the stack for after it enters the virtual machine,1,[],https://github.com/mruby/mruby/pull/5620,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5620#issuecomment-1004654747,"ref. #5613.
I mentioned in #5540 that there was no reentrant to the virtual machine, but in fact it was still a possibility at that point.
Also, the variable ci needs to be recalculated at the same time.",Correct. I am going to cancel this change.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5621,2021-12-30T14:11:51Z,2021-12-31T07:32:33Z,2022-01-04T06:47:31Z,MERGED,True,1,1,1,https://github.com/dearblue,Extend the Cygwin CI time limit to 15 minutes.,1,[],https://github.com/mruby/mruby/pull/5621,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5621,"The main reason for failure is to exceed the time limit, and even when it succeeds, there is less than a minute left.
The 10-minute time limit seems to be too short.","The main reason for failure is to exceed the time limit, and even when it succeeds, there is less than a minute left.
The 10-minute time limit seems to be too short.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5622,2021-12-31T10:30:23Z,2022-01-02T09:04:19Z,2022-01-04T06:47:34Z,MERGED,True,32,8,4,https://github.com/dearblue,Call functions directly from `mrb_ensure_float_type()`,1,[],https://github.com/mruby/mruby/pull/5622,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5622,"ref. commit 7f40b64
Currently, the build configurations MRB_USE_COMPLEX and MRB_USE_RATIONAL are not listed in the documentation.
In other words, they are hidden settings.
They are defined in mrbgems/mruby-{complex,rational}/mrbgem.rake.
So this patch assumes that it is safe to refer to these functions in core-gems directly from core functions.
However, applications that link with libmruby_core.a will have compatibility issues.
In fact, mrbgems/mruby-bin-mrbc links with libmruby_core.a, so I had to prepare a dummy function.

If this patch is merged, we can close #5620, which is no longer needed.","ref. commit 7f40b64
Currently, the build configurations MRB_USE_COMPLEX and MRB_USE_RATIONAL are not listed in the documentation.
In other words, they are hidden settings.
They are defined in mrbgems/mruby-{complex,rational}/mrbgem.rake.
So this patch assumes that it is safe to refer to these functions in core-gems directly from core functions.
However, applications that link with libmruby_core.a will have compatibility issues.
In fact, mrbgems/mruby-bin-mrbc links with libmruby_core.a, so I had to prepare a dummy function.

If this patch is merged, we can close #5620, which is no longer needed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5623,2022-01-02T05:57:14Z,2022-01-04T02:54:09Z,2022-01-04T06:47:32Z,MERGED,True,15,9,1,https://github.com/dearblue,Improves presym scanning,1,[],https://github.com/mruby/mruby/pull/5623,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5623,"The main purpose is to increase the chances of finding presym and to prevent errors due to C++11 lambda expressions.


The argument to receive the class may be written, for example, mrb_class_get().


The argument that receives the implementation function of the method may be a C++ lambda expression.
In this case, if multiple variable declarations are separated by colons, the preprocessor will recognize them as argument delimiters and report an error.
This patch prevents it from happening.
// When preprocessing...
func([] { int x, y, z; })
  // ^^^^^^^^^^          1st argument?
  //             ^       2nd argument?
  //                ^^^^ 3rd argument?","The main purpose is to increase the chances of finding presym and to prevent errors due to C++11 lambda expressions.


The argument to receive the class may be written, for example, mrb_class_get().


The argument that receives the implementation function of the method may be a C++ lambda expression.
In this case, if multiple variable declarations are separated by colons, the preprocessor will recognize them as argument delimiters and report an error.
This patch prevents it from happening.
// When preprocessing...
func([] { int x, y, z; })
  // ^^^^^^^^^^          1st argument?
  //             ^       2nd argument?
  //                ^^^^ 3rd argument?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5624,2022-01-02T06:10:41Z,2022-01-04T02:51:01Z,2022-01-04T06:47:33Z,MERGED,True,3,0,1,https://github.com/dearblue,Assert that `MRB_METHOD_CACHE_SIZE` is a power of 2,1,[],https://github.com/mruby/mruby/pull/5624,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5624,The mrb_static_assert_powerof2() macro has been introduced for this purpose.,The mrb_static_assert_powerof2() macro has been introduced for this purpose.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5625,2022-01-02T07:52:16Z,2022-01-02T23:54:01Z,2022-01-04T06:47:33Z,MERGED,True,1,1,1,https://github.com/dearblue,Assign after `mrb_irep_incref()` in `mrb_proc_new()`,1,[],https://github.com/mruby/mruby/pull/5625,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5625,ref. 28ccc66,ref. 28ccc66,True,{}
mruby/mruby,https://github.com/mruby/mruby,5626,2022-01-04T07:30:47Z,2022-01-06T11:55:31Z,2022-01-09T07:32:22Z,CLOSED,False,11,12,1,https://github.com/dearblue,Revert the order of error backtrace display,1,[],https://github.com/mruby/mruby/pull/5626,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5626,This follows the change in CRuby-3.0.,This follows the change in CRuby-3.0.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5626,2022-01-04T07:30:47Z,2022-01-06T11:55:31Z,2022-01-09T07:32:22Z,CLOSED,False,11,12,1,https://github.com/dearblue,Revert the order of error backtrace display,1,[],https://github.com/mruby/mruby/pull/5626,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5626#issuecomment-1006226599,This follows the change in CRuby-3.0.,"Could you tell me the reason behind this change? I did the current way to print the error messages last (Python way).
I believe this is better. And I once tried to change the CRuby behavior but we had a compatibility issue.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5626,2022-01-04T07:30:47Z,2022-01-06T11:55:31Z,2022-01-09T07:32:22Z,CLOSED,False,11,12,1,https://github.com/dearblue,Revert the order of error backtrace display,1,[],https://github.com/mruby/mruby/pull/5626,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5626#issuecomment-1006520747,This follows the change in CRuby-3.0.,"There is no reason other than that it is the way it is in CRuby.
I think it's more likely to be compared to CRuby than Python.
Personally, I prefer the current behavior of CRuby.
However, I don't have a strong reason, so I'm withdrawing the proposal.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5626,2022-01-04T07:30:47Z,2022-01-06T11:55:31Z,2022-01-09T07:32:22Z,CLOSED,False,11,12,1,https://github.com/dearblue,Revert the order of error backtrace display,1,[],https://github.com/mruby/mruby/pull/5626,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5626#issuecomment-1007079162,This follows the change in CRuby-3.0.,Thank you,True,{}
mruby/mruby,https://github.com/mruby/mruby,5628,2022-01-05T07:46:42Z,2022-01-06T01:05:05Z,2022-01-09T07:32:22Z,MERGED,True,12,2,2,https://github.com/dearblue,Fixing keyword arguments with `super`,1,[],https://github.com/mruby/mruby/pull/5628,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5628,fix #5627,fix #5627,True,{}
mruby/mruby,https://github.com/mruby/mruby,5629,2022-01-05T08:28:09Z,2022-01-06T01:02:49Z,2022-01-09T07:32:22Z,MERGED,True,20,21,1,https://github.com/dearblue,Allows handling of unaligned cptrs for `MRB_NAN_BOXING`,1,[],https://github.com/mruby/mruby/pull/5629,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5629,"It seems to be preferable to be able to handle pointers of type char as well.
For this purpose, mrb_nanbox_tt_inline has been reorganized.

MRB_NANBOX_TT_POINTER has been split into MRB_NANBOX_TT_OBJECT and MRB_NANBOX_TT_CPTR
MRB_NANBOX_TT_SYMBOL has been merged into MRB_NANBOX_TT_MISC","It seems to be preferable to be able to handle pointers of type char as well.
For this purpose, mrb_nanbox_tt_inline has been reorganized.

MRB_NANBOX_TT_POINTER has been split into MRB_NANBOX_TT_OBJECT and MRB_NANBOX_TT_CPTR
MRB_NANBOX_TT_SYMBOL has been merged into MRB_NANBOX_TT_MISC",True,{}
mruby/mruby,https://github.com/mruby/mruby,5630,2022-01-09T07:33:19Z,2022-01-09T12:46:40Z,2022-02-08T13:42:04Z,MERGED,True,2,2,2,https://github.com/dearblue,"Fixes file header in src/{cdump,dump}.c [ci skip]",1,[],https://github.com/mruby/mruby/pull/5630,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5630,The file headers were pointing to each other's files.,The file headers were pointing to each other's files.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5634,2022-01-17T13:41:45Z,2022-01-17T14:27:30Z,2022-01-18T00:59:03Z,MERGED,True,8,8,1,https://github.com/hasumikin,Fix tree of mruby-bin-example,1,[],https://github.com/mruby/mruby/pull/5634,https://github.com/hasumikin,1,https://github.com/mruby/mruby/pull/5634,"Actual
    +- tools/
        |
        +- example/
        |
        +- example.c

Supposed to be
    +- tools/
        |
        +- example/
            |
            +- example.c","Actual
    +- tools/
        |
        +- example/
        |
        +- example.c

Supposed to be
    +- tools/
        |
        +- example/
            |
            +- example.c",True,{}
mruby/mruby,https://github.com/mruby/mruby,5636,2022-01-27T14:09:19Z,2022-01-28T02:24:47Z,2022-01-28T02:25:01Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.8.5 to 4.8.6,1,['dependencies'],https://github.com/mruby/mruby/pull/5636,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5636,"Bumps github/super-linter from 4.8.5 to 4.8.6.

Release notes
Sourced from github/super-linter's releases.

v4.8.6
Changelog

cant do load and push, skipping for prod @​admiralAwkbar (#2394)
Bump scalameta/scalafmt from v3.3.1 to v3.3.3 @​dependabot (#2369)
Bump yoheimuta/protolint from v0.35.2 to v0.36.0 @​dependabot (#2371)
updated @​admiralAwkbar (#2389)
Bump boto3 from 1.20.29 to 1.20.41 in /dependencies/python @​dependabot (#2385)
Bump docker/build-push-action from 2.7.0 to 2.8.0 @​dependabot (#2368)
Bump codacy/codacy-coverage-reporter-action from 1.2 to 1.3 @​dependabot (#2367)
Bump hashicorp/terraform from 1.1.3 to 1.1.4 @​dependabot (#2370)
Bump alpine/terragrunt from 1.1.3 to 1.1.4 @​dependabot (#2372)
Bump python from 3.10.1-alpine to 3.10.2-alpine @​dependabot (#2373)
Bump htmlhint from 1.1.0 to 1.1.1 in /dependencies @​dependabot (#2374)
Bump rubocop-github from 0.16.2 to 0.17.0 in /dependencies @​dependabot (#2375)
Bump botocore from 1.23.29 to 1.23.41 in /dependencies/python @​dependabot (#2381)
Bump eslint-plugin-jest from 25.7.0 to 26.0.0 in /dependencies @​dependabot (#2376)
Bump typescript from 4.5.4 to 4.5.5 in /dependencies @​dependabot (#2377)
Bump stylelint from 14.2.0 to 14.3.0 in /dependencies @​dependabot (#2378)
Bump node-fetch from 3.1.1 to 3.2.0 in /dependencies @​dependabot (#2379)
Bump snakemake from 6.12.3 to 6.13.1 in /dependencies/python @​dependabot (#2380)
Bump pyparsing from 3.0.6 to 3.0.7 in /dependencies/python @​dependabot (#2383)
Bump regex from 2021.11.10 to 2022.1.18 in /dependencies/python @​dependabot (#2384)
Bump cfn-lint from 0.56.4 to 0.57.0 in /dependencies/python @​dependabot (#2387)
Correct SQLFluff config filename @​tunetheweb (#2366)
docs: Alphabetize lists @​rasa (#2362)
fix: Output gitleaks version @​rasa (#2363)
adding libs @​admiralAwkbar (#2364)
Allow SQLFluff configuration file to be used from standard location @​tunetheweb (#2361)
Bump cljkondo/clj-kondo from 2021.12.19-alpine to 2022.01.15-alpine @​dependabot (#2340)
Bump pygments from 2.11.1 to 2.11.2 in /dependencies/python @​dependabot (#2346)
Bump mypy from 0.930 to 0.931 in /dependencies/python @​dependabot (#2349)
Bump jsonpickle from 2.0.0 to 2.1.0 in /dependencies/python @​dependabot (#2350)
Bump gitpython from 3.1.24 to 3.1.26 in /dependencies/python @​dependabot (#2351)
Bump rich from 10.16.2 to 11.0.0 in /dependencies/python @​dependabot (#2356)
Bump pyrsistent from 0.18.0 to 0.18.1 in /dependencies/python @​dependabot (#2353)
Update dependencies to resolve follow-redirects @​lindluni (#2355)
Bump ansible-lint from 5.3.1 to 5.3.2 in /dependencies/python @​dependabot (#2324)
Bump enrich from 1.2.6 to 1.2.7 in /dependencies/python @​dependabot (#2325)
Bump @​typescript-eslint/eslint-plugin from 5.9.0 to 5.9.1 in /dependencies @​dependabot (#2329)
Bump sqlfluff from 0.9.0 to 0.9.1 in /dependencies/python @​dependabot (#2328)
Bump astroid from 2.9.2 to 2.9.3 in /dependencies/python @​dependabot (#2331)
Bump cfn-lint from 0.56.3 to 0.56.4 in /dependencies/python @​dependabot (#2332)
Bump @​typescript-eslint/parser from 5.9.0 to 5.9.1 in /dependencies @​dependabot (#2333)
Bump urllib3 from 1.26.7 to 1.26.8 in /dependencies/python @​dependabot (#2334)
Bump immer from 9.0.7 to 9.0.12 in /dependencies @​dependabot (#2335)
Bump npm-groovy-lint from 9.3.2 to 9.4.0 in /dependencies @​dependabot (#2336)
Bump jscpd from 3.4.2 to 3.4.5 in /dependencies @​dependabot (#2337)
Bump prettyjson from 1.2.1 to 1.2.5 in /dependencies @​dependabot (#2338)
Update Dependabot for python virtual envs @​jalaziz (#2322)
Bump alpine/terragrunt from 1.1.2 to 1.1.3 @​dependabot (#2313)



... (truncated)


Commits

d09b2a3 bump release
d1fceae cant do load and push, skipping for prod (#2394)
c0f47d0 De-duplicate workflows (#2220)
feb45bb Bump scalameta/scalafmt from v3.3.1 to v3.3.3 (#2369)
5cae663 Bump yoheimuta/protolint from v0.35.2 to v0.36.0 (#2371)
06d4ef1 updated (#2389)
f4f0b28 Bump boto3 from 1.20.29 to 1.20.41 in /dependencies/python (#2385)
0c8db9f Bump docker/build-push-action from 2.7.0 to 2.8.0 (#2368)
481637c Bump codacy/codacy-coverage-reporter-action from 1.2 to 1.3 (#2367)
7a4562e Bump hashicorp/terraform from 1.1.3 to 1.1.4 (#2370)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.8.5 to 4.8.6.

Release notes
Sourced from github/super-linter's releases.

v4.8.6
Changelog

cant do load and push, skipping for prod @​admiralAwkbar (#2394)
Bump scalameta/scalafmt from v3.3.1 to v3.3.3 @​dependabot (#2369)
Bump yoheimuta/protolint from v0.35.2 to v0.36.0 @​dependabot (#2371)
updated @​admiralAwkbar (#2389)
Bump boto3 from 1.20.29 to 1.20.41 in /dependencies/python @​dependabot (#2385)
Bump docker/build-push-action from 2.7.0 to 2.8.0 @​dependabot (#2368)
Bump codacy/codacy-coverage-reporter-action from 1.2 to 1.3 @​dependabot (#2367)
Bump hashicorp/terraform from 1.1.3 to 1.1.4 @​dependabot (#2370)
Bump alpine/terragrunt from 1.1.3 to 1.1.4 @​dependabot (#2372)
Bump python from 3.10.1-alpine to 3.10.2-alpine @​dependabot (#2373)
Bump htmlhint from 1.1.0 to 1.1.1 in /dependencies @​dependabot (#2374)
Bump rubocop-github from 0.16.2 to 0.17.0 in /dependencies @​dependabot (#2375)
Bump botocore from 1.23.29 to 1.23.41 in /dependencies/python @​dependabot (#2381)
Bump eslint-plugin-jest from 25.7.0 to 26.0.0 in /dependencies @​dependabot (#2376)
Bump typescript from 4.5.4 to 4.5.5 in /dependencies @​dependabot (#2377)
Bump stylelint from 14.2.0 to 14.3.0 in /dependencies @​dependabot (#2378)
Bump node-fetch from 3.1.1 to 3.2.0 in /dependencies @​dependabot (#2379)
Bump snakemake from 6.12.3 to 6.13.1 in /dependencies/python @​dependabot (#2380)
Bump pyparsing from 3.0.6 to 3.0.7 in /dependencies/python @​dependabot (#2383)
Bump regex from 2021.11.10 to 2022.1.18 in /dependencies/python @​dependabot (#2384)
Bump cfn-lint from 0.56.4 to 0.57.0 in /dependencies/python @​dependabot (#2387)
Correct SQLFluff config filename @​tunetheweb (#2366)
docs: Alphabetize lists @​rasa (#2362)
fix: Output gitleaks version @​rasa (#2363)
adding libs @​admiralAwkbar (#2364)
Allow SQLFluff configuration file to be used from standard location @​tunetheweb (#2361)
Bump cljkondo/clj-kondo from 2021.12.19-alpine to 2022.01.15-alpine @​dependabot (#2340)
Bump pygments from 2.11.1 to 2.11.2 in /dependencies/python @​dependabot (#2346)
Bump mypy from 0.930 to 0.931 in /dependencies/python @​dependabot (#2349)
Bump jsonpickle from 2.0.0 to 2.1.0 in /dependencies/python @​dependabot (#2350)
Bump gitpython from 3.1.24 to 3.1.26 in /dependencies/python @​dependabot (#2351)
Bump rich from 10.16.2 to 11.0.0 in /dependencies/python @​dependabot (#2356)
Bump pyrsistent from 0.18.0 to 0.18.1 in /dependencies/python @​dependabot (#2353)
Update dependencies to resolve follow-redirects @​lindluni (#2355)
Bump ansible-lint from 5.3.1 to 5.3.2 in /dependencies/python @​dependabot (#2324)
Bump enrich from 1.2.6 to 1.2.7 in /dependencies/python @​dependabot (#2325)
Bump @​typescript-eslint/eslint-plugin from 5.9.0 to 5.9.1 in /dependencies @​dependabot (#2329)
Bump sqlfluff from 0.9.0 to 0.9.1 in /dependencies/python @​dependabot (#2328)
Bump astroid from 2.9.2 to 2.9.3 in /dependencies/python @​dependabot (#2331)
Bump cfn-lint from 0.56.3 to 0.56.4 in /dependencies/python @​dependabot (#2332)
Bump @​typescript-eslint/parser from 5.9.0 to 5.9.1 in /dependencies @​dependabot (#2333)
Bump urllib3 from 1.26.7 to 1.26.8 in /dependencies/python @​dependabot (#2334)
Bump immer from 9.0.7 to 9.0.12 in /dependencies @​dependabot (#2335)
Bump npm-groovy-lint from 9.3.2 to 9.4.0 in /dependencies @​dependabot (#2336)
Bump jscpd from 3.4.2 to 3.4.5 in /dependencies @​dependabot (#2337)
Bump prettyjson from 1.2.1 to 1.2.5 in /dependencies @​dependabot (#2338)
Update Dependabot for python virtual envs @​jalaziz (#2322)
Bump alpine/terragrunt from 1.1.2 to 1.1.3 @​dependabot (#2313)



... (truncated)


Commits

d09b2a3 bump release
d1fceae cant do load and push, skipping for prod (#2394)
c0f47d0 De-duplicate workflows (#2220)
feb45bb Bump scalameta/scalafmt from v3.3.1 to v3.3.3 (#2369)
5cae663 Bump yoheimuta/protolint from v0.35.2 to v0.36.0 (#2371)
06d4ef1 updated (#2389)
f4f0b28 Bump boto3 from 1.20.29 to 1.20.41 in /dependencies/python (#2385)
0c8db9f Bump docker/build-push-action from 2.7.0 to 2.8.0 (#2368)
481637c Bump codacy/codacy-coverage-reporter-action from 1.2 to 1.3 (#2367)
7a4562e Bump hashicorp/terraform from 1.1.3 to 1.1.4 (#2370)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5637,2022-01-28T14:06:28Z,2022-01-29T00:09:36Z,2022-01-29T00:09:44Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.8.6 to 4.8.7,1,['dependencies'],https://github.com/mruby/mruby/pull/5637,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5637,"Bumps github/super-linter from 4.8.6 to 4.8.7.

Release notes
Sourced from github/super-linter's releases.

v4.8.7
Changelog
🐛 Bug Fixes

adding flag for error on warning @​admiralAwkbar (#2397)

See details of all code changes since previous release



Commits

d92f336 adding flag for error on warning (#2397)
d36ab65 Fix tag
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.8.6 to 4.8.7.

Release notes
Sourced from github/super-linter's releases.

v4.8.7
Changelog
🐛 Bug Fixes

adding flag for error on warning @​admiralAwkbar (#2397)

See details of all code changes since previous release



Commits

d92f336 adding flag for error on warning (#2397)
d36ab65 Fix tag
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5638,2022-01-28T18:56:39Z,2022-02-23T07:16:45Z,2022-02-23T07:16:45Z,CLOSED,False,339,82,2,https://github.com/suetanvil,Gracefully handle clashing git checkout names (plus load_gems.rb refactor),3,[],https://github.com/mruby/mruby/pull/5638,https://github.com/suetanvil,1,https://github.com/mruby/mruby/pull/5638,"This is a fix for #5574 .
The problem is that when retrieving gem dependencies from git repositories, if two or more repositories have the same basename, the retrieval system will get confused and treat it as one or another, depending on declaration order.  This is also the case when using different branches or commits from the same repository.
This change fixes this as follows:

It is now an error to attempt to clone more than one gem to the same directory unless they are identical (same url, branch, and commit ID).
It is possible to declare the first import of a gem as being ""canonical"". This will cause the system to ignore duplicate imports with a message.

In addition, I have refactored load_gems.rb to improve maintainability.  Specifically, the function load_special_path_gem has been turned into a class with the functionality spread across multiple descriptively-named private methods.","This is a fix for #5574 .
The problem is that when retrieving gem dependencies from git repositories, if two or more repositories have the same basename, the retrieval system will get confused and treat it as one or another, depending on declaration order.  This is also the case when using different branches or commits from the same repository.
This change fixes this as follows:

It is now an error to attempt to clone more than one gem to the same directory unless they are identical (same url, branch, and commit ID).
It is possible to declare the first import of a gem as being ""canonical"". This will cause the system to ignore duplicate imports with a message.

In addition, I have refactored load_gems.rb to improve maintainability.  Specifically, the function load_special_path_gem has been turned into a class with the functionality spread across multiple descriptively-named private methods.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5638,2022-01-28T18:56:39Z,2022-02-23T07:16:45Z,2022-02-23T07:16:45Z,CLOSED,False,339,82,2,https://github.com/suetanvil,Gracefully handle clashing git checkout names (plus load_gems.rb refactor),3,[],https://github.com/mruby/mruby/pull/5638,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5638#issuecomment-1024819916,"This is a fix for #5574 .
The problem is that when retrieving gem dependencies from git repositories, if two or more repositories have the same basename, the retrieval system will get confused and treat it as one or another, depending on declaration order.  This is also the case when using different branches or commits from the same repository.
This change fixes this as follows:

It is now an error to attempt to clone more than one gem to the same directory unless they are identical (same url, branch, and commit ID).
It is possible to declare the first import of a gem as being ""canonical"". This will cause the system to ignore duplicate imports with a message.

In addition, I have refactored load_gems.rb to improve maintainability.  Specifically, the function load_special_path_gem has been turned into a class with the functionality spread across multiple descriptively-named private methods.","Could you clean up the pull-request?

cancelling rebuild.sh
separate unrelated trailing space removal of README.md in mruby-errno",True,{}
mruby/mruby,https://github.com/mruby/mruby,5638,2022-01-28T18:56:39Z,2022-02-23T07:16:45Z,2022-02-23T07:16:45Z,CLOSED,False,339,82,2,https://github.com/suetanvil,Gracefully handle clashing git checkout names (plus load_gems.rb refactor),3,[],https://github.com/mruby/mruby/pull/5638,https://github.com/suetanvil,3,https://github.com/mruby/mruby/pull/5638#issuecomment-1024982544,"This is a fix for #5574 .
The problem is that when retrieving gem dependencies from git repositories, if two or more repositories have the same basename, the retrieval system will get confused and treat it as one or another, depending on declaration order.  This is also the case when using different branches or commits from the same repository.
This change fixes this as follows:

It is now an error to attempt to clone more than one gem to the same directory unless they are identical (same url, branch, and commit ID).
It is possible to declare the first import of a gem as being ""canonical"". This will cause the system to ignore duplicate imports with a message.

In addition, I have refactored load_gems.rb to improve maintainability.  Specifically, the function load_special_path_gem has been turned into a class with the functionality spread across multiple descriptively-named private methods.",I'll try to do that within the next to or 3 days.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5638,2022-01-28T18:56:39Z,2022-02-23T07:16:45Z,2022-02-23T07:16:45Z,CLOSED,False,339,82,2,https://github.com/suetanvil,Gracefully handle clashing git checkout names (plus load_gems.rb refactor),3,[],https://github.com/mruby/mruby/pull/5638,https://github.com/suetanvil,4,https://github.com/mruby/mruby/pull/5638#issuecomment-1025151438,"This is a fix for #5574 .
The problem is that when retrieving gem dependencies from git repositories, if two or more repositories have the same basename, the retrieval system will get confused and treat it as one or another, depending on declaration order.  This is also the case when using different branches or commits from the same repository.
This change fixes this as follows:

It is now an error to attempt to clone more than one gem to the same directory unless they are identical (same url, branch, and commit ID).
It is possible to declare the first import of a gem as being ""canonical"". This will cause the system to ignore duplicate imports with a message.

In addition, I have refactored load_gems.rb to improve maintainability.  Specifically, the function load_special_path_gem has been turned into a class with the functionality spread across multiple descriptively-named private methods.",The requested changes have been made. Please let me know if you need anything else.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5638,2022-01-28T18:56:39Z,2022-02-23T07:16:45Z,2022-02-23T07:16:45Z,CLOSED,False,339,82,2,https://github.com/suetanvil,Gracefully handle clashing git checkout names (plus load_gems.rb refactor),3,[],https://github.com/mruby/mruby/pull/5638,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5638#issuecomment-1048503421,"This is a fix for #5574 .
The problem is that when retrieving gem dependencies from git repositories, if two or more repositories have the same basename, the retrieval system will get confused and treat it as one or another, depending on declaration order.  This is also the case when using different branches or commits from the same repository.
This change fixes this as follows:

It is now an error to attempt to clone more than one gem to the same directory unless they are identical (same url, branch, and commit ID).
It is possible to declare the first import of a gem as being ""canonical"". This will cause the system to ignore duplicate imports with a message.

In addition, I have refactored load_gems.rb to improve maintainability.  Specifically, the function load_special_path_gem has been turned into a class with the functionality spread across multiple descriptively-named private methods.",Merged.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5639,2022-01-30T00:12:45Z,2022-01-31T06:45:18Z,2022-01-31T06:45:41Z,MERGED,True,13,15,1,https://github.com/suetanvil,Updated mruby-errno/README.md to pass the lint checks.,1,[],https://github.com/mruby/mruby/pull/5639,https://github.com/suetanvil,1,https://github.com/mruby/mruby/pull/5639,"As requested in the comments for #5638 , here are the changes to the README as a separate PR.","As requested in the comments for #5638 , here are the changes to the README as a separate PR.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5639,2022-01-30T00:12:45Z,2022-01-31T06:45:18Z,2022-01-31T06:45:41Z,MERGED,True,13,15,1,https://github.com/suetanvil,Updated mruby-errno/README.md to pass the lint checks.,1,[],https://github.com/mruby/mruby/pull/5639,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5639#issuecomment-1025428827,"As requested in the comments for #5638 , here are the changes to the README as a separate PR.","Sorry, I mistakingly closed this issue.",True,{'THUMBS_UP': ['https://github.com/suetanvil']}
mruby/mruby,https://github.com/mruby/mruby,5640,2022-02-05T09:19:14Z,2022-02-05T09:30:58Z,2022-02-18T13:48:53Z,MERGED,True,37,51,1,https://github.com/dearblue,Check the type of the keyword rest argument,2,[],https://github.com/mruby/mruby/pull/5640,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5640,"If a non-hash object is passed in OP_SEND and OP_SUPER, an error should occur.
kwd = ""string""
p(**kwd)  #  => expect raised TypeError
This PR also integrates the code that was copied and pasted in #5628.","If a non-hash object is passed in OP_SEND and OP_SUPER, an error should occur.
kwd = ""string""
p(**kwd)  #  => expect raised TypeError
This PR also integrates the code that was copied and pasted in #5628.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5640,2022-02-05T09:19:14Z,2022-02-05T09:30:58Z,2022-02-18T13:48:53Z,MERGED,True,37,51,1,https://github.com/dearblue,Check the type of the keyword rest argument,2,[],https://github.com/mruby/mruby/pull/5640,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5640#issuecomment-1032674395,"If a non-hash object is passed in OP_SEND and OP_SUPER, an error should occur.
kwd = ""string""
p(**kwd)  #  => expect raised TypeError
This PR also integrates the code that was copied and pasted in #5628.","It turns out that there is a problem that this patch does not fix.
% bin/mruby -e 'p [**1]'
[1]

% ruby31 -e 'p [**1]'
-e:1:in `<main>': no implicit conversion of Integer into Hash (TypeError)
I also found a problem where the hash object is destroyed when it is expanded as a keyword argument at the beginning of the argument.
% bin/mruby -e 'h = {}; p(**h, a: 1, b: 2); p h'
{:a=>1, :b=>2}
{:a=>1, :b=>2}

% ruby31 -e 'h = {}; p(**h, a: 1, b: 2); p h'
{:a=>1, :b=>2}
{}
The solution I came up with after viewing the irep for the above two problems is to add an implicit empty hash by codegen.c if the first element of NODE_KW_HASH is NODE_KW_REST_ARGS.
I've mimicked the behavior by hand, and it seems to be the result I'm expecting.
% bin/mruby -e 'p [**{}, **1]'
-e:1: Integer cannot be converted to Hash (TypeError)

% bin/mruby -e 'h = {}; p(**{}, **h, a: 1, b: 2); p h'
{:a=>1, :b=>2}
{}
So far, I have not been able to write a patch to fix it (If it is a patch that crashes, I can prepare it right away).
Hmmm... I would like to leave it to @matz...",True,{}
mruby/mruby,https://github.com/mruby/mruby,5640,2022-02-05T09:19:14Z,2022-02-05T09:30:58Z,2022-02-18T13:48:53Z,MERGED,True,37,51,1,https://github.com/dearblue,Check the type of the keyword rest argument,2,[],https://github.com/mruby/mruby/pull/5640,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5640#issuecomment-1038104677,"If a non-hash object is passed in OP_SEND and OP_SUPER, an error should occur.
kwd = ""string""
p(**kwd)  #  => expect raised TypeError
This PR also integrates the code that was copied and pasted in #5628.","Is this correct?
diff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c
index b90eae3e8..20b7d5c89 100644
--- a/mrbgems/mruby-compiler/core/codegen.c
+++ b/mrbgems/mruby-compiler/core/codegen.c
@@ -1605,10 +1605,16 @@ gen_hash(codegen_scope *s, node *tree, int val, int limit)
   if (cursp() >= GEN_LIT_ARY_MAX) slimit = INT16_MAX;
   int len = 0;
   mrb_bool update = FALSE;
+  mrb_bool first = TRUE;

   while (tree) {
     if (nint(tree->car->car->car) == NODE_KW_REST_ARGS) {
-      if (val && len > 0) {
+      if (val && first) {
+        genop_2(s, OP_HASH, cursp(), 0);
+        push();
+        update = TRUE;
+      }
+      else if (val && len > 0) {
         pop_n(len*2);
         if (!update) {
           genop_2(s, OP_HASH, cursp(), len);
@@ -1647,6 +1653,7 @@ gen_hash(codegen_scope *s, node *tree, int val, int limit)
       update = TRUE;
       len = 0;
     }
+    first = FALSE;
   }
   if (val && len > limit) {
     pop_n(len*2);",True,{}
mruby/mruby,https://github.com/mruby/mruby,5640,2022-02-05T09:19:14Z,2022-02-05T09:30:58Z,2022-02-18T13:48:53Z,MERGED,True,37,51,1,https://github.com/dearblue,Check the type of the keyword rest argument,2,[],https://github.com/mruby/mruby/pull/5640,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5640#issuecomment-1042615282,"If a non-hash object is passed in OP_SEND and OP_SUPER, an error should occur.
kwd = ""string""
p(**kwd)  #  => expect raised TypeError
This PR also integrates the code that was copied and pasted in #5628.","I think the patch in the above comment should work.
Could you make a pull request?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5640,2022-02-05T09:19:14Z,2022-02-05T09:30:58Z,2022-02-18T13:48:53Z,MERGED,True,37,51,1,https://github.com/dearblue,Check the type of the keyword rest argument,2,[],https://github.com/mruby/mruby/pull/5640,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/5640#issuecomment-1044553690,"If a non-hash object is passed in OP_SEND and OP_SUPER, an error should occur.
kwd = ""string""
p(**kwd)  #  => expect raised TypeError
This PR also integrates the code that was copied and pasted in #5628.","Thank you for your comment.
I have created a PR as #5650.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5641,2022-02-05T12:52:33Z,2022-02-06T11:49:54Z,2022-02-08T13:42:04Z,MERGED,True,2,2,1,https://github.com/dearblue,Pinning the Visual Studio version in GitHub Actions,1,[],https://github.com/mruby/mruby/pull/5641,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5641,"Until now, windows-latest meant windows-2019, but now it seems that it is being replaced by windows-2022 in stages.
At the same time, Visual Studio 2019 will be replaced by Visual Studio 2022.
Since mruby's CI is configured to assume Visual Studio 2019, we'll update this and explicitly specify windows-2022.
ref. actions/virtual-environments#4856","Until now, windows-latest meant windows-2019, but now it seems that it is being replaced by windows-2022 in stages.
At the same time, Visual Studio 2019 will be replaced by Visual Studio 2022.
Since mruby's CI is configured to assume Visual Studio 2019, we'll update this and explicitly specify windows-2022.
ref. actions/virtual-environments#4856",True,{}
mruby/mruby,https://github.com/mruby/mruby,5642,2022-02-06T07:11:43Z,2022-02-13T11:59:47Z,2022-03-06T04:53:59Z,MERGED,True,15,19,3,https://github.com/dearblue,Avoid direct access to error messages as instance variables,1,[],https://github.com/mruby/mruby/pull/5642,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5642,"ref. #2485
The SystemCallError#to_s method also needed to be modified, but since it has no functional difference from the Exception#to_s method, it will be removed.","ref. #2485
The SystemCallError#to_s method also needed to be modified, but since it has no functional difference from the Exception#to_s method, it will be removed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5643,2022-02-06T07:27:38Z,2022-02-07T06:43:51Z,2022-02-08T13:42:06Z,MERGED,True,2,3,1,https://github.com/dearblue,Support `MRB_NO_STDIO` for `mrbgems/mruby-errno`,1,[],https://github.com/mruby/mruby/pull/5643,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5643,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5644,2022-02-06T09:47:37Z,2022-02-07T07:05:22Z,2022-02-08T13:42:05Z,MERGED,True,343,802,4,https://github.com/dearblue,Support `disable_presym` for `mrbgems/mruby-errno`,1,[],https://github.com/mruby/mruby/pull/5644,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5644,"The mrbgems/mruby-errno/src/known_errors_def.cstub file has been extended, so the mrbgems/mruby-errno/src/known_errors_e2c.cstub file is no longer needed.","The mrbgems/mruby-errno/src/known_errors_def.cstub file has been extended, so the mrbgems/mruby-errno/src/known_errors_e2c.cstub file is no longer needed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5644,2022-02-06T09:47:37Z,2022-02-07T07:05:22Z,2022-02-08T13:42:05Z,MERGED,True,343,802,4,https://github.com/dearblue,Support `disable_presym` for `mrbgems/mruby-errno`,1,[],https://github.com/mruby/mruby/pull/5644,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5644#issuecomment-1031138688,"The mrbgems/mruby-errno/src/known_errors_def.cstub file has been extended, so the mrbgems/mruby-errno/src/known_errors_e2c.cstub file is no longer needed.",Thank you for the patch. I am still wondering if I should remove disable_presym though.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5644,2022-02-06T09:47:37Z,2022-02-07T07:05:22Z,2022-02-08T13:42:05Z,MERGED,True,343,802,4,https://github.com/dearblue,Support `disable_presym` for `mrbgems/mruby-errno`,1,[],https://github.com/mruby/mruby/pull/5644,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5644#issuecomment-1031465968,"The mrbgems/mruby-errno/src/known_errors_def.cstub file has been extended, so the mrbgems/mruby-errno/src/known_errors_e2c.cstub file is no longer needed.","I do not object to disable_presym being removed.
I was wondering while working on this if it was really necessary to make it disable_presym compatible.
However, since disable_presym exists and is included in stdlib.gembox, I just decided that this action is necessary.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5644,2022-02-06T09:47:37Z,2022-02-07T07:05:22Z,2022-02-08T13:42:05Z,MERGED,True,343,802,4,https://github.com/dearblue,Support `disable_presym` for `mrbgems/mruby-errno`,1,[],https://github.com/mruby/mruby/pull/5644,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5644#issuecomment-1032160771,"The mrbgems/mruby-errno/src/known_errors_def.cstub file has been extended, so the mrbgems/mruby-errno/src/known_errors_e2c.cstub file is no longer needed.",Reasonable. Let me think for a while to determine if we should remove disable_presym.,True,{'THUMBS_UP': ['https://github.com/dearblue']}
mruby/mruby,https://github.com/mruby/mruby,5645,2022-02-07T09:55:37Z,2022-02-10T02:31:01Z,2022-02-11T07:27:32Z,MERGED,True,1,1,1,https://github.com/jbampton,pre-commit autoupdate,1,[],https://github.com/mruby/mruby/pull/5645,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5645,https://pre-commit.com/#pre-commit-autoupdate,https://pre-commit.com/#pre-commit-autoupdate,True,{}
mruby/mruby,https://github.com/mruby/mruby,5646,2022-02-08T02:17:00Z,2022-02-11T06:21:01Z,2022-02-11T06:30:18Z,MERGED,True,9,1,2,https://github.com/koic,Make `Array#*` the CRuby compatible behavior when giving a string argument,1,[],https://github.com/mruby/mruby/pull/5646,https://github.com/koic,1,https://github.com/mruby/mruby/pull/5646,"Summary
This following is a behavior from CRuby 1.8.7 to 3.1.0.
% ruby -ve ""p ['a', 'b', 'c']*''""
ruby 1.8.7 (2013-12-22 patchlevel 375) [i686-darwin13.0.2]
""abc""

% ruby -ve ""p ['a', 'b', 'c']*''""
ruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [x86_64-darwin19]
""abc""
Before (mruby 3.0.0)
mruby unexpectedly gives the TypeError.
['a', 'b', 'c']*'' #=> String cannot be converted to Integer (TypeError)
After
This PR makes mruby behave compatible with CRuby.
['a', 'b', 'c']*'' #=> 'abc'
As far as I checked, the behavior is unspecified when Array#*'s argument
is not an instance of Integer class in X 3017 : 2013 (ISO/IEC 30170 : 2012).
Additional Information
I noticed this difference by the following idiom when writing ASCII art code using Ruby.
%w(foo bar baz)*''
e.g. TRICK (https://github.com/tric)","Summary
This following is a behavior from CRuby 1.8.7 to 3.1.0.
% ruby -ve ""p ['a', 'b', 'c']*''""
ruby 1.8.7 (2013-12-22 patchlevel 375) [i686-darwin13.0.2]
""abc""

% ruby -ve ""p ['a', 'b', 'c']*''""
ruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [x86_64-darwin19]
""abc""
Before (mruby 3.0.0)
mruby unexpectedly gives the TypeError.
['a', 'b', 'c']*'' #=> String cannot be converted to Integer (TypeError)
After
This PR makes mruby behave compatible with CRuby.
['a', 'b', 'c']*'' #=> 'abc'
As far as I checked, the behavior is unspecified when Array#*'s argument
is not an instance of Integer class in X 3017 : 2013 (ISO/IEC 30170 : 2012).
Additional Information
I noticed this difference by the following idiom when writing ASCII art code using Ruby.
%w(foo bar baz)*''
e.g. TRICK (https://github.com/tric)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5648,2022-02-16T14:05:49Z,2022-02-17T04:07:28Z,2022-02-17T04:07:40Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.8.7 to 4.9.0,1,['dependencies'],https://github.com/mruby/mruby/pull/5648,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5648,"Bumps github/super-linter from 4.8.7 to 4.9.0.

Release notes
Sourced from github/super-linter's releases.

v4.9.0
Changelog

Bump docker/build-push-action from 2.7.0 to 2.9.0 @​dependabot (#2429)
Bump docker/login-action from 1.10.0 to 1.12.0 @​dependabot (#2406)
update extra deps @​lindluni (#2498)
Bump bobheadxi/deployments from 0.6.1 to 0.6.2 @​dependabot (#2403)
Bump rubocop-rspec from 2.4.0 to 2.8.0 in /dependencies @​dependabot (#2407)
Bump actions/github-script from 5 to 6 @​dependabot (#2465)
Bump cljkondo/clj-kondo from 2022.01.15-alpine to 2022.02.09-alpine @​dependabot (#2467)
Update deps @​lindluni (#2494)
fix: don't check the $GITHUB_TOKEN if multi-status is disabled @​mrc0mmand (#2464)
fix: tflint should clean up after itself @​colwynlegitscript (#2459)
feat: add SSH key support @​colwynlegitscript (#2454)
Update NPM deps with using ncu and npm audit @​lindluni (#2447)
Bump @​typescript-eslint/parser from 5.10.0 to 5.10.2 in /dependencies @​dependabot (#2426)
Bump sqlfluff from 0.9.1 to 0.9.4 in /dependencies/python @​dependabot (#2425)

🚀 Features

adding lind command output to success @​admiralAwkbar (#2399)

🐛 Bug Fixes

fix codacy and remove cache as its prone to fail @​admiralAwkbar (#2503)

See details of all code changes since previous release



Commits

a6ab9d5 Bump (#2507)
7f33bdd Bump docker/build-push-action from 2.7.0 to 2.9.0 (#2429)
d9b89bc Bump docker/login-action from 1.10.0 to 1.12.0 (#2406)
ffcb973 update extra deps (#2498)
815fb15 Bump bobheadxi/deployments from 0.6.1 to 0.6.2 (#2403)
fc8c3c5 Bump rubocop-rspec from 2.4.0 to 2.8.0 in /dependencies (#2407)
720ba12 Bump actions/github-script from 5 to 6 (#2465)
4dd4d1d Bump cljkondo/clj-kondo from 2022.01.15-alpine to 2022.02.09-alpine (#2467)
5c109b7 fix codacy and remove cache as its prone to fail (#2503)
9c964e6 Update typescript deps
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.8.7 to 4.9.0.

Release notes
Sourced from github/super-linter's releases.

v4.9.0
Changelog

Bump docker/build-push-action from 2.7.0 to 2.9.0 @​dependabot (#2429)
Bump docker/login-action from 1.10.0 to 1.12.0 @​dependabot (#2406)
update extra deps @​lindluni (#2498)
Bump bobheadxi/deployments from 0.6.1 to 0.6.2 @​dependabot (#2403)
Bump rubocop-rspec from 2.4.0 to 2.8.0 in /dependencies @​dependabot (#2407)
Bump actions/github-script from 5 to 6 @​dependabot (#2465)
Bump cljkondo/clj-kondo from 2022.01.15-alpine to 2022.02.09-alpine @​dependabot (#2467)
Update deps @​lindluni (#2494)
fix: don't check the $GITHUB_TOKEN if multi-status is disabled @​mrc0mmand (#2464)
fix: tflint should clean up after itself @​colwynlegitscript (#2459)
feat: add SSH key support @​colwynlegitscript (#2454)
Update NPM deps with using ncu and npm audit @​lindluni (#2447)
Bump @​typescript-eslint/parser from 5.10.0 to 5.10.2 in /dependencies @​dependabot (#2426)
Bump sqlfluff from 0.9.1 to 0.9.4 in /dependencies/python @​dependabot (#2425)

🚀 Features

adding lind command output to success @​admiralAwkbar (#2399)

🐛 Bug Fixes

fix codacy and remove cache as its prone to fail @​admiralAwkbar (#2503)

See details of all code changes since previous release



Commits

a6ab9d5 Bump (#2507)
7f33bdd Bump docker/build-push-action from 2.7.0 to 2.9.0 (#2429)
d9b89bc Bump docker/login-action from 1.10.0 to 1.12.0 (#2406)
ffcb973 update extra deps (#2498)
815fb15 Bump bobheadxi/deployments from 0.6.1 to 0.6.2 (#2403)
fc8c3c5 Bump rubocop-rspec from 2.4.0 to 2.8.0 in /dependencies (#2407)
720ba12 Bump actions/github-script from 5 to 6 (#2465)
4dd4d1d Bump cljkondo/clj-kondo from 2022.01.15-alpine to 2022.02.09-alpine (#2467)
5c109b7 fix codacy and remove cache as its prone to fail (#2503)
9c964e6 Update typescript deps
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5650,2022-02-18T13:46:56Z,2022-02-19T01:25:11Z,2022-03-06T04:53:59Z,MERGED,True,8,1,1,https://github.com/dearblue,Insert an empty hash before the first `NODE_KW_REST_ARGS`,1,[],https://github.com/mruby/mruby/pull/5650,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5650,"I expect this will fix the two problems that ""#5640"" didn't address.


It is expected to raise an exception TypeError, but it didn't before.
% bin/mruby -e 'p [**1]'
[1]


The variable h is expected to keep an empty hash, but it didn't before.
% bin/mruby -e 'h = {}; p(**h, a: 1, b: 2); p h'
{:a=>1, :b=>2}
{:a=>1, :b=>2}","I expect this will fix the two problems that ""#5640"" didn't address.


It is expected to raise an exception TypeError, but it didn't before.
% bin/mruby -e 'p [**1]'
[1]


The variable h is expected to keep an empty hash, but it didn't before.
% bin/mruby -e 'h = {}; p(**h, a: 1, b: 2); p h'
{:a=>1, :b=>2}
{:a=>1, :b=>2}",True,{}
mruby/mruby,https://github.com/mruby/mruby,5651,2022-02-19T05:48:28Z,2022-02-19T06:49:44Z,2022-03-06T04:53:58Z,MERGED,True,7,2,1,https://github.com/dearblue,Update `doc/mruby3.1.md`,1,[],https://github.com/mruby/mruby/pull/5651,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5651,"OP_GETIDX, OP_SETIDX : Fix operand number
OP_SYMBOL : Add entry","OP_GETIDX, OP_SETIDX : Fix operand number
OP_SYMBOL : Add entry",True,{}
mruby/mruby,https://github.com/mruby/mruby,5652,2022-02-19T06:33:36Z,2022-02-22T02:10:18Z,2022-03-06T04:53:58Z,MERGED,True,4,3,1,https://github.com/dearblue,Need to check the type of the method return value,1,[],https://github.com/mruby/mruby/pull/5652,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5652,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5653,2022-02-19T13:02:25Z,2022-02-20T07:40:12Z,2022-03-06T04:53:58Z,MERGED,True,11,9,1,https://github.com/dearblue,Improved documentation for `struct mrb_kwargs` [ci skip],1,[],https://github.com/mruby/mruby/pull/5653,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5653,"Changed the description to match the order of the changed members.
Replaced ""array of symbols"" instead of ""array of strings that mean symbols"".
The mrb_kwargs::optional member has not been present since the first merge. It is a remnant from development time.
Removed const modifier used in variable declarations in examples. This is not always necessary from a user perspective.
Added note on the use of MRB_SYM().

resolved #5649","Changed the description to match the order of the changed members.
Replaced ""array of symbols"" instead of ""array of strings that mean symbols"".
The mrb_kwargs::optional member has not been present since the first merge. It is a remnant from development time.
Removed const modifier used in variable declarations in examples. This is not always necessary from a user perspective.
Added note on the use of MRB_SYM().

resolved #5649",True,{}
mruby/mruby,https://github.com/mruby/mruby,5656,2022-02-23T19:33:20Z,2022-02-24T09:45:24Z,2022-02-24T09:45:25Z,MERGED,True,2,0,1,https://github.com/suetanvil,Added a dependency on 'yaml' to load_gems.rb.,1,[],https://github.com/mruby/mruby/pull/5656,https://github.com/suetanvil,1,https://github.com/mruby/mruby/pull/5656,"It appears that some execution paths no longer load YAML before it is
needed so we explicitly require it here.
Note that this change does not dynamically load the dependency the way some other code does.  I assumed that this was legacy behaviour but I can certainly change this if you would like.","It appears that some execution paths no longer load YAML before it is
needed so we explicitly require it here.
Note that this change does not dynamically load the dependency the way some other code does.  I assumed that this was legacy behaviour but I can certainly change this if you would like.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5658,2022-03-02T14:10:09Z,2022-03-02T23:06:39Z,2022-03-02T23:06:51Z,MERGED,True,12,12,4,https://github.com/apps/dependabot,build(deps): bump actions/checkout from 2.4.0 to 3,1,['dependencies'],https://github.com/mruby/mruby/pull/5658,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5658,"Bumps actions/checkout from 2.4.0 to 3.

Release notes
Sourced from actions/checkout's releases.

v3.0.0

Update default runtime to node16




Changelog
Sourced from actions/checkout's changelog.

Changelog
v2.3.1

Fix default branch resolution for .wiki and when using SSH

v2.3.0

Fallback to the default branch

v2.2.0

Fetch all history for all tags and branches when fetch-depth=0

v2.1.1

Changes to support GHES (here and here)

v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22

v2.0.0

Do not pass cred on command line
Add input persist-credentials
Fallback to REST API to download repo

v2 (beta)

Improved fetch performance

The default behavior now fetches only the SHA being checked-out


Script authenticated git commands

Persists with.token in the local git config
Enables your scripts to run authenticated git commands
Post-job cleanup removes the token
Coming soon: Opt out by setting with.persist-credentials to false


Creates a local branch

No longer detached HEAD when checking out a branch
A local branch is created with the corresponding upstream branch set


Improved layout



... (truncated)


Commits

a12a394 update readme for v3 (#708)
8f9e05e Update to node 16 (#689)
230611d Change secret name for PAT to not start with GITHUB_ (#623)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/checkout from 2.4.0 to 3.

Release notes
Sourced from actions/checkout's releases.

v3.0.0

Update default runtime to node16




Changelog
Sourced from actions/checkout's changelog.

Changelog
v2.3.1

Fix default branch resolution for .wiki and when using SSH

v2.3.0

Fallback to the default branch

v2.2.0

Fetch all history for all tags and branches when fetch-depth=0

v2.1.1

Changes to support GHES (here and here)

v2.1.0

Group output
Changes to support GHES alpha release
Persist core.sshCommand for submodules
Add support ssh
Convert submodule SSH URL to HTTPS, when not using SSH
Add submodule support
Follow proxy settings
Fix ref for pr closed event when a pr is merged
Fix issue checking detached when git less than 2.22

v2.0.0

Do not pass cred on command line
Add input persist-credentials
Fallback to REST API to download repo

v2 (beta)

Improved fetch performance

The default behavior now fetches only the SHA being checked-out


Script authenticated git commands

Persists with.token in the local git config
Enables your scripts to run authenticated git commands
Post-job cleanup removes the token
Coming soon: Opt out by setting with.persist-credentials to false


Creates a local branch

No longer detached HEAD when checking out a branch
A local branch is created with the corresponding upstream branch set


Improved layout



... (truncated)


Commits

a12a394 update readme for v3 (#708)
8f9e05e Update to node 16 (#689)
230611d Change secret name for PAT to not start with GITHUB_ (#623)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5662,2022-03-04T14:07:03Z,2022-03-04T14:08:59Z,2022-03-04T14:09:07Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump actions/upload-artifact from 2.3.1 to 3,1,['dependencies'],https://github.com/mruby/mruby/pull/5662,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5662,"Bumps actions/upload-artifact from 2.3.1 to 3.

Release notes
Sourced from actions/upload-artifact's releases.

v3.0.0
What's Changed

Update default runtime to node16 (#293)
Update package-lock.json file version to 2 (#302)

Breaking Changes
With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.



Commits

6673cd0 Update lockfileVersion in package-lock.json (#302)
2244c82 Update to node16 (#293)
87348ce Add 503 warning when uploading to the same artifact
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/upload-artifact from 2.3.1 to 3.

Release notes
Sourced from actions/upload-artifact's releases.

v3.0.0
What's Changed

Update default runtime to node16 (#293)
Update package-lock.json file version to 2 (#302)

Breaking Changes
With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.



Commits

6673cd0 Update lockfileVersion in package-lock.json (#302)
2244c82 Update to node16 (#293)
87348ce Add 503 warning when uploading to the same artifact
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5663,2022-03-06T04:56:58Z,2022-03-07T09:57:26Z,2022-04-02T11:47:25Z,MERGED,True,4,2,1,https://github.com/dearblue,"Small improvements to `Module#{include,prepend}`",1,[],https://github.com/mruby/mruby/pull/5663,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5663,"Array objects obtained as splat arguments are generated within the method.
Therefore, it is safe to perform destructive operations.","Array objects obtained as splat arguments are generated within the method.
Therefore, it is safe to perform destructive operations.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5664,2022-03-06T05:17:35Z,2022-03-07T02:22:00Z,2022-04-02T11:47:25Z,MERGED,True,35,47,2,https://github.com/dearblue,Reimplement `Kernel.extend` in Ruby,1,[],https://github.com/mruby/mruby/pull/5664,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5664,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5665,2022-03-06T07:24:00Z,2022-03-23T01:19:46Z,2022-04-02T11:47:24Z,MERGED,True,16,6,2,https://github.com/dearblue,Update benchmark task,4,[],https://github.com/mruby/mruby/pull/5665,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5665,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5666,2022-03-13T06:06:37Z,2022-03-14T03:52:31Z,2022-04-02T11:47:23Z,MERGED,True,1,1,1,https://github.com/dearblue,Correct truncated `SystemStackError` [ci skip],1,[],https://github.com/mruby/mruby/pull/5666,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5666,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5667,2022-03-13T07:06:21Z,2022-05-01T11:01:13Z,2022-05-01T11:01:13Z,MERGED,True,57,51,4,https://github.com/dearblue,Reorganize the `struct RException`,2,[],https://github.com/mruby/mruby/pull/5667,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5667,"With this change, the lower 16 bits of struct RBasic::flags are unused.
If this PR is accepted, a patch will be prepared to store errno of SystemCallError in the lower 10 bits of struct RBasic::flags if possible (I'm currently working on it, though).","With this change, the lower 16 bits of struct RBasic::flags are unused.
If this PR is accepted, a patch will be prepared to store errno of SystemCallError in the lower 10 bits of struct RBasic::flags if possible (I'm currently working on it, though).",True,{}
mruby/mruby,https://github.com/mruby/mruby,5668,2022-03-13T07:39:36Z,2022-03-24T01:33:40Z,2022-04-02T11:47:25Z,MERGED,True,1,0,1,https://github.com/dearblue,No need to protect red objects,1,[],https://github.com/mruby/mruby/pull/5668,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5668,"The object in GC_RED does not need to be marked, and the objects connected to this object should also not need to be marked.

Please reject this PR if there are future plans that require marking objects linked from objects in GC_RED.","The object in GC_RED does not need to be marked, and the objects connected to this object should also not need to be marked.

Please reject this PR if there are future plans that require marking objects linked from objects in GC_RED.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5669,2022-03-13T07:58:15Z,2022-03-13T10:58:47Z,2022-04-02T11:47:24Z,MERGED,True,12,12,1,https://github.com/dearblue,Change function name `mrb_bob_init` to `mrb_do_nothing`,1,[],https://github.com/mruby/mruby/pull/5669,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5669,This is because it is not limited to the BasicObject#initialize method.,This is because it is not limited to the BasicObject#initialize method.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5670,2022-03-13T10:04:36Z,2022-03-16T13:17:56Z,2022-04-02T11:47:24Z,MERGED,True,13,15,2,https://github.com/dearblue,Reimplement `Exception#message` in Ruby,1,[],https://github.com/mruby/mruby/pull/5670,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5670,Suppresses the possibility of mrb_vm_exec() being called recursively.,Suppresses the possibility of mrb_vm_exec() being called recursively.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5673,2022-03-21T14:09:19Z,2022-03-23T01:20:21Z,2022-03-23T01:20:30Z,MERGED,True,2,2,2,https://github.com/apps/dependabot,build(deps): bump actions/cache from 2.1.7 to 3,1,['dependencies'],https://github.com/mruby/mruby/pull/5673,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5673,"Bumps actions/cache from 2.1.7 to 3.

Release notes
Sourced from actions/cache's releases.

v3.0.0


This change adds a minimum runner version(node12 -> node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via github connect or manually copying the repo to their GHES instance.


Few dependencies and cache action usage examples have also been updated.





Commits

4b0cf6c Merge pull request #769 from actions/users/ashwinsangem/bump_major_version
60c606a Update licensed files
b6e9a91 Revert ""Updated to the latest version.""
c842503 Updated to the latest version.
2b7da2a Bumped up to a major version.
deae296 Merge pull request #651 from magnetikonline/fix-golang-windows-example
c7c46bc Merge pull request #707 from duxtland/main
6535c5f Regenerated examples.md TOC
3fdafa4 Update GitHub Actions status badge markdown in README.md
341e6d7 Merge branch 'actions:main' into fix-golang-windows-example
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps actions/cache from 2.1.7 to 3.

Release notes
Sourced from actions/cache's releases.

v3.0.0


This change adds a minimum runner version(node12 -> node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via github connect or manually copying the repo to their GHES instance.


Few dependencies and cache action usage examples have also been updated.





Commits

4b0cf6c Merge pull request #769 from actions/users/ashwinsangem/bump_major_version
60c606a Update licensed files
b6e9a91 Revert ""Updated to the latest version.""
c842503 Updated to the latest version.
2b7da2a Bumped up to a major version.
deae296 Merge pull request #651 from magnetikonline/fix-golang-windows-example
c7c46bc Merge pull request #707 from duxtland/main
6535c5f Regenerated examples.md TOC
3fdafa4 Update GitHub Actions status badge markdown in README.md
341e6d7 Merge branch 'actions:main' into fix-golang-windows-example
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5674,2022-03-23T15:03:03Z,2022-03-24T00:37:45Z,2022-03-24T01:05:40Z,MERGED,True,233,233,2,https://github.com/jbampton,Format Markdown tables,1,[],https://github.com/mruby/mruby/pull/5674,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5674,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5675,2022-03-24T19:42:24Z,2022-03-27T07:09:18Z,2022-03-27T07:09:18Z,CLOSED,False,1,0,1,https://github.com/jasl,Add missing include stdio.h to mruby-print,1,[],https://github.com/mruby/mruby/pull/5675,https://github.com/jasl,1,https://github.com/mruby/mruby/pull/5675,"CLion tips me because ""Implicit declaration of function 'fwrite' is invalid in C99""","CLion tips me because ""Implicit declaration of function 'fwrite' is invalid in C99""",True,{}
mruby/mruby,https://github.com/mruby/mruby,5675,2022-03-24T19:42:24Z,2022-03-27T07:09:18Z,2022-03-27T07:09:18Z,CLOSED,False,1,0,1,https://github.com/jasl,Add missing include stdio.h to mruby-print,1,[],https://github.com/mruby/mruby/pull/5675,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5675#issuecomment-1079862760,"CLion tips me because ""Implicit declaration of function 'fwrite' is invalid in C99""","stdio.h is included from mrbconf.h unless MRB_NO_STDIO is defined. You don't need to include it explicitly.
Or are we missing something?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5677,2022-03-25T14:08:21Z,2022-03-26T01:52:24Z,2022-03-26T01:52:33Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.9.0 to 4.9.1,1,['dependencies'],https://github.com/mruby/mruby/pull/5677,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5677,"Bumps github/super-linter from 4.9.0 to 4.9.1.

Release notes
Sourced from github/super-linter's releases.

v4.9.1
Changelog

bump Release @​admiralAwkbar (#2680)
weekly visualization @​admiralAwkbar (#2679)
Bump stylelint-config-recommended-scss from 5.0.2 to 6.0.0 in /dependencies @​dependabot (#2653)
Bump stylelint-scss from 4.1.0 to 4.2.0 in /dependencies @​dependabot (#2647)
Bump stylelint from 14.5.3 to 14.6.0 in /dependencies @​dependabot (#2655)
Bump docker/build-push-action from 2.9.0 to 2.10.0 @​dependabot (#2646)
Bump golangci/golangci-lint from v1.44.2 to v1.45.0 @​dependabot (#2652)
Bump python from 3.10.2-alpine to 3.10.3-alpine @​dependabot (#2651)
Bump rubocop-rails from 2.13.2 to 2.14.2 in /dependencies @​dependabot (#2649)
Add Android support for Kotlin @​alexandrefavre4 (#2670)
trying to create diagram @​admiralAwkbar (#2674)
Bump alpine from 3.15.0 to 3.15.1 @​dependabot (#2648)
Weekly Python Updates @​github-actions (#2644)
Use ts-standard instead of standard as TYPESCRIPT_STANDARD @​massongit (#2614)
Bump rubocop from 1.25.1 to 1.26.0 in /dependencies @​dependabot (#2618)
Bump zricethezav/gitleaks from v8.3.0 to v8.4.0 @​dependabot (#2619)
Bump rhysd/actionlint from 1.6.9 to 1.6.10 @​dependabot (#2620)
Bump eslint-plugin-react from 7.29.3 to 7.29.4 in /dependencies @​dependabot (#2623)
Bump snakemake from 7.1.0 to 7.2.1 in /dependencies/python @​dependabot (#2637)
Fix link to Actions Badges documentation @​KristjanESPERANTO (#2615)
Copy over Python headers during staged build @​HippocampusGirl (#2607)
Update example config to use actions/checkout@v3 @​coliff (#2610)
Weekly NPM Updates @​github-actions (#2617)
Weekly Python Updates @​github-actions (#2616)
Bump cljkondo/clj-kondo from 2022.02.09-alpine to 2022.03.09-alpine @​dependabot (#2609)
Bump rubocop-rspec from 2.8.0 to 2.9.0 in /dependencies @​dependabot (#2556)
Bump rubocop-performance from 1.13.2 to 1.13.3 in /dependencies @​dependabot (#2590)
Bump actions/checkout from 2.4.0 to 3 @​dependabot (#2585)
Bump bobheadxi/deployments from 0.6.2 to 1.1.0 @​dependabot (#2586)
Bump alpine/terragrunt from 1.1.6 to 1.1.7 @​dependabot (#2587)
Bump docker/login-action from 1.14.0 to 1.14.1 @​dependabot (#2588)
Bump hashicorp/terraform from 1.1.6 to 1.1.7 @​dependabot (#2591)
Weekly NPM Updates @​github-actions (#2604)
Weekly Python Updates @​github-actions (#2605)
Bump zricethezav/gitleaks from v8.2.7 to v8.3.0 @​dependabot (#2558)
Bump accurics/terrascan from 1.13.1 to 1.13.2 @​dependabot (#2559)
Weekly Python Updates @​github-actions (#2574)
Bump yoheimuta/protolint from v0.37.0 to v0.37.1 @​dependabot (#2560)
Bump docker/login-action from 1.13.0 to 1.14.0 @​dependabot (#2555)
Weekly NPM Updates @​github-actions (#2552)
Weekly Python Updates @​github-actions (#2551)
Bump rhysd/actionlint from 1.6.8 to 1.6.9 @​dependabot (#2554)
Weekly NPM Updates @​github-actions (#2547)
Weekly Python Updates @​github-actions (#2546)
Bump markupsafe from 2.0.1 to 2.1.0 in /dependencies/python @​dependabot (#2524)
Bump cpplint from 1.5.5 to 1.6.0 in /dependencies/python @​dependabot (#2527)
Bump sqlfluff from 0.10.0 to 0.10.1 in /dependencies/python @​dependabot (#2528)
Bump jupyter-core from 4.9.1 to 4.9.2 in /dependencies/python @​dependabot (#2530)



... (truncated)


Commits

3792fe5 Release (#2680)
33dfb2b weekly (#2679)
2b22014 Bump stylelint-config-recommended-scss in /dependencies (#2653)
d4b00b5 Bump stylelint-scss from 4.1.0 to 4.2.0 in /dependencies (#2647)
aecce56 Bump stylelint from 14.5.3 to 14.6.0 in /dependencies (#2655)
053b37b Bump docker/build-push-action from 2.9.0 to 2.10.0 (#2646)
0507459 Bump golangci/golangci-lint from v1.44.2 to v1.45.0 (#2652)
3aae763 Bump python from 3.10.2-alpine to 3.10.3-alpine (#2651)
062b71a Bump rubocop-rails from 2.13.2 to 2.14.2 in /dependencies (#2649)
edc7095 Add Android support for Kotlin (#2670)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.9.0 to 4.9.1.

Release notes
Sourced from github/super-linter's releases.

v4.9.1
Changelog

bump Release @​admiralAwkbar (#2680)
weekly visualization @​admiralAwkbar (#2679)
Bump stylelint-config-recommended-scss from 5.0.2 to 6.0.0 in /dependencies @​dependabot (#2653)
Bump stylelint-scss from 4.1.0 to 4.2.0 in /dependencies @​dependabot (#2647)
Bump stylelint from 14.5.3 to 14.6.0 in /dependencies @​dependabot (#2655)
Bump docker/build-push-action from 2.9.0 to 2.10.0 @​dependabot (#2646)
Bump golangci/golangci-lint from v1.44.2 to v1.45.0 @​dependabot (#2652)
Bump python from 3.10.2-alpine to 3.10.3-alpine @​dependabot (#2651)
Bump rubocop-rails from 2.13.2 to 2.14.2 in /dependencies @​dependabot (#2649)
Add Android support for Kotlin @​alexandrefavre4 (#2670)
trying to create diagram @​admiralAwkbar (#2674)
Bump alpine from 3.15.0 to 3.15.1 @​dependabot (#2648)
Weekly Python Updates @​github-actions (#2644)
Use ts-standard instead of standard as TYPESCRIPT_STANDARD @​massongit (#2614)
Bump rubocop from 1.25.1 to 1.26.0 in /dependencies @​dependabot (#2618)
Bump zricethezav/gitleaks from v8.3.0 to v8.4.0 @​dependabot (#2619)
Bump rhysd/actionlint from 1.6.9 to 1.6.10 @​dependabot (#2620)
Bump eslint-plugin-react from 7.29.3 to 7.29.4 in /dependencies @​dependabot (#2623)
Bump snakemake from 7.1.0 to 7.2.1 in /dependencies/python @​dependabot (#2637)
Fix link to Actions Badges documentation @​KristjanESPERANTO (#2615)
Copy over Python headers during staged build @​HippocampusGirl (#2607)
Update example config to use actions/checkout@v3 @​coliff (#2610)
Weekly NPM Updates @​github-actions (#2617)
Weekly Python Updates @​github-actions (#2616)
Bump cljkondo/clj-kondo from 2022.02.09-alpine to 2022.03.09-alpine @​dependabot (#2609)
Bump rubocop-rspec from 2.8.0 to 2.9.0 in /dependencies @​dependabot (#2556)
Bump rubocop-performance from 1.13.2 to 1.13.3 in /dependencies @​dependabot (#2590)
Bump actions/checkout from 2.4.0 to 3 @​dependabot (#2585)
Bump bobheadxi/deployments from 0.6.2 to 1.1.0 @​dependabot (#2586)
Bump alpine/terragrunt from 1.1.6 to 1.1.7 @​dependabot (#2587)
Bump docker/login-action from 1.14.0 to 1.14.1 @​dependabot (#2588)
Bump hashicorp/terraform from 1.1.6 to 1.1.7 @​dependabot (#2591)
Weekly NPM Updates @​github-actions (#2604)
Weekly Python Updates @​github-actions (#2605)
Bump zricethezav/gitleaks from v8.2.7 to v8.3.0 @​dependabot (#2558)
Bump accurics/terrascan from 1.13.1 to 1.13.2 @​dependabot (#2559)
Weekly Python Updates @​github-actions (#2574)
Bump yoheimuta/protolint from v0.37.0 to v0.37.1 @​dependabot (#2560)
Bump docker/login-action from 1.13.0 to 1.14.0 @​dependabot (#2555)
Weekly NPM Updates @​github-actions (#2552)
Weekly Python Updates @​github-actions (#2551)
Bump rhysd/actionlint from 1.6.8 to 1.6.9 @​dependabot (#2554)
Weekly NPM Updates @​github-actions (#2547)
Weekly Python Updates @​github-actions (#2546)
Bump markupsafe from 2.0.1 to 2.1.0 in /dependencies/python @​dependabot (#2524)
Bump cpplint from 1.5.5 to 1.6.0 in /dependencies/python @​dependabot (#2527)
Bump sqlfluff from 0.10.0 to 0.10.1 in /dependencies/python @​dependabot (#2528)
Bump jupyter-core from 4.9.1 to 4.9.2 in /dependencies/python @​dependabot (#2530)



... (truncated)


Commits

3792fe5 Release (#2680)
33dfb2b weekly (#2679)
2b22014 Bump stylelint-config-recommended-scss in /dependencies (#2653)
d4b00b5 Bump stylelint-scss from 4.1.0 to 4.2.0 in /dependencies (#2647)
aecce56 Bump stylelint from 14.5.3 to 14.6.0 in /dependencies (#2655)
053b37b Bump docker/build-push-action from 2.9.0 to 2.10.0 (#2646)
0507459 Bump golangci/golangci-lint from v1.44.2 to v1.45.0 (#2652)
3aae763 Bump python from 3.10.2-alpine to 3.10.3-alpine (#2651)
062b71a Bump rubocop-rails from 2.13.2 to 2.14.2 in /dependencies (#2649)
edc7095 Add Android support for Kotlin (#2670)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5679,2022-03-27T02:37:53Z,2022-03-27T10:13:27Z,2022-04-02T11:47:25Z,MERGED,True,0,6,1,https://github.com/dearblue,Remove old compatibility code,1,[],https://github.com/mruby/mruby/pull/5679,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5679,The mrb_voidp() related macros have been removed in mruby-1.1.0.,The mrb_voidp() related macros have been removed in mruby-1.1.0.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5680,2022-03-31T22:28:49Z,2022-04-01T05:57:09Z,2022-04-01T05:58:41Z,MERGED,True,1,1,1,https://github.com/jbampton,pre-commit autoupdate,1,[],https://github.com/mruby/mruby/pull/5680,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5680,https://pre-commit.com/#pre-commit-autoupdate,https://pre-commit.com/#pre-commit-autoupdate,True,{}
mruby/mruby,https://github.com/mruby/mruby,5682,2022-04-03T13:38:13Z,2022-04-06T08:04:32Z,2022-04-20T13:59:42Z,MERGED,True,1,1,1,https://github.com/dearblue,Fixed bounds check for `heap_p()` function in `src/gc.c`,1,[],https://github.com/mruby/mruby/pull/5682,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5682,One extra element was included.,One extra element was included.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5683,2022-04-04T14:08:44Z,2022-04-05T05:12:00Z,2022-04-05T05:12:08Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.9.1 to 4.9.2,1,['dependencies'],https://github.com/mruby/mruby/pull/5683,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5683,"Bumps github/super-linter from 4.9.1 to 4.9.2.

Release notes
Sourced from github/super-linter's releases.

v4.9.2
Changelog

Bump to 4.9.2 @​admiralAwkbar (#2720)
adding addional command @​admiralAwkbar (#2711)
Bump golangci/golangci-lint from v1.45.0 to v1.45.2 @​dependabot (#2690)
Bump rubocop from 1.26.0 to 1.26.1 in /dependencies @​dependabot (#2691)
Bump alpine from 3.15.1 to 3.15.2 @​dependabot (#2693)
Bump python from 3.10.3-alpine to 3.10.4-alpine @​dependabot (#2694)
Bump typescript from 4.6.2 to 4.6.3 in /dependencies @​dependabot (#2695)
Bump htmlhint from 1.1.2 to 1.1.3 in /dependencies @​dependabot (#2696)
Bump zricethezav/gitleaks from v8.4.0 to v8.5.2 @​dependabot (#2707)
Enhance perl linting @​sabbene (#2684)
Add KOTLIN_ANDROID to LANGUAGE_ARRAY @​alexandrefavre4 (#2689)
Weekly Python Updates @​github-actions (#2687)
adding airbnb @​admiralAwkbar (#2683)
Bump @​coffeelint/cli from 5.2.4 to 5.2.5 in /dependencies @​dependabot (#2650)
Bump prettier from 2.5.1 to 2.6.1 in /dependencies @​dependabot (#2677)
manual trigger @​admiralAwkbar (#2681)

See details of all code changes since previous release



Commits

ae4e373 492 (#2720)
14eb37a adding addional command (#2711)
b9e6255 Bump golangci/golangci-lint from v1.45.0 to v1.45.2 (#2690)
1466d6b Bump rubocop from 1.26.0 to 1.26.1 in /dependencies (#2691)
0acfb98 Bump alpine from 3.15.1 to 3.15.2 (#2693)
7b4f693 Bump python from 3.10.3-alpine to 3.10.4-alpine (#2694)
28a0546 Bump typescript from 4.6.2 to 4.6.3 in /dependencies (#2695)
90d12de Bump htmlhint from 1.1.2 to 1.1.3 in /dependencies (#2696)
57ab073 Bump zricethezav/gitleaks from v8.4.0 to v8.5.2 (#2707)
32eb1cc Add Perl::Critic::Community and PERL_PERLCRITIC_OPTIONS to allow passing comm...
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.9.1 to 4.9.2.

Release notes
Sourced from github/super-linter's releases.

v4.9.2
Changelog

Bump to 4.9.2 @​admiralAwkbar (#2720)
adding addional command @​admiralAwkbar (#2711)
Bump golangci/golangci-lint from v1.45.0 to v1.45.2 @​dependabot (#2690)
Bump rubocop from 1.26.0 to 1.26.1 in /dependencies @​dependabot (#2691)
Bump alpine from 3.15.1 to 3.15.2 @​dependabot (#2693)
Bump python from 3.10.3-alpine to 3.10.4-alpine @​dependabot (#2694)
Bump typescript from 4.6.2 to 4.6.3 in /dependencies @​dependabot (#2695)
Bump htmlhint from 1.1.2 to 1.1.3 in /dependencies @​dependabot (#2696)
Bump zricethezav/gitleaks from v8.4.0 to v8.5.2 @​dependabot (#2707)
Enhance perl linting @​sabbene (#2684)
Add KOTLIN_ANDROID to LANGUAGE_ARRAY @​alexandrefavre4 (#2689)
Weekly Python Updates @​github-actions (#2687)
adding airbnb @​admiralAwkbar (#2683)
Bump @​coffeelint/cli from 5.2.4 to 5.2.5 in /dependencies @​dependabot (#2650)
Bump prettier from 2.5.1 to 2.6.1 in /dependencies @​dependabot (#2677)
manual trigger @​admiralAwkbar (#2681)

See details of all code changes since previous release



Commits

ae4e373 492 (#2720)
14eb37a adding addional command (#2711)
b9e6255 Bump golangci/golangci-lint from v1.45.0 to v1.45.2 (#2690)
1466d6b Bump rubocop from 1.26.0 to 1.26.1 in /dependencies (#2691)
0acfb98 Bump alpine from 3.15.1 to 3.15.2 (#2693)
7b4f693 Bump python from 3.10.3-alpine to 3.10.4-alpine (#2694)
28a0546 Bump typescript from 4.6.2 to 4.6.3 in /dependencies (#2695)
90d12de Bump htmlhint from 1.1.2 to 1.1.3 in /dependencies (#2696)
57ab073 Bump zricethezav/gitleaks from v8.4.0 to v8.5.2 (#2707)
32eb1cc Add Perl::Critic::Community and PERL_PERLCRITIC_OPTIONS to allow passing comm...
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5684,2022-04-04T14:21:02Z,2022-04-05T05:12:44Z,2022-04-14T21:02:05Z,MERGED,True,1,6,1,https://github.com/jbampton,Run Super-Linter only once,1,[],https://github.com/mruby/mruby/pull/5684,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5684,From #5683,From #5683,True,{}
mruby/mruby,https://github.com/mruby/mruby,5687,2022-04-10T12:51:01Z,2022-04-11T23:59:50Z,2022-04-20T13:59:43Z,MERGED,True,4,5,2,https://github.com/dearblue,Must the `mrb_sys_fail()` function raise an exception,1,[],https://github.com/mruby/mruby/pull/5687,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5687,"Normal return of control from the mrb_sys_fail() function has unexpected results.
Example: double free, malloc with huge size used as error integer
The following is an example of an actual crash:
% cat crash.rb
def SystemCallError._sys_fail(*a)
  nil
end

File.readlink(""/404"")

% bin/mruby crash.rb
zsh: segmentation fault (core dumped)  bin/mruby crash.rb","Normal return of control from the mrb_sys_fail() function has unexpected results.
Example: double free, malloc with huge size used as error integer
The following is an example of an actual crash:
% cat crash.rb
def SystemCallError._sys_fail(*a)
  nil
end

File.readlink(""/404"")

% bin/mruby crash.rb
zsh: segmentation fault (core dumped)  bin/mruby crash.rb",True,{}
mruby/mruby,https://github.com/mruby/mruby,5687,2022-04-10T12:51:01Z,2022-04-11T23:59:50Z,2022-04-20T13:59:43Z,MERGED,True,4,5,2,https://github.com/dearblue,Must the `mrb_sys_fail()` function raise an exception,1,[],https://github.com/mruby/mruby/pull/5687,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5687#issuecomment-1094268523,"Normal return of control from the mrb_sys_fail() function has unexpected results.
Example: double free, malloc with huge size used as error integer
The following is an example of an actual crash:
% cat crash.rb
def SystemCallError._sys_fail(*a)
  nil
end

File.readlink(""/404"")

% bin/mruby crash.rb
zsh: segmentation fault (core dumped)  bin/mruby crash.rb","As a point of reference
As far as I can tell, the script shown does not crash mruby 3.1.0-rc2.
It crashes after commit a4f740f + 1a9991f.
The reason for the crash in the example taken is that RSTR_EMBEDDABLE_P(len = -1) is true before str_init_embed(), resulting in an illegal write (buffer over run).
Last but not least, even mruby 3.1.0-rc2 can return control normally from a call to mrb_sys_fail().
Therefore, it is still possible for subsequent processing to cause unexpected results.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5688,2022-04-14T21:08:06Z,2022-04-14T22:44:50Z,2022-04-15T01:05:34Z,MERGED,True,1,1,1,https://github.com/jbampton,Fix spelling in `doc/mruby3.2.md`,1,[],https://github.com/mruby/mruby/pull/5688,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5688,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5689,2022-04-15T01:34:59Z,2022-04-15T01:46:49Z,2022-04-15T01:47:35Z,MERGED,True,2,2,1,https://github.com/jbampton,Fix grammar and case of Ruby,1,[],https://github.com/mruby/mruby/pull/5689,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5689,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5690,2022-04-15T02:22:01Z,2022-04-15T05:22:04Z,2022-04-16T00:45:52Z,MERGED,True,0,3,1,https://github.com/jbampton,Enable markdownlint rule MD010 no-hard-tabs,1,[],https://github.com/mruby/mruby/pull/5690,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5690,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5691,2022-04-16T09:39:37Z,2022-04-17T00:18:25Z,2022-04-20T13:59:43Z,MERGED,True,98,106,1,https://github.com/dearblue,Avoid creating temporary objects with `new_lit()` in `codegen.c`,1,[],https://github.com/mruby/mruby/pull/5691,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5691,"At the same time, the saving and restoration of unwanted object arenas was removed.
In addition, the common code to extend the pool that existed before has been grouped together and newly established as lit_pool_extend().
Note that previously the variable i was updated at that time, but since it is the same as the value at the end of a for statement, it has been omitted.
The original catalyst was that bin/mrbc with the MRB_WORD_BOXING + not MRB_BOXWORD_NO_FLOAT_TRUNCATE configuration caused bin/mrbtest with the MRB_NO_BOXING configuration to fail.
Upon investigation, I concluded that avoiding the creation of temporary objects would prevent the truncation of floating point numbers.
Therefore, this patch also prevents the rake test from failing with the following configuration.
% cat test_config.rb
bootstrap_mrbc = nil

MRuby::Build.new do |conf|
  conf.toolchain
  conf.enable_debug
  conf.enable_test
  conf.disable_presym
  conf.defines << %w(MRB_WORD_BOXING)
  #conf.defines << %w(MRB_WORDBOX_NO_FLOAT_TRUNCATE)
  gem core: ""mruby-bin-mrbc""
  gem core: ""mruby-kernel-ext""
  bootstrap_mrbc = File.join(conf.build_dir, ""bin/mrbc"")
end

MRuby::Build.new(""nobox"") do |conf|
  conf.toolchain
  conf.enable_debug
  conf.enable_test
  conf.defines << %(MRB_NO_BOXING)
  conf.mrbcfile = bootstrap_mrbc
  gem core: ""mruby-kernel-ext""
end","At the same time, the saving and restoration of unwanted object arenas was removed.
In addition, the common code to extend the pool that existed before has been grouped together and newly established as lit_pool_extend().
Note that previously the variable i was updated at that time, but since it is the same as the value at the end of a for statement, it has been omitted.
The original catalyst was that bin/mrbc with the MRB_WORD_BOXING + not MRB_BOXWORD_NO_FLOAT_TRUNCATE configuration caused bin/mrbtest with the MRB_NO_BOXING configuration to fail.
Upon investigation, I concluded that avoiding the creation of temporary objects would prevent the truncation of floating point numbers.
Therefore, this patch also prevents the rake test from failing with the following configuration.
% cat test_config.rb
bootstrap_mrbc = nil

MRuby::Build.new do |conf|
  conf.toolchain
  conf.enable_debug
  conf.enable_test
  conf.disable_presym
  conf.defines << %w(MRB_WORD_BOXING)
  #conf.defines << %w(MRB_WORDBOX_NO_FLOAT_TRUNCATE)
  gem core: ""mruby-bin-mrbc""
  gem core: ""mruby-kernel-ext""
  bootstrap_mrbc = File.join(conf.build_dir, ""bin/mrbc"")
end

MRuby::Build.new(""nobox"") do |conf|
  conf.toolchain
  conf.enable_debug
  conf.enable_test
  conf.defines << %(MRB_NO_BOXING)
  conf.mrbcfile = bootstrap_mrbc
  gem core: ""mruby-kernel-ext""
end",True,{}
mruby/mruby,https://github.com/mruby/mruby,5692,2022-04-16T12:37:32Z,2022-04-18T22:45:47Z,2022-04-21T14:39:43Z,MERGED,True,4,3,1,https://github.com/jbampton,Fix step names in lint workflow,1,[],https://github.com/mruby/mruby/pull/5692,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5692,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5693,2022-04-16T13:30:11Z,2022-04-18T00:59:00Z,2022-04-20T13:59:41Z,MERGED,True,2,3,1,https://github.com/dearblue,Improvements to `String#each_byte`,1,[],https://github.com/mruby/mruby/pull/5693,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5693,Each byte value is now retrieved inside the loop.,Each byte value is now retrieved inside the loop.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5694,2022-04-19T12:16:15Z,2022-04-19T23:05:54Z,2022-04-20T13:59:42Z,MERGED,True,1,1,1,https://github.com/dearblue,Move `method_added` method into the `Module`,1,[],https://github.com/mruby/mruby/pull/5694,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5694,Previously defined as BasicObject#method_added.,Previously defined as BasicObject#method_added.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5695,2022-04-19T13:01:08Z,2022-04-20T05:47:25Z,2022-04-20T22:04:04Z,MERGED,True,2,1,1,https://github.com/dearblue,"Setting `Command#build` correctly in automatic ""mrbc"" build for presym",1,[],https://github.com/mruby/mruby/pull/5695,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5695,"This was the cause of the command line flag being affected by changes in the parent build.
So, for example, if mruby-rational was included, even the automatically added mrbc builds included MRB_USE_RATIONAL.","This was the cause of the command line flag being affected by changes in the parent build.
So, for example, if mruby-rational was included, even the automatically added mrbc builds included MRB_USE_RATIONAL.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5695,2022-04-19T13:01:08Z,2022-04-20T05:47:25Z,2022-04-20T22:04:04Z,MERGED,True,2,1,1,https://github.com/dearblue,"Setting `Command#build` correctly in automatic ""mrbc"" build for presym",1,[],https://github.com/mruby/mruby/pull/5695,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5695#issuecomment-1103496908,"This was the cause of the command line flag being affected by changes in the parent build.
So, for example, if mruby-rational was included, even the automatically added mrbc builds included MRB_USE_RATIONAL.",I merged the PR but still being not sure the difference.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5695,2022-04-19T13:01:08Z,2022-04-20T05:47:25Z,2022-04-20T22:04:04Z,MERGED,True,2,1,1,https://github.com/dearblue,"Setting `Command#build` correctly in automatic ""mrbc"" build for presym",1,[],https://github.com/mruby/mruby/pull/5695,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5695#issuecomment-1103968405,"This was the cause of the command line flag being affected by changes in the parent build.
So, for example, if mruby-rational was included, even the automatically added mrbc builds included MRB_USE_RATIONAL.","Behavior before applying this PR:


Running rake -v will show that -DMRB_USE_RATIONAL is also specified during the build of build/host/mrbc.
% rake -v
...snip...
CC    src/array.c -> build/host/mrbc/src/array.o
clang -MMD -c -std=gnu99 -g -O3 -Wall -Wundef -Werror-implicit-function-declaration -Wwrite-strings -Wzero-length-array -DMRB_NO_PRESYM -DMRB_NO_GEMS -DMRB_USE_RATIONAL -DMRB_USE_COMPLEX -I""/var/tmp/mruby@eb8f7e1b7/include"" -o ""/var/tmp/mruby@eb8f7e1b7/build/host/mrbc/src/array.o"" ""/var/tmp/mruby@eb8f7e1b7/src/array.c""


Running readelf -s build/host/mrbc/bin/mrbc | grep rational will see rational-related functions that should not be added.
% readelf -s build/host/mrbc/bin/mrbc | grep rational
    42: 000000000022e570    20 FUNC    LOCAL  DEFAULT   14 gc_generational_mode_get
    43: 000000000022e3c0   422 FUNC    LOCAL  DEFAULT   14 gc_generational_mode_set
   415: 000000000029f6a0   540 FUNC    LOCAL  DEFAULT   14 new_rational
   511: 000000000022a930     8 FUNC    GLOBAL DEFAULT   14 mrb_rational_add
   512: 000000000022a960     8 FUNC    GLOBAL DEFAULT   14 mrb_rational_div
   513: 000000000022a950     8 FUNC    GLOBAL DEFAULT   14 mrb_rational_mul
   514: 000000000022a920     8 FUNC    GLOBAL DEFAULT   14 mrb_rational_new
   515: 000000000022a940     8 FUNC    GLOBAL DEFAULT   14 mrb_rational_sub
   516: 000000000022a980     8 FUNC    GLOBAL DEFAULT   14 mrb_rational_to_f
   517: 000000000022a970     8 FUNC    GLOBAL DEFAULT   14 mrb_rational_to_i


MRuby.targets[""host/mrbc""].cc.build.name is unintended ""host"".
% rake -rdebug -E 'DEBUGGER__::SESSION.add_line_breakpoint File.expand_path(""Rakefile""), 38'
DEBUGGER:  BP - Line  /var/tmp/mruby@eb8f7e1b7/Rakefile:38 (line) is activated.
[33, 42] in /var/tmp/mruby@eb8f7e1b7/Rakefile
    33| load ""#{MRUBY_ROOT}/tasks/benchmark.rake""
    34| load ""#{MRUBY_ROOT}/tasks/doc.rake""
    35|
    36| ##############################
    37| # generic build targets, rules
=>  38| task :default => :all
    39|
    40| desc ""build all targets, install (locally) in-repo""
    41| task :all => :gensym do
    42|   Rake::Task[:build].invoke
=>#0    <top (required)> at /var/tmp/mruby@eb8f7e1b7/Rakefile:38
  #1    [C] Kernel#load at /usr/local/lib/ruby/gems/3.1/gems/rake-13.0.6/lib/rake/rake_module.rb:29
  # and 11 frames (use `bt' command for all frames)

Stop by #0  BP - Line  /var/tmp/mruby@eb8f7e1b7/Rakefile:38 (line)
(rdbg) p MRuby.targets[""host/mrbc""].cc.build.name    # command
=> ""host""
(rdbg) p MRuby.targets[""host/mrbc""].cc.build.defines    # command
=> [""MRB_USE_RATIONAL"", ""MRB_USE_COMPLEX""]


I figured they were caused by MRuby::Command#clone continuing to reference the build instance.
# I first noticed this while working on #5622.  However, I decided not to look at it at the time.
I am now planning a PR to move src/bigint.c to mrbgems/mruby-bigint.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5695,2022-04-19T13:01:08Z,2022-04-20T05:47:25Z,2022-04-20T22:04:04Z,MERGED,True,2,1,1,https://github.com/dearblue,"Setting `Command#build` correctly in automatic ""mrbc"" build for presym",1,[],https://github.com/mruby/mruby/pull/5695,https://github.com/matz,4,https://github.com/mruby/mruby/pull/5695#issuecomment-1103990659,"This was the cause of the command line flag being affected by changes in the parent build.
So, for example, if mruby-rational was included, even the automatically added mrbc builds included MRB_USE_RATIONAL.","Hmm, does this mean we no longer need mrbgem/mruby-bin-mrbc/tools/mrbc/stub.c?",True,{}
mruby/mruby,https://github.com/mruby/mruby,5695,2022-04-19T13:01:08Z,2022-04-20T05:47:25Z,2022-04-20T22:04:04Z,MERGED,True,2,1,1,https://github.com/dearblue,"Setting `Command#build` correctly in automatic ""mrbc"" build for presym",1,[],https://github.com/mruby/mruby/pull/5695,https://github.com/dearblue,5,https://github.com/mruby/mruby/pull/5695#issuecomment-1104005766,"This was the cause of the command line flag being affected by changes in the parent build.
So, for example, if mruby-rational was included, even the automatically added mrbc builds included MRB_USE_RATIONAL.","No.
This PR affects ""build/host/mrbc/bin/mrbc"".
""build/host/bin/mrbc"" may still define MRB_USE_RETIONAL.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5695,2022-04-19T13:01:08Z,2022-04-20T05:47:25Z,2022-04-20T22:04:04Z,MERGED,True,2,1,1,https://github.com/dearblue,"Setting `Command#build` correctly in automatic ""mrbc"" build for presym",1,[],https://github.com/mruby/mruby/pull/5695,https://github.com/matz,6,https://github.com/mruby/mruby/pull/5695#issuecomment-1104496569,"This was the cause of the command line flag being affected by changes in the parent build.
So, for example, if mruby-rational was included, even the automatically added mrbc builds included MRB_USE_RATIONAL.",I see.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5696,2022-04-23T13:02:11Z,2022-04-25T10:15:12Z,2022-04-29T12:54:29Z,MERGED,True,6,40,5,https://github.com/dearblue,Move bigint implementation files to `mruby-bigint`,2,[],https://github.com/mruby/mruby/pull/5696,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5696,"Users can now switch to their own implementation of GEM.
However, we do not guarantee that this will not be a problem in the current situation.
This may need to be improved in the future.
And, a part of bigint.h has been removed because it duplicates include/mruby/internal.h.


mrbgems/mruby-bigint/core/bigint.h ⬅ include/mruby/bigint.h
mrbgems/mruby-bigint/core/bigint.c ⬅ src/bigint.c

The files are placed in the core/ directory. Note that it is not the src/ directory.
I also plan to add tips for creating custom GEMs to mrbgems/mruby-bigint/README.md, using the GNU Multi-Precision Library as an example.","Users can now switch to their own implementation of GEM.
However, we do not guarantee that this will not be a problem in the current situation.
This may need to be improved in the future.
And, a part of bigint.h has been removed because it duplicates include/mruby/internal.h.


mrbgems/mruby-bigint/core/bigint.h ⬅ include/mruby/bigint.h
mrbgems/mruby-bigint/core/bigint.c ⬅ src/bigint.c

The files are placed in the core/ directory. Note that it is not the src/ directory.
I also plan to add tips for creating custom GEMs to mrbgems/mruby-bigint/README.md, using the GNU Multi-Precision Library as an example.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5696,2022-04-23T13:02:11Z,2022-04-25T10:15:12Z,2022-04-29T12:54:29Z,MERGED,True,6,40,5,https://github.com/dearblue,Move bigint implementation files to `mruby-bigint`,2,[],https://github.com/mruby/mruby/pull/5696,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5696#issuecomment-1109262400,"Users can now switch to their own implementation of GEM.
However, we do not guarantee that this will not be a problem in the current situation.
This may need to be improved in the future.
And, a part of bigint.h has been removed because it duplicates include/mruby/internal.h.


mrbgems/mruby-bigint/core/bigint.h ⬅ include/mruby/bigint.h
mrbgems/mruby-bigint/core/bigint.c ⬅ src/bigint.c

The files are placed in the core/ directory. Note that it is not the src/ directory.
I also plan to add tips for creating custom GEMs to mrbgems/mruby-bigint/README.md, using the GNU Multi-Precision Library as an example.","I am not sure how useful to allow switching implementation of big integers, but I merged this PR anyway.
At least it makes the core implementation a little bit cleaner.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5696,2022-04-23T13:02:11Z,2022-04-25T10:15:12Z,2022-04-29T12:54:29Z,MERGED,True,6,40,5,https://github.com/dearblue,Move bigint implementation files to `mruby-bigint`,2,[],https://github.com/mruby/mruby/pull/5696,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5696#issuecomment-1113278623,"Users can now switch to their own implementation of GEM.
However, we do not guarantee that this will not be a problem in the current situation.
This may need to be improved in the future.
And, a part of bigint.h has been removed because it duplicates include/mruby/internal.h.


mrbgems/mruby-bigint/core/bigint.h ⬅ include/mruby/bigint.h
mrbgems/mruby-bigint/core/bigint.c ⬅ src/bigint.c

The files are placed in the core/ directory. Note that it is not the src/ directory.
I also plan to add tips for creating custom GEMs to mrbgems/mruby-bigint/README.md, using the GNU Multi-Precision Library as an example.","Thanks for the merge.
Personally, I don't think I would use a number much greater than 2 ** 64, but I don't know about other users.
In such cases, I thought it would be nice to have the option to use faster GMP, etc. available.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5697,2022-04-23T13:28:52Z,2022-04-24T05:00:50Z,2022-04-24T05:00:50Z,MERGED,True,1,1,1,https://github.com/dearblue,Hides the class of string objects allocated by `mrb_alloca()`,1,[],https://github.com/mruby/mruby/pull/5697,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5697,Prevents retrieval with the ObjectSpace.each_object method.,Prevents retrieval with the ObjectSpace.each_object method.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5699,2022-04-25T14:08:23Z,2022-04-25T23:45:55Z,2022-04-25T23:46:11Z,MERGED,True,3,3,1,https://github.com/apps/dependabot,build(deps): bump github/codeql-action from 1 to 2,1,['dependencies'],https://github.com/mruby/mruby/pull/5699,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5699,"Bumps github/codeql-action from 1 to 2.

Changelog
Sourced from github/codeql-action's changelog.

2.1.8 - 08 Apr 2022

Update default CodeQL bundle version to 2.8.5. #1014
Fix error where the init action would fail due to a GitHub API request that was taking too long to complete #1025

2.1.7 - 05 Apr 2022

A bug where additional queries specified in the workflow file would sometimes not be respected has been fixed. #1018

2.1.6 - 30 Mar 2022

[v2+ only] The CodeQL Action now runs on Node.js v16. #1000
Update default CodeQL bundle version to 2.8.4. #990
Fix a bug where an invalid commit_oid was being sent to code scanning when a custom checkout path was being used. #956




Commits

2c03704 Allow the version of the ML-powered pack to depend on the CLI version
dd6b592 Simplify ML-powered query status report definition
a90d8bf Merge pull request #1011 from github/henrymercer/ml-powered-queries-pr-check
dc0338e Use latest major version of actions/upload-artifact
57096fe Add a PR check to validate that ML-powered queries are run correctly
b0ddf36 Merge pull request #1012 from github/henrymercer/update-actions-major-versions
1ea2f2d Merge branch 'main' into henrymercer/update-actions-major-versions
9dcc141 Merge pull request #1010 from github/henrymercer/stop-running-ml-powered-quer...
ea751a9 Update other Actions from v2 to v3
a2949f4 Update actions/checkout from v2 to v3
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/codeql-action from 1 to 2.

Changelog
Sourced from github/codeql-action's changelog.

2.1.8 - 08 Apr 2022

Update default CodeQL bundle version to 2.8.5. #1014
Fix error where the init action would fail due to a GitHub API request that was taking too long to complete #1025

2.1.7 - 05 Apr 2022

A bug where additional queries specified in the workflow file would sometimes not be respected has been fixed. #1018

2.1.6 - 30 Mar 2022

[v2+ only] The CodeQL Action now runs on Node.js v16. #1000
Update default CodeQL bundle version to 2.8.4. #990
Fix a bug where an invalid commit_oid was being sent to code scanning when a custom checkout path was being used. #956




Commits

2c03704 Allow the version of the ML-powered pack to depend on the CLI version
dd6b592 Simplify ML-powered query status report definition
a90d8bf Merge pull request #1011 from github/henrymercer/ml-powered-queries-pr-check
dc0338e Use latest major version of actions/upload-artifact
57096fe Add a PR check to validate that ML-powered queries are run correctly
b0ddf36 Merge pull request #1012 from github/henrymercer/update-actions-major-versions
1ea2f2d Merge branch 'main' into henrymercer/update-actions-major-versions
9dcc141 Merge pull request #1010 from github/henrymercer/stop-running-ml-powered-quer...
ea751a9 Update other Actions from v2 to v3
a2949f4 Update actions/checkout from v2 to v3
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5700,2022-04-25T15:03:09Z,2022-04-26T02:09:43Z,2022-04-26T02:36:14Z,MERGED,True,1,0,1,https://github.com/jbampton,"Avoid triggering CodeQL on the ""push"" event for Dependabot branches",1,[],https://github.com/mruby/mruby/pull/5700,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5700,refs #5699,refs #5699,True,{}
mruby/mruby,https://github.com/mruby/mruby,5701,2022-04-26T03:51:32Z,2022-04-26T08:40:32Z,2022-04-26T08:43:39Z,MERGED,True,8,8,4,https://github.com/jbampton,docs: fix grammar and spelling,1,[],https://github.com/mruby/mruby/pull/5701,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5701,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5702,2022-04-26T06:01:50Z,2022-04-26T08:37:14Z,2022-04-26T08:38:47Z,MERGED,True,2,2,1,https://github.com/jbampton,Update minimum `pre-commit` version to latest `2.18.1`,1,[],https://github.com/mruby/mruby/pull/5702,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5702,"Conda, Homebrew and PyPI all have 2.18.1
https://github.com/pre-commit/pre-commit/releases
https://pypi.org/project/pre-commit/#history
https://formulae.brew.sh/formula/pre-commit
https://anaconda.org/conda-forge/pre-commit
Also run pre-commit autoupdate
https://pre-commit.com/#pre-commit-autoupdate","Conda, Homebrew and PyPI all have 2.18.1
https://github.com/pre-commit/pre-commit/releases
https://pypi.org/project/pre-commit/#history
https://formulae.brew.sh/formula/pre-commit
https://anaconda.org/conda-forge/pre-commit
Also run pre-commit autoupdate
https://pre-commit.com/#pre-commit-autoupdate",True,{}
mruby/mruby,https://github.com/mruby/mruby,5703,2022-05-02T05:37:54Z,2022-05-03T10:27:11Z,2022-05-03T10:27:11Z,MERGED,True,4,2,1,https://github.com/dearblue,Strict acquisition of the `Random` class given by `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5703,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5703,"This is to prevent data corruption of the substituted Random instance.
If the Object::Random constants are redefined to a different MRB_TT_ISTRUCT object class, they can pass mrb_get_args() validation.
The following is an example of how the Array#shuffle method rewrites the data of a non Random instance.
// code.c

#include <mruby.h>
#include <mruby/class.h>
#include <mruby/compile.h>
#include <mruby/istruct.h>

#define EVAL_LIT(MRB, ...) mrb_load_string((MRB), #__VA_ARGS__)

static mrb_value
fake_initialize(mrb_state *mrb, mrb_value self)
{
  char *p = ISTRUCT_PTR(self);

  for (int i = 0; i < ISTRUCT_DATA_SIZE; i++) {
    p[i] = 'A' + i;
  }

  return self;
}

static mrb_value
fake_to_bytes(mrb_state *mrb, mrb_value self)
{
  const char *p = ISTRUCT_PTR(self);
  return mrb_str_new(mrb, p, ISTRUCT_DATA_SIZE);
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();

  struct RClass *fake = mrb_define_class(mrb, ""Fake"", mrb->object_class);
  MRB_SET_INSTANCE_TT(fake, MRB_TT_ISTRUCT);
  mrb_define_method(mrb, fake, ""initialize"", fake_initialize, MRB_ARGS_NONE());
  mrb_define_method(mrb, fake, ""to_bytes"", fake_to_bytes, MRB_ARGS_NONE());

  EVAL_LIT(mrb,
    Random = Fake \n
    fake = Fake.new \n
    p [fake, fake.to_bytes] \n
    p a = (1..10).to_a \n
    p a.shuffle(fake) \n
    p [fake, fake.to_bytes]
  );

  mrb_close(mrb);

  return 0;
}
% `bin/mruby-config --cc --cflags --ldflags` code.c `bin/mruby-config --libs`
% ./a.out
[#<Fake:0x8007d8f20>, ""ABCDEFGHIJKLMNOPQRSTUVWX""]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[1, 7, 8, 10, 2, 6, 9, 3, 4, 5]
[#<Fake:0x8007d8f20>, ""\xe81{\v\fM\xb0D<\x99\xb1V+l\x84\x86QRSTUVWX""]","This is to prevent data corruption of the substituted Random instance.
If the Object::Random constants are redefined to a different MRB_TT_ISTRUCT object class, they can pass mrb_get_args() validation.
The following is an example of how the Array#shuffle method rewrites the data of a non Random instance.
// code.c

#include <mruby.h>
#include <mruby/class.h>
#include <mruby/compile.h>
#include <mruby/istruct.h>

#define EVAL_LIT(MRB, ...) mrb_load_string((MRB), #__VA_ARGS__)

static mrb_value
fake_initialize(mrb_state *mrb, mrb_value self)
{
  char *p = ISTRUCT_PTR(self);

  for (int i = 0; i < ISTRUCT_DATA_SIZE; i++) {
    p[i] = 'A' + i;
  }

  return self;
}

static mrb_value
fake_to_bytes(mrb_state *mrb, mrb_value self)
{
  const char *p = ISTRUCT_PTR(self);
  return mrb_str_new(mrb, p, ISTRUCT_DATA_SIZE);
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();

  struct RClass *fake = mrb_define_class(mrb, ""Fake"", mrb->object_class);
  MRB_SET_INSTANCE_TT(fake, MRB_TT_ISTRUCT);
  mrb_define_method(mrb, fake, ""initialize"", fake_initialize, MRB_ARGS_NONE());
  mrb_define_method(mrb, fake, ""to_bytes"", fake_to_bytes, MRB_ARGS_NONE());

  EVAL_LIT(mrb,
    Random = Fake \n
    fake = Fake.new \n
    p [fake, fake.to_bytes] \n
    p a = (1..10).to_a \n
    p a.shuffle(fake) \n
    p [fake, fake.to_bytes]
  );

  mrb_close(mrb);

  return 0;
}
% `bin/mruby-config --cc --cflags --ldflags` code.c `bin/mruby-config --libs`
% ./a.out
[#<Fake:0x8007d8f20>, ""ABCDEFGHIJKLMNOPQRSTUVWX""]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[1, 7, 8, 10, 2, 6, 9, 3, 4, 5]
[#<Fake:0x8007d8f20>, ""\xe81{\v\fM\xb0D<\x99\xb1V+l\x84\x86QRSTUVWX""]",True,{}
mruby/mruby,https://github.com/mruby/mruby,5703,2022-05-02T05:37:54Z,2022-05-03T10:27:11Z,2022-05-03T10:27:11Z,MERGED,True,4,2,1,https://github.com/dearblue,Strict acquisition of the `Random` class given by `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5703,https://github.com/dearblue,2,https://github.com/mruby/mruby/pull/5703#issuecomment-1114516036,"This is to prevent data corruption of the substituted Random instance.
If the Object::Random constants are redefined to a different MRB_TT_ISTRUCT object class, they can pass mrb_get_args() validation.
The following is an example of how the Array#shuffle method rewrites the data of a non Random instance.
// code.c

#include <mruby.h>
#include <mruby/class.h>
#include <mruby/compile.h>
#include <mruby/istruct.h>

#define EVAL_LIT(MRB, ...) mrb_load_string((MRB), #__VA_ARGS__)

static mrb_value
fake_initialize(mrb_state *mrb, mrb_value self)
{
  char *p = ISTRUCT_PTR(self);

  for (int i = 0; i < ISTRUCT_DATA_SIZE; i++) {
    p[i] = 'A' + i;
  }

  return self;
}

static mrb_value
fake_to_bytes(mrb_state *mrb, mrb_value self)
{
  const char *p = ISTRUCT_PTR(self);
  return mrb_str_new(mrb, p, ISTRUCT_DATA_SIZE);
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();

  struct RClass *fake = mrb_define_class(mrb, ""Fake"", mrb->object_class);
  MRB_SET_INSTANCE_TT(fake, MRB_TT_ISTRUCT);
  mrb_define_method(mrb, fake, ""initialize"", fake_initialize, MRB_ARGS_NONE());
  mrb_define_method(mrb, fake, ""to_bytes"", fake_to_bytes, MRB_ARGS_NONE());

  EVAL_LIT(mrb,
    Random = Fake \n
    fake = Fake.new \n
    p [fake, fake.to_bytes] \n
    p a = (1..10).to_a \n
    p a.shuffle(fake) \n
    p [fake, fake.to_bytes]
  );

  mrb_close(mrb);

  return 0;
}
% `bin/mruby-config --cc --cflags --ldflags` code.c `bin/mruby-config --libs`
% ./a.out
[#<Fake:0x8007d8f20>, ""ABCDEFGHIJKLMNOPQRSTUVWX""]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[1, 7, 8, 10, 2, 6, 9, 3, 4, 5]
[#<Fake:0x8007d8f20>, ""\xe81{\v\fM\xb0D<\x99\xb1V+l\x84\x86QRSTUVWX""]","I was not aware of this until recently.
I should add a note about this to mrb_get_args() in include/mruby.h.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5703,2022-05-02T05:37:54Z,2022-05-03T10:27:11Z,2022-05-03T10:27:11Z,MERGED,True,4,2,1,https://github.com/dearblue,Strict acquisition of the `Random` class given by `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5703,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5703#issuecomment-1115737578,"This is to prevent data corruption of the substituted Random instance.
If the Object::Random constants are redefined to a different MRB_TT_ISTRUCT object class, they can pass mrb_get_args() validation.
The following is an example of how the Array#shuffle method rewrites the data of a non Random instance.
// code.c

#include <mruby.h>
#include <mruby/class.h>
#include <mruby/compile.h>
#include <mruby/istruct.h>

#define EVAL_LIT(MRB, ...) mrb_load_string((MRB), #__VA_ARGS__)

static mrb_value
fake_initialize(mrb_state *mrb, mrb_value self)
{
  char *p = ISTRUCT_PTR(self);

  for (int i = 0; i < ISTRUCT_DATA_SIZE; i++) {
    p[i] = 'A' + i;
  }

  return self;
}

static mrb_value
fake_to_bytes(mrb_state *mrb, mrb_value self)
{
  const char *p = ISTRUCT_PTR(self);
  return mrb_str_new(mrb, p, ISTRUCT_DATA_SIZE);
}

int
main(int argc, char *argv[])
{
  mrb_state *mrb = mrb_open();

  struct RClass *fake = mrb_define_class(mrb, ""Fake"", mrb->object_class);
  MRB_SET_INSTANCE_TT(fake, MRB_TT_ISTRUCT);
  mrb_define_method(mrb, fake, ""initialize"", fake_initialize, MRB_ARGS_NONE());
  mrb_define_method(mrb, fake, ""to_bytes"", fake_to_bytes, MRB_ARGS_NONE());

  EVAL_LIT(mrb,
    Random = Fake \n
    fake = Fake.new \n
    p [fake, fake.to_bytes] \n
    p a = (1..10).to_a \n
    p a.shuffle(fake) \n
    p [fake, fake.to_bytes]
  );

  mrb_close(mrb);

  return 0;
}
% `bin/mruby-config --cc --cflags --ldflags` code.c `bin/mruby-config --libs`
% ./a.out
[#<Fake:0x8007d8f20>, ""ABCDEFGHIJKLMNOPQRSTUVWX""]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[1, 7, 8, 10, 2, 6, 9, 3, 4, 5]
[#<Fake:0x8007d8f20>, ""\xe81{\v\fM\xb0D<\x99\xb1V+l\x84\x86QRSTUVWX""]","Since mrb_const_get() can be used as is, I changed it to be defined as an invisible constant from Ruby.
I think this can be an example for users to use MRB_TT_ISTRUCT.
# I will write a separate document.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5705,2022-05-04T00:31:26Z,2022-05-05T04:04:45Z,2022-05-05T04:04:45Z,MERGED,True,18,10,1,https://github.com/dearblue,Introduce `mrb_stack_extend_adjust()`,1,[],https://github.com/mruby/mruby/pull/5705,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5705,"If necessary, adjust the pointer on the VM stack after mrb_stack_extend().","If necessary, adjust the pointer on the VM stack after mrb_stack_extend().",True,{}
mruby/mruby,https://github.com/mruby/mruby,5706,2022-05-04T03:02:59Z,2022-05-07T12:11:56Z,2022-05-07T12:11:56Z,CLOSED,False,26,1,1,https://github.com/dearblue,Added note on `I` specifier of `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5706,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5706,"I thought it was redundant, so I stopped writing the same content in src/class.c.","I thought it was redundant, so I stopped writing the same content in src/class.c.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5706,2022-05-04T03:02:59Z,2022-05-07T12:11:56Z,2022-05-07T12:11:56Z,CLOSED,False,26,1,1,https://github.com/dearblue,Added note on `I` specifier of `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5706,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5706#issuecomment-1120166040,"I thought it was redundant, so I stopped writing the same content in src/class.c.","Thank you for the detailed note. But issues like #5703 were caused by the mistake of API design introduced by #3251. I should have noticed the issue beforehand. So I decided to remove I specifier altogether from mrb_get_args to reduce the risk. The I specifier behavior has been changed by #5530, so the compatibility was lost anyway.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5706,2022-05-04T03:02:59Z,2022-05-07T12:11:56Z,2022-05-07T12:11:56Z,CLOSED,False,26,1,1,https://github.com/dearblue,Added note on `I` specifier of `mrb_get_args()`,1,[],https://github.com/mruby/mruby/pull/5706,https://github.com/dearblue,3,https://github.com/mruby/mruby/pull/5706#issuecomment-1120199223,"I thought it was redundant, so I stopped writing the same content in src/class.c.","I understand and agree with your decision.
I will also close this PR as it is no longer needed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5707,2022-05-12T11:02:35Z,2022-05-12T22:38:26Z,2022-05-12T22:38:26Z,MERGED,True,16,16,5,https://github.com/mimaki,Merge mruby 3.1.0,24,[],https://github.com/mruby/mruby/pull/5707,https://github.com/mimaki,1,https://github.com/mruby/mruby/pull/5707,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5708,2022-05-17T09:50:06Z,2022-05-17T22:50:01Z,2022-05-17T22:53:14Z,MERGED,True,2,2,1,https://github.com/jbampton,Fix spelling,1,[],https://github.com/mruby/mruby/pull/5708,https://github.com/jbampton,1,https://github.com/mruby/mruby/pull/5708,,,True,{}
mruby/mruby,https://github.com/mruby/mruby,5710,2022-05-17T23:44:52Z,2022-05-19T01:07:07Z,2022-05-19T01:07:47Z,MERGED,True,33,39,1,https://github.com/suetanvil,Fix `conf.gem path:` build_config argument.,1,[],https://github.com/mruby/mruby/pull/5710,https://github.com/suetanvil,1,https://github.com/mruby/mruby/pull/5710,"The mrbgem guide (doc/guides/mrbgems.md) documents the path:
argument for conf.gem as being used to point to the root directory
of a gem when that gem is retrieved via git but is located in a
subdirectory of the checkout.
The actual code does not do this.  Instead, it treats path as (mostly)
identical to the gemdir: argument; that is, it points to a local
directory containing the gem.
This change fixes this by making path: behave as documented.
close #5709","The mrbgem guide (doc/guides/mrbgems.md) documents the path:
argument for conf.gem as being used to point to the root directory
of a gem when that gem is retrieved via git but is located in a
subdirectory of the checkout.
The actual code does not do this.  Instead, it treats path as (mostly)
identical to the gemdir: argument; that is, it points to a local
directory containing the gem.
This change fixes this by making path: behave as documented.
close #5709",True,{}
mruby/mruby,https://github.com/mruby/mruby,5710,2022-05-17T23:44:52Z,2022-05-19T01:07:07Z,2022-05-19T01:07:47Z,MERGED,True,33,39,1,https://github.com/suetanvil,Fix `conf.gem path:` build_config argument.,1,[],https://github.com/mruby/mruby/pull/5710,https://github.com/matz,2,https://github.com/mruby/mruby/pull/5710#issuecomment-1129457363,"The mrbgem guide (doc/guides/mrbgems.md) documents the path:
argument for conf.gem as being used to point to the root directory
of a gem when that gem is retrieved via git but is located in a
subdirectory of the checkout.
The actual code does not do this.  Instead, it treats path as (mostly)
identical to the gemdir: argument; that is, it points to a local
directory containing the gem.
This change fixes this by making path: behave as documented.
close #5709","I don't want to add a file conftest/test_build_config.rb.
if you add close #5709 the issue will be auto closed.",True,{}
mruby/mruby,https://github.com/mruby/mruby,5710,2022-05-17T23:44:52Z,2022-05-19T01:07:07Z,2022-05-19T01:07:47Z,MERGED,True,33,39,1,https://github.com/suetanvil,Fix `conf.gem path:` build_config argument.,1,[],https://github.com/mruby/mruby/pull/5710,https://github.com/suetanvil,3,https://github.com/mruby/mruby/pull/5710#issuecomment-1130319107,"The mrbgem guide (doc/guides/mrbgems.md) documents the path:
argument for conf.gem as being used to point to the root directory
of a gem when that gem is retrieved via git but is located in a
subdirectory of the checkout.
The actual code does not do this.  Instead, it treats path as (mostly)
identical to the gemdir: argument; that is, it points to a local
directory containing the gem.
This change fixes this by making path: behave as documented.
close #5709",Will do.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5710,2022-05-17T23:44:52Z,2022-05-19T01:07:07Z,2022-05-19T01:07:47Z,MERGED,True,33,39,1,https://github.com/suetanvil,Fix `conf.gem path:` build_config argument.,1,[],https://github.com/mruby/mruby/pull/5710,https://github.com/suetanvil,4,https://github.com/mruby/mruby/pull/5710#issuecomment-1130344111,"The mrbgem guide (doc/guides/mrbgems.md) documents the path:
argument for conf.gem as being used to point to the root directory
of a gem when that gem is retrieved via git but is located in a
subdirectory of the checkout.
The actual code does not do this.  Instead, it treats path as (mostly)
identical to the gemdir: argument; that is, it points to a local
directory containing the gem.
This change fixes this by making path: behave as documented.
close #5709",I've amended the commit to remove the file and also added the close tag.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5710,2022-05-17T23:44:52Z,2022-05-19T01:07:07Z,2022-05-19T01:07:47Z,MERGED,True,33,39,1,https://github.com/suetanvil,Fix `conf.gem path:` build_config argument.,1,[],https://github.com/mruby/mruby/pull/5710,https://github.com/matz,5,https://github.com/mruby/mruby/pull/5710#issuecomment-1130899443,"The mrbgem guide (doc/guides/mrbgems.md) documents the path:
argument for conf.gem as being used to point to the root directory
of a gem when that gem is retrieved via git but is located in a
subdirectory of the checkout.
The actual code does not do this.  Instead, it treats path as (mostly)
identical to the gemdir: argument; that is, it points to a local
directory containing the gem.
This change fixes this by making path: behave as documented.
close #5709",Thank you!,True,{}
mruby/mruby,https://github.com/mruby/mruby,5711,2022-05-25T14:08:33Z,2022-05-25T23:03:30Z,2022-05-25T23:03:38Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.9.2 to 4.9.3,1,['dependencies'],https://github.com/mruby/mruby/pull/5711,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5711,"Bumps github/super-linter from 4.9.2 to 4.9.3.

Release notes
Sourced from github/super-linter's releases.

v4.9.3
Changelog

Release 4.9.3 @​admiralAwkbar (#2948)
docs: Update local run docker image with flag to disable check .git @​zdtsw (#2894)
adding hadolint failure threshold to template @​BretFisher (#2916)
Bump scalameta/scalafmt from v3.5.2 to v3.5.3 @​dependabot (#2900)
Bump standard from 16.0.4 to 17.0.0 in /dependencies @​dependabot (#2903)
Bump @​coffeelint/cli from 5.2.6 to 5.2.9 in /dependencies @​dependabot (#2915)
chore: 🤖 eslint support @​react-native-community @​hzz780 (#2918)
Bump golangci/golangci-lint from v1.46.0 to v1.46.2 @​dependabot (#2925)
Bump ansible-compat from 2.0.4 to 2.1.0 in /dependencies/python @​dependabot (#2940)
Bump rich from 12.4.1 to 12.4.3 in /dependencies/python @​dependabot (#2941)
Bump rhysd/actionlint from 1.6.12 to 1.6.13 @​dependabot (#2897)
Bump hashicorp/terraform from 1.1.9 to 1.2.0 @​dependabot (#2927)
Bump stylelint from 14.8.2 to 14.8.3 in /dependencies @​dependabot (#2931)
Bump bobheadxi/deployments from 1.1.0 to 1.2.0 @​dependabot (#2896)
Bump rubocop from 1.29.0 to 1.29.1 in /dependencies @​dependabot (#2898)
Bump alpine/terragrunt from 1.1.9 to 1.2.0 @​dependabot (#2926)
Bump rubocop-rspec from 2.10.0 to 2.11.1 in /dependencies @​dependabot (#2928)
Bump eslint-plugin-vue from 8.7.1 to 9.0.1 in /dependencies @​dependabot (#2929)
Bump eslint-plugin-react from 7.29.4 to 7.30.0 in /dependencies @​dependabot (#2930)
Weekly Python Updates @​github-actions (#2922)
Weekly Python Updates @​github-actions (#2895)
Bump docker/setup-buildx-action from 1.7.0 to 2.0.0 @​dependabot (#2878)
Bump terraform-linters/tflint-bundle from v0.35.0.1 to v0.36.2.0 @​dependabot (#2879)
Bump docker/login-action from 1.14.1 to 2.0.0 @​dependabot (#2880)
Bump yoheimuta/protolint from v0.37.1 to v0.38.1 @​dependabot (#2881)
Bump golangci/golangci-lint from v1.45.2 to v1.46.0 @​dependabot (#2882)
Bump docker/build-push-action from 2.10.0 to 3.0.0 @​dependabot (#2883)
Bump rubocop from 1.28.2 to 1.29.0 in /dependencies @​dependabot (#2884)
Bump stylelint from 14.8.1 to 14.8.2 in /dependencies @​dependabot (#2885)
Bump typescript from 4.6.3 to 4.6.4 in /dependencies @​dependabot (#2886)
Bump eslint-plugin-react-hooks from 4.4.0 to 4.5.0 in /dependencies @​dependabot (#2887)
Bump astroid from 2.11.4 to 2.11.5 in /dependencies/python @​dependabot (#2889)
Remove lockfile when updating deps @​lindluni (#2874)
Weekly Python Updates @​github-actions (#2872)
Bump textlint-rule-terminology from 2.1.5 to 3.0.0 in /dependencies @​parkerbxyz (#2869)
Use canonical method to retrieve Jar file @​lindluni (#2875)
Bump hashicorp/terraform from 1.1.8 to 1.1.9 @​dependabot (#2832)
Bump alpine/terragrunt from 1.1.8 to 1.1.9 @​dependabot (#2830)
Bump eslint-plugin-vue from 8.6.0 to 8.7.1 in /dependencies @​dependabot (#2833)
Bump rubocop from 1.27.0 to 1.28.2 in /dependencies @​dependabot (#2834)
Bump zricethezav/gitleaks from v8.7.1 to v8.8.4 @​dependabot (#2854)
Bump docker/setup-buildx-action from 1.6.0 to 1.7.0 @​dependabot (#2855)
Bump pylint from 2.13.7 to 2.13.8 in /dependencies/python @​dependabot (#2866)
Bump wrapt from 1.14.0 to 1.14.1 in /dependencies/python @​dependabot (#2867)
Bump axios from 0.26.1 to 0.27.2 in /dependencies @​dependabot (#2857)
Bump scalameta/scalafmt from v3.5.1 to v3.5.2 @​dependabot (#2828)
Bump github/codeql-action from 1 to 2 @​dependabot (#2829)
Bump rubocop-rspec from 2.9.0 to 2.10.0 in /dependencies @​dependabot (#2831)



... (truncated)


Commits

431ee78 Release 4.9.3 (#2948)
582549a docs: Update local run docker image with flag to disable check .git (#2894)
422c691 adding hadolint failure threshold to template (#2916)
b6e391a Bump scalameta/scalafmt from v3.5.2 to v3.5.3 (#2900)
1d139ee Bump standard from 16.0.4 to 17.0.0 in /dependencies (#2903)
a3a2966 Bump @​coffeelint/cli from 5.2.6 to 5.2.9 in /dependencies (#2915)
cd8d5b8 chore: 🤖 eslint support @​react-native-community (#2918)
c69c254 Add missing Ansible task names (#2921)
697b413 Bump golangci/golangci-lint from v1.46.0 to v1.46.2 (#2925)
7743238 Bump ansible-compat from 2.0.4 to 2.1.0 in /dependencies/python (#2940)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.9.2 to 4.9.3.

Release notes
Sourced from github/super-linter's releases.

v4.9.3
Changelog

Release 4.9.3 @​admiralAwkbar (#2948)
docs: Update local run docker image with flag to disable check .git @​zdtsw (#2894)
adding hadolint failure threshold to template @​BretFisher (#2916)
Bump scalameta/scalafmt from v3.5.2 to v3.5.3 @​dependabot (#2900)
Bump standard from 16.0.4 to 17.0.0 in /dependencies @​dependabot (#2903)
Bump @​coffeelint/cli from 5.2.6 to 5.2.9 in /dependencies @​dependabot (#2915)
chore: 🤖 eslint support @​react-native-community @​hzz780 (#2918)
Bump golangci/golangci-lint from v1.46.0 to v1.46.2 @​dependabot (#2925)
Bump ansible-compat from 2.0.4 to 2.1.0 in /dependencies/python @​dependabot (#2940)
Bump rich from 12.4.1 to 12.4.3 in /dependencies/python @​dependabot (#2941)
Bump rhysd/actionlint from 1.6.12 to 1.6.13 @​dependabot (#2897)
Bump hashicorp/terraform from 1.1.9 to 1.2.0 @​dependabot (#2927)
Bump stylelint from 14.8.2 to 14.8.3 in /dependencies @​dependabot (#2931)
Bump bobheadxi/deployments from 1.1.0 to 1.2.0 @​dependabot (#2896)
Bump rubocop from 1.29.0 to 1.29.1 in /dependencies @​dependabot (#2898)
Bump alpine/terragrunt from 1.1.9 to 1.2.0 @​dependabot (#2926)
Bump rubocop-rspec from 2.10.0 to 2.11.1 in /dependencies @​dependabot (#2928)
Bump eslint-plugin-vue from 8.7.1 to 9.0.1 in /dependencies @​dependabot (#2929)
Bump eslint-plugin-react from 7.29.4 to 7.30.0 in /dependencies @​dependabot (#2930)
Weekly Python Updates @​github-actions (#2922)
Weekly Python Updates @​github-actions (#2895)
Bump docker/setup-buildx-action from 1.7.0 to 2.0.0 @​dependabot (#2878)
Bump terraform-linters/tflint-bundle from v0.35.0.1 to v0.36.2.0 @​dependabot (#2879)
Bump docker/login-action from 1.14.1 to 2.0.0 @​dependabot (#2880)
Bump yoheimuta/protolint from v0.37.1 to v0.38.1 @​dependabot (#2881)
Bump golangci/golangci-lint from v1.45.2 to v1.46.0 @​dependabot (#2882)
Bump docker/build-push-action from 2.10.0 to 3.0.0 @​dependabot (#2883)
Bump rubocop from 1.28.2 to 1.29.0 in /dependencies @​dependabot (#2884)
Bump stylelint from 14.8.1 to 14.8.2 in /dependencies @​dependabot (#2885)
Bump typescript from 4.6.3 to 4.6.4 in /dependencies @​dependabot (#2886)
Bump eslint-plugin-react-hooks from 4.4.0 to 4.5.0 in /dependencies @​dependabot (#2887)
Bump astroid from 2.11.4 to 2.11.5 in /dependencies/python @​dependabot (#2889)
Remove lockfile when updating deps @​lindluni (#2874)
Weekly Python Updates @​github-actions (#2872)
Bump textlint-rule-terminology from 2.1.5 to 3.0.0 in /dependencies @​parkerbxyz (#2869)
Use canonical method to retrieve Jar file @​lindluni (#2875)
Bump hashicorp/terraform from 1.1.8 to 1.1.9 @​dependabot (#2832)
Bump alpine/terragrunt from 1.1.8 to 1.1.9 @​dependabot (#2830)
Bump eslint-plugin-vue from 8.6.0 to 8.7.1 in /dependencies @​dependabot (#2833)
Bump rubocop from 1.27.0 to 1.28.2 in /dependencies @​dependabot (#2834)
Bump zricethezav/gitleaks from v8.7.1 to v8.8.4 @​dependabot (#2854)
Bump docker/setup-buildx-action from 1.6.0 to 1.7.0 @​dependabot (#2855)
Bump pylint from 2.13.7 to 2.13.8 in /dependencies/python @​dependabot (#2866)
Bump wrapt from 1.14.0 to 1.14.1 in /dependencies/python @​dependabot (#2867)
Bump axios from 0.26.1 to 0.27.2 in /dependencies @​dependabot (#2857)
Bump scalameta/scalafmt from v3.5.1 to v3.5.2 @​dependabot (#2828)
Bump github/codeql-action from 1 to 2 @​dependabot (#2829)
Bump rubocop-rspec from 2.9.0 to 2.10.0 in /dependencies @​dependabot (#2831)



... (truncated)


Commits

431ee78 Release 4.9.3 (#2948)
582549a docs: Update local run docker image with flag to disable check .git (#2894)
422c691 adding hadolint failure threshold to template (#2916)
b6e391a Bump scalameta/scalafmt from v3.5.2 to v3.5.3 (#2900)
1d139ee Bump standard from 16.0.4 to 17.0.0 in /dependencies (#2903)
a3a2966 Bump @​coffeelint/cli from 5.2.6 to 5.2.9 in /dependencies (#2915)
cd8d5b8 chore: 🤖 eslint support @​react-native-community (#2918)
c69c254 Add missing Ansible task names (#2921)
697b413 Bump golangci/golangci-lint from v1.46.0 to v1.46.2 (#2925)
7743238 Bump ansible-compat from 2.0.4 to 2.1.0 in /dependencies/python (#2940)
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
mruby/mruby,https://github.com/mruby/mruby,5713,2022-05-28T02:30:49Z,2022-05-29T13:18:49Z,2022-05-29T13:18:49Z,MERGED,True,11,6,5,https://github.com/dearblue,Introduced `mrb_static_assert_object_size()`,1,[],https://github.com/mruby/mruby/pull/5713,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5713,Asserts the size of the object structure is less than or equal to 6 words.,Asserts the size of the object structure is less than or equal to 6 words.,True,{}
mruby/mruby,https://github.com/mruby/mruby,5716,2022-05-29T02:40:20Z,2022-05-31T02:23:23Z,2022-05-31T02:23:23Z,MERGED,True,1,1,1,https://github.com/dearblue,Check `NULL` for `proc` and `env` in `Kernel#__method__`,1,[],https://github.com/mruby/mruby/pull/5716,https://github.com/dearblue,1,https://github.com/mruby/mruby/pull/5716,Fix #5714,Fix #5714,True,{}
mruby/mruby,https://github.com/mruby/mruby,5717,2022-05-30T14:07:40Z,2022-05-31T02:23:00Z,2022-05-31T02:23:09Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump github/super-linter from 4.9.3 to 4.9.4,1,['dependencies'],https://github.com/mruby/mruby/pull/5717,https://github.com/apps/dependabot,1,https://github.com/mruby/mruby/pull/5717,"Bumps github/super-linter from 4.9.3 to 4.9.4.

Release notes
Sourced from github/super-linter's releases.

v4.9.4
Changelog

4.9.4 @​admiralAwkbar (#2963)
Rubocop 1.30 @​admiralAwkbar (#2964)
Ensure TFLint plugin directory is correctly set @​t-botz (#2960)
Update terrascan to tenable/terrascan:1.15.1 @​codezninja (#2956)
add bicep info @​admiralAwkbar (#2953)

🚀 Features

adding log level @​admiralAwkbar (#2959)

🐛 Bug Fixes

adding log level @​admiralAwkbar (#2959)

See details of all code changes since previous release



Commits

a320804 4.9.4 (#2963)
53ff7db Rubocop 1.30 (#2964)
bb6a68e adding log level (#2959)
ec06627 Ensure TFLint plugin directory is correctly set (#2960)
a425bc8 Update terrascan to tenable/terrascan:1.15.1 (#2956)
a34f330 add bicep info (#2953)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)","Bumps github/super-linter from 4.9.3 to 4.9.4.

Release notes
Sourced from github/super-linter's releases.

v4.9.4
Changelog

4.9.4 @​admiralAwkbar (#2963)
Rubocop 1.30 @​admiralAwkbar (#2964)
Ensure TFLint plugin directory is correctly set @​t-botz (#2960)
Update terrascan to tenable/terrascan:1.15.1 @​codezninja (#2956)
add bicep info @​admiralAwkbar (#2953)

🚀 Features

adding log level @​admiralAwkbar (#2959)

🐛 Bug Fixes

adding log level @​admiralAwkbar (#2959)

See details of all code changes since previous release



Commits

a320804 4.9.4 (#2963)
53ff7db Rubocop 1.30 (#2964)
bb6a68e adding log level (#2959)
ec06627 Ensure TFLint plugin directory is correctly set (#2960)
a425bc8 Update terrascan to tenable/terrascan:1.15.1 (#2956)
a34f330 add bicep info (#2953)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",True,{}
