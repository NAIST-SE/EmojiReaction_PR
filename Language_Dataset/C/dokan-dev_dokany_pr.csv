dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,None,1,https://github.com/dokan-dev/dokany/pull/193,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/193#issuecomment-194504705,,"üëç This had to be done long time before.
Thank you @accorp !!!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,None,3,https://github.com/dokan-dev/dokany/pull/193#issuecomment-194505199,,"I run mirror under debugger, and it shows that exception is ""read of address 0x00000000"" somewhere inside ole32.dll. According to MSDN when Ctrl+C is pressed, default control handler calls ExitProcess(), and it looks like some function from ole32 is not happy to be called after it. I got same crash with direct call to ExitProcess() while volume is mounted.
Anyway, it seems that call to SHChangeNotify() is useless, maybe it should be removed as you was planning to do.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/193#issuecomment-194506635,,"Thank you for your testing @accorp .
I agree with your observations ! ‚ù§Ô∏è
Therefore I will remove it. I just don't know that seems on Win 8/10 it seems that there is no crash, maybe I should just disable it for Win7 ?
What do you think about it ? Have you also only faced the issue on Win7 ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,None,5,https://github.com/dokan-dev/dokany/pull/193#issuecomment-194509240,,"Crash on both Win7 x86 and x64, but not on Win8.1 x86. And I still can't reproduce it on win7 with delphi mirror even with direct call to ExitProcess().",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/193#issuecomment-194509623,,Does you delphi run in a shell as the mirror does ?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,None,7,https://github.com/dokan-dev/dokany/pull/193#issuecomment-194513429,,"Yes, line-to-line translation of C version. But ""delphi"" (i'm actualy using lazarus) has some runtime compiled into executable and it does additional tasks for initialization/finalization/setting callbacks etc. And maybe one of them is fortunately avoiding that crash.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/193#issuecomment-194524698,,"Yes It has to be a story of timing/call order during the uninit.
I have remove it for Win7 df8e4d5
Thank you again @accorp for your input, very appreciate !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,None,9,https://github.com/dokan-dev/dokany/pull/193#issuecomment-195080246,,"Hi @Liryna, I found the reason why delphi mirror is working properly - there is ole32.dll in import table. And I got no more crash after putting dummy call to CoGetCurrentProcess() inside dokan library just to add ole32 to import. But it looks like call to SHChangeNotify() during DLL_PROCESS_DETACH is a bad idea, see DllMain entry point and Dynamic-Link Library Best Practices.
""Calling functions that require DLLs other than Kernel32.dll may result in problems that are difficult to diagnose. For example, calling User, Shell, and COM functions can cause access violation errors, because some functions load other system components. Conversely, calling functions such as these during termination can cause access violation errors because the corresponding component may already have been unloaded or uninitialized.""",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,https://github.com/Liryna,10,https://github.com/dokan-dev/dokany/pull/193#issuecomment-195223101,,"Hi @accorp ,
So If I understood well, even by adding ole32.dll in import table, it is possible that it get unload before we get the change to call SHChangeNotify ?
Or does adding ole32.dll in import table 'force' to unload at the end of DLL_PROCESS_DETACH ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,https://github.com/Liryna,11,https://github.com/dokan-dev/dokany/pull/193#issuecomment-195360704,,"I begin to think that we should just remove it during remove. We are already lucky to not have the crash in other systems.
And It is so much badly documented....that I cannot say if BroadcastSystemMessage does not already to the SHChangeNotify job.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,None,12,https://github.com/dokan-dev/dokany/pull/193#issuecomment-195373209,,"I agree with your decision, looks like adding ole32 into import table keeps it from unloading too fast and solved the problem in this particular case. But it is not guarantee to remain working, at different configurations or after some updates it can start crashing again.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,193,2016-03-09T20:58:21Z,2016-03-09T20:59:23Z,2016-03-11T15:55:20Z,MERGED,True,19,0,1,None,Use control handler function to gracefully close mirror sample on Ctrl+C,1,[],https://github.com/dokan-dev/dokany/pull/193,https://github.com/Liryna,13,https://github.com/dokan-dev/dokany/pull/193#issuecomment-195425677,,"Done with cebf6ca.
If we see users having issue like the device is not removed for explorer or such, we will try to find another way to notify.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,194,2016-03-10T15:07:45Z,2016-03-10T15:22:36Z,2016-03-10T15:22:38Z,MERGED,True,4,4,2,https://github.com/zzhiyi,remove some compiler complaints,1,[],https://github.com/dokan-dev/dokany/pull/194,https://github.com/zzhiyi,1,https://github.com/dokan-dev/dokany/pull/194,gcc in msys2 always complains about implicit pointer conversions and treats them as errors.,gcc in msys2 always complains about implicit pointer conversions and treats them as errors.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,194,2016-03-10T15:07:45Z,2016-03-10T15:22:36Z,2016-03-10T15:22:38Z,MERGED,True,4,4,2,https://github.com/zzhiyi,remove some compiler complaints,1,[],https://github.com/dokan-dev/dokany/pull/194,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/194#issuecomment-194902442,gcc in msys2 always complains about implicit pointer conversions and treats them as errors.,"Hi @x1596357 ,
Thank you for your contribution !
Good luck for vramfs-on-Windows and feel free to ask for adding it to dokan homepage when it is read ^^",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,195,2016-03-11T09:30:48Z,2016-03-11T10:47:29Z,2016-03-11T10:49:14Z,CLOSED,False,37,35,1,https://github.com/zzhiyi,use struct constructor in fuse example,1,[],https://github.com/dokan-dev/dokany/pull/195,https://github.com/zzhiyi,1,https://github.com/dokan-dev/dokany/pull/195,"When fusexmp.c is compiled using msys2 toolchain, it would prompt ""sorry, unimplemented: non-trivial designated initializers not supported"". By using struct constructor, fusexmp.c can be compiled in both msys2 and cygwin.","When fusexmp.c is compiled using msys2 toolchain, it would prompt ""sorry, unimplemented: non-trivial designated initializers not supported"". By using struct constructor, fusexmp.c can be compiled in both msys2 and cygwin.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,195,2016-03-11T09:30:48Z,2016-03-11T10:47:29Z,2016-03-11T10:49:14Z,CLOSED,False,37,35,1,https://github.com/zzhiyi,use struct constructor in fuse example,1,[],https://github.com/dokan-dev/dokany/pull/195,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/195#issuecomment-195287235,"When fusexmp.c is compiled using msys2 toolchain, it would prompt ""sorry, unimplemented: non-trivial designated initializers not supported"". By using struct constructor, fusexmp.c can be compiled in both msys2 and cygwin.","Oh ! you succeed to make it build totally ?
Does it run properly ?
I had some issues for building it with msys2 also and had no time to look into it.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,195,2016-03-11T09:30:48Z,2016-03-11T10:47:29Z,2016-03-11T10:49:14Z,CLOSED,False,37,35,1,https://github.com/zzhiyi,use struct constructor in fuse example,1,[],https://github.com/dokan-dev/dokany/pull/195,https://github.com/zzhiyi,3,https://github.com/dokan-dev/dokany/pull/195#issuecomment-195303873,"When fusexmp.c is compiled using msys2 toolchain, it would prompt ""sorry, unimplemented: non-trivial designated initializers not supported"". By using struct constructor, fusexmp.c can be compiled in both msys2 and cygwin.","Successfully building it both with msys2 and cygwin. I tested running in msys2 and it works.  However there remains some issues not related to this PR, like all file size showed in explorer is 0 but in cmd it is not. I think they are related to the  structs used in dokanfuse.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,195,2016-03-11T09:30:48Z,2016-03-11T10:47:29Z,2016-03-11T10:49:14Z,CLOSED,False,37,35,1,https://github.com/zzhiyi,use struct constructor in fuse example,1,[],https://github.com/dokan-dev/dokany/pull/195,https://github.com/zzhiyi,4,https://github.com/dokan-dev/dokany/pull/195#issuecomment-195315244,"When fusexmp.c is compiled using msys2 toolchain, it would prompt ""sorry, unimplemented: non-trivial designated initializers not supported"". By using struct constructor, fusexmp.c can be compiled in both msys2 and cygwin.","breaks building in Appveyor, I am gonna check why.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,209,2016-03-31T05:07:03Z,2016-03-31T06:45:26Z,2016-03-31T06:45:26Z,MERGED,True,3,3,2,https://github.com/zzhiyi,use _WIN32 in FUSE wrapper headers instead of WIN32,1,[],https://github.com/dokan-dev/dokany/pull/209,https://github.com/zzhiyi,1,https://github.com/dokan-dev/dokany/pull/209,"We should use _WIN32 instead WIN32 in FUSE wrapper headers. _WIN32 is safer.
And more importantly when using these wrapper headers to develop applications, WIN32 is not defined infuse.h#L13when in x64 platform. fuse_win.h needs to be included for later(fuse.h#L448) WIN32 being defined.","We should use _WIN32 instead WIN32 in FUSE wrapper headers. _WIN32 is safer.
And more importantly when using these wrapper headers to develop applications, WIN32 is not defined infuse.h#L13when in x64 platform. fuse_win.h needs to be included for later(fuse.h#L448) WIN32 being defined.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,209,2016-03-31T05:07:03Z,2016-03-31T06:45:26Z,2016-03-31T06:45:26Z,MERGED,True,3,3,2,https://github.com/zzhiyi,use _WIN32 in FUSE wrapper headers instead of WIN32,1,[],https://github.com/dokan-dev/dokany/pull/209,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/209#issuecomment-203786284,"We should use _WIN32 instead WIN32 in FUSE wrapper headers. _WIN32 is safer.
And more importantly when using these wrapper headers to develop applications, WIN32 is not defined infuse.h#L13when in x64 platform. fuse_win.h needs to be included for later(fuse.h#L448) WIN32 being defined.",Thank you @x1596357 for your contribution üëç !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/matepek,1,https://github.com/dokan-dev/dokany/pull/211,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/211#issuecomment-208448128,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Hi @matepek ,
Thank you for your pull request !
I totally understand the behaviour you describe and your implementation seems to do the job üëç
It seems that there is some build issue with cygwin & msys.
In file included from /cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp:3:0:
/cygdrive/c/projects/dokany/dokan_fuse/include/fusemain.h: In constructor Œì√á√øwin_error::win_error(int)Œì√á√ñ:
/cygdrive/c/projects/dokany/dokan_fuse/include/fusemain.h:58:55: error: Œì√á√øerrno_to_ntstatus_errorŒì√á√ñ was not declared in this scope
  win_error(int _err): err(errno_to_ntstatus_error(_err)) {}
                                                       ^

/cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp: In function Œì√á√øNTSTATUS FuseFindFiles(LPCWSTR, PFillFindData, PDOKAN_FILE_INFO)Œì√á√ñ:
/cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp:47:62: error: Œì√á√øerrno_to_ntstatus_errorŒì√á√ñ was not declared in this scope
       impl->find_files(FileName, FillFindData, DokanFileInfo));
                                                              ^

/cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp: In function Œì√á√øNTSTATUS FuseDeleteDirectory(LPCWSTR, PDOKAN_FILE_INFO)Œì√á√ñ:
/cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp:68:54: error: Œì√á√øerrno_to_ntstatus_errorŒì√á√ñ was not declared in this scope
       impl->delete_directory(FileName, DokanFileInfo));
                                                      ^

 ....

https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.0-529/job/i85gs1gwx46ug2ub
Also have you seen in the mirror that in some case you will need admin right and request SE_SECURITY_NAME ?
https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1393",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/211#issuecomment-208526091,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Oh sorry @matepek , the build error are not related to your PR üòÑ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/matepek,4,https://github.com/dokan-dev/dokany/pull/211#issuecomment-208860540,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Hello @Liryna,
You are right, I missed that part, ty. :)
I updated the pull request.
Please review it carefully.
There is a question on the diff already. :)
I choose this solution, to call AddSeSecurityNamePrivilege only if it is necessary, because we don't want more privilege from the user. So according this solution, the FuseGetFileSecurity can fail with STATUS_NOT_ALL_ASSIGNED. It seems acceptable. are you agree?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/matepek,5,https://github.com/dokan-dev/dokany/pull/211#issuecomment-209585789,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Hello @Liryna,
I modified the source.
Do you agree now?
The files are not handled, only directories.
But, an idea just came. We can create a temp file into the user's temp directory, and read the security privileges from it. What do you think about it?
P.S.: Do you want me to compress, the branch history into one commit, as previously?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/211#issuecomment-209589116,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Hi @matepek ,
Yes this should do the work thank you for the changes ! üëç
Does this still make your case work ?
Unfortunately, I don't have access to my env for the moment :'( I will merge it when I can.
A clean history would be welcome yes !
And also add some comment in FuseGetFileSecurity to explain why we do this only for directories.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/matepek,7,https://github.com/dokan-dev/dokany/pull/211#issuecomment-209793457,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Hi @Liryna ,
Yes, it seems, this will do for us.
History has been cleared.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/211#issuecomment-213956479,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Hi @matepek ,
Sorry for the delay !
Everything seems to be alright for me !
I just have a question not related to the PR, care you still able to build the fuse mirror sample and run it correctly ? are you able to read / write files also ?
I have some issue on my side so it would be nice if someone could test it :( I hope there is no regression.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/matepek,9,https://github.com/dokan-dev/dokany/pull/211#issuecomment-214217546,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Hello @Liryna ,
Do you mean fuse mirror sample?
Yess, I also can feel the disturbance in the force.
I haven't enough time to debug it, but I can say:
""mirror.exe /r c:\Users\mate.pek\mirror_it\ /l e /d"" as administrator.
could rw: .txt with notepad++;
could open: .xls (w not tested)
couldn't open: .docx; .pdf
I hope I helped a bit.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/Liryna,10,https://github.com/dokan-dev/dokany/pull/211#issuecomment-214224698,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","I was talking about the fuse mirror in case you had cygwin üòÉ
but thats alright I will try to do the test on my side again",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,211,2016-04-11T15:56:35Z,2016-04-24T13:04:53Z,2016-04-25T09:48:22Z,MERGED,True,144,1,4,https://github.com/matepek,Fuse handles GetFileSecurity callbacks.,1,[],https://github.com/dokan-dev/dokany/pull/211,https://github.com/matepek,11,https://github.com/dokan-dev/dokany/pull/211#issuecomment-214238809,"Creating a new folder with explorer under a sub-folder of the mounted path shows it needs higher privileges.

If we fill it, it will work.
This pull request queries the privileges of the mount path, gives back to every request which occurs.
It was written based on mirror.c.","Oh, totally missed that. ^^",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,214,2016-04-20T21:21:44Z,2016-05-03T13:35:05Z,2016-05-03T13:35:05Z,MERGED,True,11,14,1,https://github.com/marinkobabic,networkdrive fileObject has no Vpb,1,[],https://github.com/dokan-dev/dokany/pull/214,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/214,Fix for REFERENCE_BY_POINTER when NETWORK_DRIVE is used,Fix for REFERENCE_BY_POINTER when NETWORK_DRIVE is used,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,214,2016-04-20T21:21:44Z,2016-05-03T13:35:05Z,2016-05-03T13:35:05Z,MERGED,True,11,14,1,https://github.com/marinkobabic,networkdrive fileObject has no Vpb,1,[],https://github.com/dokan-dev/dokany/pull/214,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/214#issuecomment-216529104,Fix for REFERENCE_BY_POINTER when NETWORK_DRIVE is used,"Hi @marinkobabic ,
Sorry for the delay, I have finally been able to review the PR with @Maxhy .
Your fix work perfectly even if we dont really why this is happening and there is not documentation that seems to give informations about it üò¢
Thanks again for your contribution it is always very appreciate !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,217,2016-04-26T12:05:17Z,2016-04-26T14:13:49Z,2016-04-26T14:13:49Z,MERGED,True,2,1,1,https://github.com/taruti,dokan: null-terminate string in unmount,1,[],https://github.com/dokan-dev/dokany/pull/217,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/217,"Spotted this bug while hunting other issues.
This may have caused invalid input to DeleteVolumeMountPoint in the !IsMountPointDriveLetter case.","Spotted this bug while hunting other issues.
This may have caused invalid input to DeleteVolumeMountPoint in the !IsMountPointDriveLetter case.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,217,2016-04-26T12:05:17Z,2016-04-26T14:13:49Z,2016-04-26T14:13:49Z,MERGED,True,2,1,1,https://github.com/taruti,dokan: null-terminate string in unmount,1,[],https://github.com/dokan-dev/dokany/pull/217,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/217#issuecomment-214758877,"Spotted this bug while hunting other issues.
This may have caused invalid input to DeleteVolumeMountPoint in the !IsMountPointDriveLetter case.","Hi @taruti ,
Well found !
Thank you for you contribution !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,218,2016-04-27T08:35:41Z,2016-04-27T11:25:21Z,2016-04-27T11:25:21Z,MERGED,True,1,1,2,https://github.com/Rondom,FUSE: Fix capitalization to enable cross-compiling from Linux,2,[],https://github.com/dokan-dev/dokany/pull/218,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/218,I fixed two small issues where the capitalization of filenames differed from what was expected. This broke compilation on case-sensitive filesystems i.e. when cross-compiling on Linux.,I fixed two small issues where the capitalization of filenames differed from what was expected. This broke compilation on case-sensitive filesystems i.e. when cross-compiling on Linux.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,218,2016-04-27T08:35:41Z,2016-04-27T11:25:21Z,2016-04-27T11:25:21Z,MERGED,True,1,1,2,https://github.com/Rondom,FUSE: Fix capitalization to enable cross-compiling from Linux,2,[],https://github.com/dokan-dev/dokany/pull/218,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/218#issuecomment-215054427,I fixed two small issues where the capitalization of filenames differed from what was expected. This broke compilation on case-sensitive filesystems i.e. when cross-compiling on Linux.,"Hi @Rondom ,
You are right :) I am only building on Windows so never had such issue.
Thank you for your contribution !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,219,2016-04-28T20:44:32Z,2016-04-28T20:44:36Z,2016-04-28T20:45:43Z,MERGED,True,86,7,3,https://github.com/Liryna,sys - Handle FileFsLabelInformation,1,[],https://github.com/dokan-dev/dokany/pull/219,https://github.com/Liryna,1,https://github.com/dokan-dev/dokany/pull/219,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,231,2016-05-10T19:43:30Z,2016-05-10T19:43:42Z,2016-05-10T19:44:25Z,MERGED,True,724,68,10,https://github.com/Maxhy,Add oplock implementation,1,[],https://github.com/dokan-dev/dokany/pull/231,https://github.com/Maxhy,1,https://github.com/dokan-dev/dokany/pull/231,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/gang929,1,https://github.com/dokan-dev/dokany/pull/242,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","use volname for network drive name
add option use network drive
redefine stat for binary compatible",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/Maxhy,2,https://github.com/dokan-dev/dokany/pull/242#issuecomment-219690072,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","Two remarks:

I think you're setting volume name from registry because you don't want to use UNC here or didn't registered the Network Provider (there is indeed a small today, to setup a custom volume name on network mount point, you have to setup a UNC redirector)? If so, this shouldn't be specific to FUSE but generally available on Dokan Library. But I also believe it would be better to refactor UNC redirector setup logic to avoid to use registry and duplication with Network Provider (be aware of current bug #236 (comment)). What do you think?
When your PR is ready, is better to clean git history to one commit per change compared to base (see https://ariejan.net/2011/07/05/git-squash-your-latests-commits-into-one/).

Thanks @gang929.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/gang929,3,https://github.com/dokan-dev/dokany/pull/242#issuecomment-219704988,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","Because i want use the command line parameter to set the Network Map Drive Name each time, so use the parameter volame for the network drive name. And, I didn't find the code to set the network drive name(""DAV RPC SERVICE"")",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/Maxhy,4,https://github.com/dokan-dev/dokany/pull/242#issuecomment-219815371,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","I updated the wiki to explain better how a network drive label could be setup: https://github.com/dokan-dev/dokany/wiki/API#network-provider
I agree your code to setup drive label from registry could have its interest, but it shouldn't be on fuse library only then.
Otherwise, I'm not sure to understand your binary compatibility change here. I know it is related to #234 but could you explain what the issue is in details and how your changes are fixing it? I don't see the value of these kind of defines here, probably just a lack of knowledge from my side. Thanks.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/gang929,5,https://github.com/dokan-dev/dokany/pull/242#issuecomment-219910819,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","sorry, I  only know very little about network-provider,  I didn't know how to set an UNC Name for Network Redirector, so ,I directly setup drive label from registry.
the dokanctl.exe /i n code can not set unc name with mapping a drive each time
@Maxhy , you can explain more about?  thanks!
about #234
In VS2015(build with x86), the mode_t and nlink_t is 4bytes, but In mingw32, they are 2bytes,  otherwise, the timespec is 16bytes in VS2015, but 8bytes in mingw.  Maybe, the cygwin is same as VS2015.
so, I think the stat should be defined by fixed bytes for all field.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/gang929,6,https://github.com/dokan-dev/dokany/pull/242#issuecomment-219914818,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","the command C:\Program Files\Dokan\Dokan Library-1.0.0\x86>sample\mirror\mirror.exe /r c: /l k /n
will mirror c: to k:, but the label sometimes is DOKAN,
when mirror to other driveletter(I, L, M ...)  sometimes is other unkown name (cg DAV RPC SERVICEÔºå or xx\adfs\cvv)Ôºå it seems that this is a  bug?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/242#issuecomment-219928775,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","@gang929 UNC can be set at the mount: https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1335
About label that sometimes change, can you make a test with the last commit: d3ecfb0
It can probably fix the behaviour. If not, can you describe a way to reproduce it ?
For binary compatibility, I don't understand why you compare visual studio and cygwin. The way it work, if your filesystem is build with cygwin, it has to use the dokan fuse build with cygwin. That's why the dokan installer has VS/Cygwin/msys version of the dokan fuse. With this you will have the same size of stat member no ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/gang929,8,https://github.com/dokan-dev/dokany/pull/242#issuecomment-219932356,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","I rebuild  with the last commit:  d3ecfb0  and test
C:\Program Files\Dokan\Dokan Library-1.0.0\x86>sample\mirror\mirror.exe /r c: /l m /n /u ffff
in windows explorer, it show as

For binary compatibility,  the dokanfuse1.dll build with VS2015,  I build wdfs with dokanfuse1.dll in mingw32.
if define fuse_stat.st_mode/st_nlink/st_atime... as below
     mode_t        st_mode;
     nlink_t       st_nlink;
...
    timestruc_t   st_atim;

so , the sizeof(fuse_stat)  in dokanfuse1.dll  not equal sizeof(fuse_stat) in wdfs, because In VS2015(build with x86), the mode_t and nlink_t is 4bytes, but In mingw32, they are 2bytes, otherwise, the timespec is 16bytes in VS2015, but 8bytes in mingw.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/gang929,9,https://github.com/dokan-dev/dokany/pull/242#issuecomment-220206843,"use volname for network drive name
add option use network drive
redefine stat for binary compatible",@Liryna  how to set unc name or network drive label?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/Liryna,10,https://github.com/dokan-dev/dokany/pull/242#issuecomment-220396186,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","@gang929
UNC:

mirror.exe /r c:\Users /l m /n /u \localhost\mytest

You can acces it by \\localhost\mytest
Network drive label is set by GetVolumeInformation
https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1125",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/gang929,11,https://github.com/dokan-dev/dokany/pull/242#issuecomment-220498409,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","@Liryna
GetVolumeInformation is only  correctly with mirror.exe /r c: /l m, when mirror.exe /r c: /l m /n is display error as",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/Liryna,12,https://github.com/dokan-dev/dokany/pull/242#issuecomment-220960838,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","From my point of view, I don't think we should add network option in libfuse since it does not exist in libfuse.
I will try to reproduce your issue @gang929 with wrong label name using network.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/Maxhy,13,https://github.com/dokan-dev/dokany/pull/242#issuecomment-221556965,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","Ok according to the discussion I will summarize this PR state as following:

Network label name: current method to set network label name is using UNC and proposed registry method should be avoided for now. A buffer related bug seems to exist and should be fixed.
stat64_cygwin structure is incompatible between compilers but this shouldn't be changed. This struct is generally used by fuse fs implementation with system function (eg. lstat), those are also dependent to each compiler (cygwin, msys2, ...). Your fuse fs should link with dokanfuse built with the same compiler.
My opinion about network option on libfuse is that it should indeed be implemented as fuse_config structure doesn't impact fs implementation (and if using Windows only fuse options a #ifdef check could be done).",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,242,2016-05-17T08:04:23Z,2016-05-27T06:16:23Z,2016-05-27T06:16:23Z,CLOSED,False,50,13,3,https://github.com/gang929,fuse:fix stat define and add network drive map,3,[],https://github.com/dokan-dev/dokany/pull/242,https://github.com/Liryna,14,https://github.com/dokan-dev/dokany/pull/242#issuecomment-222068646,"use volname for network drive name
add option use network drive
redefine stat for binary compatible","Hi @gang929 ,
I have import and clean your commit for network drive option: 8e4590c
Thank you again for your contribution and your time !
I have also try to reproduce the issue with the mirror network name üò¢ but impossible to get the same behaviour as you. If you have new informations about it, please open an issue ! ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,251,2016-05-30T17:15:02Z,2016-05-30T18:48:06Z,2016-05-30T18:48:07Z,MERGED,True,1,2,1,https://github.com/Rondom,Call statfs with root directory /,1,[],https://github.com/dokan-dev/dokany/pull/251,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/251,"Instead of calling statfs with an empty string we now call statfs with
the root directory ""/"". This is in line with POSIX which requires the
path to be valid and existing (an empty path is not)
I removed the comment // Why do we need path argument??. The answer to the question is that, on a Unix system, the path is needed to determine which filesystem you want to get the information from, i.e. depending on where the path resides, you would get the information about the filesystem the file/dir is located on.
http://linux.die.net/man/2/statfs","Instead of calling statfs with an empty string we now call statfs with
the root directory ""/"". This is in line with POSIX which requires the
path to be valid and existing (an empty path is not)
I removed the comment // Why do we need path argument??. The answer to the question is that, on a Unix system, the path is needed to determine which filesystem you want to get the information from, i.e. depending on where the path resides, you would get the information about the filesystem the file/dir is located on.
http://linux.die.net/man/2/statfs",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,251,2016-05-30T17:15:02Z,2016-05-30T18:48:06Z,2016-05-30T18:48:07Z,MERGED,True,1,2,1,https://github.com/Rondom,Call statfs with root directory /,1,[],https://github.com/dokan-dev/dokany/pull/251,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/251#issuecomment-222540247,"Instead of calling statfs with an empty string we now call statfs with
the root directory ""/"". This is in line with POSIX which requires the
path to be valid and existing (an empty path is not)
I removed the comment // Why do we need path argument??. The answer to the question is that, on a Unix system, the path is needed to determine which filesystem you want to get the information from, i.e. depending on where the path resides, you would get the information about the filesystem the file/dir is located on.
http://linux.die.net/man/2/statfs","Hi @Rondom ,
Thank you for the contribution and the explanation üëç very appreciate !
About the comment, I just think it is because the dev was meaning that anyway the path is related to the dokan filesystem.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,252,2016-05-31T13:07:40Z,2016-06-02T17:52:04Z,2016-06-02T17:52:04Z,MERGED,True,18,18,2,https://github.com/Rondom,dokan_fuse: Use %ls for wide-character debug-print,2,[],https://github.com/dokan-dev/dokany/pull/252,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/252,"In dokan_fuse debug output the filenames are now printed out using %ls
in order to be compliant with the C++ standard and thus make the
printing work when compiling with GCC/MingW (without the printing would stop after the first character, if the second byte is NULL)
MSVC will happily print a wide-character-string when using %s but will
fail to print out single-byte strings. This has to be kept in mind
when printing out single-byte strings using wide-character fwprintf.
MSVC14 supports defining _CRT_STDIO_ISO_WIDE_SPECIFIERS to bring their
format-string handling in line with the standards.
From what I have read, Microsoft's decision to be not in line with the standard was to simplify compiling the same code-base for both unicode- and non-unicode systems back in the days. They tried to change it with MSVC14, but that was too much of a headache it seems. So I guess that is why now one has to define a macro to enable standard-compliant behaviour.... oh well...
https://blogs.msdn.microsoft.com/vcblog/2014/06/18/c-runtime-crt-features-fixes-and-breaking-changes-in-visual-studio-14-ctp1/
Please test a compile with MSVC if you can (the actual debug-prints, not only the compiling itself). I only tried a test-program to check that the behaviour is as described above on MSVC. I am lacking a driver using dokan_fuse that compiles on MSVC.","In dokan_fuse debug output the filenames are now printed out using %ls
in order to be compliant with the C++ standard and thus make the
printing work when compiling with GCC/MingW (without the printing would stop after the first character, if the second byte is NULL)
MSVC will happily print a wide-character-string when using %s but will
fail to print out single-byte strings. This has to be kept in mind
when printing out single-byte strings using wide-character fwprintf.
MSVC14 supports defining _CRT_STDIO_ISO_WIDE_SPECIFIERS to bring their
format-string handling in line with the standards.
From what I have read, Microsoft's decision to be not in line with the standard was to simplify compiling the same code-base for both unicode- and non-unicode systems back in the days. They tried to change it with MSVC14, but that was too much of a headache it seems. So I guess that is why now one has to define a macro to enable standard-compliant behaviour.... oh well...
https://blogs.msdn.microsoft.com/vcblog/2014/06/18/c-runtime-crt-features-fixes-and-breaking-changes-in-visual-studio-14-ctp1/
Please test a compile with MSVC if you can (the actual debug-prints, not only the compiling itself). I only tried a test-program to check that the behaviour is as described above on MSVC. I am lacking a driver using dokan_fuse that compiles on MSVC.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,252,2016-05-31T13:07:40Z,2016-06-02T17:52:04Z,2016-06-02T17:52:04Z,MERGED,True,18,18,2,https://github.com/Rondom,dokan_fuse: Use %ls for wide-character debug-print,2,[],https://github.com/dokan-dev/dokany/pull/252,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/252#issuecomment-222698088,"In dokan_fuse debug output the filenames are now printed out using %ls
in order to be compliant with the C++ standard and thus make the
printing work when compiling with GCC/MingW (without the printing would stop after the first character, if the second byte is NULL)
MSVC will happily print a wide-character-string when using %s but will
fail to print out single-byte strings. This has to be kept in mind
when printing out single-byte strings using wide-character fwprintf.
MSVC14 supports defining _CRT_STDIO_ISO_WIDE_SPECIFIERS to bring their
format-string handling in line with the standards.
From what I have read, Microsoft's decision to be not in line with the standard was to simplify compiling the same code-base for both unicode- and non-unicode systems back in the days. They tried to change it with MSVC14, but that was too much of a headache it seems. So I guess that is why now one has to define a macro to enable standard-compliant behaviour.... oh well...
https://blogs.msdn.microsoft.com/vcblog/2014/06/18/c-runtime-crt-features-fixes-and-breaking-changes-in-visual-studio-14-ctp1/
Please test a compile with MSVC if you can (the actual debug-prints, not only the compiling itself). I only tried a test-program to check that the behaviour is as described above on MSVC. I am lacking a driver using dokan_fuse that compiles on MSVC.","This needs more investigation and is not ready yet. <== Turns out Eclipse for Windows interprets escapes such as \a, \t and \n in stderr when attached to the process via GDB. This can lead to some longer investigation when your path is \asdf...",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,252,2016-05-31T13:07:40Z,2016-06-02T17:52:04Z,2016-06-02T17:52:04Z,MERGED,True,18,18,2,https://github.com/Rondom,dokan_fuse: Use %ls for wide-character debug-print,2,[],https://github.com/dokan-dev/dokany/pull/252,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/252#issuecomment-223345432,"In dokan_fuse debug output the filenames are now printed out using %ls
in order to be compliant with the C++ standard and thus make the
printing work when compiling with GCC/MingW (without the printing would stop after the first character, if the second byte is NULL)
MSVC will happily print a wide-character-string when using %s but will
fail to print out single-byte strings. This has to be kept in mind
when printing out single-byte strings using wide-character fwprintf.
MSVC14 supports defining _CRT_STDIO_ISO_WIDE_SPECIFIERS to bring their
format-string handling in line with the standards.
From what I have read, Microsoft's decision to be not in line with the standard was to simplify compiling the same code-base for both unicode- and non-unicode systems back in the days. They tried to change it with MSVC14, but that was too much of a headache it seems. So I guess that is why now one has to define a macro to enable standard-compliant behaviour.... oh well...
https://blogs.msdn.microsoft.com/vcblog/2014/06/18/c-runtime-crt-features-fixes-and-breaking-changes-in-visual-studio-14-ctp1/
Please test a compile with MSVC if you can (the actual debug-prints, not only the compiling itself). I only tried a test-program to check that the behaviour is as described above on MSVC. I am lacking a driver using dokan_fuse that compiles on MSVC.",I have now done some brief testing by using my MingW-compile FUSE driver against the MSVC-compiled dokanfuse.dll. The paths were printed correctly.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,252,2016-05-31T13:07:40Z,2016-06-02T17:52:04Z,2016-06-02T17:52:04Z,MERGED,True,18,18,2,https://github.com/Rondom,dokan_fuse: Use %ls for wide-character debug-print,2,[],https://github.com/dokan-dev/dokany/pull/252,https://github.com/Maxhy,4,https://github.com/dokan-dev/dokany/pull/252#issuecomment-223368596,"In dokan_fuse debug output the filenames are now printed out using %ls
in order to be compliant with the C++ standard and thus make the
printing work when compiling with GCC/MingW (without the printing would stop after the first character, if the second byte is NULL)
MSVC will happily print a wide-character-string when using %s but will
fail to print out single-byte strings. This has to be kept in mind
when printing out single-byte strings using wide-character fwprintf.
MSVC14 supports defining _CRT_STDIO_ISO_WIDE_SPECIFIERS to bring their
format-string handling in line with the standards.
From what I have read, Microsoft's decision to be not in line with the standard was to simplify compiling the same code-base for both unicode- and non-unicode systems back in the days. They tried to change it with MSVC14, but that was too much of a headache it seems. So I guess that is why now one has to define a macro to enable standard-compliant behaviour.... oh well...
https://blogs.msdn.microsoft.com/vcblog/2014/06/18/c-runtime-crt-features-fixes-and-breaking-changes-in-visual-studio-14-ctp1/
Please test a compile with MSVC if you can (the actual debug-prints, not only the compiling itself). I only tried a test-program to check that the behaviour is as described above on MSVC. I am lacking a driver using dokan_fuse that compiles on MSVC.","Indeed this is much better.
Thank you for this fix, and thanks a lot for your good explanation üëç.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,255,2016-06-10T12:20:17Z,2016-06-10T12:37:07Z,2016-06-10T12:37:07Z,CLOSED,False,86,86,5,https://github.com/js69,Add NET 4.0 package in bundle and check in MSI and check for RebootPending,22,[],https://github.com/dokan-dev/dokany/pull/255,https://github.com/js69,1,https://github.com/dokan-dev/dokany/pull/255,"See issue #254
Also adds a check for pending reboot after Dokan driver uninstall.","See issue #254
Also adds a check for pending reboot after Dokan driver uninstall.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,255,2016-06-10T12:20:17Z,2016-06-10T12:37:07Z,2016-06-10T12:37:07Z,CLOSED,False,86,86,5,https://github.com/js69,Add NET 4.0 package in bundle and check in MSI and check for RebootPending,22,[],https://github.com/dokan-dev/dokany/pull/255,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/255#issuecomment-225168273,"See issue #254
Also adds a check for pending reboot after Dokan driver uninstall.","Hi @js69 ,
Thank you for your pull request !
Could you please rebase your change and force push ? I am unable to review the pull request with 22 commit and so much changes üò¢",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,256,2016-06-10T13:11:27Z,2016-06-10T13:47:08Z,2016-06-10T13:47:08Z,CLOSED,False,47,0,5,https://github.com/js69,Add NET 4.0 package in bundle and check in MSI and check for RebootPe‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/256,https://github.com/js69,1,https://github.com/dokan-dev/dokany/pull/256,"Add NET 4.0 package in bundle and check in MSI and check for
RebootPending
Rebased on current master.","Add NET 4.0 package in bundle and check in MSI and check for
RebootPending
Rebased on current master.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,257,2016-06-10T13:52:20Z,2016-06-11T12:32:45Z,2016-06-11T12:32:56Z,MERGED,True,55,0,7,https://github.com/js69,"Add NET 4.0 in bundle, add check in MSI and RebootPending check",1,[],https://github.com/dokan-dev/dokany/pull/257,https://github.com/js69,1,https://github.com/dokan-dev/dokany/pull/257,"Add NET 4.0 package in bundle and check in MSI and check for
RebootPending
Rebased on current master, was missing netfx extension.","Add NET 4.0 package in bundle and check in MSI and check for
RebootPending
Rebased on current master, was missing netfx extension.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,257,2016-06-10T13:52:20Z,2016-06-11T12:32:45Z,2016-06-11T12:32:56Z,MERGED,True,55,0,7,https://github.com/js69,"Add NET 4.0 in bundle, add check in MSI and RebootPending check",1,[],https://github.com/dokan-dev/dokany/pull/257,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/257#issuecomment-225189994,"Add NET 4.0 package in bundle and check in MSI and check for
RebootPending
Rebased on current master, was missing netfx extension.","You do not need to close and open a new pull-request for each fix you do to your pull-request.
Simply rebase your local branch and force-push (git push --force) and the pull request will be updated with your updates. The old history will even be preserved by GitHub for reference.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,257,2016-06-10T13:52:20Z,2016-06-11T12:32:45Z,2016-06-11T12:32:56Z,MERGED,True,55,0,7,https://github.com/js69,"Add NET 4.0 in bundle, add check in MSI and RebootPending check",1,[],https://github.com/dokan-dev/dokany/pull/257,https://github.com/js69,3,https://github.com/dokan-dev/dokany/pull/257#issuecomment-225190830,"Add NET 4.0 package in bundle and check in MSI and check for
RebootPending
Rebased on current master, was missing netfx extension.",I'm just avoiding the console as much as possible. What would have been the correct rebase method?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,257,2016-06-10T13:52:20Z,2016-06-11T12:32:45Z,2016-06-11T12:32:56Z,MERGED,True,55,0,7,https://github.com/js69,"Add NET 4.0 in bundle, add check in MSI and RebootPending check",1,[],https://github.com/dokan-dev/dokany/pull/257,https://github.com/Rondom,4,https://github.com/dokan-dev/dokany/pull/257#issuecomment-225201814,"Add NET 4.0 package in bundle and check in MSI and check for
RebootPending
Rebased on current master, was missing netfx extension.","Well, your tree looks clean, so you DID rebase correctly and the branch-name you force-pushed to is also the same for each of the pull-requests. I do not know what you did with the actual pull-requests. Pull-requests are a GitHub proprietary thing. How do you create and close the pull-requests?
https://github.com/dokan-dev/dokany/pulls?utf8=%E2%9C%93&q=is%3Apr+%22Add+NET+4.0+in+bundle%22
I don't know what kind of GUIs there are and which you are using and I am mostly a command-line/Linux guy, so I cannot help you much. I can only describe how my workflow looks like. There are many workflows and I do not consider mine the only correct way to do it.
Prerequisite: Have two remotes configured (the dokan-dev and my own ""rondom"" remote).

Notice some bug or feature I want to implement
Make sure master is the same as dokan-dev/master (git pull + ensure that I do not have any unmerged commits in my local master-branch)
Create new branch myfeaturebug, commit changes
Rebase against latest dokan-dev/master if necessary
Push this branch to Rondom/myfeaturebug
Submit pull-request using the GitHub-Web UI
Do further changes in case they are required
Push those changes. If I have rebased (i.e. rewrote history), the push will fail, because I would overwrite the changes that are in my remote-branch. In this case I will do the force-push and overwrite the old changes in my remote-branch. As far as I know GitHub will still preserve the old commits in the pull requests in case anyone is interested in those.
Changes show up in the existing pull request.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,257,2016-06-10T13:52:20Z,2016-06-11T12:32:45Z,2016-06-11T12:32:56Z,MERGED,True,55,0,7,https://github.com/js69,"Add NET 4.0 in bundle, add check in MSI and RebootPending check",1,[],https://github.com/dokan-dev/dokany/pull/257,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/257#issuecomment-225358356,"Add NET 4.0 package in bundle and check in MSI and check for
RebootPending
Rebased on current master, was missing netfx extension.","Hi @js69 ,
Thank you for your contribution as always, very appreciate ! ‚ù§Ô∏è
This seems to work on my side üòÉ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,258,2016-06-12T18:19:44Z,2016-06-12T18:39:14Z,2016-06-12T18:39:14Z,MERGED,True,9,9,2,https://github.com/js69,Fixes for VC2015Redist 23918,2,[],https://github.com/dokan-dev/dokany/pull/258,https://github.com/js69,1,https://github.com/dokan-dev/dokany/pull/258,"Fix incorrect downloadurl, fix comparison","Fix incorrect downloadurl, fix comparison",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,258,2016-06-12T18:19:44Z,2016-06-12T18:39:14Z,2016-06-12T18:39:14Z,MERGED,True,9,9,2,https://github.com/js69,Fixes for VC2015Redist 23918,2,[],https://github.com/dokan-dev/dokany/pull/258,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/258#issuecomment-225453002,"Fix incorrect downloadurl, fix comparison","Well found @js69  ‚ù§Ô∏è !!!
We plan to make the release 1.0.0 next week so this is very helpful :D !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,260,2016-06-13T09:43:22Z,2016-06-13T20:55:08Z,2016-06-19T21:55:12Z,MERGED,True,25,5,4,https://github.com/Rondom,Installer: Make sure that all updates are installed on Win7,3,[],https://github.com/dokan-dev/dokany/pull/260,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/260,"On Windows 7 and 2008 R2 the installer did not check whether SP1 and KB3033929 are installed which led to confused users like me or #187 or #244. For details see the individual commits.
I will need to do some testing, to test the different combinations. ETA end of this week!","On Windows 7 and 2008 R2 the installer did not check whether SP1 and KB3033929 are installed which led to confused users like me or #187 or #244. For details see the individual commits.
I will need to do some testing, to test the different combinations. ETA end of this week!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,260,2016-06-13T09:43:22Z,2016-06-13T20:55:08Z,2016-06-19T21:55:12Z,MERGED,True,25,5,4,https://github.com/Rondom,Installer: Make sure that all updates are installed on Win7,3,[],https://github.com/dokan-dev/dokany/pull/260,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/260#issuecomment-225563428,"On Windows 7 and 2008 R2 the installer did not check whether SP1 and KB3033929 are installed which led to confused users like me or #187 or #244. For details see the individual commits.
I will need to do some testing, to test the different combinations. ETA end of this week!",üëç Tell me when I can test it !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,260,2016-06-13T09:43:22Z,2016-06-13T20:55:08Z,2016-06-19T21:55:12Z,MERGED,True,25,5,4,https://github.com/Rondom,Installer: Make sure that all updates are installed on Win7,3,[],https://github.com/dokan-dev/dokany/pull/260,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/260#issuecomment-225574714,"On Windows 7 and 2008 R2 the installer did not check whether SP1 and KB3033929 are installed which led to confused users like me or #187 or #244. For details see the individual commits.
I will need to do some testing, to test the different combinations. ETA end of this week!","@Liryna You can test as soon and as much as you want :-) It works on my patched Win 2008 R2.
What should be tested (probably in that order):

without .NET4 (bundle)
with .NET but without SP1 (both MSI and bundle)
with .NET and SP1 but without KB3033929 (both MSI and bundle)
with .NET and SP1 after installation of KB3033929 but before reboot
with .NET, SP1 and KB3033929 (both MSI and bundle)

I do not really feel like testing both 32 and 64 bit. If someone wants to test 32-bit, please go ahead!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,260,2016-06-13T09:43:22Z,2016-06-13T20:55:08Z,2016-06-19T21:55:12Z,MERGED,True,25,5,4,https://github.com/Rondom,Installer: Make sure that all updates are installed on Win7,3,[],https://github.com/dokan-dev/dokany/pull/260,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/260#issuecomment-225705476,"On Windows 7 and 2008 R2 the installer did not check whether SP1 and KB3033929 are installed which led to confused users like me or #187 or #244. For details see the individual commits.
I will need to do some testing, to test the different combinations. ETA end of this week!","Worked for me üëç
Thank you @Rondom for your contributions as always ‚ù§Ô∏è !!!
Well found for Wintrust.dll  check :D",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,260,2016-06-13T09:43:22Z,2016-06-13T20:55:08Z,2016-06-19T21:55:12Z,MERGED,True,25,5,4,https://github.com/Rondom,Installer: Make sure that all updates are installed on Win7,3,[],https://github.com/dokan-dev/dokany/pull/260,https://github.com/Rondom,5,https://github.com/dokan-dev/dokany/pull/260#issuecomment-227020720,"On Windows 7 and 2008 R2 the installer did not check whether SP1 and KB3033929 are installed which led to confused users like me or #187 or #244. For details see the individual commits.
I will need to do some testing, to test the different combinations. ETA end of this week!","Did some tests and it does not work correctly.  Here is why:

Important: When doing a locale-neutral search for a file, you must set the MinVersion property to one revision number lower than the actual version you want to search for. In this example, while we want to find file version 6.0.6001.1751, the MinVersion is set to 6.0.6001.1750. This is because of a quirk in how the Windows Installer matches file versions. More information is available in the Windows Installer documentation.

I have no words for this...",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,260,2016-06-13T09:43:22Z,2016-06-13T20:55:08Z,2016-06-19T21:55:12Z,MERGED,True,25,5,4,https://github.com/Rondom,Installer: Make sure that all updates are installed on Win7,3,[],https://github.com/dokan-dev/dokany/pull/260,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/260#issuecomment-227021243,"On Windows 7 and 2008 R2 the installer did not check whether SP1 and KB3033929 are installed which led to confused users like me or #187 or #244. For details see the individual commits.
I will need to do some testing, to test the different combinations. ETA end of this week!","Oh üò¢
Do we need to reduce the MinVersion so ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,260,2016-06-13T09:43:22Z,2016-06-13T20:55:08Z,2016-06-19T21:55:12Z,MERGED,True,25,5,4,https://github.com/Rondom,Installer: Make sure that all updates are installed on Win7,3,[],https://github.com/dokan-dev/dokany/pull/260,https://github.com/Rondom,7,https://github.com/dokan-dev/dokany/pull/260#issuecomment-227022401,"On Windows 7 and 2008 R2 the installer did not check whether SP1 and KB3033929 are installed which led to confused users like me or #187 or #244. For details see the individual commits.
I will need to do some testing, to test the different combinations. ETA end of this week!","Probably... I really wonder why WiX does not abstract this oddity away...
Also I am seriously interested why it has to be lower and not higher by one...
Here are my results so far. Tested with DokanSetup-1.0.0.3616.exe (Git bbbdbcb)
+----------+-------+-----+-----------+-----------------+---------------+
|OS        | .NET4 | SP1 | KB3033929 | Bundle-Msg      | MSI-Msg       |
|----------+-------+-----+-----------+-----------------+---------------|
| Win7 x86 |   o   |  o  |    o      | No SP1          | No .NET4      |
| Win7 x86 |   x   |  o  |    o      | No SP1          | No SP1        |
| Win7 x86 |   x   |  x  |    o      | No KB3033929 ¬π  | No KB3033929  |
| Win7 x86 |   o   |  x  |    o      | No KB3033929 ¬π  | No .NET 4.0   |
| Win7 x86 |   x   |  x  |   (x)¬≤    | No KB3033929 ¬π  | No KB3033929  |
| Win7 x86 |   x   |  x  |    x      |                 |               |
+----------+-------+-----+-----------+-----------------+---------------+

¬π installs bundled software (.NET 4.0 and runtimes) before failing with missing KB3033929
¬≤ No reboot

None of the error-messages are wrong, but not everything is optimal and one could make the user experience nicer by giving more informative messages by reordering the checks and/or by adding a check for KB3033929 to the bundle (see footnote). I honestly lack the motivation and time for this.  My main goal was that the installer or Dokan does not fail in mysterious ways
As @js69 very nicely put it, supporting such configurations ""is a valiant but somewhat quixotic effort"". So if someone is valiant and wants to improve the user experience and do the required testing (see above), please go ahead ;-)
What I will do is fix the KB3033929-check by submitting a PR and test on Monday or Tuesday.",True,"{'THUMBS_UP': ['https://github.com/Liryna'], 'HEART': ['https://github.com/Liryna']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,263,2016-06-14T13:05:03Z,2016-06-14T13:06:12Z,2016-06-14T13:06:19Z,MERGED,True,3,3,2,https://github.com/js69,Minor fix for VS2015Redist 23918,1,[],https://github.com/dokan-dev/dokany/pull/263,https://github.com/js69,1,https://github.com/dokan-dev/dokany/pull/263,Fix version comparison in MSI,Fix version comparison in MSI,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,263,2016-06-14T13:05:03Z,2016-06-14T13:06:12Z,2016-06-14T13:06:19Z,MERGED,True,3,3,2,https://github.com/js69,Minor fix for VS2015Redist 23918,1,[],https://github.com/dokan-dev/dokany/pull/263,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/263#issuecomment-225874794,Fix version comparison in MSI,üëç  ‚ù§Ô∏è Thank you,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,266,2016-06-20T08:41:14Z,2016-06-25T15:29:39Z,2016-09-13T15:55:08Z,MERGED,True,4,4,2,https://github.com/Rondom,dokan_wix: Fix KB3033929-check,1,[],https://github.com/dokan-dev/dokany/pull/266,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/266,"Not yet tested, don't merge
Due to some oddity, we need to specify a version that is one version
lower than the one we are actually searching for.
References: #260, #244, #187
Quoting WiX-documentation:
Important: When doing a locale-neutral search for a file, you must set
the MinVersion property to one revision number lower than the actual
version you want to search for.","Not yet tested, don't merge
Due to some oddity, we need to specify a version that is one version
lower than the one we are actually searching for.
References: #260, #244, #187
Quoting WiX-documentation:
Important: When doing a locale-neutral search for a file, you must set
the MinVersion property to one revision number lower than the actual
version you want to search for.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,266,2016-06-20T08:41:14Z,2016-06-25T15:29:39Z,2016-09-13T15:55:08Z,MERGED,True,4,4,2,https://github.com/Rondom,dokan_wix: Fix KB3033929-check,1,[],https://github.com/dokan-dev/dokany/pull/266,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/266#issuecomment-228550623,"Not yet tested, don't merge
Due to some oddity, we need to specify a version that is one version
lower than the one we are actually searching for.
References: #260, #244, #187
Quoting WiX-documentation:
Important: When doing a locale-neutral search for a file, you must set
the MinVersion property to one revision number lower than the actual
version you want to search for.",Done tests. Works and detects both missing and installed update correctly.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,266,2016-06-20T08:41:14Z,2016-06-25T15:29:39Z,2016-09-13T15:55:08Z,MERGED,True,4,4,2,https://github.com/Rondom,dokan_wix: Fix KB3033929-check,1,[],https://github.com/dokan-dev/dokany/pull/266,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/266#issuecomment-228550704,"Not yet tested, don't merge
Due to some oddity, we need to specify a version that is one version
lower than the one we are actually searching for.
References: #260, #244, #187
Quoting WiX-documentation:
Important: When doing a locale-neutral search for a file, you must set
the MinVersion property to one revision number lower than the actual
version you want to search for.","Ah @Rondom ! Thank you for your time and contribution as always ‚ù§Ô∏è
very appreciate !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,268,2016-06-20T13:09:42Z,2016-06-20T13:38:10Z,2016-07-15T07:48:57Z,MERGED,True,42,0,2,https://github.com/bailey27,Handle FileIdInformation FileInformationClass requests,1,[],https://github.com/dokan-dev/dokany/pull/268,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/268,"This is a fix for #267
Also fill in FileInternalInformation when handling FileAllInformation.","This is a fix for #267
Also fill in FileInternalInformation when handling FileAllInformation.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,268,2016-06-20T13:09:42Z,2016-06-20T13:38:10Z,2016-07-15T07:48:57Z,MERGED,True,42,0,2,https://github.com/bailey27,Handle FileIdInformation FileInformationClass requests,1,[],https://github.com/dokan-dev/dokany/pull/268,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/268#issuecomment-227144161,"This is a fix for #267
Also fill in FileInternalInformation when handling FileAllInformation.",Thank you @bailey27 ! Very appreciate ! ‚ù§Ô∏è,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,273,2016-07-02T11:15:36Z,2016-07-02T12:37:12Z,2016-07-02T18:49:52Z,MERGED,True,162,10,3,https://github.com/bailey27,SL_OPEN_TARGET_DIRECTORY directory and fcb leak,4,[],https://github.com/dokan-dev/dokany/pull/273,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/273,"These changes are primarily for changing the behavior of creating a file when SL_OPEN_TARGET_DIRECTORY.
This is to fix this bug #249
Now when SL_OPEN_TARGET_DIRECTORY is specified, the driver creates the fcb for the parent dir of the file (instead of for the file itself).  Then it passes the original filename to the dll.  The dll then checks to see if the file exits.  Then the dll opens the parent dir o fthe file.  If the file did not exist but the dir opened successfully, then it sets info to FILE_DOES_NOT_EXIST and returns STATUS_SUCCESS.  Word seems to rely on that behavior.
The changes also fix an fcb and ccb leak and a memory leak of eventContext when an oplock operation fails.  FsRtlOplockFsctrl() was the one observed failing.  Now when DokanDispatchCreate() does _leave early because of an error, it frees the allocated resources that it was leaking before.
Also, some more debug prints were added.
The changes about SL_OPEN_TARGET_DIRECTORY seem to fix the Word problem.  The Word problem was also caused by the fcb leak.  So even though the fix for the fcb leak wasn't needed to fix this bug with Word, it should be there because a leaked fcb can cause all sorts of hard to debug problems.","These changes are primarily for changing the behavior of creating a file when SL_OPEN_TARGET_DIRECTORY.
This is to fix this bug #249
Now when SL_OPEN_TARGET_DIRECTORY is specified, the driver creates the fcb for the parent dir of the file (instead of for the file itself).  Then it passes the original filename to the dll.  The dll then checks to see if the file exits.  Then the dll opens the parent dir o fthe file.  If the file did not exist but the dir opened successfully, then it sets info to FILE_DOES_NOT_EXIST and returns STATUS_SUCCESS.  Word seems to rely on that behavior.
The changes also fix an fcb and ccb leak and a memory leak of eventContext when an oplock operation fails.  FsRtlOplockFsctrl() was the one observed failing.  Now when DokanDispatchCreate() does _leave early because of an error, it frees the allocated resources that it was leaking before.
Also, some more debug prints were added.
The changes about SL_OPEN_TARGET_DIRECTORY seem to fix the Word problem.  The Word problem was also caused by the fcb leak.  So even though the fix for the fcb leak wasn't needed to fix this bug with Word, it should be there because a leaked fcb can cause all sorts of hard to debug problems.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,273,2016-07-02T11:15:36Z,2016-07-02T12:37:12Z,2016-07-02T18:49:52Z,MERGED,True,162,10,3,https://github.com/bailey27,SL_OPEN_TARGET_DIRECTORY directory and fcb leak,4,[],https://github.com/dokan-dev/dokany/pull/273,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/273#issuecomment-230099823,"These changes are primarily for changing the behavior of creating a file when SL_OPEN_TARGET_DIRECTORY.
This is to fix this bug #249
Now when SL_OPEN_TARGET_DIRECTORY is specified, the driver creates the fcb for the parent dir of the file (instead of for the file itself).  Then it passes the original filename to the dll.  The dll then checks to see if the file exits.  Then the dll opens the parent dir o fthe file.  If the file did not exist but the dir opened successfully, then it sets info to FILE_DOES_NOT_EXIST and returns STATUS_SUCCESS.  Word seems to rely on that behavior.
The changes also fix an fcb and ccb leak and a memory leak of eventContext when an oplock operation fails.  FsRtlOplockFsctrl() was the one observed failing.  Now when DokanDispatchCreate() does _leave early because of an error, it frees the allocated resources that it was leaking before.
Also, some more debug prints were added.
The changes about SL_OPEN_TARGET_DIRECTORY seem to fix the Word problem.  The Word problem was also caused by the fcb leak.  So even though the fix for the fcb leak wasn't needed to fix this bug with Word, it should be there because a leaked fcb can cause all sorts of hard to debug problems.","Hi @bailey27 ,
Thank you for your contribution and your time on the issue ! very appreciate ! üëç
Fix office 2010 and handle correctly SL_OPEN_TARGET_DIRECTORY.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,273,2016-07-02T11:15:36Z,2016-07-02T12:37:12Z,2016-07-02T18:49:52Z,MERGED,True,162,10,3,https://github.com/bailey27,SL_OPEN_TARGET_DIRECTORY directory and fcb leak,4,[],https://github.com/dokan-dev/dokany/pull/273,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/273#issuecomment-230102171,"These changes are primarily for changing the behavior of creating a file when SL_OPEN_TARGET_DIRECTORY.
This is to fix this bug #249
Now when SL_OPEN_TARGET_DIRECTORY is specified, the driver creates the fcb for the parent dir of the file (instead of for the file itself).  Then it passes the original filename to the dll.  The dll then checks to see if the file exits.  Then the dll opens the parent dir o fthe file.  If the file did not exist but the dir opened successfully, then it sets info to FILE_DOES_NOT_EXIST and returns STATUS_SUCCESS.  Word seems to rely on that behavior.
The changes also fix an fcb and ccb leak and a memory leak of eventContext when an oplock operation fails.  FsRtlOplockFsctrl() was the one observed failing.  Now when DokanDispatchCreate() does _leave early because of an error, it frees the allocated resources that it was leaking before.
Also, some more debug prints were added.
The changes about SL_OPEN_TARGET_DIRECTORY seem to fix the Word problem.  The Word problem was also caused by the fcb leak.  So even though the fix for the fcb leak wasn't needed to fix this bug with Word, it should be there because a leaked fcb can cause all sorts of hard to debug problems.","@bailey27 , there is two issues reported by coverity:
fileName is free two times when device is read only:

  
    
      dokany/sys/create.c
    
    
         Line 649
      in
      1bf0c58
    
  
  
    

        
          
           ExFreePool(fileName); 
        
    
  



  
    
      dokany/sys/create.c
    
    
         Line 1116
      in
      1bf0c58
    
  
  
    

        
          
           ExFreePool(fileName); 
        
    
  


Also he say that parentDir is never free

  
    
      dokany/sys/create.c
    
    
         Line 1113
      in
      1bf0c58
    
  
  
    

        
          
           if (parentDir) { // SL_OPEN_TARGET_DIRECTORY",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,273,2016-07-02T11:15:36Z,2016-07-02T12:37:12Z,2016-07-02T18:49:52Z,MERGED,True,162,10,3,https://github.com/bailey27,SL_OPEN_TARGET_DIRECTORY directory and fcb leak,4,[],https://github.com/dokan-dev/dokany/pull/273,https://github.com/bailey27,4,https://github.com/dokan-dev/dokany/pull/273#issuecomment-230113669,"These changes are primarily for changing the behavior of creating a file when SL_OPEN_TARGET_DIRECTORY.
This is to fix this bug #249
Now when SL_OPEN_TARGET_DIRECTORY is specified, the driver creates the fcb for the parent dir of the file (instead of for the file itself).  Then it passes the original filename to the dll.  The dll then checks to see if the file exits.  Then the dll opens the parent dir o fthe file.  If the file did not exist but the dir opened successfully, then it sets info to FILE_DOES_NOT_EXIST and returns STATUS_SUCCESS.  Word seems to rely on that behavior.
The changes also fix an fcb and ccb leak and a memory leak of eventContext when an oplock operation fails.  FsRtlOplockFsctrl() was the one observed failing.  Now when DokanDispatchCreate() does _leave early because of an error, it frees the allocated resources that it was leaking before.
Also, some more debug prints were added.
The changes about SL_OPEN_TARGET_DIRECTORY seem to fix the Word problem.  The Word problem was also caused by the fcb leak.  So even though the fix for the fcb leak wasn't needed to fix this bug with Word, it should be there because a leaked fcb can cause all sorts of hard to debug problems.",Thanks for telling me.  I will go fix it.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,273,2016-07-02T11:15:36Z,2016-07-02T12:37:12Z,2016-07-02T18:49:52Z,MERGED,True,162,10,3,https://github.com/bailey27,SL_OPEN_TARGET_DIRECTORY directory and fcb leak,4,[],https://github.com/dokan-dev/dokany/pull/273,https://github.com/bailey27,5,https://github.com/dokan-dev/dokany/pull/273#issuecomment-230114663,"These changes are primarily for changing the behavior of creating a file when SL_OPEN_TARGET_DIRECTORY.
This is to fix this bug #249
Now when SL_OPEN_TARGET_DIRECTORY is specified, the driver creates the fcb for the parent dir of the file (instead of for the file itself).  Then it passes the original filename to the dll.  The dll then checks to see if the file exits.  Then the dll opens the parent dir o fthe file.  If the file did not exist but the dir opened successfully, then it sets info to FILE_DOES_NOT_EXIST and returns STATUS_SUCCESS.  Word seems to rely on that behavior.
The changes also fix an fcb and ccb leak and a memory leak of eventContext when an oplock operation fails.  FsRtlOplockFsctrl() was the one observed failing.  Now when DokanDispatchCreate() does _leave early because of an error, it frees the allocated resources that it was leaking before.
Also, some more debug prints were added.
The changes about SL_OPEN_TARGET_DIRECTORY seem to fix the Word problem.  The Word problem was also caused by the fcb leak.  So even though the fix for the fcb leak wasn't needed to fix this bug with Word, it should be there because a leaked fcb can cause all sorts of hard to debug problems.",I did another pull request.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,274,2016-07-02T18:06:07Z,2016-07-02T18:12:58Z,2016-07-02T18:49:22Z,CLOSED,False,8,8,1,https://github.com/bailey27,fix coverity issues with freeing fileName and parentDir when device is‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/274,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/274,"I moved the getting of the parentDir to after the read-only check to fix the coverity issues it was causing.  This code should have been where it is now, which is right before DokanGetFCB() is called.","I moved the getting of the parentDir to after the read-only check to fix the coverity issues it was causing.  This code should have been where it is now, which is right before DokanGetFCB() is called.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,274,2016-07-02T18:06:07Z,2016-07-02T18:12:58Z,2016-07-02T18:49:22Z,CLOSED,False,8,8,1,https://github.com/bailey27,fix coverity issues with freeing fileName and parentDir when device is‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/274,https://github.com/bailey27,2,https://github.com/dokan-dev/dokany/pull/274#issuecomment-230115007,"I moved the getting of the parentDir to after the read-only check to fix the coverity issues it was causing.  This code should have been where it is now, which is right before DokanGetFCB() is called.",I realized just  now I don't like how it looked (cosmetic). I will fix it and do another pull.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,274,2016-07-02T18:06:07Z,2016-07-02T18:12:58Z,2016-07-02T18:49:22Z,CLOSED,False,8,8,1,https://github.com/bailey27,fix coverity issues with freeing fileName and parentDir when device is‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/274,https://github.com/bailey27,3,https://github.com/dokan-dev/dokany/pull/274#issuecomment-230115650,"I moved the getting of the parentDir to after the read-only check to fix the coverity issues it was causing.  This code should have been where it is now, which is right before DokanGetFCB() is called.",The new pull is there now.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,275,2016-07-02T18:30:30Z,2016-07-02T19:22:15Z,2016-07-02T21:22:50Z,MERGED,True,5,8,1,https://github.com/bailey27,fix coverity issues with freeing fileName and parentDir when device is read-only,2,[],https://github.com/dokan-dev/dokany/pull/275,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/275,"I moved the code down to fix the coverity issue with fileName and parentDir if the device is read-only.
Then I realized I should just merge it with the block below it.  Otherwise there is a redundant check for SL_OPEN_TARGET_DIRECTORY.","I moved the code down to fix the coverity issue with fileName and parentDir if the device is read-only.
Then I realized I should just merge it with the block below it.  Otherwise there is a redundant check for SL_OPEN_TARGET_DIRECTORY.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,275,2016-07-02T18:30:30Z,2016-07-02T19:22:15Z,2016-07-02T21:22:50Z,MERGED,True,5,8,1,https://github.com/bailey27,fix coverity issues with freeing fileName and parentDir when device is read-only,2,[],https://github.com/dokan-dev/dokany/pull/275,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/275#issuecomment-230117762,"I moved the code down to fix the coverity issue with fileName and parentDir if the device is read-only.
Then I realized I should just merge it with the block below it.  Otherwise there is a redundant check for SL_OPEN_TARGET_DIRECTORY.",üëç thank you @bailey27 for the quick fix ! very appreciate !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,275,2016-07-02T18:30:30Z,2016-07-02T19:22:15Z,2016-07-02T21:22:50Z,MERGED,True,5,8,1,https://github.com/bailey27,fix coverity issues with freeing fileName and parentDir when device is read-only,2,[],https://github.com/dokan-dev/dokany/pull/275,https://github.com/bailey27,3,https://github.com/dokan-dev/dokany/pull/275#issuecomment-230118257,"I moved the code down to fix the coverity issue with fileName and parentDir if the device is read-only.
Then I realized I should just merge it with the block below it.  Otherwise there is a redundant check for SL_OPEN_TARGET_DIRECTORY.","There's yet another problem.  As it is, you can't rename files in the root directory.  I'm fixing that now.
All I can say for myself about that is I did run winfstest on m:, and it did not complain.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,276,2016-07-02T21:36:46Z,2016-07-03T05:49:10Z,2016-07-15T07:49:32Z,MERGED,True,19,21,2,https://github.com/bailey27,Fix rename in root dir,2,[],https://github.com/dokan-dev/dokany/pull/276,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/276,"This has to do with SL_OPEN_TARGET_DIRECTORY
Both the the code I added in the driver, and the code that was already there in dokan\create.c for getting the parent directory would turn a path like \foo.txt into an empty string when trying to get the parent directory.
This was preventing files in the root of the mirror fs from being renamed.
I fixed both of them to get \ in that case.
Also, I noticed that dokan\creat.c was returning STATUS_SUCCESS even if opening the parent dir failed.  It shouldn't do that.  It should return success if the parent can be opened but the child does not exist.  It shouldn't return success if the parent cannot be opened.","This has to do with SL_OPEN_TARGET_DIRECTORY
Both the the code I added in the driver, and the code that was already there in dokan\create.c for getting the parent directory would turn a path like \foo.txt into an empty string when trying to get the parent directory.
This was preventing files in the root of the mirror fs from being renamed.
I fixed both of them to get \ in that case.
Also, I noticed that dokan\creat.c was returning STATUS_SUCCESS even if opening the parent dir failed.  It shouldn't do that.  It should return success if the parent can be opened but the child does not exist.  It shouldn't return success if the parent cannot be opened.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,276,2016-07-02T21:36:46Z,2016-07-03T05:49:10Z,2016-07-15T07:49:32Z,MERGED,True,19,21,2,https://github.com/bailey27,Fix rename in root dir,2,[],https://github.com/dokan-dev/dokany/pull/276,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/276#issuecomment-230137067,"This has to do with SL_OPEN_TARGET_DIRECTORY
Both the the code I added in the driver, and the code that was already there in dokan\create.c for getting the parent directory would turn a path like \foo.txt into an empty string when trying to get the parent directory.
This was preventing files in the root of the mirror fs from being renamed.
I fixed both of them to get \ in that case.
Also, I noticed that dokan\creat.c was returning STATUS_SUCCESS even if opening the parent dir failed.  It shouldn't do that.  It should return success if the parent can be opened but the child does not exist.  It shouldn't return success if the parent cannot be opened.",Thank you for the qucik fix @bailey27  ! ‚ù§Ô∏è,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,277,2016-07-03T16:43:39Z,2016-07-03T17:54:08Z,2016-07-04T07:32:18Z,MERGED,True,0,3,1,https://github.com/bailey27,"should not free eventContext, ccb, or fcb if oplock is pending",1,[],https://github.com/dokan-dev/dokany/pull/277,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/277,"I noticed this happening
M:\ echo blah > foo.txt
M:\ del foo.txt
[hang]

The cmd window is hung.  The driver and mirror are still ok.
If I disabled Windows Defender real-time scanning, it didn't happen.
When I fixed the leaks that happened because of leaving early from the failed oplock operation, I also ""fixed"" a non-leak in the case above it, where the the oplock is pending. In that case, the operation is registered as pending, and no additional freeing is necessary or desirable.
Here is the fix","I noticed this happening
M:\ echo blah > foo.txt
M:\ del foo.txt
[hang]

The cmd window is hung.  The driver and mirror are still ok.
If I disabled Windows Defender real-time scanning, it didn't happen.
When I fixed the leaks that happened because of leaving early from the failed oplock operation, I also ""fixed"" a non-leak in the case above it, where the the oplock is pending. In that case, the operation is registered as pending, and no additional freeing is necessary or desirable.
Here is the fix",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,277,2016-07-03T16:43:39Z,2016-07-03T17:54:08Z,2016-07-04T07:32:18Z,MERGED,True,0,3,1,https://github.com/bailey27,"should not free eventContext, ccb, or fcb if oplock is pending",1,[],https://github.com/dokan-dev/dokany/pull/277,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/277#issuecomment-230166094,"I noticed this happening
M:\ echo blah > foo.txt
M:\ del foo.txt
[hang]

The cmd window is hung.  The driver and mirror are still ok.
If I disabled Windows Defender real-time scanning, it didn't happen.
When I fixed the leaks that happened because of leaving early from the failed oplock operation, I also ""fixed"" a non-leak in the case above it, where the the oplock is pending. In that case, the operation is registered as pending, and no additional freeing is necessary or desirable.
Here is the fix","Hi @bailey27 ,
Oh yes, I did not seen :( you are right, this has to be keeped !
Thank you ! üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,280,2016-07-05T20:28:24Z,2016-07-29T08:06:02Z,2016-07-29T08:06:02Z,CLOSED,False,7,1,1,https://github.com/taruti,sys: DokanCompleteQueryVolumeInformation check for NULLs,1,[],https://github.com/dokan-dev/dokany/pull/280,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/280,Does not solve all issues but seems to help a bit.,Does not solve all issues but seems to help a bit.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,280,2016-07-05T20:28:24Z,2016-07-29T08:06:02Z,2016-07-29T08:06:02Z,CLOSED,False,7,1,1,https://github.com/taruti,sys: DokanCompleteQueryVolumeInformation check for NULLs,1,[],https://github.com/dokan-dev/dokany/pull/280,https://github.com/taruti,2,https://github.com/dokan-dev/dokany/pull/280#issuecomment-230704630,Does not solve all issues but seems to help a bit.,Even with #282 in I can hit this with the CCB being NULL.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/282,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230704687,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","Hi @taruti ,
Thank you for your contribution ! üëç
Does this improve one of the issues you are facing ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/marinkobabic,3,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230704926,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280",I will do some small improvements and see if you still can reproduce your issue. Just wait for a new pull request.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/taruti,4,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230705537,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","@Liryna With both this and #280 (CCB is NULL) I am seeing less crashes with the stress test in #230.
#280 seems to be encountered more frequently than this, but this is also encountered sometimes.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/marinkobabic,5,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230722378,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","@taruti
Please can you check if this solves the ccb null problem https://github.com/marinkobabic/dokany/tree/FixNullIReference If we do not understand why is ccb null, we will not be able to fix the issue definitely. But with your help we should be able to identify the source of the problem.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/taruti,6,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230739230,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","With https://github.com/marinkobabic/dokany/tree/FixNullIReference I get a fast crash without good logs.
Tested with example code from #230 and Windows 7.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/marinkobabic,7,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230744741,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","If you put your fix with ccb into FixNullReference code, then you don't have the crash?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/taruti,8,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230749867,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","Still have a crash. I think your patch introduces a new crash. Also with two flags for Mounted/IsUnmounted most of the code checks only one of them.
Does that branch work for you with the example code from #230 on Windows 7?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/marinkobabic,9,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230749944,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","This items can be null, which is fine:

ccb
FsContext2

So the question which of this items is null in your case, when you get the crash:

IrpEntry->FileObject
vcb
vcb->Dcb",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/marinkobabic,10,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230750481,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","Yes it works fine, The problem is that I'm testing on Windows 10 x64 where you don't have this issue?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/taruti,11,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230751012,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","MS used to have VMs for testing IE that included a Windows 7 image. Perhaps those could reproduce this?
Yes, this seems Windows 7 specific.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/marinkobabic,12,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230751720,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","So I will setup Windows 7 x64 üòÑ I agree with your changes but I have no idea why FileObject, vcb or dcb should be null. So I must understand it.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/taruti,13,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230752617,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280",Both 32 and 64 bit win 7 seems to be enough for a crash with the branch.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/marinkobabic,14,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230754011,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280",You can run mirror using the new version without any issues? Only the stress tests causes the driver to fail?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/taruti,15,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230766248,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","In my Windows 7 tests:



Branch
Mirror
Stress test from #230




master
ok
crash


#280
ok
crash less often


#282
ok
crash less often


FixNullIReference branch
crash fast
crash fast



Visual studio additionally warns about the volatile LONG* vs PULONG casts on line 631 and 639 in dokan.h in the FixNullReference branch.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/marinkobabic,16,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230770823,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","have returned wrong state when the volume is not mounted, please can you try again just the mirror?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/taruti,17,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230778191,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280","https://github.com/marinkobabic/dokany/tree/FixNullIReference with the second patch fails to compile:
uninitialized local variable 'ccb' used in volume.c line 197. Is there a commit missing from there?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/marinkobabic,18,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230789012,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280",It‚Äôs fixed,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,282,2016-07-06T08:00:33Z,2016-07-12T13:09:04Z,2016-07-12T13:09:05Z,CLOSED,False,13,4,3,https://github.com/taruti,sys: Add IsUnmounting to the DCB,1,[],https://github.com/dokan-dev/dokany/pull/282,https://github.com/taruti,19,https://github.com/dokan-dev/dokany/pull/282#issuecomment-230792814,"As suggested by @marinkobabic on #272
I can get this to hit occasionally in stress tests.
However this does not replace #280",After the third commit it compiles but crashes instantly when accessing with explorer.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,286,2016-07-08T10:02:30Z,2016-07-08T10:31:03Z,2016-07-08T12:30:01Z,MERGED,True,105,3,6,https://github.com/bailey27,More fs rtl check oplock,2,[],https://github.com/dokan-dev/dokany/pull/286,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/286,"@marinkobabic  said it looks ok now.
#265","@marinkobabic  said it looks ok now.
#265",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,286,2016-07-08T10:02:30Z,2016-07-08T10:31:03Z,2016-07-08T12:30:01Z,MERGED,True,105,3,6,https://github.com/bailey27,More fs rtl check oplock,2,[],https://github.com/dokan-dev/dokany/pull/286,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/286#issuecomment-231328116,"@marinkobabic  said it looks ok now.
#265","Hi @bailey27 ,
Thank you for the contribution üëç looks good to me too !
Well done ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,290,2016-07-18T19:46:38Z,2016-07-18T20:43:29Z,2016-07-21T08:23:20Z,CLOSED,False,36,33,1,https://github.com/bailey27,FileLockInUserMode kernel memory leak fix,6,[],https://github.com/dokan-dev/dokany/pull/290,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/290,This is for #287,This is for #287,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,290,2016-07-18T19:46:38Z,2016-07-18T20:43:29Z,2016-07-21T08:23:20Z,CLOSED,False,36,33,1,https://github.com/bailey27,FileLockInUserMode kernel memory leak fix,6,[],https://github.com/dokan-dev/dokany/pull/290,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/290#issuecomment-233452547,This is for #287,"Thank you @bailey27 for your contribution ! ‚ù§Ô∏è
And well done for seeing it again üëç
(I made a patch and pushed it directly because of the git history of your branch)
42fb8f8",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,296,2016-07-21T13:41:04Z,2016-07-21T14:07:15Z,2016-07-21T14:11:14Z,CLOSED,False,14,10,1,https://github.com/bailey27,Fix case sensitivity fcb,7,[],https://github.com/dokan-dev/dokany/pull/296,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/296,This is about #294,This is about #294,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,297,2016-07-21T14:45:20Z,2016-07-21T16:43:04Z,2016-07-22T19:38:41Z,MERGED,True,14,10,1,https://github.com/bailey27,Do filename comparisons in DokanGetFCB() either case sensitive or not‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/297,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/297,"‚Ä¶ depending on flag SL_CASE_SENSITIVE
This is about #294","‚Ä¶ depending on flag SL_CASE_SENSITIVE
This is about #294",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,297,2016-07-21T14:45:20Z,2016-07-21T16:43:04Z,2016-07-22T19:38:41Z,MERGED,True,14,10,1,https://github.com/bailey27,Do filename comparisons in DokanGetFCB() either case sensitive or not‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/297,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/297#issuecomment-234312289,"‚Ä¶ depending on flag SL_CASE_SENSITIVE
This is about #294","Perfect pull request ! üëç
Thank you @bailey27 !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,300,2016-07-22T20:09:48Z,2016-07-22T20:40:15Z,2016-07-22T21:48:03Z,MERGED,True,6,7,2,https://github.com/bailey27,fix for WriteFile() of length zero byes,2,[],https://github.com/dokan-dev/dokany/pull/300,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/300,"when writing zero bytes, complete irp normally.  also when reading or‚Ä¶ writing zero bytes set Irp->IoStatus.Information = 0
this is about #299","when writing zero bytes, complete irp normally.  also when reading or‚Ä¶ writing zero bytes set Irp->IoStatus.Information = 0
this is about #299",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,302,2016-07-27T21:58:50Z,2016-07-29T00:17:22Z,2016-07-29T08:07:25Z,CLOSED,False,1241,621,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec",1,[],https://github.com/dokan-dev/dokany/pull/302,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/302,"There are a lot of changes. The major change is, when the device has ReferenceCount > 0 it will not be deleted. When ReferenceCount reachs 0 then it will be deleted delayed.","There are a lot of changes. The major change is, when the device has ReferenceCount > 0 it will not be deleted. When ReferenceCount reachs 0 then it will be deleted delayed.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,302,2016-07-27T21:58:50Z,2016-07-29T00:17:22Z,2016-07-29T08:07:25Z,CLOSED,False,1241,621,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec",1,[],https://github.com/dokan-dev/dokany/pull/302,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/302#issuecomment-235869339,"There are a lot of changes. The major change is, when the device has ReferenceCount > 0 it will not be deleted. When ReferenceCount reachs 0 then it will be deleted delayed.","Hi @marinkobabic ,
Thank your for your contribution !
I only got an issue when using the mount manager option /o. The driver letter can no longer is be assigned and the device is still showed on explorer.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,302,2016-07-27T21:58:50Z,2016-07-29T00:17:22Z,2016-07-29T08:07:25Z,CLOSED,False,1241,621,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec",1,[],https://github.com/dokan-dev/dokany/pull/302,https://github.com/marinkobabic,3,https://github.com/dokan-dev/dokany/pull/302#issuecomment-235869872,"There are a lot of changes. The major change is, when the device has ReferenceCount > 0 it will not be deleted. When ReferenceCount reachs 0 then it will be deleted delayed.",Ok. Will check what is there going on.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,302,2016-07-27T21:58:50Z,2016-07-29T00:17:22Z,2016-07-29T08:07:25Z,CLOSED,False,1241,621,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec",1,[],https://github.com/dokan-dev/dokany/pull/302,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/302#issuecomment-235890557,"There are a lot of changes. The major change is, when the device has ReferenceCount > 0 it will not be deleted. When ReferenceCount reachs 0 then it will be deleted delayed.","I have run @taruti #230 (comment) sample without issue (else than memory leak üòÑ ) during 45min without crash.
@taruti did you also try the sample during your test ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,302,2016-07-27T21:58:50Z,2016-07-29T00:17:22Z,2016-07-29T08:07:25Z,CLOSED,False,1241,621,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec",1,[],https://github.com/dokan-dev/dokany/pull/302,https://github.com/taruti,5,https://github.com/dokan-dev/dokany/pull/302#issuecomment-236120135,"There are a lot of changes. The major change is, when the device has ReferenceCount > 0 it will not be deleted. When ReferenceCount reachs 0 then it will be deleted delayed.",Will test on monday and complain if it still exists - many thanks for the fixes.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,303,2016-07-29T00:20:44Z,2016-07-29T07:53:32Z,2016-11-13T16:07:29Z,MERGED,True,1247,620,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec desktop encryption",1,[],https://github.com/dokan-dev/dokany/pull/303,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/303,Here you have the updated pull request which also works using the mountmanager.,Here you have the updated pull request which also works using the mountmanager.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,303,2016-07-29T00:20:44Z,2016-07-29T07:53:32Z,2016-11-13T16:07:29Z,MERGED,True,1247,620,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec desktop encryption",1,[],https://github.com/dokan-dev/dokany/pull/303,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/303#issuecomment-236119763,Here you have the updated pull request which also works using the mountmanager.,"Hi @marinkobabic ,
Thank you, the quick fix work correctly !
Mount managers work correctly now üëç
Does the lock should not be removed here https://github.com/dokan-dev/dokany/pull/303/files#diff-a3d0440cc7bd9a2cd87e16827fe0dfbdR842 ?
QueryDeviceRelations is no longer called, is there a reason for it ? Should we remove the function ?
https://github.com/dokan-dev/dokany/pull/303/files#diff-6225bb782de1b5ff3af319d3add27aa9R51
I cast the Flags to PLONG for fixing warning, is that alright for you ?
https://github.com/dokan-dev/dokany/compare/FixBSOD?expand=1#diff-044fe7c5cc010c659ea4ee15d12dbebeR676
(I failed the merge the patch is currently in FixBSOD branch https://github.com/dokan-dev/dokany/tree/FixBSOD)
Here is a clean diff: https://github.com/dokan-dev/dokany/compare/FixBSOD?expand=1",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,303,2016-07-29T00:20:44Z,2016-07-29T07:53:32Z,2016-11-13T16:07:29Z,MERGED,True,1247,620,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec desktop encryption",1,[],https://github.com/dokan-dev/dokany/pull/303,https://github.com/marinkobabic,3,https://github.com/dokan-dev/dokany/pull/303#issuecomment-236121318,Here you have the updated pull request which also works using the mountmanager.,"IoReleaseRemoveLock(&dcb->RemoveLock, Irp);
must be done because the processing is finished. The lock is just there so that nobody removes the device while we are processing the request.
QueryDeviceRelations did not return proper information and verifier complained about it. If we fix it to work properly, we can keep the function because of later support of pnp.
The cast should be fine.
Thanks
Marinko",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,303,2016-07-29T00:20:44Z,2016-07-29T07:53:32Z,2016-11-13T16:07:29Z,MERGED,True,1247,620,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec desktop encryption",1,[],https://github.com/dokan-dev/dokany/pull/303,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/303#issuecomment-236122495,Here you have the updated pull request which also works using the mountmanager.,"@marinkobabic
  if (IsDeletePending(DeviceObject)) {
    DDbgPrint(""Device is deleted, so go out here \n"");
    IoReleaseRemoveLock(&dcb->RemoveLock, Irp);
    return STATUS_NO_SUCH_DEVICE;
  }

like that ?
I add comment in QueryDeviceRelations therefore üëç
Thanks !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,303,2016-07-29T00:20:44Z,2016-07-29T07:53:32Z,2016-11-13T16:07:29Z,MERGED,True,1247,620,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec desktop encryption",1,[],https://github.com/dokan-dev/dokany/pull/303,https://github.com/marinkobabic,5,https://github.com/dokan-dev/dokany/pull/303#issuecomment-236122900,Here you have the updated pull request which also works using the mountmanager.,"Hi Lyrina
This looks good :)
Thanks
Marinko",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,303,2016-07-29T00:20:44Z,2016-07-29T07:53:32Z,2016-11-13T16:07:29Z,MERGED,True,1247,620,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec desktop encryption",1,[],https://github.com/dokan-dev/dokany/pull/303,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/303#issuecomment-236124839,Here you have the updated pull request which also works using the mountmanager.,"https://github.com/dokan-dev/dokany/compare/FixBSOD?expand=1#diff-0d281a5a20ad484e35eb5d133d0af346R369
CreateFile has been moved to the while but it still return in case of failure https://github.com/dokan-dev/dokany/compare/FixBSOD?expand=1#diff-0d281a5a20ad484e35eb5d133d0af346R387
is this made in purpose ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,303,2016-07-29T00:20:44Z,2016-07-29T07:53:32Z,2016-11-13T16:07:29Z,MERGED,True,1247,620,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec desktop encryption",1,[],https://github.com/dokan-dev/dokany/pull/303,https://github.com/marinkobabic,7,https://github.com/dokan-dev/dokany/pull/303#issuecomment-236125445,Here you have the updated pull request which also works using the mountmanager.,"Hi Lyrina
This is correct. The problem before was, that we had a handle to a removed device, which often caused a BSOD. Here we close the handle and create a new one. If the device is not there, we will have an invalid handle and we will go out.
Thanks
Marinko",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,303,2016-07-29T00:20:44Z,2016-07-29T07:53:32Z,2016-11-13T16:07:29Z,MERGED,True,1247,620,20,https://github.com/marinkobabic,"Fix BSOD mount/unmount, BitDifender, symantec desktop encryption",1,[],https://github.com/dokan-dev/dokany/pull/303,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/303#issuecomment-236125988,Here you have the updated pull request which also works using the mountmanager.,"Thank you @marinkobabic for making this clear and for the valuable contribution üëç !
I will release a RC4 today of it",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,1,https://github.com/dokan-dev/dokany/pull/307,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",True,"{'THUMBS_UP': ['https://github.com/sm4rk0', 'https://github.com/lbguilherme', 'https://github.com/chen1019158260']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,2,https://github.com/dokan-dev/dokany/pull/307#issuecomment-237118103,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Also FUSE hasn't been tested at all.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/307#issuecomment-237141591,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Thank you @Corillian for the pull request!
About unit test there is already some running on appveyor. A big par of the test seems to fail, can you take a look at them?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,4,https://github.com/dokan-dev/dokany/pull/307#issuecomment-237282581,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Compiling FUSE under certain circumstances seems to have failed because the Windows thread pool headers couldn't be located. I don't see any unit tests listed anywhere in the appveyor - only building.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/307#issuecomment-237300863,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Corillian https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.0-683/job/hretil424vy6f45t
At the bottom you will have the output of winfstest and fsx.
https://github.com/Liryna/winfstest?files=1",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,6,https://github.com/dokan-dev/dokany/pull/307#issuecomment-237322207,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Ah ok, cool, thanks! I'll take a look on Monday.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,7,https://github.com/dokan-dev/dokany/pull/307#issuecomment-238745714,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Ok nearly all of the unit tests are passing. In WinFSTest I get a couple of failures for the regular Windows filesystem however it looks with Mirror I have 2 extra failures. FSX seems to be intermittently failing on appveyor, I can only assume it has something to do with async IO however I haven't been able to reproduce the failures on my system yet.
I'll hopefully finish up these last couple of issues next week Monday.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/307#issuecomment-238771028,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","üëç This begin to looks very good !
Can't wait to review it ^^ !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,9,https://github.com/dokan-dev/dokany/pull/307#issuecomment-240822952,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Corillian Just wanted to say that I seen you are creating a project based on some WinFSTest .
I think this is a good idea and it will be more easy to add test from issue reported by users like this !
I will try to give you a hand on it and move all test to the project you created (if you think it is also a good idea).
This is in the long time TODO !",True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,10,https://github.com/dokan-dev/dokany/pull/307#issuecomment-241934355,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",So I am in the middle of Windows security hell. SetFileSecurity keeps failing with ERROR_INVALID_OWNER and I'm not entirely sure why. Documentation for Windows security kind of sucks and I've tried about 1000 different things so I'm starting to run out of ideas. Aside from that I think there's a couple of race conditions in Mirror I need to lock down but everything else is ready to rock and roll. I've also added code that detects FILE_FLAG_BACKUP_SEMANTICS. If I'm not able to get SetFileSecurity sorted out soon I'll probably just commit what I have and see if anybody can think of what could be wrong.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,11,https://github.com/dokan-dev/dokany/pull/307#issuecomment-241934622,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Also the extra weird thing is my code for SetFileSecurity works just fine with my own unit tests. It only fails in the python winfstest unit tests. I'm wondering if it's because it creates a child process and that somehow changes how security is checked. Unfortunately winfstest works fine w/ the regular filesystem so obviously something isn't right in the driver.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,12,https://github.com/dokan-dev/dokany/pull/307#issuecomment-241935008,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",For reference to myself as much as anybody else one thing I haven't tried yet is Get/SetKernelObjectSecurity(). Documentation is available here: https://msdn.microsoft.com/en-us/library/windows/desktop/aa364399(v=vs.85).aspx,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,13,https://github.com/dokan-dev/dokany/pull/307#issuecomment-241935238,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Nevermind you're supposed to use SetSecurityInfo or SetNamedSecurityInfo instead of SetKernelObjectSecurity() which is what I've been using =(.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,14,https://github.com/dokan-dev/dokany/pull/307#issuecomment-242111340,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Does your changes of FILE_FLAG_BACKUP_SEMANTICS flag handle the case describe here #273 ?
FILE_DOES_NOT_EXIST and returns STATUS_SUCCESS when file does not exist but folder can be opened.
Are you still facing issue with filesecurity or it has been fixed with #307 (comment) ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,15,https://github.com/dokan-dev/dokany/pull/307#issuecomment-243561673,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Alright I've done my final commit until you guys have a chance to do a review. Some of the unit tests concerning SetFileSecurity are still failing and I have no idea why. I haven't worked with Windows security all that much, the documentation for it sucks, so hopefully somebody who's more familiar with its nuances can spot what's wrong because at this point I'm running out of time.
Everything else seems to be working fine though it's possible there are some race conditions due to a lack of clarity over which Windows file system functions need to be manually synchronized. Honestly I think we should deprecate Mirror as an example and replace it with an in-memory filesystem that properly emulates all of the functionality. This would save an incredible amount of time trying to figure out how kernel stuff maps back into user space.
Also the new doxygen documentation is a bit broken with this branch since I renamed some of the callback functions to remove conflicts with Windows macros and I also haven't bothered to write the documentation for the new async IO stuff yet. I'll take care of that after the code review is complete.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,16,https://github.com/dokan-dev/dokany/pull/307#issuecomment-243583781,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Thank @Corillian for all this work ! üëç
Right after dokan 1.0.0 release that should come during the next week. I will be happy to review it !
Did you test it with heavy software using the dokan device ? (Visual studio, Office,...)
(FSX seems to still have some issues on appveyor)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,17,https://github.com/dokan-dev/dokany/pull/307#issuecomment-243587169,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",It looks like there's some sort of race condition that FSX exposes. My own local runs of FSX always succeed but I've been running debug versions so maybe I need to try release. I haven't tried Office or Visual Studio. If I have time next week I'll do a bit more testing.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/magol,18,https://github.com/dokan-dev/dokany/pull/307#issuecomment-248604182,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I have not reviewed the details, but this looks to be a substantial improvement of Dokan.
But I do not agree that this is appropriate to be released in version 1.1.0 of Dokan. This is a big breaking changes in the API, and according semver ¬ß8, it should be released in a major version.
As much as I want this to be released as soon as possible, we should wait to version 2.0.0. On the other hand, no one is saying that there must be a long time between version 1.0.0 and 2.0.0 :-)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,19,https://github.com/dokan-dev/dokany/pull/307#issuecomment-248606602,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","This is a big change I agree but as explained here https://github.com/dokan-dev/dokany/wiki/How-to-package-your-application-with-Dokan#dokan-versioning
We us Major api for kernel<->library compatibility break.
If we move to 2.0.0, all applications will need to install a new version of dokan when they could technically use a possible 1.0.0 driver already installed.
But we will see how this is going to happen. I will first create a develop branch for next features and keep the master for hot fix.
@Rondom Your pull request is the next in my TODO üëç I just don't know when will have the time for it",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Rondom,20,https://github.com/dokan-dev/dokany/pull/307#issuecomment-248608133,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I have not looked at the code at all, so my question might sound stupid: How hard would it be to provide a wrapper for the old API? Once the kernel-interface changes and there is a 2.0.0, we could deprecate or remove the old API.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/magol,21,https://github.com/dokan-dev/dokany/pull/307#issuecomment-248613144,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Liryna Then I understand how you think, there are always several ways of looking at things. :-)
It gets a little strange for the users of the API, but it is a disadvantage we have to accept. Your motivation is clearly much stronger.",True,{'HEART': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,22,https://github.com/dokan-dev/dokany/pull/307#issuecomment-250030640,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Hey @Liryna now that 1.0 has been released do you have any idea of when you'll get to the review of this PR? I think the longer we wait the harder it's going to be to merge and fix the couple of outstanding issues with Mirror.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,23,https://github.com/dokan-dev/dokany/pull/307#issuecomment-250076128,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Hey @Corillian !
It is in my todo ! Just has to release a 1.0.1 with the main fix reported (in the next week normally) and I move to your PR ‚ù§Ô∏è !",True,{'THUMBS_UP': ['https://github.com/magol']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/magol,24,https://github.com/dokan-dev/dokany/pull/307#issuecomment-250080840,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Is there any idea to already start to experimenting with a C#  implementation of this?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,25,https://github.com/dokan-dev/dokany/pull/307#issuecomment-250083168,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Not for now üòÉ I will probably need your help on this @magol !,True,{'THUMBS_UP': ['https://github.com/magol']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,26,https://github.com/dokan-dev/dokany/pull/307#issuecomment-250993956,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Hi @Corillian ,
I started to test your PR. I see and feel that it is much faster that‚Äôs for sure üëç
But I am afraid that there is some race conditions üò¢ . I get different errors on software I tested .
Creating and mounting VHD does not work.
I often get the error Insufficient system resources exist to complete the requested service. in difference conditions. Like copy lots of files or try to build a project with VS on the mirror.
I guess this happens when the mirror has issues to allocate thread or such ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,27,https://github.com/dokan-dev/dokany/pull/307#issuecomment-251144534,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Thanks for testing it out @Liryna, I have a couple of questions:

Which C++ project are you trying to compile? I would like to try compiling it myself to replicate your results.
Which VHD are you trying to mount and how are you trying to mount it?
Where are the insufficient resource errors codes being returned? I'm assuming they're coming from the user-mode dokan.dll, are they being generated by calls to DeviceIoControl()?
Did you try disabling USE_ASYNC_IO to see if it made any difference? It's defined at the top of mirror.c.
I don't suppose you gained any additional insight into the best way to handle the outstanding issues with properly setting file security?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,28,https://github.com/dokan-dev/dokany/pull/307#issuecomment-251206927,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Corillian


It is a newly created VS C++ project (not empty with the default option that generates a simple main return 0).


VHD is created from disk management (Action -> Create VHD). It creates a wrong parameter error. It is probably for the same reason that #197 Forget about it for now üòÉ


It seems like it is an error of DeviceIoControl as you said (The c++ VS project build):


Dokan Information: SendEventInformation() with NTSTATUS 0x0, context 0xa9ef6130, and result object 0x0000022CA9ED6C20
Dokan Error: Dokan device result ioctl failed for wait with code 998.

Full logs of the build: test.txt


Same error with USE_ASYNC_IO 0 üò¢


Not for now, I have only time for now to help test sorry üò¢ but I will look into it !


Also, did you rewrite the mount/unmount process ? This seems to be very fast !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,29,https://github.com/dokan-dev/dokany/pull/307#issuecomment-251219479,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Thanks for the info, I don't see any mention of insufficient resources in your log. Error code 998 is ERROR_NOACCESS. Unfortunately there doesn't seem to be much info on the internet about that error code, apparently it can refer to an access problem with the kernel driver or it can also be a more general error code. It seems to have occurred during a large write (~3mb) that requested an increase in buffer size immediately prior to the failed write:
Dokan Information: Requesting write buffer of size 3146074.
My guess is this has something to do with the problem. I'll see if I can reproduce the problem on my end.
Also why on earth does the user-mode driver need to request a larger write buffer? The kernel already knows how big the write buffer needs to be before it forwards the request to the user-mode driver. This seems totally unnecessary to me.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,30,https://github.com/dokan-dev/dokany/pull/307#issuecomment-251220366,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Also, did you rewrite the mount/unmount process ? this seems to be very fast !

Yes =)",True,"{'HOORAY': ['https://github.com/Liryna'], 'HEART': ['https://github.com/Liryna']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,31,https://github.com/dokan-dev/dokany/pull/307#issuecomment-251493820,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Also why on earth does the user-mode driver need to request a larger write buffer? The kernel already knows how big the write buffer needs to be before it forwards the request to the user-mode driver. This seems totally unnecessary to me.

Yes I know...I tought the same when I seen it in dokan the first time üò¢
https://github.com/dokan-dev/dokany/blob/master/dokan/write.c#L62-L63
I will try to make other test with office and such during the weekend.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,32,https://github.com/dokan-dev/dokany/pull/307#issuecomment-252512856,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Corillian I tested Office 2016 and it ""worked"". I go an error at the begining that was not abel to reproduce. It was probably a write issue again.
I continue on other softwaresüëç and will look on the security issue next week.",True,{'THUMBS_UP': ['https://github.com/magol']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Rondom,33,https://github.com/dokan-dev/dokany/pull/307#issuecomment-254527911,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Thanks for the merge :-)
(posting here to make others interested in this PR get notification)",True,{'THUMBS_UP': ['https://github.com/magol']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,34,https://github.com/dokan-dev/dokany/pull/307#issuecomment-254675973,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Liryna I have been unable to reproduce the FSX race condition despite my best efforts thus far. I noticed when I merged with the latest code that there was some additional oplock code in the kernel - do you think it's possible this fixed it? Are you still able to reproduce it?
I'm working on fixing the large buffer write issue - it's taking longer than I had expected because of kernel changes.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,35,https://github.com/dokan-dev/dokany/pull/307#issuecomment-254718654,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Hi @Corillian,
I don't really think the oplock changes did something here but the fsx test now pass....I will try to look and see if I can still reproduce it.
I will get back to you with the result.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,36,https://github.com/dokan-dev/dokany/pull/307#issuecomment-254885953,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Hi @Corillian ,
I am able to reproduce the fsx appveyor error üò¢ . It happen half of the runs.
Fsx output:
C:\Users\liryna\Desktop>fsx.exe -N 5000 M:\test
Using file M:\test
command line: fsx.exe -N 5000 M:\test
Seed set to 1476902197
truncating to largest ever: 0x29340
LOG DUMP (4 total operations):
1: SKIPPED (no operation)
2: SKIPPED (no operation)
3: TRUNCATE UP     from 0x0 (0) to 0x29340 (168768)
4: WRITE           0x388bc (231612) thru 0x3ca4b (248395)       (0x4190 (16784) bytes) HOLE
dowrite: write: Invalid argument
Correct content saved for comparison
(maybe hexdump ""M:\test"" vs ""M:\test.fsxgood"")
Seed was set to 1476902197

fsxmirror.txt
I disabled asynio here for this one:
#define USE_ASYNC_IO 0

C:\Users\liryna\Desktop>fsx.exe -N 5000 M:\test
Using file M:\test
command line: fsx.exe -N 5000 M:\test
Seed set to 1476901685
truncating to largest ever: 0x8078
truncating to largest ever: 0x91dc
LOG DUMP (12 total operations):
1: SKIPPED (no operation)
2: SKIPPED (no operation)
3: SKIPPED (no operation)
4: TRUNCATE UP     from 0x0 (0) to 0x8078 (32888)
5: TRUNCATE UP     from 0x8078 (32888) to 0x91dc (37340)
6: MAPWRITE        0x3080 (12416) thru 0x91db (37339)   (0x615c (24924) bytes)
7: WRITE           0x4b58 (19288) thru 0xf633 (63027)   (0xaadc (43740) bytes) EXTEND
8: READ            0x4598 (17816) thru 0x694f (26959)   (0x23b8 (9144) bytes)
9: MAPREAD         0x818 (2072) thru 0xe96f (59759)     (0xe158 (57688) bytes)
10: WRITE           0x38ecc (233164) thru 0x3ca1b (248347)      (0x3b50 (15184) bytes) HOLE
11: READ            0x26654 (157268) thru 0x30073 (196723)      (0x9a20 (39456) bytes)
12: WRITE           0x34568 (214376) thru 0x39027 (233511)      (0x4ac0 (19136) bytes)
dowrite: write: Invalid argument
Correct content saved for comparison
(maybe hexdump ""M:\test"" vs ""M:\test.fsxgood"")
Seed was set to 1476901685


fsxmirror.txt
How can I help you on this ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,37,https://github.com/dokan-dev/dokany/pull/307#issuecomment-255831890,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Corillian I just tested your last changes and was able to run fsx with more than 100k operations without issues üëç Very good work !
Seems like you rewrote the write operation kernel side also. Is that a breaking change ?
I know that I said I will look on security descriptor issues and it is still planned. I just would like to finish this pending task for the 1.0.1 before.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,38,https://github.com/dokan-dev/dokany/pull/307#issuecomment-255838752,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Ok I have fixed the issues with large writes and I've also greatly simplified the code. Previously large writes worked like this:

Kernel check if the write is ""large"".
If no then normal write processing ensues. If yes then special handling is performed and a write IRP is created for the user driver.
User driver checks if a write is ""large"".
If no then normal write processing ensues. If yes then allocate extra memory and send a special write event to the kernel.
The kernel performed voodoo black magic to reconcile the original and new ioctl messages and returned the full write buffer.
Profit

The new large write logic:

The kernel checks if the incoming ioctl buffer is large enough to handle the outgoing buffer.
If yes normal logic ensues. If no then the input buffer is checked to see if it is at least large enough to hold the event information. If yes then the event information is returned with an ERROR_MORE_DATA. If no then nothing is copied and the driver returns ERROR_INSUFFICIENT_BUFFER.
If the user driver receives ERROR_MORE_DATA it reads the event information, allocates a larger buffer, and re-submits the ioctl. Currently it only does this for the write IRP however it can be easily extended to encompass any IRP with the potential for exceeding the default buffer size.
Profit

It should be noted that currently all ioctl's are serialized through a FIFO queue in the kernel - there is no asynchronous processing. Ironically prior to my async IO changes it was possible to have multiple ioctl's in flight in the user driver due to multiple dedicated threads which meant ioctl messages could begin processing out of order. In practice this probably didn't happen often since the kernel still dequeued them in-order and each thread was blocking for the processing of its respective ioctl message and its response ioctl.
With my new implementation there's only ever a single dequeu ioctl in flight at any given moment however all processing of the ioctl's, including the responses, is asynchronous. If a large write is received the larger buffer is allocated and the ioctl is re-submitted. Since there is no other thread with ioctl's in flight this guarantees that the allocated buffer will in fact receive the large write message it was allocated to handle. If this ever changes the current code should still work though it could result in multiple threads each allocating the large buffer and racing to be the one that actually successfully receives the large write message. The losing thread would still get a valid message to process, it just would have unnecessarily allocated extra memory. This could be mitigated by ensuring the ioctl message contains an ID that could be passed back to the kernel during the re-submission. Special care would need to be taken to handle the possibility of a race condition to ensure the driver returns a proper error code to the user driver if a thread requests to process an ioctl message with an ID that has already been dequeued. I believe this is actually what the old code was doing except it was using a different ioctl message type and looking up the original IRP.
@Liryna wonderful! I had a sneaking suspicion this commit might fix our issues with FSX though since I never had any problems with FSX I wasn't 100% sure. Yes unfortunately my changes to write handling are breaking changes. It's possible that there was in fact a race condition. As explained above the old code most likely would rarely hit it (though it was still possible) due to all of the blocking. I think what was happening with my new code is that it would receive a large write message, send the request back to the kernel for a larger buffer, and while waiting continue processing other ioctl messages. This would allow for multiple IO operations to begin processing before the large write message was returned. With my new changes the FIFO order out of the kernel is maintained even though the actual processing is asynchronous.
The part I still don't have enough information about is the original APC's into the kernel. Does the OS synchronize all APC's for a file or a file handle before being issued or are all APC's asynchronous based on available cores, scheduling, and first come first serve? Dokan's kernel driver is currently serializing them into the queue but is that just a coincidence of how the original author decided to implement it or was it done deliberately to ensure order of processing? I'm not fully aware of what synchronization guarantees need to be made by the driver.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,39,https://github.com/dokan-dev/dokany/pull/307#issuecomment-256327663,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Corillian Your write changes seem to be much cleaner than previous version and give other possibilities like you said üëç I agree with it.
I am just wondering by your explanation if the big overlapped write are correctly handled ? I mean if there is ioctl request to create a big buffer, does still will work properly ? Or this is exactly the case you are talking ? (Since there is no other thread with ioctl's in flight this guarantees that the allocated buffer will in fact receive the large write message it was allocated to handle.)
About APC, there is this page that explains a ""little"" https://msdn.microsoft.com/fr-fr/library/windows/desktop/ms681951(v=vs.85).aspx
From what I saw, important IRP (Create, cleanup & close) are synced. It will wait that create is finished before calling other irps and close will always be at the end when other irps are completed. But for other irps like read/write, they can be made in the same time on the same handle (overlapped read/write are the best examples). You can even have them after the cleanup as you seen.
I hope I understood correctly your question ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,40,https://github.com/dokan-dev/dokany/pull/307#issuecomment-257332076,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I am just wondering by your explanation if the big overlapped write are correctly handled ? I mean if there is ioctl request to create a big buffer, does still will work properly ? Or this is exactly the case you are talking ? (Since there is no other thread with ioctl's in flight this guarantees that the allocated buffer will in fact receive the large write message it was allocated to handle.)

This is what I was talking about. Since all of the kernel APC's get serialized into a queue if the client (dokan.dll) only ever has a single pending ioctl then the dequeue operations are guaranteed to be serial. This means when the new large buffer is allocated and re-sends the ioctl it will attempt to read the same packet. I have tested this with large writes and my tests were successful.
Unfortunately with this design the rate that APC's are enqueued and then dequeued by the ioctl's will be the primary bottleneck. There doesn't seem to be any good way around this outside of directly forwarding kernel APC's to the user mode driver - I don't know if that's possible? If it is I suspect it would require sweeping changes to both the kernel and the user mode driver.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,41,https://github.com/dokan-dev/dokany/pull/307#issuecomment-257400234,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I don't think there is another way to communicate with the kernel üò¢
Another possibility would be to create multiple fake device for each file but I don't think we will win speed here by doing this.
At least here with your contribution @Corillian there is no more thread limitation üëç and that something huge !
I was wondering if your changes we can make STATUS_PENDING return automatically easily if the associate user thread is still busy ? In another word, remove DokanResetTimeout.
I will look at the security issue tomorrow üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,42,https://github.com/dokan-dev/dokany/pull/307#issuecomment-257590762,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Hi @Corillian ,
I have updated winfstest https://github.com/Liryna/winfstest. It now shows the
C:\Users\liryna\Desktop\winfstest\TestSuite\t\base\10.t
not ok 2 - expect ""GetFileSecurity 4cd45fc7 DACL_SECURITY_INFORMATION"" <lambda> - result [{'Sddl': 'D:AI(A;ID;FA;;;WD)(A;ID;FA;;;BU)(A;ID;FA;;;SY)(A;ID;FA;;;BA)'}]
not ok 10 - expect ""DeleteFile 4cd45fc7"" 0 - got ERROR_ACCESS_DENIED
not ok 11 - expect ""CreateDirectory 4cd45fc7 D:P(A;;GA;;;WD)"" 0 - got ERROR_ALREADY_EXISTS
not ok 12 - expect ""GetFileSecurity 4cd45fc7 DACL_SECURITY_INFORMATION"" 0 - got ERROR_ACCESS_DENIED
not ok 13 - expect ""SetFileSecurity 4cd45fc7 DACL_SECURITY_INFORMATION D:P(A;;GA;;;WD)(A;;GR;;;SY)"" 0 - got ERROR_ACCESS_DENIED
not ok 14 - expect ""GetFileSecurity 4cd45fc7 DACL_SECURITY_INFORMATION"" 0 - got ERROR_ACCESS_DENIED
not ok 15 - expect ""RemoveDirectory 4cd45fc7"" 0 - got ERROR_DIRECTORY
not ok 7/15

total ................................. ok 8/15 - not ok 7/15

For not ok 2, this is because current CreateFile previously made does not use the security information parameters like before:
securityAttrib.lpSecurityDescriptor = EventInfo->SecurityContext.AccessState.SecurityDescriptor;

Instead it calls MirrorCreateNewSecurity -> MirrorGetParentSecurity that fail with access denied. Even if MirrorGetParentSecurity could work, we do not set the security information requested during the CreateFile.
When this will be fixed, you will have not ok 10 - expect ""DeleteFile cd13dad6"" 0 - got ERROR_ACCESS_DENIED. cd13dad6 is a file with read access refused for everyone BUT since we get access denied, we should look at the parent folder to see if we have rights to remove.
With this done, all test pass üëç
Your Get & Set Security seems to work perfectly üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,43,https://github.com/dokan-dev/dokany/pull/307#issuecomment-258889895,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Liryna It looks like it is in fact possible to send APC's from the kernel driver to the user driver: http://www.drdobbs.com/inside-nts-asynchronous-procedure-call/184416590
As I suspected it looks like it would require the majority of the kernel and user mode drivers to be completely rewritten. In the user mode driver it also looks like we might have to maintain our own thread pool as threads only receive APC's once they go into an alertable wait state. Needless to say such a thing is outside the scope of this PR and my available time.
As for the security stuff I'll get to that as soon as I can, thanks for following up with it!",True,"{'THUMBS_UP': ['https://github.com/Liryna', 'https://github.com/therealkenc']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,44,https://github.com/dokan-dev/dokany/pull/307#issuecomment-258925577,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Thats good to know üòÉ !
We will probably not make this changes today I agree üëç
Take your time üíã but there is probably already people looking at it and specially if you find a way to ""remove"" DokanResetTimeout",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,45,https://github.com/dokan-dev/dokany/pull/307#issuecomment-258945696,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",My changes could allow for STATUS_PENDING to be returned to the kernel driver though I'm not sure how that would allow for the removal of DokanResetTimeout. Just because it returns STATUS_PENDING doesn't mean it can't enter a state where it never returns a result so I think you would still need to keep the timeouts in the kernel. I did however notice that I didn't update DokanResetTimeout for async IO so I certainly need to do that :p.,True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,46,https://github.com/dokan-dev/dokany/pull/307#issuecomment-258947459,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I had in mind something like the dokan library would ""call"" DokanResetTimeout by himself for each request / thread that is still working and going to hit the timeout.
The timeout should only be here to dismount automatically a device that has no userland FS alive and not a limitation in the process of the request in my point of view. So if you think this could be easily added to your PR it would be nice ‚ù§Ô∏è !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,47,https://github.com/dokan-dev/dokany/pull/307#issuecomment-258951577,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",It can be easily added - my concern is whether or not it would be a good idea! The user driver would have to monitor the job and send keepalive packets in the background. Unfortunately if the packet deadlocked or entered some sort of unrecoverable state the keepalive background worker would have no way of knowing and would continue to send the kernel keepalive messages. I think it really should be up to the implementor of the user mode driver to determine how DokanResetTimeout gets called. From a usability perspective this isn't ideal however the whole point of the timeout is to prevent the kernel from infinitely consuming system resources. Also the current timeout is set to 15 seconds which would require an extraordinarily slow driver to exceed for any one operation.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,48,https://github.com/dokan-dev/dokany/pull/307#issuecomment-258967785,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Well üëç OK you made your point :) 15 seconds is much enough.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Rondom,49,https://github.com/dokan-dev/dokany/pull/307#issuecomment-269048505,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Maybe the detection of a deadlock is over-engineering? I mean even with the new model I could have a bug in my code that continuously resets the timeout while doing nothing.
I am not familiar with how the Windows kernel handles things, but for the case that the process dies, wouldn't we able to detect that because Windows would clean up the file descriptor to the Dokan device? The automatic unmount by timeout is a useful feature for some, but my impression is that it sometimes causes more pain than it helps because people complain about ""sudden unmounts"" when they stress their filesystems.
Some people might even be interested in having all IO-calls block for security reasons (that's the default behaviour for FUSE on Linux) in order to not let any request through in case someone tries to circumvent some restriction by DOSing the Dokan-FS.
What are your thoughts on this? Do you think it's worth opening another issue?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,None,50,https://github.com/dokan-dev/dokany/pull/307#issuecomment-271806479,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Are there any plans to also add fuse_lowlevel.h to the FUSE wrapper? Is this feasible now with asynchronous IO implemented?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Rondom,51,https://github.com/dokan-dev/dokany/pull/307#issuecomment-281628742,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","The state of this PR makes me a bit sad. It is not merged because there is a yet unfixed issue with security descriptors. Unfortunately, I am not qualified enough to know how to fix it. I see master diverging more and more making it more difficult to merge the changes. Maybe developing on this branch for the next major version can accelerate things and give a wider exposure, because people will test pre-release versions? Anyways, this does not solve the actual problem of missing manpower...
@martijnotto If you look closely at the FUSE low-level API you can see that it is quite different from Windows semantics, i.e. it is a bit of work to implement translating between those semantics in a somewhat efficient manner. For instance, Windows works with full paths, while low-level FUSE works worth with the parent-dir (inode) and filename.
Without having tried it, I think this PR might indeed make it possible or at least easier to implement such a wrapper. Finding out how well it works and what other obstacles there are requires one to actually start investigating/trying it.",True,"{'HEART': ['https://github.com/Liryna'], 'THUMBS_UP': ['https://github.com/atanamir']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,52,https://github.com/dokan-dev/dokany/pull/307#issuecomment-281630182,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I agree @Rondom This PR is really great and is missing manpower üò¢
It could really enhance dokan on the speed üëç I have not forgotten it but I have no more free time available to give.
We need someone here. If anyone would it and have the resource to do it, fill free, I would be happy to help and guide.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,None,53,https://github.com/dokan-dev/dokany/pull/307#issuecomment-281657416,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Rondom wouldn't it be enough to simply keep a hashmap of fullpath => inode. I believe that is what the FUSE high level API does too. As to other differences, I have no idea what those are exactly since I am not at all familiar with Windows. I am simply looking at the easiest way to get my app to work on Windows too when it is finished.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Rondom,54,https://github.com/dokan-dev/dokany/pull/307#issuecomment-282717493,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","It would, probably. I expect quite a few edge cases to take care of in general. Not saying that it's impossible, but it might need some time to get something like this completely right.
First, someone needs to fix the last bugs here and get this merged, though...",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,55,https://github.com/dokan-dev/dokany/pull/307#issuecomment-299698029,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Hi @Rondom ,
I have created a new branch and merged @Corillian changes https://github.com/dokan-dev/dokany/tree/Corillian-asyncio
I have not fully tested but the merged seems to have worked üëç I would probably need your help for fuse.
I had some issue to merge f113f74 and I am not sure I did it correctly. Can you just take a look at it ? ‚ù§Ô∏è
I have created this branch to merge all changes of the master into it to keep it update.
Love @Corillian changes ‚ù§Ô∏è speed has really been improved !
I will try to fix the winfstest error when will get more time.",True,"{'HOORAY': ['https://github.com/magol', 'https://github.com/Rondom', 'https://github.com/brunoklein99']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Rondom,56,https://github.com/dokan-dev/dokany/pull/307#issuecomment-299737485,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I have created this branch to merge all changes of the master into it to keep it update.Love @Corillian changes ‚ù§Ô∏è speed has really been improved !

This is great news! Thanks a lot for reviving this branch (and of course thanks again to @Corillian

I had some issue to merge f113f74 and I am not sure I did it correctly. Can you just take a look at it ?

Sure, will do as soon as time allows.
I will also try to work further on our continuous integration scripts to get more tests running and possibly do some baselining against master to see whether there are any regressions. I cannot give a timeframe on that, though.",True,"{'HEART': ['https://github.com/Liryna', 'https://github.com/magol']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,57,https://github.com/dokan-dev/dokany/pull/307#issuecomment-300071950,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","TODO here:

 See if #393 happen
 Check correct merge of f113f74
 @Corillian said I did however notice that I didn't update DokanResetTimeout for async IO so I certainly need to do that :p. This should be changed
 DokanNotify feature is important but need to be adapt to work again
 Remove safe from DokanBroadcastLink https://github.com/dokan-dev/dokany/blob/Corillian-asyncio/dokan/mount.c#L515
 Fix security issues
 Heavy test VS, Word, Office, ... ( @Rondom ifstest ?) .
 Add single thread FUSE option
 Add temporary retro compatibility API 1.x.x
 Update documentation
 Wiki page How to migrate from 1.x.x to 2.x.x
 Update Dokan-DotNet to work with the async API.",True,{'THUMBS_UP': ['https://github.com/magol']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/magol,58,https://github.com/dokan-dev/dokany/pull/307#issuecomment-300101659,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Liryna
I also want to add this to the TODO list:

 Update Dokan-DotNet to work with the async API.

That should of course be at the bottom of the list when the other are fixed. My question is what should be done before there is any idea to start looking at the C# version?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,59,https://github.com/dokan-dev/dokany/pull/307#issuecomment-300102986,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@magol We will need to convert all struct that now holds all operations params.
https://github.com/dokan-dev/dokany/pull/307/files#diff-641844c42f5ba7de1b7fd5347b56b3eeR245
After we just need to change the all operations params foo as barStruct->foo
Even for C# we will probably even not break compatibility if we want. Keep the new changes in the operationProxy.",True,{'THUMBS_UP': ['https://github.com/magol']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/magol,60,https://github.com/dokan-dev/dokany/pull/307#issuecomment-300105968,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Great
If we have to guess vild, what is the time frames? When do we think it's ready enough to start beta testing (and when we can start port Dokan-DotNet)?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Rondom,61,https://github.com/dokan-dev/dokany/pull/307#issuecomment-300127376,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Liryna That sounds like a realistic (and manageable!) list. I always
try to aim for ""too perfect"", thus making things take very long, which
is not very good. :-)
After letting this PR linger for a while I can understand the desire to
get this into the hands of people quick (while still doing enough
testing, of course).

What do you think about implementing a small wrapper that enables using
the old API? At least many of the open-source projects using Dokan are
very short-staffed and it might take some time until they adopt a new
API. That way we can mark the new API experimental and still do some
other API-breaking changes along the way and thus avoid to break the API
too often.
One or two releases later we mark the new API as stable and deprecate or
eventually remove support for the old API.

Question is: Do you think that's worth the effort (both implementation
and maintenance of the old API for at least one or two releases)? I
would volunteer to give it a try. I would love to hear your opinions.
It might as well be not worth it and I am underestimating the effort
needed for on-going testing and support.

Actually after having written down all this I am more skeptical than
ever before and it's probably better to collect a list of probably
API-breaking changes and (if time allows) strive to implement the
low-hanging fruit before the final stable release. I am still leaving
the rest of the text above here to illustrate my thought process...
‚Ä¶
On 2017-05-09 08:20, Liryna wrote:
 *TODO* here:

   * See if #393 <#393> happen
   * Check correct merge of f113f74
     <f113f74>
   * @Corillian <https://github.com/Corillian> said |I did however notice
     that I didn't update DokanResetTimeout for async IO so I certainly
     need to do that :p.| This should be changed
   * Fix security issues
     <#307 (comment)>
   * Heavy test ( @Rondom <https://github.com/Rondom> ifstest ?) .
   * Update documentation",True,{'THUMBS_UP': ['https://github.com/magol']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,62,https://github.com/dokan-dev/dokany/pull/307#issuecomment-300134289,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Rondom Having the old API work for a couple of release is probably possible yes.
Will have to see how to recreate the DokanMain entry with DokanInit() and make it not async.
We will do a Wiki page to explain how to convert 1.x.x to 2.x.x when the moment comes üëç
(todo updated)",True,{'THUMBS_UP': ['https://github.com/magol']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Rondom,63,https://github.com/dokan-dev/dokany/pull/307#issuecomment-301600178,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@Liryna I have looked at the merge of the FUSE-change and it looks fine, but honestly I am not really confident by just looking at the code. Ideally someone with NodeJS-installed can test (or even better we would have a test-case for that......).
I thought I would find the time to do some fix for some other issue over the weekend, but I did not. Instead I am reporting issue #511 for the time being. If someone starts working on it, please write in the issue. I will do the same in case I find the time to avoid duplicating work.",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,64,https://github.com/dokan-dev/dokany/pull/307#issuecomment-330774795,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Here is first BETA: https://github.com/dokan-dev/dokany/releases/tag/v2.0.0-BETA1 üëç,True,{'HOORAY': ['https://github.com/magol']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Daniel-Abrecht,65,https://github.com/dokan-dev/dokany/pull/307#issuecomment-337019694,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I've compiled fuse-nfs with the v2.0.0-BETA1 version, just to see if it works or not. It turned out the -s option to disable mutithreading in fuse does no longer work in dokanys fuse wrapper. Single threading is often prefered in programs which use fuse, because it prevents any race conditions, keeps things simpler, doesn't require all used libraries to be thread safe and isn't really slower for a lot of use cases. Fuse-nfs and probably a lot of other programs which use fuse relay on its single thread mode and can't be used without it.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,66,https://github.com/dokan-dev/dokany/pull/307#issuecomment-337095409,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Are you suggesting that every single file system event should be serialized to a single thread?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Daniel-Abrecht,67,https://github.com/dokan-dev/dokany/pull/307#issuecomment-337231576,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Yes, but only if the program which uses fuse requests the single thread mode. The current fuse wrapper tries to do this here:

  
    
      dokany/dokan_fuse/src/dokanfuse.cpp
    
    
         Line 604
      in
      af49c72
    
  
  
    

        
          
           dokanOptions->ThreadCount = mt ? FUSE_THREAD_COUNT : 1; 
        
    
  


Alternatively, it would probably be sufficent to just use a mutex lock to prevent two fuse callbacks to be called at the same time. Or if the single thread mode won't be supported anymore, there should at least be a warning if a program attemps to use it.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,68,https://github.com/dokan-dev/dokany/pull/307#issuecomment-337460266,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Excluding debugging I can't think of any reason why you would want to do that regardless of whether or not you're using FUSE. It would completely destroy the performance of your filesystem. That being said, and as you suggested, there's nothing preventing you from forcing your FUSE driver from being single threaded by taking a lock on a mutex or serializing filesystem events to a queue.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Daniel-Abrecht,69,https://github.com/dokan-dev/dokany/pull/307#issuecomment-337721362,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I already gave a lot of reasons way a lot of fuse file systems prefer single thread mode over multithreaded mode. There are also a lot of cases where not using multithreading can actually increase the overall system performance. Let me give you an example: Let's assume we have a network file system which uses a single socket to transfer datas. In that case, the network would be the bottle-neck, and having multiple threads which try to send data and/or synchronize some actions just wastes cpu time other processes could have used.
However, I'm not interested in the single thread mode because of it's possible bennefits and drawbacks.
The interesting thing about fuse is that it's an api that allows a program to provide a file system and that program will work on any system which has an implementation of the fuse api. The single user mode of fuse is a basic feature every implementation of fuse provides and many programs rely on. Reimplementing this feature in an existing fuse file system which previously relayed on the fuse implementation to provide it is somthing I would never do, it wouldn't make any sense.
Just to make this clear, this isn't about just adding a feature I think may be neat, this is about maintaining compatiblity with existing programs and the fuse api itself.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Corillian,70,https://github.com/dokan-dev/dokany/pull/307#issuecomment-337781266,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","The examples you have provided would be much less performant on a single thread instead of using multiple threads - particularly for a networked filesystem. From a performance perspective there are no benefits to using a single thread which is why Windows uses APC's to talk to the kernel driver in the first place. I'm not familiar with the gritty details of building a filesystem for Linux however, from what I remember of working on the FUSE API for this PR, it appears to be poorly designed because each call to the FUSE API must block a thread until the requested operation completes (unless you implement coroutines). If what you are saying was true Windows wouldn't support APC's, overlapped IO, or IO completion ports and Linux wouldn't support polling.
ThreadCount is no longer used because Dokan's user mode driver now uses the system thread pool which creates and destroys threads on the fly based on the number of CPU's in the system along with other heuristics. I probably should have just removed it. If FUSE supports forcing everything to run through a single thread and a flag was added to enforce such behavior in Dokan for compatibility purposes I certainly wouldn't complain - though you'd be crazy to use it in production.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,71,https://github.com/dokan-dev/dokany/pull/307#issuecomment-337810403,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","Well point @Daniel-Abrecht , I forgot about the single thread option of FUSE.
@Corillian crazy as it is, I already see a couple of FUSE fs using the single thread option because of shared resources... üò¢ Will need to add a way to limit the thread pool to 1 for compatibility.
People already having their FUSE FS are not always willing to change it for windows even if it is a simple mutex to add.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,None,72,https://github.com/dokan-dev/dokany/pull/307#issuecomment-337811956,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","I don't currently use dokany, but am keeping a close eye on it, particularly on asynchronous IO and on the hopeful implementation of the FUSE lowlevel API as this would make the eventual porting of my application a whole lot easier.
My application currently uses a single thread and is centered around the libuv event loop. Since it is a networked filesystem, and the socket is the bottleneck, additional threads don't add any extra performance. Rather, they'd take more resources and slow things down due to the necessity of working with mutexes.
The asynchronous IO feature is really neat, but forcing people to use multiple threads is - IMHO - silly.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/lostmsu,73,https://github.com/dokan-dev/dokany/pull/307#issuecomment-348419289,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",Just came here for the first time. Is this pull request still up to date? Or was it reworked in some way? E.g. where can I find the diff.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,74,https://github.com/dokan-dev/dokany/pull/307#issuecomment-348420014,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@lostmsu The PR has been updated here:
https://github.com/dokan-dev/dokany/tree/Corillian-asyncio
Only 11 commit missing compared to master. Will do the update during the weekend üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,75,https://github.com/dokan-dev/dokany/pull/307#issuecomment-362515825,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.","@timofonic This PR is keep as a reference of Corillian since he is lacking of time to continue.
However, dokany has his own branch updated with last changes.
Also i keep the pr open for the history and discussion.
But you are perhaps right, i should rename the branch for v2 and create separate issue for the v2 and roadmap! :)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,307,2016-08-03T02:41:48Z,,2022-03-06T15:13:08Z,OPEN,False,16150,3625,62,https://github.com/Corillian,Implemented asynchronous IO #210,26,['Dokan 2.x.x'],https://github.com/dokan-dev/dokany/pull/307,https://github.com/Liryna,76,https://github.com/dokan-dev/dokany/pull/307#issuecomment-1003815187,"The work on this PR continues in the Corillian-asyncio-branch in this repository and will eventually become Dokan 2.0.
This PR was a tremendous amount of work and more or less consists of a full rewrite of dokan.dll. It will need a significant amount of testing before it's ready to be merged into master. We really need to add a large number of unit tests. Notable issues:

Significant changes to the Dokan API
FILE_OPEN_FOR_BACKUP_INTENT in create.c has been removed for now so that it can be more thoroughly investigated
Initialization is been moved outside of DLL_PROCESS_ATTACH and DLL_PROCESS_DETACH to DokanInit() and DokanShutdown(). This solves the problem of missing DLL's in DLL_PROCESS_DETACH and more importantly allows the user to hook into Dokan memory allocations.

Lastly I still need to profile the driver for an optimization pass.",This is now partially merged in 2.0.0. the only remaining part I see that could be interesting to merge is the possibility for userland to return status pending and call the dokan API when the operation can be completed.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,314,2016-08-14T09:48:59Z,2016-08-14T11:07:28Z,2016-08-14T11:09:13Z,CLOSED,False,0,0,0,https://github.com/magol,Sync comments with dokan-dotnet and done some Doxygen fix,0,[],https://github.com/dokan-dev/dokany/pull/314,https://github.com/magol,1,https://github.com/dokan-dev/dokany/pull/314,I hope that I have done the work with GIT correct.,I hope that I have done the work with GIT correct.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,314,2016-08-14T09:48:59Z,2016-08-14T11:07:28Z,2016-08-14T11:09:13Z,CLOSED,False,0,0,0,https://github.com/magol,Sync comments with dokan-dotnet and done some Doxygen fix,0,[],https://github.com/dokan-dev/dokany/pull/314,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/314#issuecomment-239666544,I hope that I have done the work with GIT correct.,"You had to pull the changes before create your commit to skip the ""auto merge commit"".
Other this sync from dokan-dotnet is well appreciate ^^",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,314,2016-08-14T09:48:59Z,2016-08-14T11:07:28Z,2016-08-14T11:09:13Z,CLOSED,False,0,0,0,https://github.com/magol,Sync comments with dokan-dotnet and done some Doxygen fix,0,[],https://github.com/dokan-dev/dokany/pull/314,https://github.com/magol,3,https://github.com/dokan-dev/dokany/pull/314#issuecomment-239667280,I hope that I have done the work with GIT correct.,"""You had to pull the changes before create your commit to skip the ""auto merge commit"".""
I do not quite understand what you mean by that, and that's probably the problem. Please, help me understand what I should do to make the right :-)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,314,2016-08-14T09:48:59Z,2016-08-14T11:07:28Z,2016-08-14T11:09:13Z,CLOSED,False,0,0,0,https://github.com/magol,Sync comments with dokan-dotnet and done some Doxygen fix,0,[],https://github.com/dokan-dev/dokany/pull/314,https://github.com/magol,4,https://github.com/dokan-dev/dokany/pull/314#issuecomment-239667756,I hope that I have done the work with GIT correct.,"Ok, pull is something I have to do BEFORE commit. So it is to late to do it now (if I don't redo everything)?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,314,2016-08-14T09:48:59Z,2016-08-14T11:07:28Z,2016-08-14T11:09:13Z,CLOSED,False,0,0,0,https://github.com/magol,Sync comments with dokan-dotnet and done some Doxygen fix,0,[],https://github.com/dokan-dev/dokany/pull/314,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/314#issuecomment-239667949,I hope that I have done the work with GIT correct.,"Since your commit was made after the remote commit, he need to merge your commit together and sometimes you can have conflicts because both commit changed the same file.
Normally you can fix it with git rebase -i HEAD~1 (since you made only one commit)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,315,2016-08-14T11:19:09Z,2016-08-14T11:21:05Z,2016-08-14T11:22:38Z,MERGED,True,130,118,1,https://github.com/magol,Sync comments with dokan-dotnet and fix Doxygen issues,1,[],https://github.com/dokan-dev/dokany/pull/315,https://github.com/magol,1,https://github.com/dokan-dev/dokany/pull/315,New try. Hope it is beter this time.,New try. Hope it is beter this time.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,315,2016-08-14T11:19:09Z,2016-08-14T11:21:05Z,2016-08-14T11:22:38Z,MERGED,True,130,118,1,https://github.com/magol,Sync comments with dokan-dotnet and fix Doxygen issues,1,[],https://github.com/dokan-dev/dokany/pull/315,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/315#issuecomment-239668422,New try. Hope it is beter this time.,"üëç perfect ! Well done !
Thank you @magol for the documentation and quick fix !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,325,2016-08-31T10:32:18Z,2016-08-31T20:45:13Z,2016-09-07T18:40:55Z,MERGED,True,145,107,16,https://github.com/taruti,Rewrite FCB locking,3,[],https://github.com/dokan-dev/dokany/pull/325,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/325,"This is unfortunately somewhat large.
Tested with copying deep filetrees with 80000+ files.
Related to:
#318
keybase/client#4018","This is unfortunately somewhat large.
Tested with copying deep filetrees with 80000+ files.
Related to:
#318
keybase/client#4018",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,325,2016-08-31T10:32:18Z,2016-08-31T20:45:13Z,2016-09-07T18:40:55Z,MERGED,True,145,107,16,https://github.com/taruti,Rewrite FCB locking,3,[],https://github.com/dokan-dev/dokany/pull/325,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/325#issuecomment-243745252,"This is unfortunately somewhat large.
Tested with copying deep filetrees with 80000+ files.
Related to:
#318
keybase/client#4018","Hi @taruti ,
Thank you for your contribution ! üëç
So this issue were only related to fcb lock that was not properly handled ?
Can you explain a little what was happening ‚ù§Ô∏è
I will try to test it quickly.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,325,2016-08-31T10:32:18Z,2016-08-31T20:45:13Z,2016-09-07T18:40:55Z,MERGED,True,145,107,16,https://github.com/taruti,Rewrite FCB locking,3,[],https://github.com/dokan-dev/dokany/pull/325,https://github.com/taruti,3,https://github.com/dokan-dev/dokany/pull/325#issuecomment-243747658,"This is unfortunately somewhat large.
Tested with copying deep filetrees with 80000+ files.
Related to:
#318
keybase/client#4018","There were rare BSODs with backtraces hinting to lacking locking of FCBs typically with a huge amount of file operations.
The existing locking code was not comprehensive and lacking in some cases. After trying to add incremental changes to fix it I ended up with just rewriting and adding locking for FCBs.",True,"{'THUMBS_UP': ['https://github.com/Liryna'], 'HEART': ['https://github.com/Liryna']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,325,2016-08-31T10:32:18Z,2016-08-31T20:45:13Z,2016-09-07T18:40:55Z,MERGED,True,145,107,16,https://github.com/taruti,Rewrite FCB locking,3,[],https://github.com/dokan-dev/dokany/pull/325,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/325#issuecomment-243895453,"This is unfortunately somewhat large.
Tested with copying deep filetrees with 80000+ files.
Related to:
#318
keybase/client#4018","üëç  Have been able to copy 260k files without issues !
Lock seems to be well placed and are always release as I can see.
Well done @taruti and thanks again, very appreciate as always ! üèÜ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,326,2016-09-01T09:15:17Z,2016-09-01T19:15:04Z,2016-09-07T18:40:54Z,MERGED,True,11,3,4,https://github.com/taruti,sys: FCB unlock on some error paths,3,[],https://github.com/dokan-dev/dokany/pull/326,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/326,Found some error paths that were still lacking proper locks when reviewing the code for the third time.,Found some error paths that were still lacking proper locks when reviewing the code for the third time.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,326,2016-09-01T09:15:17Z,2016-09-01T19:15:04Z,2016-09-07T18:40:54Z,MERGED,True,11,3,4,https://github.com/taruti,sys: FCB unlock on some error paths,3,[],https://github.com/dokan-dev/dokany/pull/326,https://github.com/taruti,2,https://github.com/dokan-dev/dokany/pull/326#issuecomment-244040455,Found some error paths that were still lacking proper locks when reviewing the code for the third time.,"After this is in I'll do a review of CCB locking.
No known crashes on that one, but better catch it before any mysterious issues arrive. It will be much smaller than the FCB one.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,326,2016-09-01T09:15:17Z,2016-09-01T19:15:04Z,2016-09-07T18:40:54Z,MERGED,True,11,3,4,https://github.com/taruti,sys: FCB unlock on some error paths,3,[],https://github.com/dokan-dev/dokany/pull/326,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/326#issuecomment-244083070,Found some error paths that were still lacking proper locks when reviewing the code for the third time.,"Thank you @taruti and üëç well found !
Is there not also one missing here ? (not really important since it is for code before Win7)
https://github.com/keybase/dokany/blob/e309f53feed6531a2348a05ff549b1653c056f35/sys/create.c#L1079
I will try to review other places also.
A review of CCB would be very appricate also !!! üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,326,2016-09-01T09:15:17Z,2016-09-01T19:15:04Z,2016-09-07T18:40:54Z,MERGED,True,11,3,4,https://github.com/taruti,sys: FCB unlock on some error paths,3,[],https://github.com/dokan-dev/dokany/pull/326,https://github.com/taruti,4,https://github.com/dokan-dev/dokany/pull/326#issuecomment-244110400,Found some error paths that were still lacking proper locks when reviewing the code for the third time.,"No, in that case the return on line 1079 is inside the __try and it is handled in the longish __finally clause starting on line 1171 and the unlock on line 1203.",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,326,2016-09-01T09:15:17Z,2016-09-01T19:15:04Z,2016-09-07T18:40:54Z,MERGED,True,11,3,4,https://github.com/taruti,sys: FCB unlock on some error paths,3,[],https://github.com/dokan-dev/dokany/pull/326,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/326#issuecomment-244176791,Found some error paths that were still lacking proper locks when reviewing the code for the third time.,"Alright @taruti I missed it üëç
I have reviewed again all FCB, they seems all well fixed with your last pull request and this PR.
Just this one: 
  
    
      dokany/sys/cleanup.c
    
    
         Line 117
      in
      424692c
    
  
  
    

        
          
           DokanFCBUnlock(fcb); 
        
    
  


There is a __leave line 95, should we not unlock it before leave or in finally ?
Good work @taruti üèÜ",True,{'THUMBS_UP': ['https://github.com/taruti']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,326,2016-09-01T09:15:17Z,2016-09-01T19:15:04Z,2016-09-07T18:40:54Z,MERGED,True,11,3,4,https://github.com/taruti,sys: FCB unlock on some error paths,3,[],https://github.com/dokan-dev/dokany/pull/326,https://github.com/taruti,6,https://github.com/dokan-dev/dokany/pull/326#issuecomment-244177796,Found some error paths that were still lacking proper locks when reviewing the code for the third time.,"Yes, updated the PR and it handles that.
Thanks for taking time to review this!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,326,2016-09-01T09:15:17Z,2016-09-01T19:15:04Z,2016-09-07T18:40:54Z,MERGED,True,11,3,4,https://github.com/taruti,sys: FCB unlock on some error paths,3,[],https://github.com/dokan-dev/dokany/pull/326,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/326#issuecomment-244182418,Found some error paths that were still lacking proper locks when reviewing the code for the third time.,"Sorry ! It was in front of my face üòÑ
Thanks again for your contribution !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,327,2016-09-01T19:26:21Z,2016-09-07T18:40:51Z,2016-09-07T18:41:10Z,CLOSED,False,29,22,4,https://github.com/taruti,sys: Use FCB locks for CCBs,1,[],https://github.com/dokan-dev/dokany/pull/327,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/327,"This might be somewhat controversial - it simplifies some things - and requires less locks - but might be pessimistic in cases with a lot of lock contention.
There is no hurry to merge this and doing this in another way might be sensible :)
Should we use separate CCB locks?
Merging the locks means:

Somewhat simpler code
Somewhat smaller CCBs and less locks around
No need to be careful to take FCB and CCB locks in the right sequence
In places where both  FCB and CCB lock would be used just the FCB lock suffices
Which can be faster if there is not very much contention
We take an FCB lock in a few places where a CCB specific one would suffice
Which can be slower if there is lots of contention

I have left UserContext alone with this patch.
Looking forward to discuss this :)","This might be somewhat controversial - it simplifies some things - and requires less locks - but might be pessimistic in cases with a lot of lock contention.
There is no hurry to merge this and doing this in another way might be sensible :)
Should we use separate CCB locks?
Merging the locks means:

Somewhat simpler code
Somewhat smaller CCBs and less locks around
No need to be careful to take FCB and CCB locks in the right sequence
In places where both  FCB and CCB lock would be used just the FCB lock suffices
Which can be faster if there is not very much contention
We take an FCB lock in a few places where a CCB specific one would suffice
Which can be slower if there is lots of contention

I have left UserContext alone with this patch.
Looking forward to discuss this :)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,327,2016-09-01T19:26:21Z,2016-09-07T18:40:51Z,2016-09-07T18:41:10Z,CLOSED,False,29,22,4,https://github.com/taruti,sys: Use FCB locks for CCBs,1,[],https://github.com/dokan-dev/dokany/pull/327,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/327#issuecomment-244543008,"This might be somewhat controversial - it simplifies some things - and requires less locks - but might be pessimistic in cases with a lot of lock contention.
There is no hurry to merge this and doing this in another way might be sensible :)
Should we use separate CCB locks?
Merging the locks means:

Somewhat simpler code
Somewhat smaller CCBs and less locks around
No need to be careful to take FCB and CCB locks in the right sequence
In places where both  FCB and CCB lock would be used just the FCB lock suffices
Which can be faster if there is not very much contention
We take an FCB lock in a few places where a CCB specific one would suffice
Which can be slower if there is lots of contention

I have left UserContext alone with this patch.
Looking forward to discuss this :)","I even question myself if ccb lock are needed. There is already a couple a place where ccb is used and not locked. (like 
  
    
      dokany/sys/fileinfo.c
    
    
         Line 237
      in
      424692c
    
  
  
    

        
          
           ccb = IrpEntry->FileObject->FsContext2; 
        
    
  

)
As far as I know, ccb is only used in the current request/context and there should not be another thread using the same ccb. @marinkobabic can you confirme what I say or correct me if am wrong ‚ù§Ô∏è ?
Fastfat does not even lock ccb and CCb struct has no ERESOURCE
https://github.com/Microsoft/Windows-driver-samples/blob/96eb96dfb613e4c745db6bd1f53a92fe7e2290fc/filesys/fastfat/fatstruc.h#L1354",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,327,2016-09-01T19:26:21Z,2016-09-07T18:40:51Z,2016-09-07T18:41:10Z,CLOSED,False,29,22,4,https://github.com/taruti,sys: Use FCB locks for CCBs,1,[],https://github.com/dokan-dev/dokany/pull/327,https://github.com/taruti,3,https://github.com/dokan-dev/dokany/pull/327#issuecomment-244600279,"This might be somewhat controversial - it simplifies some things - and requires less locks - but might be pessimistic in cases with a lot of lock contention.
There is no hurry to merge this and doing this in another way might be sensible :)
Should we use separate CCB locks?
Merging the locks means:

Somewhat simpler code
Somewhat smaller CCBs and less locks around
No need to be careful to take FCB and CCB locks in the right sequence
In places where both  FCB and CCB lock would be used just the FCB lock suffices
Which can be faster if there is not very much contention
We take an FCB lock in a few places where a CCB specific one would suffice
Which can be slower if there is lots of contention

I have left UserContext alone with this patch.
Looking forward to discuss this :)","Don't they use a global lock (Global_critical_region) in that example for most things?
Ccbs are created in DokanDispatchCreate and free'ed in DokanDispatchClose. Even if an application does two syscalls on the same handle from different threads concurrently things should work in the driver.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,327,2016-09-01T19:26:21Z,2016-09-07T18:40:51Z,2016-09-07T18:41:10Z,CLOSED,False,29,22,4,https://github.com/taruti,sys: Use FCB locks for CCBs,1,[],https://github.com/dokan-dev/dokany/pull/327,https://github.com/marinkobabic,4,https://github.com/dokan-dev/dokany/pull/327#issuecomment-244612895,"This might be somewhat controversial - it simplifies some things - and requires less locks - but might be pessimistic in cases with a lot of lock contention.
There is no hurry to merge this and doing this in another way might be sensible :)
Should we use separate CCB locks?
Merging the locks means:

Somewhat simpler code
Somewhat smaller CCBs and less locks around
No need to be careful to take FCB and CCB locks in the right sequence
In places where both  FCB and CCB lock would be used just the FCB lock suffices
Which can be faster if there is not very much contention
We take an FCB lock in a few places where a CCB specific one would suffice
Which can be slower if there is lots of contention

I have left UserContext alone with this patch.
Looking forward to discuss this :)",The lifetime of fcb is much bigger than the one of the ccb. Also the fcb is more global than an ccb. Blocking fcb because of changes on ccb would be inefficient. Threads would unnecessary be blocked. Its like blocking the whole house because of some changes in a room instead of blocking just the room itself.,True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,327,2016-09-01T19:26:21Z,2016-09-07T18:40:51Z,2016-09-07T18:41:10Z,CLOSED,False,29,22,4,https://github.com/taruti,sys: Use FCB locks for CCBs,1,[],https://github.com/dokan-dev/dokany/pull/327,https://github.com/taruti,5,https://github.com/dokan-dev/dokany/pull/327#issuecomment-244688688,"This might be somewhat controversial - it simplifies some things - and requires less locks - but might be pessimistic in cases with a lot of lock contention.
There is no hurry to merge this and doing this in another way might be sensible :)
Should we use separate CCB locks?
Merging the locks means:

Somewhat simpler code
Somewhat smaller CCBs and less locks around
No need to be careful to take FCB and CCB locks in the right sequence
In places where both  FCB and CCB lock would be used just the FCB lock suffices
Which can be faster if there is not very much contention
We take an FCB lock in a few places where a CCB specific one would suffice
Which can be slower if there is lots of contention

I have left UserContext alone with this patch.
Looking forward to discuss this :)",So do things with per-CCB locks? I can make a patch that does exactly that if wanted.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,327,2016-09-01T19:26:21Z,2016-09-07T18:40:51Z,2016-09-07T18:41:10Z,CLOSED,False,29,22,4,https://github.com/taruti,sys: Use FCB locks for CCBs,1,[],https://github.com/dokan-dev/dokany/pull/327,https://github.com/marinkobabic,6,https://github.com/dokan-dev/dokany/pull/327#issuecomment-244747630,"This might be somewhat controversial - it simplifies some things - and requires less locks - but might be pessimistic in cases with a lot of lock contention.
There is no hurry to merge this and doing this in another way might be sensible :)
Should we use separate CCB locks?
Merging the locks means:

Somewhat simpler code
Somewhat smaller CCBs and less locks around
No need to be careful to take FCB and CCB locks in the right sequence
In places where both  FCB and CCB lock would be used just the FCB lock suffices
Which can be faster if there is not very much contention
We take an FCB lock in a few places where a CCB specific one would suffice
Which can be slower if there is lots of contention

I have left UserContext alone with this patch.
Looking forward to discuss this :)","@taruti
Correct",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/zanderz,1,https://github.com/dokan-dev/dokany/pull/328,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","@Rondom suggests this check may be helpful in the bundle, not just the individual packages.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244286993,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","Hi @zanderz ,
Thank you for your contribution ! üëç
Is it not the same as 9782a64 ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244297118,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","No. Without this, the bundle will happily install all kinds of stuff like .NET only to then fail while installing the MSI at the end. If I remember my tests correctly at least .NET installation is not even rolled back. With this patch, we fail early.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244307161,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","Alright @Rondom ! I agree that it would give a better experience to add this check before.
Does the check should not be
((WINTRUSTVERSION >= v6.1.7601.18741 AND WINTRUSTVERSION < v6.1.7601.22000) OR WINTRUSTVERSION >= v6.1.7601.22948)) ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Rondom,5,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244344617,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.",Depends on whether the bundle-engine follows arcane MSI implementation details that make one pull their hair out :-D,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/js69,6,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244346004,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","There is a minor text bug: "" ... the installation of Keybase.""",True,"{'LAUGH': ['https://github.com/Rondom'], 'THUMBS_UP': ['https://github.com/Rondom']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Rondom,7,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244346167,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","I would guess you do not need to decrease the version number by one, because here the version number is stored in a variable and I would expect at least basic operators like greater, lesser and equal would work in a sane way. Then again you don't know whether the right number gets stored I the variable... Googling made me none the wiser. In the worst case I will have to test with both the GDR and LDR patch...",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Rondom,8,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244347053,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","http://wixtoolset.org/documentation/manual/v3/xsd/util/filesearch.html
^ this suggests that the bundle behaviour is sane i.e. no decrementing needed",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/zanderz,9,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244459262,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","Whoops, sorry about the product name, I fixed that.
Our reason for moving this logic out of the package and into the bundle is for our own bundle to show coherent errors to the user. At first, our bundle included the Dokan bundle in its chain, and when run silently, all its errors were masked, and worst of all, the visual studio redistributable package could cause an unprompted reboot. Now we have copied all the same prerequisites from the Dokan bundle to ours, and just chained the .msi packages.
Speaking of which: it would be very helpful if the .msi packages were included in the release binaries, so we hopefully someday can stop building + signing our own.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Liryna,10,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244465938,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","@Rondom I agree with you, just that Wintrust.dll has version 6.1.7601.18741 and 6.1.7601.22948
https://support.microsoft.com/en-us/kb/3033929
So the check should be WINTRUSTVERSION >= v6.1.7601.22948 and since LDR start as 22xxx the check should be WINTRUSTVERSION < v6.1.7601.22000.
@zanderz üëç for the msi packages ! I added it to the build script (it remind me to upload it üòÉ ) 8885fef",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Liryna,11,https://github.com/dokan-dev/dokany/pull/328#issuecomment-244860042,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","@zanderz I am ready to merge your PR, I am just waiting for the changes on the version value as describe before (correct me if I am not wrong in my way I think this work üòÑ ) and also rebase into a single commit.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/zanderz,12,https://github.com/dokan-dev/dokany/pull/328#issuecomment-245369666,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.",Changed to WINTRUSTVERSION < v6.1.7601.22000 and squashed down.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Liryna,13,https://github.com/dokan-dev/dokany/pull/328#issuecomment-245382654,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","Thank you @zanderz !
Can you also change the check to WINTRUSTVERSION >= v6.1.7601.22948 since Wintrust.dll has version 6.1.7601.22948 ?
(sorry to both, 22947 probably don't exist but I just wanna have the correct value)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/zanderz,14,https://github.com/dokan-dev/dokany/pull/328#issuecomment-245438918,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","I changed it, but note that it doesn't match the packages, because MinVersion is inclusive.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,328,2016-09-01T22:41:47Z,2016-09-08T06:31:03Z,2016-09-08T06:31:06Z,MERGED,True,13,1,1,https://github.com/zanderz,check for GDR/LDR version of KB3033929 in bundle,1,[],https://github.com/dokan-dev/dokany/pull/328,https://github.com/Liryna,15,https://github.com/dokan-dev/dokany/pull/328#issuecomment-245506184,"@Rondom suggests this check may be helpful in the bundle, not just the individual packages.","I changed it, but note that it doesn't match the packages, because MinVersion is inclusive.

Here it is directly the correct version of the wintrust that we compare, there is no MinVersion.
I tested it on Win7 with and without GDR/LDR KB and got the correct message just before dependency get installed üëç
Good job @zanderz and very appreciate !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,336,2016-09-14T14:05:49Z,2016-09-14T14:19:26Z,2016-10-28T00:34:12Z,MERGED,True,1,1,1,https://github.com/Rondom,Appveyor: Upgrade all Cygwin packages before build,1,[],https://github.com/dokan-dev/dokany/pull/336,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/336,"Upgrading all packages ensures that we are running the latest Cygwin.
Sometimes dependencies of packages are incorrect and dependant packages
are thus not upgraded automatically when they should be.
This makes the Appveyor build working again after the cmake-package in
Cygwin was upgraded a few days ago breaking our build. Closes #335.","Upgrading all packages ensures that we are running the latest Cygwin.
Sometimes dependencies of packages are incorrect and dependant packages
are thus not upgraded automatically when they should be.
This makes the Appveyor build working again after the cmake-package in
Cygwin was upgraded a few days ago breaking our build. Closes #335.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,336,2016-09-14T14:05:49Z,2016-09-14T14:19:26Z,2016-10-28T00:34:12Z,MERGED,True,1,1,1,https://github.com/Rondom,Appveyor: Upgrade all Cygwin packages before build,1,[],https://github.com/dokan-dev/dokany/pull/336,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/336#issuecomment-247027797,"Upgrading all packages ensures that we are running the latest Cygwin.
Sometimes dependencies of packages are incorrect and dependant packages
are thus not upgraded automatically when they should be.
This makes the Appveyor build working again after the cmake-package in
Cygwin was upgraded a few days ago breaking our build. Closes #335.",works :-),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,336,2016-09-14T14:05:49Z,2016-09-14T14:19:26Z,2016-10-28T00:34:12Z,MERGED,True,1,1,1,https://github.com/Rondom,Appveyor: Upgrade all Cygwin packages before build,1,[],https://github.com/dokan-dev/dokany/pull/336,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/336#issuecomment-247028151,"Upgrading all packages ensures that we are running the latest Cygwin.
Sometimes dependencies of packages are incorrect and dependant packages
are thus not upgraded automatically when they should be.
This makes the Appveyor build working again after the cmake-package in
Cygwin was upgraded a few days ago breaking our build. Closes #335.",üëç perfect thank you @Rondom !!!,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/337,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.",True,{'HEART': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247034814,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","@jetwhiz, can you give this a try once Appveyor has finished the compilation? The fuse-mirror-compilation actually tests this, but given that we are so close before 1.0.0 it would be nice to have another human-being taking a second look at it.
One should be able to compile against libfuse or dokanfuse only by changing the include path and linker-path, i.e.
-I ${dokan_install_dir}/include -L ${dokan_install_dir}/",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247041979,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","Also everyone else is welcome to review the individual commits and test the build, of course. Especially the installer might need attention, because that is an area I am not familiar with.
I don't want to be the one that introduces a regression so close before 1.0.0 :-D",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/jetwhiz,4,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247110406,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","Hi @Rondom -- I'll give it a shot!  Can I build this using Visual Studio, or does this need to be done using Cygwin for the test?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,5,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247191382,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","Compiler does not matter as long as you link to the right library (dokanfuse.dll for MSVC, libdokanfuse.dll for MinGW, cygdokanfuse.dll for CygWin).
Setting the include path to [Dokan-Installation-Folder]/include and the library search path to the installation folder itself should work.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,6,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247290236,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.",@jetwhiz I messed up on the installer. üò≥ It should be fixed now. Please download again.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,7,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247311266,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","I thought they were C++ headers internal to dokan_fuse. Are they considered part of the API? If they are, they should be there of course.
Oh, and can someone enlighten me what this ScopeGuard C++-template-craziness does? üòù",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/jetwhiz,8,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247634993,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","@Rondom -- I'm not sure if I'm doing something wrong, but when I replace the system32 dll files with the ones built from this branch, encfs4win dies.
Dokan: debug mode on
Dokan: use stderr
AllocationUnitSize: 512 SectorSize: 512
Dokan Error: CreatFile Failed \\.\Dokan_1: 2
send global release for Z:
Dokan Error: Failed to open \\.\Dokan_1 with code 2
Failed to unmount: Z:",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,9,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247637069,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.",Updating the driver as well should fix this. This was unfortunately necessary because of #320.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,10,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247643498,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","@Liryna Indeed some of the stuff might be useful, other stuff looks more internal, especially the stuff relying on C++. Does someone have an idea or suggestions, about what is useful and what is internal?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/jetwhiz,11,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247644283,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","Unfortunately I'm not able to build the drivers in the project, since I don't have enough disk space to install the WDK 10.  Do you have an already-built one for Windows 7 x86 prepared?  Or maybe you could provide me with the branch's Dokany installer and I can install everything fresh.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,12,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247652540,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","Oh! No need to build yourself.
Appveyor is building binaries for every pull request and push.
The drivers are signed with a self-signed certificate so you have to import that certificate and enable test mode. See the wiki for information. The PowerShell-script mentioned there does not work on Win7. I have filed #342 with more information about this. Taking CertMgr.exe (a few KB) from another machine with Windows SDK or VS installed, works fine.
You can easily reach the Appveyor-builds by clicking the green ‚úì next to the latest commit in the Pull-Request. Link to the artifacts of the at the time of this writing latest build of this PR",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Liryna,13,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247858208,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","@Rondom I have been able to build fusexmp.c on cygwin with your install package without issue üëç
There is only utils.h that should be added in the installer. It has some helper that provides the library and it  is used by some projects (@jetwhiz does use it if I remember).
https://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/dokanfuse.def#L85-L96

Indeed some of the stuff might be useful, other stuff looks more internal, especially the stuff relying on C++. Does someone have an idea or suggestions, about what is useful and what is internal?

You know what ? I removed ScopeGuard.h, rebuild, and nothing happened üòÑ
It seems to come from Loki http://loki-lib.sourceforge.net/html/a00667.html
This probably was used a looonnng time ago in dokanfuse.cpp and not removed from the solution.
You can remove it in your pull request if you want üëç
Good job @Rondom üëç  and big ‚ù§Ô∏è to the make install
(there is a couple of warnings showed with https://github.com/dokan-dev/dokany/pull/337/files#diff-e2cb466c3a4e3af410a8719f1f2b0340R10, do you plan to fix it ? otherwise I will do it after)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/jetwhiz,14,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247863785,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","@Rondom -- I did a bit of testing using the PR artifact installer and didn't notice any problems that stood out on my end when running encfs4win.
Regarding the PowerShell-script, unfortunately I don't have access to a Win 7 build machine -- I only do bare-bones testing in a pristine Win 7 VM.  Does using CertMgr not work when Import-Certificate isn't detected?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,15,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247863904,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","@Liryna

There is only utils.h that should be added in the installer. It has some helper that provides the library and it is used by some projects (@jetwhiz does use it if I remember).

Ok, I will add back utils.h to the installation. This is a C++ header, shall I #ifdef things and disable symbol-mangling for the C-parts, so it can be used both in C++ and C (minus the C++ parts)?
I will also delete ScopeGuard.h. I do not have the energy to find out myself, but I am still curious about what it does. ;-)

(there is a couple of warnings showed with https://github.com/dokan-dev/dokany/pull/337/files#diff-e2cb466c3a4e3af410a8719f1f2b0340R10, do you plan to fix it ? otherwise I will do it after)

I intentionally enabled the warnings. Sometimes warnings point out things one is not aware of that should be fixed. If there are warnings that cannot be fixed, we can always disable individual warnings.
I have a patch for the DWORDs/printf-format-specifiers warning ready, that I will include in the update of this pull request tomorrow. The rest of the warnings I have not yet looked into and I do not have the time right now. So if you want to look into them please go ahead! üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,16,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247863986,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","Regarding the PowerShell-script, unfortunately I don't have access to a Win 7 build machine -- I only do bare-bones testing in a pristine Win 7 VM. Does using CertMgr not work when Import-Certificate isn't detected?

@jetwhiz CertMgr.exe DOES work (see the wiki-article a few lines above). The only ""problem"" is that you need to download VS or Windows SDK to get these few kilobytes of an EXE which is a bit overkill. Copying over CertMgr from another machine with VS, works like a charm and so does using the GUI. :-D",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,17,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247864241,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","@Liryna I will also remove 
  
    
      dokany/dokan_fuse/include/utils.h
    
    
        Lines 8 to 12
      in
      4d11614
    
  
  
    

        
          
           /*#ifdef _MSC_VER 
        

        
          
           #define DLLLOCAL 
        

        
          
           #else 
        

        
          
           #define DLLLOCAL __attribute__ ((visibility(""hidden""))) 
        

        
          
           #endif*/ 
        
    
  


The code is commented and not used anywhere as far as I can see.",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Liryna,18,https://github.com/dokan-dev/dokany/pull/337#issuecomment-247865907,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","Ok, I will add back utils.h to the installation. This is a C++ header, shall I #ifdef things and disable symbol-mangling for the C-parts, so it can be used both in C++ and C (minus the C++ parts)?

Yes this would be great!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Liryna,19,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248103646,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","@Rondom I will provide you a patch for the build warnings tomorrow morning.
Can you make the last changes also at this time ?
I would like to make the release tomorrow.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,20,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248166941,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.",First thing I will do in the morning,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Liryna,21,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248228460,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","@Rondom here is the patch:
0001-Fix-fuse-build-warnings.txt",True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,22,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248289913,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","What I have tested:

Linking against cmake-installed FUSE's unixTimeToFiletime from utils.h using a GCC (G++ and MSVC(++) untested)
Presence of utils.h in Dokan-installation-folder under Win64
No warnings under MingW(32|64) or Cygwin(32|64)
Short test against my MingW32-based filesystem (debug prints still working as before)
version numbers of (cyg|lib)*dokanfuse.dll, dokan1.sys, dokan1.dll, DokanSetup.exe

Not tested:

FUSE-Mirror debug-prints on Cygwin(32|64)
Presence of utils.h in Dokan-installation-folder under Win32
Linking against functions in utils.h using a C++ compiler (should be tested by dokan_fuse compilation itself)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Liryna,23,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248291403,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","Thank you @Rondom for making this and in time üòÉ !
üëç Let's the release begin !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,24,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248294022,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","One nitpick, can you (manually! don't delay the release further) add the version number to each file's filenames when you do the release? I think it is nicer that way because it keeps people's download-folder nice and tidy. i.e. DokanSetup-1.0.0.5000.exe and so on.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Liryna,25,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248294208,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.",@Rondom Alright I will do this üëç,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,26,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248297852,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.",Make sure this is mentioned in the changelog,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Liryna,27,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248298424,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.","üëç I will do it
Currently I have issue to build fuse on my windows üò¢
      0 [main] bash 8436 child_info_fork::abort: C:\cygwin\bin\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xEA0000)
/usr/bin/bash: fork: retry: No child processes
      0 [main] bash 8020 child_info_fork::abort: C:\cygwin\bin\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xF40000)
/usr/bin/bash: fork: retry: No child processes
      0 [main] bash 7788 child_info_fork::abort: C:\cygwin\bin\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xE60000)
/usr/bin/bash: fork: retry: No child processes
      0 [main] bash 10652 child_info_fork::abort: C:\cygwin\bin\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xFF0000)
/usr/bin/bash: fork: retry: No child processes
      0 [main] bash 9168 child_info_fork::abort: C:\cygwin\bin\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xE80000)
/usr/bin/bash: fork: Resource temporarily unavailable

did you face the issue ?
If I run C:\cygwin\bin\bash outside the script it work üò¢",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,28,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248298974,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.",Blind guess: Do you have multiple versions of Cygwin running? Did you upgrade today? Try a reboot to make sure no old stuff is loaded.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Liryna,29,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248303417,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.",@Rondom cde6cd5 is that alright for you ?,True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,337,2016-09-14T14:32:15Z,2016-09-20T12:48:57Z,2016-10-28T00:34:12Z,MERGED,True,187,388,15,https://github.com/Rondom,Dokan_fuse build system enhancements,12,[],https://github.com/dokan-dev/dokany/pull/337,https://github.com/Rondom,30,https://github.com/dokan-dev/dokany/pull/337#issuecomment-248303605,"This branch contains changes that unify the directory structure of dokan_fuse. This enables compilation of the same code base against either dokanfuse or libfuse without changes.
We are also adding an install target so one can ""install"" dokanfuse into a Unix-directory hierarchy (Cygwin, MSYS, MingW-crosscompile under Linux) when compiling oneself.
In addition to that this branch contains commits that make build scripts return a non-zero error code in case one of the build-commands fails.
This work has been sponsored by Intel Corporation.",Yes,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,347,2016-09-22T14:02:59Z,2016-09-22T19:40:13Z,2016-09-22T19:40:13Z,MERGED,True,24,13,3,https://github.com/taruti,sys: Do not hold locks for CcPurgeCacheSection,1,[],https://github.com/dokan-dev/dokany/pull/347,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/347,"Rearrange locking  so that the FCB lock is not held for CcPurgeCacheSection.
Quick fix - requires testing.","Rearrange locking  so that the FCB lock is not held for CcPurgeCacheSection.
Quick fix - requires testing.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,347,2016-09-22T14:02:59Z,2016-09-22T19:40:13Z,2016-09-22T19:40:13Z,MERGED,True,24,13,3,https://github.com/taruti,sys: Do not hold locks for CcPurgeCacheSection,1,[],https://github.com/dokan-dev/dokany/pull/347,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/347#issuecomment-249006752,"Rearrange locking  so that the FCB lock is not held for CcPurgeCacheSection.
Quick fix - requires testing.",@taruti work well on my side üëç Thank you for the quick fix ! very appreciate and well found !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,348,2016-09-23T10:42:48Z,2016-09-24T11:03:30Z,2016-09-24T11:03:30Z,MERGED,True,45,43,11,https://github.com/taruti,Use atomic operations for FCB and CCB flags instead of locks,1,[],https://github.com/dokan-dev/dokany/pull/348,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/348,"Go through all Flags access for FCBs and CCBs
Use helpers for access
Make modification of flags use atomic operations
Locks need to be held for less time because they are not needed for flags anymore","Go through all Flags access for FCBs and CCBs
Use helpers for access
Make modification of flags use atomic operations
Locks need to be held for less time because they are not needed for flags anymore",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,348,2016-09-23T10:42:48Z,2016-09-24T11:03:30Z,2016-09-24T11:03:30Z,MERGED,True,45,43,11,https://github.com/taruti,Use atomic operations for FCB and CCB flags instead of locks,1,[],https://github.com/dokan-dev/dokany/pull/348,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/348#issuecomment-249359022,"Go through all Flags access for FCBs and CCBs
Use helpers for access
Make modification of flags use atomic operations
Locks need to be held for less time because they are not needed for flags anymore","Hello @taruti ,
Thanks you for the contribution !
This is a good improvement of how the flags are checked (cleaner, same macro used everywhere) and the safety of it !
Very appreciate ! keep the good work ‚ù§Ô∏è !!!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,350,2016-09-24T12:56:50Z,,2022-03-06T15:13:08Z,OPEN,False,2286,0,11,https://github.com/USeebi,Msys2 pkg-config,1,[],https://github.com/dokan-dev/dokany/pull/350,https://github.com/USeebi,1,https://github.com/dokan-dev/dokany/pull/350,Msys2 fuse library pkg-config and pacman package to be consumed by makepkg,Msys2 fuse library pkg-config and pacman package to be consumed by makepkg,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,350,2016-09-24T12:56:50Z,,2022-03-06T15:13:08Z,OPEN,False,2286,0,11,https://github.com/USeebi,Msys2 pkg-config,1,[],https://github.com/dokan-dev/dokany/pull/350,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/350#issuecomment-249386631,Msys2 fuse library pkg-config and pacman package to be consumed by makepkg,"Hi @USeebi ,
Thank you for the pull request.
Is it not possible to have a pkg-config that copy all headers in the correct folder from the dokan_fuse project rather than having duplicate headers in the repository ?
(I don't really use pacman/msys2 so if anyone with the knoweldge could help me review this pull request üëç )",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,350,2016-09-24T12:56:50Z,,2022-03-06T15:13:08Z,OPEN,False,2286,0,11,https://github.com/USeebi,Msys2 pkg-config,1,[],https://github.com/dokan-dev/dokany/pull/350,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/350#issuecomment-249448997,Msys2 fuse library pkg-config and pacman package to be consumed by makepkg,"Hi @USeebi,
thanks for helping making Dokany better.
pkg-config
Nice to see that you added a pkg-config file! üëç  We actually already had an enhancement request about it: #338
pkg-config is not specific to MSYS2, but actually generic to any platform. Therefore it would be nice to have it available for any platform (MSYS2, Cygwin, Linux (for cross-compilation)) and thus independent of the library and include directories.
Do you think you can integrate the pkg-config into our cmake-build using the instructions in the ticket linked above? You can create a separate Pull-Request for this, to simplify matters.
MSYS2-PKGBUILD:
First of all: Is there a specific reason, why you are submitting this to us and not to @Alexpux/MINGW-packages? I am not particularly opposed to having the PKGBUILD in the Dokany repository,  but I would be interested in what your considerations where and why you prefer one over the other option.
I have never done any packaging for MSYS or Arch Linux, so take the following comments with a grain of salt. (I am mostly familiar with Debian packaging and Linux and MSYS2 might differ in several ways I don't know yet about).
As @Liryna has said, you duplicate all header files in the repository. Looking at your packaging, it seems quite manual and I think it can be improved. The way I know it from Debian or RPM-based distros, the package would get built and installed into a separate directory as if you were compiling/installing from source and then a package is created from that.
I have just searched for ""cmake"" in the MingW-W64-packages repository and the doxygen-package there might be a good example of cmake-based project that is packaged using a PKGBUILD where the source is automatically downloaded, verified using hashes, built and ""installed"" to be compressed into a package.
Doxygen Mingw-w64 pkgbuild
libssh is another example
Some questions:

Where is the library-file built/installed to in your current implementation?
Why do you install the headers to /opt/? That seems very non-standard to me for packaged software. Why not /usr/include/?

PS: Thanks again for your contribution, it's appreciated.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,350,2016-09-24T12:56:50Z,,2022-03-06T15:13:08Z,OPEN,False,2286,0,11,https://github.com/USeebi,Msys2 pkg-config,1,[],https://github.com/dokan-dev/dokany/pull/350,https://github.com/USeebi,4,https://github.com/dokan-dev/dokany/pull/350#issuecomment-249567283,Msys2 fuse library pkg-config and pacman package to be consumed by makepkg,"Hi Rondom,
You're right, the package is manually pulled together after compiling dokan_fuse for makepkg to work with dependency on fuse.  I guess the package mostly working with Msys2 as Mingw has no syslog while Linux probably use fuse directly but not dokan-fuse.
The latest Msys2 distribution automatically set /opt/bin in the path so that I put the dokan_fuse library in /opt/bin and fuse include files in /opt/include/dokan_fuse.  The installation is automatic with pacman although the package is manual and the /opt directory might be a good place to signify the non-standard.
All these information are coded in fuse.pc and this could be automated with Autotools while there are also PKGBUILD templates with Autotools.  I'm not really expert with Autotools and I really need to brush up with Cmake.  I guess we need someone expert in both Autotools and Cmake to merge this pull request at will.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,350,2016-09-24T12:56:50Z,,2022-03-06T15:13:08Z,OPEN,False,2286,0,11,https://github.com/USeebi,Msys2 pkg-config,1,[],https://github.com/dokan-dev/dokany/pull/350,https://github.com/USeebi,5,https://github.com/dokan-dev/dokany/pull/350#issuecomment-250900177,Msys2 fuse library pkg-config and pacman package to be consumed by makepkg,"An other way to automate is manipulating build.ps1 script
& dokan_fuse/cleancmake.bat
Write-Host ""Build Msys2 x64...""
& C:\msys64\msys2_shell.cmd -msys2 -lc ""cd '$currentPath'/dokan_fuse/ && cmake . -G 'MSYS Makefiles' && make"" | Out-Host
New-Item -Force -Type Directory ""pkg/opt/bin/"", ""pkg/opt/include/"", ""pkg/usr/lib/pkgconfig/""
Copy-Item ""dokan_fuse/fuse.pc"" ""pkg/usr/lib/pkgconfig/""
Copy-Item ""dokan_fuse/.PKGINFO"" ""pkg/""
Copy-Item ""dokan_fuse/libdokanfuse1.dll"" ""pkg/opt/bin/""
Copy-Item ""dokan_fuse/libdokanfuse1.dll.a"" ""pkg/opt/bin/""
Copy-Item -Recurse ""dokan_fuse/include/"" ""pkg/opt/include/dokan_fuse/""
Remove-Item ""dokan_fuse/libdokanfuse1.dll""
Remove-Item ""dokan_fuse/libdokanfuse1.dll.a""
& C:\msys64\msys2_shell.cmd -msys2 -lc ""cd '$currentPath'/dokan_fuse/pkg && tar -cf - .PKGINFO * | xz -c -z - > ../dokan_fuse-x86_64.pkg.tar.xz""
Write-Host ""Build Msys2 x64 - Done"" -ForegroundColor Green
Write-Host ""Install package with pacman -U dokan_fuse-x86_64.pkg.tar.xz"" -ForegroundColor Green

These are the steps that I pulled up the package and I would like to insert the dokany version into the package file name but need more efforts.",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,350,2016-09-24T12:56:50Z,,2022-03-06T15:13:08Z,OPEN,False,2286,0,11,https://github.com/USeebi,Msys2 pkg-config,1,[],https://github.com/dokan-dev/dokany/pull/350,https://github.com/Rondom,6,https://github.com/dokan-dev/dokany/pull/350#issuecomment-255997613,Msys2 fuse library pkg-config and pacman package to be consumed by makepkg,"@USeebi May I ask, why you need an MSYS2-package? As far as I am informed, MSYS2 is a fork of Cygwin and its only purpose is to serve as a POSIXy environment for building MinGW-W64 (32bit and 64bit) applications. So one is not supposed to build software using the MSYS2-GCC if one is not developing MSYS2. If one needs an environment more close to Unix, the MSYS2-people suggest to use Cygwin.
I created pull-request #375 that enhances our build-system to automatically to create a pkg-config-file depending on the installation path. It needs some testing ;-)
Are you interested in working further on this to create an automated package that avoids copying files around? Like the libssh2 or doxygen-package I suggested above? Maybe, once a version with my PR merged is released and the package has good enough quality, you could even submit it to @Alexpux/MINGW-packages?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,350,2016-09-24T12:56:50Z,,2022-03-06T15:13:08Z,OPEN,False,2286,0,11,https://github.com/USeebi,Msys2 pkg-config,1,[],https://github.com/dokan-dev/dokany/pull/350,https://github.com/Rondom,7,https://github.com/dokan-dev/dokany/pull/350#issuecomment-256001829,Msys2 fuse library pkg-config and pacman package to be consumed by makepkg,"I guess the package mostly working with Msys2 as Mingw has no syslog while Linux probably use fuse directly but not dokan-fuse.

Can you please explain what you mean here in more detail? I do not really understand üòï",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,356,2016-09-27T15:24:38Z,2016-09-27T19:00:24Z,2016-09-28T09:48:05Z,MERGED,True,7,2,2,https://github.com/taruti,sys small tidyup,2,[],https://github.com/dokan-dev/dokany/pull/356,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/356,"No operational changes.
Eliminate superfluous conditional
Document some CCB field current locking practices
Remote one dead field","No operational changes.
Eliminate superfluous conditional
Document some CCB field current locking practices
Remote one dead field",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,356,2016-09-27T15:24:38Z,2016-09-27T19:00:24Z,2016-09-28T09:48:05Z,MERGED,True,7,2,2,https://github.com/taruti,sys small tidyup,2,[],https://github.com/dokan-dev/dokany/pull/356,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/356#issuecomment-249963953,"No operational changes.
Eliminate superfluous conditional
Document some CCB field current locking practices
Remote one dead field","Hi @taruti ,
Thank you for the changes and reviewing the documentation ! ‚ù§Ô∏è
All good to me üòé keep up the good work !
(are you reviewing something on the dokan driver ?)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,356,2016-09-27T15:24:38Z,2016-09-27T19:00:24Z,2016-09-28T09:48:05Z,MERGED,True,7,2,2,https://github.com/taruti,sys small tidyup,2,[],https://github.com/dokan-dev/dokany/pull/356,https://github.com/taruti,3,https://github.com/dokan-dev/dokany/pull/356#issuecomment-250122005,"No operational changes.
Eliminate superfluous conditional
Document some CCB field current locking practices
Remote one dead field","Thanks for merging!
Just browsing around while chasing bugs elsewhere.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,363,2016-10-06T00:55:19Z,2016-10-07T05:33:58Z,2016-10-07T05:34:00Z,MERGED,True,21,0,1,https://github.com/marinkobabic,fix bsod issue related to filesystem mount on Windows 10 build 14936,1,[],https://github.com/dokan-dev/dokany/pull/363,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/363,"Fix for issue #359. Please do a review if I'm doing the buffer copy correct. Maybe is there a much simpler way to compare the strings?
The issue is related to the dokan architecture. If we face more such problems in the future a generic approach must be implement to avoid such problems.","Fix for issue #359. Please do a review if I'm doing the buffer copy correct. Maybe is there a much simpler way to compare the strings?
The issue is related to the dokan architecture. If we face more such problems in the future a generic approach must be implement to avoid such problems.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,363,2016-10-06T00:55:19Z,2016-10-07T05:33:58Z,2016-10-07T05:34:00Z,MERGED,True,21,0,1,https://github.com/marinkobabic,fix bsod issue related to filesystem mount on Windows 10 build 14936,1,[],https://github.com/dokan-dev/dokany/pull/363,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/363#issuecomment-251987991,"Fix for issue #359. Please do a review if I'm doing the buffer copy correct. Maybe is there a much simpler way to compare the strings?
The issue is related to the dokan architecture. If we face more such problems in the future a generic approach must be implement to avoid such problems.","Hi @marinkobabic ,
Well found as always and extremely appreciate ‚ù§Ô∏è !
About unicode string compare, can we not just call RtlCompareUnicodeString with fileObject->FileName and systemVolume, check the return value like:
RtlInitUnicodeString(&systemVolume, L""\\System Volume Information"");
if (RtlCompareUnicodeString(&systemVolume, &(fileObject->FileName), TRUE) < 0) {
   DDbgPrint(""  It's an access to System Volume, so don't return SUCCESS. We don't have one."")
   status = STATUS_NO_SUCH_FILE;
   __leave;
}

it would avoid the buffer copy.
RtlCompareUnicodeString doc says that < Zero : String1 is less than String2., so it ""should"" be alright üòÑ do you think you can test something like that ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,363,2016-10-06T00:55:19Z,2016-10-07T05:33:58Z,2016-10-07T05:34:00Z,MERGED,True,21,0,1,https://github.com/marinkobabic,fix bsod issue related to filesystem mount on Windows 10 build 14936,1,[],https://github.com/dokan-dev/dokany/pull/363,https://github.com/marinkobabic,3,https://github.com/dokan-dev/dokany/pull/363#issuecomment-252002623,"Fix for issue #359. Please do a review if I'm doing the buffer copy correct. Maybe is there a much simpler way to compare the strings?
The issue is related to the dokan architecture. If we face more such problems in the future a generic approach must be implement to avoid such problems.","What we need is the check if the path starts with \System Volume Information
The passed in path is
\System Volume Information\Cloud Files\",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,363,2016-10-06T00:55:19Z,2016-10-07T05:33:58Z,2016-10-07T05:34:00Z,MERGED,True,21,0,1,https://github.com/marinkobabic,fix bsod issue related to filesystem mount on Windows 10 build 14936,1,[],https://github.com/dokan-dev/dokany/pull/363,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/363#issuecomment-252076141,"Fix for issue #359. Please do a review if I'm doing the buffer copy correct. Maybe is there a much simpler way to compare the strings?
The issue is related to the dokan architecture. If we face more such problems in the future a generic approach must be implement to avoid such problems.","Yes, I tought RtlCompareUnicodeString would return a <= 0 value if fileObject->FileName started with \System Volume Information.
I tested it and I was wrong üò¢
    UNICODE_STRING string1, string2, string3, string4;
    RtlInitUnicodeString(&string1, L""\\System Volume Information"");
    RtlInitUnicodeString(&string2, L""\\System Volume Information\\Cloud Files\\"");
    LONG result = RtlCompareUnicodeString(&string1, &string2, TRUE);
    DDbgPrint(""RtlCompareUnicodeString 1 result %ld\n"", result);

    RtlInitUnicodeString(&string3, L""\\System Volume Information2\\Cloud Files\\"");
    result = RtlCompareUnicodeString(&string1, &string3, TRUE);
    DDbgPrint(""RtlCompareUnicodeString 2 result %ld\n"", result);

    RtlInitUnicodeString(&string3, L""\\test"");
    result = RtlCompareUnicodeString(&string1, &string4, TRUE);
    DDbgPrint(""RtlCompareUnicodeString 3 result %ld\n"", result);


.....

[DokanFS] RtlCompareUnicodeString 1 result -13
[DokanFS] RtlCompareUnicodeString 2 result -14
[DokanFS] RtlCompareUnicodeString 3 result 26

BUT this worked:
    UNICODE_STRING systemVolume;
    RtlInitUnicodeString(&systemVolume, L""\\System Volume Information"");

    if (systemVolume.Length >= fileObject->FileName.Length)
    {
      LPCWSTR p1, p2;
      p1 = systemVolume.Buffer;
      p2 = fileObject->FileName.Buffer;
      unsigned int len = 0;
      LONG ret = 0;
      while (!ret && len < 26) {
          ret = *p1++ - *p2++;
          ++len;
      }
      if (ret == 0 && (systemVolume.Length == fileObject->FileName.Length || *p2 == L'\\'))  {
        DDbgPrint(""  It's an access to System Volume, so don't return SUCCESS. We don't have one."")
          status = STATUS_NO_SUCH_FILE;
        __leave;
      }
    }

it is not much but...we avoid allocating memory üòÉ
Could you try it on your side if still work and update your PR ‚ù§Ô∏è ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,363,2016-10-06T00:55:19Z,2016-10-07T05:33:58Z,2016-10-07T05:34:00Z,MERGED,True,21,0,1,https://github.com/marinkobabic,fix bsod issue related to filesystem mount on Windows 10 build 14936,1,[],https://github.com/dokan-dev/dokany/pull/363,https://github.com/marinkobabic,5,https://github.com/dokan-dev/dokany/pull/363#issuecomment-252087750,"Fix for issue #359. Please do a review if I'm doing the buffer copy correct. Maybe is there a much simpler way to compare the strings?
The issue is related to the dokan architecture. If we face more such problems in the future a generic approach must be implement to avoid such problems.","@Liryna
Have done the requested changes and it works fine üëç Nice solution to avoid memory allocation üòÑ
So let's hope how that the BSOD can't be reproduced anymore. Thanks a lot!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,363,2016-10-06T00:55:19Z,2016-10-07T05:33:58Z,2016-10-07T05:34:00Z,MERGED,True,21,0,1,https://github.com/marinkobabic,fix bsod issue related to filesystem mount on Windows 10 build 14936,1,[],https://github.com/dokan-dev/dokany/pull/363,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/363#issuecomment-252156839,"Fix for issue #359. Please do a review if I'm doing the buffer copy correct. Maybe is there a much simpler way to compare the strings?
The issue is related to the dokan architecture. If we face more such problems in the future a generic approach must be implement to avoid such problems.",Thank you for the quick changes ‚ù§Ô∏è !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,370,2016-10-17T19:39:57Z,2016-10-19T05:58:06Z,2016-10-19T05:58:07Z,MERGED,True,7,0,1,https://github.com/Kerbox,MirrorCreateFile - Reject when trying to open a file as a directory,1,[],https://github.com/dokan-dev/dokany/pull/370,https://github.com/Kerbox,1,https://github.com/dokan-dev/dokany/pull/370,"STATUS_NOT_A_DIRECTORY should be returned if a file is being opened and the FILE_DIRECTORY_FILE option is used.
The problem with allowing this, is that if the file has previously been opened as a normal file, it will set the (shared) FCB as being a directory (here). As such, further reads on the file will fail!","STATUS_NOT_A_DIRECTORY should be returned if a file is being opened and the FILE_DIRECTORY_FILE option is used.
The problem with allowing this, is that if the file has previously been opened as a normal file, it will set the (shared) FCB as being a directory (here). As such, further reads on the file will fail!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,370,2016-10-17T19:39:57Z,2016-10-19T05:58:06Z,2016-10-19T05:58:07Z,MERGED,True,7,0,1,https://github.com/Kerbox,MirrorCreateFile - Reject when trying to open a file as a directory,1,[],https://github.com/dokan-dev/dokany/pull/370,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/370#issuecomment-254479597,"STATUS_NOT_A_DIRECTORY should be returned if a file is being opened and the FILE_DIRECTORY_FILE option is used.
The problem with allowing this, is that if the file has previously been opened as a normal file, it will set the (shared) FCB as being a directory (here). As such, further reads on the file will fail!","Hi @Kerbox ,
Thank you for the contribution üëç very appreciate for taking the time looking at the issue.
If the request is made with FILE_DIRECTORY_FILE then DokanFileInfo->IsDirectory should be set and we are going to be in this case 
  
    
      dokany/samples/dokan_mirror/mirror.c
    
    
         Line 308
      in
      9197ed3
    
  
  
    

        
          
           if (DokanFileInfo->IsDirectory) { 
        
    
  


After the file will be open as directory 
  
    
      dokany/samples/dokan_mirror/mirror.c
    
    
         Line 331
      in
      9197ed3
    
  
  
    

        
          
           CreateFile(filePath, genericDesiredAccess, ShareAccess, 
        
    
  

 (that's our issue).
Maybe we can add your check just before this createfile ?
if (!(fileAttr & FILE_ATTRIBUTE_DIRECTORY) &&
      !(CreateOptions & FILE_NON_DIRECTORY_FILE)) {
        (CreateOptions & FILE_DIRECTORY_FILE)) {
    DokanFileInfo->IsDirectory = TRUE;
      return STATUS_NOT_A_DIRECTORY; 
}

I say this because your fix currently broke a couple of the test:
https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-797/job/dhsf5biox3vqmk6u#L821",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,370,2016-10-17T19:39:57Z,2016-10-19T05:58:06Z,2016-10-19T05:58:07Z,MERGED,True,7,0,1,https://github.com/Kerbox,MirrorCreateFile - Reject when trying to open a file as a directory,1,[],https://github.com/dokan-dev/dokany/pull/370,https://github.com/Kerbox,3,https://github.com/dokan-dev/dokany/pull/370#issuecomment-254565784,"STATUS_NOT_A_DIRECTORY should be returned if a file is being opened and the FILE_DIRECTORY_FILE option is used.
The problem with allowing this, is that if the file has previously been opened as a normal file, it will set the (shared) FCB as being a directory (here). As such, further reads on the file will fail!","I got all tests to pass here (on win7 and win10), but appveyor claims that base\08.t fails now.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,370,2016-10-17T19:39:57Z,2016-10-19T05:58:06Z,2016-10-19T05:58:07Z,MERGED,True,7,0,1,https://github.com/Kerbox,MirrorCreateFile - Reject when trying to open a file as a directory,1,[],https://github.com/dokan-dev/dokany/pull/370,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/370#issuecomment-254617108,"STATUS_NOT_A_DIRECTORY should be returned if a file is being opened and the FILE_DIRECTORY_FILE option is used.
The problem with allowing this, is that if the file has previously been opened as a normal file, it will set the (shared) FCB as being a directory (here). As such, further reads on the file will fail!","@Kerbox üëç Thank You
I have rerun the build appveyor and test passed. I think the file was just not created in time before the delete.
You can rebase and clean your commit for the merge.
Thanks again for taking the time to look into this !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,370,2016-10-17T19:39:57Z,2016-10-19T05:58:06Z,2016-10-19T05:58:07Z,MERGED,True,7,0,1,https://github.com/Kerbox,MirrorCreateFile - Reject when trying to open a file as a directory,1,[],https://github.com/dokan-dev/dokany/pull/370,https://github.com/Kerbox,5,https://github.com/dokan-dev/dokany/pull/370#issuecomment-254631659,"STATUS_NOT_A_DIRECTORY should be returned if a file is being opened and the FILE_DIRECTORY_FILE option is used.
The problem with allowing this, is that if the file has previously been opened as a normal file, it will set the (shared) FCB as being a directory (here). As such, further reads on the file will fail!","Never rebased before, I hope I did that correctly!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,370,2016-10-17T19:39:57Z,2016-10-19T05:58:06Z,2016-10-19T05:58:07Z,MERGED,True,7,0,1,https://github.com/Kerbox,MirrorCreateFile - Reject when trying to open a file as a directory,1,[],https://github.com/dokan-dev/dokany/pull/370,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/370#issuecomment-254717870,"STATUS_NOT_A_DIRECTORY should be returned if a file is being opened and the FILE_DIRECTORY_FILE option is used.
The problem with allowing this, is that if the file has previously been opened as a normal file, it will set the (shared) FCB as being a directory (here). As such, further reads on the file will fail!",Perfect rebase @Kerbox üëç Thanks for your contribution !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,371,2016-10-19T17:42:58Z,2016-10-19T17:58:29Z,2016-10-19T17:58:29Z,MERGED,True,12,4,1,https://github.com/Kerbox,Double check that the returned security descriptor is valid,1,[],https://github.com/dokan-dev/dokany/pull/371,https://github.com/Kerbox,1,https://github.com/dokan-dev/dokany/pull/371,To prevent BSOD in situations like #366,To prevent BSOD in situations like #366,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,371,2016-10-19T17:42:58Z,2016-10-19T17:58:29Z,2016-10-19T17:58:29Z,MERGED,True,12,4,1,https://github.com/Kerbox,Double check that the returned security descriptor is valid,1,[],https://github.com/dokan-dev/dokany/pull/371,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/371#issuecomment-254891421,To prevent BSOD in situations like #366,"Thank you @Kerbox for the quick fix ! This is very appreciated !!! üèÜ
Release 1.0.1 planned end of this week or next one with it üòé",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,373,2016-10-21T17:42:29Z,2016-10-22T08:06:40Z,2016-10-25T07:37:57Z,MERGED,True,2,0,1,https://github.com/Kerbox,Return correct status for FSCTL_FILESYSTEM_GET_STATISTICS,1,[],https://github.com/dokan-dev/dokany/pull/373,https://github.com/Kerbox,1,https://github.com/dokan-dev/dokany/pull/373,"Need to return STATUS_INVALID_DEVICE_REQUEST, as described here. This is a fix for #200","Need to return STATUS_INVALID_DEVICE_REQUEST, as described here. This is a fix for #200",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,373,2016-10-21T17:42:29Z,2016-10-22T08:06:40Z,2016-10-25T07:37:57Z,MERGED,True,2,0,1,https://github.com/Kerbox,Return correct status for FSCTL_FILESYSTEM_GET_STATISTICS,1,[],https://github.com/dokan-dev/dokany/pull/373,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/373#issuecomment-255457819,"Need to return STATUS_INVALID_DEVICE_REQUEST, as described here. This is a fix for #200","Oh really ! @Kerbox ! I will make the test tomorrow ‚ù§Ô∏è ‚ù§Ô∏è ‚ù§Ô∏è !!!
Amazing if it is so simple üëç Great job !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,373,2016-10-21T17:42:29Z,2016-10-22T08:06:40Z,2016-10-25T07:37:57Z,MERGED,True,2,0,1,https://github.com/Kerbox,Return correct status for FSCTL_FILESYSTEM_GET_STATISTICS,1,[],https://github.com/dokan-dev/dokany/pull/373,https://github.com/Maxhy,3,https://github.com/dokan-dev/dokany/pull/373#issuecomment-255514126,"Need to return STATUS_INVALID_DEVICE_REQUEST, as described here. This is a fix for #200","I missed that one when trying to fix it months ago...
After testing, it is indeed working. Thanks a lot, good job!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,373,2016-10-21T17:42:29Z,2016-10-22T08:06:40Z,2016-10-25T07:37:57Z,MERGED,True,2,0,1,https://github.com/Kerbox,Return correct status for FSCTL_FILESYSTEM_GET_STATISTICS,1,[],https://github.com/dokan-dev/dokany/pull/373,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/373#issuecomment-255515003,"Need to return STATUS_INVALID_DEVICE_REQUEST, as described here. This is a fix for #200","This very appreciate @Kerbox ! you can even imagine üòÑ !
Thanks for taking a look at current open issue on dokan ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,373,2016-10-21T17:42:29Z,2016-10-22T08:06:40Z,2016-10-25T07:37:57Z,MERGED,True,2,0,1,https://github.com/Kerbox,Return correct status for FSCTL_FILESYSTEM_GET_STATISTICS,1,[],https://github.com/dokan-dev/dokany/pull/373,https://github.com/Kerbox,5,https://github.com/dokan-dev/dokany/pull/373#issuecomment-255960038,"Need to return STATUS_INVALID_DEVICE_REQUEST, as described here. This is a fix for #200",No problem! I am glad I can help. üòÑ,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/375,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both","Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/375#issuecomment-256046064,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both","Hi @Rondom ,
Ah ‚ù§Ô∏è !!!
I am absolutely not familiar with this but I can test üëç on windows.
About package name, I think the third option would be the best ! This will let choice for the users.
Great job @Rondom !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/375#issuecomment-256049053,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both","Then wait with the testing for now. On a second thought, I can also use it while building the FUSE-mirror, the comments in the code even suggest to get the CFLAGS and LDFLAGS using the pkg-config....

gcc -Wall fusexmp.c $(pkg-config fuse --cflags --libs) -o fusexmp",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Rondom,4,https://github.com/dokan-dev/dokany/pull/375#issuecomment-256051688,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both","About option 3: I thought about this more and noticed that we would need the correct Dokan version for a dokanfuse.pc. So this is dependent on some other work I planned to be doing (refactor how the version number gets embedded in the build). This might take a bit more time (which I do not have right now, I am afraid.
So, for this PR we have two possibilities: Wait until we can do it perfectly (retrieve the version) or simply implement option 2: ""Add some option to cmake that allows one to disable the installation of fuse.pc (-DINSTALL_FUSE_PKG_CONFIG=OFF) and merge this PR for now. A dokanfuse.pc with the version embedded can come in a later pull-request.
What do you think?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/375#issuecomment-256063101,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both","No problem, second option is also great üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Rondom,6,https://github.com/dokan-dev/dokany/pull/375#issuecomment-256717507,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both","Now modified the build-script to use pkg-config.
Oh, and the PR cannot be merged right now anyway, I guess. We rather want this to be in 1.1.0 and not in 1.0.1. :-D",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/375#issuecomment-256724299,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both",Thank you @Rondom ! We will wait 1.1.0 to merge this so ‚ù§Ô∏è (and test it on windows at this moment),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/375#issuecomment-258604313,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both",@Rondom shoud we merge this üëç ?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Rondom,9,https://github.com/dokan-dev/dokany/pull/375#issuecomment-258614209,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both",Sure,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,375,2016-10-25T09:08:18Z,2016-11-05T15:18:31Z,2016-11-05T16:12:45Z,MERGED,True,47,2,3,https://github.com/Rondom,dokan_fuse: Add libfuse-compatible pkg-config,2,[],https://github.com/dokan-dev/dokany/pull/375,https://github.com/Liryna,10,https://github.com/dokan-dev/dokany/pull/375#issuecomment-258618193,"Don't merge yet. This needs further testing and input.
This fixes #338.
This generates a pkg-config-file that can be used as a drop-in ""replacement"" for libfuse, i.e.
$ pkg-config --libs --cflags fuse

will return the dokanfuse-flags.
Required testing
I have only tested this on Debian Stretch. Thus, it is lacking testing on Windows. I would be happy if someone could test it on

Cygwin
MSYS2-Installer - MinGW-W64-32bit
MSYS2-Installer - MinGW-W64-64bit

I currently do not have any working Windows-system at hand to test myself.
You can add -DCMAKE_INSTALL_PREFIX=""/tmp/usr/ to the cmake-invokation to define another prefix to avoid cluttering your global directories while testing. You can then use the  PKG_CONFIG_PATH environment-variable to point pkg-config to the right lib/pkgconfig-dir.
Situations to test:

Normal installation (cd build && cmake .. && make install)
Custom absolute path for LIBDIR and and INCLUDEDIR (i.e. -DCMAKE_INSTALL_LIBDIR=/some/absolute/path/that/is/different and -DCMAKE_INSTALL_INCLUDEDIR=/some/absolute/path/that/is/different).

I am a bit confused about whether we need to use LIBDIR or BINDIR, because I was unfamiliar with the Windows-only concept of ""import libraries"" (research shows that it had historic reasons to support compiling for OS/2 from NT without having the OS/2 DLLs).
Discussion
The pkg-config-file will be installed as fuse.pc. So we kind of snatch the libfuse name. This could be considered problematic for users that prefer to have different fuse-libaries installed. I have some suggestions for that

Leave as it is, always install a fuse.pc
Add some option to cmake that allows one to disable the installation of fuse.pc ('-DINSTALL_PKG_CONFIG=OFF`)'
Install a second pkg-config-file dokanfuse.pc and add an option like -DINSTALL_PKG_CONFIG=(both|fuse|dokanfuse|none), default would be both",Thank you @Rondom üòç !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,377,2016-10-26T22:23:31Z,2016-10-27T06:13:18Z,2016-10-27T17:12:17Z,MERGED,True,1,0,1,https://github.com/Rondom,Add Windows 2016 support to README,1,[],https://github.com/dokan-dev/dokany/pull/377,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/377,I have tested Dokany on the final version of Windows Server 2016 running in a qemu-VM with SecureBoot enabled.,I have tested Dokany on the final version of Windows Server 2016 running in a qemu-VM with SecureBoot enabled.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,377,2016-10-26T22:23:31Z,2016-10-27T06:13:18Z,2016-10-27T17:12:17Z,MERGED,True,1,0,1,https://github.com/Rondom,Add Windows 2016 support to README,1,[],https://github.com/dokan-dev/dokany/pull/377,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/377#issuecomment-256555441,I have tested Dokany on the final version of Windows Server 2016 running in a qemu-VM with SecureBoot enabled.,"Oh @Rondom ! Totally forgot it >< ! All this work and even not in the read me üò¢
Thank you üëç !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,378,2016-10-27T23:52:52Z,2016-10-28T06:21:13Z,2016-10-28T06:21:15Z,MERGED,True,69,48,3,https://github.com/Rondom,CI: AppVeyor speed-ups and enhancements,13,[],https://github.com/dokan-dev/dokany/pull/378,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/378,"This set of commits fixes a few issues and decreases the time needed for a build.
Issues:

command output was not appearing in log
documentation push and Coverity Scan were run when using AppVeyor in one's private fork
MSBuild output was not appearing in Messages tab in AppVeyor

The other part of the patches are some speed-ups. We cache downloaded packages to reduce load on the mirrors and decrease build-times. The individual speed-ups are not very big for some of the commits, because the cache is downloaded as a zip-archive at the beginning of the build as well and it does not matter which server you download from. There are some improvements underway from the AppVeyor side, so this might get faster in the future. Download-locations can be flaky though, so even without huge speed-ups  the cache should improve things. For example I have seen the Cygwin-Setup-download taking longer sometimes. Should any problems arise, can we move individual dirs out of the cache using environment variables at the top.
For a closer analysis, one can hover over the line numbers in the AppVeyor build-output to see when each line was printed. Though one needs to build at least one commit where appveyor.yml is not modified to see the cache in effect.","This set of commits fixes a few issues and decreases the time needed for a build.
Issues:

command output was not appearing in log
documentation push and Coverity Scan were run when using AppVeyor in one's private fork
MSBuild output was not appearing in Messages tab in AppVeyor

The other part of the patches are some speed-ups. We cache downloaded packages to reduce load on the mirrors and decrease build-times. The individual speed-ups are not very big for some of the commits, because the cache is downloaded as a zip-archive at the beginning of the build as well and it does not matter which server you download from. There are some improvements underway from the AppVeyor side, so this might get faster in the future. Download-locations can be flaky though, so even without huge speed-ups  the cache should improve things. For example I have seen the Cygwin-Setup-download taking longer sometimes. Should any problems arise, can we move individual dirs out of the cache using environment variables at the top.
For a closer analysis, one can hover over the line numbers in the AppVeyor build-output to see when each line was printed. Though one needs to build at least one commit where appveyor.yml is not modified to see the cache in effect.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,378,2016-10-27T23:52:52Z,2016-10-28T06:21:13Z,2016-10-28T06:21:15Z,MERGED,True,69,48,3,https://github.com/Rondom,CI: AppVeyor speed-ups and enhancements,13,[],https://github.com/dokan-dev/dokany/pull/378,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/378#issuecomment-256845357,"This set of commits fixes a few issues and decreases the time needed for a build.
Issues:

command output was not appearing in log
documentation push and Coverity Scan were run when using AppVeyor in one's private fork
MSBuild output was not appearing in Messages tab in AppVeyor

The other part of the patches are some speed-ups. We cache downloaded packages to reduce load on the mirrors and decrease build-times. The individual speed-ups are not very big for some of the commits, because the cache is downloaded as a zip-archive at the beginning of the build as well and it does not matter which server you download from. There are some improvements underway from the AppVeyor side, so this might get faster in the future. Download-locations can be flaky though, so even without huge speed-ups  the cache should improve things. For example I have seen the Cygwin-Setup-download taking longer sometimes. Should any problems arise, can we move individual dirs out of the cache using environment variables at the top.
For a closer analysis, one can hover over the line numbers in the AppVeyor build-output to see when each line was printed. Though one needs to build at least one commit where appveyor.yml is not modified to see the cache in effect.","Hi @Rondom !
That's perfect üòÆ !
I didn't know cygwin cache could be merged for x86 and x64 ! Thats going to speed up yes ^^
Cache doxygen is also a good idea !
test: off I didn't know appveyor would look a test by default üòû  !
And specially thank you for adding RDP access by default that's awesome üòÑ !
Keep rocking like that @Rondom ! very appreciate such contribution !
We gonna see the difference in build after the second build when he will have everything in cache.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,382,2016-10-30T13:15:30Z,2016-11-26T10:38:21Z,2016-11-26T10:38:21Z,MERGED,True,44,48,9,https://github.com/taruti,sys: Less wide locking,1,[],https://github.com/dokan-dev/dokany/pull/382,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/382,"This makes locking less wide with especial care to FsRtl locking routines.
Will do testing on monday.","This makes locking less wide with especial care to FsRtl locking routines.
Will do testing on monday.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,382,2016-10-30T13:15:30Z,2016-11-26T10:38:21Z,2016-11-26T10:38:21Z,MERGED,True,44,48,9,https://github.com/taruti,sys: Less wide locking,1,[],https://github.com/dokan-dev/dokany/pull/382,https://github.com/taruti,2,https://github.com/dokan-dev/dokany/pull/382#issuecomment-257396494,"This makes locking less wide with especial care to FsRtl locking routines.
Will do testing on monday.","Copied+deleted 100k files and tried with mirror + one custom filesystem.
If anyone else wants to test this the appveyor installer is at https://ci.appveyor.com/api/buildjobs/f5mpwyrjk7cyhyag/artifacts/DokanSetup-1.0.1.0843.exe",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,382,2016-10-30T13:15:30Z,2016-11-26T10:38:21Z,2016-11-26T10:38:21Z,MERGED,True,44,48,9,https://github.com/taruti,sys: Less wide locking,1,[],https://github.com/dokan-dev/dokany/pull/382,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/382#issuecomment-257413251,"This makes locking less wide with especial care to FsRtl locking routines.
Will do testing on monday.","Thank you @taruti this seems to be an elegant way to do it üëç
Just have a couple of questions pending and I merge it ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,382,2016-10-30T13:15:30Z,2016-11-26T10:38:21Z,2016-11-26T10:38:21Z,MERGED,True,44,48,9,https://github.com/taruti,sys: Less wide locking,1,[],https://github.com/dokan-dev/dokany/pull/382,https://github.com/taruti,4,https://github.com/dokan-dev/dokany/pull/382#issuecomment-259134600,"This makes locking less wide with especial care to FsRtl locking routines.
Will do testing on monday.",@Liryna feel free to ask any questions :),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,382,2016-10-30T13:15:30Z,2016-11-26T10:38:21Z,2016-11-26T10:38:21Z,MERGED,True,44,48,9,https://github.com/taruti,sys: Less wide locking,1,[],https://github.com/dokan-dev/dokany/pull/382,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/382#issuecomment-259134841,"This makes locking less wide with especial care to FsRtl locking routines.
Will do testing on monday.","@taruti They are in the comments of the PR üòÉ
https://github.com/dokan-dev/dokany/pull/382/files",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,382,2016-10-30T13:15:30Z,2016-11-26T10:38:21Z,2016-11-26T10:38:21Z,MERGED,True,44,48,9,https://github.com/taruti,sys: Less wide locking,1,[],https://github.com/dokan-dev/dokany/pull/382,https://github.com/taruti,6,https://github.com/dokan-dev/dokany/pull/382#issuecomment-259136353,"This makes locking less wide with especial care to FsRtl locking routines.
Will do testing on monday.",For some weird reason Github is not displaying those comments on this PR to me.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,382,2016-10-30T13:15:30Z,2016-11-26T10:38:21Z,2016-11-26T10:38:21Z,MERGED,True,44,48,9,https://github.com/taruti,sys: Less wide locking,1,[],https://github.com/dokan-dev/dokany/pull/382,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/382#issuecomment-259176412,"This makes locking less wide with especial care to FsRtl locking routines.
Will do testing on monday.","Ok probably the new review system of github üòÑ

are you sure about this ? I agree that it is a struct full of ULONG. But should not be locked to be sure that all fields are updated in the same time ? LN340
I guess this is linked to all locks removed in fscontrol.c . Did you find a documentation that say it is multi thread safe ? fastfat sample seems to lock FCB during FsRtlCheckLockForReadAccess https://github.com/Microsoft/Windows-driver-samples/blob/aa6e0b36eb932099fa4eb950a6f5e289a23b6d6e/filesys/fastfat/read.c#L1096
LN 346",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,382,2016-10-30T13:15:30Z,2016-11-26T10:38:21Z,2016-11-26T10:38:21Z,MERGED,True,44,48,9,https://github.com/taruti,sys: Less wide locking,1,[],https://github.com/dokan-dev/dokany/pull/382,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/382#issuecomment-263056388,"This makes locking less wide with especial care to FsRtl locking routines.
Will do testing on monday.","Seems like you are right, from osr thread, after FsRtl init the struct seems to be protected internally. üëç
http://online.osr.com/showthread.cfm?link=243153
Thank you for your contribution @taruti as always!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,389,2016-11-03T16:14:49Z,2016-11-03T17:32:26Z,2016-11-03T17:32:26Z,MERGED,True,109,62,1,https://github.com/Rondom,"AppVeyor Enhancements: BSOD, clang-format, error-checking",7,[],https://github.com/dokan-dev/dokany/pull/389,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/389,"Check return code of external commands faa9485. We want to fail early if external commands fail. Thus we introduce a function that checks the $LASTERRORCODE and use it throughout the code. This makes failures much easier to spot because the failure is near the cause of the error. Motivation for this was a failing build where the Cygwin-installation failed half-way-through due too a flaky mirror and I spent quite some time wondering about the why cmake was trying to use MSVC instead of GCC Turned out that native Windows-cmake is in the path and thus got run instead.


Run git clang-format on pull-requests c8ffc49. We output an AppVeyor-message in case the code format on the lines changed does not match with the one defined in .clang-format. This  works only on pull requests and not on normal direct pushes to the repo, because AppVeyor does not provide the commitref before the push which is needed in order to determine the lines to check.

Demo 1: PR with dirty indentation, Appveyor Build with warning message and suggested changes for download
Demo 2: PR with clean indentation, Appveyor Build with info message



Reboot clean-up and BSOD-Detection c405310, 70b08f5: Motivation for this was issue #386. This is by no means perfect, because AppVeyor does not behave deterministically in base of a BSOD (see my comment here, but at least in some cases we are able to detect the BSOD and even upload the MEMORY.DMP as an artifact for offline debugging.


Some minor changes 9221bee, e26551f, eca796c","Check return code of external commands faa9485. We want to fail early if external commands fail. Thus we introduce a function that checks the $LASTERRORCODE and use it throughout the code. This makes failures much easier to spot because the failure is near the cause of the error. Motivation for this was a failing build where the Cygwin-installation failed half-way-through due too a flaky mirror and I spent quite some time wondering about the why cmake was trying to use MSVC instead of GCC Turned out that native Windows-cmake is in the path and thus got run instead.


Run git clang-format on pull-requests c8ffc49. We output an AppVeyor-message in case the code format on the lines changed does not match with the one defined in .clang-format. This  works only on pull requests and not on normal direct pushes to the repo, because AppVeyor does not provide the commitref before the push which is needed in order to determine the lines to check.

Demo 1: PR with dirty indentation, Appveyor Build with warning message and suggested changes for download
Demo 2: PR with clean indentation, Appveyor Build with info message



Reboot clean-up and BSOD-Detection c405310, 70b08f5: Motivation for this was issue #386. This is by no means perfect, because AppVeyor does not behave deterministically in base of a BSOD (see my comment here, but at least in some cases we are able to detect the BSOD and even upload the MEMORY.DMP as an artifact for offline debugging.


Some minor changes 9221bee, e26551f, eca796c",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,389,2016-11-03T16:14:49Z,2016-11-03T17:32:26Z,2016-11-03T17:32:26Z,MERGED,True,109,62,1,https://github.com/Rondom,"AppVeyor Enhancements: BSOD, clang-format, error-checking",7,[],https://github.com/dokan-dev/dokany/pull/389,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/389#issuecomment-258215625,"Check return code of external commands faa9485. We want to fail early if external commands fail. Thus we introduce a function that checks the $LASTERRORCODE and use it throughout the code. This makes failures much easier to spot because the failure is near the cause of the error. Motivation for this was a failing build where the Cygwin-installation failed half-way-through due too a flaky mirror and I spent quite some time wondering about the why cmake was trying to use MSVC instead of GCC Turned out that native Windows-cmake is in the path and thus got run instead.


Run git clang-format on pull-requests c8ffc49. We output an AppVeyor-message in case the code format on the lines changed does not match with the one defined in .clang-format. This  works only on pull requests and not on normal direct pushes to the repo, because AppVeyor does not provide the commitref before the push which is needed in order to determine the lines to check.

Demo 1: PR with dirty indentation, Appveyor Build with warning message and suggested changes for download
Demo 2: PR with clean indentation, Appveyor Build with info message



Reboot clean-up and BSOD-Detection c405310, 70b08f5: Motivation for this was issue #386. This is by no means perfect, because AppVeyor does not behave deterministically in base of a BSOD (see my comment here, but at least in some cases we are able to detect the BSOD and even upload the MEMORY.DMP as an artifact for offline debugging.


Some minor changes 9221bee, e26551f, eca796c","Hi @Rondom ,
As always, big thank you üèÜ !!! You are really rocking it !
This features are awesome !
I always wanted a clang-format check üòÑ !!! We will have beautiful pull request to come with it ‚ù§Ô∏è I am sure.
BSOD is also very important as we saw ! A build could succeed even if it has BSOD üò¢ Very good point here !
Very clean PR as usual ^^ !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,390,2016-11-03T16:39:13Z,2016-11-03T17:19:21Z,2016-11-03T18:13:56Z,MERGED,True,1,1,1,https://github.com/Rondom,Doxygen: Update Doxyfile to version 1.0.1,1,[],https://github.com/dokan-dev/dokany/pull/390,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/390,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,390,2016-11-03T16:39:13Z,2016-11-03T17:19:21Z,2016-11-03T18:13:56Z,MERGED,True,1,1,1,https://github.com/Rondom,Doxygen: Update Doxyfile to version 1.0.1,1,[],https://github.com/dokan-dev/dokany/pull/390,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/390#issuecomment-258211627,,üëç ^^ Thank you !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,392,2016-11-08T18:58:53Z,2016-11-08T19:53:53Z,2016-11-08T19:53:53Z,MERGED,True,14,3,1,https://github.com/Kerbox,Mirror: Return empty SACL if mirror doesn't have SeSecurityPrivilege,1,[],https://github.com/dokan-dev/dokany/pull/392,https://github.com/Kerbox,1,https://github.com/dokan-dev/dokany/pull/392,"If mirror cannot get the SE_SECURITY_NAME privilege, don't ask for SACL in MirrorGetFileInformation. This will confuse win7 for some reason, as in #391.","If mirror cannot get the SE_SECURITY_NAME privilege, don't ask for SACL in MirrorGetFileInformation. This will confuse win7 for some reason, as in #391.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,392,2016-11-08T18:58:53Z,2016-11-08T19:53:53Z,2016-11-08T19:53:53Z,MERGED,True,14,3,1,https://github.com/Kerbox,Mirror: Return empty SACL if mirror doesn't have SeSecurityPrivilege,1,[],https://github.com/dokan-dev/dokany/pull/392,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/392#issuecomment-259241293,"If mirror cannot get the SE_SECURITY_NAME privilege, don't ask for SACL in MirrorGetFileInformation. This will confuse win7 for some reason, as in #391.","Oh @Kerbox üòç ! I had an idea the issue would be linked to this but did not have time to do it.
Thanks a lot üëç ! I very appreciate your work @Kerbox and very well found !",True,{'THUMBS_UP': ['https://github.com/Kerbox']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,394,2016-11-09T16:51:07Z,2016-11-09T17:15:16Z,2016-11-09T17:15:16Z,MERGED,True,8,3,1,https://github.com/Kerbox,Align security descriptor to 4-byte boundary in DokanDispatchSetSecurity,1,[],https://github.com/dokan-dev/dokany/pull/394,https://github.com/Kerbox,1,https://github.com/dokan-dev/dokany/pull/394,This is so that it can easily be used with win32 functions without having to copy the security descriptor into a separate aligned buffer.,This is so that it can easily be used with win32 functions without having to copy the security descriptor into a separate aligned buffer.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,394,2016-11-09T16:51:07Z,2016-11-09T17:15:16Z,2016-11-09T17:15:16Z,MERGED,True,8,3,1,https://github.com/Kerbox,Align security descriptor to 4-byte boundary in DokanDispatchSetSecurity,1,[],https://github.com/dokan-dev/dokany/pull/394,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/394#issuecomment-259469679,This is so that it can easily be used with win32 functions without having to copy the security descriptor into a separate aligned buffer.,"Thank you @Kerbox for the fix ! As always, very appreciate üòã !",True,{'THUMBS_UP': ['https://github.com/Kerbox']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/405,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263377037,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,"Hi @marinkobabic ,
I tested your fix it correctly fix the network behavior üëç congratulations !
Unfortunately, when I try to copy some files (10-20) multiple times, I get a BSOD BAD POOL üò¢
My virtualbox does not seem to save the kernel dumps (for a mysterious reason) so I have unfortunately no call stack to give but this is 100% easy to reproduce.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/marinkobabic,3,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263390028,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,"Hi Liryna

You copied the files from your local drive to dokan drive?

Procmon was running in background?

Thx
Marinko",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263390515,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,"No, procmon was not running.
I just select a couple of files that are in the mirror and spam CTRL+C & CTRL+V a couple of times and I get a BSOD.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/marinkobabic,5,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263410222,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,"No way to reproduce it. What os are you using? My one is Windows 10 x64. I
copied files including folders several times but no BSOD. If you attach the
kernel debugger you should get more details. Can you reproduce the BSOD
without the pull request?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/Rondom,6,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263575131,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,"@marinkobabic Not relevant to the bug, but in its current form, your PR introduces some build warnings: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-25/job/qrc14ku9fxmhykdl",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/marinkobabic,7,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263660221,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,Will fix it. It's just a backslash üòÜ thx,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263687468,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,"@marinkobabic I tried to reproduce without the PR and currently not have been able and when I moved to the PR again to do the test I am currently not able to reproduce it.
I think the BSOD probably come from another reason (copy lots of files seems to make it happen sometimes).
I will be happy to merge your PR when the warning (@Rondom üëç  ) will big fixed .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/Liryna,9,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263688160,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,Or maybe you would like to look more on the implementation regarding your last message here #400 (comment) ?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/Rondom,10,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263741820,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,"@marinkobabic The build-failure is not your fault, pull #407 to fix it or rebase on top of master once @Liryna merges it.
@marinkobabic It looks like FSTest hangs for some mysterious reason. I would guess it is a BSOD. If you cannot reproduce it locally, add your fork to AppVeyor (you can register/login using GitHub) and use RDP to help with debugging.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/marinkobabic,11,https://github.com/dokan-dev/dokany/pull/405#issuecomment-263798044,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,"The question is, can it be reproduced on AppVayor? Will try also to
reproduce it locally.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/marinkobabic,12,https://github.com/dokan-dev/dokany/pull/405#issuecomment-264037820,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,Using this fix procmon displays m:\device...mydir instead of m:\mydir which is not fine. So need more time to review the problem. Please do not merge it. Will cancel the pull request.,True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/marinkobabic,13,https://github.com/dokan-dev/dokany/pull/405#issuecomment-264317752,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,have enabled it only when network option is used. So we have no risk and all should work as usually. The BSOD should be gone.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,405,2016-11-28T09:45:15Z,2016-12-03T12:36:53Z,2016-12-03T12:37:01Z,MERGED,True,40,11,1,https://github.com/marinkobabic,Fix BSOD. When drive ist started using n option and procmon is attaced,1,[],https://github.com/dokan-dev/dokany/pull/405,https://github.com/Liryna,14,https://github.com/dokan-dev/dokany/pull/405#issuecomment-264636878,Networkdrive has no slash root folder. The diskdevicename must be returned in this case,"I have no been able to reproduce the BSOD @marinkobabic
Thank you for the fix and for taking the time ! very appreciated as always üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,407,2016-11-30T00:04:28Z,2016-11-30T06:43:21Z,2016-11-30T10:45:10Z,MERGED,True,2,0,1,https://github.com/Rondom,CI: Temporary fix for bug in MSYS2-MINGW-CMake,1,[],https://github.com/dokan-dev/dokany/pull/407,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/407,"The MSYS2-MINGW-CMake packaging (or one of its dependencies is missing a dependency
to libxml2) This breaks our build, see: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-27/job/ova2o24yyjh9i009#L4739.
How I troubleshooted this:
The error-message with libuv is a red herring. Nothing is wrong with libuv from what I can see and on my system stderr complains about zlib instead of libuv as it does on AppVeyor (both are installed). Running the executable from the GUI will produce the correct error message as a MessageBox.
This commit can be reverted once the bug is fixed:
Alexpux/MINGW-packages#1991","The MSYS2-MINGW-CMake packaging (or one of its dependencies is missing a dependency
to libxml2) This breaks our build, see: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-27/job/ova2o24yyjh9i009#L4739.
How I troubleshooted this:
The error-message with libuv is a red herring. Nothing is wrong with libuv from what I can see and on my system stderr complains about zlib instead of libuv as it does on AppVeyor (both are installed). Running the executable from the GUI will produce the correct error message as a MessageBox.
This commit can be reverted once the bug is fixed:
Alexpux/MINGW-packages#1991",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,407,2016-11-30T00:04:28Z,2016-11-30T06:43:21Z,2016-11-30T10:45:10Z,MERGED,True,2,0,1,https://github.com/Rondom,CI: Temporary fix for bug in MSYS2-MINGW-CMake,1,[],https://github.com/dokan-dev/dokany/pull/407,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/407#issuecomment-263796376,"The MSYS2-MINGW-CMake packaging (or one of its dependencies is missing a dependency
to libxml2) This breaks our build, see: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-27/job/ova2o24yyjh9i009#L4739.
How I troubleshooted this:
The error-message with libuv is a red herring. Nothing is wrong with libuv from what I can see and on my system stderr complains about zlib instead of libuv as it does on AppVeyor (both are installed). Running the executable from the GUI will produce the correct error message as a MessageBox.
This commit can be reverted once the bug is fixed:
Alexpux/MINGW-packages#1991","Thank you @Rondom ! very appreciate as always üëç
We will need to remove this line when the issue is fixed on their side ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,407,2016-11-30T00:04:28Z,2016-11-30T06:43:21Z,2016-11-30T10:45:10Z,MERGED,True,2,0,1,https://github.com/Rondom,CI: Temporary fix for bug in MSYS2-MINGW-CMake,1,[],https://github.com/dokan-dev/dokany/pull/407,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/407#issuecomment-263837926,"The MSYS2-MINGW-CMake packaging (or one of its dependencies is missing a dependency
to libxml2) This breaks our build, see: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-27/job/ova2o24yyjh9i009#L4739.
How I troubleshooted this:
The error-message with libuv is a red herring. Nothing is wrong with libuv from what I can see and on my system stderr complains about zlib instead of libuv as it does on AppVeyor (both are installed). Running the executable from the GUI will produce the correct error message as a MessageBox.
This commit can be reverted once the bug is fixed:
Alexpux/MINGW-packages#1991","It does not do any harm, when it's still there, but yes, we should revert this commitonce it is fixed",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,407,2016-11-30T00:04:28Z,2016-11-30T06:43:21Z,2016-11-30T10:45:10Z,MERGED,True,2,0,1,https://github.com/Rondom,CI: Temporary fix for bug in MSYS2-MINGW-CMake,1,[],https://github.com/dokan-dev/dokany/pull/407,https://github.com/Rondom,4,https://github.com/dokan-dev/dokany/pull/407#issuecomment-263839322,"The MSYS2-MINGW-CMake packaging (or one of its dependencies is missing a dependency
to libxml2) This breaks our build, see: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-27/job/ova2o24yyjh9i009#L4739.
How I troubleshooted this:
The error-message with libuv is a red herring. Nothing is wrong with libuv from what I can see and on my system stderr complains about zlib instead of libuv as it does on AppVeyor (both are installed). Running the executable from the GUI will produce the correct error message as a MessageBox.
This commit can be reverted once the bug is fixed:
Alexpux/MINGW-packages#1991","Maybe I spoke too soon. Seems like they were very fast in fixing it.
Alexpux/MINGW-packages#1991
Now you merged it already. Can you test, if the fix has hit the mirror, yet? If rerunning an older build still works, we can revert that commit straight away. üòÑ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,407,2016-11-30T00:04:28Z,2016-11-30T06:43:21Z,2016-11-30T10:45:10Z,MERGED,True,2,0,1,https://github.com/Rondom,CI: Temporary fix for bug in MSYS2-MINGW-CMake,1,[],https://github.com/dokan-dev/dokany/pull/407,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/407#issuecomment-263839805,"The MSYS2-MINGW-CMake packaging (or one of its dependencies is missing a dependency
to libxml2) This breaks our build, see: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-27/job/ova2o24yyjh9i009#L4739.
How I troubleshooted this:
The error-message with libuv is a red herring. Nothing is wrong with libuv from what I can see and on my system stderr complains about zlib instead of libuv as it does on AppVeyor (both are installed). Running the executable from the GUI will produce the correct error message as a MessageBox.
This commit can be reverted once the bug is fixed:
Alexpux/MINGW-packages#1991","Done :) #408
We will see the build result",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,407,2016-11-30T00:04:28Z,2016-11-30T06:43:21Z,2016-11-30T10:45:10Z,MERGED,True,2,0,1,https://github.com/Rondom,CI: Temporary fix for bug in MSYS2-MINGW-CMake,1,[],https://github.com/dokan-dev/dokany/pull/407,https://github.com/Rondom,6,https://github.com/dokan-dev/dokany/pull/407#issuecomment-263840182,"The MSYS2-MINGW-CMake packaging (or one of its dependencies is missing a dependency
to libxml2) This breaks our build, see: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-27/job/ova2o24yyjh9i009#L4739.
How I troubleshooted this:
The error-message with libuv is a red herring. Nothing is wrong with libuv from what I can see and on my system stderr complains about zlib instead of libuv as it does on AppVeyor (both are installed). Running the executable from the GUI will produce the correct error message as a MessageBox.
This commit can be reverted once the bug is fixed:
Alexpux/MINGW-packages#1991","No need to merge ithe revert prematurely. If the fix has not been propagated to the mirrors, you might need to apply it again... We will see ;-)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,407,2016-11-30T00:04:28Z,2016-11-30T06:43:21Z,2016-11-30T10:45:10Z,MERGED,True,2,0,1,https://github.com/Rondom,CI: Temporary fix for bug in MSYS2-MINGW-CMake,1,[],https://github.com/dokan-dev/dokany/pull/407,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/407#issuecomment-263841936,"The MSYS2-MINGW-CMake packaging (or one of its dependencies is missing a dependency
to libxml2) This breaks our build, see: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-27/job/ova2o24yyjh9i009#L4739.
How I troubleshooted this:
The error-message with libuv is a red herring. Nothing is wrong with libuv from what I can see and on my system stderr complains about zlib instead of libuv as it does on AppVeyor (both are installed). Running the executable from the GUI will produce the correct error message as a MessageBox.
This commit can be reverted once the bug is fixed:
Alexpux/MINGW-packages#1991","Too quick üò¢ looks like
Lets wait that the mirrors get updated üòÑ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,408,2016-11-30T10:35:17Z,2016-11-30T10:35:25Z,2016-11-30T10:35:39Z,MERGED,True,0,2,1,https://github.com/Liryna,"Revert ""CI: Temporary fix for bug in MSYS2-MINGW-CMake""",1,[],https://github.com/dokan-dev/dokany/pull/408,https://github.com/Liryna,1,https://github.com/dokan-dev/dokany/pull/408,Reverts #407,Reverts #407,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,410,2016-12-04T00:58:34Z,2016-12-05T07:58:05Z,2016-12-05T07:58:05Z,MERGED,True,31,13,1,https://github.com/marinkobabic,fix relative path rename,1,[],https://github.com/dokan-dev/dokany/pull/410,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/410,pass absolute path to mirror for renaming,pass absolute path to mirror for renaming,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,410,2016-12-04T00:58:34Z,2016-12-05T07:58:05Z,2016-12-05T07:58:05Z,MERGED,True,31,13,1,https://github.com/marinkobabic,fix relative path rename,1,[],https://github.com/dokan-dev/dokany/pull/410,https://github.com/yin19941005,2,https://github.com/dokan-dev/dokany/pull/410#issuecomment-264752203,pass absolute path to mirror for renaming,"Hi @marinkobabic ,
I had tested the pull request with my Windows 10 VM and I am not able to reproduce the problem anymore!
Thanks a lot! üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,410,2016-12-04T00:58:34Z,2016-12-05T07:58:05Z,2016-12-05T07:58:05Z,MERGED,True,31,13,1,https://github.com/marinkobabic,fix relative path rename,1,[],https://github.com/dokan-dev/dokany/pull/410,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/410#issuecomment-264788975,pass absolute path to mirror for renaming,"Hi @marinkobabic ,
Thanks for the contribution üëç !!!
Tested an validated on my side too üòÉ !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,426,2017-01-30T22:37:40Z,2017-01-31T21:13:47Z,2017-01-31T21:13:47Z,MERGED,True,2,0,1,https://github.com/pliard-chromium,Fix deadlock in DokanDispatchCleanup().,1,[],https://github.com/dokan-dev/dokany/pull/426,https://github.com/pliard-chromium,1,https://github.com/dokan-dev/dokany/pull/426,"DokanDispatchCleanup() was calling CcFlushCache() without acquiring the
PagingIoResource exclusive lock. This was allowing concurrent calls to
CcFlushCache(), via e.g. DokanDispatchRead() and DokanDispatchClose(), for the
same file control block ultimately leading to a deadlock in CcFlushCache().
Please see below a dump of my windbg session for more concrete evidence:
2: kd> !locks
**** DUMP OF ALL RESOURCE OBJECTS ****
KD: Scanning for held locks...........
Resource @ 0xffffaa05cc7b46c0    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05ca9df7c0-01<*> ffffaa05c93fc080-01
Threads Waiting On Exclusive Access:
ffffaa05c93fe080
Resource @ 0xffffaa05c9626400    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05c93fc080-01<*> ffffaa05cabbe080-01
Threads Waiting On Exclusive Access:
ffffaa05ca9df7c0
KD: Scanning for held locks........
16088 total locks, 2 locks currently held
2: kd> .thread ffffaa05ca9df7c0
Implicit thread is now ffffaa05`ca9df7c0
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb8116522e40 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb8116522f80 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb8116523030 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb81165230d0 fffff802b1ad1043 nt!ExpWaitForResource+0x2a8
04 ffffbb81165231a0 fffff802b1f02273 nt!ExAcquireResourceExclusiveLite+0x183
05 ffffbb8116523220 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x27f
06 ffffbb81165234d0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb8116523580 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb8116523690 fffff80fac9b831e nt!CcFlushCache+0x16
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
0a ffffbb8116523770 fffff80fac9b342b fs1!DokanDispatchRequest+0x120
0b ffffbb81165237a0 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb81165237f0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb8116523880 fffff802b1e8ba20 FLTMGR!FltpDispatch+0xb6
0e ffffbb81165238e0 fffff802b1e8a020 nt!IopSynchronousServiceTail+0x1a0
0f ffffbb81165239a0 fffff802b1bdfc93 nt!NtReadFile+0x660
10 ffffbb8116523a90 00007ffaa9094f14 nt!KiSystemServiceCopyEnd+0x13
11 0000000006d1ec88 0000000000000000 0x00007ffa`a9094f14
2: kd> .frame 0n9;dv /t /v
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
ffffbb8116523710 struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600
2: kd> .thread ffffaa05c93fc080
Implicit thread is now ffffaa05`c93fc080
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb811645ae50 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb811645af90 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb811645b040 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb811645b0e0 fffff802b1ad1595 nt!ExpWaitForResource+0x2a8
04 ffffbb811645b1b0 fffff802b1f02244 nt!ExAcquireResourceSharedLite+0x325
05 ffffbb811645b240 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x250
06 ffffbb811645b4f0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb811645b5a0 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb811645b6b0 fffff80fac9b12f9 nt!CcFlushCache+0x16
09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99
0a ffffbb811645b760 fffff80fac9b342b fs1!DokanDispatchRequest+0x1bd
0b ffffbb811645b790 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb811645b7e0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb811645b870 fffff802b1eafc80 FLTMGR!FltpDispatch+0xb6
0e ffffbb811645b8d0 fffff802b1e96719 nt!IopCloseFile+0x150
0f ffffbb811645b960 fffff802b1ee719b nt!ObCloseHandleTableEntry+0x249
10 ffffbb811645baa0 fffff802b1bdfc93 nt!NtClose+0xcb
11 ffffbb811645bb00 00007ffaa9095034 nt!KiSystemServiceCopyEnd+0x13
12 0000000008ceeef8 0000000000000000 0x00007ffaa9095034 2: kd> .frame 0n9;dv /t /v 09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99 @r15              struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600","DokanDispatchCleanup() was calling CcFlushCache() without acquiring the
PagingIoResource exclusive lock. This was allowing concurrent calls to
CcFlushCache(), via e.g. DokanDispatchRead() and DokanDispatchClose(), for the
same file control block ultimately leading to a deadlock in CcFlushCache().
Please see below a dump of my windbg session for more concrete evidence:
2: kd> !locks
**** DUMP OF ALL RESOURCE OBJECTS ****
KD: Scanning for held locks...........
Resource @ 0xffffaa05cc7b46c0    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05ca9df7c0-01<*> ffffaa05c93fc080-01
Threads Waiting On Exclusive Access:
ffffaa05c93fe080
Resource @ 0xffffaa05c9626400    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05c93fc080-01<*> ffffaa05cabbe080-01
Threads Waiting On Exclusive Access:
ffffaa05ca9df7c0
KD: Scanning for held locks........
16088 total locks, 2 locks currently held
2: kd> .thread ffffaa05ca9df7c0
Implicit thread is now ffffaa05`ca9df7c0
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb8116522e40 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb8116522f80 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb8116523030 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb81165230d0 fffff802b1ad1043 nt!ExpWaitForResource+0x2a8
04 ffffbb81165231a0 fffff802b1f02273 nt!ExAcquireResourceExclusiveLite+0x183
05 ffffbb8116523220 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x27f
06 ffffbb81165234d0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb8116523580 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb8116523690 fffff80fac9b831e nt!CcFlushCache+0x16
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
0a ffffbb8116523770 fffff80fac9b342b fs1!DokanDispatchRequest+0x120
0b ffffbb81165237a0 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb81165237f0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb8116523880 fffff802b1e8ba20 FLTMGR!FltpDispatch+0xb6
0e ffffbb81165238e0 fffff802b1e8a020 nt!IopSynchronousServiceTail+0x1a0
0f ffffbb81165239a0 fffff802b1bdfc93 nt!NtReadFile+0x660
10 ffffbb8116523a90 00007ffaa9094f14 nt!KiSystemServiceCopyEnd+0x13
11 0000000006d1ec88 0000000000000000 0x00007ffa`a9094f14
2: kd> .frame 0n9;dv /t /v
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
ffffbb8116523710 struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600
2: kd> .thread ffffaa05c93fc080
Implicit thread is now ffffaa05`c93fc080
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb811645ae50 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb811645af90 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb811645b040 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb811645b0e0 fffff802b1ad1595 nt!ExpWaitForResource+0x2a8
04 ffffbb811645b1b0 fffff802b1f02244 nt!ExAcquireResourceSharedLite+0x325
05 ffffbb811645b240 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x250
06 ffffbb811645b4f0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb811645b5a0 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb811645b6b0 fffff80fac9b12f9 nt!CcFlushCache+0x16
09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99
0a ffffbb811645b760 fffff80fac9b342b fs1!DokanDispatchRequest+0x1bd
0b ffffbb811645b790 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb811645b7e0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb811645b870 fffff802b1eafc80 FLTMGR!FltpDispatch+0xb6
0e ffffbb811645b8d0 fffff802b1e96719 nt!IopCloseFile+0x150
0f ffffbb811645b960 fffff802b1ee719b nt!ObCloseHandleTableEntry+0x249
10 ffffbb811645baa0 fffff802b1bdfc93 nt!NtClose+0xcb
11 ffffbb811645bb00 00007ffaa9095034 nt!KiSystemServiceCopyEnd+0x13
12 0000000008ceeef8 0000000000000000 0x00007ffaa9095034 2: kd> .frame 0n9;dv /t /v 09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99 @r15              struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,426,2017-01-30T22:37:40Z,2017-01-31T21:13:47Z,2017-01-31T21:13:47Z,MERGED,True,2,0,1,https://github.com/pliard-chromium,Fix deadlock in DokanDispatchCleanup().,1,[],https://github.com/dokan-dev/dokany/pull/426,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/426#issuecomment-276285586,"DokanDispatchCleanup() was calling CcFlushCache() without acquiring the
PagingIoResource exclusive lock. This was allowing concurrent calls to
CcFlushCache(), via e.g. DokanDispatchRead() and DokanDispatchClose(), for the
same file control block ultimately leading to a deadlock in CcFlushCache().
Please see below a dump of my windbg session for more concrete evidence:
2: kd> !locks
**** DUMP OF ALL RESOURCE OBJECTS ****
KD: Scanning for held locks...........
Resource @ 0xffffaa05cc7b46c0    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05ca9df7c0-01<*> ffffaa05c93fc080-01
Threads Waiting On Exclusive Access:
ffffaa05c93fe080
Resource @ 0xffffaa05c9626400    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05c93fc080-01<*> ffffaa05cabbe080-01
Threads Waiting On Exclusive Access:
ffffaa05ca9df7c0
KD: Scanning for held locks........
16088 total locks, 2 locks currently held
2: kd> .thread ffffaa05ca9df7c0
Implicit thread is now ffffaa05`ca9df7c0
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb8116522e40 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb8116522f80 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb8116523030 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb81165230d0 fffff802b1ad1043 nt!ExpWaitForResource+0x2a8
04 ffffbb81165231a0 fffff802b1f02273 nt!ExAcquireResourceExclusiveLite+0x183
05 ffffbb8116523220 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x27f
06 ffffbb81165234d0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb8116523580 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb8116523690 fffff80fac9b831e nt!CcFlushCache+0x16
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
0a ffffbb8116523770 fffff80fac9b342b fs1!DokanDispatchRequest+0x120
0b ffffbb81165237a0 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb81165237f0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb8116523880 fffff802b1e8ba20 FLTMGR!FltpDispatch+0xb6
0e ffffbb81165238e0 fffff802b1e8a020 nt!IopSynchronousServiceTail+0x1a0
0f ffffbb81165239a0 fffff802b1bdfc93 nt!NtReadFile+0x660
10 ffffbb8116523a90 00007ffaa9094f14 nt!KiSystemServiceCopyEnd+0x13
11 0000000006d1ec88 0000000000000000 0x00007ffa`a9094f14
2: kd> .frame 0n9;dv /t /v
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
ffffbb8116523710 struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600
2: kd> .thread ffffaa05c93fc080
Implicit thread is now ffffaa05`c93fc080
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb811645ae50 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb811645af90 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb811645b040 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb811645b0e0 fffff802b1ad1595 nt!ExpWaitForResource+0x2a8
04 ffffbb811645b1b0 fffff802b1f02244 nt!ExAcquireResourceSharedLite+0x325
05 ffffbb811645b240 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x250
06 ffffbb811645b4f0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb811645b5a0 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb811645b6b0 fffff80fac9b12f9 nt!CcFlushCache+0x16
09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99
0a ffffbb811645b760 fffff80fac9b342b fs1!DokanDispatchRequest+0x1bd
0b ffffbb811645b790 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb811645b7e0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb811645b870 fffff802b1eafc80 FLTMGR!FltpDispatch+0xb6
0e ffffbb811645b8d0 fffff802b1e96719 nt!IopCloseFile+0x150
0f ffffbb811645b960 fffff802b1ee719b nt!ObCloseHandleTableEntry+0x249
10 ffffbb811645baa0 fffff802b1bdfc93 nt!NtClose+0xcb
11 ffffbb811645bb00 00007ffaa9095034 nt!KiSystemServiceCopyEnd+0x13
12 0000000008ceeef8 0000000000000000 0x00007ffaa9095034 2: kd> .frame 0n9;dv /t /v 09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99 @r15              struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600","Hi @pliard-chromium ,
Well found!
It is true that Cleanup can be called even if the file is still being used (other Cache call). Therefor has CcFlushCache to be locked as you did üëç
Does this patch fix the behavior you describe in your other message ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,426,2017-01-30T22:37:40Z,2017-01-31T21:13:47Z,2017-01-31T21:13:47Z,MERGED,True,2,0,1,https://github.com/pliard-chromium,Fix deadlock in DokanDispatchCleanup().,1,[],https://github.com/dokan-dev/dokany/pull/426,https://github.com/pliard-chromium,3,https://github.com/dokan-dev/dokany/pull/426#issuecomment-276398840,"DokanDispatchCleanup() was calling CcFlushCache() without acquiring the
PagingIoResource exclusive lock. This was allowing concurrent calls to
CcFlushCache(), via e.g. DokanDispatchRead() and DokanDispatchClose(), for the
same file control block ultimately leading to a deadlock in CcFlushCache().
Please see below a dump of my windbg session for more concrete evidence:
2: kd> !locks
**** DUMP OF ALL RESOURCE OBJECTS ****
KD: Scanning for held locks...........
Resource @ 0xffffaa05cc7b46c0    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05ca9df7c0-01<*> ffffaa05c93fc080-01
Threads Waiting On Exclusive Access:
ffffaa05c93fe080
Resource @ 0xffffaa05c9626400    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05c93fc080-01<*> ffffaa05cabbe080-01
Threads Waiting On Exclusive Access:
ffffaa05ca9df7c0
KD: Scanning for held locks........
16088 total locks, 2 locks currently held
2: kd> .thread ffffaa05ca9df7c0
Implicit thread is now ffffaa05`ca9df7c0
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb8116522e40 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb8116522f80 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb8116523030 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb81165230d0 fffff802b1ad1043 nt!ExpWaitForResource+0x2a8
04 ffffbb81165231a0 fffff802b1f02273 nt!ExAcquireResourceExclusiveLite+0x183
05 ffffbb8116523220 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x27f
06 ffffbb81165234d0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb8116523580 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb8116523690 fffff80fac9b831e nt!CcFlushCache+0x16
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
0a ffffbb8116523770 fffff80fac9b342b fs1!DokanDispatchRequest+0x120
0b ffffbb81165237a0 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb81165237f0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb8116523880 fffff802b1e8ba20 FLTMGR!FltpDispatch+0xb6
0e ffffbb81165238e0 fffff802b1e8a020 nt!IopSynchronousServiceTail+0x1a0
0f ffffbb81165239a0 fffff802b1bdfc93 nt!NtReadFile+0x660
10 ffffbb8116523a90 00007ffaa9094f14 nt!KiSystemServiceCopyEnd+0x13
11 0000000006d1ec88 0000000000000000 0x00007ffa`a9094f14
2: kd> .frame 0n9;dv /t /v
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
ffffbb8116523710 struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600
2: kd> .thread ffffaa05c93fc080
Implicit thread is now ffffaa05`c93fc080
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb811645ae50 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb811645af90 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb811645b040 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb811645b0e0 fffff802b1ad1595 nt!ExpWaitForResource+0x2a8
04 ffffbb811645b1b0 fffff802b1f02244 nt!ExAcquireResourceSharedLite+0x325
05 ffffbb811645b240 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x250
06 ffffbb811645b4f0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb811645b5a0 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb811645b6b0 fffff80fac9b12f9 nt!CcFlushCache+0x16
09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99
0a ffffbb811645b760 fffff80fac9b342b fs1!DokanDispatchRequest+0x1bd
0b ffffbb811645b790 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb811645b7e0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb811645b870 fffff802b1eafc80 FLTMGR!FltpDispatch+0xb6
0e ffffbb811645b8d0 fffff802b1e96719 nt!IopCloseFile+0x150
0f ffffbb811645b960 fffff802b1ee719b nt!ObCloseHandleTableEntry+0x249
10 ffffbb811645baa0 fffff802b1bdfc93 nt!NtClose+0xcb
11 ffffbb811645bb00 00007ffaa9095034 nt!KiSystemServiceCopyEnd+0x13
12 0000000008ceeef8 0000000000000000 0x00007ffaa9095034 2: kd> .frame 0n9;dv /t /v 09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99 @r15              struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600","Hi @Liryna,
Thanks. Yes, this patch does fix the issue I was describing. We applied this patch to our local branch yesterday and haven't been able to make Explorer unresponsive again since then.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,426,2017-01-30T22:37:40Z,2017-01-31T21:13:47Z,2017-01-31T21:13:47Z,MERGED,True,2,0,1,https://github.com/pliard-chromium,Fix deadlock in DokanDispatchCleanup().,1,[],https://github.com/dokan-dev/dokany/pull/426,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/426#issuecomment-276494212,"DokanDispatchCleanup() was calling CcFlushCache() without acquiring the
PagingIoResource exclusive lock. This was allowing concurrent calls to
CcFlushCache(), via e.g. DokanDispatchRead() and DokanDispatchClose(), for the
same file control block ultimately leading to a deadlock in CcFlushCache().
Please see below a dump of my windbg session for more concrete evidence:
2: kd> !locks
**** DUMP OF ALL RESOURCE OBJECTS ****
KD: Scanning for held locks...........
Resource @ 0xffffaa05cc7b46c0    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05ca9df7c0-01<*> ffffaa05c93fc080-01
Threads Waiting On Exclusive Access:
ffffaa05c93fe080
Resource @ 0xffffaa05c9626400    Exclusively owned
Contention Count = 2
NumberOfSharedWaiters = 1
NumberOfExclusiveWaiters = 1
Threads: ffffaa05c93fc080-01<*> ffffaa05cabbe080-01
Threads Waiting On Exclusive Access:
ffffaa05ca9df7c0
KD: Scanning for held locks........
16088 total locks, 2 locks currently held
2: kd> .thread ffffaa05ca9df7c0
Implicit thread is now ffffaa05`ca9df7c0
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb8116522e40 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb8116522f80 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb8116523030 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb81165230d0 fffff802b1ad1043 nt!ExpWaitForResource+0x2a8
04 ffffbb81165231a0 fffff802b1f02273 nt!ExAcquireResourceExclusiveLite+0x183
05 ffffbb8116523220 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x27f
06 ffffbb81165234d0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb8116523580 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb8116523690 fffff80fac9b831e nt!CcFlushCache+0x16
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
0a ffffbb8116523770 fffff80fac9b342b fs1!DokanDispatchRequest+0x120
0b ffffbb81165237a0 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb81165237f0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb8116523880 fffff802b1e8ba20 FLTMGR!FltpDispatch+0xb6
0e ffffbb81165238e0 fffff802b1e8a020 nt!IopSynchronousServiceTail+0x1a0
0f ffffbb81165239a0 fffff802b1bdfc93 nt!NtReadFile+0x660
10 ffffbb8116523a90 00007ffaa9094f14 nt!KiSystemServiceCopyEnd+0x13
11 0000000006d1ec88 0000000000000000 0x00007ffa`a9094f14
2: kd> .frame 0n9;dv /t /v
09 ffffbb81165236d0 fffff80fac9b35bc fs1!DokanDispatchRead+0x1ee
ffffbb8116523710 struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600
2: kd> .thread ffffaa05c93fc080
Implicit thread is now ffffaa05`c93fc080
2: kd> kn
*** Stack trace for last set context - .thread/.cxr resets it
Child-SP          RetAddr           Call Site
00 ffffbb811645ae50 fffff802b1ac4cdc nt!KiSwapContext+0x76
01 ffffbb811645af90 fffff802b1ac477f nt!KiSwapThread+0x17c
02 ffffbb811645b040 fffff802b1ac6a28 nt!KiCommitThreadWait+0x14f
03 ffffbb811645b0e0 fffff802b1ad1595 nt!ExpWaitForResource+0x2a8
04 ffffbb811645b1b0 fffff802b1f02244 nt!ExAcquireResourceSharedLite+0x325
05 ffffbb811645b240 fffff802b1b144da nt!FsRtlAcquireFileForCcFlushEx+0x250
06 ffffbb811645b4f0 fffff802b1ae4896 nt!MmFlushSection+0x9e
07 ffffbb811645b5a0 fffff802b1b6f67e nt!CcFlushCachePriv+0x616
08 ffffbb811645b6b0 fffff80fac9b12f9 nt!CcFlushCache+0x16
09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99
0a ffffbb811645b760 fffff80fac9b342b fs1!DokanDispatchRequest+0x1bd
0b ffffbb811645b790 fffff80fab405206 fs1!DokanBuildRequest+0x47
0c ffffbb811645b7e0 fffff80fab403146 FLTMGR!FltpLegacyProcessingAfterPr...
0d ffffbb811645b870 fffff802b1eafc80 FLTMGR!FltpDispatch+0xb6
0e ffffbb811645b8d0 fffff802b1e96719 nt!IopCloseFile+0x150
0f ffffbb811645b960 fffff802b1ee719b nt!ObCloseHandleTableEntry+0x249
10 ffffbb811645baa0 fffff802b1bdfc93 nt!NtClose+0xcb
11 ffffbb811645bb00 00007ffaa9095034 nt!KiSystemServiceCopyEnd+0x13
12 0000000008ceeef8 0000000000000000 0x00007ffaa9095034 2: kd> .frame 0n9;dv /t /v 09 ffffbb811645b6f0 fffff80fac9b3659 fs1!DokanDispatchCleanup+0x99 @r15              struct _DokanFileControlBlock * fcb = 0xffffaa05cc7b4600","OK @pliard-chromium üëç
Thanks a lot for your research and the fix, very appreciate ! üèÜ ‚ù§Ô∏è !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,428,2017-02-02T22:54:50Z,2017-02-05T13:26:54Z,2017-02-05T13:26:54Z,MERGED,True,16,8,1,https://github.com/marinkobabic,Do MmFlushImageSection if ImageSectionObject is set during cleanup. T‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/428,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/428,"‚Ä¶his fixes the issue if an exe file is copied to drive, removed and copied again does not cause NAME_COLLISION","‚Ä¶his fixes the issue if an exe file is copied to drive, removed and copied again does not cause NAME_COLLISION",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,429,2017-02-03T16:12:20Z,2017-02-05T13:14:23Z,2017-02-05T13:14:49Z,MERGED,True,8,7,3,https://github.com/Rondom,WiX: Ship PDB-files for dokanfuse.dll,1,[],https://github.com/dokan-dev/dokany/pull/429,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/429,"This is completely untested. I have never tried installing, nor have I tried using the generated PDB to debug anything. Please double-check and test.
Create debugging symbols both for Release and Debug configuration of the
MSVC dokanfuse1.dll and ship them in the installer.
See #427.","This is completely untested. I have never tried installing, nor have I tried using the generated PDB to debug anything. Please double-check and test.
Create debugging symbols both for Release and Debug configuration of the
MSVC dokanfuse1.dll and ship them in the installer.
See #427.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,429,2017-02-03T16:12:20Z,2017-02-05T13:14:23Z,2017-02-05T13:14:49Z,MERGED,True,8,7,3,https://github.com/Rondom,WiX: Ship PDB-files for dokanfuse.dll,1,[],https://github.com/dokan-dev/dokany/pull/429,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/429#issuecomment-277425030,"This is completely untested. I have never tried installing, nor have I tried using the generated PDB to debug anything. Please double-check and test.
Create debugging symbols both for Release and Debug configuration of the
MSVC dokanfuse1.dll and ship them in the installer.
See #427.","Hi @Rondom ,
Thank you for the contribution ‚ù§Ô∏è I will try to test the installer locally this weekend.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,429,2017-02-03T16:12:20Z,2017-02-05T13:14:23Z,2017-02-05T13:14:49Z,MERGED,True,8,7,3,https://github.com/Rondom,WiX: Ship PDB-files for dokanfuse.dll,1,[],https://github.com/dokan-dev/dokany/pull/429,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/429#issuecomment-277519054,"This is completely untested. I have never tried installing, nor have I tried using the generated PDB to debug anything. Please double-check and test.
Create debugging symbols both for Release and Debug configuration of the
MSVC dokanfuse1.dll and ship them in the installer.
See #427.",Thank you @Rondom I made the test and the Dbg installer correctly install the fuse pdf. üèÜ,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,430,2017-02-03T20:26:16Z,2017-02-04T07:09:35Z,2017-02-04T07:09:35Z,MERGED,True,2,2,1,https://github.com/Rondom,CI: Don't write clang-format diff if no changes in C-files,1,[],https://github.com/dokan-dev/dokany/pull/430,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/430,"This fixes a small issue where the script did not account for the case where
no C-files where modified in a PR and git-clang-format wrote a
.diff-file with the text ""no modified files to format"".
Example-PR where it occurred
Ideally clang-format would print messages like this to stderr. As a
workaround we are grepping for the message to filter it out.","This fixes a small issue where the script did not account for the case where
no C-files where modified in a PR and git-clang-format wrote a
.diff-file with the text ""no modified files to format"".
Example-PR where it occurred
Ideally clang-format would print messages like this to stderr. As a
workaround we are grepping for the message to filter it out.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,430,2017-02-03T20:26:16Z,2017-02-04T07:09:35Z,2017-02-04T07:09:35Z,MERGED,True,2,2,1,https://github.com/Rondom,CI: Don't write clang-format diff if no changes in C-files,1,[],https://github.com/dokan-dev/dokany/pull/430,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/430#issuecomment-277424903,"This fixes a small issue where the script did not account for the case where
no C-files where modified in a PR and git-clang-format wrote a
.diff-file with the text ""no modified files to format"".
Example-PR where it occurred
Ideally clang-format would print messages like this to stderr. As a
workaround we are grepping for the message to filter it out.","Hi @Rondom ,
Thank you for the contribution üëç and well found üòÉ !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/pliard-chromium,1,https://github.com/dokan-dev/dokany/pull/438,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/marinkobabic,2,https://github.com/dokan-dev/dokany/pull/438#issuecomment-278567837,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.",Two different threads do  FindOpenInfoEntry and one of them is doing free. How does the new concept solve the problem that one threads has in this case a stale DOKAN_OPEN_INFO and it doesn't operate on it?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/pliard-chromium,3,https://github.com/dokan-dev/dokany/pull/438#issuecomment-278675567,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","GetDokanOpenInfo() does a thread-safe OpenCount increment so my understanding is that once a worker thread looked up a DOKAN_OPEN_INFO pointer by ID in the open info table, the pointer is guaranteed to remain valid until DokanReleaseOpenInfo() is called.
Are there still cases in the codebase where DOKAN_OPEN_INFO pointers are dereferenced without a prior OpenCount increment? If that's the case I missed that.
DOKAN_OPEN_INFO pointers are also now only free'd via DokanReleaseOpenInfo() which happens within the DokanInstance critical section like GetDokanOpenInfo() and FindOpenInfoEntry() do.
It's very possible that I'm missing something though. Would you mind elaborating if you still think there is a problem?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/marinkobabic,4,https://github.com/dokan-dev/dokany/pull/438#issuecomment-278703262,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","I'm still thinking about the real source of the problem. When you check the code before your changes, every DispatchCreate creates DOKAN_OPEN_INFO because the driver told the usermode to do so. In case of DispatchCleanup and DispatchClose the same. If the driver says that the file has been closed, so the DOKAN_OPEN_INFO can be destroyed for sure. So the question why is an OpenCount needed at all in the usermode library? SendEventInformation must not ReleaseDokanOpenInfo as well (this is the job of close). ClearFindData(openInfo->DirListHead) clears the list without to lock the access and so on. If the code is cleaned up, then your should not face the problem you originally had and usermode does not care about the OpenCount and when the DOKAN_OPEN_INFO should be destroyed.
This should be the starting point of our discussion. Maybe is my theory totally wrong but let's also see what other contributors say. I'm also very interested in your opinion.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/pliard-chromium,5,https://github.com/dokan-dev/dokany/pull/438#issuecomment-278716815,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","I have very limited experience with this codebase but it looks to me that this OpenCount is present in userspace mostly to allow Dokan in userspace to dispatch the requests to multiple worker threads instead of e.g. asynchronously dispatching the requests to a single thread which pull request #210 implements I believe. I agree with you, this feels a little wrong.
These worker threads pulling events from the driver in particular can get scheduled in arbitrary order by the kernel so my understanding is that events sent by the driver to userspace may be dispatched in userspace out-of-order.
The fact that events are dispatched out-of-order can cause issues if multiple events are simultaneously dispatched while having dependencies between each other, e.g. DispatchQueryInformation() and DispatchClose(). There doesn't seem to be the guarantee in the current state that the driver will send the close event only once all the events affecting the same handle completed. Or is there actually such guarantee? If that's already the case then I agree with you the OpenCount shouldn't be necessary at all in userspace and there would potentially be a bug in the driver if this is not always happening.
This pull request basically turns a crash due to a use-after-free into an error which is not ideal either and I wholeheartedly agreed with you here, there is likely a bigger design issue that needs to be fixed.
The very large pull request #210 should at least sanitize the ordering in userspace. The question of whether the driver is currently ensuring that close is sent only on completion of all other events for the same handle remains though.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/pliard-chromium,6,https://github.com/dokan-dev/dokany/pull/438#issuecomment-278722332,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.",FYI I will try to find out whether we receive DispatchClose() while there are still outstanding requests for the same file handle. According to the IRP_MJ_CLOSE documentation it shouldn't be the case.,True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/pliard-chromium,7,https://github.com/dokan-dev/dokany/pull/438#issuecomment-278800678,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","I'm glad you gave me some push back. I found out what's really going on here and the good news is that it should be a very small and simple fix. I will update my patch. I should have caught this earlier but the issue is basically due to the end of DispatchCreate() which frees the DOKAN_OPEN_INFO pointer in case of error after having sent it as non-null to the driver. This leads to the driver providing us again with the stale context pointer. The kernel seems to do so only for certain error codes. I'm seeing this in particular when my file system returns STATUS_TIMEOUT. Other error statuses seem to be fine.
I will see later in a follow-up pull request if I can also remove the OpenCount ref-counting. This should simplify things quite a bit.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/pliard-chromium,8,https://github.com/dokan-dev/dokany/pull/438#issuecomment-278972097,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","JFYI, this should be ready again for review.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/pliard-chromium,9,https://github.com/dokan-dev/dokany/pull/438#issuecomment-278996948,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.",Also FYI: I changed my file system so that it returns STATUS_IO_TIMEOUT instead of STATUS_TIMEOUT during DispatchCreate() and the use-after-free also disappears that way. It seems that the kernel has some very particular handling for the STATUS_TIMEOUT error leading it not to fully discard the handle.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/marinkobabic,10,https://github.com/dokan-dev/dokany/pull/438#issuecomment-279000539,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.",From my point of view it looks good. You should  squash the commits into one. Well found and fixed! :-),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/pliard-chromium,11,https://github.com/dokan-dev/dokany/pull/438#issuecomment-279002330,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","@marinkobabic Done, thanks!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/Liryna,12,https://github.com/dokan-dev/dokany/pull/438#issuecomment-279073549,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","Thank you for the PR @pliard-chromium , this also looks good for me !
Good work on this, it very appreciate ! ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/marinkobabic,13,https://github.com/dokan-dev/dokany/pull/438#issuecomment-280502032,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","There are maybe many other STATUS codes which can be used and are as well
in this range. So from my point of view you are absolutely right. Other
STATUS_SUCCESS checks should as well be verified.

Am 17.02.2017 00:25 schrieb ""pliard-chromium"" <notifications@github.com>:
‚Ä¶
 ***@***.**** commented on this pull request.
 ------------------------------

 In dokan/create.c
 <#438 (comment)>:

 > @@ -330,9 +330,11 @@ VOID DispatchCreate(HANDLE Handle, // This handle is not for a file. It is for
    if (origFileName)
      free(origFileName);

 +  if (eventInfo.Status != STATUS_SUCCESS) {

 FYI, I have been doing more digging regarding this STATUS_TIMEOUT vs
 STATUS_IO_TIMEOUT issue, regarding the fact in particular that the Context
 pointer gets sent back to user space with STATUS_TIMEOUT but doesn't with
 STATUS_IO_TIMEOUT.

 I believe there is a discrepancy between the status check here and the one
 in the driver in DokanCompleteCreate(). The driver uses the NT_SUCCESS()
 macro which says ""Evaluates to TRUE if the return value specified by Status
 is a success type (0 ‚àí 0x3FFFFFFF) or an informational type (0x40000000 ‚àí
 0x7FFFFFFF)"". STATUS_TIMEOUT happens to be in that range while
 STATUS_IO_TIMEOUT is an actual error.

 I think we should probably make this check use NT_SUCCESS() instead. I'm
 worried that there might be other discrepancies in the codebase. What do
 you think?

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#438 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/ADHSOAgJL2PP2loS7ZEyzKQYQS7PWylHks5rdNr3gaJpZM4L7gB4>
 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/Liryna,14,https://github.com/dokan-dev/dokany/pull/438#issuecomment-280569459,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.","@pliard-chromium I agree that we should add the NT_SUCCESS macro in the library (not present in user land) and use it instead of == STATUS_SUCCESS.

#define NT_SUCCESS(Status) (((NTSTATUS)(Status)) >= 0)

(if I understood correctly @marinkobabic üëç )",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,438,2017-02-08T23:22:36Z,2017-02-10T21:40:15Z,2017-02-17T20:12:31Z,MERGED,True,5,3,1,https://github.com/pliard-chromium,Fix use-after-free in GetDokanOpenInfo().,1,[],https://github.com/dokan-dev/dokany/pull/438,https://github.com/pliard-chromium,15,https://github.com/dokan-dev/dokany/pull/438#issuecomment-280754378,"The DOKAN_OPEN_INFO struct is ref-counted in userspace while an opaque pointer
to it is also stored, though not dereferenced, in kernel space via the
EVENT_CONTEXT struct.
Ref-counting is needed to manage the lifetime of DOKAN_OPEN_INFO as Dokan uses
loosely synchronized worker threads in userspace to dispatch the actual file
system requests.
When the ref-count of the DOKAN_OPEN_INFO goes to 0, the DOKAN_OPEN_INFO
pointer gets free'd. However worker threads other than the thread doing the
free() could still observe a stale copy of the pointer in their EVENT_CONTEXT
struct which each worker thread has a unique instance of.
This changes the user-space library so that there is an extra indirection to
lookup DOKAN_OPEN_INFO pointers. Instead of directly dereferencing a
potentially stale DOKAN_OPEN_INFO pointer, GetDokanOpenInfo() now looks up the
pointer in a table of entries indexed by a monotonically increasing ID which is
also stored in the EVENT_CONTEXT struct.
See issue 436 for more details.",@Liryna @marinkobabic Thanks. I will send you a pull request using NT_SUCCESS() for that particular check. There might be other places in the codebase where it should be used as well in the future.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,439,2017-02-09T12:34:52Z,2017-02-09T20:18:12Z,2017-02-09T20:18:31Z,MERGED,True,1,1,1,https://github.com/NedyalkoYotov,typo fix,1,[],https://github.com/dokan-dev/dokany/pull/439,https://github.com/NedyalkoYotov,1,https://github.com/dokan-dev/dokany/pull/439,,,True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,439,2017-02-09T12:34:52Z,2017-02-09T20:18:12Z,2017-02-09T20:18:31Z,MERGED,True,1,1,1,https://github.com/NedyalkoYotov,typo fix,1,[],https://github.com/dokan-dev/dokany/pull/439,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/439#issuecomment-278760442,,"Hi @NedyalkoYotov ,
Thanks you for the typo üëç If you find anything, do not hesitate !",True,{'THUMBS_UP': ['https://github.com/NedyalkoYotov']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,1,https://github.com/dokan-dev/dokany/pull/440,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/440#issuecomment-279074006,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","Hi @pliard-chromium ,
This looks like a good idea and I agree with you that after close, normally there should not be any call again.
I will review it a little later to be sure on this üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,3,https://github.com/dokan-dev/dokany/pull/440#issuecomment-279882177,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.",I don't immediately see why codacy/pr is failing. ReleaseDokanOpenInfo() is still used in close.c as far as I can tell.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/440#issuecomment-279928813,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@pliard-chromium don't worry about it üòÑ I had to tag ignore +80 warning like this.
I will look on the PR when will get more time sorry üò¢",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,5,https://github.com/dokan-dev/dokany/pull/440#issuecomment-280037819,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@Liryna sounds good, thanks.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,6,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283205190,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@Liryna @marinkobabic FYI, I think this change might actually be unsafe to do in the current state. I have this change applied to my fork of Dokany and I'm seeing a use-after-free.
I think that issue 436 had multiple causes. Pull request 438 fixed the use-after-free in case an informational status was returned to Dokan. However I think it's still possible to trigger a use-after-free there. I'm seeing in particular that DispatchClose() gets called while there is still a DispatchDirectoryInformation() in flight.
I can only trigger this while using my Dokany-based file system with a high latency 3G network which makes me think that a timeout/IRP cancellation might be involved.
The Microsoft documentation for IRP_MJ_CLOSE says in particular that the close gets sent once ""All outstanding I/O requests have been completed or canceled"". I'm wondering in particular whether IRP cancellation happens synchronously or asynchronously?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283262571,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@pliard-chromium humm normally as you have read IRP_MJ_CLOSE should be the last call üò¢ Maybe yes there is a request to process but the kernel gave up (timeout, cancel,...) because userland took too much time ?
Therefore the userland is still using the reference that has been free in close ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,8,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283770146,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@Liryna That's my suspicion, yes. I think we should either fix the Dokan driver so that the close doesn't get sent while there are still pending cancelled operations, if that's possible at all, or keep the DOKAN_OPEN_INFO ref-count since it's already there.
Also note that the Dokan client's close callback is currently invoked in DispatchClose() as opposed to when the open info count drops to 0. This means that the client has to implement its own ref-counting for the opaque user context pointer stored in the DOKAN_FILE_INFO. Without changing this I also get a use-after-free in my client code in case of timeout. I will send you a separate pull request addressing that.
Should we delete this pull request?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/marinkobabic,9,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283772390,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","The driver will do a close if nobody is referencing the file. How is it
possible that you get the use after free? Driver has the knowledge about
all the references. Please can you describe more detailed your specific
case or even write a simple test?

Am 02.03.2017 21:27 schrieb ""pliard-chromium"" <notifications@github.com>:

@Liryna <https://github.com/Liryna> That's my suspicion, yes. I think we
should either fix the Dokan driver so that the close doesn't get sent while
there are still pending cancelled operations, if that's possible at all, or
keep the DOKAN_OPEN_INFO ref-count since it's already there.

Also note that the Dokan client's close callback is currently invoked in
DispatchClose() as opposed to when the open info count drops to 0. This
means that the client has to implement its own ref-counting for the opaque
user context pointer stored in the DOKAN_FILE_INFO. Without changing this I
also get a use-after-free in my client code in case of timeout. I will send
you a separate pull request addressing that.

Should we delete this pull request?

‚Äî
You are receiving this because you were mentioned.

Reply to this email directly, view it on GitHub
<#440 (comment)>, or mute
the thread
<https://github.com/notifications/unsubscribe-auth/ADHSOHn7dgDqqPWHCuDJMC6e3dLJcHqyks5rhyYpgaJpZM4L80Ml>
.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,10,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283775319,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.",@marinkobabic I will try to reproduce this with the Dokan mirror by adding a sleep() in the DispatchDirectoryInformation callback. As I said above the issue happens when an operation times out.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,11,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283804925,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@marinkobabic @Liryna  I can successfully reproduce the use-after-free with the patch in this pull request (removing the DOKAN_OPEN_INFO ref-counting) and adding 'if (++g_counter % 10 == 0) { Sleep(30); }' at the very beginning of MirrorFindFiles().
I'm running the Dokan mirror with /r and /l and that's the stack trace that I get below after using Explorer for a few minutes:

dokan.dll!InsertTailList(_LIST_ENTRY * ListHead, _LIST_ENTRY * Entry) Line 91	C
dokan.dll!DokanFillFileDataEx(_WIN32_FIND_DATAW * FindData, _DOKAN_FILE_INFO * FileInfo, unsigned char InsertTail) Line 303	C
dokan.dll!DokanFillFileData(_WIN32_FIND_DATAW * FindData, _DOKAN_FILE_INFO * FileInfo) Line 312	C
mirror.exe!MirrorFindFiles(const wchar_t * FileName, int(*)(_WIN32_FIND_DATAW *, _DOKAN_FILE_INFO ) FillFindData, _DOKAN_FILE_INFO * DokanFileInfo) Line 743	C
dokan.dll!DispatchDirectoryInformation(void * Handle, _EVENT_CONTEXT * EventContext, _DOKAN_INSTANCE * DokanInstance) Line 554	C
dokan.dll!DokanLoop(_DOKAN_INSTANCE * DokanInstance) Line 435	C
dokan.dll!invoke_thread_procedure(unsigned int()(void ) procedure, void * const context) Line 92	C++
dokan.dll!thread_start<unsigned int (__cdecl)(void * __ptr64)>(void * const parameter) Line 115	C++",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/marinkobabic,12,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283811153,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","We need an idea how this can happen.

Maybe this is the case:

Driver has multiple requests for a specific file. Those requests have been
forwarded to usermode and the os got the response STATUS_PENDING. So and
now at some point the dokan driver decides that some of this requests are
timed out and those requests are canceled. Usermode has no idea about it.
The os decides now to close the handle of the file and dokan driver
forwards this request to usemode. So there may now be multiple threads
running at the same time in usermode using exactly the same context. The
DispatchClose will free the Context which may be used by other threads.
This causes the problem.

This may be the reason why the usermode reference count has been
introduced. Create should set it to 1 and when completed not decrease it.
All other Dispatch operations should increase it by 1 when dispatched and
decrease it by 1when completed. The DispatchClose should just decrease it
by 1 (no increase). When the counter reaches 0 then the context should be
freed. The free may happen in any dispatch operation. DispatchClose can
occur before other operations are completed. Following this approach all
should work fine. The drawback is that there is a usermode reference count.
The name of the property should be ContextReferenceCount.
Maybe even your previous issue should be gone and no extra check for
invalid context is needed because the issue can happen in any operation.

This problem can't be solved inside of the driver. Drive has no idea what
Usermode is doing.

This is actually just an assumption why ReferenceCount exists and your
original problem can occur in any operation. This assumption has now to be
confirmed.

Thx Marinko

Am 02.03.2017 21:48 schrieb ""pliard-chromium"" <notifications@github.com>:
‚Ä¶
 @marinkobabic <https://github.com/marinkobabic> I will try to reproduce
 this with the Dokan mirror by adding a sleep() in the
 DispatchDirectoryInformation callback. As I said above the issue happens
 when an operation times out.

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#440 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ADHSONfWcaSk4uVISBIXaoLEL46RXm8nks5rhysFgaJpZM4L80Ml>
 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,13,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283813430,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@marinkobabic Thanks. Your explanation matches my current understanding. We seem to agree that the current DOKAN_OPEN_INFO ref-count is necessary, in the current state of things at least.
This brings me back to the note I made in an earlier comment: ""Also note that the Dokan client's close callback is currently invoked in DispatchClose() as opposed to when the open info count drops to 0. This means that the client has to implement its own ref-counting for the opaque user context pointer stored in the DOKAN_FILE_INFO. Without changing this I also get a use-after-free in my client code in case of timeout. I will send you a separate pull request addressing that.""
I have a patch ready to fix that problem by calling the client's close operation from ReleaseDokanOpenInfo() when the open info count drops to 0. Does that make sense to you? I can send a separate pull request for that and we can continue the discussion there.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/Liryna,14,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283880517,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","I am not sure calling close in ReleaseDokanOpenInfo would be very great. This sounds like a hack but that's maybe the way to do ? No close on IRP close and call when release has to be free ?
What do you think @marinkobabic does this idea sounds bad ? Am afraid that the close will be called too late and we would face a sharing violation if a createfile follows the irp close that we still didn't proceed.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/marinkobabic,15,https://github.com/dokan-dev/dokany/pull/440#issuecomment-283909904,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","It doesn't feel correct. The code can be improved anyway. DOKAN_OPEN_INFO
can get a new flag IsClosed. This flag would be set if the driver has
called the DispatchClose. In SendEventInformation this flag can be checked
and if set the DeviceIoControl should not be called. This way the usermode
is aware about the actual state of the file inside of the driver.

You remember the *SendWriteRequest*? Also there the flag should be checked
and this way we can prevent unnecessary call to the driver. LastError can
be set to ERROR_OPERATION_ABORTED

This way the code would be clean and we would have the full transparency.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,16,https://github.com/dokan-dev/dokany/pull/440#issuecomment-284057462,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.",@Liryna Any chance you could elaborate on the sharing violation issue? The change I had in mind was only deferring the invocation of the client's close callback until the open info count drops to 0. AFAICT this shouldn't affect Dokan itself given that it doesn't use the return value of that callback. Or am I missing something?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/Liryna,17,https://github.com/dokan-dev/dokany/pull/440#issuecomment-285928347,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@pliard-chromium If the stream is not closed in close, it is possible that there is a race condition depending on the sharing mode that he was open.
I mean that the kernel can probably just after the close (since for him everything is clean normally after close) request a CreateFile that will create a sharing violation since the not closed stream has no sharing access. This error would be ""unexpected"" from him and probably display an error to the user.
That's why currently we open during write/read after the close with sharing.
Maybe what I explain will never happen but it is a possibility üò¢",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/pliard-chromium,18,https://github.com/dokan-dev/dokany/pull/440#issuecomment-288403438,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@Liryna Thanks for the explanation, that makes sense to me. The sharing violation would be triggered by the logic that the Dokan client has to implement, e.g. in Dokan mirror, is that correct? We don't currently implement such logic in our Dokan-based file system although we definitely should.
Would the issue still persist if the sharing violation detection logic was implemented in the driver instead? Would that make sense at all?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/Liryna,19,https://github.com/dokan-dev/dokany/pull/440#issuecomment-288543136,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","@pliard-chromium Dokan kernel does implement sharing violation on kernel side. The issue that would appear here is that the kernel get a createfile, for him there is no sharing violation because the close has happened for him and does not expect that the user has kept a handle open on the file. Therefore the request pass the kernel goes to the FS user and the sharing violation happen because handle is possibly still opened.
Windows request the handle to be cleaned, and it should be like that or unexpected behavior like describe would happen üò¢",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/sefai,20,https://github.com/dokan-dev/dokany/pull/440#issuecomment-299635514,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","Hello there, I had a similar problem. I am not sure if it's the same use after free issue you are talking about here. Let me describe:
In the mirror sample, a file HANDLE is stored in DokanFileInfo->Context. In MirrorCleanup callback file is closed using CloseHandle with DokanFileInfo->Context(file HANDLE) and DokanFileInfo->Context is set to 0. In MirrorCloseFile callback DokanFileInfo->Context is being checked and if it is not 0, CloseHandle is called again. CloseHandle only throws an exception in Debug mode if an invalid file handle is passed, but does ignore it in Release mode, so there appears no problem with the mirror sample when this handle is closed in MirrorCleanup but due to use after free problem used again in MirrorCloseFile.
But in my user mode application I am storing a heap allocated pointer to a custom struct in DokanFileInfo->Context. This is freed in Cleanup callback but somehow this pointer appears again in CloseFile callback and it was giving me a dangling pointer issue. So, I implemented my own control mechanism in my application to overcome this dangling pointer issue.
I would be happy if this is resolved in driver, because I had to implement a three-tier lookup table and a locking mechanism. In each operation I am validating the context against the lookup table, lock the entry, and release the entry after the operation is done. This is introducing a lot of code complexity and some delay because of locks.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/Liryna,21,https://github.com/dokan-dev/dokany/pull/440#issuecomment-299714104,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","Hi @sefai ,
Does in DokanFileInfo->Context you set the context to null just after free it ?
If yes, you should have a context null in closefile and would have no issue.
Is it possible in your case that the custom struct is shared with two DokanFileInfo ? (two that point the same file but opened twice ? (CreateFile called 2 times)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/sefai,22,https://github.com/dokan-dev/dokany/pull/440#issuecomment-299718934,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.","Yes @Liryna , I set it to null. As I said this is not specific to my struct and I am creating a new struct for each CreateFile callback.
Same thing happens in mirror. But CloseHandle absorbs the error in Release mode and in Debug mode you can continue execution by ignoring the exception. I almost always get an exception in Debug mode while building a heavy project in mirror drive.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,440,2017-02-09T23:44:03Z,2020-07-24T16:18:42Z,2020-07-24T16:18:42Z,CLOSED,False,23,57,8,https://github.com/pliard-chromium,Remove ref-counting of DOKAN_OPEN_INFO pointers.,1,[],https://github.com/dokan-dev/dokany/pull/440,https://github.com/Liryna,23,https://github.com/dokan-dev/dokany/pull/440#issuecomment-663618433,"DispatchClose() is guaranteed to be called once all the outstanding
operations for the handle completed so ref-counting doesn't appear to be
necessary.",Merged with d3e3fcd,True,{'EYES': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,443,2017-02-14T10:29:08Z,2017-02-15T07:56:29Z,2017-02-15T07:56:29Z,CLOSED,False,892,2,8,https://github.com/woachk,Arm bringup,8,[],https://github.com/dokan-dev/dokany/pull/443,https://github.com/woachk,1,https://github.com/dokan-dev/dokany/pull/443,This pull request adds ARM support.,This pull request adds ARM support.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,443,2017-02-14T10:29:08Z,2017-02-15T07:56:29Z,2017-02-15T07:56:29Z,CLOSED,False,892,2,8,https://github.com/woachk,Arm bringup,8,[],https://github.com/dokan-dev/dokany/pull/443,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/443#issuecomment-279941373,This pull request adds ARM support.,Merged here: #446,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/woachk,1,https://github.com/dokan-dev/dokany/pull/445,First attempt...,First attempt...,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/woachk,2,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279703236,First attempt...,"ARM SDKs work fine on AppVeyor :)
Maybe ready for merging?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279703684,First attempt...,"Ah great üëç I just don't have my windows with me, will do the test later today when will have it.
Will also try to add the wix for it. Will I need to download something to add ARM for VS (maybe it is simply on the iso) ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/kika123,4,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279704454,First attempt...,"@Liryna for ARM32, you don't need to add anything special normally, but I don't think that WiX itself supports ARM at all(there are examples of working programs using it, but I don't think that they merged it to mainline WiX)...",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/kika123,5,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279704620,First attempt...,"in VS2017, you'll need to install the ARM compiler in Advanced features or to install UWP support, in which case ARM will be selected automatically",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/woachk,6,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279832642,First attempt...,@Liryna should I attempt WiX again? :),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279836505,First attempt...,"@woachk Build perfectly on my side üëç
About wix, I found nothing about arm and wix. Package seems like to have platform arm variable http://wixtoolset.org/documentation/manual/v3/xsd/wix/package.html but no idea if this is working.
Otherwise, can just rebase all your commit into one üòÉ ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/woachk,8,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279837265,First attempt...,"@Liryna yeah, you can rebase all the commits into one ;)
Yeah, there is ARM support, but a C:\Program Files (x86)\WiX Toolset v3.10\bin\difxapp_arm.wixlib isn't shipped by default as all, maybe it will have to be done without it(I actually have an idea ;)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/Liryna,9,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279837507,First attempt...,@woachk You can only rebase the changes :D otherwise it will look like I did the work,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/woachk,10,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279842024,First attempt...,"@Liryna how? I'm a Windows guy and the only Git interface that I really know is the Visual Studio Git client. :P I'm trying and I utterly failed it seems, trying to clone again",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/woachk,11,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279847406,First attempt...,"@Liryna yay, ended up cloning the repo, doing an xcopy, then running git add to have one single commit ;)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/Liryna,12,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279934176,First attempt...,"@woachk if you are using tortoise git, go on commit log, select all your commit and you have possibility with a rights click on them to merge into one.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/Liryna,13,https://github.com/dokan-dev/dokany/pull/445#issuecomment-279941338,First attempt...,Merged here: #446,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,445,2017-02-14T12:55:32Z,2017-02-15T07:56:05Z,2017-02-16T13:09:24Z,CLOSED,False,895,2,9,https://github.com/woachk,Add ARM builds to AppVeyor(and pry that ARM SDKs are properly installed there),10,[],https://github.com/dokan-dev/dokany/pull/445,https://github.com/Rondom,14,https://github.com/dokan-dev/dokany/pull/445#issuecomment-280325886,First attempt...,"The command-line way, for those that are interested:
$ git rebase --interactive <commitref>

This will open a text-editor with all the commits since the commit-ref. In this case, you are fine by using the revision where you branched off, i.e. master if you have not pulled in newer changes or want to rebase your commits in your branch on top of the newly updated master without creating a merge-commit.
By editing the text, you can

reorder the sequence of commits (by changing the order of the individual lines)
squash (i.e. merge with the previous commit)
drop commits (removing a line works as well)
reword (i.e. edit commit-msg)
edit commit contents (you will be dropped back to shell, where you can git add and git commit --amend. Once your are done, use git rebase --continue to proceed with the next commit)

I have yet to find a GIT GUI that does this in a nicer way than this, but ""nice"" is in the eye of the beholder and I am a command-line-guy that likes text-editors ;-)
For modifying authorship information the following parameter to git commit is useful.
   --author=<author>
       Override the commit author. Specify an explicit author using the standard A U Thor <author@example.com>
       format. Otherwise <author> is assumed to be a pattern and is used to search for an existing commit by that
       author (i.e. rev-list --all -i --author=<author>); the commit author is then copied from the first such
       commit found.",True,"{'THUMBS_UP': ['https://github.com/Liryna'], 'HEART': ['https://github.com/Liryna']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,446,2017-02-14T21:50:24Z,2017-02-15T07:13:08Z,2017-02-15T07:13:19Z,MERGED,True,895,2,9,https://github.com/woachk,Add Windows on ARM support,1,[],https://github.com/dokan-dev/dokany/pull/446,https://github.com/woachk,1,https://github.com/dokan-dev/dokany/pull/446,This pull request adds support for Windows on ARM.,This pull request adds support for Windows on ARM.,True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,446,2017-02-14T21:50:24Z,2017-02-15T07:13:08Z,2017-02-15T07:13:19Z,MERGED,True,895,2,9,https://github.com/woachk,Add Windows on ARM support,1,[],https://github.com/dokan-dev/dokany/pull/446,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/446#issuecomment-279934426,This pull request adds support for Windows on ARM.,Perfect @woachk ! Thanks a lot !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,448,2017-02-15T04:52:58Z,2017-02-15T08:03:10Z,2017-02-15T08:03:10Z,CLOSED,False,5,0,1,https://github.com/yin19941005,Add DokanFreeMdl for read operation,2,[],https://github.com/dokan-dev/dokany/pull/448,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/448,Adding DokanFreeMdl mentioned in #442. Should fix the forgotten free.,Adding DokanFreeMdl mentioned in #442. Should fix the forgotten free.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,448,2017-02-15T04:52:58Z,2017-02-15T08:03:10Z,2017-02-15T08:03:10Z,CLOSED,False,5,0,1,https://github.com/yin19941005,Add DokanFreeMdl for read operation,2,[],https://github.com/dokan-dev/dokany/pull/448,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/448#issuecomment-279934316,Adding DokanFreeMdl mentioned in #442. Should fix the forgotten free.,"@yin19941005 there is an empty merge commit in the history üò¢
maybe you will need to create another branch with the changes here to make it disappear",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,448,2017-02-15T04:52:58Z,2017-02-15T08:03:10Z,2017-02-15T08:03:10Z,CLOSED,False,5,0,1,https://github.com/yin19941005,Add DokanFreeMdl for read operation,2,[],https://github.com/dokan-dev/dokany/pull/448,https://github.com/yin19941005,3,https://github.com/dokan-dev/dokany/pull/448#issuecomment-279941049,Adding DokanFreeMdl mentioned in #442. Should fix the forgotten free.,"Oh! Sorry for that! I am pretty new on using Git.
I will try to create another branch to make it disappear.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,449,2017-02-15T08:29:03Z,2017-02-15T08:47:49Z,2017-02-16T01:34:47Z,MERGED,True,5,0,1,https://github.com/yin19941005,Add DokanFreeMdl for read operation,1,[],https://github.com/dokan-dev/dokany/pull/449,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/449,"Forgotten free MDL in DokanCompleteRead. Add the DokanFreeMdl to fix. Fix for #442 .
I think this time should be correct. Please correct me if I messed up again.","Forgotten free MDL in DokanCompleteRead. Add the DokanFreeMdl to fix. Fix for #442 .
I think this time should be correct. Please correct me if I messed up again.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,449,2017-02-15T08:29:03Z,2017-02-15T08:47:49Z,2017-02-16T01:34:47Z,MERGED,True,5,0,1,https://github.com/yin19941005,Add DokanFreeMdl for read operation,1,[],https://github.com/dokan-dev/dokany/pull/449,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/449#issuecomment-279951041,"Forgotten free MDL in DokanCompleteRead. Add the DokanFreeMdl to fix. Fix for #442 .
I think this time should be correct. Please correct me if I messed up again.",Thank you @yin19941005 üëç very appreciate for taking the time on this !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,450,2017-02-17T20:43:05Z,2017-03-23T14:21:04Z,2017-03-23T14:36:47Z,MERGED,True,4,2,2,https://github.com/pliard-chromium,Check event info status in DispatchCreate() with NT_SUCCESS() as in t‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/450,https://github.com/pliard-chromium,1,https://github.com/dokan-dev/dokany/pull/450,"‚Ä¶he driver.
DokanCompleteCreate() in the driver uses the NT_SUCCESS() macro to check
whether it should free the CCB, FCB... while DispatchCreate() in
userspace was freeing the DOKAN_OPEN_INFO pointer when the event info
status was not equal to STATUS_SUCCESS.
This was leading to operations being sent to userspace with a null
DOKAN_OPEN_INFO pointer after DispatchCreate() returned a successful
non-STATUS_SUCCESS status such as STATUS_TIMEOUT.","‚Ä¶he driver.
DokanCompleteCreate() in the driver uses the NT_SUCCESS() macro to check
whether it should free the CCB, FCB... while DispatchCreate() in
userspace was freeing the DOKAN_OPEN_INFO pointer when the event info
status was not equal to STATUS_SUCCESS.
This was leading to operations being sent to userspace with a null
DOKAN_OPEN_INFO pointer after DispatchCreate() returned a successful
non-STATUS_SUCCESS status such as STATUS_TIMEOUT.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,450,2017-02-17T20:43:05Z,2017-03-23T14:21:04Z,2017-03-23T14:36:47Z,MERGED,True,4,2,2,https://github.com/pliard-chromium,Check event info status in DispatchCreate() with NT_SUCCESS() as in t‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/450,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/450#issuecomment-280906256,"‚Ä¶he driver.
DokanCompleteCreate() in the driver uses the NT_SUCCESS() macro to check
whether it should free the CCB, FCB... while DispatchCreate() in
userspace was freeing the DOKAN_OPEN_INFO pointer when the event info
status was not equal to STATUS_SUCCESS.
This was leading to operations being sent to userspace with a null
DOKAN_OPEN_INFO pointer after DispatchCreate() returned a successful
non-STATUS_SUCCESS status such as STATUS_TIMEOUT.","Thank you @pliard-chromium for the PR !
I am just wondering if we should not also use the macro for the operation ? Does it would add something ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,450,2017-02-17T20:43:05Z,2017-03-23T14:21:04Z,2017-03-23T14:36:47Z,MERGED,True,4,2,2,https://github.com/pliard-chromium,Check event info status in DispatchCreate() with NT_SUCCESS() as in t‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/450,https://github.com/pliard-chromium,3,https://github.com/dokan-dev/dokany/pull/450#issuecomment-283115521,"‚Ä¶he driver.
DokanCompleteCreate() in the driver uses the NT_SUCCESS() macro to check
whether it should free the CCB, FCB... while DispatchCreate() in
userspace was freeing the DOKAN_OPEN_INFO pointer when the event info
status was not equal to STATUS_SUCCESS.
This was leading to operations being sent to userspace with a null
DOKAN_OPEN_INFO pointer after DispatchCreate() returned a successful
non-STATUS_SUCCESS status such as STATUS_TIMEOUT.",Thanks for taking a look @Liryna. I haven't got a chance to look into this yet. Will let you know when it's ready.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,450,2017-02-17T20:43:05Z,2017-03-23T14:21:04Z,2017-03-23T14:36:47Z,MERGED,True,4,2,2,https://github.com/pliard-chromium,Check event info status in DispatchCreate() with NT_SUCCESS() as in t‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/450,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/450#issuecomment-285966969,"‚Ä¶he driver.
DokanCompleteCreate() in the driver uses the NT_SUCCESS() macro to check
whether it should free the CCB, FCB... while DispatchCreate() in
userspace was freeing the DOKAN_OPEN_INFO pointer when the event info
status was not equal to STATUS_SUCCESS.
This was leading to operations being sent to userspace with a null
DOKAN_OPEN_INFO pointer after DispatchCreate() returned a successful
non-STATUS_SUCCESS status such as STATUS_TIMEOUT.","Hi @pliard-chromium ,
Probably the macro should also be used here:

  
    
      dokany/dokan/create.c
    
    
         Line 89
      in
      1cef44a
    
  
  
    

        
          
           BOOL CreateSuccesStatusCheck(NTSTATUS status, ULONG disposition) {",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,450,2017-02-17T20:43:05Z,2017-03-23T14:21:04Z,2017-03-23T14:36:47Z,MERGED,True,4,2,2,https://github.com/pliard-chromium,Check event info status in DispatchCreate() with NT_SUCCESS() as in t‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/450,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/450#issuecomment-288734331,"‚Ä¶he driver.
DokanCompleteCreate() in the driver uses the NT_SUCCESS() macro to check
whether it should free the CCB, FCB... while DispatchCreate() in
userspace was freeing the DOKAN_OPEN_INFO pointer when the event info
status was not equal to STATUS_SUCCESS.
This was leading to operations being sent to userspace with a null
DOKAN_OPEN_INFO pointer after DispatchCreate() returned a successful
non-STATUS_SUCCESS status such as STATUS_TIMEOUT.","Thank you @pliard-chromium for the PR üëç if you find any other status != STATUS_SUCCESS that should be replaced, please do not hesitate !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,450,2017-02-17T20:43:05Z,2017-03-23T14:21:04Z,2017-03-23T14:36:47Z,MERGED,True,4,2,2,https://github.com/pliard-chromium,Check event info status in DispatchCreate() with NT_SUCCESS() as in t‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/450,https://github.com/pliard-chromium,6,https://github.com/dokan-dev/dokany/pull/450#issuecomment-288739119,"‚Ä¶he driver.
DokanCompleteCreate() in the driver uses the NT_SUCCESS() macro to check
whether it should free the CCB, FCB... while DispatchCreate() in
userspace was freeing the DOKAN_OPEN_INFO pointer when the event info
status was not equal to STATUS_SUCCESS.
This was leading to operations being sent to userspace with a null
DOKAN_OPEN_INFO pointer after DispatchCreate() returned a successful
non-STATUS_SUCCESS status such as STATUS_TIMEOUT.",Thanks @Liryna! Sorry I didn't get a chance to address your earlier comment.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,451,2017-02-18T14:15:45Z,2017-02-18T15:21:32Z,2017-02-18T15:33:39Z,MERGED,True,8,5,1,https://github.com/Rondom,CI: MSYS2 fixes and improvements,2,[],https://github.com/dokan-dev/dokany/pull/451,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/451,"This fixes two issues with on AppVeyor MSYS2. See the commit-msgs for detailed descriptions.

Build was failing due to the way we upgrade MSYS2
Pacman was unnecessarily re-installing already installed packages.","This fixes two issues with on AppVeyor MSYS2. See the commit-msgs for detailed descriptions.

Build was failing due to the way we upgrade MSYS2
Pacman was unnecessarily re-installing already installed packages.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,451,2017-02-18T14:15:45Z,2017-02-18T15:21:32Z,2017-02-18T15:33:39Z,MERGED,True,8,5,1,https://github.com/Rondom,CI: MSYS2 fixes and improvements,2,[],https://github.com/dokan-dev/dokany/pull/451,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/451#issuecomment-280848642,"This fixes two issues with on AppVeyor MSYS2. See the commit-msgs for detailed descriptions.

Build was failing due to the way we upgrade MSYS2
Pacman was unnecessarily re-installing already installed packages.","üëç This msys üòÑ
Thanks a lot @Rondom ! very appreciate !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,451,2017-02-18T14:15:45Z,2017-02-18T15:21:32Z,2017-02-18T15:33:39Z,MERGED,True,8,5,1,https://github.com/Rondom,CI: MSYS2 fixes and improvements,2,[],https://github.com/dokan-dev/dokany/pull/451,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/451#issuecomment-280852703,"This fixes two issues with on AppVeyor MSYS2. See the commit-msgs for detailed descriptions.

Build was failing due to the way we upgrade MSYS2
Pacman was unnecessarily re-installing already installed packages.",@Liryna maybe restart the builds of the two outstanding PRs,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,451,2017-02-18T14:15:45Z,2017-02-18T15:21:32Z,2017-02-18T15:33:39Z,MERGED,True,8,5,1,https://github.com/Rondom,CI: MSYS2 fixes and improvements,2,[],https://github.com/dokan-dev/dokany/pull/451,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/451#issuecomment-280852795,"This fixes two issues with on AppVeyor MSYS2. See the commit-msgs for detailed descriptions.

Build was failing due to the way we upgrade MSYS2
Pacman was unnecessarily re-installing already installed packages.",üëç it is staring,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,452,2017-02-20T09:22:46Z,2017-02-22T01:58:35Z,2017-02-22T01:58:35Z,CLOSED,False,23,10,1,https://github.com/yin19941005,Workaround Fix for Cancel Copy Crash Issue,1,[],https://github.com/dokan-dev/dokany/pull/452,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/452,Return Status_Access_Denied to the system if request bigger memory in dokan/write.c and the returned length for buffer is zero. Workaround Fix for the crash issue when cancel the copy operation #447 .,Return Status_Access_Denied to the system if request bigger memory in dokan/write.c and the returned length for buffer is zero. Workaround Fix for the crash issue when cancel the copy operation #447 .,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,454,2017-02-20T21:56:18Z,2017-02-22T12:49:47Z,2017-02-24T16:48:12Z,MERGED,True,62,4,3,https://github.com/marinkobabic,Flush any opened files before doing a rename,1,[],https://github.com/dokan-dev/dokany/pull/454,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/454,Fix here described issue #436,Fix here described issue #436,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,454,2017-02-20T21:56:18Z,2017-02-22T12:49:47Z,2017-02-24T16:48:12Z,MERGED,True,62,4,3,https://github.com/marinkobabic,Flush any opened files before doing a rename,1,[],https://github.com/dokan-dev/dokany/pull/454,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/454#issuecomment-281660219,Fix here described issue #436,"Hi @marinkobabic ,
Thanks a lot for the PR and taking the time on this issue üëç as always ! üç∫",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,454,2017-02-20T21:56:18Z,2017-02-22T12:49:47Z,2017-02-24T16:48:12Z,MERGED,True,62,4,3,https://github.com/marinkobabic,Flush any opened files before doing a rename,1,[],https://github.com/dokan-dev/dokany/pull/454,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/454#issuecomment-281661347,Fix here described issue #436,"@marinkobabic performance question, can we not just flush file in the directory ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,454,2017-02-20T21:56:18Z,2017-02-22T12:49:47Z,2017-02-24T16:48:12Z,MERGED,True,62,4,3,https://github.com/marinkobabic,Flush any opened files before doing a rename,1,[],https://github.com/dokan-dev/dokany/pull/454,https://github.com/marinkobabic,4,https://github.com/dokan-dev/dokany/pull/454#issuecomment-281798098,Fix here described issue #436,@Liryna That would make sense. I flushed all of them just because it was simpler to implement.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,454,2017-02-20T21:56:18Z,2017-02-22T12:49:47Z,2017-02-24T16:48:12Z,MERGED,True,62,4,3,https://github.com/marinkobabic,Flush any opened files before doing a rename,1,[],https://github.com/dokan-dev/dokany/pull/454,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/454#issuecomment-281916458,Fix here described issue #436,Ok I see @marinkobabic do you plan to make a patch for it ? Or I create an issue to remind ?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,454,2017-02-20T21:56:18Z,2017-02-22T12:49:47Z,2017-02-24T16:48:12Z,MERGED,True,62,4,3,https://github.com/marinkobabic,Flush any opened files before doing a rename,1,[],https://github.com/dokan-dev/dokany/pull/454,https://github.com/marinkobabic,6,https://github.com/dokan-dev/dokany/pull/454#issuecomment-282341093,Fix here described issue #436,"@Liryna
Here you have the refactored code. Please do a carefully review of the code #462",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,457,2017-02-22T08:10:52Z,2017-02-22T08:19:21Z,2017-02-22T08:19:21Z,CLOSED,False,44,13,2,https://github.com/yin19941005,Fix crash issue cause by canceling the copy operation,1,[],https://github.com/dokan-dev/dokany/pull/457,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/457,"The root cause is because the dokan.sys will still return status_success when the corresponding IRP is not found cause by the user cancellation. With this fix, the driver will return status_cancelled and the dokan usermode dll will handle the status returned correctly. This fix will fix the issue #447 .","The root cause is because the dokan.sys will still return status_success when the corresponding IRP is not found cause by the user cancellation. With this fix, the driver will return status_cancelled and the dokan usermode dll will handle the status returned correctly. This fix will fix the issue #447 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,457,2017-02-22T08:10:52Z,2017-02-22T08:19:21Z,2017-02-22T08:19:21Z,CLOSED,False,44,13,2,https://github.com/yin19941005,Fix crash issue cause by canceling the copy operation,1,[],https://github.com/dokan-dev/dokany/pull/457,https://github.com/yin19941005,2,https://github.com/dokan-dev/dokany/pull/457#issuecomment-281599966,"The root cause is because the dokan.sys will still return status_success when the corresponding IRP is not found cause by the user cancellation. With this fix, the driver will return status_cancelled and the dokan usermode dll will handle the status returned correctly. This fix will fix the issue #447 .","Sorry, I found a typo on it. I will close this pull request and reopen a new one.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,458,2017-02-22T08:28:11Z,2017-02-22T13:01:24Z,2017-02-22T13:01:25Z,MERGED,True,44,13,2,https://github.com/yin19941005,Fix crash issue cause by canceling the copy operation,1,[],https://github.com/dokan-dev/dokany/pull/458,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/458,"The root cause is because the dokan.sys will still return status_success when the corresponding IRP is not found cause by the user cancellation. With this fix, the driver will return status_cancelled and the dokan usermode dll will handle the status returned correctly. This fix will fix the issue #447 .
Sorry for the typo in the previous pull request.","The root cause is because the dokan.sys will still return status_success when the corresponding IRP is not found cause by the user cancellation. With this fix, the driver will return status_cancelled and the dokan usermode dll will handle the status returned correctly. This fix will fix the issue #447 .
Sorry for the typo in the previous pull request.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,458,2017-02-22T08:28:11Z,2017-02-22T13:01:24Z,2017-02-22T13:01:25Z,MERGED,True,44,13,2,https://github.com/yin19941005,Fix crash issue cause by canceling the copy operation,1,[],https://github.com/dokan-dev/dokany/pull/458,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/458#issuecomment-281662762,"The root cause is because the dokan.sys will still return status_success when the corresponding IRP is not found cause by the user cancellation. With this fix, the driver will return status_cancelled and the dokan usermode dll will handle the status returned correctly. This fix will fix the issue #447 .
Sorry for the typo in the previous pull request.","Thanks a lot for the PR and taking the time on this issue @yin19941005 ü•á
very appreciate !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,460,2017-02-23T14:08:44Z,2017-03-02T21:38:42Z,2017-03-02T21:38:42Z,CLOSED,False,20,13,1,https://github.com/FixBo,Low buffer handling correction on QueryDirectory,5,[],https://github.com/dokan-dev/dokany/pull/460,https://github.com/FixBo,1,https://github.com/dokan-dev/dokany/pull/460,#459,#459,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,460,2017-02-23T14:08:44Z,2017-03-02T21:38:42Z,2017-03-02T21:38:42Z,CLOSED,False,20,13,1,https://github.com/FixBo,Low buffer handling correction on QueryDirectory,5,[],https://github.com/dokan-dev/dokany/pull/460,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/460#issuecomment-282562003,#459,Some lines were accidentally changed and have indentation issues. Click the message to see details of the (suggested) changes,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,460,2017-02-23T14:08:44Z,2017-03-02T21:38:42Z,2017-03-02T21:38:42Z,CLOSED,False,20,13,1,https://github.com/FixBo,Low buffer handling correction on QueryDirectory,5,[],https://github.com/dokan-dev/dokany/pull/460,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/460#issuecomment-282647868,#459,"Hi @FixBo ,
Thanks a lot for the fix !
Can you just add a comment near return -1 & -2 https://github.com/dokan-dev/dokany/pull/460/files#diff-b14709ebbc38ce5916277fd4a8e7736dR408 to explain the cases here (for futur people looking at it)
Also rebase your commit üëç into one.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,460,2017-02-23T14:08:44Z,2017-03-02T21:38:42Z,2017-03-02T21:38:42Z,CLOSED,False,20,13,1,https://github.com/FixBo,Low buffer handling correction on QueryDirectory,5,[],https://github.com/dokan-dev/dokany/pull/460,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/460#issuecomment-283790353,#459,"Hi @FixBo ,
Thanks a lot for you contribution üëç very appreciate !
I have merged your commit into one here: 1616d32",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,462,2017-02-24T16:44:45Z,2017-03-02T20:39:08Z,2017-03-02T20:47:32Z,MERGED,True,94,55,4,https://github.com/marinkobabic,Use filename check before doing flush. Remove code redudancy,1,[],https://github.com/dokan-dev/dokany/pull/462,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/462,The check of the filename is now implemented. It's suboptimal because the backslash should be added to the folder before the check is performed. This is not possible without allocation of additional memory. Anyway the changes improve the code a lot and code redundancy is eliminated.,The check of the filename is now implemented. It's suboptimal because the backslash should be added to the folder before the check is performed. This is not possible without allocation of additional memory. Anyway the changes improve the code a lot and code redundancy is eliminated.,True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,462,2017-02-24T16:44:45Z,2017-03-02T20:39:08Z,2017-03-02T20:47:32Z,MERGED,True,94,55,4,https://github.com/marinkobabic,Use filename check before doing flush. Remove code redudancy,1,[],https://github.com/dokan-dev/dokany/pull/462,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/462#issuecomment-282589822,The check of the filename is now implemented. It's suboptimal because the backslash should be added to the folder before the check is performed. This is not possible without allocation of additional memory. Anyway the changes improve the code a lot and code redundancy is eliminated.,"Thank you @marinkobabic that's perfect !
I will review it when I can ‚ù§Ô∏è  !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,462,2017-02-24T16:44:45Z,2017-03-02T20:39:08Z,2017-03-02T20:47:32Z,MERGED,True,94,55,4,https://github.com/marinkobabic,Use filename check before doing flush. Remove code redudancy,1,[],https://github.com/dokan-dev/dokany/pull/462,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/462#issuecomment-283020478,The check of the filename is now implemented. It's suboptimal because the backslash should be added to the folder before the check is performed. This is not possible without allocation of additional memory. Anyway the changes improve the code a lot and code redundancy is eliminated.,"Should we not also check if fcb->SectionObjectPointers is null in FlushFcb ?
This seems to be good üëç for me",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,462,2017-02-24T16:44:45Z,2017-03-02T20:39:08Z,2017-03-02T20:47:32Z,MERGED,True,94,55,4,https://github.com/marinkobabic,Use filename check before doing flush. Remove code redudancy,1,[],https://github.com/dokan-dev/dokany/pull/462,https://github.com/marinkobabic,4,https://github.com/dokan-dev/dokany/pull/462#issuecomment-283080617,The check of the filename is now implemented. It's suboptimal because the backslash should be added to the folder before the check is performed. This is not possible without allocation of additional memory. Anyway the changes improve the code a lot and code redundancy is eliminated.,"Is SectionObjectPointers a pointer or a struct? Can it be null? If it can
be null so we should check it. Have no access to my machine. I'm on
vacation for a week:-)

Am 28.02.2017 12:57 schrieb ""Liryna"" <notifications@github.com>:
‚Ä¶
 Should we not also check if fcb->SectionObjectPointers is null in
 FlushFcb ?

 This seems to be good üëç for me

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#462 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ADHSODAvnapuFPGOPiSEyE3lQ3P79nPtks5rhAuPgaJpZM4MLa0E>
 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,462,2017-02-24T16:44:45Z,2017-03-02T20:39:08Z,2017-03-02T20:47:32Z,MERGED,True,94,55,4,https://github.com/marinkobabic,Use filename check before doing flush. Remove code redudancy,1,[],https://github.com/dokan-dev/dokany/pull/462,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/462#issuecomment-283775174,The check of the filename is now implemented. It's suboptimal because the backslash should be added to the folder before the check is performed. This is not possible without allocation of additional memory. Anyway the changes improve the code a lot and code redundancy is eliminated.,"My bad @marinkobabic ! SectionObjectPointers is a struct :) I failed you were right to check ImageSectionObject that is a pointer üëç
Thanks again for the fix !
Will test #369 and #264 when I get free time (also in vacation üòÑ Hope you have a great week !)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,468,2017-03-02T09:04:37Z,2017-03-02T20:38:35Z,2017-03-02T20:38:37Z,MERGED,True,7,1,1,https://github.com/Rondom,CI: Try rebooting two times and reduce timeout,1,[],https://github.com/dokan-dev/dokany/pull/468,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/468,"Turns out that waiting for 60mins was not so smart... üòä
Using the changes below, builds should fail early and we can find out, whether the build-VM does not shut down or whether it does not come back after reboot.
Instead of waiting for an hour to reboot, try rebooting in two different
ways with a timeout of 4 minutes each. If the system has not rebooted
after those two tries, fail the build.","Turns out that waiting for 60mins was not so smart... üòä
Using the changes below, builds should fail early and we can find out, whether the build-VM does not shut down or whether it does not come back after reboot.
Instead of waiting for an hour to reboot, try rebooting in two different
ways with a timeout of 4 minutes each. If the system has not rebooted
after those two tries, fail the build.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,468,2017-03-02T09:04:37Z,2017-03-02T20:38:35Z,2017-03-02T20:38:37Z,MERGED,True,7,1,1,https://github.com/Rondom,CI: Try rebooting two times and reduce timeout,1,[],https://github.com/dokan-dev/dokany/pull/468,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/468#issuecomment-283772997,"Turns out that waiting for 60mins was not so smart... üòä
Using the changes below, builds should fail early and we can find out, whether the build-VM does not shut down or whether it does not come back after reboot.
Instead of waiting for an hour to reboot, try rebooting in two different
ways with a timeout of 4 minutes each. If the system has not rebooted
after those two tries, fail the build.","üëç @Rondom thats a good idea üòÑ
I hope it the force reboot will fix some build error!
Thank you @Rondom as always !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,469,2017-03-03T09:40:05Z,2017-03-03T11:36:51Z,2017-03-03T12:07:17Z,MERGED,True,2,1,1,https://github.com/sm4rk0,Add 1.0.2 link to the CHANGELOG.md,1,[],https://github.com/dokan-dev/dokany/pull/469,https://github.com/sm4rk0,1,https://github.com/dokan-dev/dokany/pull/469,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,469,2017-03-03T09:40:05Z,2017-03-03T11:36:51Z,2017-03-03T12:07:17Z,MERGED,True,2,1,1,https://github.com/sm4rk0,Add 1.0.2 link to the CHANGELOG.md,1,[],https://github.com/dokan-dev/dokany/pull/469,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/469#issuecomment-283932669,,"Hey!
Yes that's was missing :)
Thanks you!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,473,2017-03-12T04:07:03Z,2017-03-23T12:58:36Z,2017-03-23T12:58:36Z,MERGED,True,59,3,2,https://github.com/Rondom,FUSE: Check for non-empty directories on delete,1,[],https://github.com/dokan-dev/dokany/pull/473,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/473,"Fixes #270.
Two remaining questions before merging. The first one is more out of interest, the second one is more relevant to this PR.

@Liryna As you can see I put the check earlier than you suggested in #270, which is in line with what I read about file-deletion on Windows. This is a general question about Windows: What happens when the deletion fails during cleanup? Is it true that there is no possibility to signal user space that a deletion failed?
Is there the possibility of race conditions?

FileSetDisposition is called
the DeleteDirectory callback enumerates the direntries, finds none
a file is placed into the directory
DeleteDirectory returns with no-error (because it was empty), signals that the directory is going to be deleted","Fixes #270.
Two remaining questions before merging. The first one is more out of interest, the second one is more relevant to this PR.

@Liryna As you can see I put the check earlier than you suggested in #270, which is in line with what I read about file-deletion on Windows. This is a general question about Windows: What happens when the deletion fails during cleanup? Is it true that there is no possibility to signal user space that a deletion failed?
Is there the possibility of race conditions?

FileSetDisposition is called
the DeleteDirectory callback enumerates the direntries, finds none
a file is placed into the directory
DeleteDirectory returns with no-error (because it was empty), signals that the directory is going to be deleted",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,473,2017-03-12T04:07:03Z,2017-03-23T12:58:36Z,2017-03-23T12:58:36Z,MERGED,True,59,3,2,https://github.com/Rondom,FUSE: Check for non-empty directories on delete,1,[],https://github.com/dokan-dev/dokany/pull/473,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/473#issuecomment-285927239,"Fixes #270.
Two remaining questions before merging. The first one is more out of interest, the second one is more relevant to this PR.

@Liryna As you can see I put the check earlier than you suggested in #270, which is in line with what I read about file-deletion on Windows. This is a general question about Windows: What happens when the deletion fails during cleanup? Is it true that there is no possibility to signal user space that a deletion failed?
Is there the possibility of race conditions?

FileSetDisposition is called
the DeleteDirectory callback enumerates the direntries, finds none
a file is placed into the directory
DeleteDirectory returns with no-error (because it was empty), signals that the directory is going to be deleted","Hi @Rondom ,
Thank you for the PR ! this fix is very appreciate üëç !

About deletion fails during cleanup:
http://www.osronline.com/showThread.cfm?link=67122

It is not advisable that you fail IRP_MJ_CLEANUP. If you want to protect files from being deleted do it in IRP_MJ_SET_INFORMATION/FileDisposition.
If you want to protect files from DELETE_ON_CLOSE, do it in IRP_MJ_CREATE. You should be able to set the DeletePending to FALSE in IRP_MJ_CLEANUP provided it was set TRUE in IRP_MJ_SET_INFORMATION.
But you won't be able to protect files which are opened by DELETE_ON_CLOSE because you have no way to tell the underlying file system to unset its internal flag.
Thus it is better to avoid doing your processing in IRP_MJ_CLEANUP dispatch and I strongly advise not failing it.

So here for dokan, if cleanup userland fail, we will return success anyway. The file will disappear from the explorer and will appear again when explorer refresh the list of files.

This need to be verified:
When a folder is deleted, the CreateFIle access of the folder used will denied other request to happen (sharing flag).
When a file is created, Windows make a CreateFile on the Folder to see if it exists, and it will normally fail since no sharing has been set previously by the Delete CreateFile.

I didn't test right now but thats how I remember.
The issue with the FUSE wrapper I can see here is that shared_mode is not really used looks like. BUT normally the kernel dokan check the shared access and will return directly an error during CreateFile on the Folder. So FUSE is protected of this behavior.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,473,2017-03-12T04:07:03Z,2017-03-23T12:58:36Z,2017-03-23T12:58:36Z,MERGED,True,59,3,2,https://github.com/Rondom,FUSE: Check for non-empty directories on delete,1,[],https://github.com/dokan-dev/dokany/pull/473,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/473#issuecomment-285987870,"Fixes #270.
Two remaining questions before merging. The first one is more out of interest, the second one is more relevant to this PR.

@Liryna As you can see I put the check earlier than you suggested in #270, which is in line with what I read about file-deletion on Windows. This is a general question about Windows: What happens when the deletion fails during cleanup? Is it true that there is no possibility to signal user space that a deletion failed?
Is there the possibility of race conditions?

FileSetDisposition is called
the DeleteDirectory callback enumerates the direntries, finds none
a file is placed into the directory
DeleteDirectory returns with no-error (because it was empty), signals that the directory is going to be deleted","So, I did some test and there is indeed the possibility of races.
I tested the following two scenarios. I placed a Sleep(15000); right before the return in delete_directory

Fired rmdir with empty dir in one cmd-window, created file inside the directory from another cmd-window while rmdir was running => worked without a problem. rmdir returned success and the directory was not deleted.
* Fired rmdir with non-empty dir in one cmd-window, removed the file inside the directory from another cmd-window while rmdir was running => worked without a problem, rmdir said that the directory was not empty



So, I understand that this is a separate issue that has to do with a flag given during CreateFile, right? So does this affect deleting files as well, then?
Given that it is a separate issue, that exists ""anyway"", do you think it makes sense to merge this PR?
(I do not have any idea on how to fix this without doing some reading, because, as you know, I do not have much of a background on Windows-FS-semantics (nor do I feel like doing this in the near future. :-()",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,473,2017-03-12T04:07:03Z,2017-03-23T12:58:36Z,2017-03-23T12:58:36Z,MERGED,True,59,3,2,https://github.com/Rondom,FUSE: Check for non-empty directories on delete,1,[],https://github.com/dokan-dev/dokany/pull/473,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/473#issuecomment-287722265,"Fixes #270.
Two remaining questions before merging. The first one is more out of interest, the second one is more relevant to this PR.

@Liryna As you can see I put the check earlier than you suggested in #270, which is in line with what I read about file-deletion on Windows. This is a general question about Windows: What happens when the deletion fails during cleanup? Is it true that there is no possibility to signal user space that a deletion failed?
Is there the possibility of race conditions?

FileSetDisposition is called
the DeleteDirectory callback enumerates the direntries, finds none
a file is placed into the directory
DeleteDirectory returns with no-error (because it was empty), signals that the directory is going to be deleted","Hi @Rondom ,
Sorry for the delay, yes I think this PR has to anyway be merged.
During your test, did created the new file using the local path (C:\) or the mirrored path dokan (M:\) ?
I have to think about it and see if even this could happen in the mirror C.
At least, we should handle the case that it is not possible to create a folder in a folder when it is open to delete.
Can you create another issue for this ? ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,473,2017-03-12T04:07:03Z,2017-03-23T12:58:36Z,2017-03-23T12:58:36Z,MERGED,True,59,3,2,https://github.com/Rondom,FUSE: Check for non-empty directories on delete,1,[],https://github.com/dokan-dev/dokany/pull/473,https://github.com/Rondom,5,https://github.com/dokan-dev/dokany/pull/473#issuecomment-287797352,"Fixes #270.
Two remaining questions before merging. The first one is more out of interest, the second one is more relevant to this PR.

@Liryna As you can see I put the check earlier than you suggested in #270, which is in line with what I read about file-deletion on Windows. This is a general question about Windows: What happens when the deletion fails during cleanup? Is it true that there is no possibility to signal user space that a deletion failed?
Is there the possibility of race conditions?

FileSetDisposition is called
the DeleteDirectory callback enumerates the direntries, finds none
a file is placed into the directory
DeleteDirectory returns with no-error (because it was empty), signals that the directory is going to be deleted","Of course I am talking only about the mirror filesystem M:.
I think for testing it with the C-Mirror, you could add a Sleep(15000); in the C-Mirror here.
I am not familiar with Windows-FS-semantics to know whether this is by design. My gut feeling is that it should not be possible and some flag passed to ``CreateFile` would grant exclusive access to the process that wants to delete the directory, but I am not sure...
All in all this fixes PR one issue #270. The race-issue (if it is an issue) existed even before the fix. It becomes a bit more likely with the fix, but compared to the unfixed situation (always returns sucess, even if directory is not empty) it is an improvement.
What can happen after applying this PR is that

A race occurs, the delete returns success, but the directory is not deleted, because a new file is put into it (Exactly the same behaviour as before).
A race occurs, the delete fails (dir not empty). In the meanwhile the dir becomes empty. The dir is not deleted. This behavious is probably a non-issue or at least not a big issue.
No race occurs, either sucess or dir-not-empty is returned and the directory is either deleted properly (sucess) or not (dir-not-empty). This is the desired behaviour.

So, after applying this PR, instead of showing the wrong behaviour in 100% of the cases, the wrong behaviour can still occur in X% of the cases, i.e. when a race occurrs.
Please tell me, if you agree/disagree.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,473,2017-03-12T04:07:03Z,2017-03-23T12:58:36Z,2017-03-23T12:58:36Z,MERGED,True,59,3,2,https://github.com/Rondom,FUSE: Check for non-empty directories on delete,1,[],https://github.com/dokan-dev/dokany/pull/473,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/473#issuecomment-288710505,"Fixes #270.
Two remaining questions before merging. The first one is more out of interest, the second one is more relevant to this PR.

@Liryna As you can see I put the check earlier than you suggested in #270, which is in line with what I read about file-deletion on Windows. This is a general question about Windows: What happens when the deletion fails during cleanup? Is it true that there is no possibility to signal user space that a deletion failed?
Is there the possibility of race conditions?

FileSetDisposition is called
the DeleteDirectory callback enumerates the direntries, finds none
a file is placed into the directory
DeleteDirectory returns with no-error (because it was empty), signals that the directory is going to be deleted","Hi @Rondom ,
I agree ! With what you did the situation is fixed even if race condition could happen (very rare).
I will do the test with the mirror as you proposed with the sleep and continue the discussion on #478
Thanks a lot again for your contribution ‚ù§Ô∏è !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,475,2017-03-12T14:33:03Z,2017-03-12T14:43:28Z,2017-03-12T14:43:28Z,MERGED,True,41,10,3,https://github.com/marinkobabic,Ensure fuse context is set during walk directory,1,[],https://github.com/dokan-dev/dokany/pull/475,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/475,When fuse bindings calls the filler which is the dokans walk_directory method. The walk_directory is called on different thread. We need to ensure that even then the fuse context is set. This fixes one part of the issue #465. The other changes are inside of fuse-bindings required.,When fuse bindings calls the filler which is the dokans walk_directory method. The walk_directory is called on different thread. We need to ensure that even then the fuse context is set. This fixes one part of the issue #465. The other changes are inside of fuse-bindings required.,True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,475,2017-03-12T14:33:03Z,2017-03-12T14:43:28Z,2017-03-12T14:43:28Z,MERGED,True,41,10,3,https://github.com/marinkobabic,Ensure fuse context is set during walk directory,1,[],https://github.com/dokan-dev/dokany/pull/475,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/475#issuecomment-285949058,When fuse bindings calls the filler which is the dokans walk_directory method. The walk_directory is called on different thread. We need to ensure that even then the fuse context is set. This fixes one part of the issue #465. The other changes are inside of fuse-bindings required.,Thank you @marinkobabic for the changes !!!! ‚ù§Ô∏è,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,481,2017-03-21T01:29:09Z,2017-03-23T14:13:05Z,2017-03-23T14:13:05Z,CLOSED,False,1,0,1,https://github.com/baixiangcpp,may cause memory leaks,1,[],https://github.com/dokan-dev/dokany/pull/481,https://github.com/baixiangcpp,1,https://github.com/dokan-dev/dokany/pull/481,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,481,2017-03-21T01:29:09Z,2017-03-23T14:13:05Z,2017-03-23T14:13:05Z,CLOSED,False,1,0,1,https://github.com/baixiangcpp,may cause memory leaks,1,[],https://github.com/dokan-dev/dokany/pull/481,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/481#issuecomment-288731626,,"Hi @baixiangcpp ,
This is not a leak. The buffer is cleaned in ReleaseDokanOpenInfo 
  
    
      dokany/dokan/dokan.c
    
    
         Line 598
      in
      1d8aa51
    
  
  
    

        
          
           ClearFindData(openInfo->DirListHead); 
        
    
  


BUT during time that I have review your PR, if found that indeed the DirListHead is not cleaned all case since the last PR that changed DispatchDirectoryInformation
See my change: a3910cc
Thanks for your PR üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,482,2017-03-21T09:11:49Z,2017-03-21T10:24:46Z,2017-03-21T10:24:46Z,MERGED,True,12,4,1,https://github.com/marinkobabic,flush the targetObject as first and then the source file,1,[],https://github.com/dokan-dev/dokany/pull/482,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/482,Before rename the targetObject should be flushed as well,Before rename the targetObject should be flushed as well,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,482,2017-03-21T09:11:49Z,2017-03-21T10:24:46Z,2017-03-21T10:24:46Z,MERGED,True,12,4,1,https://github.com/marinkobabic,flush the targetObject as first and then the source file,1,[],https://github.com/dokan-dev/dokany/pull/482,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/482#issuecomment-288035598,Before rename the targetObject should be flushed as well,Thanks a lot @marinkobabic üëç,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,484,2017-03-25T06:23:59Z,2017-08-26T09:40:27Z,2017-08-26T09:40:27Z,CLOSED,False,12,0,3,https://github.com/baixiangcpp,add DokanNotifyReportChange when  DokanCompleteWrite,3,[],https://github.com/dokan-dev/dokany/pull/484,https://github.com/baixiangcpp,1,https://github.com/dokan-dev/dokany/pull/484,ReadDirectoryChanges cannot work without this,ReadDirectoryChanges cannot work without this,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,484,2017-03-25T06:23:59Z,2017-08-26T09:40:27Z,2017-08-26T09:40:27Z,CLOSED,False,12,0,3,https://github.com/baixiangcpp,add DokanNotifyReportChange when  DokanCompleteWrite,3,[],https://github.com/dokan-dev/dokany/pull/484,https://github.com/baixiangcpp,2,https://github.com/dokan-dev/dokany/pull/484#issuecomment-289192646,ReadDirectoryChanges cannot work without this,"when notepad++ write something to a file, ReadDirectoryChanges  cannot  monit  wirte event.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,484,2017-03-25T06:23:59Z,2017-08-26T09:40:27Z,2017-08-26T09:40:27Z,CLOSED,False,12,0,3,https://github.com/baixiangcpp,add DokanNotifyReportChange when  DokanCompleteWrite,3,[],https://github.com/dokan-dev/dokany/pull/484,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/484#issuecomment-290065181,ReadDirectoryChanges cannot work without this,"Hi @baixiangcpp ,
Thank you for the PR !
I understand the need to add FILE_NOTIFY_CHANGE_LAST_WRITE that is missing.
But it should not be in write as you proposer but more in cleanup since the notification is here to say that last write happened. Probably we need to add a flag to ccb during write and check it during cleanup.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,484,2017-03-25T06:23:59Z,2017-08-26T09:40:27Z,2017-08-26T09:40:27Z,CLOSED,False,12,0,3,https://github.com/baixiangcpp,add DokanNotifyReportChange when  DokanCompleteWrite,3,[],https://github.com/dokan-dev/dokany/pull/484,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/484#issuecomment-325108458,ReadDirectoryChanges cannot work without this,"Hi @baixiangcpp
I have include your changes in db9453b
but I failed the commit author...it should be you sorry üò¢
Thanks again for your contribution !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,485,2017-03-29T16:37:08Z,,2022-03-06T15:13:08Z,OPEN,False,1,0,1,https://github.com/Rondom,CI: Set AppVeyor build version,1,[],https://github.com/dokan-dev/dokany/pull/485,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/485,"This sets the AppVeyor build version according to the version we get from the repository, i.e. 1.0.2-590 becomes ``1.0.2.1590` (like the installer and DLL-versions).","This sets the AppVeyor build version according to the version we get from the repository, i.e. 1.0.2-590 becomes ``1.0.2.1590` (like the installer and DLL-versions).",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,485,2017-03-29T16:37:08Z,,2022-03-06T15:13:08Z,OPEN,False,1,0,1,https://github.com/Rondom,CI: Set AppVeyor build version,1,[],https://github.com/dokan-dev/dokany/pull/485,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/485#issuecomment-290153696,"This sets the AppVeyor build version according to the version we get from the repository, i.e. 1.0.2-590 becomes ``1.0.2.1590` (like the installer and DLL-versions).","This produces broken links like
https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.2-163 while the build is running. Only when the build is finished the link is updated on the GitHub side to for example
https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.2.1163
So, don't merge this. :-(
Alternative approaches

Keep version in appveyor.yml in sync with ""our version"" (i.e. format). In case of mismatch update (GitHub links will be broken, during build)
Keep version in appveyor.yml in sync with ""our version"" (i.e. format). In case of mismatch warn
Keep version in appveyor.yml in sync with ""our version"" (i.e. format). In case of mismatch fail build
Leave everything as it is",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,485,2017-03-29T16:37:08Z,,2022-03-06T15:13:08Z,OPEN,False,1,0,1,https://github.com/Rondom,CI: Set AppVeyor build version,1,[],https://github.com/dokan-dev/dokany/pull/485,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/485#issuecomment-290200365,"This sets the AppVeyor build version according to the version we get from the repository, i.e. 1.0.2-590 becomes ``1.0.2.1590` (like the installer and DLL-versions).","Hi @Rondom ,
Github broken link during the build is alright I think. I personally always wait at the end if everything passed or otherwise look in the history current running build.
But maybe we can ask appveyor why Update-AppveyorBuild does not directly update in live the link ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,485,2017-03-29T16:37:08Z,,2022-03-06T15:13:08Z,OPEN,False,1,0,1,https://github.com/Rondom,CI: Set AppVeyor build version,1,[],https://github.com/dokan-dev/dokany/pull/485,https://github.com/Rondom,4,https://github.com/dokan-dev/dokany/pull/485#issuecomment-321959387,"This sets the AppVeyor build version according to the version we get from the repository, i.e. 1.0.2-590 becomes ``1.0.2.1590` (like the installer and DLL-versions).","But maybe we can ask appveyor why Update-AppveyorBuild does not directly update in live the link ?

appveyor/ci#1074",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,485,2017-03-29T16:37:08Z,,2022-03-06T15:13:08Z,OPEN,False,1,0,1,https://github.com/Rondom,CI: Set AppVeyor build version,1,[],https://github.com/dokan-dev/dokany/pull/485,https://github.com/Rondom,5,https://github.com/dokan-dev/dokany/pull/485#issuecomment-362892984,"This sets the AppVeyor build version according to the version we get from the repository, i.e. 1.0.2-590 becomes ``1.0.2.1590` (like the installer and DLL-versions).","@timofonic Not sure what your intention is in inquiring about this issue, given that it does not really affect users in any way. :-)
The long story is that I started developing a cleaner approach for the version-handling, but did not finish it. https://github.com/Rondom/dokany/tree/no_hardcode_version
Do you want to help?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,485,2017-03-29T16:37:08Z,,2022-03-06T15:13:08Z,OPEN,False,1,0,1,https://github.com/Rondom,CI: Set AppVeyor build version,1,[],https://github.com/dokan-dev/dokany/pull/485,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/485#issuecomment-530900495,"This sets the AppVeyor build version according to the version we get from the repository, i.e. 1.0.2-590 becomes ``1.0.2.1590` (like the installer and DLL-versions).","Hi @Rondom
I just saw you force pushed at the beginning of the year, what the state of this PR ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,489,2017-04-03T05:12:40Z,2017-04-06T06:56:50Z,2017-04-06T06:56:50Z,CLOSED,False,8,0,1,https://github.com/yin19941005,MirrorCreateFile - Return the correct error code when trying to open a directory as file.,1,[],https://github.com/dokan-dev/dokany/pull/489,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/489,"Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 .","Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,489,2017-04-03T05:12:40Z,2017-04-06T06:56:50Z,2017-04-06T06:56:50Z,CLOSED,False,8,0,1,https://github.com/yin19941005,MirrorCreateFile - Return the correct error code when trying to open a directory as file.,1,[],https://github.com/dokan-dev/dokany/pull/489,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/489#issuecomment-291116656,"Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 .","Hi @yin19941005 ,
Thank you for the fix ! This seems to be the correct way to do it üëç
Just to be sure about the condition, does CreateOptions has the flag FILE_NON_DIRECTORY_FILE ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,489,2017-04-03T05:12:40Z,2017-04-06T06:56:50Z,2017-04-06T06:56:50Z,CLOSED,False,8,0,1,https://github.com/yin19941005,MirrorCreateFile - Return the correct error code when trying to open a directory as file.,1,[],https://github.com/dokan-dev/dokany/pull/489,https://github.com/yin19941005,3,https://github.com/dokan-dev/dokany/pull/489#issuecomment-291733061,"Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 .","Hi @Liryna ,
Yes, the CreateOption has the flag FILE_NON_DIRECTORY_FILE. I remember that there was a fix to preventing mirror opening a directory as a file (#370) . So I think this is similar with that bug and apply similar fix to it.
FILE_NON_DIRECTORY_FILE is 0x00000040 when the CreateOption get 0x60 flag :",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,489,2017-04-03T05:12:40Z,2017-04-06T06:56:50Z,2017-04-06T06:56:50Z,CLOSED,False,8,0,1,https://github.com/yin19941005,MirrorCreateFile - Return the correct error code when trying to open a directory as file.,1,[],https://github.com/dokan-dev/dokany/pull/489,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/489#issuecomment-292074906,"Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 .","Thank you @yin19941005 for the debug !
So what do you think about using directly FILE_NON_DIRECTORY_FILE instead of !(CreateOptions & FILE_DIRECTORY_FILE) ?
I am afraid with your current test that in some case even if FILE_DIRECTORY_FILE is not set, kernel would probably expect that it works for directory (not in mind a case but better to use FILE_NON_DIRECTORY_FILE directly).",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,489,2017-04-03T05:12:40Z,2017-04-06T06:56:50Z,2017-04-06T06:56:50Z,CLOSED,False,8,0,1,https://github.com/yin19941005,MirrorCreateFile - Return the correct error code when trying to open a directory as file.,1,[],https://github.com/dokan-dev/dokany/pull/489,https://github.com/yin19941005,5,https://github.com/dokan-dev/dokany/pull/489#issuecomment-292084837,"Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 .","Hi @Liryna ,
It's a good idea to use FILE_NON_DIRECTORY_FILE directly instead of !(CreateOptions & FILE_DIRECTORY_FILE)! We could not come up with any cases in mind but sounds more reliable if we are going to use FILE_NON_DIRECTORY_FILE this flag.
I will make a new pull request by using CreateOptions & FILE_NON_DIRECTORY_FILE this condition.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,492,2017-04-06T07:05:59Z,2017-08-27T13:04:11Z,2017-08-27T13:04:11Z,CLOSED,False,8,0,1,https://github.com/yin19941005,MirrorCreateFile - Return the correct error code when trying to open a directory as a file,1,[],https://github.com/dokan-dev/dokany/pull/492,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/492,"Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 . Using FILE_NON_DIRECTORY_FILE instead of !FILE_DIRECTORY_FILE on #489","Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 . Using FILE_NON_DIRECTORY_FILE instead of !FILE_DIRECTORY_FILE on #489",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,492,2017-04-06T07:05:59Z,2017-08-27T13:04:11Z,2017-08-27T13:04:11Z,CLOSED,False,8,0,1,https://github.com/yin19941005,MirrorCreateFile - Return the correct error code when trying to open a directory as a file,1,[],https://github.com/dokan-dev/dokany/pull/492,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/492#issuecomment-292102337,"Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 . Using FILE_NON_DIRECTORY_FILE instead of !FILE_DIRECTORY_FILE on #489","@yin19941005 looks like this is breaking some of the test üò¢
https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-166/job/vwutg9n35b8dtsdv#L1124",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,492,2017-04-06T07:05:59Z,2017-08-27T13:04:11Z,2017-08-27T13:04:11Z,CLOSED,False,8,0,1,https://github.com/yin19941005,MirrorCreateFile - Return the correct error code when trying to open a directory as a file,1,[],https://github.com/dokan-dev/dokany/pull/492,https://github.com/yin19941005,3,https://github.com/dokan-dev/dokany/pull/492#issuecomment-292116913,"Returning the correct error code when trying to open a directory as file. The STATUS_FILE_IS_A_DIRECTORY NTSTATUS will be returned.
This should fix #488 . Using FILE_NON_DIRECTORY_FILE instead of !FILE_DIRECTORY_FILE on #489","I checked the test result for using !FILE_DIRECTORY_FILE and it also breaking some of the test.
I think maybe because we are returning not appropriate NTSTATUS. Maybe STATUS_OBJECT_PATH_INVALID should be used. I am not sure for the correct NTSTATUS.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,493,2017-04-06T11:48:40Z,2017-04-06T18:13:41Z,2017-04-09T08:53:45Z,MERGED,True,12,3,2,https://github.com/bailey27,Streams flag,2,[],https://github.com/dokan-dev/dokany/pull/493,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/493,"For issue #490: FILE_NAMED_STREAMS flag
set FILE_NAMED_STREAMS in FileSystemFlags  MirrorGetVolumeInformation() in mirror.c.
Do not append slash to path in front of filename if filename is a stream (DokanDispatchCreate() in create.c).
Also, do not prepend path () in front of filename if file is really an alternate data stream of the root directory.","For issue #490: FILE_NAMED_STREAMS flag
set FILE_NAMED_STREAMS in FileSystemFlags  MirrorGetVolumeInformation() in mirror.c.
Do not append slash to path in front of filename if filename is a stream (DokanDispatchCreate() in create.c).
Also, do not prepend path () in front of filename if file is really an alternate data stream of the root directory.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,493,2017-04-06T11:48:40Z,2017-04-06T18:13:41Z,2017-04-09T08:53:45Z,MERGED,True,12,3,2,https://github.com/bailey27,Streams flag,2,[],https://github.com/dokan-dev/dokany/pull/493,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/493#issuecomment-292261135,"For issue #490: FILE_NAMED_STREAMS flag
set FILE_NAMED_STREAMS in FileSystemFlags  MirrorGetVolumeInformation() in mirror.c.
Do not append slash to path in front of filename if filename is a stream (DokanDispatchCreate() in create.c).
Also, do not prepend path () in front of filename if file is really an alternate data stream of the root directory.",Thanks a lot @bailey27 again for your work ‚ù§Ô∏è always appreciate !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,494,2017-04-09T08:54:47Z,2017-04-09T10:48:02Z,2017-04-15T19:50:56Z,MERGED,True,43,7,1,https://github.com/bailey27,Query underlying fs for filesystem flags and AND them with mirror def‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/494,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/494,"‚Ä¶ault flags.  Get filesystem name and maximum component length from underlying fs.  Change default maximum component length from 256 to 255.
for issue #491 MirrorGetVolumeInformation","‚Ä¶ault flags.  Get filesystem name and maximum component length from underlying fs.  Change default maximum component length from 256 to 255.
for issue #491 MirrorGetVolumeInformation",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,498,2017-04-23T21:45:14Z,2017-04-24T05:49:03Z,2017-04-24T05:49:03Z,MERGED,True,9,11,2,https://github.com/Rondom,FUSE: Fix GCC-warnings,2,[],https://github.com/dokan-dev/dokany/pull/498,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/498,Recent changes introduced some warnings during compilation. Fix them.,Recent changes introduced some warnings during compilation. Fix them.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,498,2017-04-23T21:45:14Z,2017-04-24T05:49:03Z,2017-04-24T05:49:03Z,MERGED,True,9,11,2,https://github.com/Rondom,FUSE: Fix GCC-warnings,2,[],https://github.com/dokan-dev/dokany/pull/498,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/498#issuecomment-296530063,Recent changes introduced some warnings during compilation. Fix them.,"Hi @Rondom ,
Thank you for the warnings fix üëç !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,505,2017-05-05T20:39:20Z,2017-05-06T05:22:58Z,2017-05-06T10:39:14Z,MERGED,True,5,1,2,https://github.com/bailey27,Issue 502 503,2,[],https://github.com/dokan-dev/dokany/pull/505,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/505,"Fix for issue 502 in driver
Fix for issue 503 in mirror","Fix for issue 502 in driver
Fix for issue 503 in mirror",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,507,2017-05-11T09:33:05Z,2017-05-12T02:08:46Z,2017-05-12T07:53:49Z,CLOSED,False,14,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/507,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/507,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly.","For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly.",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,507,2017-05-11T09:33:05Z,2017-05-12T02:08:46Z,2017-05-12T07:53:49Z,CLOSED,False,14,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/507,https://github.com/sefai,2,https://github.com/dokan-dev/dokany/pull/507#issuecomment-300828910,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly.","Hello @yin19941005,
Thank you for this great effort. I don't want to look smart but there may be a more clean implementation?
if (!GetUserObjectSecurity(handle, SecurityInformation, SecurityDescriptor,  BufferLength, LengthNeeded)) {
   int error = GetLastError();
   if (error == ERROR_INSUFFICIENT_BUFFER) {
      DbgPrint(L""  GetUserObjectSecurity error: ERROR_INSUFFICIENT_BUFFER\n"");
      CloseHandle(handle);
      return STATUS_BUFFER_OVERFLOW;
   } else {
      DbgPrint(L""  GetUserObjectSecurity error: %d\n"", error);
      CloseHandle(handle);
      return DokanNtStatusFromWin32(error);
   }
 }

DWORD securityDescriptorLength = GetSecurityDescriptorLength(SecurityDescriptor);
DbgPrint(L""  isGetUserObjectSecuritySuccessful is true,  *LengthNeeded = securityDescriptorLength \n"");
*LengthNeeded = securityDescriptorLength;

CloseHandle(handle);

What do you think?",True,"{'THUMBS_UP': ['https://github.com/Liryna', 'https://github.com/yin19941005']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,507,2017-05-11T09:33:05Z,2017-05-12T02:08:46Z,2017-05-12T07:53:49Z,CLOSED,False,14,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/507,https://github.com/yin19941005,3,https://github.com/dokan-dev/dokany/pull/507#issuecomment-300960723,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly.","Hi @sefai ,
Thank you for your opinion! Yes, I think your implementation looks more clean! I didn't study the if-else for ERROR_INSUFFICIENT_BUFFER carefully before and I thought we need a Boolean but actually not.
I would recreate another pull request for this implementation.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,508,2017-05-11T09:39:45Z,2017-05-11T20:08:09Z,2017-10-12T05:39:43Z,MERGED,True,2,2,1,https://github.com/yin19941005,Fix typo in recent commit,1,[],https://github.com/dokan-dev/dokany/pull/508,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/508,Fix typo in recent commit.,Fix typo in recent commit.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,508,2017-05-11T09:39:45Z,2017-05-11T20:08:09Z,2017-10-12T05:39:43Z,MERGED,True,2,2,1,https://github.com/yin19941005,Fix typo in recent commit,1,[],https://github.com/dokan-dev/dokany/pull/508,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/508#issuecomment-300902708,Fix typo in recent commit.,"Hi @yin19941005 ,
Thank for the fix !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,509,2017-05-12T02:08:35Z,2017-05-12T07:52:27Z,2017-05-12T07:53:41Z,CLOSED,False,6,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/509,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/509,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly. Re-implement #507  to look more clean.","For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly. Re-implement #507  to look more clean.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,509,2017-05-12T02:08:35Z,2017-05-12T07:52:27Z,2017-05-12T07:53:41Z,CLOSED,False,6,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/509,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/509#issuecomment-300985106,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly. Re-implement #507  to look more clean.","Hi @yin19941005 ,
Thank you for the PR.
Can you just change the debug msg that still print the boolean variable ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,509,2017-05-12T02:08:35Z,2017-05-12T07:52:27Z,2017-05-12T07:53:41Z,CLOSED,False,6,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/509,https://github.com/yin19941005,3,https://github.com/dokan-dev/dokany/pull/509#issuecomment-300991711,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly. Re-implement #507  to look more clean.","Hi @Liryna ,
Do you mean I should change the debug message isGetUserObjectSecuritySuccessful is true to GetUserObjectSecurity return true or something similar with that? Because in this implementation I haven't add Boolean variable. Below is the code :
if (!GetUserObjectSecurity(handle, SecurityInformation, SecurityDescriptor,
                              BufferLength, LengthNeeded)) {
     int error = GetLastError();
     if (error == ERROR_INSUFFICIENT_BUFFER) {
       DbgPrint(L""  GetUserObjectSecurity error: ERROR_INSUFFICIENT_BUFFER\n"");
       CloseHandle(handle);
       return STATUS_BUFFER_OVERFLOW;
     } else {
       DbgPrint(L""  GetUserObjectSecurity error: %d\n"", error);
       CloseHandle(handle);
        return DokanNtStatusFromWin32(error);
      }
    }

As @sefai remind, if GetUserObjectSecurity return false and error == ERROR_INSUFFICIENT_BUFFER, will return STATUS_BUFFER_OVERFLOW. If GetUserObjectSecurity return false and error != ERROR_INSUFFICIENT_BUFFER, will return DokanNtStatusFromWin32(error).
That means all the cases with GetUserObjectSecurity return false will be returned before the calling the GetSecurityDescriptorLength function. In other words, it is not meaningful to add a Boolean variable to it.
I agree with @sefai so I removed the Boolean variable.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,509,2017-05-12T02:08:35Z,2017-05-12T07:52:27Z,2017-05-12T07:53:41Z,CLOSED,False,6,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/509,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/509#issuecomment-300992023,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly. Re-implement #507  to look more clean.",@yin19941005 I totally agree with this üëç I was meaning the debug message was still isGetUserObjectSecuritySuccessful is true after your changes,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,509,2017-05-12T02:08:35Z,2017-05-12T07:52:27Z,2017-05-12T07:53:41Z,CLOSED,False,6,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/509,https://github.com/yin19941005,5,https://github.com/dokan-dev/dokany/pull/509#issuecomment-301009171,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly. Re-implement #507  to look more clean.","OK, I would change the debug message and open up another pull request. Sorry for didn't change the debug message correctly.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,510,2017-05-12T07:52:36Z,2017-05-12T08:24:04Z,2017-05-12T08:24:46Z,MERGED,True,6,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/510,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/510,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly. Re-implement #507, #509 to look more clean.","For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly. Re-implement #507, #509 to look more clean.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,510,2017-05-12T07:52:36Z,2017-05-12T08:24:04Z,2017-05-12T08:24:46Z,MERGED,True,6,0,1,https://github.com/yin19941005,Ensure the Security Descriptor length is set in mirror,1,[],https://github.com/dokan-dev/dokany/pull/510,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/510#issuecomment-301015751,"For some cases, the GetUserObjectSecurity function will return success but not set the output parameter LengthNeeded. This fix ensure the length is well set.
This fix would fix part of the issue on #476 and save the file correctly. Re-implement #507, #509 to look more clean.",Thank @yin19941005 for the quick changes!,True,{'THUMBS_UP': ['https://github.com/yin19941005']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,522,2017-05-30T13:42:32Z,2017-05-30T14:16:23Z,2017-05-30T14:16:23Z,CLOSED,False,225,30,10,https://github.com/marinkobabic,Fix current session issues,2,[],https://github.com/dokan-dev/dokany/pull/522,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/522,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312","The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,523,2017-05-30T20:37:00Z,2017-10-01T10:25:00Z,2017-10-01T10:26:12Z,MERGED,True,225,30,10,https://github.com/marinkobabic,Fix current session issues,1,[],https://github.com/dokan-dev/dokany/pull/523,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/523,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312","The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,523,2017-05-30T20:37:00Z,2017-10-01T10:25:00Z,2017-10-01T10:26:12Z,MERGED,True,225,30,10,https://github.com/marinkobabic,Fix current session issues,1,[],https://github.com/dokan-dev/dokany/pull/523,https://github.com/marinkobabic,2,https://github.com/dokan-dev/dokany/pull/523#issuecomment-305031900,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312","Yes. I have created a new one.

Am 30.05.2017 23:10 schrieb ""Andreas Gnau"" <notifications@github.com>:
‚Ä¶
 Did you intentionally close this one?

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#523 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ADHSOGrckl9fawzytj5anrqs8e_eEQJHks5r_IWlgaJpZM4Nq0Re>
 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,523,2017-05-30T20:37:00Z,2017-10-01T10:25:00Z,2017-10-01T10:26:12Z,MERGED,True,225,30,10,https://github.com/marinkobabic,Fix current session issues,1,[],https://github.com/dokan-dev/dokany/pull/523,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/523#issuecomment-306066736,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312","Hi @marinkobabic ,
Sorry for the delay, I took a look at the PR, this seems to be good !
I will just take a little more time to test to the issue related to it and see if it can also be closed.
Thank again for your work ! ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,523,2017-05-30T20:37:00Z,2017-10-01T10:25:00Z,2017-10-01T10:26:12Z,MERGED,True,225,30,10,https://github.com/marinkobabic,Fix current session issues,1,[],https://github.com/dokan-dev/dokany/pull/523,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/523#issuecomment-306168162,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312","Hi @marinkobabic ,
I tried to reproduce all the issues:
#517 : I could not test this case exactly but it should work üëç
#332 : Yes it works! the drive letter can be reused ! The only strange behavior is that the device is still in the explorer and can be access but empty after killing the mirror.
#312 : User A can dismount user B drive. Maybe here we should detect in the kernel if the request comes from an admin or simple user and give only rights to admin to dismount all devices.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,523,2017-05-30T20:37:00Z,2017-10-01T10:25:00Z,2017-10-01T10:26:12Z,MERGED,True,225,30,10,https://github.com/marinkobabic,Fix current session issues,1,[],https://github.com/dokan-dev/dokany/pull/523,https://github.com/marinkobabic,5,https://github.com/dokan-dev/dokany/pull/523#issuecomment-306182075,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312","User A should not be able to unmount the drive of the user B if both use
the current session option. The will have different windows sessions.

Am 05.06.2017 13:42 schrieb ""Liryna"" <notifications@github.com>:
‚Ä¶
 Hi @marinkobabic <https://github.com/marinkobabic> ,

 I tried to reproduce all the issues:
 #517 <#517> : I could not test
 this case exactly but it should work üëç
 #332 <#332> : Yes it works! the
 drive letter can be reused ! The only strange behavior is that the device
 is still in the explorer and can be access but empty after killing the
 mirror.
 #312 <#312> : User A can
 dismount user B drive. Maybe here we should detect in the kernel if the
 request comes from an admin or simple user and give only rights to admin to
 dismount all devices.

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#523 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ADHSOEKGOpnRC65FA0WcbO_pY76S_E_Cks5sA-mjgaJpZM4Nq0Re>
 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,523,2017-05-30T20:37:00Z,2017-10-01T10:25:00Z,2017-10-01T10:26:12Z,MERGED,True,225,30,10,https://github.com/marinkobabic,Fix current session issues,1,[],https://github.com/dokan-dev/dokany/pull/523,https://github.com/shashiu,6,https://github.com/dokan-dev/dokany/pull/523#issuecomment-308318854,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312",Is there going to be a new build with this fix ?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,523,2017-05-30T20:37:00Z,2017-10-01T10:25:00Z,2017-10-01T10:26:12Z,MERGED,True,225,30,10,https://github.com/marinkobabic,Fix current session issues,1,[],https://github.com/dokan-dev/dokany/pull/523,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/523#issuecomment-308319454,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312","@shashiu There is every time a snapshot build made by the CI selfsigned
https://ci.appveyor.com/api/buildjobs/ss79dhy6ah90bfqj/artifacts/DokanSetup-1.0.3.1193.exe
https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot
It would be nice if you could see if this fix your issue before making a fix release official (that take some times).",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,523,2017-05-30T20:37:00Z,2017-10-01T10:25:00Z,2017-10-01T10:26:12Z,MERGED,True,225,30,10,https://github.com/marinkobabic,Fix current session issues,1,[],https://github.com/dokan-dev/dokany/pull/523,https://github.com/shashiu,8,https://github.com/dokan-dev/dokany/pull/523#issuecomment-308622710,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312","@Liryna<mailto:notifications@github.com>, I checked out the build and it seems to fix the issue with remote desktop sessions, that I was seeing before. I'll keep testing it and let you know if I find any new issues.


Thanks.
‚Ä¶
________________________________
From: Liryna <notifications@github.com>
Sent: Wednesday, June 14, 2017 12:55:00 AM
To: dokan-dev/dokany
Cc: Shashi Uli; Mention
Subject: Re: [dokan-dev/dokany] Fix current session issues (#523)


@shashiu<https://github.com/shashiu> There is every time a snapshot build made by the CI selfsigned
https://ci.appveyor.com/api/buildjobs/ss79dhy6ah90bfqj/artifacts/DokanSetup-1.0.3.1193.exe

https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot

It would be nice if you could see if this fix your issue before making a fix release official (that take some times).

‚Äî
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub<#523 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AFSduzTlsviow3a1028wlP2ASDfCHEvrks5sD2ekgaJpZM4Nq0Re>.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,523,2017-05-30T20:37:00Z,2017-10-01T10:25:00Z,2017-10-01T10:26:12Z,MERGED,True,225,30,10,https://github.com/marinkobabic,Fix current session issues,1,[],https://github.com/dokan-dev/dokany/pull/523,https://github.com/Liryna,9,https://github.com/dokan-dev/dokany/pull/523#issuecomment-333367232,"The following issues should be fixed
#517
#332
and the following one may also work properly for session drives
#312","Hi @marinkobabic ,
Sorry for the long delay üò¢ I merged this only now.
Thanks a lot again for your work !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,529,2017-06-12T08:43:41Z,2017-08-26T08:51:31Z,2017-08-26T08:51:31Z,CLOSED,False,65,13,1,https://github.com/sefai,Fix for CreateFileMapping ,3,[],https://github.com/dokan-dev/dokany/pull/529,https://github.com/sefai,1,https://github.com/dokan-dev/dokany/pull/529,Save file size to later know if MmCanFileBeTruncated call is needed or not.,Save file size to later know if MmCanFileBeTruncated call is needed or not.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,529,2017-06-12T08:43:41Z,2017-08-26T08:51:31Z,2017-08-26T08:51:31Z,CLOSED,False,65,13,1,https://github.com/sefai,Fix for CreateFileMapping ,3,[],https://github.com/dokan-dev/dokany/pull/529,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/529#issuecomment-307752168,Save file size to later know if MmCanFileBeTruncated call is needed or not.,"Can we run runkarr on this PR to see if it improves things compared to the current implementation?
See #519 for a link to a branch that has an installation script for the MS filesystem testing utilities.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,529,2017-06-12T08:43:41Z,2017-08-26T08:51:31Z,2017-08-26T08:51:31Z,CLOSED,False,65,13,1,https://github.com/sefai,Fix for CreateFileMapping ,3,[],https://github.com/dokan-dev/dokany/pull/529,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/529#issuecomment-307759492,Save file size to later know if MmCanFileBeTruncated call is needed or not.,https://github.com/Rondom/dokany/tree/ifstest/scripts,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,529,2017-06-12T08:43:41Z,2017-08-26T08:51:31Z,2017-08-26T08:51:31Z,CLOSED,False,65,13,1,https://github.com/sefai,Fix for CreateFileMapping ,3,[],https://github.com/dokan-dev/dokany/pull/529,https://github.com/sefai,4,https://github.com/dokan-dev/dokany/pull/529#issuecomment-307767658,Save file size to later know if MmCanFileBeTruncated call is needed or not.,"Hello @Rondom
Do you want me to install MS filesystem testing utilities locally and execute the tests? Isn't it possible to run that IFSTest on Appveyor?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,529,2017-06-12T08:43:41Z,2017-08-26T08:51:31Z,2017-08-26T08:51:31Z,CLOSED,False,65,13,1,https://github.com/sefai,Fix for CreateFileMapping ,3,[],https://github.com/dokan-dev/dokany/pull/529,https://github.com/Rondom,5,https://github.com/dokan-dev/dokany/pull/529#issuecomment-308026736,Save file size to later know if MmCanFileBeTruncated call is needed or not.,"I will do it at a later point. I only thought that a this can be helpful that everything is all right, but I just noticed that it requires additional work. I will add it to AppVeyor at a later point.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,529,2017-06-12T08:43:41Z,2017-08-26T08:51:31Z,2017-08-26T08:51:31Z,CLOSED,False,65,13,1,https://github.com/sefai,Fix for CreateFileMapping ,3,[],https://github.com/dokan-dev/dokany/pull/529,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/529#issuecomment-308408142,Save file size to later know if MmCanFileBeTruncated call is needed or not.,"Hi @sefai ,
Thanks a lot for the PR !
All seems to be correct but could you just add some fcb lock when accessing the FileSize ?
QuadPart being a LARGE_INTEGER, the read/write are not threadsafe.
This should not create deadlock but worst to retry with it üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,529,2017-06-12T08:43:41Z,2017-08-26T08:51:31Z,2017-08-26T08:51:31Z,CLOSED,False,65,13,1,https://github.com/sefai,Fix for CreateFileMapping ,3,[],https://github.com/dokan-dev/dokany/pull/529,https://github.com/sefai,7,https://github.com/dokan-dev/dokany/pull/529#issuecomment-311885755,Save file size to later know if MmCanFileBeTruncated call is needed or not.,"Hello @Liryna
I have tried locking FCB when accessing the FileSize, but unfortunately it creates a deadlock.
Also, my PR is not correct, the if clause should be negated
if (!(irp->Flags & IRP_PAGING_IO)) 
Can you do that, or should I create a new PR?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,529,2017-06-12T08:43:41Z,2017-08-26T08:51:31Z,2017-08-26T08:51:31Z,CLOSED,False,65,13,1,https://github.com/sefai,Fix for CreateFileMapping ,3,[],https://github.com/dokan-dev/dokany/pull/529,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/529#issuecomment-325104351,Save file size to later know if MmCanFileBeTruncated call is needed or not.,"@sefai I have add a lock to the filesize set value and rebase your commit
38348f5
Thank again for your time and sorry for the delay !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,531,2017-06-13T18:37:03Z,2017-06-14T11:22:26Z,2017-06-14T11:22:26Z,MERGED,True,7,0,1,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space,1,[],https://github.com/dokan-dev/dokany/pull/531,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/531,See https://www.greyhathacker.net/?p=818,See https://www.greyhathacker.net/?p=818,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,531,2017-06-13T18:37:03Z,2017-06-14T11:22:26Z,2017-06-14T11:22:26Z,MERGED,True,7,0,1,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space,1,[],https://github.com/dokan-dev/dokany/pull/531,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/531#issuecomment-308402092,See https://www.greyhathacker.net/?p=818,"Hi @marinkobabic ,
Thanks a lot for the quick fix and well found ! üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,534,2017-06-18T18:18:19Z,2017-07-03T19:45:08Z,2017-07-03T19:45:33Z,MERGED,True,298,109,5,https://github.com/Rondom,Run IFSTest on AppVeyor,5,[],https://github.com/dokan-dev/dokany/pull/534,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/534,"This was more work than expected, but here it is:

add install-script install_wlk_ifstest.ps1 for installing the IFSTest part of WLK/HCK. Currently only Win8.1 and Win10 Anniversary versions are supported. Not really sure about backward/forward compatibility of installing them on other OSes, but I think nothing bad should happen except failing tests (see the source on how to support other version or change the conditions for choosing one version over the other)
run IFSTest from mirror_test.ps1
Make AppVeyor re-use the installer built in the All-""Configuration"", run the tests using that installer on both Win2012R2 (8.1) and and Win2016 (10 Anniversary)
Please note that the automatic BSOD analysis does not work at the moment on AppVeyor's Win2016 (VS-2017) image, because they forgot to install windbg. You are free to download the installer and the memory.dmp from the artifacts and run windbg locally. appveyor/ci#1615

Minimum checklist before merging:
[ x ] No BSODs such as #519
[ x ] Issues filed for every skipped test that is viable to fix (see mirror_test.ps1) and issue mentioned beside the skipped test in the source code
Nice to have (maybe in a separate PR):

AppVeyor workarounds not necessary
Putting results into the tests-section of AppVeyor
Calculate delta between commits e.g. when submitting a PR, compare passed/failed/skipped tests to master and post a comment in the GitHub issue.","This was more work than expected, but here it is:

add install-script install_wlk_ifstest.ps1 for installing the IFSTest part of WLK/HCK. Currently only Win8.1 and Win10 Anniversary versions are supported. Not really sure about backward/forward compatibility of installing them on other OSes, but I think nothing bad should happen except failing tests (see the source on how to support other version or change the conditions for choosing one version over the other)
run IFSTest from mirror_test.ps1
Make AppVeyor re-use the installer built in the All-""Configuration"", run the tests using that installer on both Win2012R2 (8.1) and and Win2016 (10 Anniversary)
Please note that the automatic BSOD analysis does not work at the moment on AppVeyor's Win2016 (VS-2017) image, because they forgot to install windbg. You are free to download the installer and the memory.dmp from the artifacts and run windbg locally. appveyor/ci#1615

Minimum checklist before merging:
[ x ] No BSODs such as #519
[ x ] Issues filed for every skipped test that is viable to fix (see mirror_test.ps1) and issue mentioned beside the skipped test in the source code
Nice to have (maybe in a separate PR):

AppVeyor workarounds not necessary
Putting results into the tests-section of AppVeyor
Calculate delta between commits e.g. when submitting a PR, compare passed/failed/skipped tests to master and post a comment in the GitHub issue.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,534,2017-06-18T18:18:19Z,2017-07-03T19:45:08Z,2017-07-03T19:45:33Z,MERGED,True,298,109,5,https://github.com/Rondom,Run IFSTest on AppVeyor,5,[],https://github.com/dokan-dev/dokany/pull/534,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/534#issuecomment-309303149,"This was more work than expected, but here it is:

add install-script install_wlk_ifstest.ps1 for installing the IFSTest part of WLK/HCK. Currently only Win8.1 and Win10 Anniversary versions are supported. Not really sure about backward/forward compatibility of installing them on other OSes, but I think nothing bad should happen except failing tests (see the source on how to support other version or change the conditions for choosing one version over the other)
run IFSTest from mirror_test.ps1
Make AppVeyor re-use the installer built in the All-""Configuration"", run the tests using that installer on both Win2012R2 (8.1) and and Win2016 (10 Anniversary)
Please note that the automatic BSOD analysis does not work at the moment on AppVeyor's Win2016 (VS-2017) image, because they forgot to install windbg. You are free to download the installer and the memory.dmp from the artifacts and run windbg locally. appveyor/ci#1615

Minimum checklist before merging:
[ x ] No BSODs such as #519
[ x ] Issues filed for every skipped test that is viable to fix (see mirror_test.ps1) and issue mentioned beside the skipped test in the source code
Nice to have (maybe in a separate PR):

AppVeyor workarounds not necessary
Putting results into the tests-section of AppVeyor
Calculate delta between commits e.g. when submitting a PR, compare passed/failed/skipped tests to master and post a comment in the GitHub issue.","This is beautiful @Rondom !!! üèÜ üçæ
Now lets hunt the crash !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,534,2017-06-18T18:18:19Z,2017-07-03T19:45:08Z,2017-07-03T19:45:33Z,MERGED,True,298,109,5,https://github.com/Rondom,Run IFSTest on AppVeyor,5,[],https://github.com/dokan-dev/dokany/pull/534,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/534#issuecomment-312707207,"This was more work than expected, but here it is:

add install-script install_wlk_ifstest.ps1 for installing the IFSTest part of WLK/HCK. Currently only Win8.1 and Win10 Anniversary versions are supported. Not really sure about backward/forward compatibility of installing them on other OSes, but I think nothing bad should happen except failing tests (see the source on how to support other version or change the conditions for choosing one version over the other)
run IFSTest from mirror_test.ps1
Make AppVeyor re-use the installer built in the All-""Configuration"", run the tests using that installer on both Win2012R2 (8.1) and and Win2016 (10 Anniversary)
Please note that the automatic BSOD analysis does not work at the moment on AppVeyor's Win2016 (VS-2017) image, because they forgot to install windbg. You are free to download the installer and the memory.dmp from the artifacts and run windbg locally. appveyor/ci#1615

Minimum checklist before merging:
[ x ] No BSODs such as #519
[ x ] Issues filed for every skipped test that is viable to fix (see mirror_test.ps1) and issue mentioned beside the skipped test in the source code
Nice to have (maybe in a separate PR):

AppVeyor workarounds not necessary
Putting results into the tests-section of AppVeyor
Calculate delta between commits e.g. when submitting a PR, compare passed/failed/skipped tests to master and post a comment in the GitHub issue.","Once the build passes, we can merge this, I think.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,534,2017-06-18T18:18:19Z,2017-07-03T19:45:08Z,2017-07-03T19:45:33Z,MERGED,True,298,109,5,https://github.com/Rondom,Run IFSTest on AppVeyor,5,[],https://github.com/dokan-dev/dokany/pull/534,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/534#issuecomment-312721478,"This was more work than expected, but here it is:

add install-script install_wlk_ifstest.ps1 for installing the IFSTest part of WLK/HCK. Currently only Win8.1 and Win10 Anniversary versions are supported. Not really sure about backward/forward compatibility of installing them on other OSes, but I think nothing bad should happen except failing tests (see the source on how to support other version or change the conditions for choosing one version over the other)
run IFSTest from mirror_test.ps1
Make AppVeyor re-use the installer built in the All-""Configuration"", run the tests using that installer on both Win2012R2 (8.1) and and Win2016 (10 Anniversary)
Please note that the automatic BSOD analysis does not work at the moment on AppVeyor's Win2016 (VS-2017) image, because they forgot to install windbg. You are free to download the installer and the memory.dmp from the artifacts and run windbg locally. appveyor/ci#1615

Minimum checklist before merging:
[ x ] No BSODs such as #519
[ x ] Issues filed for every skipped test that is viable to fix (see mirror_test.ps1) and issue mentioned beside the skipped test in the source code
Nice to have (maybe in a separate PR):

AppVeyor workarounds not necessary
Putting results into the tests-section of AppVeyor
Calculate delta between commits e.g. when submitting a PR, compare passed/failed/skipped tests to master and post a comment in the GitHub issue.","All seems to be perfect for me @Rondom ! üèÜ extreme great job here üòÉ !
Lets hunt the bug üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,535,2017-06-19T12:27:24Z,2017-06-19T12:27:34Z,2019-05-11T08:26:43Z,MERGED,True,0,7,1,https://github.com/Liryna,"Revert ""Prevent BSOD if output buffer address is not in user space""",1,[],https://github.com/dokan-dev/dokany/pull/535,https://github.com/Liryna,1,https://github.com/dokan-dev/dokany/pull/535,Reverts #531,Reverts #531,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,540,2017-06-24T15:00:12Z,2017-06-24T21:52:53Z,2017-06-25T19:21:15Z,CLOSED,False,86,80,17,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space https://ww‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/540,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/540,do additional check for userbuffer http://www.greyhathacker.net/?p=818,do additional check for userbuffer http://www.greyhathacker.net/?p=818,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,540,2017-06-24T15:00:12Z,2017-06-24T21:52:53Z,2017-06-25T19:21:15Z,CLOSED,False,86,80,17,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space https://ww‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/540,https://github.com/marinkobabic,2,https://github.com/dokan-dev/dokany/pull/540#issuecomment-310845893,do additional check for userbuffer http://www.greyhathacker.net/?p=818,I assume if all tests are fine that this pull request does not cause a BSOD anymore üòÑ,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,540,2017-06-24T15:00:12Z,2017-06-24T21:52:53Z,2017-06-25T19:21:15Z,CLOSED,False,86,80,17,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space https://ww‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/540,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/540#issuecomment-310862691,do additional check for userbuffer http://www.greyhathacker.net/?p=818,"I assume if all tests are fine that this pull request does not cause a BSOD anymore üòÑ

@marinkobabic Unfortunately, not yet üòû. Only when #534 (or more specifically b9e3e3d) is merged, you can rely on it.
Right now, AppVeyor will happily continue with the next steps in the build process as if nothing happened (appveyor/ci#1158). ""Thankfully"" you can ""easily"" detect the unplanned reboot, by hovering over the line-numbers. They will reveal a tooltip with the timestamp. If it is 0:00:00, then a reboot happened (appveyor/ci#1145) From line 1109 onwards you can see that we got a BSOD and you can also see that WinFSTest and FSX output is missing before those lines.
I also see that your PR creates compiler-warnings. There is also some code-style issue (return type on separate line vs. on the same line of the definition),",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,540,2017-06-24T15:00:12Z,2017-06-24T21:52:53Z,2017-06-25T19:21:15Z,CLOSED,False,86,80,17,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space https://ww‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/540,https://github.com/marinkobabic,4,https://github.com/dokan-dev/dokany/pull/540#issuecomment-310868037,do additional check for userbuffer http://www.greyhathacker.net/?p=818,"Please can you post the reason for BSOD? Haven't seen any warnings in
visual studio. But I will cancel the pull request.

Am 24.06.2017 22:04 schrieb ""Andreas Gnau"" <notifications@github.com>:
‚Ä¶
 I assume if all tests are fine that this pull request does not cause a
 BSOD anymore üòÑ

 @marinkobabic <https://github.com/marinkobabic> Unfortunately, not yet üòû.
 Only when #534 <#534> (or more
 specifically b9e3e3d
 <b9e3e3d>)
 is merged, you can rely on it.

 Right now, AppVeyor will happily continue with the next steps in the build
 process as if nothing happened (appveyor/ci#1158
 <appveyor/ci#1158>). ""Thankfully"" you can
 ""easily"" detect the unplanned reboot, by hovering over the line-numbers.
 They will reveal a tooltip with the timestamp. If it is 0:00:00, then a
 reboot happened (appveyor/ci#1145
 <appveyor/ci#1145>) From line 1109 onwards you
 can see that we got a BSOD
 <https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-203/job/t49vtcmjqp9dx4vo#L1109>
 and you can also see that WinFSTest and FSX output is missing before those
 lines.

 I also see that your PR creates compiler-warnings
 <https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-203/job/nj1m4nuvw4pmy0w0/messages>.
 There is also some code-style issue (return type on separate line vs. on
 the same line of the definition),

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#540 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ADHSOG3k1RCxi8uwylvrigR5p6cCAYwqks5sHWvigaJpZM4OEWEY>
 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,540,2017-06-24T15:00:12Z,2017-06-24T21:52:53Z,2017-06-25T19:21:15Z,CLOSED,False,86,80,17,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space https://ww‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/540,https://github.com/Rondom,5,https://github.com/dokan-dev/dokany/pull/540#issuecomment-310922364,do additional check for userbuffer http://www.greyhathacker.net/?p=818,"Don't have access to a PC right now. If you cannot reproduce it locally, I suggest adding your fork to AppVeyor and creating a separate branch for testing where you can merge my branch and access the build-VM via RDP if necessary.
‚Ä¶
On 24 June 2017 23:52:22 CEST, Marinko ***@***.***> wrote:
Please can you post the reason for BSOD? Haven't seen any warnings in
visual studio. But I will cancel the pull request.

Am 24.06.2017 22:04 schrieb ""Andreas Gnau"" ***@***.***>:

> I assume if all tests are fine that this pull request does not cause
a
> BSOD anymore üòÑ
>
> @marinkobabic <https://github.com/marinkobabic> Unfortunately, not
yet üòû.
> Only when #534 <#534> (or
more
> specifically b9e3e3d
>
<b9e3e3d>)
> is merged, you can rely on it.
>
> Right now, AppVeyor will happily continue with the next steps in the
build
> process as if nothing happened (appveyor/ci#1158
> <appveyor/ci#1158>). ""Thankfully"" you can
> ""easily"" detect the unplanned reboot, by hovering over the
line-numbers.
> They will reveal a tooltip with the timestamp. If it is 0:00:00, then
a
> reboot happened (appveyor/ci#1145
> <appveyor/ci#1145>) From line 1109 onwards
you
> can see that we got a BSOD
>
<https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-203/job/t49vtcmjqp9dx4vo#L1109>
> and you can also see that WinFSTest and FSX output is missing before
those
> lines.
>
> I also see that your PR creates compiler-warnings
>
<https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-203/job/nj1m4nuvw4pmy0w0/messages>.
> There is also some code-style issue (return type on separate line vs.
on
> the same line of the definition),
>
> ‚Äî
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
>
<#540 (comment)>,
or mute
> the thread
>
<https://github.com/notifications/unsubscribe-auth/ADHSOG3k1RCxi8uwylvrigR5p6cCAYwqks5sHWvigaJpZM4OEWEY>
> .
>


--
You are receiving this because you commented.
Reply to this email directly or view it on GitHub:
#540 (comment)


-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,541,2017-06-25T10:49:59Z,2017-06-25T11:07:24Z,2017-06-25T11:07:25Z,CLOSED,False,95,96,17,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space,1,[],https://github.com/dokan-dev/dokany/pull/541,https://github.com/marinkobabic,1,https://github.com/dokan-dev/dokany/pull/541,Fix BSOD according to https://www.greyhathacker.net/?p=818,Fix BSOD according to https://www.greyhathacker.net/?p=818,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,541,2017-06-25T10:49:59Z,2017-06-25T11:07:24Z,2017-06-25T11:07:25Z,CLOSED,False,95,96,17,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space,1,[],https://github.com/dokan-dev/dokany/pull/541,https://github.com/marinkobabic,2,https://github.com/dokan-dev/dokany/pull/541#issuecomment-310895737,Fix BSOD according to https://www.greyhathacker.net/?p=818,Have no my discs there to be able to do the tests myself. Let's see if the system reboots now because of BSOD. Warnings should be gone.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,541,2017-06-25T10:49:59Z,2017-06-25T11:07:24Z,2017-06-25T11:07:25Z,CLOSED,False,95,96,17,https://github.com/marinkobabic,Prevent BSOD if output buffer address is not in user space,1,[],https://github.com/dokan-dev/dokany/pull/541,https://github.com/marinkobabic,3,https://github.com/dokan-dev/dokany/pull/541#issuecomment-310896454,Fix BSOD according to https://www.greyhathacker.net/?p=818,it seems like i have to test it at home,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,543,2017-06-27T05:26:44Z,2017-06-27T06:44:36Z,2017-06-27T06:44:36Z,MERGED,True,10,0,2,https://github.com/FixBo,Support FileIdFullDirectoryInformation,1,[],https://github.com/dokan-dev/dokany/pull/543,https://github.com/FixBo,1,https://github.com/dokan-dev/dokany/pull/543,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,543,2017-06-27T05:26:44Z,2017-06-27T06:44:36Z,2017-06-27T06:44:36Z,MERGED,True,10,0,2,https://github.com/FixBo,Support FileIdFullDirectoryInformation,1,[],https://github.com/dokan-dev/dokany/pull/543,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/543#issuecomment-311258454,,"Hi @FixBo ,
Thank you for the contribution !
Can you tell in which case you needed FileIdFullDirectoryInformation  ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,543,2017-06-27T05:26:44Z,2017-06-27T06:44:36Z,2017-06-27T06:44:36Z,MERGED,True,10,0,2,https://github.com/FixBo,Support FileIdFullDirectoryInformation,1,[],https://github.com/dokan-dev/dokany/pull/543,https://github.com/FixBo,3,https://github.com/dokan-dev/dokany/pull/543#issuecomment-311258931,,"Hi @Liryna
Linux CIFS implementation use it.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,543,2017-06-27T05:26:44Z,2017-06-27T06:44:36Z,2017-06-27T06:44:36Z,MERGED,True,10,0,2,https://github.com/FixBo,Support FileIdFullDirectoryInformation,1,[],https://github.com/dokan-dev/dokany/pull/543,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/543#issuecomment-311267979,,"Ok @FixBo !
This seems to be good for me! Thank you üëç",True,{'THUMBS_UP': ['https://github.com/FixBo']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,553,2017-07-12T10:20:28Z,2017-07-13T02:13:13Z,2017-07-13T02:13:13Z,CLOSED,False,79,8,7,https://github.com/yin19941005,Fix BSOD during searching the backslash,1,[],https://github.com/dokan-dev/dokany/pull/553,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/553,"Adding a function for searching WCHAR in PUNICODE_STRING. This function avoid BSOD caused by the characteristics of unsigned type. Replace the similar searching implement in dokan/sys project with this new implemented function.
This will fix #549 .","Adding a function for searching WCHAR in PUNICODE_STRING. This function avoid BSOD caused by the characteristics of unsigned type. Replace the similar searching implement in dokan/sys project with this new implemented function.
This will fix #549 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,553,2017-07-12T10:20:28Z,2017-07-13T02:13:13Z,2017-07-13T02:13:13Z,CLOSED,False,79,8,7,https://github.com/yin19941005,Fix BSOD during searching the backslash,1,[],https://github.com/dokan-dev/dokany/pull/553,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/553#issuecomment-314757221,"Adding a function for searching WCHAR in PUNICODE_STRING. This function avoid BSOD caused by the characteristics of unsigned type. Replace the similar searching implement in dokan/sys project with this new implemented function.
This will fix #549 .","Hi @yin19941005 ,
Thank you for the pull request üëç ! This looks good ! Just the name of the function to fix üòã",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,553,2017-07-12T10:20:28Z,2017-07-13T02:13:13Z,2017-07-13T02:13:13Z,CLOSED,False,79,8,7,https://github.com/yin19941005,Fix BSOD during searching the backslash,1,[],https://github.com/dokan-dev/dokany/pull/553,https://github.com/yin19941005,3,https://github.com/dokan-dev/dokany/pull/553#issuecomment-314950132,"Adding a function for searching WCHAR in PUNICODE_STRING. This function avoid BSOD caused by the characteristics of unsigned type. Replace the similar searching implement in dokan/sys project with this new implemented function.
This will fix #549 .","Hi @Liryna ,
Sorry for the typo, I will reopen another pull request for it.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,555,2017-07-13T02:33:07Z,2017-07-13T06:38:30Z,2017-07-13T09:34:39Z,MERGED,True,74,8,7,https://github.com/yin19941005,Fix BSOD during searching the backslash,1,[],https://github.com/dokan-dev/dokany/pull/555,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/555,"Adding a function for searching WCHAR in PUNICODE_STRING. This function avoid BSOD caused by the characteristics of unsigned type. Replace the similar searching implement in dokan/sys project with this new implemented function.
This will fix #549 . Fixed typo in #553 .","Adding a function for searching WCHAR in PUNICODE_STRING. This function avoid BSOD caused by the characteristics of unsigned type. Replace the similar searching implement in dokan/sys project with this new implemented function.
This will fix #549 . Fixed typo in #553 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,555,2017-07-13T02:33:07Z,2017-07-13T06:38:30Z,2017-07-13T09:34:39Z,MERGED,True,74,8,7,https://github.com/yin19941005,Fix BSOD during searching the backslash,1,[],https://github.com/dokan-dev/dokany/pull/555,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/555#issuecomment-314985979,"Adding a function for searching WCHAR in PUNICODE_STRING. This function avoid BSOD caused by the characteristics of unsigned type. Replace the similar searching implement in dokan/sys project with this new implemented function.
This will fix #549 . Fixed typo in #553 .",Thank you for the quick fix üëç very appreciate !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,559,2017-07-23T19:53:55Z,2017-07-26T07:27:59Z,2017-07-26T22:16:27Z,MERGED,True,2,2,1,https://github.com/benpye,Resolve hang described in issue #554,1,[],https://github.com/dokan-dev/dokany/pull/559,https://github.com/benpye,1,https://github.com/dokan-dev/dokany/pull/559,This should resolve the hang mentioned in #554 . Dokany has a few incorrect bounds checks. I am submitting this PR to get a build that I can verify the issue is resolved in.,This should resolve the hang mentioned in #554 . Dokany has a few incorrect bounds checks. I am submitting this PR to get a build that I can verify the issue is resolved in.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,559,2017-07-23T19:53:55Z,2017-07-26T07:27:59Z,2017-07-26T22:16:27Z,MERGED,True,2,2,1,https://github.com/benpye,Resolve hang described in issue #554,1,[],https://github.com/dokan-dev/dokany/pull/559,https://github.com/benpye,2,https://github.com/dokan-dev/dokany/pull/559#issuecomment-317282026,This should resolve the hang mentioned in #554 . Dokany has a few incorrect bounds checks. I am submitting this PR to get a build that I can verify the issue is resolved in.,Quick test with mirror.exe and this isn't hanging any more.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,559,2017-07-23T19:53:55Z,2017-07-26T07:27:59Z,2017-07-26T22:16:27Z,MERGED,True,2,2,1,https://github.com/benpye,Resolve hang described in issue #554,1,[],https://github.com/dokan-dev/dokany/pull/559,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/559#issuecomment-317283266,This should resolve the hang mentioned in #554 . Dokany has a few incorrect bounds checks. I am submitting this PR to get a build that I can verify the issue is resolved in.,"Hi @benpye ,
Thank you for the PR !
So you were able to reproduce the issue with the commit before your fix ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,559,2017-07-23T19:53:55Z,2017-07-26T07:27:59Z,2017-07-26T22:16:27Z,MERGED,True,2,2,1,https://github.com/benpye,Resolve hang described in issue #554,1,[],https://github.com/dokan-dev/dokany/pull/559,https://github.com/benpye,4,https://github.com/dokan-dev/dokany/pull/559#issuecomment-317284785,This should resolve the hang mentioned in #554 . Dokany has a few incorrect bounds checks. I am submitting this PR to get a build that I can verify the issue is resolved in.,"Yeah, I can still repro with the current master. Looks like the check I linked to be fixed was the wrong one, I think CTRL+F failed me. I'm pretty sure it's the one within IOCTL_MOUNTDEV_QUERY_DEVICE_NAME causing the hang, as indicated by the logs and WinDbg.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,559,2017-07-23T19:53:55Z,2017-07-26T07:27:59Z,2017-07-26T22:16:27Z,MERGED,True,2,2,1,https://github.com/benpye,Resolve hang described in issue #554,1,[],https://github.com/dokan-dev/dokany/pull/559,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/559#issuecomment-317972053,This should resolve the hang mentioned in #554 . Dokany has a few incorrect bounds checks. I am submitting this PR to get a build that I can verify the issue is resolved in.,"Alright @benpye !
Thanks a lot again for looking at this fixing the issue üëç ‚ù§Ô∏è !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,559,2017-07-23T19:53:55Z,2017-07-26T07:27:59Z,2017-07-26T22:16:27Z,MERGED,True,2,2,1,https://github.com/benpye,Resolve hang described in issue #554,1,[],https://github.com/dokan-dev/dokany/pull/559,https://github.com/phillijw,6,https://github.com/dokan-dev/dokany/pull/559#issuecomment-318199028,This should resolve the hang mentioned in #554 . Dokany has a few incorrect bounds checks. I am submitting this PR to get a build that I can verify the issue is resolved in.,@benpye You're the hero we don't deserve,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,567,2017-08-29T21:25:50Z,2017-08-30T18:29:14Z,2017-08-31T07:12:56Z,MERGED,True,59,26,1,https://github.com/Rondom,mirror_test: Use separate dirs for each config,1,[],https://github.com/dokan-dev/dokany/pull/567,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/567,"This should make testing more robust because if you only run the tests once and the directory was empty before you can be sure that no test affects the other due to files that could not be deleted because they were still in use for some reason, for example.
Using the different ""names"" / dirs we can distinguish between different runs as well and thus do statistics over which test cases pass/fail in which configuration.
Please double-check the code to make sure that I have not missed something.","This should make testing more robust because if you only run the tests once and the directory was empty before you can be sure that no test affects the other due to files that could not be deleted because they were still in use for some reason, for example.
Using the different ""names"" / dirs we can distinguish between different runs as well and thus do statistics over which test cases pass/fail in which configuration.
Please double-check the code to make sure that I have not missed something.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,567,2017-08-29T21:25:50Z,2017-08-30T18:29:14Z,2017-08-31T07:12:56Z,MERGED,True,59,26,1,https://github.com/Rondom,mirror_test: Use separate dirs for each config,1,[],https://github.com/dokan-dev/dokany/pull/567,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/567#issuecomment-326078832,"This should make testing more robust because if you only run the tests once and the directory was empty before you can be sure that no test affects the other due to files that could not be deleted because they were still in use for some reason, for example.
Using the different ""names"" / dirs we can distinguish between different runs as well and thus do statistics over which test cases pass/fail in which configuration.
Please double-check the code to make sure that I have not missed something.",All good for me @Rondom Thanks again for your contribution ! üèÜ,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,572,2017-09-11T18:18:59Z,2017-09-11T20:31:48Z,2017-09-11T20:31:48Z,MERGED,True,2,2,1,https://github.com/sgraves66,'FindClose()' is not being called under error condition,1,[],https://github.com/dokan-dev/dokany/pull/572,https://github.com/sgraves66,1,https://github.com/dokan-dev/dokany/pull/572,Tiny issue in 'mirror',Tiny issue in 'mirror',True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,572,2017-09-11T18:18:59Z,2017-09-11T20:31:48Z,2017-09-11T20:31:48Z,MERGED,True,2,2,1,https://github.com/sgraves66,'FindClose()' is not being called under error condition,1,[],https://github.com/dokan-dev/dokany/pull/572,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/572#issuecomment-328649783,Tiny issue in 'mirror',Thanks you @sgraves66 for the tiny fix ‚ù§Ô∏è !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,577,2017-09-25T17:50:58Z,2017-09-29T05:20:34Z,2017-09-29T05:20:44Z,MERGED,True,776,0,5,https://github.com/pmalhaire,new dokan logo,1,[],https://github.com/dokan-dev/dokany/pull/577,https://github.com/pmalhaire,1,https://github.com/dokan-dev/dokany/pull/577,"update dokan logo
#243","update dokan logo
#243",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,577,2017-09-25T17:50:58Z,2017-09-29T05:20:34Z,2017-09-29T05:20:44Z,MERGED,True,776,0,5,https://github.com/pmalhaire,new dokan logo,1,[],https://github.com/dokan-dev/dokany/pull/577,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/577#issuecomment-333033510,"update dokan logo
#243",Thank you @pmalhaire !!! very appreciate üëç,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,581,2017-09-29T02:06:25Z,2017-09-29T05:32:20Z,2017-10-12T05:39:13Z,CLOSED,False,15,24,1,https://github.com/yin19941005,Test deleted code in mirror is useful or not,1,[],https://github.com/dokan-dev/dokany/pull/581,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/581,Related #575 . Try to commit as PR to run test to determine is these code in mirror is useful or not. Please don't merge this.,Related #575 . Try to commit as PR to run test to determine is these code in mirror is useful or not. Please don't merge this.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,582,2017-10-09T03:36:42Z,2017-10-11T12:15:03Z,2017-10-12T05:39:17Z,MERGED,True,66,0,1,https://github.com/yin19941005,Add Impersonate Option for Security Enhancement.,1,[],https://github.com/dokan-dev/dokany/pull/582,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/582,"Add Impersonate Caller User Option for Security Enhancement. Previously implementation will always done all the operations with the mounted user access token. Adding option to use the caller access token to get the handle for completing the operations. This option requires admin right to work properly.
Can be fix the security holes mentioned in #575 when the Impersonate Caller User Option (require administrator right to mount) is used to mount.","Add Impersonate Caller User Option for Security Enhancement. Previously implementation will always done all the operations with the mounted user access token. Adding option to use the caller access token to get the handle for completing the operations. This option requires admin right to work properly.
Can be fix the security holes mentioned in #575 when the Impersonate Caller User Option (require administrator right to mount) is used to mount.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,582,2017-10-09T03:36:42Z,2017-10-11T12:15:03Z,2017-10-12T05:39:17Z,MERGED,True,66,0,1,https://github.com/yin19941005,Add Impersonate Option for Security Enhancement.,1,[],https://github.com/dokan-dev/dokany/pull/582,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/582#issuecomment-335361971,"Add Impersonate Caller User Option for Security Enhancement. Previously implementation will always done all the operations with the mounted user access token. Adding option to use the caller access token to get the handle for completing the operations. This option requires admin right to work properly.
Can be fix the security holes mentioned in #575 when the Impersonate Caller User Option (require administrator right to mount) is used to mount.","Hi @yin19941005 ,
This is indeed something really needed for the mirror ! Thanks a lot ! üòç
Just wonder for performance, could it be possible to only call DokanOpenRequestorToken at start and RevertToSelf when ctrl + c & exit ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,582,2017-10-09T03:36:42Z,2017-10-11T12:15:03Z,2017-10-12T05:39:17Z,MERGED,True,66,0,1,https://github.com/yin19941005,Add Impersonate Option for Security Enhancement.,1,[],https://github.com/dokan-dev/dokany/pull/582,https://github.com/yin19941005,3,https://github.com/dokan-dev/dokany/pull/582#issuecomment-335372275,"Add Impersonate Caller User Option for Security Enhancement. Previously implementation will always done all the operations with the mounted user access token. Adding option to use the caller access token to get the handle for completing the operations. This option requires admin right to work properly.
Can be fix the security holes mentioned in #575 when the Impersonate Caller User Option (require administrator right to mount) is used to mount.","Hi @Liryna ,
I afraid only call DokanOpenRequestorToken at start is not a good idea. If user with administrator right using the drive at the beginning (i.e. we impersonate his/her administrator right) and the then switch user, the same security holes on #575 will still occur. If a normal user is using the drive and switch to administrator account, the administrator will lost his/her admin right (because we are impersonating the normal user).
So, I don't think it is possible to only call DokanOpenRequestorToken at start and RevertToSelf when ctrl + c & exit.
For the performance issue, I didn't done any testing for it. However, please consider the case that if we really implement the whole security handling process instead of using impersonate method. Base on my knowledge, the DACL and SACL is require to handle them separately. DACL should required AccessCheck and SACL required PrivilegeCheck. And we also need to handle the owner ship problem (because the file will be own by the access token used to call CreateFile function).
So, I think the alternative solution required some much afford to fix this. Maybe we can reference and study the FUSE default_permissions option to finish these checking in kernel if you really concern about the performance.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,582,2017-10-09T03:36:42Z,2017-10-11T12:15:03Z,2017-10-12T05:39:17Z,MERGED,True,66,0,1,https://github.com/yin19941005,Add Impersonate Option for Security Enhancement.,1,[],https://github.com/dokan-dev/dokany/pull/582,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/582#issuecomment-335790078,"Add Impersonate Caller User Option for Security Enhancement. Previously implementation will always done all the operations with the mounted user access token. Adding option to use the caller access token to get the handle for completing the operations. This option requires admin right to work properly.
Can be fix the security holes mentioned in #575 when the Impersonate Caller User Option (require administrator right to mount) is used to mount.","OK I see your point ! and you are right.
Better to fix a security hole here üëç
Thanks as alaways @yin19941005  !
If I am correct the FUSE default_permissions ""kind of"" already exist when DefaultGetFileSecurity is not implemented by the user, we set a default one (that can not be configured for now).
https://github.com/dokan-dev/dokany/blob/master/dokan/security.c#L29",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,585,2017-10-11T02:48:18Z,2017-10-11T12:09:08Z,2017-10-12T05:39:17Z,MERGED,True,12,4,1,https://github.com/yin19941005,Fix SetFileAttributes implementation,1,[],https://github.com/dokan-dev/dokany/pull/585,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/585,"By MS-FSCC 2.6 File Attributes, 0x00000000 in the FileAttributes field means that the file attributes for this file MUST NOT be changed when setting basic information for the file. However, we are just set FileAttributes with 0x0 previously and cause file attribute lost. Fix this bug with this commit.
This will fix #584 .","By MS-FSCC 2.6 File Attributes, 0x00000000 in the FileAttributes field means that the file attributes for this file MUST NOT be changed when setting basic information for the file. However, we are just set FileAttributes with 0x0 previously and cause file attribute lost. Fix this bug with this commit.
This will fix #584 .",True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,585,2017-10-11T02:48:18Z,2017-10-11T12:09:08Z,2017-10-12T05:39:17Z,MERGED,True,12,4,1,https://github.com/yin19941005,Fix SetFileAttributes implementation,1,[],https://github.com/dokan-dev/dokany/pull/585,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/585#issuecomment-335788683,"By MS-FSCC 2.6 File Attributes, 0x00000000 in the FileAttributes field means that the file attributes for this file MUST NOT be changed when setting basic information for the file. However, we are just set FileAttributes with 0x0 previously and cause file attribute lost. Fix this bug with this commit.
This will fix #584 .","Hi @yin19941005,
You are absolutely right !
Opening an issue, giving the fix in a PR and link with the Microsoft documentation ‚ù§Ô∏è ‚ù§Ô∏è ‚ù§Ô∏è
You rocks ! üé∏ üöÄ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,588,2017-10-11T19:38:28Z,2017-10-11T19:45:39Z,2017-10-11T19:45:39Z,MERGED,True,3,3,1,https://github.com/SarasArya,Updated readme with few grammatical corrections,1,[],https://github.com/dokan-dev/dokany/pull/588,https://github.com/SarasArya,1,https://github.com/dokan-dev/dokany/pull/588,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,588,2017-10-11T19:38:28Z,2017-10-11T19:45:39Z,2017-10-11T19:45:39Z,MERGED,True,3,3,1,https://github.com/SarasArya,Updated readme with few grammatical corrections,1,[],https://github.com/dokan-dev/dokany/pull/588,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/588#issuecomment-335926261,,Thank you @SarasArya for the Readme review !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,591,2017-10-11T20:34:48Z,2017-10-19T18:54:07Z,2017-10-19T18:56:25Z,MERGED,True,50,42,1,https://github.com/gkotian,Minor fixes to README file,2,[],https://github.com/dokan-dev/dokany/pull/591,https://github.com/gkotian,1,https://github.com/dokan-dev/dokany/pull/591,The first commit only splits long lines to 80 characters without any content changes. The second commit performs some minor typo fixes.,The first commit only splits long lines to 80 characters without any content changes. The second commit performs some minor typo fixes.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,591,2017-10-11T20:34:48Z,2017-10-19T18:54:07Z,2017-10-19T18:56:25Z,MERGED,True,50,42,1,https://github.com/gkotian,Minor fixes to README file,2,[],https://github.com/dokan-dev/dokany/pull/591,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/591#issuecomment-338003961,The first commit only splits long lines to 80 characters without any content changes. The second commit performs some minor typo fixes.,"Hi @gkotian ,
Thanks you for the review and for your work ! üéÜ
Cut to 80 can be helpful for some people and anyway github does not show more üëç It is a good idea !",True,{'HOORAY': ['https://github.com/gkotian']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,592,2017-10-11T20:35:24Z,2017-11-22T08:30:10Z,2017-11-22T12:14:39Z,CLOSED,False,25,0,1,https://github.com/bhardwajanish,created updatereadme.md,1,[],https://github.com/dokan-dev/dokany/pull/592,https://github.com/bhardwajanish,1,https://github.com/dokan-dev/dokany/pull/592,I fixed the grammar and language. I am a native English speaker.,I fixed the grammar and language. I am a native English speaker.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,592,2017-10-11T20:35:24Z,2017-11-22T08:30:10Z,2017-11-22T12:14:39Z,CLOSED,False,25,0,1,https://github.com/bhardwajanish,created updatereadme.md,1,[],https://github.com/dokan-dev/dokany/pull/592,https://github.com/bhardwajanish,2,https://github.com/dokan-dev/dokany/pull/592#issuecomment-337836884,I fixed the grammar and language. I am a native English speaker.,"I don't understand...What would you like me to do?
‚Ä¶
On Oct 19, 2017 1:12 PM, ""Andreas Gnau"" ***@***.***> wrote:
 ***@***.**** requested changes on this pull request.

 this cannot be merged in its current form. Deletes text and moves it to
 new file.

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#592 (review)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AdzAjvRiA_WFE_mHHFvsQe0PdzoeIMh1ks5stv1UgaJpZM4P2FmE>
 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,592,2017-10-11T20:35:24Z,2017-11-22T08:30:10Z,2017-11-22T12:14:39Z,CLOSED,False,25,0,1,https://github.com/bhardwajanish,created updatereadme.md,1,[],https://github.com/dokan-dev/dokany/pull/592,https://github.com/sm4rk0,3,https://github.com/dokan-dev/dokany/pull/592#issuecomment-337914384,I fixed the grammar and language. I am a native English speaker.,"@bhardwajanish You should:

open this link  in new tab
click the pen button in upper right corner (with ""Fork this project and edit this file"" tooltip)
edit existing text (without removing the badges, images, links, etc)
Commit and create a PR
close this PR, and delete the branch in your repo",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,592,2017-10-11T20:35:24Z,2017-11-22T08:30:10Z,2017-11-22T12:14:39Z,CLOSED,False,25,0,1,https://github.com/bhardwajanish,created updatereadme.md,1,[],https://github.com/dokan-dev/dokany/pull/592,https://github.com/sm4rk0,4,https://github.com/dokan-dev/dokany/pull/592#issuecomment-337914945,I fixed the grammar and language. I am a native English speaker.,Updated the comment in order to preserve your current PR not to lose the changes you already made.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,592,2017-10-11T20:35:24Z,2017-11-22T08:30:10Z,2017-11-22T12:14:39Z,CLOSED,False,25,0,1,https://github.com/bhardwajanish,created updatereadme.md,1,[],https://github.com/dokan-dev/dokany/pull/592,https://github.com/Rondom,5,https://github.com/dokan-dev/dokany/pull/592#issuecomment-337922040,I fixed the grammar and language. I am a native English speaker.,"@bhardwajanish I suggest to wait until the other PRs are merged to prevent conflicts.
@sm4rk0 I am not too familiar with GitHub-webinterface (never really used it), but is it not possible to update this PR without closing and creating PRs? I mean, the usual workflow when working locally is to push (force-push, if necessary) to the same branch, keeping all history and discussion in one PR.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,592,2017-10-11T20:35:24Z,2017-11-22T08:30:10Z,2017-11-22T12:14:39Z,CLOSED,False,25,0,1,https://github.com/bhardwajanish,created updatereadme.md,1,[],https://github.com/dokan-dev/dokany/pull/592,https://github.com/sm4rk0,6,https://github.com/dokan-dev/dokany/pull/592#issuecomment-337935864,I fixed the grammar and language. I am a native English speaker.,"@Rondom I'm also not familiar (enough) with the web interface. That's why I proposed probably longer, but safer way.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,592,2017-10-11T20:35:24Z,2017-11-22T08:30:10Z,2017-11-22T12:14:39Z,CLOSED,False,25,0,1,https://github.com/bhardwajanish,created updatereadme.md,1,[],https://github.com/dokan-dev/dokany/pull/592,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/592#issuecomment-346278244,I fixed the grammar and language. I am a native English speaker.,@sm4rk0 Feel free to recreate a proper pull request üëç,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,592,2017-10-11T20:35:24Z,2017-11-22T08:30:10Z,2017-11-22T12:14:39Z,CLOSED,False,25,0,1,https://github.com/bhardwajanish,created updatereadme.md,1,[],https://github.com/dokan-dev/dokany/pull/592,https://github.com/sm4rk0,8,https://github.com/dokan-dev/dokany/pull/592#issuecomment-346333431,I fixed the grammar and language. I am a native English speaker.,Good idea. All changes proposed here are already included in #601 and #603.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,597,2017-10-12T04:51:42Z,2017-10-19T18:34:21Z,2017-10-19T18:34:22Z,CLOSED,False,10,10,1,https://github.com/klyap,Minor spelling and grammar edits,2,[],https://github.com/dokan-dev/dokany/pull/597,https://github.com/klyap,1,https://github.com/dokan-dev/dokany/pull/597,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,597,2017-10-12T04:51:42Z,2017-10-19T18:34:21Z,2017-10-19T18:34:22Z,CLOSED,False,10,10,1,https://github.com/klyap,Minor spelling and grammar edits,2,[],https://github.com/dokan-dev/dokany/pull/597,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/597#issuecomment-337997945,,"Hi @klyap ,
Thank you for your review and for taking the time ! ü•á
This is a very appreciate work !
I have rebased your commits in a single one and merged it
2b44735",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,599,2017-10-12T05:38:39Z,2019-05-11T21:07:52Z,2019-05-11T21:07:52Z,CLOSED,False,9,0,1,https://github.com/yin19941005,Fix directory attribute lost,1,[],https://github.com/dokan-dev/dokany/pull/599,https://github.com/yin19941005,1,https://github.com/dokan-dev/dokany/pull/599,"Windows won't call setAttribute function to set Attribute if you are creating the new directory. It's just giving FILE_WRITE_ATTRIBUTES Flag and expect it works just like file creation. Handle this case with this commit to avoid attribute lost.
This should fix #598 .","Windows won't call setAttribute function to set Attribute if you are creating the new directory. It's just giving FILE_WRITE_ATTRIBUTES Flag and expect it works just like file creation. Handle this case with this commit to avoid attribute lost.
This should fix #598 .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,599,2017-10-12T05:38:39Z,2019-05-11T21:07:52Z,2019-05-11T21:07:52Z,CLOSED,False,9,0,1,https://github.com/yin19941005,Fix directory attribute lost,1,[],https://github.com/dokan-dev/dokany/pull/599,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/599#issuecomment-337299391,"Windows won't call setAttribute function to set Attribute if you are creating the new directory. It's just giving FILE_WRITE_ATTRIBUTES Flag and expect it works just like file creation. Handle this case with this commit to avoid attribute lost.
This should fix #598 .","Hi @yin19941005 ,
Thank you for the PR and sorry for the delay !
This seems to break some IFSTest UpdateOnCloseDirTest:
https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.5-292/job/nno46ubv9bcfqai7#L631
Maybe there is a case this should not be updated ?
] Test         :UpdateOnCloseDirTest
] Group        :CloseCleanupDelete
] Status       :C0000015 (IFSTEST_TEST_ATTRIBUTE_ERROR)
] WSystemText  :\uponcd\uponcd1
] LastGeneralValue :00000031
] ExpectedGeneralValue :00000030
] TestVariant  :00000003 
] Description  :{Msg# CloseDel!uponcd!30} The attributes were changed.
]               This dirents should have been updated since the
]               handles to the directories were closed. 
] 
] Test         :UpdateOnCloseDirTest
] Group        :CloseCleanupDelete
] Status       :C0000015 (IFSTEST_TEST_ATTRIBUTE_ERROR)
] WSystemText  :\uponcd\uponcd2
] LastGeneralValue :00000016
] ExpectedGeneralValue :00000014
] TestVariant  :00000003 
] Description  :{Msg# CloseDel!uponcd!30} The attributes were changed.
]               This dirents should have been updated since the
]               handles to the directories were closed. 
] 
] Test         :UpdateOnCloseDirTest
] Group        :CloseCleanupDelete
] Status       :C0000015 (IFSTEST_TEST_ATTRIBUTE_ERROR)
] WSystemText  :\uponcd\uponcd3
] LastGeneralValue :00000016
] ExpectedGeneralValue :00000012
] TestVariant  :00000003 
] Description  :{Msg# CloseDel!uponcd!30} The attributes were changed.
]               This dirents should have been updated since the
]               handles to the directories were closed. 
] 
] Test         :UpdateOnCloseDirTest
] Group        :CloseCleanupDelete
] Status       :C0000015 (IFSTEST_TEST_ATTRIBUTE_ERROR)
] WSystemText  :\uponcd\uponcd4
] LastGeneralValue :00000031
] ExpectedGeneralValue :00000011
] TestVariant  :00000003 
] Description  :{Msg# CloseDel!uponcd!30} The attributes were changed.
]               This dirents should have been updated since the
]               handles to the directories were closed. 
]",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,599,2017-10-12T05:38:39Z,2019-05-11T21:07:52Z,2019-05-11T21:07:52Z,CLOSED,False,9,0,1,https://github.com/yin19941005,Fix directory attribute lost,1,[],https://github.com/dokan-dev/dokany/pull/599,https://github.com/yin19941005,3,https://github.com/dokan-dev/dokany/pull/599#issuecomment-338909947,"Windows won't call setAttribute function to set Attribute if you are creating the new directory. It's just giving FILE_WRITE_ATTRIBUTES Flag and expect it works just like file creation. Handle this case with this commit to avoid attribute lost.
This should fix #598 .","HI @Liryna ,
Sorry for the delay.
Maybe we should not update the file attribute when calling create, instead, we should update it when calling close.
I checked the document for the IFS test (here),

UpdateOnCloseDirTest. A directory handle can be used to find a subdirectory that is contained in that directory and obtain the file times, attributes, end-of-file pointer, and allocation size of the subdirectory. The end-of-file pointer and allocation size should be returned as zero. If handles are open on the subdirectory, there might be a difference between changes that have been made to the subdirectory, with regards to the above information, and the information that is read back through of the open directory handle (of the directory that contains the subdirectories). The information is updated when the last open handle to the file object (for the subdirectory) is closed. This closure sends out IRP_MJ_CLEANUP.


This test first creates a number of subdirectories, verifies the file information through a container directory handle, and queries. The subdirectories are then opened, access by listing, and modified by creating files inside of those test subdirectories. The file information is again queried and checked to see that it has not been updated. The subdirectory handles are then closed. The file information is again queried, and the updated information is verified.

Base on my understanding, it seems for some cases for subdirectory the file attributes shouldn't update until the subdirectory handles are closed. The test will verify the file attributes is updated or not again after the handles closed.
What's your opinion to this?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,599,2017-10-12T05:38:39Z,2019-05-11T21:07:52Z,2019-05-11T21:07:52Z,CLOSED,False,9,0,1,https://github.com/yin19941005,Fix directory attribute lost,1,[],https://github.com/dokan-dev/dokany/pull/599,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/599#issuecomment-339884109,"Windows won't call setAttribute function to set Attribute if you are creating the new directory. It's just giving FILE_WRITE_ATTRIBUTES Flag and expect it works just like file creation. Handle this case with this commit to avoid attribute lost.
This should fix #598 .","Yes, I understand it the same as you.
But the test passed before the changes, so I guess this is already happening from my understanding.
Would be interesting to see if there is a test that matches your issue or not but it does not seem to be.
Can try to keep the attribute from createfile and do it in the cleanup like they say and see if the test still passes and it fix the issue.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,599,2017-10-12T05:38:39Z,2019-05-11T21:07:52Z,2019-05-11T21:07:52Z,CLOSED,False,9,0,1,https://github.com/yin19941005,Fix directory attribute lost,1,[],https://github.com/dokan-dev/dokany/pull/599,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/599#issuecomment-491543897,"Windows won't call setAttribute function to set Attribute if you are creating the new directory. It's just giving FILE_WRITE_ATTRIBUTES Flag and expect it works just like file creation. Handle this case with this commit to avoid attribute lost.
This should fix #598 .",Close for inactivity,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,601,2017-10-13T19:45:58Z,2017-10-19T18:32:31Z,2017-10-19T18:38:16Z,MERGED,True,28,28,1,https://github.com/t-miller,"Fixed grammar, removed personal references",2,[],https://github.com/dokan-dev/dokany/pull/601,https://github.com/t-miller,1,https://github.com/dokan-dev/dokany/pull/601,Addresses #587,Addresses #587,True,{'THUMBS_UP': ['https://github.com/sm4rk0']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,601,2017-10-13T19:45:58Z,2017-10-19T18:32:31Z,2017-10-19T18:38:16Z,MERGED,True,28,28,1,https://github.com/t-miller,"Fixed grammar, removed personal references",2,[],https://github.com/dokan-dev/dokany/pull/601,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/601#issuecomment-337998933,Addresses #587,"Hi @t-miller,
Thanks a lot for your reviews and for your time  ! üèÜ
You have done an excellent work ! that is very appreciate ! üé∏",True,{'THUMBS_UP': ['https://github.com/t-miller']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,603,2017-10-18T18:20:18Z,2017-10-19T18:54:08Z,2017-10-19T18:57:24Z,MERGED,True,4,4,1,https://github.com/joeyalexander,Update README.md,1,[],https://github.com/dokan-dev/dokany/pull/603,https://github.com/joeyalexander,1,https://github.com/dokan-dev/dokany/pull/603,Fix a few typos,Fix a few typos,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,603,2017-10-18T18:20:18Z,2017-10-19T18:54:08Z,2017-10-19T18:57:24Z,MERGED,True,4,4,1,https://github.com/joeyalexander,Update README.md,1,[],https://github.com/dokan-dev/dokany/pull/603,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/603#issuecomment-338004211,Fix a few typos,"Hi @joeyalexander ,
Thanks you for the review of the readme ! üëç very appreciate !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,604,2017-10-19T02:02:56Z,2017-10-20T05:18:19Z,2017-10-20T12:45:07Z,MERGED,True,2,0,2,https://github.com/bailey27,add dokan_vector.h to installed header files,1,[],https://github.com/dokan-dev/dokany/pull/604,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/604,added dokan_vector.h to both x86 and x64 installs,added dokan_vector.h to both x86 and x64 installs,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,604,2017-10-19T02:02:56Z,2017-10-20T05:18:19Z,2017-10-20T12:45:07Z,MERGED,True,2,0,2,https://github.com/bailey27,add dokan_vector.h to installed header files,1,[],https://github.com/dokan-dev/dokany/pull/604,https://github.com/bailey27,2,https://github.com/dokan-dev/dokany/pull/604#issuecomment-337895747,added dokan_vector.h to both x86 and x64 installs,I changed KeyPath to no for those entries.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,604,2017-10-19T02:02:56Z,2017-10-20T05:18:19Z,2017-10-20T12:45:07Z,MERGED,True,2,0,2,https://github.com/bailey27,add dokan_vector.h to installed header files,1,[],https://github.com/dokan-dev/dokany/pull/604,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/604#issuecomment-337993256,added dokan_vector.h to both x86 and x64 installs,"Hi @bailey27,
Thank for the PR ! Yes, the changes are correct ! ‚ù§Ô∏è
Appveyor red status seems to come from a crash during the test.
Can you just rebase into one commit and I will merge it üëç (or can do it for you if you want)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,604,2017-10-19T02:02:56Z,2017-10-20T05:18:19Z,2017-10-20T12:45:07Z,MERGED,True,2,0,2,https://github.com/bailey27,add dokan_vector.h to installed header files,1,[],https://github.com/dokan-dev/dokany/pull/604,https://github.com/bailey27,4,https://github.com/dokan-dev/dokany/pull/604#issuecomment-338074807,added dokan_vector.h to both x86 and x64 installs,"@Liryna
Thanks for approving it.  I've rebased it into one commit.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,604,2017-10-19T02:02:56Z,2017-10-20T05:18:19Z,2017-10-20T12:45:07Z,MERGED,True,2,0,2,https://github.com/bailey27,add dokan_vector.h to installed header files,1,[],https://github.com/dokan-dev/dokany/pull/604,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/604#issuecomment-338108415,added dokan_vector.h to both x86 and x64 installs,Perfect @bailey27 ! Thanks you !  ü•á,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,605,2017-10-19T15:28:31Z,2017-10-19T19:08:41Z,2017-10-19T19:08:45Z,MERGED,True,91,90,1,https://github.com/t-miller,"fixed typos and grammar, removed references to 'you'",1,[],https://github.com/dokan-dev/dokany/pull/605,https://github.com/t-miller,1,https://github.com/dokan-dev/dokany/pull/605,"Addresses #587.
Note that the intention of line 743 was not clear, so that sentence was not fully fixed.","Addresses #587.
Note that the intention of line 743 was not clear, so that sentence was not fully fixed.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,605,2017-10-19T15:28:31Z,2017-10-19T19:08:41Z,2017-10-19T19:08:45Z,MERGED,True,91,90,1,https://github.com/t-miller,"fixed typos and grammar, removed references to 'you'",1,[],https://github.com/dokan-dev/dokany/pull/605,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/605#issuecomment-338007242,"Addresses #587.
Note that the intention of line 743 was not clear, so that sentence was not fully fixed.","That's an awesome review @t-miller !!!
Very kind of you for taking the time to review the dokan.h ! Can only make it more comfortable to read it üëç",True,{'THUMBS_UP': ['https://github.com/t-miller']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,609,2017-10-23T03:51:16Z,2017-10-23T06:29:33Z,2017-10-23T06:29:35Z,MERGED,True,7,0,2,https://github.com/leochou0729,Add FUSE read-only option,1,[],https://github.com/dokan-dev/dokany/pull/609,https://github.com/leochou0729,1,https://github.com/dokan-dev/dokany/pull/609,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,609,2017-10-23T03:51:16Z,2017-10-23T06:29:33Z,2017-10-23T06:29:35Z,MERGED,True,7,0,2,https://github.com/leochou0729,Add FUSE read-only option,1,[],https://github.com/dokan-dev/dokany/pull/609,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/609#issuecomment-338559926,,"Hi @leochou0729 ,
This seems to be alright üëç  Thanks a lot for the PR ! ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,614,2017-10-30T20:12:11Z,2017-11-02T06:39:37Z,2017-11-02T06:39:37Z,MERGED,True,19,4,3,https://github.com/Rondom,FUSE: cross-compile 32-bit Cygwin DLL from 64-bit,1,[],https://github.com/dokan-dev/dokany/pull/614,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/614,"Cygwin64 can compile binaries for Cygwin32. Install the corresponding
cross-compiler and use it for compiling dokan_fuse.
This should save quite a bit of time spent downloading 32-bit Cygwin
updates on AppVeyor. It also makes live easier, because there is no
longer any need to install the 32-bit Cygwin in parallel to the 64-bit
one on local machines.","Cygwin64 can compile binaries for Cygwin32. Install the corresponding
cross-compiler and use it for compiling dokan_fuse.
This should save quite a bit of time spent downloading 32-bit Cygwin
updates on AppVeyor. It also makes live easier, because there is no
longer any need to install the 32-bit Cygwin in parallel to the 64-bit
one on local machines.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,614,2017-10-30T20:12:11Z,2017-11-02T06:39:37Z,2017-11-02T06:39:37Z,MERGED,True,19,4,3,https://github.com/Rondom,FUSE: cross-compile 32-bit Cygwin DLL from 64-bit,1,[],https://github.com/dokan-dev/dokany/pull/614,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/614#issuecomment-340571248,"Cygwin64 can compile binaries for Cygwin32. Install the corresponding
cross-compiler and use it for compiling dokan_fuse.
This should save quite a bit of time spent downloading 32-bit Cygwin
updates on AppVeyor. It also makes live easier, because there is no
longer any need to install the 32-bit Cygwin in parallel to the 64-bit
one on local machines.",Todo before merge: test that binary from AppVeyor runs,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,614,2017-10-30T20:12:11Z,2017-11-02T06:39:37Z,2017-11-02T06:39:37Z,MERGED,True,19,4,3,https://github.com/Rondom,FUSE: cross-compile 32-bit Cygwin DLL from 64-bit,1,[],https://github.com/dokan-dev/dokany/pull/614,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/614#issuecomment-341218240,"Cygwin64 can compile binaries for Cygwin32. Install the corresponding
cross-compiler and use it for compiling dokan_fuse.
This should save quite a bit of time spent downloading 32-bit Cygwin
updates on AppVeyor. It also makes live easier, because there is no
longer any need to install the 32-bit Cygwin in parallel to the 64-bit
one on local machines.","Hi @Rondom ,
Yes, this would make the build more fast üëç !
There should be no issue here: gcc-g++ for x86 also use i686-pc-cygwin-c++.exe
https://cygwin.com/cgi-bin2/package-cat.cgi?file=x86%2Fgcc-g%2B%2B%2Fgcc-g%2B%2B-6.4.0-1&grep=gcc-g%2B%2B
Both packages are probably the same but one has a link to usr/bin/c++.exe directly.
This can be merge if you agree with me",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,614,2017-10-30T20:12:11Z,2017-11-02T06:39:37Z,2017-11-02T06:39:37Z,MERGED,True,19,4,3,https://github.com/Rondom,FUSE: cross-compile 32-bit Cygwin DLL from 64-bit,1,[],https://github.com/dokan-dev/dokany/pull/614,https://github.com/Rondom,4,https://github.com/dokan-dev/dokany/pull/614#issuecomment-341255729,"Cygwin64 can compile binaries for Cygwin32. Install the corresponding
cross-compiler and use it for compiling dokan_fuse.
This should save quite a bit of time spent downloading 32-bit Cygwin
updates on AppVeyor. It also makes live easier, because there is no
longer any need to install the 32-bit Cygwin in parallel to the 64-bit
one on local machines.",Tested. Can be merged!,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,614,2017-10-30T20:12:11Z,2017-11-02T06:39:37Z,2017-11-02T06:39:37Z,MERGED,True,19,4,3,https://github.com/Rondom,FUSE: cross-compile 32-bit Cygwin DLL from 64-bit,1,[],https://github.com/dokan-dev/dokany/pull/614,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/614#issuecomment-341331077,"Cygwin64 can compile binaries for Cygwin32. Install the corresponding
cross-compiler and use it for compiling dokan_fuse.
This should save quite a bit of time spent downloading 32-bit Cygwin
updates on AppVeyor. It also makes live easier, because there is no
longer any need to install the 32-bit Cygwin in parallel to the 64-bit
one on local machines.",Thank you @Rondom ! ‚ù§Ô∏è,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,619,2017-11-14T09:26:18Z,2017-11-18T10:10:54Z,2017-11-18T10:10:54Z,CLOSED,False,94,67,9,https://github.com/Jaozhang,[Jao][Fix the Dokan issue #611],1,[],https://github.com/dokan-dev/dokany/pull/619,https://github.com/Jaozhang,1,https://github.com/dokan-dev/dokany/pull/619,"Added FileRenameInformationEx for  Win 10 1709(16299) .
The fixed code based on VS2017 + WDK/SDK 1709(16299).
I tested default sample and the issue #611  fixed.","Added FileRenameInformationEx for  Win 10 1709(16299) .
The fixed code based on VS2017 + WDK/SDK 1709(16299).
I tested default sample and the issue #611  fixed.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,619,2017-11-14T09:26:18Z,2017-11-18T10:10:54Z,2017-11-18T10:10:54Z,CLOSED,False,94,67,9,https://github.com/Jaozhang,[Jao][Fix the Dokan issue #611],1,[],https://github.com/dokan-dev/dokany/pull/619,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/619#issuecomment-344500121,"Added FileRenameInformationEx for  Win 10 1709(16299) .
The fixed code based on VS2017 + WDK/SDK 1709(16299).
I tested default sample and the issue #611  fixed.","Thank you @Jaozhang !
Will take a look at it this weekend üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,619,2017-11-14T09:26:18Z,2017-11-18T10:10:54Z,2017-11-18T10:10:54Z,CLOSED,False,94,67,9,https://github.com/Jaozhang,[Jao][Fix the Dokan issue #611],1,[],https://github.com/dokan-dev/dokany/pull/619,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/619#issuecomment-345432279,"Added FileRenameInformationEx for  Win 10 1709(16299) .
The fixed code based on VS2017 + WDK/SDK 1709(16299).
I tested default sample and the issue #611  fixed.","Thank you for the PR and finding the reason of the issue @Jaozhang !!!
I have merged currently your commit in the develop, see my message in #611
7add59e
(you can also link you commit mail to like with @Jaozhang account, like that your nickname will be showed)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,626,2017-11-26T14:49:55Z,2017-11-26T14:50:02Z,2017-11-28T09:46:59Z,MERGED,True,276,325,26,https://github.com/Liryna, Move to VS 2017 / v141 / SDK 10.0.16299.0 / Add New FileRenameInformationEx since Windows 10 RS1,6,[],https://github.com/dokan-dev/dokany/pull/626,https://github.com/Liryna,1,https://github.com/dokan-dev/dokany/pull/626,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,1,https://github.com/dokan-dev/dokany/pull/632,fix #625,fix #625,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/632#issuecomment-349983213,fix #625,"Hi @fanlonglong8500 ,
Thank you for the PR!
I have not fully reviewed it but first look:
There is a broken test: https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-342/job/8e8sixxlgakbf9yg#L410
Why disable DokanNotifyReportChange ?
https://github.com/dokan-dev/dokany/pull/632/files#diff-186f697a50e48562500c4beb285c7e58L365
Acquire and release of resource here: https://github.com/dokan-dev/dokany/pull/632/files#diff-186f697a50e48562500c4beb285c7e58R127",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,3,https://github.com/dokan-dev/dokany/pull/632#issuecomment-350031602,fix #625,"Why disable DokanNotifyReportChange ?

I test ntfs . I found ntfs is reportchange on close.

Acquire and release of resource here

See the following example
https://github.com/Microsoft/Windows-driver-samples/blob/aa6e0b36eb932099fa4eb950a6f5e289a23b6d6e/filesys/fastfat/cleanup.c#L991",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,4,https://github.com/dokan-dev/dokany/pull/632#issuecomment-350038258,fix #625,"‰Ω†Â•Ω @Liryna ,
A simple question, how do I get those test programs?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/632#issuecomment-350039954,fix #625,"You have the ifstest install script here: https://github.com/dokan-dev/dokany/tree/master/scripts
Winfstest: https://github.com/Liryna/winfstest
See how appveyor is using it: https://github.com/dokan-dev/dokany/blob/master/appveyor.yml
https://github.com/dokan-dev/dokany/blob/master/appveyor.yml#L260
https://github.com/dokan-dev/dokany/blob/master/samples/mirror_test.ps1
It is probably heavy to run everything like appveyor. Better to use first winfstest and after on another env the ifstest.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,6,https://github.com/dokan-dev/dokany/pull/632#issuecomment-350215789,fix #625,"Hi @Liryna ,
I've reviewed the code and found some problems, so you can wait for my next code submission before reviewing.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,7,https://github.com/dokan-dev/dokany/pull/632#issuecomment-350631248,fix #625,"Hi @Liryna ,
you can review now.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/632#issuecomment-351203448,fix #625,"Thank you @fanlonglong8500 !
I am currently busy. I will take a look this weekend hopefully !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,9,https://github.com/dokan-dev/dokany/pull/632#issuecomment-354556180,fix #625,"Hi @fanlonglong8500 ,
Sorry for the delay.
-Is there a reason for creating COMPLETE_SUCCESS instead of using NTSTATUS ? SUCCESS/PENDING
-Bool isOk  should be renamed to FCBAcquired
-FILE_NOTIFY_CHANGE_SIZE is needed for IFTest StreamNotifySizeTest üò¢
https://github.com/Microsoft/Windows-driver-samples/blob/aa6e0b36eb932099fa4eb950a6f5e289a23b6d6e/filesys/fastfat/write.c#L2766
Otherwise, this seems to be a good work üëç
Have you been able to reproduce #625 without and see that it correctly fix it ?
Otherwise, I do not know if you have time or if you would like to do it but we have some IFSTest Oplock test that do not pass and we are looking for some help on it üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,10,https://github.com/dokan-dev/dokany/pull/632#issuecomment-354606142,fix #625,"Hi @Liryna ,

-Is there a reason for creating COMPLETE_SUCCESS instead of using NTSTATUS ? SUCCESS/PENDING
-FILE_NOTIFY_CHANGE_SIZE is needed for IFTest StreamNotifySizeTest

I will modify according to your meaning

-Bool isOk should be renamed to FCBAcquired

The purpose of my design is to return PENGDING if some of the tasks in the complete function can not be completed immediatelyÔºåincluding but not limited to FCB locker ( Although  there is only FCB Locker in this situation now )
In fact, this code modifies three issuesÔºö


#625.


NtCreateSection will  acquired FCB locker before send IRP Ôºå when before this IRP have DokanOptions->ThreadCount IRP acquire this FCB locker will be deadlock.For exampleÔºåthere are DokanOptions->ThreadCount cleanup IRP before NtCreateSection IRP Ôºå all of IRP are same file ÔºåDeviceIoControl will be not return in SendEventInformationÔºåbecause the cleanup IRPs will get the FCB lock, the FCB lock has been owned by  NtCreateSection IRP's thread. The NtCreateSection IRP does not have chance to complte,beacase all work thread not return in DeviceIoControl . This commit greatly reduces the situation, but does not completely fix it. If you want to completely fix this problem, you need to modify many places.


fcb->AdvancedFCBHeader.Flags2 &= ~FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS; If this flag not set Ôºå the windows defender will not auto scan our file system. I observed NTFS file system, windows defender only scan the file once(right-click on an exe),But in dokan file system,windows defender auto scan the file every time(right-click on an exe),this will cause a particularly slow right-click on an exe.This change is not recommended incorporated into the mainstream version,because this change affects the filter file system behavior.



Otherwise, this seems to be a good work üëç
Have you been able to reproduce #625 without and see that it correctly fix it ?

In my environment,this commits correctly fix  #625.

Otherwise, I do not know if you have time or if you would like to do it but we have some IFSTest Oplock test that do not pass and we are looking for some help on it üëç

Tks for inviting me,I may not be able to solve this problem, but I will try to solve it.How can I reproduce this problem?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,11,https://github.com/dokan-dev/dokany/pull/632#issuecomment-356309352,fix #625,Hi @LirynaÔºå üòä,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,12,https://github.com/dokan-dev/dokany/pull/632#issuecomment-356535849,fix #625,"Hi @fanlonglong8500 ,
Sorry year is starting with a lot of things in the same time üëç


fcb->AdvancedFCBHeader.Flags2 &= ~FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS;


Wow I was not aware of that. Did you just see it or have you found something on Microsoft doc about it ?
Regarding the Oplock, the test not running is displayed on the CI, they are made by IFSTest
https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-349/job/bioca6qhxkycxh9t#L957
You can run this test one by one with /t OplockBreakItoIITest
Oplock has a mechanism to make a request pending if it is not available. Maybe fixing this can improve the situation you described in 2) .
https://msdn.microsoft.com/en-us/library/gg607490(v=vs.85).aspx
I will do some test this weekend I promise üëç !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,13,https://github.com/dokan-dev/dokany/pull/632#issuecomment-357500402,fix #625,"Hi @fanlonglong8500 ,
Made some test on my side and it seems to be stable üëç Well done!
Nothing to say about the code else that my previous message. Maybe just some logs in case of allocation failure and when request cannot be queue.
Thank you",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,14,https://github.com/dokan-dev/dokany/pull/632#issuecomment-357512543,fix #625,"Hi @Liryna

Wow I was not aware of that. Did you just see it or have you found something on Microsoft doc about it ?

When I discovered that the right-click exe was particularly slow due to windows defender, I disassembled fltmgr.sys and wdfilter.sys and I found this method can bypass the windows defender check.
I was recently analyzing the program trying to figure out why the right-click exe is particularly slow, but nothing has been done.

Made some test on my side and it seems to be stable üëç Well done!
Nothing to say about the code else that my previous message. Maybe just some logs in case of allocation failure and when request cannot be queue.

I will submit a revised commit according to your opinion, but FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS do not want to change?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,15,https://github.com/dokan-dev/dokany/pull/632#issuecomment-357517181,fix #625,"FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS would mean that we support context for each file streams.
It is probably benefic in the case you describe but I do not know what other features this requires or we already support it.
There is some informations here:
http://www.osronline.com/custom.cfm?name=articlePrint.cfm&id=356
https://msdn.microsoft.com/en-us/library/windows/hardware/ff547285(v=vs.85).aspx",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,16,https://github.com/dokan-dev/dokany/pull/632#issuecomment-360700135,fix #625,"Hi @Liryna ,
Sorry , I am very busy recentlyÔºåbut i found the reason that caused a particularly slow right-click on an exe program.FCB  assicuates a context in wdfilter.sys , windows recoreds the results of the scan using context. when  FCB ref  down to 0, dokan release  FCB and also release the context.So windows scan the file every time. I guess the NTFS cache the FCB ,so the NTFS  does not have this situation.
about context,you can see this: https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/managing-contexts-in-a-minifilter-driver",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,17,https://github.com/dokan-dev/dokany/pull/632#issuecomment-361946007,fix #625,"Hi @Liryna
I modified the new code based on your suggestion,and I add FCB cache to resolve right-click problem.I guess FCB cache may pass some of the previously failed oplock test. Please help me  review the code of FCB cache ,especially in unmount and delete file and file stream .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,18,https://github.com/dokan-dev/dokany/pull/632#issuecomment-363905088,fix #625,"Hi @fanlonglong8500 ,
Just to tell you I have reviewed at the code. it seems to be correct for me üëç
I just need to review and test it more this weekend since it is sensitive part that is touched here.
Sorry for making you wait again.
What is LruFCB compared to cacheFCB ?
As I understood, you have created a fixed cache size that you cleanup it here https://github.com/dokan-dev/dokany/pull/632/files#diff-86caa6b16e4044982075fe5d5bc59915R205 How do you know what should be cleanup or not ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,19,https://github.com/dokan-dev/dokany/pull/632#issuecomment-364030298,fix #625,"Hi @Liryna,
fcbcache contains a LRU list and a hash table.when a fcb FileCount down to 0,the qualified fcb will inserted into hash table and also insert into head of the LRU list.
there are three types of fcb that do not qualify:
1.fcb of stream
2.fcb of create file faild
3.fcb of deleted file
when fcbcache save the number of fcb more than MaxFcbCached,it will delete some recently not used fcb.LRU list help me to achieve these,because the fresh fcb always inserted into head of the LRU list.it is mean recently not used fcb will be at the end of LRU list.
typedef struct _FCB_CACHE_TABLE {
PLIST_ENTRY Table;     //hash table
LIST_ENTRY Lru;        //LRU list
LONG TableSize;        //hash table slot number
LONG MaxFcbCached;     //allow the maximum number of cached fcb
LONG FcbCached;        //current number of cached fcb
}FCB_CACHE_TABLE, *PFCB_CACHE_TABLE;
BOOLEAN DokanInitFCBCache(__in PDokanVCB Vcb, __in LONG TableSize, __in LONG MaxCached)
It is init fcbcache data structs
TableSize:init hash table slot number.if this value is 0, will use the default value(DOKAN_DEFAULT_CACHE_SIZE 509)
MaxCached:init maximum number of cached fcb.if this value is 0, will use the value of TableSize * 2
right-click an exe program:
before:
IRP_MJ_CREATE(In dokan, create new fcb and fcb FileCount is 1;In wdfilter.sys, found new fcb and scan it,store answer of scan into fcb's context)
IRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and free it,FsRtlTeardownPerStreamContexts will callback wdfilter.sys free context)
IRP_MJ_CREATE(In dokan, create new fcb and fcb FileCount is 1;In wdfilter.sys, found new fcb and scan it,store answer of scan into fcb's context)
IRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and free it,FsRtlTeardownPerStreamContexts will callback wdfilter.sys free context)
IRP_MJ_CREATE(In dokan, create new fcb and fcb FileCount is 1;In wdfilter.sys, found new fcb and scan it,store answer of scan into fcb's context)
IRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and free it,FsRtlTeardownPerStreamContexts will callback wdfilter.sys free context)
.....
.....
So the number of wdfilter scanning the same file is the same as the number of IRP_MJ_CREATE
now:
IRP_MJ_CREATE(In dokan, create new fcb and fcb FileCount is 1;In wdfilter.sys, found new fcb and scan it,store answer of scan into fcb's context)
IRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and cache it,FsRtlTeardownPerStreamContexts will not be called)
IRP_MJ_CREATE(In dokan, get old fcb from fcbcache;In wdfilter.sys, found old fcb and pass it)
IRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and cache it,FsRtlTeardownPerStreamContexts will not be called)
IRP_MJ_CREATE(In dokan, get old fcb from fcbcache;In wdfilter.sys, found old fcb and pass it)
IRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and cache it,FsRtlTeardownPerStreamContexts will not be called)
.....
.....
So the number of wdfilter scanning the same file is one.
As long as the value of MaxFcbCached can guarantee that fcb can be cached, during a right-click period,this problem will not appear.I tested default value can work well now.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,20,https://github.com/dokan-dev/dokany/pull/632#issuecomment-368341396,fix #625,"Hi @fanlonglong8500 ,
Thank you for the explanation and seems to be good for me and a good way to handle it üëç
A little late for me now to review exactly all the code, so will need to wait more üò¢ sorry for taking so long, busy days this time.
@marinkobabic if you can give a review and your input on this, it would be appreciated ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/HanixNicolas,21,https://github.com/dokan-dev/dokany/pull/632#issuecomment-389422154,fix #625,"@Liryna  Any news about this?
@fanlonglong8500 Good fix.Thanks.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/HanixNicolas,22,https://github.com/dokan-dev/dokany/pull/632#issuecomment-389818784,fix #625,@fanlonglong8500 I test it on windows 10. It works fine in my ENV.Great fix.üëç,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,23,https://github.com/dokan-dev/dokany/pull/632#issuecomment-389836364,fix #625,"Hi @HanixNicolas ,
I agree this is a great fix üëç I just could not find the time to review all the code and specially about the FCB / FCB Cache changes. Since it is in the driver part, I want to be sure that It cannot create crash / wrong behavior.
@HanixNicolas have you taken a look it ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/HanixNicolas,24,https://github.com/dokan-dev/dokany/pull/632#issuecomment-390069617,fix #625,@Liryna I will spend some time to study the  code and discuss the fix with my friend who is good at Winows Driver.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,25,https://github.com/dokan-dev/dokany/pull/632#issuecomment-390096543,fix #625,@HanixNicolas Oh that would be awesome thank you!,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,26,https://github.com/dokan-dev/dokany/pull/632#issuecomment-391272831,fix #625,"@HanixNicolas If you don't understand my code, we can discuss together",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/HanixNicolas,27,https://github.com/dokan-dev/dokany/pull/632#issuecomment-397781470,fix #625,"@Liryna Hi,I have studied the code and disscused it with my friend.
Do more test both on win7 and win10,all is ok.
Will you merge the code to the master ?
Do you have a plan to release a new version?
@fanlonglong8500 Thank you.Good fix.üëç üëç üëç",True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/HanixNicolas,28,https://github.com/dokan-dev/dokany/pull/632#issuecomment-399810337,fix #625,"@Liryna  Hi, Any news about this?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,29,https://github.com/dokan-dev/dokany/pull/632#issuecomment-402021033,fix #625,"Hi @fanlonglong8500 ,
I am aware that this is taking too long (usually not the case üò¢ ).
What is taking me time to review is the FCB Cache that I still wonder if it is a good solution to do and if that the right way to do.
Otherwise the pageio deadlock code is alright for me. Would you accept if I split your pull request (or you can do it) into two: pageio deadlock / FCB Cache ?
Like that I would merge the pageio deadlock and it would give me some time to look at more the FCB Cache ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/fanlonglong8500,30,https://github.com/dokan-dev/dokany/pull/632#issuecomment-402696120,fix #625,"@Liryna No problem, I understand your thoughts.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,31,https://github.com/dokan-dev/dokany/pull/632#issuecomment-406783247,fix #625,"Hi @fanlonglong8500 ,
I have finally üò≤ been able to import your deadlock fix üëç
607448a
And again....very sorry for this taking so much time üò¢ Thanks again for your contribution !
I let the PR open for the FCB cache for a future review.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,632,2017-12-07T11:46:08Z,2019-10-20T19:44:54Z,2019-10-20T19:44:55Z,CLOSED,False,532,129,15,https://github.com/fanlonglong8500,fix pageio dead lock,8,[],https://github.com/dokan-dev/dokany/pull/632,https://github.com/Liryna,32,https://github.com/dokan-dev/dokany/pull/632#issuecomment-544285388,fix #625,"Oplock and locks have been improved in 1.3.0
Thank you @fanlonglong8500 again for your work üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,655,2018-01-25T17:15:57Z,2018-01-27T12:37:51Z,2018-01-27T12:37:51Z,CLOSED,False,2,0,1,https://github.com/RustyHacksaw,Add the missing session id to the user space dokan1.dll,1,[],https://github.com/dokan-dev/dokany/pull/655,https://github.com/RustyHacksaw,1,https://github.com/dokan-dev/dokany/pull/655,This fixes bug #653 by keeping the two structures in sync.,This fixes bug #653 by keeping the two structures in sync.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,655,2018-01-25T17:15:57Z,2018-01-27T12:37:51Z,2018-01-27T12:37:51Z,CLOSED,False,2,0,1,https://github.com/RustyHacksaw,Add the missing session id to the user space dokan1.dll,1,[],https://github.com/dokan-dev/dokany/pull/655,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/655#issuecomment-360982162,This fixes bug #653 by keeping the two structures in sync.,#653 (comment),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,658,2018-01-30T10:33:25Z,2018-02-25T08:54:41Z,2018-02-25T08:54:41Z,CLOSED,False,17,3,1,https://github.com/HanixNicolas,fix #657,5,[],https://github.com/dokan-dev/dokany/pull/658,https://github.com/HanixNicolas,1,https://github.com/dokan-dev/dokany/pull/658,I have tested it on windows 10 x64 and windows7 x86 .it works.,I have tested it on windows 10 x64 and windows7 x86 .it works.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,658,2018-01-30T10:33:25Z,2018-02-25T08:54:41Z,2018-02-25T08:54:41Z,CLOSED,False,17,3,1,https://github.com/HanixNicolas,fix #657,5,[],https://github.com/dokan-dev/dokany/pull/658,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/658#issuecomment-362502231,I have tested it on windows 10 x64 and windows7 x86 .it works.,"Thank you @HanixNicolas üöÄ
Can you also rebase the history into one commit also ? and I will merge just after.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,658,2018-01-30T10:33:25Z,2018-02-25T08:54:41Z,2018-02-25T08:54:41Z,CLOSED,False,17,3,1,https://github.com/HanixNicolas,fix #657,5,[],https://github.com/dokan-dev/dokany/pull/658,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/658#issuecomment-363332344,I have tested it on windows 10 x64 and windows7 x86 .it works.,"Hi @HanixNicolas ,
Can you just rebase all this commit into one to keep the history clean ? ‚ù§Ô∏è",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,658,2018-01-30T10:33:25Z,2018-02-25T08:54:41Z,2018-02-25T08:54:41Z,CLOSED,False,17,3,1,https://github.com/HanixNicolas,fix #657,5,[],https://github.com/dokan-dev/dokany/pull/658,https://github.com/HanixNicolas,4,https://github.com/dokan-dev/dokany/pull/658#issuecomment-364321878,I have tested it on windows 10 x64 and windows7 x86 .it works.,Hi @Liryna ÔºåI try to rebase itÔºåbut failedÔºåcan you help me to keep the history clean?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,658,2018-01-30T10:33:25Z,2018-02-25T08:54:41Z,2018-02-25T08:54:41Z,CLOSED,False,17,3,1,https://github.com/HanixNicolas,fix #657,5,[],https://github.com/dokan-dev/dokany/pull/658,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/658#issuecomment-365835112,I have tested it on windows 10 x64 and windows7 x86 .it works.,"Hi @HanixNicolas ,
I have added your fix of to the master #659
3ff7654
For #657 we need to see how to act properly not to break ABI",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,658,2018-01-30T10:33:25Z,2018-02-25T08:54:41Z,2018-02-25T08:54:41Z,CLOSED,False,17,3,1,https://github.com/HanixNicolas,fix #657,5,[],https://github.com/dokan-dev/dokany/pull/658,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/658#issuecomment-368293451,I have tested it on windows 10 x64 and windows7 x86 .it works.,"Hi @HanixNicolas ,
The #657 has been included in the master 3c53ddd
Thanks a lot for the both fix and your report üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,666,2018-02-25T13:16:44Z,2018-02-25T13:16:57Z,2018-02-25T15:32:03Z,MERGED,True,902,69,9,https://github.com/Liryna,Add ARM64 build for Windows 10,1,[],https://github.com/dokan-dev/dokany/pull/666,https://github.com/Liryna,1,https://github.com/dokan-dev/dokany/pull/666,"Add ARM64 build for Windows 10
Fix TargetVersion sys.vcxproj
Remove Windows 10 build for ARM","Add ARM64 build for Windows 10
Fix TargetVersion sys.vcxproj
Remove Windows 10 build for ARM",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/linyuan0,1,https://github.com/dokan-dev/dokany/pull/668,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370213173,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Hi @linyuan870 ,
SetLastError was the previous way to give information to the dokan library.
#130 Fuse has not been updated for this case since
Now it is STATUS_OBJECT_NAME_COLLISION that need to be returned

  
    
      dokany/dokan/create.c
    
    
         Line 257
      in
      83be683
    
  
  
    

        
          
           if (!CreateSuccesStatusCheck(status, disposition)) { 
        
    
  


Therefor, all SetLastError  could be even removed.
In your PR, you return always win_error(STATUS_OBJECT_NAME_COLLISION, true); without calling do_open_file. It should be called and return win_error(STATUS_OBJECT_NAME_COLLISION, true); in success.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/linyuan0,3,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370214012,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@Liryna
I think you should have no problem before that, but I use your change has been returned 0.
I think it is if (res == 0 & & .....) This condition is not met, the above call do_open_file function does not return after res == 0.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370214225,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@linyuan870 can you locate if the call we are looking for is made in impl_fuse_context::create_file ? and where exactly ?
Maybe you are right, the res is not equal to 0 and my condition is not met.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/linyuan0,5,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370214357,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@Liryna
fusemain.cpp : impl_fuse_context::create_file",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370214461,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@linyuan870 Can you print the return value of

  
    
      dokany/dokan_fuse/src/fusemain.cpp
    
    
         Line 557
      in
      86a52bf
    
  
  
    

        
          
           int res = do_open_file(file_name, share_mode, access_mode, dokan_file_info); 
        
    
  


I would expected to be this one to be called in our case.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/linyuan0,7,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370215029,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@Liryna

res = 0, also entered that judgment, but the final return of res -1073741771",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370215815,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Thank you @linyuan870 üëç  , -1073741771 ""is the correct value"".
I changed the error type to long 359f085
90c02cd
Can you try with it ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/linyuan0,9,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370216552,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@Liryna
Unfortunately not.
I use return win_error (STATUS_OBJECT_NAME_COLLISION, true); replace
res = win_error (STATUS_OBJECT_NAME_COLLISION, true); is successful, the front also called do_open_file function, you can change it?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/Liryna,10,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370216769,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@linyuan870
      long res = do_open_file(file_name, share_mode, access_mode, dokan_file_info);
      if (res == 0 &&
        (creation_disposition == FILE_OVERWRITE_IF ||
        creation_disposition == FILE_OPEN_IF)) {
        return win_error(STATUS_OBJECT_NAME_COLLISION, true);
      }

      return res;

Like this so ?
What do you mean by ""the front also called do_open_file function"" ? can you link this call ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/linyuan0,11,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370216879,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",@Liryna  YES,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,668,2018-03-04T02:19:37Z,2018-03-04T10:07:27Z,2018-03-04T10:07:27Z,CLOSED,False,5,6,1,https://github.com/linyuan0,FUSE - Fix return correct status when file is FILE_OVERWRITE_IF or FILE_OPEN_IF successfully,1,[],https://github.com/dokan-dev/dokany/pull/668,https://github.com/Liryna,12,https://github.com/dokan-dev/dokany/pull/668#issuecomment-370216979,"Fixes #667  .
Checklist

[x ] My code follows the style guidelines of this project
[x ] I have performed a self-review of my own code
[x ] I have commented my code, particularly in hard-to-understand areas
[x ] I have made corresponding changes to the existing documentation
[x ] My changes generate no new warnings
[x ] I have updated the change log (Add/Change/Fix)
[x ] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Perfect @linyuan870  üëç Thank you !
1394841",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,677,2018-04-08T19:48:29Z,2018-04-14T14:40:19Z,2018-04-14T14:40:21Z,MERGED,True,9,7,1,https://github.com/Daniel-Abrecht,Undo commit bfccd62599ef80899929cbbdf7b8f0fc78f8f07b,1,[],https://github.com/dokan-dev/dokany/pull/677,https://github.com/Daniel-Abrecht,1,https://github.com/dokan-dev/dokany/pull/677,"Reverting commit bfccd62 because it caused a crash in my fuse-nfs builds,
probably because the buffer size given to strncpy was wrong.
Why was this changed in the first place, the additional bound check
seams unnecessary, and it wasn't made sure the string would get null
terminated if it would ever somehow prevent an overflow. The only
way I see this could happen would be if the ""opt"" argument was changed
by a different thread in this tiny moment between strlen and strcpy,
if that's even possible, and even then, why would anyone ever do that,
an attacker would already have control over the program at that stage.","Reverting commit bfccd62 because it caused a crash in my fuse-nfs builds,
probably because the buffer size given to strncpy was wrong.
Why was this changed in the first place, the additional bound check
seams unnecessary, and it wasn't made sure the string would get null
terminated if it would ever somehow prevent an overflow. The only
way I see this could happen would be if the ""opt"" argument was changed
by a different thread in this tiny moment between strlen and strcpy,
if that's even possible, and even then, why would anyone ever do that,
an attacker would already have control over the program at that stage.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,677,2018-04-08T19:48:29Z,2018-04-14T14:40:19Z,2018-04-14T14:40:21Z,MERGED,True,9,7,1,https://github.com/Daniel-Abrecht,Undo commit bfccd62599ef80899929cbbdf7b8f0fc78f8f07b,1,[],https://github.com/dokan-dev/dokany/pull/677,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/677#issuecomment-380337110,"Reverting commit bfccd62 because it caused a crash in my fuse-nfs builds,
probably because the buffer size given to strncpy was wrong.
Why was this changed in the first place, the additional bound check
seams unnecessary, and it wasn't made sure the string would get null
terminated if it would ever somehow prevent an overflow. The only
way I see this could happen would be if the ""opt"" argument was changed
by a different thread in this tiny moment between strlen and strcpy,
if that's even possible, and even then, why would anyone ever do that,
an attacker would already have control over the program at that stage.","Hi @Daniel-Abrecht ,
Thank you for your contribution.
Using strcpy is generally not recommended (code analyzer tools). I understand that here it is safe to use it but since was not hurting to change it I did. I probably failed in the len calculus, this need to be reviewed. Do you think, you could look at which one has an issue ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,677,2018-04-08T19:48:29Z,2018-04-14T14:40:19Z,2018-04-14T14:40:21Z,MERGED,True,9,7,1,https://github.com/Daniel-Abrecht,Undo commit bfccd62599ef80899929cbbdf7b8f0fc78f8f07b,1,[],https://github.com/dokan-dev/dokany/pull/677,https://github.com/Daniel-Abrecht,3,https://github.com/dokan-dev/dokany/pull/677#issuecomment-380591100,"Reverting commit bfccd62 because it caused a crash in my fuse-nfs builds,
probably because the buffer size given to strncpy was wrong.
Why was this changed in the first place, the additional bound check
seams unnecessary, and it wasn't made sure the string would get null
terminated if it would ever somehow prevent an overflow. The only
way I see this could happen would be if the ""opt"" argument was changed
by a different thread in this tiny moment between strlen and strcpy,
if that's even possible, and even then, why would anyone ever do that,
an attacker would already have control over the program at that stage.","Both length calculations are wrong. You passed the length of the whole buffer to strncpy, but you passed the buffer with an offset. You would have to substract that offset from the length of the buffer to get the remaining length of the buffer starting from that offset. But I think it's easier and safer to just use the length of the new option/param and add the nullbyte manually.
Here is a commit for this:
Daniel-Abrecht@aafbf4a
I'm never quiet sure how I should add such changes, if I add it to this pull request it would leaf an unnecessary commit in the git history, but if I open another pull request the discussion get's split into two parts. Can github handle a force push to a commit used to start a pull request? But then the other commit would be lost...",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,677,2018-04-08T19:48:29Z,2018-04-14T14:40:19Z,2018-04-14T14:40:21Z,MERGED,True,9,7,1,https://github.com/Daniel-Abrecht,Undo commit bfccd62599ef80899929cbbdf7b8f0fc78f8f07b,1,[],https://github.com/dokan-dev/dokany/pull/677,https://github.com/Rondom,4,https://github.com/dokan-dev/dokany/pull/677#issuecomment-381294206,"Reverting commit bfccd62 because it caused a crash in my fuse-nfs builds,
probably because the buffer size given to strncpy was wrong.
Why was this changed in the first place, the additional bound check
seams unnecessary, and it wasn't made sure the string would get null
terminated if it would ever somehow prevent an overflow. The only
way I see this could happen would be if the ""opt"" argument was changed
by a different thread in this tiny moment between strlen and strcpy,
if that's even possible, and even then, why would anyone ever do that,
an attacker would already have control over the program at that stage.",GitHub handles force pushes to pull requests fine and will at least nowadays keep the history as well. So one can still see the old commit for reference.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,677,2018-04-08T19:48:29Z,2018-04-14T14:40:19Z,2018-04-14T14:40:21Z,MERGED,True,9,7,1,https://github.com/Daniel-Abrecht,Undo commit bfccd62599ef80899929cbbdf7b8f0fc78f8f07b,1,[],https://github.com/dokan-dev/dokany/pull/677,https://github.com/Daniel-Abrecht,5,https://github.com/dokan-dev/dokany/pull/677#issuecomment-381321372,"Reverting commit bfccd62 because it caused a crash in my fuse-nfs builds,
probably because the buffer size given to strncpy was wrong.
Why was this changed in the first place, the additional bound check
seams unnecessary, and it wasn't made sure the string would get null
terminated if it would ever somehow prevent an overflow. The only
way I see this could happen would be if the ""opt"" argument was changed
by a different thread in this tiny moment between strlen and strcpy,
if that's even possible, and even then, why would anyone ever do that,
an attacker would already have control over the program at that stage.","Ok, I've now made a force push. The new patch just corrects the length calculation and adds the null byte to terminate the strings explicitly. The previous commit seams to have been lost due to that though, it seams github is still not able to retain them if it's the first commit of a pull request.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,677,2018-04-08T19:48:29Z,2018-04-14T14:40:19Z,2018-04-14T14:40:21Z,MERGED,True,9,7,1,https://github.com/Daniel-Abrecht,Undo commit bfccd62599ef80899929cbbdf7b8f0fc78f8f07b,1,[],https://github.com/dokan-dev/dokany/pull/677,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/677#issuecomment-381333717,"Reverting commit bfccd62 because it caused a crash in my fuse-nfs builds,
probably because the buffer size given to strncpy was wrong.
Why was this changed in the first place, the additional bound check
seams unnecessary, and it wasn't made sure the string would get null
terminated if it would ever somehow prevent an overflow. The only
way I see this could happen would be if the ""opt"" argument was changed
by a different thread in this tiny moment between strlen and strcpy,
if that's even possible, and even then, why would anyone ever do that,
an attacker would already have control over the program at that stage.","Hi @Daniel-Abrecht ,
Looks good to me üëç
Thank you for the report again and for providing a quick fix in the same time ü•á !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,682,2018-04-14T14:30:19Z,2022-01-03T01:05:26Z,2022-01-03T01:05:27Z,CLOSED,False,21,394,2,https://github.com/Liryna,SYS - Remove dokan info warning,2,[],https://github.com/dokan-dev/dokany/pull/682,https://github.com/Liryna,1,https://github.com/dokan-dev/dokany/pull/682,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,682,2018-04-14T14:30:19Z,2022-01-03T01:05:26Z,2022-01-03T01:05:27Z,CLOSED,False,21,394,2,https://github.com/Liryna,SYS - Remove dokan info warning,2,[],https://github.com/dokan-dev/dokany/pull/682,https://github.com/kyanha,2,https://github.com/dokan-dev/dokany/pull/682#issuecomment-389724260,,It looks like the AppVeyor build failed because the SonarQube OAuth token is invalid.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,682,2018-04-14T14:30:19Z,2022-01-03T01:05:26Z,2022-01-03T01:05:27Z,CLOSED,False,21,394,2,https://github.com/Liryna,SYS - Remove dokan info warning,2,[],https://github.com/dokan-dev/dokany/pull/682,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/682#issuecomment-389748270,,@kyanha Can you give a link to the failed build? (this is nor related to this issue if you can open a new one please),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,682,2018-04-14T14:30:19Z,2022-01-03T01:05:26Z,2022-01-03T01:05:27Z,CLOSED,False,21,394,2,https://github.com/Liryna,SYS - Remove dokan info warning,2,[],https://github.com/dokan-dev/dokany/pull/682,https://github.com/kyanha,4,https://github.com/dokan-dev/dokany/pull/682#issuecomment-389769563,,"https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-423 -- it's attached to this build.  ""Some checks were not successful"" 1 failing and 1 successful checks",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,682,2018-04-14T14:30:19Z,2022-01-03T01:05:26Z,2022-01-03T01:05:27Z,CLOSED,False,21,394,2,https://github.com/Liryna,SYS - Remove dokan info warning,2,[],https://github.com/dokan-dev/dokany/pull/682,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/682#issuecomment-389770947,,@kyanha this is not releated to the PR and has been fixed in the master 397131f,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,691,2018-05-20T10:14:18Z,2018-12-30T15:48:49Z,2018-12-30T15:48:49Z,CLOSED,False,5,1,1,https://github.com/fossabot,Add license scan report and status,1,[],https://github.com/dokan-dev/dokany/pull/691,https://github.com/fossabot,1,https://github.com/dokan-dev/dokany/pull/691,"Your FOSSA integration was successful! Attached in this PR is a badge and license report to track scan status in your README.
Below are docs for integrating FOSSA license checks into your CI:

CircleCI
TravisCI
Jenkins
Other","Your FOSSA integration was successful! Attached in this PR is a badge and license report to track scan status in your README.
Below are docs for integrating FOSSA license checks into your CI:

CircleCI
TravisCI
Jenkins
Other",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,691,2018-05-20T10:14:18Z,2018-12-30T15:48:49Z,2018-12-30T15:48:49Z,CLOSED,False,5,1,1,https://github.com/fossabot,Add license scan report and status,1,[],https://github.com/dokan-dev/dokany/pull/691,https://github.com/fossabot,2,https://github.com/dokan-dev/dokany/pull/691#issuecomment-450568605,"Your FOSSA integration was successful! Attached in this PR is a badge and license report to track scan status in your README.
Below are docs for integrating FOSSA license checks into your CI:

CircleCI
TravisCI
Jenkins
Other","Your license scan is passing -- congrats!
Your badge status is now updated and ready to merge:",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,691,2018-05-20T10:14:18Z,2018-12-30T15:48:49Z,2018-12-30T15:48:49Z,CLOSED,False,5,1,1,https://github.com/fossabot,Add license scan report and status,1,[],https://github.com/dokan-dev/dokany/pull/691,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/691#issuecomment-450569146,"Your FOSSA integration was successful! Attached in this PR is a badge and license report to track scan status in your README.
Below are docs for integrating FOSSA license checks into your CI:

CircleCI
TravisCI
Jenkins
Other",7d1f001,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,695,2018-06-04T04:50:24Z,2019-05-26T19:49:00Z,2019-05-26T19:49:00Z,CLOSED,False,67,11,4,https://github.com/InspirationHello,"If a file is opened with DELETE_ON_CLOSE, then this file will disappe‚Ä¶",4,[],https://github.com/dokan-dev/dokany/pull/695,https://github.com/InspirationHello,1,https://github.com/dokan-dev/dokany/pull/695,"If one file is opened with DELETE_ON_CLOSE, then this file will disappear in Explorer per CREATE, such as the office's temp file.The Write modification flags should be stored in fileObject->flags.
Fixes # .
The office's temporary files in explorer are looming
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

The Write modification flags should be stored in fileObject->flags.
The DELETE_ON_CLOSE flag should be stored in ccb.","If one file is opened with DELETE_ON_CLOSE, then this file will disappear in Explorer per CREATE, such as the office's temp file.The Write modification flags should be stored in fileObject->flags.
Fixes # .
The office's temporary files in explorer are looming
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

The Write modification flags should be stored in fileObject->flags.
The DELETE_ON_CLOSE flag should be stored in ccb.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,695,2018-06-04T04:50:24Z,2019-05-26T19:49:00Z,2019-05-26T19:49:00Z,CLOSED,False,67,11,4,https://github.com/InspirationHello,"If a file is opened with DELETE_ON_CLOSE, then this file will disappe‚Ä¶",4,[],https://github.com/dokan-dev/dokany/pull/695,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/695#issuecomment-394243045,"If one file is opened with DELETE_ON_CLOSE, then this file will disappear in Explorer per CREATE, such as the office's temp file.The Write modification flags should be stored in fileObject->flags.
Fixes # .
The office's temporary files in explorer are looming
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

The Write modification flags should be stored in fileObject->flags.
The DELETE_ON_CLOSE flag should be stored in ccb.","Hi @InspirationHello ,
Thank you for your pull request.
Can you give some context on the issue you faced and how to reproduce it ?
The files were blinking because of the notification happening too often ?
Have you tried to only call DokanNotifyReportChange(fcb, FILE_NOTIFY_CHANGE_DIR_NAME when ccb has the flag ? We should probably only notify when it is the request that holds the flag.
OplockReadBreakItoIITest test seems to fail with this change.
https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-431/job/fg9xm7q4c2gr1ect?fullLog=true#L1055",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,695,2018-06-04T04:50:24Z,2019-05-26T19:49:00Z,2019-05-26T19:49:00Z,CLOSED,False,67,11,4,https://github.com/InspirationHello,"If a file is opened with DELETE_ON_CLOSE, then this file will disappe‚Ä¶",4,[],https://github.com/dokan-dev/dokany/pull/695,https://github.com/InspirationHello,3,https://github.com/dokan-dev/dokany/pull/695#issuecomment-394259870,"If one file is opened with DELETE_ON_CLOSE, then this file will disappear in Explorer per CREATE, such as the office's temp file.The Write modification flags should be stored in fileObject->flags.
Fixes # .
The office's temporary files in explorer are looming
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

The Write modification flags should be stored in fileObject->flags.
The DELETE_ON_CLOSE flag should be stored in ccb.","Yes, create too often cause blinking.
The delete_on_close change because: Try use office open a pptx/docx/... file, then click the tmp file in the explorer, then the temp file disappeared„ÄÇ
The write change because: write notify cause ReadDirectoryChanges return many times and fastfat also use fileObject to save write modification flag.
The two modification reference fastfat create/write/cleanup.
I have not tried to only call DokanNotifyReportChange(fcb, FILE_NOTIFY_CHANGE_DIR_NAME when ccb has the flag.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,695,2018-06-04T04:50:24Z,2019-05-26T19:49:00Z,2019-05-26T19:49:00Z,CLOSED,False,67,11,4,https://github.com/InspirationHello,"If a file is opened with DELETE_ON_CLOSE, then this file will disappe‚Ä¶",4,[],https://github.com/dokan-dev/dokany/pull/695,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/695#issuecomment-397940937,"If one file is opened with DELETE_ON_CLOSE, then this file will disappear in Explorer per CREATE, such as the office's temp file.The Write modification flags should be stored in fileObject->flags.
Fixes # .
The office's temporary files in explorer are looming
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

The Write modification flags should be stored in fileObject->flags.
The DELETE_ON_CLOSE flag should be stored in ccb.","@InspirationHello have you been able to test using ccb for notification ?
Sorry have been quite busy this day üò¢",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,695,2018-06-04T04:50:24Z,2019-05-26T19:49:00Z,2019-05-26T19:49:00Z,CLOSED,False,67,11,4,https://github.com/InspirationHello,"If a file is opened with DELETE_ON_CLOSE, then this file will disappe‚Ä¶",4,[],https://github.com/dokan-dev/dokany/pull/695,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/695#issuecomment-411652343,"If one file is opened with DELETE_ON_CLOSE, then this file will disappear in Explorer per CREATE, such as the office's temp file.The Write modification flags should be stored in fileObject->flags.
Fixes # .
The office's temporary files in explorer are looming
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

The Write modification flags should be stored in fileObject->flags.
The DELETE_ON_CLOSE flag should be stored in ccb.","Hi @InspirationHello ,
I have include one of your changes in the master 29180c4 Thank you for your contribution.
The other part seems to not be the correct way to do looking at the test failure.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,695,2018-06-04T04:50:24Z,2019-05-26T19:49:00Z,2019-05-26T19:49:00Z,CLOSED,False,67,11,4,https://github.com/InspirationHello,"If a file is opened with DELETE_ON_CLOSE, then this file will disappe‚Ä¶",4,[],https://github.com/dokan-dev/dokany/pull/695,https://github.com/InspirationHello,6,https://github.com/dokan-dev/dokany/pull/695#issuecomment-457087037,"If one file is opened with DELETE_ON_CLOSE, then this file will disappear in Explorer per CREATE, such as the office's temp file.The Write modification flags should be stored in fileObject->flags.
Fixes # .
The office's temporary files in explorer are looming
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

The Write modification flags should be stored in fileObject->flags.
The DELETE_ON_CLOSE flag should be stored in ccb.","I'm so sorry for the delay.

call DokanNotifyReportChange(fcb, FILE_NOTIFY_CHANGE_DIR_NAME when ccb has the flag is OK.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,695,2018-06-04T04:50:24Z,2019-05-26T19:49:00Z,2019-05-26T19:49:00Z,CLOSED,False,67,11,4,https://github.com/InspirationHello,"If a file is opened with DELETE_ON_CLOSE, then this file will disappe‚Ä¶",4,[],https://github.com/dokan-dev/dokany/pull/695,https://github.com/InspirationHello,7,https://github.com/dokan-dev/dokany/pull/695#issuecomment-458457584,"If one file is opened with DELETE_ON_CLOSE, then this file will disappear in Explorer per CREATE, such as the office's temp file.The Write modification flags should be stored in fileObject->flags.
Fixes # .
The office's temporary files in explorer are looming
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

The Write modification flags should be stored in fileObject->flags.
The DELETE_ON_CLOSE flag should be stored in ccb.","in mt, fcb->ShareAccess is not thread safe may cause some file's ShareAccess reference count Incorrect, so cause DokanCheckShareAccess return not expected status,  until the fcb's reference count is zero.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,695,2018-06-04T04:50:24Z,2019-05-26T19:49:00Z,2019-05-26T19:49:00Z,CLOSED,False,67,11,4,https://github.com/InspirationHello,"If a file is opened with DELETE_ON_CLOSE, then this file will disappe‚Ä¶",4,[],https://github.com/dokan-dev/dokany/pull/695,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/695#issuecomment-496026390,"If one file is opened with DELETE_ON_CLOSE, then this file will disappear in Explorer per CREATE, such as the office's temp file.The Write modification flags should be stored in fileObject->flags.
Fixes # .
The office's temporary files in explorer are looming
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

The Write modification flags should be stored in fileObject->flags.
The DELETE_ON_CLOSE flag should be stored in ccb.",#769,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,704,2018-06-24T18:09:28Z,2018-06-24T18:10:13Z,2018-06-24T18:10:19Z,MERGED,True,9,9,9,https://github.com/Daniel-Abrecht,"Revert ""Improve windows header include typo""",1,[],https://github.com/dokan-dev/dokany/pull/704,https://github.com/Daniel-Abrecht,1,https://github.com/dokan-dev/dokany/pull/704,This reverts commit 81eca07. See issue #703 for details.,This reverts commit 81eca07. See issue #703 for details.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,704,2018-06-24T18:09:28Z,2018-06-24T18:10:13Z,2018-06-24T18:10:19Z,MERGED,True,9,9,9,https://github.com/Daniel-Abrecht,"Revert ""Improve windows header include typo""",1,[],https://github.com/dokan-dev/dokany/pull/704,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/704#issuecomment-399775767,This reverts commit 81eca07. See issue #703 for details.,Thank you @Daniel-Abrecht  !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/linyuan0,1,https://github.com/dokan-dev/dokany/pull/713,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/713#issuecomment-403882893,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.",Under which Windows version have you tested this?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/linyuan0,3,https://github.com/dokan-dev/dokany/pull/713#issuecomment-404000698,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.",@Rondom win 10,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Rondom,4,https://github.com/dokan-dev/dokany/pull/713#issuecomment-404218627,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.",What exact version (output of command ¬¥ver¬¥ on command-prompt).,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/linyuan0,5,https://github.com/dokan-dev/dokany/pull/713#issuecomment-404358386,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","@Rondom
Microsoft Windows [Version 10.0.16299.431]",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/713#issuecomment-408325089,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","Hi @linyuan870 ,
The code is fixing the behavior üëç Thank you
There is just a couple of warnings that need to be fixed https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-437/job/a6063i7j3anlyi9k#L7900 and also make the function only called when repase is used.
More over, also handle the return bool from RevertFileName in case of failure.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Rondom,7,https://github.com/dokan-dev/dokany/pull/713#issuecomment-408373365,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","Maybe we can test with latest Windows 10. If I understand it correctly, it should work without this patch on latest update. Maybe we can make it conditional that the code is only run on older Windows versions.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/713#issuecomment-408379493,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","Did not update my windows for now to test it. If this is working, this function should be conditioned on the windows version also yes good point üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/linyuan0,9,https://github.com/dokan-dev/dokany/pull/713#issuecomment-408794538,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","@Liryna sorry for the late reply,

The warning is eliminated;
If
¬†¬†¬†¬†¬†¬†(0 <= FsRtlFindExtraCreateParameter(EcpList, &IopSymlinkECPGuid,
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† (void **)&EcpContext, 0)
return true, that is, re-parse point; return false, that is, not re-parse point, the code will not be executed later; I think this time is not expensive; I don't know how to judge whether it is re-parsing point in the driver, you know Is there any simple way to judge?
I changed the return type of the conversion function to void, because this function, if it is a reparse point, converts the name accordingly; if not, it does not convert.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Rondom,10,https://github.com/dokan-dev/dokany/pull/713#issuecomment-408922822,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","For the record, I just checked Dokan 1.1.0.2000 (i.e. without this patch) on Win 10 1803 and the filenames ended up being lowercase (i.e. this code is not needed on 1803 or later).
Thus I suggest to make this code conditional for versions < 1803 if it is easily possible.",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/linyuan0,11,https://github.com/dokan-dev/dokany/pull/713#issuecomment-409165149,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","@Liryna @Rondom
I made the windows version judgment at the beginning of the RevertFileName function. If the version >=win10 1803, I immediately returned. I did not find a way to use the macro definition to determine the specific system version of windows such as win10 1803; I found a RtlGetVersion function to get system information.
Don't know if this change is OK?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Liryna,12,https://github.com/dokan-dev/dokany/pull/713#issuecomment-409167724,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","Hi @linyuan870 ,
Thank you for the quick changes üëç This seems to be the good way to do it.
You should just set dwOSVersionInfoSize from the struct before calling the function.
See https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/content/wdm/ns-wdm-_osversioninfow",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/linyuan0,13,https://github.com/dokan-dev/dokany/pull/713#issuecomment-409171931,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","@Liryna OK,thank you .",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Liryna,14,https://github.com/dokan-dev/dokany/pull/713#issuecomment-409301017,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.",Thank you @linyuan870 I will do the last test tomorrow and you will be able to make stash all the commit into one,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Rondom,15,https://github.com/dokan-dev/dokany/pull/713#issuecomment-409312490,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","@linyuan870 While you are at it (squashing all commits into one commit) you can apply the diff suggested by Appveyor here:
https://ci.appveyor.com/project/Maxhy/dokany/build/1.2.0-457/job/l7f373swao7mmige/messages
https://ci.appveyor.com/api/buildjobs/l7f373swao7mmige/artifacts/clang_format_267c3bd_into_f538285.diff",True,"{'THUMBS_UP': ['https://github.com/Liryna'], 'HEART': ['https://github.com/Liryna']}"
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/linyuan0,16,https://github.com/dokan-dev/dokany/pull/713#issuecomment-409409589,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.",@Liryna @Rondom OK,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/linyuan0,17,https://github.com/dokan-dev/dokany/pull/713#issuecomment-410995467,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","@Liryna Hi,
Have you conducted the final test? I have squashing all commits into one commit, is it squash like this?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Liryna,18,https://github.com/dokan-dev/dokany/pull/713#issuecomment-411008331,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","Hi @linyuan870 ,
Yes sorry you did the changes correctly. I am just missing time right now but planned to include it for the next release that should be this week or next one üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/Liryna,19,https://github.com/dokan-dev/dokany/pull/713#issuecomment-411648570,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","Hi @linyuan870 ,
I have been able to do the test and found no issue to it. Names are correctly converted thank you üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,713,2018-07-05T10:30:35Z,2018-08-09T06:14:35Z,2018-08-09T06:23:53Z,MERGED,True,78,1,1,https://github.com/linyuan0,Fix: file name are uppercase when reparse point is used?,1,[],https://github.com/dokan-dev/dokany/pull/713,https://github.com/linyuan0,20,https://github.com/dokan-dev/dokany/pull/713#issuecomment-411650300,"Fixes #293  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
According to the information provided by the last one of #293.
https://www.osronline.com/showthread.cfm?link=287522
After making some changes to the code in the article, it successfully compiles and solves the problem. The problem of capitalization is solved, everything becomes normal; I have no problem testing on WIN10, I hope you can compile a driver as soon as possible, I need to use it recently.
The main change is to add a function that converts the name and then call the conversion function at the entry.","@Liryna
Thank you tooÔºÅ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,745,2018-10-22T13:05:57Z,2018-10-23T08:02:55Z,2018-10-23T08:02:56Z,CLOSED,False,1497,71,13,https://github.com/anton-hrytsevich,VHD(X) feature,3,[],https://github.com/dokan-dev/dokany/pull/745,https://github.com/anton-hrytsevich,1,https://github.com/dokan-dev/dokany/pull/745,"Changes proposed in this pull request:
This merge request exist like result of implementing issue #627.
There added full logic to creating VHD(X) disk images on file system with possibility to use auto attaching them in Windows file system.
It can be used for hardware encrypted disks that after sign in operation need show if system like usual disk. It's useful feature for such cases. For now, attached disk has READ ONLY access. Access for writing planing add in near future.
Solution was tested on Windows 10, Windows SDK 10.0.17134.0 and 10.0.16299.0.
See example of use:
mirror.exe /P \\.\PhysicalDrive3 /l C:\testMirror /e /x
/P - drive name
/l - folder for mirroring
/e - auto attach to file system as virtual drive
/x - make VHDX disk

Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Changes proposed in this pull request:
This merge request exist like result of implementing issue #627.
There added full logic to creating VHD(X) disk images on file system with possibility to use auto attaching them in Windows file system.
It can be used for hardware encrypted disks that after sign in operation need show if system like usual disk. It's useful feature for such cases. For now, attached disk has READ ONLY access. Access for writing planing add in near future.
Solution was tested on Windows 10, Windows SDK 10.0.17134.0 and 10.0.16299.0.
See example of use:
mirror.exe /P \\.\PhysicalDrive3 /l C:\testMirror /e /x
/P - drive name
/l - folder for mirroring
/e - auto attach to file system as virtual drive
/x - make VHDX disk

Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,745,2018-10-22T13:05:57Z,2018-10-23T08:02:55Z,2018-10-23T08:02:56Z,CLOSED,False,1497,71,13,https://github.com/anton-hrytsevich,VHD(X) feature,3,[],https://github.com/dokan-dev/dokany/pull/745,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/745#issuecomment-432139469,"Changes proposed in this pull request:
This merge request exist like result of implementing issue #627.
There added full logic to creating VHD(X) disk images on file system with possibility to use auto attaching them in Windows file system.
It can be used for hardware encrypted disks that after sign in operation need show if system like usual disk. It's useful feature for such cases. For now, attached disk has READ ONLY access. Access for writing planing add in near future.
Solution was tested on Windows 10, Windows SDK 10.0.17134.0 and 10.0.16299.0.
See example of use:
mirror.exe /P \\.\PhysicalDrive3 /l C:\testMirror /e /x
/P - drive name
/l - folder for mirroring
/e - auto attach to file system as virtual drive
/x - make VHDX disk

Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)",Duplicate #746,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,746,2018-10-22T13:17:16Z,2020-07-25T12:50:29Z,2020-07-25T12:50:29Z,CLOSED,False,752,403,9,https://github.com/anton-hrytsevich,Feature/vhdx attach supporting,4,[],https://github.com/dokan-dev/dokany/pull/746,https://github.com/anton-hrytsevich,1,https://github.com/dokan-dev/dokany/pull/746,"Changes proposed in this pull request:
This merge request exist like result of implementing issue #627.
There added full logic to creating VHD(X) disk images on file system with possibility to use auto attaching them in Windows file system.
It can be used for hardware encrypted disks that after sign in operation need show if system like usual disk. It's useful feature for such cases. For now, attached disk has READ ONLY access. Access for writing planing add in near future.
Solution was tested on Windows 10, Windows SDK 10.0.17134.0 and 10.0.16299.0.
See example of use:
mirror.exe /P \\.\PhysicalDrive3 /l C:\testMirror /e /x
/P - drive name
/l - folder for mirroring
/e - auto attach to file system as virtual drive
/x - make VHDX disk

Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Changes proposed in this pull request:
This merge request exist like result of implementing issue #627.
There added full logic to creating VHD(X) disk images on file system with possibility to use auto attaching them in Windows file system.
It can be used for hardware encrypted disks that after sign in operation need show if system like usual disk. It's useful feature for such cases. For now, attached disk has READ ONLY access. Access for writing planing add in near future.
Solution was tested on Windows 10, Windows SDK 10.0.17134.0 and 10.0.16299.0.
See example of use:
mirror.exe /P \\.\PhysicalDrive3 /l C:\testMirror /e /x
/P - drive name
/l - folder for mirroring
/e - auto attach to file system as virtual drive
/x - make VHDX disk

Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,746,2018-10-22T13:17:16Z,2020-07-25T12:50:29Z,2020-07-25T12:50:29Z,CLOSED,False,752,403,9,https://github.com/anton-hrytsevich,Feature/vhdx attach supporting,4,[],https://github.com/dokan-dev/dokany/pull/746,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/746#issuecomment-432139311,"Changes proposed in this pull request:
This merge request exist like result of implementing issue #627.
There added full logic to creating VHD(X) disk images on file system with possibility to use auto attaching them in Windows file system.
It can be used for hardware encrypted disks that after sign in operation need show if system like usual disk. It's useful feature for such cases. For now, attached disk has READ ONLY access. Access for writing planing add in near future.
Solution was tested on Windows 10, Windows SDK 10.0.17134.0 and 10.0.16299.0.
See example of use:
mirror.exe /P \\.\PhysicalDrive3 /l C:\testMirror /e /x
/P - drive name
/l - folder for mirroring
/e - auto attach to file system as virtual drive
/x - make VHDX disk

Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Hi @AGritsevich ,
This is a very interesting work !
The issue I have here is that your contribution does not seem to be part of the dokan project but more like a third part FS using dokan.
You should probably create another repository outside dokan to make it public.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,746,2018-10-22T13:17:16Z,2020-07-25T12:50:29Z,2020-07-25T12:50:29Z,CLOSED,False,752,403,9,https://github.com/anton-hrytsevich,Feature/vhdx attach supporting,4,[],https://github.com/dokan-dev/dokany/pull/746,https://github.com/dwalkes,3,https://github.com/dokan-dev/dokany/pull/746#issuecomment-432253375,"Changes proposed in this pull request:
This merge request exist like result of implementing issue #627.
There added full logic to creating VHD(X) disk images on file system with possibility to use auto attaching them in Windows file system.
It can be used for hardware encrypted disks that after sign in operation need show if system like usual disk. It's useful feature for such cases. For now, attached disk has READ ONLY access. Access for writing planing add in near future.
Solution was tested on Windows 10, Windows SDK 10.0.17134.0 and 10.0.16299.0.
See example of use:
mirror.exe /P \\.\PhysicalDrive3 /l C:\testMirror /e /x
/P - drive name
/l - folder for mirroring
/e - auto attach to file system as virtual drive
/x - make VHDX disk

Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Hi @Liryna ,
Thanks for the response.
I have one question about this comment:

The issue I have here is that your contribution does not seem to be part of the dokan project but more like a third part FS using dokan.

Going back to your previous comments in #627:

Usually external projects using dokan are listed on the dokan front page: https://dokan-dev.github.io/
Here I totally understand that it is a great example of implementation in another layer and could be provided as a ""simple"" example to physical disk mirror.


The question of adding it in dokan samples repository (when it will be ready) is about maintaining it for me. I would need some help to maintain it, and this, for an undefined time. It should not be a day to day maintains but still need to follow to changes in dokan. @dwalkes are you willing to be an official maintainer of it if integrated in dokan repository ?

Are you no longer interested in the idea of incorporating a project like this into the samples repository?  Or is there a way @AGritsevich could transform his PR into something we could use there?
Thanks
Dan",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,746,2018-10-22T13:17:16Z,2020-07-25T12:50:29Z,2020-07-25T12:50:29Z,CLOSED,False,752,403,9,https://github.com/anton-hrytsevich,Feature/vhdx attach supporting,4,[],https://github.com/dokan-dev/dokany/pull/746,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/746#issuecomment-432815866,"Changes proposed in this pull request:
This merge request exist like result of implementing issue #627.
There added full logic to creating VHD(X) disk images on file system with possibility to use auto attaching them in Windows file system.
It can be used for hardware encrypted disks that after sign in operation need show if system like usual disk. It's useful feature for such cases. For now, attached disk has READ ONLY access. Access for writing planing add in near future.
Solution was tested on Windows 10, Windows SDK 10.0.17134.0 and 10.0.16299.0.
See example of use:
mirror.exe /P \\.\PhysicalDrive3 /l C:\testMirror /e /x
/P - drive name
/l - folder for mirroring
/e - auto attach to file system as virtual drive
/x - make VHDX disk

Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Hi @dwalkes ,
I am still interested in incorporating projects like this that can be a good sample for people to use for their devs.
@AGritsevich I haven't tested for now but I think the code of mirror_dev.cpp should have his own project and not be an option of the mirror. Especially because of the difference of codes and usage of an external library.
-Also the code of mirror_dev still use the old way to return error code of dokan and not the usage of NTSTATUS
https://github.com/dokan-dev/dokany/pull/746/files#diff-ee370c53bf61e2ba62fa4fe50e14a3eeR185
-vdh.h seems to export VHDFillFixedHeaderSector but is not used as I can see and therefore the vhd.c
-CI is not able to build the project.
-It is a detail but, Copyright (C) 2015 - 2017 is used in mirror_dev did you already started the project in 2017 ?
Like I said, I am looking for sample useful for the community. Here It needs to be polished for being used and packages in the installer.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,746,2018-10-22T13:17:16Z,2020-07-25T12:50:29Z,2020-07-25T12:50:29Z,CLOSED,False,752,403,9,https://github.com/anton-hrytsevich,Feature/vhdx attach supporting,4,[],https://github.com/dokan-dev/dokany/pull/746,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/746#issuecomment-663852074,"Changes proposed in this pull request:
This merge request exist like result of implementing issue #627.
There added full logic to creating VHD(X) disk images on file system with possibility to use auto attaching them in Windows file system.
It can be used for hardware encrypted disks that after sign in operation need show if system like usual disk. It's useful feature for such cases. For now, attached disk has READ ONLY access. Access for writing planing add in near future.
Solution was tested on Windows 10, Windows SDK 10.0.17134.0 and 10.0.16299.0.
See example of use:
mirror.exe /P \\.\PhysicalDrive3 /l C:\testMirror /e /x
/P - drive name
/l - folder for mirroring
/e - auto attach to file system as virtual drive
/x - make VHDX disk

Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)",Closing for inactivity,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Absoblogginlutely,1,https://github.com/dokan-dev/dokany/pull/747,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.","Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/747#issuecomment-432809467,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.","Hi @Absoblogginlutely ,
Thank a lot for the contribution !
I was not aware Confirm-SecureBootUEFI existed ! That's good to know !
Could you just fix the indentation of the powershell script ?
(For the changelog, I will update in a second the versions, you will probably need to merge it)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Absoblogginlutely,3,https://github.com/dokan-dev/dokany/pull/747#issuecomment-433122858,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.",Updated Indentation - I think thats how you would want it. Let me know if not. I think the PR should also go back to pending?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Rondom,4,https://github.com/dokan-dev/dokany/pull/747#issuecomment-433618321,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.","Hello @Absoblogginlutely.
thanks for helping making Dokany better. #589 is about asking the user to DISABLE SecureBoot if it is enabled.
Background:
You cannot use drivers with a self-signed certificate when SecureBoot is enabled. The purpose of the script is to import a self-signed certificate and enabling running drivers signed by self-signed certificates. This is used when running a driver that you build yourself for development purposes. Using that driver signed with a self-signed certificate will fail if SecureBoot is enabled. This is why we want to add a check that SecureBoot is disabled.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/747#issuecomment-433688494,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.","Thank you @Rondom you made a good point here üëç . My bad I did not look enough.
@Absoblogginlutely could you make the changes ? I will validate the PR quick enough for the hacktoberfest.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Absoblogginlutely,6,https://github.com/dokan-dev/dokany/pull/747#issuecomment-435441669,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.",Thanks @Rondom Rondom for the clarification. @Liryna I think it should be good now.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/747#issuecomment-435574993,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.","Hi @Absoblogginlutely ,
Thanks a lot for the quick changes ! Everything seems to be right. @Rondom also for you ?
In the mean time, @Absoblogginlutely could you rebase the commits into one (probably there is going to be a merge conflict with the readme)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Rondom,8,https://github.com/dokan-dev/dokany/pull/747#issuecomment-435680690,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.",Ok from my side. Commit should be squashed into one commit.,True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Absoblogginlutely,9,https://github.com/dokan-dev/dokany/pull/747#issuecomment-435712336,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.",I think this is done correctly - this was tougher than I thought but a great learning experience for a first PR.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,747,2018-10-23T16:47:56Z,2018-11-05T06:48:34Z,2018-11-05T06:48:34Z,MERGED,True,26,8,2,https://github.com/Absoblogginlutely,Fix cert manager,2,[],https://github.com/dokan-dev/dokany/pull/747,https://github.com/Liryna,10,https://github.com/dokan-dev/dokany/pull/747#issuecomment-435771168,"Fixes #589  .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Updated dokan-import.ps1 to check if running as admin and relaunch if not. Also wraps existing function in a check for secureboot being enabled.
First Pull request so hope I did this right.","Hi @Absoblogginlutely ,
Thanks a lot again for your contribution it is very appreciated and glad to see it was a great experience for your first PR ! Hope it will not be the last üòÉ for the opensource !",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,752,2018-11-08T16:16:45Z,2018-11-08T16:17:22Z,2018-11-08T16:35:32Z,CLOSED,False,8,0,4,https://github.com/ishanarora,Sys - Force unmount after multiple consecutive timeout,1,[],https://github.com/dokan-dev/dokany/pull/752,https://github.com/ishanarora,1,https://github.com/dokan-dev/dokany/pull/752,,,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,752,2018-11-08T16:16:45Z,2018-11-08T16:17:22Z,2018-11-08T16:35:32Z,CLOSED,False,8,0,4,https://github.com/ishanarora,Sys - Force unmount after multiple consecutive timeout,1,[],https://github.com/dokan-dev/dokany/pull/752,https://github.com/ishanarora,2,https://github.com/dokan-dev/dokany/pull/752#issuecomment-437062342,,Duplicate of #753,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,753,2018-11-08T16:24:17Z,2018-12-20T07:59:52Z,2018-12-20T07:59:52Z,CLOSED,False,9,0,5,https://github.com/ishanarora,Kernel - Force unmount after multiple consecutive timeout,1,[],https://github.com/dokan-dev/dokany/pull/753,https://github.com/ishanarora,1,https://github.com/dokan-dev/dokany/pull/753,"Fixes #634 #692 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

DokanCheckKeepAlive keeps a count of consecutive timeout detected in dcb->KeepaliveCount .
DokanCheckKeepAlive forces unmount only if dcb->KeepaliveCount reaches DOKAN_KEEPALIVE_COUNT_MAX (3)","Fixes #634 #692 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

DokanCheckKeepAlive keeps a count of consecutive timeout detected in dcb->KeepaliveCount .
DokanCheckKeepAlive forces unmount only if dcb->KeepaliveCount reaches DOKAN_KEEPALIVE_COUNT_MAX (3)",True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,753,2018-11-08T16:24:17Z,2018-12-20T07:59:52Z,2018-12-20T07:59:52Z,CLOSED,False,9,0,5,https://github.com/ishanarora,Kernel - Force unmount after multiple consecutive timeout,1,[],https://github.com/dokan-dev/dokany/pull/753,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/753#issuecomment-439197643,"Fixes #634 #692 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

DokanCheckKeepAlive keeps a count of consecutive timeout detected in dcb->KeepaliveCount .
DokanCheckKeepAlive forces unmount only if dcb->KeepaliveCount reaches DOKAN_KEEPALIVE_COUNT_MAX (3)","Hi @ishanarora ,
Thank you for your pull request üëç
Did you face yourself the issue ?
I just wonder in which case the mirror would not answer, create a timeout during the 5 sec and comes back in the next 2x5sec (DOKAN_KEEPALIVE_COUNT_MAX). Could you just explain what exactly happened on your side and how this fixed it ? Thanks in advance",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,753,2018-11-08T16:24:17Z,2018-12-20T07:59:52Z,2018-12-20T07:59:52Z,CLOSED,False,9,0,5,https://github.com/ishanarora,Kernel - Force unmount after multiple consecutive timeout,1,[],https://github.com/dokan-dev/dokany/pull/753,https://github.com/ishanarora,3,https://github.com/dokan-dev/dokany/pull/753#issuecomment-440924586,"Fixes #634 #692 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

DokanCheckKeepAlive keeps a count of consecutive timeout detected in dcb->KeepaliveCount .
DokanCheckKeepAlive forces unmount only if dcb->KeepaliveCount reaches DOKAN_KEEPALIVE_COUNT_MAX (3)","Hi @Liryna ,
I face issue #634 / #692 where dokany unmounts my cppcryptfs mounts when my Surface Book 2 wakes up from modern standby sleep.
The scenario where the kernel sees a single timeout followed by the userspace process coming back can happen when the system wakes up from sleep/hibernation, or when the userspace process gets busy in a long computational loop (e.g. a key derivation function in a cryptographic driver).",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,753,2018-11-08T16:24:17Z,2018-12-20T07:59:52Z,2018-12-20T07:59:52Z,CLOSED,False,9,0,5,https://github.com/ishanarora,Kernel - Force unmount after multiple consecutive timeout,1,[],https://github.com/dokan-dev/dokany/pull/753,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/753#issuecomment-448907242,"Fixes #634 #692 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

DokanCheckKeepAlive keeps a count of consecutive timeout detected in dcb->KeepaliveCount .
DokanCheckKeepAlive forces unmount only if dcb->KeepaliveCount reaches DOKAN_KEEPALIVE_COUNT_MAX (3)","Hi @ishanarora ,
Thank you for your contribution. I have looked in another way to handle the keepalive.
The mechanism has been changed in the last release to improve could you make a test on your side ?",True,{'THUMBS_UP': ['https://github.com/ishanarora']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,766,2018-12-21T06:43:46Z,2018-12-21T09:30:04Z,2018-12-21T09:30:04Z,CLOSED,False,2,1,2,https://github.com/taruti,Bump versions in DLL,1,[],https://github.com/dokan-dev/dokany/pull/766,https://github.com/taruti,1,https://github.com/dokan-dev/dokany/pull/766,"Fixes #765
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Bump version in DLL. (modified as per comment on the issue).","Fixes #765
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Bump version in DLL. (modified as per comment on the issue).",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,766,2018-12-21T06:43:46Z,2018-12-21T09:30:04Z,2018-12-21T09:30:04Z,CLOSED,False,2,1,2,https://github.com/taruti,Bump versions in DLL,1,[],https://github.com/dokan-dev/dokany/pull/766,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/766#issuecomment-449330855,"Fixes #765
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Bump version in DLL. (modified as per comment on the issue).","Replace by setassembly bump define version
#765
Thank you for the PR @taruti üöÄ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,772,2019-01-15T09:36:44Z,2019-01-20T19:04:36Z,2019-01-20T19:04:39Z,MERGED,True,1,1,1,https://github.com/wjcsharp,sys - The szMountPoint->length should be the byte length.,1,[],https://github.com/dokan-dev/dokany/pull/772,https://github.com/wjcsharp,1,https://github.com/dokan-dev/dokany/pull/772,"During reviewing the security fix for buffer overflow issue. I found the fix may cause other issue. The szMountPoint->length is used as string length but not byte length.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Div sizeof(WCHAR) before comparing with MAX_PATH","During reviewing the security fix for buffer overflow issue. I found the fix may cause other issue. The szMountPoint->length is used as string length but not byte length.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Div sizeof(WCHAR) before comparing with MAX_PATH",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,772,2019-01-15T09:36:44Z,2019-01-20T19:04:36Z,2019-01-20T19:04:39Z,MERGED,True,1,1,1,https://github.com/wjcsharp,sys - The szMountPoint->length should be the byte length.,1,[],https://github.com/dokan-dev/dokany/pull/772,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/772#issuecomment-455892945,"During reviewing the security fix for buffer overflow issue. I found the fix may cause other issue. The szMountPoint->length is used as string length but not byte length.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Div sizeof(WCHAR) before comparing with MAX_PATH","Hi @wjcsharp ,
Indeed this is a mistake ! üëç
Thank you for the PR and for your work that is very appreciated ! ü•á",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,775,2019-01-18T17:34:49Z,2019-01-18T21:15:28Z,2019-01-18T21:15:51Z,MERGED,True,8,0,2,https://github.com/akkishore,expose allocation unit size and sector size to FUSE,1,[],https://github.com/dokan-dev/dokany/pull/775,https://github.com/akkishore,1,https://github.com/dokan-dev/dokany/pull/775,Add allocation unit size and sector size as options in dokany fuse wrapper,Add allocation unit size and sector size as options in dokany fuse wrapper,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,775,2019-01-18T17:34:49Z,2019-01-18T21:15:28Z,2019-01-18T21:15:51Z,MERGED,True,8,0,2,https://github.com/akkishore,expose allocation unit size and sector size to FUSE,1,[],https://github.com/dokan-dev/dokany/pull/775,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/775#issuecomment-455689514,Add allocation unit size and sector size as options in dokany fuse wrapper,"Hi @akkishore ,
Thank you for the contribution ‚ù§Ô∏è very appreciated !. This looks good. Even if the default value set here is 0.
Probably it is better and the dokan value will be set for out of range reason.

  
    
      dokany/dokan/dokan.c
    
    
        Lines 160 to 168
      in
      5d5c7bf
    
  
  
    

        
          
           if ((allocationUnitSize < 512 || allocationUnitSize > 65536 || 
        

        
          
                (allocationUnitSize & (allocationUnitSize - 1)) != 0) // Is power of tow 
        

        
          
               || (sectorSize < 512 || sectorSize > 65536 || 
        

        
          
                   (sectorSize & (sectorSize - 1)))) { // Is power of tow 
        

        
          
             // Reset to default if values does not fit windows FAT/NTFS value 
        

        
          
             // https://support.microsoft.com/en-us/kb/140365 
        

        
          
             DokanOptions->SectorSize = DOKAN_DEFAULT_SECTOR_SIZE; 
        

        
          
             DokanOptions->AllocationUnitSize = DOKAN_DEFAULT_ALLOCATION_UNIT_SIZE; 
        

        
          
           }",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,778,2019-02-03T21:13:39Z,2019-02-05T18:29:42Z,2019-02-06T00:47:43Z,MERGED,True,4,1,2,https://github.com/hans-olav,Increase max thread count from 15 to 63,1,[],https://github.com/dokan-dev/dokany/pull/778,https://github.com/hans-olav,1,https://github.com/dokan-dev/dokany/pull/778,"Change proposed
The limit of 15 dispatcher threads reduces throughput when the client is employing high parallelism, for example by running robocopy /mt:50. I have tested with up to 63 threads with significant stress and everything seems to be running fine. For values 64 or higher, I ran into trouble, so I stopped at 63 for now.
Also note that the Google Drive fork of Dokan has this increased to 50.
Changing this limit does not change the default - it only allows code to specify something higher than 15.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Change proposed
The limit of 15 dispatcher threads reduces throughput when the client is employing high parallelism, for example by running robocopy /mt:50. I have tested with up to 63 threads with significant stress and everything seems to be running fine. For values 64 or higher, I ran into trouble, so I stopped at 63 for now.
Also note that the Google Drive fork of Dokan has this increased to 50.
Changing this limit does not change the default - it only allows code to specify something higher than 15.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)",True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,778,2019-02-03T21:13:39Z,2019-02-05T18:29:42Z,2019-02-06T00:47:43Z,MERGED,True,4,1,2,https://github.com/hans-olav,Increase max thread count from 15 to 63,1,[],https://github.com/dokan-dev/dokany/pull/778,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/778#issuecomment-460094140,"Change proposed
The limit of 15 dispatcher threads reduces throughput when the client is employing high parallelism, for example by running robocopy /mt:50. I have tested with up to 63 threads with significant stress and everything seems to be running fine. For values 64 or higher, I ran into trouble, so I stopped at 63 for now.
Also note that the Google Drive fork of Dokan has this increased to 50.
Changing this limit does not change the default - it only allows code to specify something higher than 15.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","@hans-olav Hi,
Thank you for the pull request. I can understand that this thread limit can be small depending on the user FS needs and cpu resources he has.
Have you looked at the async branch dokan? This should be much interesting for you than growing the thread limit.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,778,2019-02-03T21:13:39Z,2019-02-05T18:29:42Z,2019-02-06T00:47:43Z,MERGED,True,4,1,2,https://github.com/hans-olav,Increase max thread count from 15 to 63,1,[],https://github.com/dokan-dev/dokany/pull/778,https://github.com/hans-olav,3,https://github.com/dokan-dev/dokany/pull/778#issuecomment-460096537,"Change proposed
The limit of 15 dispatcher threads reduces throughput when the client is employing high parallelism, for example by running robocopy /mt:50. I have tested with up to 63 threads with significant stress and everything seems to be running fine. For values 64 or higher, I ran into trouble, so I stopped at 63 for now.
Also note that the Google Drive fork of Dokan has this increased to 50.
Changing this limit does not change the default - it only allows code to specify something higher than 15.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Is the async branch stable yet? Stability is more important than perf :) I would like to stay with mainline I think.

Is there a reason for only 15? Even Google Drive is running with much more.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,778,2019-02-03T21:13:39Z,2019-02-05T18:29:42Z,2019-02-06T00:47:43Z,MERGED,True,4,1,2,https://github.com/hans-olav,Increase max thread count from 15 to 63,1,[],https://github.com/dokan-dev/dokany/pull/778,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/778#issuecomment-460148802,"Change proposed
The limit of 15 dispatcher threads reduces throughput when the client is employing high parallelism, for example by running robocopy /mt:50. I have tested with up to 63 threads with significant stress and everything seems to be running fine. For values 64 or higher, I ran into trouble, so I stopped at 63 for now.
Also note that the Google Drive fork of Dokan has this increased to 50.
Changing this limit does not change the default - it only allows code to specify something higher than 15.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Async branch is not fully stable for now I have to say üëç Still looking for people willing to contribut on it.
15 is a legacy value, we can increase it ofc. I just cannot say what is the ""right"" value. You made your test on what type of hardware ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,778,2019-02-03T21:13:39Z,2019-02-05T18:29:42Z,2019-02-06T00:47:43Z,MERGED,True,4,1,2,https://github.com/hans-olav,Increase max thread count from 15 to 63,1,[],https://github.com/dokan-dev/dokany/pull/778,https://github.com/hans-olav,5,https://github.com/dokan-dev/dokany/pull/778#issuecomment-460156958,"Change proposed
The limit of 15 dispatcher threads reduces throughput when the client is employing high parallelism, for example by running robocopy /mt:50. I have tested with up to 63 threads with significant stress and everything seems to be running fine. For values 64 or higher, I ran into trouble, so I stopped at 63 for now.
Also note that the Google Drive fork of Dokan has this increased to 50.
Changing this limit does not change the default - it only allows code to specify something higher than 15.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","I tested 63 threads on a 4 year old 24 core Xeon server with Server 2016 on it. 63 threads allocates about 63 MB ram for buffers i believe, so still pretty manageable. Going over 63 did not work, I did not dig too deep into why.

Note that we are not changing the default - only the max if the user already specifies something that high.",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,778,2019-02-03T21:13:39Z,2019-02-05T18:29:42Z,2019-02-06T00:47:43Z,MERGED,True,4,1,2,https://github.com/hans-olav,Increase max thread count from 15 to 63,1,[],https://github.com/dokan-dev/dokany/pull/778,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/778#issuecomment-460749961,"Change proposed
The limit of 15 dispatcher threads reduces throughput when the client is employing high parallelism, for example by running robocopy /mt:50. I have tested with up to 63 threads with significant stress and everything seems to be running fine. For values 64 or higher, I ran into trouble, so I stopped at 63 for now.
Also note that the Google Drive fork of Dokan has this increased to 50.
Changing this limit does not change the default - it only allows code to specify something higher than 15.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Thank you for the informations @hans-olav üëç Fully agree with you here.
Your contributions are much appreciated for the dokan project as always üèÜ thank you !",True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,778,2019-02-03T21:13:39Z,2019-02-05T18:29:42Z,2019-02-06T00:47:43Z,MERGED,True,4,1,2,https://github.com/hans-olav,Increase max thread count from 15 to 63,1,[],https://github.com/dokan-dev/dokany/pull/778,https://github.com/hans-olav,7,https://github.com/dokan-dev/dokany/pull/778#issuecomment-460862598,"Change proposed
The limit of 15 dispatcher threads reduces throughput when the client is employing high parallelism, for example by running robocopy /mt:50. I have tested with up to 63 threads with significant stress and everything seems to be running fine. For values 64 or higher, I ran into trouble, so I stopped at 63 for now.
Also note that the Google Drive fork of Dokan has this increased to 50.
Changing this limit does not change the default - it only allows code to specify something higher than 15.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)","Awesome, thanks!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,784,2019-03-04T11:22:07Z,2019-03-06T20:29:48Z,2019-03-07T10:49:09Z,CLOSED,False,19,14,1,https://github.com/TrabacchinLuigi,Keepalive activation race condition in Dokan DLL,1,[],https://github.com/dokan-dev/dokany/pull/784,https://github.com/TrabacchinLuigi,1,https://github.com/dokan-dev/dokany/pull/784,"Fixes #776 #782 #779 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Avoid unpredictable unmount of drives, by ensuring the KeepAlive_handle is valid

All credits goes to @Hasan-Jawaheri for the code changes i just made the pull request and some tests to speed up things","Fixes #776 #782 #779 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Avoid unpredictable unmount of drives, by ensuring the KeepAlive_handle is valid

All credits goes to @Hasan-Jawaheri for the code changes i just made the pull request and some tests to speed up things",True,{'HEART': ['https://github.com/Hasan-Jawaheri']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,784,2019-03-04T11:22:07Z,2019-03-06T20:29:48Z,2019-03-07T10:49:09Z,CLOSED,False,19,14,1,https://github.com/TrabacchinLuigi,Keepalive activation race condition in Dokan DLL,1,[],https://github.com/dokan-dev/dokany/pull/784,https://github.com/Rondom,2,https://github.com/dokan-dev/dokany/pull/784#issuecomment-469648547,"Fixes #776 #782 #779 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Avoid unpredictable unmount of drives, by ensuring the KeepAlive_handle is valid

All credits goes to @Hasan-Jawaheri for the code changes i just made the pull request and some tests to speed up things","You can give credit in the commit itself using git commit --author=""name <email@address>""",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,784,2019-03-04T11:22:07Z,2019-03-06T20:29:48Z,2019-03-07T10:49:09Z,CLOSED,False,19,14,1,https://github.com/TrabacchinLuigi,Keepalive activation race condition in Dokan DLL,1,[],https://github.com/dokan-dev/dokany/pull/784,https://github.com/TrabacchinLuigi,3,https://github.com/dokan-dev/dokany/pull/784#issuecomment-469650370,"Fixes #776 #782 #779 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Avoid unpredictable unmount of drives, by ensuring the KeepAlive_handle is valid

All credits goes to @Hasan-Jawaheri for the code changes i just made the pull request and some tests to speed up things","Argh didn't knew that, I'll try to redo it, but I have small time today...",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,784,2019-03-04T11:22:07Z,2019-03-06T20:29:48Z,2019-03-07T10:49:09Z,CLOSED,False,19,14,1,https://github.com/TrabacchinLuigi,Keepalive activation race condition in Dokan DLL,1,[],https://github.com/dokan-dev/dokany/pull/784,https://github.com/TrabacchinLuigi,4,https://github.com/dokan-dev/dokany/pull/784#issuecomment-469651870,"Fixes #776 #782 #779 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Avoid unpredictable unmount of drives, by ensuring the KeepAlive_handle is valid

All credits goes to @Hasan-Jawaheri for the code changes i just made the pull request and some tests to speed up things",I was wondering: can this be moved to a method and be tested somehow?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,784,2019-03-04T11:22:07Z,2019-03-06T20:29:48Z,2019-03-07T10:49:09Z,CLOSED,False,19,14,1,https://github.com/TrabacchinLuigi,Keepalive activation race condition in Dokan DLL,1,[],https://github.com/dokan-dev/dokany/pull/784,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/784#issuecomment-469731033,"Fixes #776 #782 #779 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Avoid unpredictable unmount of drives, by ensuring the KeepAlive_handle is valid

All credits goes to @Hasan-Jawaheri for the code changes i just made the pull request and some tests to speed up things","Hi @TrabacchinLuigi ,
I understand this fix, but probably we should look deeper into this and understanding what‚Äôs happening and apply a proper fix.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,784,2019-03-04T11:22:07Z,2019-03-06T20:29:48Z,2019-03-07T10:49:09Z,CLOSED,False,19,14,1,https://github.com/TrabacchinLuigi,Keepalive activation race condition in Dokan DLL,1,[],https://github.com/dokan-dev/dokany/pull/784,https://github.com/TrabacchinLuigi,6,https://github.com/dokan-dev/dokany/pull/784#issuecomment-469827550,"Fixes #776 #782 #779 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Avoid unpredictable unmount of drives, by ensuring the KeepAlive_handle is valid

All credits goes to @Hasan-Jawaheri for the code changes i just made the pull request and some tests to speed up things","IMHO this fix solve a nasty situation in a released driver with no significant downsides, I would rather merge this, test, release, and finally look deeper",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,784,2019-03-04T11:22:07Z,2019-03-06T20:29:48Z,2019-03-07T10:49:09Z,CLOSED,False,19,14,1,https://github.com/TrabacchinLuigi,Keepalive activation race condition in Dokan DLL,1,[],https://github.com/dokan-dev/dokany/pull/784,https://github.com/taruti,7,https://github.com/dokan-dev/dokany/pull/784#issuecomment-470220271,"Fixes #776 #782 #779 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Avoid unpredictable unmount of drives, by ensuring the KeepAlive_handle is valid

All credits goes to @Hasan-Jawaheri for the code changes i just made the pull request and some tests to speed up things",Having a release with some fix for this would be very nice.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,784,2019-03-04T11:22:07Z,2019-03-06T20:29:48Z,2019-03-07T10:49:09Z,CLOSED,False,19,14,1,https://github.com/TrabacchinLuigi,Keepalive activation race condition in Dokan DLL,1,[],https://github.com/dokan-dev/dokany/pull/784,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/784#issuecomment-470264183,"Fixes #776 #782 #779 .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Avoid unpredictable unmount of drives, by ensuring the KeepAlive_handle is valid

All credits goes to @Hasan-Jawaheri for the code changes i just made the pull request and some tests to speed up things","Please see #776 (comment)
I will try to make a release with it after the feedback as fast as I can üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,788,2019-03-18T21:24:46Z,2019-03-20T16:06:52Z,2019-03-20T16:43:37Z,MERGED,True,30,23,3,https://github.com/SegaraRai,Library - Use DbgPrintW instead of DbgPrint when printing wide characters,2,[],https://github.com/dokan-dev/dokany/pull/788,https://github.com/SegaraRai,1,https://github.com/dokan-dev/dokany/pull/788,"Made a change in dokan1.dll userspace library.
Fixes #787.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Library - Use DbgPrintW instead of DbgPrint when printing wide characters
Library - Add error check for _vscprintf and vsprintf_s in DokanDbgPrint, and _vscwprintf and vswprintf_s in DokanDbgPrintW","Made a change in dokan1.dll userspace library.
Fixes #787.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Library - Use DbgPrintW instead of DbgPrint when printing wide characters
Library - Add error check for _vscprintf and vsprintf_s in DokanDbgPrint, and _vscwprintf and vswprintf_s in DokanDbgPrintW",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,788,2019-03-18T21:24:46Z,2019-03-20T16:06:52Z,2019-03-20T16:43:37Z,MERGED,True,30,23,3,https://github.com/SegaraRai,Library - Use DbgPrintW instead of DbgPrint when printing wide characters,2,[],https://github.com/dokan-dev/dokany/pull/788,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/788#issuecomment-474904619,"Made a change in dokan1.dll userspace library.
Fixes #787.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Library - Use DbgPrintW instead of DbgPrint when printing wide characters
Library - Add error check for _vscprintf and vsprintf_s in DokanDbgPrint, and _vscwprintf and vswprintf_s in DokanDbgPrintW","Hi @SegaraRai ,
Thanks you for the report and the fix in the same time üëç
Always great to have both in the same üèÜ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,788,2019-03-18T21:24:46Z,2019-03-20T16:06:52Z,2019-03-20T16:43:37Z,MERGED,True,30,23,3,https://github.com/SegaraRai,Library - Use DbgPrintW instead of DbgPrint when printing wide characters,2,[],https://github.com/dokan-dev/dokany/pull/788,https://github.com/SegaraRai,3,https://github.com/dokan-dev/dokany/pull/788#issuecomment-474923016,"Made a change in dokan1.dll userspace library.
Fixes #787.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Library - Use DbgPrintW instead of DbgPrint when printing wide characters
Library - Add error check for _vscprintf and vsprintf_s in DokanDbgPrint, and _vscwprintf and vswprintf_s in DokanDbgPrintW",Thank you too for merging!,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,795,2019-04-16T20:45:28Z,2019-04-17T14:24:58Z,2019-04-17T14:25:00Z,MERGED,True,1,1,1,https://github.com/infeo,Small documentation fix... ,1,[],https://github.com/dokan-dev/dokany/pull/795,https://github.com/infeo,1,https://github.com/dokan-dev/dokany/pull/795,"where Unmounted() operation should reference Mounted() operation and not itself
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
In the documentation of the Unmounted() callback the corresponding other method (Mounted()) is referenced.","where Unmounted() operation should reference Mounted() operation and not itself
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
In the documentation of the Unmounted() callback the corresponding other method (Mounted()) is referenced.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,795,2019-04-16T20:45:28Z,2019-04-17T14:24:58Z,2019-04-17T14:25:00Z,MERGED,True,1,1,1,https://github.com/infeo,Small documentation fix... ,1,[],https://github.com/dokan-dev/dokany/pull/795,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/795#issuecomment-484112387,"where Unmounted() operation should reference Mounted() operation and not itself
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
In the documentation of the Unmounted() callback the corresponding other method (Mounted()) is referenced.","Hi @infeo,
Thank you for pointing this mistake and providing the correction üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,797,2019-05-05T08:01:03Z,2019-10-19T12:35:15Z,2019-11-04T04:09:04Z,CLOSED,False,156,0,2,https://github.com/kyanha,Add build and vars scripts to support building with sonarqube analysis,1,[],https://github.com/dokan-dev/dokany/pull/797,https://github.com/kyanha,1,https://github.com/dokan-dev/dokany/pull/797,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
[] I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add a new script, based on build.bat, which will run the Sonar Scanner for MSBuild and the Sonar MSBuild Build Wrapper against the build.  I understand that the project itself has a Travis Continuous Integration system set up for it; however, this is for the benefit of individual developers who want to run SonarQube/SonarCloud analysis against their own changes.
Modify the vswhere.exe command to reverse-sort the Visual Studio versions installed on the system.  I currently have both VS2017 and VS2019 installed; I found out the hard way that this altered the default output of vswhere.exe.  (I would do a simple version specification, but the version specification language available for vswhere breaks the FOR processing.  See https://developercommunity.visualstudio.com/content/problem/556659/vswhereexe-documented-version-range-syntax-is-mang.html for the bug I filed on it.)
Reorder the build, so that the non-driver builds (both Release and Debug) are in one section and the driver builds (both Release and Debug) are in another.  Also, so that x64 is built before Win32.  This is to work around a SonarQube issue where only the first build is actually processed; this caused the sys/ directory to not show up in the analysis, because it isn't built for the non-OS-version-specific builds.  Building x64 before Win32 is to make it so that the code build that's running on my system is the code that's analyzed, and can be undone if you'd prefer.

If documentation needs to be added to explain what needs to be changed to get it to work (basically, sonarvars.bat needs to be modified to plug in the correct values available from e.g. sonarcloud.io), I'll happily write it.  Also, sonarvars.bat is a separate file so that it can perhaps be added to .gitignore so that secrets don't inadvertently get put in public repositories, while allowing the main logic of the script to be updated as appropriate.","Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
[] I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add a new script, based on build.bat, which will run the Sonar Scanner for MSBuild and the Sonar MSBuild Build Wrapper against the build.  I understand that the project itself has a Travis Continuous Integration system set up for it; however, this is for the benefit of individual developers who want to run SonarQube/SonarCloud analysis against their own changes.
Modify the vswhere.exe command to reverse-sort the Visual Studio versions installed on the system.  I currently have both VS2017 and VS2019 installed; I found out the hard way that this altered the default output of vswhere.exe.  (I would do a simple version specification, but the version specification language available for vswhere breaks the FOR processing.  See https://developercommunity.visualstudio.com/content/problem/556659/vswhereexe-documented-version-range-syntax-is-mang.html for the bug I filed on it.)
Reorder the build, so that the non-driver builds (both Release and Debug) are in one section and the driver builds (both Release and Debug) are in another.  Also, so that x64 is built before Win32.  This is to work around a SonarQube issue where only the first build is actually processed; this caused the sys/ directory to not show up in the analysis, because it isn't built for the non-OS-version-specific builds.  Building x64 before Win32 is to make it so that the code build that's running on my system is the code that's analyzed, and can be undone if you'd prefer.

If documentation needs to be added to explain what needs to be changed to get it to work (basically, sonarvars.bat needs to be modified to plug in the correct values available from e.g. sonarcloud.io), I'll happily write it.  Also, sonarvars.bat is a separate file so that it can perhaps be added to .gitignore so that secrets don't inadvertently get put in public repositories, while allowing the main logic of the script to be updated as appropriate.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,797,2019-05-05T08:01:03Z,2019-10-19T12:35:15Z,2019-11-04T04:09:04Z,CLOSED,False,156,0,2,https://github.com/kyanha,Add build and vars scripts to support building with sonarqube analysis,1,[],https://github.com/dokan-dev/dokany/pull/797,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/797#issuecomment-541515780,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
[] I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add a new script, based on build.bat, which will run the Sonar Scanner for MSBuild and the Sonar MSBuild Build Wrapper against the build.  I understand that the project itself has a Travis Continuous Integration system set up for it; however, this is for the benefit of individual developers who want to run SonarQube/SonarCloud analysis against their own changes.
Modify the vswhere.exe command to reverse-sort the Visual Studio versions installed on the system.  I currently have both VS2017 and VS2019 installed; I found out the hard way that this altered the default output of vswhere.exe.  (I would do a simple version specification, but the version specification language available for vswhere breaks the FOR processing.  See https://developercommunity.visualstudio.com/content/problem/556659/vswhereexe-documented-version-range-syntax-is-mang.html for the bug I filed on it.)
Reorder the build, so that the non-driver builds (both Release and Debug) are in one section and the driver builds (both Release and Debug) are in another.  Also, so that x64 is built before Win32.  This is to work around a SonarQube issue where only the first build is actually processed; this caused the sys/ directory to not show up in the analysis, because it isn't built for the non-OS-version-specific builds.  Building x64 before Win32 is to make it so that the code build that's running on my system is the code that's analyzed, and can be undone if you'd prefer.

If documentation needs to be added to explain what needs to be changed to get it to work (basically, sonarvars.bat needs to be modified to plug in the correct values available from e.g. sonarcloud.io), I'll happily write it.  Also, sonarvars.bat is a separate file so that it can perhaps be added to .gitignore so that secrets don't inadvertently get put in public repositories, while allowing the main logic of the script to be updated as appropriate.",Rewrote in ps here: bd8eb71,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,797,2019-05-05T08:01:03Z,2019-10-19T12:35:15Z,2019-11-04T04:09:04Z,CLOSED,False,156,0,2,https://github.com/kyanha,Add build and vars scripts to support building with sonarqube analysis,1,[],https://github.com/dokan-dev/dokany/pull/797,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/797#issuecomment-544139123,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
[] I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add a new script, based on build.bat, which will run the Sonar Scanner for MSBuild and the Sonar MSBuild Build Wrapper against the build.  I understand that the project itself has a Travis Continuous Integration system set up for it; however, this is for the benefit of individual developers who want to run SonarQube/SonarCloud analysis against their own changes.
Modify the vswhere.exe command to reverse-sort the Visual Studio versions installed on the system.  I currently have both VS2017 and VS2019 installed; I found out the hard way that this altered the default output of vswhere.exe.  (I would do a simple version specification, but the version specification language available for vswhere breaks the FOR processing.  See https://developercommunity.visualstudio.com/content/problem/556659/vswhereexe-documented-version-range-syntax-is-mang.html for the bug I filed on it.)
Reorder the build, so that the non-driver builds (both Release and Debug) are in one section and the driver builds (both Release and Debug) are in another.  Also, so that x64 is built before Win32.  This is to work around a SonarQube issue where only the first build is actually processed; this caused the sys/ directory to not show up in the analysis, because it isn't built for the non-OS-version-specific builds.  Building x64 before Win32 is to make it so that the code build that's running on my system is the code that's analyzed, and can be undone if you'd prefer.

If documentation needs to be added to explain what needs to be changed to get it to work (basically, sonarvars.bat needs to be modified to plug in the correct values available from e.g. sonarcloud.io), I'll happily write it.  Also, sonarvars.bat is a separate file so that it can perhaps be added to .gitignore so that secrets don't inadvertently get put in public repositories, while allowing the main logic of the script to be updated as appropriate.","Done with 739a964
Thank you @kyanha for leading this idea üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,801,2019-05-27T17:04:57Z,2019-06-20T08:11:23Z,2019-06-20T08:11:23Z,CLOSED,False,16,9,1,https://github.com/houcheng,mirror - Get disk free space,1,[],https://github.com/dokan-dev/dokany/pull/801,https://github.com/houcheng,1,https://github.com/dokan-dev/dokany/pull/801,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Gets disk free space in mirror","Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Gets disk free space in mirror",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,801,2019-05-27T17:04:57Z,2019-06-20T08:11:23Z,2019-06-20T08:11:23Z,CLOSED,False,16,9,1,https://github.com/houcheng,mirror - Get disk free space,1,[],https://github.com/dokan-dev/dokany/pull/801,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/801#issuecomment-497022279,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Gets disk free space in mirror","Hi @houcheng
Even if thats not exactly goal of the ticket, it very appreciated and welcomed üëç
Could you just let the fixed value comment just as an example if anyone would like to tweak fixed values?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,801,2019-05-27T17:04:57Z,2019-06-20T08:11:23Z,2019-06-20T08:11:23Z,CLOSED,False,16,9,1,https://github.com/houcheng,mirror - Get disk free space,1,[],https://github.com/dokan-dev/dokany/pull/801,https://github.com/houcheng,3,https://github.com/dokan-dev/dokany/pull/801#issuecomment-497405693,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Gets disk free space in mirror","Hi @Liryna
Got it! Someone may need the fixed value version and may use the comment for
this feature. Or maybe later could add a CLI option for this feature. I've uploaded another
PR that keep the sample code comment. Please have a look at and thank you.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,802,2019-05-30T17:06:42Z,2019-06-16T08:08:14Z,2019-06-16T08:08:14Z,MERGED,True,24,2,1,https://github.com/houcheng,mirror - Get disk free space,1,[],https://github.com/dokan-dev/dokany/pull/802,https://github.com/houcheng,1,https://github.com/dokan-dev/dokany/pull/802,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Gets disk free space in mirror","Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Gets disk free space in mirror",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,802,2019-05-30T17:06:42Z,2019-06-16T08:08:14Z,2019-06-16T08:08:14Z,MERGED,True,24,2,1,https://github.com/houcheng,mirror - Get disk free space,1,[],https://github.com/dokan-dev/dokany/pull/802,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/802#issuecomment-498675648,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Gets disk free space in mirror","Hi @houcheng ,
Thank you, I need to fix the CI before merging it üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,802,2019-05-30T17:06:42Z,2019-06-16T08:08:14Z,2019-06-16T08:08:14Z,MERGED,True,24,2,1,https://github.com/houcheng,mirror - Get disk free space,1,[],https://github.com/dokan-dev/dokany/pull/802,https://github.com/houcheng,3,https://github.com/dokan-dev/dokany/pull/802#issuecomment-501099281,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Gets disk free space in mirror","Hi @Liryna
Got it and thank you~",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,802,2019-05-30T17:06:42Z,2019-06-16T08:08:14Z,2019-06-16T08:08:14Z,MERGED,True,24,2,1,https://github.com/houcheng,mirror - Get disk free space,1,[],https://github.com/dokan-dev/dokany/pull/802,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/802#issuecomment-502430701,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Gets disk free space in mirror",Thank you @houcheng for the contribution ü•á,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/woachk,1,https://github.com/dokan-dev/dokany/pull/803,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/803#issuecomment-498675444,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","Hi @woachk
Thank you for the PR, I haven't moved my env to 2019 for now but will do soon üëç
Just about the SSE2 / ISA I see your point just that it really disables for all other arch here. Does NoExtensions also do not disable everything and not just the SEE2 / ISA (never used the flag) ?
What happens if you use on an older CPU without SSE2 for now ? Should he not just escape it ?
Also moving to 2019, means to update redistributable dependency for the installer.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/woachk,3,https://github.com/dokan-dev/dokany/pull/803#issuecomment-498710133,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","@Liryna SSE/SSE2/AVX are the ISA extensions disabled by NoExtensions, MMX and such are considered as the baseline, and are still enabled in that mode. By default if you don't specify the setting, the baseline for MSVC is SSE2. NoExtensions only covers the ISA extensions.
For now, Dokan just crashes on old systems without SSE2, but there's so little of them these days. (mainly Athlon XPs and Pentium !!!s).
Note that this only affects 32-bit mode of course, and that 64-bit is not affected. On 64-bit Windows, the baseline feature set is SSE2 (+CMPXCHG8B).
2019 again didn't change the VS runtime version like the move from 2015 to 2017, it's still msvcr140 and co, still recommended to update the runtime version though.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/803#issuecomment-500196083,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","Thank you @woachk for all this Information üëç
Am surprise SSE2 is not properly handled. I found an issue in VS 15.5 but it seems to have been fixed since.
https://developercommunity.visualstudio.com/content/problem/166375/avx-instructions-generated-since-155-update.html
Even if it seems to be a compiler bug. I don't think we should disable it just for some minor old CPU 32-bit.
Could you remove the disables SSE ISA extensions commit for your PR ?
For the VS runtime, I agree, I can look into it to update it.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/woachk,5,https://github.com/dokan-dev/dokany/pull/803#issuecomment-500199571,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","@Liryna Hi, that issue was even worse, because AVX is only available on Ivy Bridge onwards (and is not available at all on Pentium and Intel Atom mobile parts, the issue was just way too big to stay).
About CPUs without SSE2, the issue only affects old Athlon XP and Pentium III machines (and earlier), with a sole exception apart from those, the Intel Galileo board with Windows IoT 8.1, which is a special case. Maybe it's just not worth it to support them.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/803#issuecomment-502430880,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","@woachk I do not think it is worth supporting it yes but it is good to know !
Otherwise I would like to merge your vs 2019 / new wdk changes. Could you remove the commit around SSE ? Thank you",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/woachk,7,https://github.com/dokan-dev/dokany/pull/803#issuecomment-502438704,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","Ok, done.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/803#issuecomment-502484114,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","Thank you @woachk there is just two last NoExtensions in the sys project
https://github.com/dokan-dev/dokany/pull/803/files#diff-e8401a5bc872189984bafceb1cf636a5R737",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/woachk,9,https://github.com/dokan-dev/dokany/pull/803#issuecomment-502531359,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","@Liryna It's done on purpose because of https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/floating-point-support-for-64-bit-drivers for Windows 7.
KeSaveExtendedProcessorState isn't used in this driver, and this with enabled ISA extensions can cause dire consequences.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/woachk,10,https://github.com/dokan-dev/dokany/pull/803#issuecomment-502837978,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.","Setting removed because it turns out that it currently works fine without it (tested), might be a tad risky though.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,803,2019-06-01T16:25:17Z,2019-06-18T06:08:56Z,2019-06-18T06:10:13Z,MERGED,True,60,50,8,https://github.com/woachk,Misc tooling + build settings updates.,7,[],https://github.com/dokan-dev/dokany/pull/803,https://github.com/Liryna,11,https://github.com/dokan-dev/dokany/pull/803#issuecomment-502961601,"Update the used SDK + WDK to the one from Windows 10 version 1903.
This also updates the Visual Studio toolset version to VS2019 (v142).
This disables SSE ISA extensions for the Windows 7 kernel drivers & the user-space tools, for compatibility with older machines.",Thank you @woachk üëç for the detail and the pull request. Very appreciated as usual üéñ,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,823,2019-09-16T08:45:11Z,2019-09-16T11:21:24Z,2019-09-16T11:21:24Z,CLOSED,False,40,27,1,https://github.com/Temtaime,Fix using full paths for non-network disks,2,[],https://github.com/dokan-dev/dokany/pull/823,https://github.com/Temtaime,1,https://github.com/dokan-dev/dokany/pull/823,"Fixes #834.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Revert #639666b","Fixes #834.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Revert #639666b",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,823,2019-09-16T08:45:11Z,2019-09-16T11:21:24Z,2019-09-16T11:21:24Z,CLOSED,False,40,27,1,https://github.com/Temtaime,Fix using full paths for non-network disks,2,[],https://github.com/dokan-dev/dokany/pull/823,https://github.com/Temtaime,2,https://github.com/dokan-dev/dokany/pull/823#issuecomment-531691537,"Fixes #834.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Revert #639666b","Please, release minor version with this fix.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,823,2019-09-16T08:45:11Z,2019-09-16T11:21:24Z,2019-09-16T11:21:24Z,CLOSED,False,40,27,1,https://github.com/Temtaime,Fix using full paths for non-network disks,2,[],https://github.com/dokan-dev/dokany/pull/823,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/823#issuecomment-531736227,"Fixes #834.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Revert #639666b",See #824 (comment),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,825,2019-09-16T15:52:52Z,2019-09-29T18:27:14Z,2019-09-29T18:27:25Z,CLOSED,False,16,10,1,https://github.com/Temtaime,Fix #824 Dokany started to fail with Hyper-V,1,[],https://github.com/dokan-dev/dokany/pull/825,https://github.com/Temtaime,1,https://github.com/dokan-dev/dokany/pull/825,"Fixes #824.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Use full paths only with network FSes.","Fixes #824.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Use full paths only with network FSes.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,825,2019-09-16T15:52:52Z,2019-09-29T18:27:14Z,2019-09-29T18:27:25Z,CLOSED,False,16,10,1,https://github.com/Temtaime,Fix #824 Dokany started to fail with Hyper-V,1,[],https://github.com/dokan-dev/dokany/pull/825,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/825#issuecomment-536328150,"Fixes #824.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Use full paths only with network FSes.","Thank you @Temtaime for your PR. See #822
I had to tag you on the commit since I reused your code sorry... üò¢",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,1,https://github.com/dokan-dev/dokany/pull/828,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/828#issuecomment-534691749,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Hi @Ratio2 ,
Thank you for the PR. There are a couple of changes in your PR probably not all related to the issue.
Can you clean it ?
I imagine you are talking about put_utf8 for the infinite loop ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,3,https://github.com/dokan-dev/dokany/pull/828#issuecomment-534718953,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",@Liryna Make cleanup as you requested.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536328056,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Hi @Ratio2 ,
I have tried to reproduce your issue with a small sample outside dokan_fuse and could not reproduce the infinite loop.
 unsigned char src[] = ""üîà"";
 unsigned char dst[16];
 convert_char(get_utf16, put_utf8, src, 2, dst);

Am I doing something different ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,5,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536328358,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@Liryna I reproduce bug in encfs bundle: https://github.com/jetwhiz/encfs4win/releases/download/v1.10.1/encfs-installer.exe, but bug in dokan itself.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536328518,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Hi @jetwhiz,
Do you have any knowledge about such issue ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,7,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536328913,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@Liryna Bug occured when we convert utf-16 to utf-8. We got 4 bytes, but with invalid value. When we decode this utf-8, only 2 bytes consumed instead 4, second 2 bytes return error with negative result and str len increased (negative cast to big number => undefined behavior) instead reducing.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536329105,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",Do you have sample data (src buffer) that I could use to reproduce ?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,9,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536329176,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",@Liryna I don't report this issue to encfs team. Just find problem and fix it in dokan ;),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,10,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536331161,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",@Liryna https://pastebin.com/YzwHM948,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,11,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536332046,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@Liryna Sorry, my test was bad, i fixed it:
int main()
{
	char utf8[5] = ""\xf0\x9f\x94\x88"";
	wchar_t utf8_to_utf16[3] = {};
	auto res = convert_char(get_utf8, put_utf16, utf8, 4, utf8_to_utf16);
	assert(res == 4);
	char utf16_to_utf8[5] = {};
	res = convert_char(get_utf16, put_utf8, utf8_to_utf16, 4, utf16_to_utf8);
	assert(res == 4);
	assert(!strcmp(utf8, utf16_to_utf8));
}",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,12,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536332967,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@Liryna One more simple test:
int main()
{
	wchar_t utf16[3] = L""\xd83d\xdd08"";
	char utf8[5] = {};
	auto res = convert_char(get_utf16, put_utf8, utf16, 4, utf8);
	assert(res == 4);
	assert(utf8[0] != 0); // wtf?
}",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Liryna,13,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536338030,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Thank you very much @Ratio2 ! üèÜ
I am not the author of the dokan_fuse. I was wondering if you understood why the author used the condition if (c < 0x40) ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,14,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536339465,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@Liryna
We have unicode character with code 0x1f508: https://www.unicode.org/charts/PDF/U1F300.pdf
In bits ‚Ä≠11111010100001000‚Ä¨ - 17 bits.
According to utf-8 we can encode 16 bits to 3 bytes and 21 bits to 4 bytes: https://en.wikipedia.org/wiki/UTF-8#Description
Split to 4 byte utf-8: 000 011111 010100 001000. First byte is zero, but it must be exists, author of original code make mistake assuming that first byte can not be zero and remain garbage in first byte ;)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Ratio2,15,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536340048,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",@Liryna Condition if (c < 0x40) check if remain 6 bits or less (max bits per utf-8 byte if encoded more then one).,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Liryna,16,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536697007,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Thank you @Ratio2 this explanation is very helpful üëç
More special thank for your PR, please do not hesitate if you find anything else üöÄ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/jetwhiz,17,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536803560,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Thanks @Ratio2 and @Liryna !
I wonder if this is related to the issue regarding Thai characters eating up 100% CPU resources?  jetwhiz/encfs4win#94  Do Thai characters fall into this category?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,828,2019-09-22T11:06:41Z,2019-09-30T18:44:03Z,2019-10-01T06:28:40Z,MERGED,True,3,5,1,https://github.com/Ratio2,Fix infinite loop when using characters from unicode supplementary pl‚Ä¶,1,[],https://github.com/dokan-dev/dokany/pull/828,https://github.com/Liryna,18,https://github.com/dokan-dev/dokany/pull/828#issuecomment-536888099,"‚Ä¶anes ('üîà' for example)
Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Hi @jetwhiz
http://www.ltg.ed.ac.uk/~richard/utf-8.cgi?input=%E0%B8%8B%E0%B9%88&mode=char
utf8 code also starts with a zero so therefore the same case as @Ratio2 reported.
I just made and test and I can confirm. Previous code corrupted the character but with @Ratio2 fix, we get the correct value üëç",True,{'THUMBS_UP': ['https://github.com/jetwhiz']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,833,2019-10-07T07:17:53Z,2019-10-07T18:55:44Z,2019-10-07T18:56:42Z,MERGED,True,23,12,2,https://github.com/Lukas0610,Clarify documentation of dokan file-change notification functions,3,[],https://github.com/dokan-dev/dokany/pull/833,https://github.com/Lukas0610,1,https://github.com/dokan-dev/dokany/pull/833,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Clarifies the documentation of the DokanNotify*-functions introduced with version 1.3.0 to prevent incorrect implementations like discussed in dokan-dev/dokan-dotnet#236","Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Clarifies the documentation of the DokanNotify*-functions introduced with version 1.3.0 to prevent incorrect implementations like discussed in dokan-dev/dokan-dotnet#236",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,833,2019-10-07T07:17:53Z,2019-10-07T18:55:44Z,2019-10-07T18:56:42Z,MERGED,True,23,12,2,https://github.com/Lukas0610,Clarify documentation of dokan file-change notification functions,3,[],https://github.com/dokan-dev/dokany/pull/833,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/833#issuecomment-539155258,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Clarifies the documentation of the DokanNotify*-functions introduced with version 1.3.0 to prevent incorrect implementations like discussed in dokan-dev/dokan-dotnet#236",Thank you @Lukas0610 for your feedback and changes on this part of the documentation üëè,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,835,2019-10-09T20:36:22Z,2019-10-13T15:11:34Z,2019-10-13T15:11:34Z,MERGED,True,129,1,3,https://github.com/xgcssch,Kernel - Added support for FileIdExtdBothDirectoryInformation,1,[],https://github.com/dokan-dev/dokany/pull/835,https://github.com/xgcssch,1,https://github.com/dokan-dev/dokany/pull/835,"The support for FileIdExtdBothDirectoryInformation is required when the target is mapped as a volume into docker containers.
Checklist

[x ] My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
[ n/a] I have made corresponding changes to the existing documentation
[ x] My changes generate no new warnings
[ x] I have updated the change log (Add/Change/Fix)
[ n/a] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Problem:
When a dokan mountpoint is used to map a volume into a Docker container, there is a problem changing to a subdirectory below the mountpoint.
Steps to reproduce

A directory c:\mytarget with subdirectories A and B
docker must be installed
mirror.exe /r c:\mytarget /l c:\docker\volume /w /d /s
docker run -ti -v c:\docker\volume:c:\targetinside mcr.microsoft.com/windows/servercore:1903
Inside the container cd \targetinside
cd B
The new subdirectory is now A
The debug output shows:

...
###GetFileInfo 0031
GetFileInfo : c:\mytarget\
        GetFileInformationByHandle success, file size = 0
FILE ATTRIBUTE  = 48
        result =  0
        FileInternalInformation
        DispatchQueryInformation result =  0
not suported type 63
not suported type 63
###FindFiles 0031
FindFiles : c:\mytarget\
        FindFiles return 2 entries in c:\mytarget\*

index from 0
FileMatch? : A (*,0,0)
  =>return single entry
index to 1
###GetFileInfo 0029
...

63 is FileIdExtdBothDirectoryInformation
This pull request adds support for this event.
The correct subdirectory can be selected after applying the fix.","The support for FileIdExtdBothDirectoryInformation is required when the target is mapped as a volume into docker containers.
Checklist

[x ] My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
[ n/a] I have made corresponding changes to the existing documentation
[ x] My changes generate no new warnings
[ x] I have updated the change log (Add/Change/Fix)
[ n/a] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Problem:
When a dokan mountpoint is used to map a volume into a Docker container, there is a problem changing to a subdirectory below the mountpoint.
Steps to reproduce

A directory c:\mytarget with subdirectories A and B
docker must be installed
mirror.exe /r c:\mytarget /l c:\docker\volume /w /d /s
docker run -ti -v c:\docker\volume:c:\targetinside mcr.microsoft.com/windows/servercore:1903
Inside the container cd \targetinside
cd B
The new subdirectory is now A
The debug output shows:

...
###GetFileInfo 0031
GetFileInfo : c:\mytarget\
        GetFileInformationByHandle success, file size = 0
FILE ATTRIBUTE  = 48
        result =  0
        FileInternalInformation
        DispatchQueryInformation result =  0
not suported type 63
not suported type 63
###FindFiles 0031
FindFiles : c:\mytarget\
        FindFiles return 2 entries in c:\mytarget\*

index from 0
FileMatch? : A (*,0,0)
  =>return single entry
index to 1
###GetFileInfo 0029
...

63 is FileIdExtdBothDirectoryInformation
This pull request adds support for this event.
The correct subdirectory can be selected after applying the fix.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,835,2019-10-09T20:36:22Z,2019-10-13T15:11:34Z,2019-10-13T15:11:34Z,MERGED,True,129,1,3,https://github.com/xgcssch,Kernel - Added support for FileIdExtdBothDirectoryInformation,1,[],https://github.com/dokan-dev/dokany/pull/835,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/835#issuecomment-541426735,"The support for FileIdExtdBothDirectoryInformation is required when the target is mapped as a volume into docker containers.
Checklist

[x ] My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
[ n/a] I have made corresponding changes to the existing documentation
[ x] My changes generate no new warnings
[ x] I have updated the change log (Add/Change/Fix)
[ n/a] I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Problem:
When a dokan mountpoint is used to map a volume into a Docker container, there is a problem changing to a subdirectory below the mountpoint.
Steps to reproduce

A directory c:\mytarget with subdirectories A and B
docker must be installed
mirror.exe /r c:\mytarget /l c:\docker\volume /w /d /s
docker run -ti -v c:\docker\volume:c:\targetinside mcr.microsoft.com/windows/servercore:1903
Inside the container cd \targetinside
cd B
The new subdirectory is now A
The debug output shows:

...
###GetFileInfo 0031
GetFileInfo : c:\mytarget\
        GetFileInformationByHandle success, file size = 0
FILE ATTRIBUTE  = 48
        result =  0
        FileInternalInformation
        DispatchQueryInformation result =  0
not suported type 63
not suported type 63
###FindFiles 0031
FindFiles : c:\mytarget\
        FindFiles return 2 entries in c:\mytarget\*

index from 0
FileMatch? : A (*,0,0)
  =>return single entry
index to 1
###GetFileInfo 0029
...

63 is FileIdExtdBothDirectoryInformation
This pull request adds support for this event.
The correct subdirectory can be selected after applying the fix.","Thank you @xgcssch for the PR and your contribution.
Well done looking into your issue and finding only this File Info was missing for docker to work üèÜ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,838,2019-10-13T02:34:23Z,2019-10-19T12:35:20Z,2019-10-19T12:35:20Z,MERGED,True,90,35,7,https://github.com/kyanha,Enable code analysis for all debug configurations in Visual Studio,1,[],https://github.com/dokan-dev/dokany/pull/838,https://github.com/kyanha,1,https://github.com/dokan-dev/dokany/pull/838,"Fixes #837.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Enable Code Analysis warnings for all debug configurations
(cannot say ""my changes generate no new warnings"", because the entire point is that it exposes warnings that should already be generated)","Fixes #837.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Enable Code Analysis warnings for all debug configurations
(cannot say ""my changes generate no new warnings"", because the entire point is that it exposes warnings that should already be generated)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Karandra,1,https://github.com/dokan-dev/dokany/pull/845,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.","Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Karandra,2,https://github.com/dokan-dev/dokany/pull/845#issuecomment-549467033,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.","Sorry, I'm idiot and couldn't find all places with DokanInit at once.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Karandra,3,https://github.com/dokan-dev/dokany/pull/845#issuecomment-549535706,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.",Now it has been built successfully.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/845#issuecomment-549543273,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.","Hi @KerberX ,
That's a good idea! Look at the function pointer, would it not be better to directly call the user function instead of our ? This way he will manage as he wants how to log it.
Like DokanDbgPrint would create the debug output and then call PDokanDbgPrint -> return Or follow the current output path.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Karandra,5,https://github.com/dokan-dev/dokany/pull/845#issuecomment-549545193,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.","Yeah, that would be better indeed. I'll make the changes.
Could it be possible to implement such thing for v1.x? As far as I know there is no global Init/Shutdown routine that can initialize logging functions.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/845#issuecomment-549547831,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.","It can be possible to implement it yes at mount time.
This makes me think we should (my point of view) maybe add a param to inform from which instance this log comes from ?
Or maybe not use global function pointers but function pointer attached to the instance.
I agree this is more than this PR as it is already the case to log all instances at the same place üòÉ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Karandra,7,https://github.com/dokan-dev/dokany/pull/845#issuecomment-549551485,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.","Or maybe not use global function pointers but function pointer attached to the instance.

In the same fashion as operation callbacks? I'd like that solution.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/845#issuecomment-549556780,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.",Yes this way but maybe not directly to the dokanoperations üòÑ,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Liryna,9,https://github.com/dokan-dev/dokany/pull/845#issuecomment-1006946579,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.","The new V2 has a new mandatory API named DokanInit.
@Karandra if you are still interested, it would be great if you could port your work by using the API to register the struct logging functions.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,845,2019-11-04T16:47:26Z,,2022-01-06T21:45:09Z,OPEN,False,51,22,6,https://github.com/Karandra,Log redirection (v2.0),5,[],https://github.com/dokan-dev/dokany/pull/845,https://github.com/Karandra,10,https://github.com/dokan-dev/dokany/pull/845#issuecomment-1006957184,"Adds log redirection options.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
Currently there is no way to make Dokany log its operation to user-defined target. There is an option to use stderr instead of OutputDebugStringA/W but that might not be desirable to the library user.
I've added a struct with two function to be provided by the library user that will take formatted debug string and return a BOOL value which indicated in Dokany should proceed with its own debug output. The value is TRUE by default so in case the used didn't provide any log redirection function the library will output log itself.",I'll see what I can do. I still need to see has been changed between that version and the current one.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,850,2019-11-13T08:28:50Z,2019-11-19T20:33:02Z,2019-11-19T20:33:02Z,MERGED,True,9,1,1,https://github.com/nightwend,"append to file failed with git bash echo "">>"" ",2,[],https://github.com/dokan-dev/dokany/pull/850,https://github.com/nightwend,1,https://github.com/dokan-dev/dokany/pull/850,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
git bash append to file use -1 as offset. NTFS works well with it. dokany fuse reject -1 as offset. The patch load file size as offset.
dokany fuse check for share mode in open file. But it includes the share mode requested in the open file request. It blocks windows ""echo >>xxx"" appending command from cmd.","Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
git bash append to file use -1 as offset. NTFS works well with it. dokany fuse reject -1 as offset. The patch load file size as offset.
dokany fuse check for share mode in open file. But it includes the share mode requested in the open file request. It blocks windows ""echo >>xxx"" appending command from cmd.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,850,2019-11-13T08:28:50Z,2019-11-19T20:33:02Z,2019-11-19T20:33:02Z,MERGED,True,9,1,1,https://github.com/nightwend,"append to file failed with git bash echo "">>"" ",2,[],https://github.com/dokan-dev/dokany/pull/850,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/850#issuecomment-555699110,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
git bash append to file use -1 as offset. NTFS works well with it. dokany fuse reject -1 as offset. The patch load file size as offset.
dokany fuse check for share mode in open file. But it includes the share mode requested in the open file request. It blocks windows ""echo >>xxx"" appending command from cmd.","Hi @nightwend ,
Thank you for your pull request very appreciated and sorry for the delay !
You are right about write -1 offset üëç it needs to be handled as you did
To write to the end of file, specify both the Offset and OffsetHigh members of the OVERLAPPED structure as 0xFFFFFFFF. This is functionally equivalent to previously calling the CreateFile function to open hFile using FILE_APPEND_DATA access.
https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-writefile",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/ravenpride,1,https://github.com/dokan-dev/dokany/pull/857,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).","Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).",True,{'THUMBS_UP': ['https://github.com/Rondom']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/ravenpride,2,https://github.com/dokan-dev/dokany/pull/857#issuecomment-571085473,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).","Two things to mention:

The PR renames same includes to lower case as mingw contains these headers in the lower-case form. It does not harm when building on Windows as file names are case-insensitive there.
In dokan.rc there was winres.h included. Some environments do not contain winres.h (such as mingw), using afxres.h would work, but breaks builds that do not know anything about the MFC. I think a good workaround is to simply include windows.h in this case. This header is always available when building for Windows.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/ravenpride,3,https://github.com/dokan-dev/dokany/pull/857#issuecomment-571085792,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).","I've finished and the PR is ready for review.
Thank you very much in advance!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/ravenpride,4,https://github.com/dokan-dev/dokany/pull/857#issuecomment-571137867,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).",I've found a better alternative to including windows.h in dokan.rc here. The last commit integrates this. Including windows.h has the downside that it does not set IDC_STATIC as afxres.h and winres.h does.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/Rondom,5,https://github.com/dokan-dev/dokany/pull/857#issuecomment-571140476,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).",Good work :-),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/857#issuecomment-571274003,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).","@ravenpride Thank you very much for the contribution! That's an interesting one :)!
Have a couple of things going on but be sure I will look to review/merge your PR in the next days.
Do you think there would be a sense to include those binaries in the installer?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/ravenpride,7,https://github.com/dokan-dev/dokany/pull/857#issuecomment-571509013,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).","@ravenpride Thank you very much for the contribution! That's an interesting one :)!
Have a couple of things going on but be sure I will look to review/merge your PR in the next days.
Do you think there would be a sense to include those binaries in the installer?

Which binaries do you mean? This PR does not introduce any new files.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/857#issuecomment-572460273,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).",@ravenpride Not yet :-D but if it sounds interesting for some people we can add gcc build of the dokan library now that your PR allows it and we can propose them on the installer.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/ravenpride,9,https://github.com/dokan-dev/dokany/pull/857#issuecomment-572566506,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).","@Liryna Please notice that this PR focuses on the dokan subproject. I've not tested building the other subprojects as they were not needed. I've written a CMake configuration to build it, if you're interested.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/ravenpride,10,https://github.com/dokan-dev/dokany/pull/857#issuecomment-573450921,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).",Should I squash the changes before the merge?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/Liryna,11,https://github.com/dokan-dev/dokany/pull/857#issuecomment-573451773,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).",@ravenpride Yes please! Thanks you,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/ravenpride,12,https://github.com/dokan-dev/dokany/pull/857#issuecomment-573452362,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).","Ok, I've squashed the commits.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/Liryna,13,https://github.com/dokan-dev/dokany/pull/857#issuecomment-575594216,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).","Hi @ravenpride
Sorry for the long delay, I should be quicker now to review PR if you have other idea pending so please do not hesitate.
Thank you again for the contributions it is always appreciated ! üèÜ",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,857,2020-01-05T20:11:58Z,2020-01-17T11:44:47Z,2020-01-17T12:41:26Z,MERGED,True,37,12,6,https://github.com/ravenpride,Add support for compiling with GCC,1,[],https://github.com/dokan-dev/dokany/pull/857,https://github.com/ravenpride,14,https://github.com/dokan-dev/dokany/pull/857#issuecomment-575610612,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas (does not apply)
 I have made corresponding changes to the existing documentation (does not apply)
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR adds support for cross-compiling the dokan subproject with GCC and mingw32-w64.
Building with mingw32-w64 eliminates the dependency to the Visual Studio C++ Runtime and allows building on a Linux build server (all our projects - even those targetting Windows - are built on Linux).",@Liryna Thank you for merging :-),True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,858,2020-01-07T08:24:45Z,2020-01-27T15:43:09Z,2020-01-27T15:43:45Z,MERGED,True,3,1,1,https://github.com/hefengliang,fix read file exception,3,[],https://github.com/dokan-dev/dokany/pull/858,https://github.com/hefengliang,1,https://github.com/dokan-dev/dokany/pull/858,"Fixes # .
When reading data with a large delay, the IRP times out, which will cause the file object to be accidentally released.
When reading data in multiple reads, due to the dependency on the file object (hndl-> get_name ()), uncontrollable pointer errors will result.
This question has also been asked before: #734
I fixed this problem, and through actual testing, I found that there would be no more file reading problems, but I do n‚Äôt know if the data returned by read can still be received by the kernel and processed correctly when the file object is released. At least my application looks normal.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Compare the code, only two lines of code changed","Fixes # .
When reading data with a large delay, the IRP times out, which will cause the file object to be accidentally released.
When reading data in multiple reads, due to the dependency on the file object (hndl-> get_name ()), uncontrollable pointer errors will result.
This question has also been asked before: #734
I fixed this problem, and through actual testing, I found that there would be no more file reading problems, but I do n‚Äôt know if the data returned by read can still be received by the kernel and processed correctly when the file object is released. At least my application looks normal.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Compare the code, only two lines of code changed",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,858,2020-01-07T08:24:45Z,2020-01-27T15:43:09Z,2020-01-27T15:43:45Z,MERGED,True,3,1,1,https://github.com/hefengliang,fix read file exception,3,[],https://github.com/dokan-dev/dokany/pull/858,https://github.com/hefengliang,2,https://github.com/dokan-dev/dokany/pull/858#issuecomment-571487057,"Fixes # .
When reading data with a large delay, the IRP times out, which will cause the file object to be accidentally released.
When reading data in multiple reads, due to the dependency on the file object (hndl-> get_name ()), uncontrollable pointer errors will result.
This question has also been asked before: #734
I fixed this problem, and through actual testing, I found that there would be no more file reading problems, but I do n‚Äôt know if the data returned by read can still be received by the kernel and processed correctly when the file object is released. At least my application looks normal.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Compare the code, only two lines of code changed",This is the state when the exception occurredÔºö,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,858,2020-01-07T08:24:45Z,2020-01-27T15:43:09Z,2020-01-27T15:43:45Z,MERGED,True,3,1,1,https://github.com/hefengliang,fix read file exception,3,[],https://github.com/dokan-dev/dokany/pull/858,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/858#issuecomment-572733263,"Fixes # .
When reading data with a large delay, the IRP times out, which will cause the file object to be accidentally released.
When reading data in multiple reads, due to the dependency on the file object (hndl-> get_name ()), uncontrollable pointer errors will result.
This question has also been asked before: #734
I fixed this problem, and through actual testing, I found that there would be no more file reading problems, but I do n‚Äôt know if the data returned by read can still be received by the kernel and processed correctly when the file object is released. At least my application looks normal.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Compare the code, only two lines of code changed","Hi @hefengliang ,
I see your situation, you are getting a read / write after the object was released. This fix just avoid the crash but do not fix the behavior.
You can get a read / write after the cleanup but not after the close. Can you track when the name is released in your case ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,858,2020-01-07T08:24:45Z,2020-01-27T15:43:09Z,2020-01-27T15:43:45Z,MERGED,True,3,1,1,https://github.com/hefengliang,fix read file exception,3,[],https://github.com/dokan-dev/dokany/pull/858,https://github.com/hefengliang,4,https://github.com/dokan-dev/dokany/pull/858#issuecomment-572960409,"Fixes # .
When reading data with a large delay, the IRP times out, which will cause the file object to be accidentally released.
When reading data in multiple reads, due to the dependency on the file object (hndl-> get_name ()), uncontrollable pointer errors will result.
This question has also been asked before: #734
I fixed this problem, and through actual testing, I found that there would be no more file reading problems, but I do n‚Äôt know if the data returned by read can still be received by the kernel and processed correctly when the file object is released. At least my application looks normal.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Compare the code, only two lines of code changed","In my application, this problem only occurs in the case of a poor network. Due to the complicated environment, please forgive me for not being able to write a demo. I exported an abnormal dmp file. Is it useful to you?
dmp is based on Dokan Library-1.3.1 \ x86.
Since there is a 10M limit here, I sent the dmp file to your email addressÔºöliryna.stark@gmail.com",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,858,2020-01-07T08:24:45Z,2020-01-27T15:43:09Z,2020-01-27T15:43:45Z,MERGED,True,3,1,1,https://github.com/hefengliang,fix read file exception,3,[],https://github.com/dokan-dev/dokany/pull/858,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/858#issuecomment-575600031,"Fixes # .
When reading data with a large delay, the IRP times out, which will cause the file object to be accidentally released.
When reading data in multiple reads, due to the dependency on the file object (hndl-> get_name ()), uncontrollable pointer errors will result.
This question has also been asked before: #734
I fixed this problem, and through actual testing, I found that there would be no more file reading problems, but I do n‚Äôt know if the data returned by read can still be received by the kernel and processed correctly when the file object is released. At least my application looks normal.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Compare the code, only two lines of code changed",Sorry for the delay @hefengliang Could you please rebase the commit into one for me to merge ?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,858,2020-01-07T08:24:45Z,2020-01-27T15:43:09Z,2020-01-27T15:43:45Z,MERGED,True,3,1,1,https://github.com/hefengliang,fix read file exception,3,[],https://github.com/dokan-dev/dokany/pull/858,https://github.com/hefengliang,6,https://github.com/dokan-dev/dokany/pull/858#issuecomment-576663443,"Fixes # .
When reading data with a large delay, the IRP times out, which will cause the file object to be accidentally released.
When reading data in multiple reads, due to the dependency on the file object (hndl-> get_name ()), uncontrollable pointer errors will result.
This question has also been asked before: #734
I fixed this problem, and through actual testing, I found that there would be no more file reading problems, but I do n‚Äôt know if the data returned by read can still be received by the kernel and processed correctly when the file object is released. At least my application looks normal.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Compare the code, only two lines of code changed","@Liryna   I use svn to develop, GIT is not commonly used, I merge as I understand",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,858,2020-01-07T08:24:45Z,2020-01-27T15:43:09Z,2020-01-27T15:43:45Z,MERGED,True,3,1,1,https://github.com/hefengliang,fix read file exception,3,[],https://github.com/dokan-dev/dokany/pull/858,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/858#issuecomment-578809353,"Fixes # .
When reading data with a large delay, the IRP times out, which will cause the file object to be accidentally released.
When reading data in multiple reads, due to the dependency on the file object (hndl-> get_name ()), uncontrollable pointer errors will result.
This question has also been asked before: #734
I fixed this problem, and through actual testing, I found that there would be no more file reading problems, but I do n‚Äôt know if the data returned by read can still be received by the kernel and processed correctly when the file object is released. At least my application looks normal.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
-Compare the code, only two lines of code changed",Thank you @hefengliang for your contribution ! üëç,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,863,2020-01-16T11:44:12Z,2021-09-11T20:13:14Z,2021-09-11T20:14:05Z,MERGED,True,3,0,1,https://github.com/vincentdchan,feat: use stbuf in dokan_fuse readdir callback,1,[],https://github.com/dokan-dev/dokany/pull/863,https://github.com/vincentdchan,1,https://github.com/dokan-dev/dokany/pull/863,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

use stbuf params in readdir callback, which can improve performance","Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

use stbuf params in readdir callback, which can improve performance",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,863,2020-01-16T11:44:12Z,2021-09-11T20:13:14Z,2021-09-11T20:14:05Z,MERGED,True,3,0,1,https://github.com/vincentdchan,feat: use stbuf in dokan_fuse readdir callback,1,[],https://github.com/dokan-dev/dokany/pull/863,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/863#issuecomment-575599378,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

use stbuf params in readdir callback, which can improve performance","Hi @vincentdchan ,
Could you explain a little more when does this improve performance for you ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,863,2020-01-16T11:44:12Z,2021-09-11T20:13:14Z,2021-09-11T20:14:05Z,MERGED,True,3,0,1,https://github.com/vincentdchan,feat: use stbuf in dokan_fuse readdir callback,1,[],https://github.com/dokan-dev/dokany/pull/863,https://github.com/vincentdchan,3,https://github.com/dokan-dev/dokany/pull/863#issuecomment-586374235,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

use stbuf params in readdir callback, which can improve performance","@Liryna Of course.
When dokan_fuse call readdir, user's code use filler to fill the data for dokan, the filler function is impl_fuse_context::walk_directory.  The second parameter of walk_directory is a pointer to the FUSE_STAT struct, which can provide the stat information of that filling item. But unfortunately, dokan_fuse doesn't use it, it call another get_attr to acquire this FUSE_STAT from user's callback. Imagine a directory with thousands of files, the readdir callback will call thousands of get_attr callback, which is equivalent to thousands of disk IO. It would be very slow.
Actually, these function calls are redundant, user's callback can provide STAT struct in readdir callback and fill them to dokan_fuse. It would save a lot of time of IO. This PR would use the second parameter of walk_directory if it's not a null pointer. It can improve performance.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,863,2020-01-16T11:44:12Z,2021-09-11T20:13:14Z,2021-09-11T20:14:05Z,MERGED,True,3,0,1,https://github.com/vincentdchan,feat: use stbuf in dokan_fuse readdir callback,1,[],https://github.com/dokan-dev/dokany/pull/863,https://github.com/Rondom,4,https://github.com/dokan-dev/dokany/pull/863#issuecomment-586736907,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

use stbuf params in readdir callback, which can improve performance","Fuse 2.x servers are not required to fill those attributes by default. What you are looking for is adding ""READDIR_PLUS"" support which was added to sometime later to libfuse 2.x, but has not yet been added to dokan_fuse.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,863,2020-01-16T11:44:12Z,2021-09-11T20:13:14Z,2021-09-11T20:14:05Z,MERGED,True,3,0,1,https://github.com/vincentdchan,feat: use stbuf in dokan_fuse readdir callback,1,[],https://github.com/dokan-dev/dokany/pull/863,https://github.com/vincentdchan,5,https://github.com/dokan-dev/dokany/pull/863#issuecomment-589028441,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

use stbuf params in readdir callback, which can improve performance","@Rondom Yep, it's not required, it can be NULL and I have considered that in my code. But the parameter has been defined in the code of fuse, why not use it? It can improve performance.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,863,2020-01-16T11:44:12Z,2021-09-11T20:13:14Z,2021-09-11T20:14:05Z,MERGED,True,3,0,1,https://github.com/vincentdchan,feat: use stbuf in dokan_fuse readdir callback,1,[],https://github.com/dokan-dev/dokany/pull/863,https://github.com/Temtaime,6,https://github.com/dokan-dev/dokany/pull/863#issuecomment-916135489,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

use stbuf params in readdir callback, which can improve performance",@Liryna what stops from merge?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,863,2020-01-16T11:44:12Z,2021-09-11T20:13:14Z,2021-09-11T20:14:05Z,MERGED,True,3,0,1,https://github.com/vincentdchan,feat: use stbuf in dokan_fuse readdir callback,1,[],https://github.com/dokan-dev/dokany/pull/863,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/863#issuecomment-917472012,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

use stbuf params in readdir callback, which can improve performance","Sorry @vincentdchan and @Temtaime this was out of my radar for a long time!
Thanks @vincentdchan again for your contribution !",True,{'THUMBS_UP': ['https://github.com/Temtaime']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/phobeus,1,https://github.com/dokan-dev/dokany/pull/875,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly","Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/875#issuecomment-604371984,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly","Thank you @phobeus for your PR !
We can try to get the mount option by adding an IOCTL that would directly return all the mount information including the options.
Like IOCTL_EVENT_MOUNTPOINT_LIST but it would take the Mountpoint and return a struct containing all informations we can safely return to userland (with the option that interest you)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/phobeus,3,https://github.com/dokan-dev/dokany/pull/875#issuecomment-604405749,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly","Hey @Liryna I hope you are well.
Thanks for your insights. I will try to implement that and don't want to be a pest, but did you have time to look at my comments on the linked issue? We have a release coming up in 2 weeks and need an installer with this fix in it. I would just build it myself but was so far unsuccessful.
We want to use the official releases if possible but it doesn't look like any release is going to happen any time soon. Thanks so much for the time you put into this project.
I'll update this PR accordingly as soon as I find the time to do this properly.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/phobeus,4,https://github.com/dokan-dev/dokany/pull/875#issuecomment-692046204,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly","@Liryna It's not looking like we'll have time to implement this properly ourselves, at least not without help.
I've tried to get this running last time using this code: phobeus@8832f5b but the setting is always given as the default value. Due to my inexperience in this area, I was hoping you could point me into the right direction?
If anyone else has any idea how to implement this setting, any help is greatly appreciated.
Another option would be to at least make this a new default, I don't think it's such a bad thing if users can dismount their drives?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/875#issuecomment-692066676,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly","@phobeus I unfortunately not really have time to dedicate for this feature.
But you are not far to have something good to be merged! I added some comments üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/phobeus,6,https://github.com/dokan-dev/dokany/pull/875#issuecomment-694172780,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly","Thank you very much for the hints, I got it running now: 9201a04
I'm unsure about the settings though, I can see that the start flags are being set in DokanStart and then passed down as Flags to DokanEventStart where all items just have their own boolean, that's why I did the same now.
I can make another flags item that incorporates all the settings again and store that instead of the new boolean and maybe remove them from the DokanDiskControlBlock - is that what you meant? If yes, how am I able to test that I didn't break something (other than smoke testing it with mirror.exe)? Will the CI catch that?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/phobeus,7,https://github.com/dokan-dev/dokany/pull/875#issuecomment-694175970,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly","To follow up on that, the event.c in the sys assembly would probably have to do that in DokanEventStart, but the options are all defined in dokan.h so I'd have to use the DOKAN_EVENT_* items to specify an options item. Would that be fine too? Or does it have to be the DOKAN_OPTION_* items?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/875#issuecomment-694185706,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly",@phobeus Cannot see the change for now but yes you got it. Storing the dokan options as they came from the userland in dokaneventstart and sending it in the dokan_control is the good way!,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/phobeus,9,https://github.com/dokan-dev/dokany/pull/875#issuecomment-694689814,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly",@Liryna I updated all references where it made sense to me. Pull request is now up to date again.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/phobeus,10,https://github.com/dokan-dev/dokany/pull/875#issuecomment-696630929,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly","@Liryna if there's anything else I can do to help get this pull request merged, please let me know :-)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/Liryna,11,https://github.com/dokan-dev/dokany/pull/875#issuecomment-696658997,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly",@phobeus I will find some time next week to take a look! :),True,{'HOORAY': ['https://github.com/phobeus']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,875,2020-03-26T10:04:58Z,2020-10-09T15:02:29Z,2020-10-09T15:02:51Z,MERGED,True,75,31,14,https://github.com/phobeus,Allow disconnecting of network drives,1,[],https://github.com/dokan-dev/dokany/pull/875,https://github.com/Liryna,12,https://github.com/dokan-dev/dokany/pull/875#issuecomment-706233804,"Fixes dokan-dev/dokan-dotnet#250
I could not figure out how to pass down the setting, but this should nonetheless be a good new default behavior in my opinion.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Add the option to enable disconnecting / unmounting a network drive from explorer directly","Hi @phobeus ,
Thank you very much for adding the feature! Everything looks good and clean. Merging it now üëç
I will try to plan a dokan release in the next weeks (if I do find time).",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,877,2020-03-29T09:06:36Z,2020-03-29T09:18:18Z,2020-03-29T09:18:18Z,CLOSED,False,24,16,5,https://github.com/hefengliang,Modify compilation options: from MD to MT,5,[],https://github.com/dokan-dev/dokany/pull/877,https://github.com/hefengliang,1,https://github.com/dokan-dev/dokany/pull/877,"I modified all MT options in debug and release modes except the sys project, and all modes compiled successfully.
I did some simple tests on MT's dokan1.dll in win7 64-bit system, but I did not test it on all platforms.
To ensure the reliability of the dokan release package, you can repackage it and remove the vs2019_redist dependency. I integrated it into my application and tested it in a variety of system environments for our users.","I modified all MT options in debug and release modes except the sys project, and all modes compiled successfully.
I did some simple tests on MT's dokan1.dll in win7 64-bit system, but I did not test it on all platforms.
To ensure the reliability of the dokan release package, you can repackage it and remove the vs2019_redist dependency. I integrated it into my application and tested it in a variety of system environments for our users.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,877,2020-03-29T09:06:36Z,2020-03-29T09:18:18Z,2020-03-29T09:18:18Z,CLOSED,False,24,16,5,https://github.com/hefengliang,Modify compilation options: from MD to MT,5,[],https://github.com/dokan-dev/dokany/pull/877,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/877#issuecomment-605606914,"I modified all MT options in debug and release modes except the sys project, and all modes compiled successfully.
I did some simple tests on MT's dokan1.dll in win7 64-bit system, but I did not test it on all platforms.
To ensure the reliability of the dokan release package, you can repackage it and remove the vs2019_redist dependency. I integrated it into my application and tested it in a variety of system environments for our users.","Hi @hefengliang ,
Seems like you did the change in the same branch of your previous PR that makes the PR including both commit. Could you redo the PR with only the MT change ? Also change the installer to remove redist dependency and check ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,878,2020-03-29T10:03:10Z,2020-06-03T14:50:34Z,2020-06-03T14:50:46Z,CLOSED,False,24,16,5,https://github.com/hefengliang,Modify compilation options: from MD to MT,1,[],https://github.com/dokan-dev/dokany/pull/878,https://github.com/hefengliang,1,https://github.com/dokan-dev/dokany/pull/878,"I modified all MT options in debug and release modes except the sys project, and all modes compiled successfully.
I did some simple tests on MT's dokan1.dll in win7 64-bit system, but I did not test it on all platforms.
I'm very sorry, I'm not familiar with WIX, so the vs2019_redist dependency was not removed in the installation script.
In order to ensure the reliability of the dokan release package, if you remove the vs2019_redist dependency and repackage it, I can integrate it into my application and test it in a variety of user system environments.
My Email is: hefengliangid@gmail.com, you can send the test installation package directly to my email.","I modified all MT options in debug and release modes except the sys project, and all modes compiled successfully.
I did some simple tests on MT's dokan1.dll in win7 64-bit system, but I did not test it on all platforms.
I'm very sorry, I'm not familiar with WIX, so the vs2019_redist dependency was not removed in the installation script.
In order to ensure the reliability of the dokan release package, if you remove the vs2019_redist dependency and repackage it, I can integrate it into my application and test it in a variety of user system environments.
My Email is: hefengliangid@gmail.com, you can send the test installation package directly to my email.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,878,2020-03-29T10:03:10Z,2020-06-03T14:50:34Z,2020-06-03T14:50:46Z,CLOSED,False,24,16,5,https://github.com/hefengliang,Modify compilation options: from MD to MT,1,[],https://github.com/dokan-dev/dokany/pull/878,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/878#issuecomment-612940778,"I modified all MT options in debug and release modes except the sys project, and all modes compiled successfully.
I did some simple tests on MT's dokan1.dll in win7 64-bit system, but I did not test it on all platforms.
I'm very sorry, I'm not familiar with WIX, so the vs2019_redist dependency was not removed in the installation script.
In order to ensure the reliability of the dokan release package, if you remove the vs2019_redist dependency and repackage it, I can integrate it into my application and test it in a variety of user system environments.
My Email is: hefengliangid@gmail.com, you can send the test installation package directly to my email.","Hi @hefengliang ,
I added the necessary changes here 4a187a6
Let me know what do you think about it",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,878,2020-03-29T10:03:10Z,2020-06-03T14:50:34Z,2020-06-03T14:50:46Z,CLOSED,False,24,16,5,https://github.com/hefengliang,Modify compilation options: from MD to MT,1,[],https://github.com/dokan-dev/dokany/pull/878,https://github.com/hefengliang,3,https://github.com/dokan-dev/dokany/pull/878#issuecomment-613870520,"I modified all MT options in debug and release modes except the sys project, and all modes compiled successfully.
I did some simple tests on MT's dokan1.dll in win7 64-bit system, but I did not test it on all platforms.
I'm very sorry, I'm not familiar with WIX, so the vs2019_redist dependency was not removed in the installation script.
In order to ensure the reliability of the dokan release package, if you remove the vs2019_redist dependency and repackage it, I can integrate it into my application and test it in a variety of user system environments.
My Email is: hefengliangid@gmail.com, you can send the test installation package directly to my email.","@Liryna Your changes look no problem, I hope you can make the installation package as soon as possible, I can test it.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,878,2020-03-29T10:03:10Z,2020-06-03T14:50:34Z,2020-06-03T14:50:46Z,CLOSED,False,24,16,5,https://github.com/hefengliang,Modify compilation options: from MD to MT,1,[],https://github.com/dokan-dev/dokany/pull/878,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/878#issuecomment-638249044,"I modified all MT options in debug and release modes except the sys project, and all modes compiled successfully.
I did some simple tests on MT's dokan1.dll in win7 64-bit system, but I did not test it on all platforms.
I'm very sorry, I'm not familiar with WIX, so the vs2019_redist dependency was not removed in the installation script.
In order to ensure the reliability of the dokan release package, if you remove the vs2019_redist dependency and repackage it, I can integrate it into my application and test it in a variety of user system environments.
My Email is: hefengliangid@gmail.com, you can send the test installation package directly to my email.","@hefengliang could you give a try to the noVC installer ? They include MT binaries. Feedback would be appreciated !
https://github.com/dokan-dev/dokany/releases/tag/v1.4.0.1000",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,895,2020-05-24T04:32:52Z,2020-05-24T19:00:06Z,2020-05-24T19:00:26Z,CLOSED,False,23,0,1,https://github.com/TheStreet321,c-cpp.yml,1,[],https://github.com/dokan-dev/dokany/pull/895,https://github.com/TheStreet321,1,https://github.com/dokan-dev/dokany/pull/895,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,895,2020-05-24T04:32:52Z,2020-05-24T19:00:06Z,2020-05-24T19:00:26Z,CLOSED,False,23,0,1,https://github.com/TheStreet321,c-cpp.yml,1,[],https://github.com/dokan-dev/dokany/pull/895,https://github.com/TheStreet321,2,https://github.com/dokan-dev/dokany/pull/895#issuecomment-633177905,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",TheStreet321:master,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,895,2020-05-24T04:32:52Z,2020-05-24T19:00:06Z,2020-05-24T19:00:26Z,CLOSED,False,23,0,1,https://github.com/TheStreet321,c-cpp.yml,1,[],https://github.com/dokan-dev/dokany/pull/895,https://github.com/Liryna,3,https://github.com/dokan-dev/dokany/pull/895#issuecomment-633182618,"Fixes # .
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","@TheStreet321 hi,
What is the purpose of this contribution?
Looking at your other contribution, I am closing this PR.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/FaerieLee,1,https://github.com/dokan-dev/dokany/pull/900,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/900#issuecomment-636316920,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Thank you @FaerieLee for the PR.
Why not directly using utf8_to_wchar_buf instead of utf8_to_unicode ? It was not working ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/FaerieLee,3,https://github.com/dokan-dev/dokany/pull/900#issuecomment-636418731,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","No, I did not try to use utf8_to_wchar_buf, because it's very low probability that our file system would crash in other scenarios when running in the function , but I couldn't find the reason. So if the mount path of user occasionally trigger the crash, it's a bad experience. So I use  utf8_to_unicode instead of utf8_to_wchar_buf. Thank you for your comment.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/FaerieLee,4,https://github.com/dokan-dev/dokany/pull/900#issuecomment-637262116,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","I reproduce the failure. I find that it's our concurrent problem which result to  utf8_to_wchar_buf crash. I think that utf8_to_wchar_buf can fix up chinese mount path problem, but I need to try to validate",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/FaerieLee,5,https://github.com/dokan-dev/dokany/pull/900#issuecomment-639407478,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","I have a question. How can I know the result of calling utf8_to_wchar_buf  ? If utf8_to_wchar_buf  encounts some unexpected exceptions. I don't realize it, And if the funtion which calling utf8_to_wchar_buf  cotinues, the result would be unexpected.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/900#issuecomment-639712034,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","No unfortunately utf8_to_wchar_buf do not return any error even if it could since it calls convert_char that does return -1 on failure. if you are interested to change the prototype, you can üëç",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/FaerieLee,7,https://github.com/dokan-dev/dokany/pull/900#issuecomment-641709728,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","I fix up this question by using  utf8_to_wchar_buf, Please review.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/900#issuecomment-641789038,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","convert_char return -1 in failure but you made utf8_to_wchar_buf return 0 in case of failure

  
    
      dokany/dokan_fuse/src/utils.cpp
    
    
         Line 144
      in
      08502af
    
  
  
    

        
          
           return -1; 
        
    
  


they should both have the same type of failure otherwise your check would not work",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/FaerieLee,9,https://github.com/dokan-dev/dokany/pull/900#issuecomment-641845240,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","The return type of conver_char is size_t, which is unsigned type. Although it return -1,  I determine nothing by this value, because it's always greater or equals than 0. So I made utf8_to_wchar_buf  return 0 in case of failure.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/Liryna,10,https://github.com/dokan-dev/dokany/pull/900#issuecomment-641847114,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",What happen with you condition == 0 when convert return - 1?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/FaerieLee,11,https://github.com/dokan-dev/dokany/pull/900#issuecomment-641857963,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","I didn't understand your idea until now. your idea is that conver_char return - 1, although return value is converted into a unsigned value, I can check failue by this very large unsigned number. If so, I think that utf8_to_wchar_buf should return -1.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/FaerieLee,12,https://github.com/dokan-dev/dokany/pull/900#issuecomment-641873841,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",fix up utf8_to_wchar_buf return -1. please review,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/Liryna,13,https://github.com/dokan-dev/dokany/pull/900#issuecomment-643986935,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","Thank you @FaerieLee for the change. The CI has reported different warning during the build
https://ci.appveyor.com/project/Maxhy/dokany/builds/33432130/job/iareml00ux4bp0ee#L2287
Could you take a look at it ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/FaerieLee,14,https://github.com/dokan-dev/dokany/pull/900#issuecomment-644025660,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:","OK, I have fixed up the warning. Please review it.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,900,2020-05-30T10:27:17Z,2020-06-15T10:00:41Z,2020-06-15T10:00:41Z,MERGED,True,11,7,3,https://github.com/FaerieLee,Description:Fix up dokanfuse mount error when chinese mount path.,1,[],https://github.com/dokan-dev/dokany/pull/900,https://github.com/Liryna,15,https://github.com/dokan-dev/dokany/pull/900#issuecomment-644031448,"Fixes # .issue 893 Fix up dokanfuse mount error when chinese mount path.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:",Thanks for the quick changes and for your contribution! @FaerieLee very appreciated,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,933,2020-10-08T19:16:46Z,2020-10-14T08:25:45Z,2020-10-28T17:59:10Z,MERGED,True,81,27,8,https://github.com/mrnerdhair,Return STATUS_INVALID_PARAMETER where appropriate,6,[],https://github.com/dokan-dev/dokany/pull/933,https://github.com/mrnerdhair,1,https://github.com/dokan-dev/dokany/pull/933,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Returns STATUS_INVALID_PARAMETER rather than STATUS_NOT_IMPLEMENTED to report the use of an unimplemented information class value with an otherwise implemented IRP type. (Fixes #932.)
Minor typo edits.
Minor cleanup in DokanSetAllocationInformation to normalize style of code.","Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Returns STATUS_INVALID_PARAMETER rather than STATUS_NOT_IMPLEMENTED to report the use of an unimplemented information class value with an otherwise implemented IRP type. (Fixes #932.)
Minor typo edits.
Minor cleanup in DokanSetAllocationInformation to normalize style of code.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,933,2020-10-08T19:16:46Z,2020-10-14T08:25:45Z,2020-10-28T17:59:10Z,MERGED,True,81,27,8,https://github.com/mrnerdhair,Return STATUS_INVALID_PARAMETER where appropriate,6,[],https://github.com/dokan-dev/dokany/pull/933,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/933#issuecomment-706157122,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Returns STATUS_INVALID_PARAMETER rather than STATUS_NOT_IMPLEMENTED to report the use of an unimplemented information class value with an otherwise implemented IRP type. (Fixes #932.)
Minor typo edits.
Minor cleanup in DokanSetAllocationInformation to normalize style of code.","Thanks @reidrankin for the PR and the extra changes üöÄ !!!
Changing the default return value in dokan/volume.c is fine but it would be better to directly return this status from the kernel to avoid sending the request to the userland for cases

  
    
      dokany/dokan/directory.c
    
    
        Lines 542 to 548
      in
      91e8782
    
  
  
    

        
          
           if (fileInfoClass != FileDirectoryInformation && 
        

        
          
               fileInfoClass != FileIdFullDirectoryInformation && 
        

        
          
               fileInfoClass != FileFullDirectoryInformation && 
        

        
          
               fileInfoClass != FileNamesInformation && 
        

        
          
               fileInfoClass != FileIdBothDirectoryInformation && 
        

        
          
               fileInfoClass != FileBothDirectoryInformation && 
        

        
          
               fileInfoClass != FileIdExtdBothDirectoryInformation) { 
        
    
  

 that we know that are not supported.
I know that not the case yet but some projects do not directly use the library code so fixing in the driver would also be fixing the issue for them.
Could you add all the previous list of supported infoclass in the kernel here and return the status in the default behaviour ? 
  
    
      dokany/sys/directory.c
    
    
        Lines 122 to 145
      in
      f7161d7
    
  
  
    

        
          
           switch (irpSp->Parameters.QueryDirectory.FileInformationClass) { 
        

        
          
           case FileDirectoryInformation: 
        

        
          
             DDbgPrint(""  FileDirectoryInformation\n""); 
        

        
          
             break; 
        

        
          
           case FileIdFullDirectoryInformation: 
        

        
          
             DDbgPrint(""  FileIdFullDirectoryInformation\n""); 
        

        
          
             break; 
        

        
          
           case FileFullDirectoryInformation: 
        

        
          
             DDbgPrint(""  FileFullDirectoryInformation\n""); 
        

        
          
             break; 
        

        
          
           case FileNamesInformation: 
        

        
          
             DDbgPrint(""  FileNamesInformation\n""); 
        

        
          
             break; 
        

        
          
           case FileBothDirectoryInformation: 
        

        
          
             DDbgPrint(""  FileBothDirectoryInformation\n""); 
        

        
          
             break; 
        

        
          
           case FileIdBothDirectoryInformation: 
        

        
          
             DDbgPrint(""  FileIdBothDirectoryInformation\n""); 
        

        
          
             break; 
        

        
          
           default: 
        

        
          
             DDbgPrint(""  unknown FileInfoClass %d\n"", 
        

        
          
                       irpSp->Parameters.QueryDirectory.FileInformationClass); 
        

        
          
             break; 
        

        
          
           } 
        
    
  


If you could this for the other cases it would be great üëç I know that might be too much to ask but it would definitely solve the issue.
Rename other commit to:
Library - typo fixes
Library - minor cleanup",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,933,2020-10-08T19:16:46Z,2020-10-14T08:25:45Z,2020-10-28T17:59:10Z,MERGED,True,81,27,8,https://github.com/mrnerdhair,Return STATUS_INVALID_PARAMETER where appropriate,6,[],https://github.com/dokan-dev/dokany/pull/933,https://github.com/mrnerdhair,3,https://github.com/dokan-dev/dokany/pull/933#issuecomment-706386586,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Returns STATUS_INVALID_PARAMETER rather than STATUS_NOT_IMPLEMENTED to report the use of an unimplemented information class value with an otherwise implemented IRP type. (Fixes #932.)
Minor typo edits.
Minor cleanup in DokanSetAllocationInformation to normalize style of code.","I don't think it's necessarily a good idea to limit the range of info classes that the user-mode code can choose to handle. See for example #835, where a new class was implemented without touching the kernel code. So instead I went on a journey trying to figure out how I could intercept STATUS_NOT_IMPLEMENTED responses once the user-mode code had had a chance to look at the request and decided it couldn't. I thought about putting it in DokanCompleteDirectoryControl, but I don't think this is an IRP_MJ_DIRECTORY_CONTROL-specific issue; I ended up putting code in DokanCompleteIrpRequest to replace STATUS_NOT_IMPLEMENTED with STATUS_NOT_SUPPORTED instead.
My reasoning is that Dokan clients use STATUS_NOT_IMPLEMENTED to signal that they have not provided an implementation, and that a default behavior should be used instead. No matter what the requested operation or where the implementation might be provided, though, it's certainly got to happen before calling DokanCompleteIrpRequest. Therefore, we can confidently state that any function not implemented by this point is not supported by the device at all.
I used STATUS_NOT_SUPPORTED instead of STATUS_INVALID_PARAMETER in DokanCompleteIrpRequest because the only thing that can really decide whether the request failed because a parameter value was bad is the user-mode code. Once the driver hears about it, it can't really be sure if a STATUS_NOT_IMPLEMENTED result was caused because of an unsupported info class parameter or something different entirely. For this reason, I've used STATUS_NOT_SUPPORTED, because it seems like a more accurate description of what we can be sure of inside DokanCompleteIrpRequest, and because it's one of the fallback-triggering codes recognized by WSL2's Plan 9 server.
I've left the library changes that return STATUS_INVALID_PARAMETER in response to an unsupported info class in place to provide a more-specific description of these cases (which also works with WSL2).
Finally, I've added support for FileIdExtdDirectoryInformation -- I realized we had code for FileIdExtdBothDirectoryInformation, and it seemed quite odd to skip the simpler one. This, of course, is the info class that WSL2 first requests, so this will fix the problem in the first instance.
In fact, because the WSL2 Plan 9 server actually comes from the Windows Containers infrastructure, I would bet that issue #834 is caused by a similar setup that would have fallen back to other info classes if it had gotten a slightly different error code. I know that the virtual DVD drive driver doesn't support FileIdExtdDirectoryInformation, and I doubt it handles FileIdExtdBothDirectoryInformation either. I'm pretty sure those work in containers, though, which I'd expect to be because of a similar fallback mechanism to the one at issue in #932.
(Now the only question is if any of this will break anything. I'm not afraid to say that I'm not experienced enough with the way Dokan is used in the field to understand the compatibility implications here, even if I do think that the approach is theoretically sound.)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,933,2020-10-08T19:16:46Z,2020-10-14T08:25:45Z,2020-10-28T17:59:10Z,MERGED,True,81,27,8,https://github.com/mrnerdhair,Return STATUS_INVALID_PARAMETER where appropriate,6,[],https://github.com/dokan-dev/dokany/pull/933,https://github.com/mrnerdhair,4,https://github.com/dokan-dev/dokany/pull/933#issuecomment-706645593,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Returns STATUS_INVALID_PARAMETER rather than STATUS_NOT_IMPLEMENTED to report the use of an unimplemented information class value with an otherwise implemented IRP type. (Fixes #932.)
Minor typo edits.
Minor cleanup in DokanSetAllocationInformation to normalize style of code.","OK, so now that the stupid thing works, let's talk about whether this approach is a good idea or not.
(And I love the Appveyor setup's automagic Driver Verifier test suite, though I love the hour-and-a-half CI pipeline somewhat less.)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,933,2020-10-08T19:16:46Z,2020-10-14T08:25:45Z,2020-10-28T17:59:10Z,MERGED,True,81,27,8,https://github.com/mrnerdhair,Return STATUS_INVALID_PARAMETER where appropriate,6,[],https://github.com/dokan-dev/dokany/pull/933,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/933#issuecomment-707270811,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Returns STATUS_INVALID_PARAMETER rather than STATUS_NOT_IMPLEMENTED to report the use of an unimplemented information class value with an otherwise implemented IRP type. (Fixes #932.)
Minor typo edits.
Minor cleanup in DokanSetAllocationInformation to normalize style of code.","Glad you like the CI :)! I also agree that it is pretty slow... Making the test running side by side would be a good start but thats a premium feature :(
Awesome that you added the support for this infoclass! Have you been able to build and test it against WSL 2?
You made a good point of not restricting the infoclass sent by the kernel and for the same reason I would prefer to not override the status sent by the library in the kernel. If other libraries want to get this fix, they will need to import it themselves and that's fine.
Therefore would you be able to just remove the last commit of your PR?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,933,2020-10-08T19:16:46Z,2020-10-14T08:25:45Z,2020-10-28T17:59:10Z,MERGED,True,81,27,8,https://github.com/mrnerdhair,Return STATUS_INVALID_PARAMETER where appropriate,6,[],https://github.com/dokan-dev/dokany/pull/933,https://github.com/mrnerdhair,6,https://github.com/dokan-dev/dokany/pull/933#issuecomment-707343416,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Returns STATUS_INVALID_PARAMETER rather than STATUS_NOT_IMPLEMENTED to report the use of an unimplemented information class value with an otherwise implemented IRP type. (Fixes #932.)
Minor typo edits.
Minor cleanup in DokanSetAllocationInformation to normalize style of code.","I've tested the AppVeyor build for 9c62a45, and the new infoclass looks like it works as intended with WSL. I'll reset and force-push this branch back to 4a5087e.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,933,2020-10-08T19:16:46Z,2020-10-14T08:25:45Z,2020-10-28T17:59:10Z,MERGED,True,81,27,8,https://github.com/mrnerdhair,Return STATUS_INVALID_PARAMETER where appropriate,6,[],https://github.com/dokan-dev/dokany/pull/933,https://github.com/Liryna,7,https://github.com/dokan-dev/dokany/pull/933#issuecomment-708245186,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Returns STATUS_INVALID_PARAMETER rather than STATUS_NOT_IMPLEMENTED to report the use of an unimplemented information class value with an otherwise implemented IRP type. (Fixes #932.)
Minor typo edits.
Minor cleanup in DokanSetAllocationInformation to normalize style of code.","Really by thanks to you @reidrankin for taking your valuable time on this! üèÜ
I might have been long to deal with this PR but if later you will have other changes to propose, I will ensure that I review them more quickly üëç
... failed with the merging. Github as squashed them all by default üò¢",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,946,2020-11-21T00:46:03Z,2020-11-21T07:29:41Z,2020-11-21T07:29:41Z,MERGED,True,5,5,4,https://github.com/timgates42,"docs: fix simple typo, specifed -> specified",1,[],https://github.com/dokan-dev/dokany/pull/946,https://github.com/timgates42,1,https://github.com/dokan-dev/dokany/pull/946,"There is a small typo in dokan/create.c, dokan/directory.c, sys/create.c, sys/fileinfo.c.
Should read specified rather than specifed.","There is a small typo in dokan/create.c, dokan/directory.c, sys/create.c, sys/fileinfo.c.
Should read specified rather than specifed.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,946,2020-11-21T00:46:03Z,2020-11-21T07:29:41Z,2020-11-21T07:29:41Z,MERGED,True,5,5,4,https://github.com/timgates42,"docs: fix simple typo, specifed -> specified",1,[],https://github.com/dokan-dev/dokany/pull/946,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/946#issuecomment-731522086,"There is a small typo in dokan/create.c, dokan/directory.c, sys/create.c, sys/fileinfo.c.
Should read specified rather than specifed.",Thank you @timgates42 ! Always appreciate to have the documentation reviewed!,True,{'THUMBS_UP': ['https://github.com/timgates42']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,958,2021-01-10T20:02:54Z,2021-01-10T20:10:51Z,2021-01-10T23:10:21Z,MERGED,True,1,1,1,https://github.com/bailey27,remove BSF_NOTIMEOUTIFNOTHUNG flag in BroadcastSystemMessage,1,[],https://github.com/dokan-dev/dokany/pull/958,https://github.com/bailey27,1,https://github.com/dokan-dev/dokany/pull/958,"Fixes #957.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
[] I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

I think it isn't a significant enough change for updating the change log or even a comment.
I think a rebase/squash isn't needed.  I did only one commit.
Changes proposed in this pull request:
Using BSF_NOTIMEOUTIFNOTHUNG in the BroadcastSystemMessage that is done in DokanBroadcastLink after mounting to a drive letter could cause the BroadcastSystemMessage call to block long enough to cause the driver to timeout the fs.  This flag is not necessary so it was removed.","Fixes #957.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
[] I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

I think it isn't a significant enough change for updating the change log or even a comment.
I think a rebase/squash isn't needed.  I did only one commit.
Changes proposed in this pull request:
Using BSF_NOTIMEOUTIFNOTHUNG in the BroadcastSystemMessage that is done in DokanBroadcastLink after mounting to a drive letter could cause the BroadcastSystemMessage call to block long enough to cause the driver to timeout the fs.  This flag is not necessary so it was removed.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,958,2021-01-10T20:02:54Z,2021-01-10T20:10:51Z,2021-01-10T23:10:21Z,MERGED,True,1,1,1,https://github.com/bailey27,remove BSF_NOTIMEOUTIFNOTHUNG flag in BroadcastSystemMessage,1,[],https://github.com/dokan-dev/dokany/pull/958,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/958#issuecomment-757536135,"Fixes #957.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
[] I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

I think it isn't a significant enough change for updating the change log or even a comment.
I think a rebase/squash isn't needed.  I did only one commit.
Changes proposed in this pull request:
Using BSF_NOTIMEOUTIFNOTHUNG in the BroadcastSystemMessage that is done in DokanBroadcastLink after mounting to a drive letter could cause the BroadcastSystemMessage call to block long enough to cause the driver to timeout the fs.  This flag is not necessary so it was removed.",Thank you for the quick pull request! Very appreciated.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,958,2021-01-10T20:02:54Z,2021-01-10T20:10:51Z,2021-01-10T23:10:21Z,MERGED,True,1,1,1,https://github.com/bailey27,remove BSF_NOTIMEOUTIFNOTHUNG flag in BroadcastSystemMessage,1,[],https://github.com/dokan-dev/dokany/pull/958,https://github.com/bailey27,3,https://github.com/dokan-dev/dokany/pull/958#issuecomment-757549433,"Fixes #957.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
[] I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

I think it isn't a significant enough change for updating the change log or even a comment.
I think a rebase/squash isn't needed.  I did only one commit.
Changes proposed in this pull request:
Using BSF_NOTIMEOUTIFNOTHUNG in the BroadcastSystemMessage that is done in DokanBroadcastLink after mounting to a drive letter could cause the BroadcastSystemMessage call to block long enough to cause the driver to timeout the fs.  This flag is not necessary so it was removed.",You're welcome!,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,959,2021-01-11T11:29:05Z,2021-01-13T15:35:23Z,2021-01-13T15:35:23Z,MERGED,True,2,2,1,https://github.com/infeo,Reduce desired access rights for loop device handle and keepalive handle,1,[],https://github.com/dokan-dev/dokany/pull/959,https://github.com/infeo,1,https://github.com/dokan-dev/dokany/pull/959,"Mitigates #953.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR reduces the problem that a recently mounted device is directly unmounted if certain AV software is installed in the OS.
This is done by implementing the comments made in #953 (basically a reduction of the desirered access rights for certain CreateFile calls). Since there is still an open discussion for a bigger change in the issue, this PR is not intended to close it, but to provide a short term fix.","Mitigates #953.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
This PR reduces the problem that a recently mounted device is directly unmounted if certain AV software is installed in the OS.
This is done by implementing the comments made in #953 (basically a reduction of the desirered access rights for certain CreateFile calls). Since there is still an open discussion for a bigger change in the issue, this PR is not intended to close it, but to provide a short term fix.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,970,2021-02-05T14:15:07Z,2021-02-08T07:50:23Z,2021-02-08T08:57:05Z,CLOSED,False,2,2,1,https://github.com/zqlustc,SYS - Check the return code when deleting the file view,1,[],https://github.com/dokan-dev/dokany/pull/970,https://github.com/zqlustc,1,https://github.com/dokan-dev/dokany/pull/970,"When the deletion of the underlying user-mode file system fails, the file view will still be deleted. File still exists after refreshing.
Fixes # 969
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

When user delete the file failed, it will not remove the file view in the window.","When the deletion of the underlying user-mode file system fails, the file view will still be deleted. File still exists after refreshing.
Fixes # 969
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

When user delete the file failed, it will not remove the file view in the window.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,970,2021-02-05T14:15:07Z,2021-02-08T07:50:23Z,2021-02-08T08:57:05Z,CLOSED,False,2,2,1,https://github.com/zqlustc,SYS - Check the return code when deleting the file view,1,[],https://github.com/dokan-dev/dokany/pull/970,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/970#issuecomment-774093498,"When the deletion of the underlying user-mode file system fails, the file view will still be deleted. File still exists after refreshing.
Fixes # 969
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

When user delete the file failed, it will not remove the file view in the window.","@zqlustc The status is always SUCCESS from https://github.com/dokan-dev/dokany/blob/master/dokan/cleanup.c#L37
This PR will not solve the issue you are facing.
Could you open an issue and explain your issue there ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,970,2021-02-05T14:15:07Z,2021-02-08T07:50:23Z,2021-02-08T08:57:05Z,CLOSED,False,2,2,1,https://github.com/zqlustc,SYS - Check the return code when deleting the file view,1,[],https://github.com/dokan-dev/dokany/pull/970,https://github.com/zqlustc,3,https://github.com/dokan-dev/dokany/pull/970#issuecomment-774578500,"When the deletion of the underlying user-mode file system fails, the file view will still be deleted. File still exists after refreshing.
Fixes # 969
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

When user delete the file failed, it will not remove the file view in the window.","Could you open an iss
Hi,
I am sorry for not making it clear.
The dokan and dokanfuse adaptation is modified locally.
problem I faced:
Now I have a file in the dokan mount point, for example, named test.txt. Right-click to delete the test1 file it will delete test.txt with no prompt, but it maybe failed in the dokan fuse. After I refesh the parent dir of test.txt. It appears again after the directory is refreshed.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,970,2021-02-05T14:15:07Z,2021-02-08T07:50:23Z,2021-02-08T08:57:05Z,CLOSED,False,2,2,1,https://github.com/zqlustc,SYS - Check the return code when deleting the file view,1,[],https://github.com/dokan-dev/dokany/pull/970,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/970#issuecomment-774614866,"When the deletion of the underlying user-mode file system fails, the file view will still be deleted. File still exists after refreshing.
Fixes # 969
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

When user delete the file failed, it will not remove the file view in the window.","@zqlustc Per microsoft documentation, cleanup cannot fail. If delete must fail, it must be during createfile or set delete that everything need to put in place for the delete to work during cleanup.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,970,2021-02-05T14:15:07Z,2021-02-08T07:50:23Z,2021-02-08T08:57:05Z,CLOSED,False,2,2,1,https://github.com/zqlustc,SYS - Check the return code when deleting the file view,1,[],https://github.com/dokan-dev/dokany/pull/970,https://github.com/zqlustc,5,https://github.com/dokan-dev/dokany/pull/970#issuecomment-774945214,"When the deletion of the underlying user-mode file system fails, the file view will still be deleted. File still exists after refreshing.
Fixes # 969
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

When user delete the file failed, it will not remove the file view in the window.","Hi,
Thanks, I get it.
Now I have two problems when build the dokan.


[1] After I execute '.\scripts\build_installer.ps1', it occur the following errors
C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\km\wdm.h(18870,32): error C4013: ‚Äú_DataSynchronizationBarrier‚Äù not definedÔºõ (source file: access.c) [C:\xxxx\dokany-1.4
.1.1000\dokany-1.4.1.1000\sys\sys.vcxproj]
C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\km\wdm.h(18870,32): error C4013: ‚Äú_DataSynchronizationBarrier‚Äùnot deifnedÔºõ(source file: close.c) [C:\xxxx\dokany-1.4.
1.1000\dokany-1.4.1.1000\sys\sys.vcxproj]
C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\km\wdm.h(19237,22): error C4013: ‚Äú_MoveFromCoprocessor‚Äùnot defiend; (source file: access.c) [C:\xxxx\dokany-1.4.1.1000


[2] Can we add a parameter to build x64 only with '.\scripts\build_installer.ps1'. ARM,ARM64,... is useless for me.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,970,2021-02-05T14:15:07Z,2021-02-08T07:50:23Z,2021-02-08T08:57:05Z,CLOSED,False,2,2,1,https://github.com/zqlustc,SYS - Check the return code when deleting the file view,1,[],https://github.com/dokan-dev/dokany/pull/970,https://github.com/Liryna,6,https://github.com/dokan-dev/dokany/pull/970#issuecomment-774946028,"When the deletion of the underlying user-mode file system fails, the file view will still be deleted. File still exists after refreshing.
Fixes # 969
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

When user delete the file failed, it will not remove the file view in the window.",Glad you have been able to find a way to get around your cleanup issue.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,970,2021-02-05T14:15:07Z,2021-02-08T07:50:23Z,2021-02-08T08:57:05Z,CLOSED,False,2,2,1,https://github.com/zqlustc,SYS - Check the return code when deleting the file view,1,[],https://github.com/dokan-dev/dokany/pull/970,https://github.com/zqlustc,7,https://github.com/dokan-dev/dokany/pull/970#issuecomment-774958110,"When the deletion of the underlying user-mode file system fails, the file view will still be deleted. File still exists after refreshing.
Fixes # 969
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

When user delete the file failed, it will not remove the file view in the window.","Hi,
Sorry to send email to you for help several times. You Are very friendly and outstanding. Thanks very much.


Now I have a problem.&nbsp;
Could we build the x64 setup only with build_installer.ps1? In other word, could I add some parameters to build the x64 setup, not all arch?
Thanks.
‚Ä¶
---Original---
From: ""Liryna""<notifications@github.com&gt;
Date: Mon, Feb 8, 2021 15:50 PM
To: ""dokan-dev/dokany""<dokany@noreply.github.com&gt;;
Cc: ""Âº†Â•áÈæô""<984811670@qq.com&gt;;""Mention""<mention@noreply.github.com&gt;;
Subject: Re: [dokan-dev/dokany] SYS - Check the return code when deleting the file view (#970)





Closed #970.

‚Äî
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or unsubscribe.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,970,2021-02-05T14:15:07Z,2021-02-08T07:50:23Z,2021-02-08T08:57:05Z,CLOSED,False,2,2,1,https://github.com/zqlustc,SYS - Check the return code when deleting the file view,1,[],https://github.com/dokan-dev/dokany/pull/970,https://github.com/zqlustc,8,https://github.com/dokan-dev/dokany/pull/970#issuecomment-774984906,"When the deletion of the underlying user-mode file system fails, the file view will still be deleted. File still exists after refreshing.
Fixes # 969
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

When user delete the file failed, it will not remove the file view in the window.","Hi,
I have find the method to build x64 setup only.
Thanks.
‚Ä¶
---Original---
From: ""Liryna""<notifications@github.com&gt;
Date: Mon, Feb 8, 2021 15:50 PM
To: ""dokan-dev/dokany""<dokany@noreply.github.com&gt;;
Cc: ""Âº†Â•áÈæô""<984811670@qq.com&gt;;""Mention""<mention@noreply.github.com&gt;;
Subject: Re: [dokan-dev/dokany] SYS - Check the return code when deleting the file view (#970)





Closed #970.

‚Äî
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or unsubscribe.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/ATRiiX,1,https://github.com/dokan-dev/dokany/pull/1038,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.","We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1001029294,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.","Hi @ATRiiX ,
Thank you for the pull request.
Would you have a sample of input to reproduce the utf8_to_wchar_buf loop ?
Using -1 with size_t isn't the most pretty code but it should work",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/ATRiiX,3,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1001285819,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.","Hi @Liryna
This problem can only be reproduced on a spcific test laptop, and the behavior is that explorer open the fuse drive freeze until it fails.
I dump the process to find the il variable was added and much bigger than the src_len, but the input seems a normal string contains several Chinise charactors. I copyed it but cannot reproduce it on my own machine.
I think if the input can meet the utf8_lengths[p[0]] == 0 condition, then return to the readed < 0 judgment in convert_char would never be enter before. After fix it, I found the problem on that laptop was solved.
And these -1 are just some more cleanups.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/ATRiiX,4,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1001417094,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.","If the input is not a valid utf-8 string, for example, a GBK string in chinese, the function 'utf8_to_wchar_buf' may fail. I have tried a chinese charactor 'Êµã', as it's {0xb2, 0xe2} in GBK char array, can trigger the loop problem.
FYI.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1001588438,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.",Thanks @ATRiiX for the details! Shouldn't we just stop using those custom functions that are error prone and simply use https://stackoverflow.com/a/14809553 ? Would you be willing to implement it ?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/ATRiiX,6,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1001614249,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.","That's a good idea. Using the standard library function would be more simple and clean.
I can spare some time to write and test it. :)",True,{'THUMBS_UP': ['https://github.com/Liryna']}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/ATRiiX,7,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1002158757,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.","Hi @Liryna , I have update a version using MultiByteToWideChar and WideCharToMultiByte to convert between utf8 and wchar. And for checking the invalid input of utf8 string, I add a check of 0xfffd as documented in msdn.
I have test it on our application, and the readdir is working correctly.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1002169304,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.",Thank you very much @ATRiiX for the contribution and for being so quick! Very appreciated üèÜ,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/Liryna,9,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1003406356,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.","@ATRiiX https://github.com/ATRiiX/dokany/commit/3193316abaf4f40eb9ef9a93073a32360a12b22a This looks interesting, do you have a repro or described how it happened ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/ATRiiX,10,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1003505462,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.","@Liryna üç∫Happy 2022! Glad to hear you are interested to this patch. I just ported it to the master branch, but I donnot have the environment for testing the self-compiled driver recently. So I have not send the pr yet.
This is to fix issue #355 , as I tested on v1.3.0.1000 earlier last year. The problem is caused by the different behavior of IOCTL_MOUNTDEV_QUERY_DEVICE_NAME on sub directories under windows local drive and dokan drive. I use the windows process monitor to traceing the syscalls of opening the properties, and find that the local dirs ioctl return STATUS_INVALID_PARAMETER where the dokan sub dir return SUCCESS. And I added the original IsVolumeOpen check on this ioctl, but it's not working. Finally found the FsContext can be null by adding log there, so I modify the original IsVolumeOpen. (As far as I remember)
I may still need some days ready to test it after the holiday, or if you can pick it and help testing the properties issue.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1038,2021-12-25T07:08:15Z,2021-12-28T15:51:22Z,2022-01-04T02:46:38Z,MERGED,True,33,185,3,https://github.com/ATRiiX,FUSE - Fix compare size_t to zero in fuse utils,1,[],https://github.com/dokan-dev/dokany/pull/1038,https://github.com/Liryna,11,https://github.com/dokan-dev/dokany/pull/1038#issuecomment-1003613143,"We've got an infinite loop problem in 'convert_char' function when the get_func fail, because the return value in size_t would never less than zero.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Fix the infinite loop problem by changing several function's return type from size_t to int.","Happy 2022 you too! ü•≥ Oh I see. Thanks for the detailed response!
I believe it can wait so feel free to ping me when you are able to take a look at it again.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1044,2022-01-10T20:21:08Z,2022-01-10T22:12:13Z,2022-01-11T09:06:13Z,MERGED,True,6,27,1,https://github.com/Rondom,"Revert ""CI: Install MSYS2 on VS2019 image""",1,[],https://github.com/dokan-dev/dokany/pull/1044,https://github.com/Rondom,1,https://github.com/dokan-dev/dokany/pull/1044,"This reverts commit f980bb2.
MSYS2 is by now installed in the ""Visual Studio 2019"" image on AppVeyor.
Thus, we can simply update the existing installation like it was done
previously.
As a side effect, this also avoids exceeding AppVeyor's maximum cache
size, because substantially less data needs to be cached.
Fixes https://ci.appveyor.com/project/Maxhy/dokany/build/job/a1q24gl0irqga8ao#L3581
Updating build cache...
Cache 'C:\dokan_ci_cache' - Zipping...Unable to save cache - skipping
Compressed cache item cannot exceed 1,048,576,000 bytes.
Build success

Checklist

[ x ] My code follows the style guidelines of this project
[ x ] I have performed a self-review of my own code
[ x ] I have commented my code, particularly in hard-to-understand areas
[ x ] I have made corresponding changes to the existing documentation
[ x ] My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
[ x ] I have cleaned up the commit history (use rebase and squash)","This reverts commit f980bb2.
MSYS2 is by now installed in the ""Visual Studio 2019"" image on AppVeyor.
Thus, we can simply update the existing installation like it was done
previously.
As a side effect, this also avoids exceeding AppVeyor's maximum cache
size, because substantially less data needs to be cached.
Fixes https://ci.appveyor.com/project/Maxhy/dokany/build/job/a1q24gl0irqga8ao#L3581
Updating build cache...
Cache 'C:\dokan_ci_cache' - Zipping...Unable to save cache - skipping
Compressed cache item cannot exceed 1,048,576,000 bytes.
Build success

Checklist

[ x ] My code follows the style guidelines of this project
[ x ] I have performed a self-review of my own code
[ x ] I have commented my code, particularly in hard-to-understand areas
[ x ] I have made corresponding changes to the existing documentation
[ x ] My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
[ x ] I have cleaned up the commit history (use rebase and squash)",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1044,2022-01-10T20:21:08Z,2022-01-10T22:12:13Z,2022-01-11T09:06:13Z,MERGED,True,6,27,1,https://github.com/Rondom,"Revert ""CI: Install MSYS2 on VS2019 image""",1,[],https://github.com/dokan-dev/dokany/pull/1044,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/1044#issuecomment-1009393473,"This reverts commit f980bb2.
MSYS2 is by now installed in the ""Visual Studio 2019"" image on AppVeyor.
Thus, we can simply update the existing installation like it was done
previously.
As a side effect, this also avoids exceeding AppVeyor's maximum cache
size, because substantially less data needs to be cached.
Fixes https://ci.appveyor.com/project/Maxhy/dokany/build/job/a1q24gl0irqga8ao#L3581
Updating build cache...
Cache 'C:\dokan_ci_cache' - Zipping...Unable to save cache - skipping
Compressed cache item cannot exceed 1,048,576,000 bytes.
Build success

Checklist

[ x ] My code follows the style guidelines of this project
[ x ] I have performed a self-review of my own code
[ x ] I have commented my code, particularly in hard-to-understand areas
[ x ] I have made corresponding changes to the existing documentation
[ x ] My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
[ x ] I have cleaned up the commit history (use rebase and squash)",Thanks as always @Rondom for the pull request! Glad to see you here üëç and thanks for improving the build time by 1/3!,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1044,2022-01-10T20:21:08Z,2022-01-10T22:12:13Z,2022-01-11T09:06:13Z,MERGED,True,6,27,1,https://github.com/Rondom,"Revert ""CI: Install MSYS2 on VS2019 image""",1,[],https://github.com/dokan-dev/dokany/pull/1044,https://github.com/Rondom,3,https://github.com/dokan-dev/dokany/pull/1044#issuecomment-1009735570,"This reverts commit f980bb2.
MSYS2 is by now installed in the ""Visual Studio 2019"" image on AppVeyor.
Thus, we can simply update the existing installation like it was done
previously.
As a side effect, this also avoids exceeding AppVeyor's maximum cache
size, because substantially less data needs to be cached.
Fixes https://ci.appveyor.com/project/Maxhy/dokany/build/job/a1q24gl0irqga8ao#L3581
Updating build cache...
Cache 'C:\dokan_ci_cache' - Zipping...Unable to save cache - skipping
Compressed cache item cannot exceed 1,048,576,000 bytes.
Build success

Checklist

[ x ] My code follows the style guidelines of this project
[ x ] I have performed a self-review of my own code
[ x ] I have commented my code, particularly in hard-to-understand areas
[ x ] I have made corresponding changes to the existing documentation
[ x ] My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
[ x ] I have cleaned up the commit history (use rebase and squash)","Yes, I saw the 2.0 announcement and thought this would be a nice way of congratulating üòÜ
Great work!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1053,2022-01-22T03:39:21Z,2022-01-23T21:55:41Z,2022-01-23T21:56:03Z,MERGED,True,24,24,1,https://github.com/ATRiiX,Kernel - Fix subfolder property when using mount manager,1,[],https://github.com/dokan-dev/dokany/pull/1053,https://github.com/ATRiiX,1,https://github.com/dokan-dev/dokany/pull/1053,"Fixes #355 .
Compared with opening the properties of windows local drive's sub-directories, I found the IOCTL_MOUNTDEV_QUERY_DEVICE_NAME return STATUS_INVALID_PARAMETER, while the dokan mirror drive's sub-dir return SUCCESS.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

add IsVolumeOpen check and return STATUS_INVALID_PARAMETER in the MOUNTDEVCONTROLTYPE.","Fixes #355 .
Compared with opening the properties of windows local drive's sub-directories, I found the IOCTL_MOUNTDEV_QUERY_DEVICE_NAME return STATUS_INVALID_PARAMETER, while the dokan mirror drive's sub-dir return SUCCESS.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

add IsVolumeOpen check and return STATUS_INVALID_PARAMETER in the MOUNTDEVCONTROLTYPE.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1053,2022-01-22T03:39:21Z,2022-01-23T21:55:41Z,2022-01-23T21:56:03Z,MERGED,True,24,24,1,https://github.com/ATRiiX,Kernel - Fix subfolder property when using mount manager,1,[],https://github.com/dokan-dev/dokany/pull/1053,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/1053#issuecomment-1019037099,"Fixes #355 .
Compared with opening the properties of windows local drive's sub-directories, I found the IOCTL_MOUNTDEV_QUERY_DEVICE_NAME return STATUS_INVALID_PARAMETER, while the dokan mirror drive's sub-dir return SUCCESS.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

add IsVolumeOpen check and return STATUS_INVALID_PARAMETER in the MOUNTDEVCONTROLTYPE.","@ATRiiX Hi @ATRiiX,
Thanks for the PR!
Now that I read a little more the code, I believe the DiskDeviceControl should not include the MOUNTDEVCONTROLTYPE ioctl at all and have its own function that does the IsVolumeOpen check .
Like actually implement the switch case here with the two  functions and remove the IsVolumeOpen comment

  
    
      dokany/sys/device.c
    
    
        Lines 739 to 769
      in
      3f7227c
    
  
  
    

        
          
             switch (RequestContext->IrpSp->Parameters.DeviceIoControl.IoControlCode) { 
        

        
          
               default: { 
        

        
          
                 // TODO: The early check fails some IFSTEST (Network) should make 
        

        
          
                 // an exception for them. Disabling the volume open check for now. 
        

        
          
                 // Device control functions are only supposed to work on a volume handle. 
        

        
          
                 // Some win32 functions, like GetVolumePathName, rely on these operations 
        

        
          
                 // failing for file/directory handles. On the other hand, dokan issues its 
        

        
          
                 // custom operations on non-volume handles, so we can't do this check at 
        

        
          
                 // the top. 
        

        
          
                 /*if (!IsVolumeOpen(RequestContext->Vcb, 
        

        
          
                                   RequestContext->IrpSp->FileObject)) { 
        

        
          
                   status = STATUS_INVALID_PARAMETER; 
        

        
          
                   break; 
        

        
          
                 }*/ 
        

        
          
                 ULONG baseCode = DEVICE_TYPE_FROM_CTL_CODE( 
        

        
          
                     RequestContext->IrpSp->Parameters.DeviceIoControl.IoControlCode); 
        

        
          
                 // In case of IOCTL_STORAGE_BASE or IOCTL_DISK_BASE OR 
        

        
          
                 // FILE_DEVICE_NETWORK_FILE_SYSTEM or MOUNTDEVCONTROLTYPE ioctl type, pass 
        

        
          
                 // to DiskDeviceControl to avoid code duplication 
        

        
          
                 // TODO: probably not the best way to pass down Irp... 
        

        
          
                 if (baseCode == IOCTL_STORAGE_BASE || baseCode == IOCTL_DISK_BASE || 
        

        
          
                     baseCode == FILE_DEVICE_NETWORK_FILE_SYSTEM || 
        

        
          
                     baseCode == MOUNTDEVCONTROLTYPE) { 
        

        
          
                   status = DiskDeviceControlWithLock(RequestContext, 
        

        
          
                                                      RequestContext->Dcb->DeviceObject); 
        

        
          
                 } else { 
        

        
          
                   DOKAN_LOG_FINE_IRP( 
        

        
          
                       RequestContext, ""Unsupported IoControlCode %x"", 
        

        
          
                       RequestContext->IrpSp->Parameters.DeviceIoControl.IoControlCode); 
        

        
          
                 } 
        

        
          
               } break;",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1053,2022-01-22T03:39:21Z,2022-01-23T21:55:41Z,2022-01-23T21:56:03Z,MERGED,True,24,24,1,https://github.com/ATRiiX,Kernel - Fix subfolder property when using mount manager,1,[],https://github.com/dokan-dev/dokany/pull/1053,https://github.com/ATRiiX,3,https://github.com/dokan-dev/dokany/pull/1053#issuecomment-1019149049,"Fixes #355 .
Compared with opening the properties of windows local drive's sub-directories, I found the IOCTL_MOUNTDEV_QUERY_DEVICE_NAME return STATUS_INVALID_PARAMETER, while the dokan mirror drive's sub-dir return SUCCESS.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

add IsVolumeOpen check and return STATUS_INVALID_PARAMETER in the MOUNTDEVCONTROLTYPE.","Hi @Liryna , thanks for the reply.
I have update the pr with your suggestions. Now add IsVolumeOpen check when the code MOUNTDEVCONTROLTYPE, and test it can also fix the properties issue. Please take some time to review the pr.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1053,2022-01-22T03:39:21Z,2022-01-23T21:55:41Z,2022-01-23T21:56:03Z,MERGED,True,24,24,1,https://github.com/ATRiiX,Kernel - Fix subfolder property when using mount manager,1,[],https://github.com/dokan-dev/dokany/pull/1053,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/1053#issuecomment-1019293637,"Fixes #355 .
Compared with opening the properties of windows local drive's sub-directories, I found the IOCTL_MOUNTDEV_QUERY_DEVICE_NAME return STATUS_INVALID_PARAMETER, while the dokan mirror drive's sub-dir return SUCCESS.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

add IsVolumeOpen check and return STATUS_INVALID_PARAMETER in the MOUNTDEVCONTROLTYPE.",Thanks @ATRiiX for the quick change! I added some small comments and I believe we are good to merge it üòé,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1053,2022-01-22T03:39:21Z,2022-01-23T21:55:41Z,2022-01-23T21:56:03Z,MERGED,True,24,24,1,https://github.com/ATRiiX,Kernel - Fix subfolder property when using mount manager,1,[],https://github.com/dokan-dev/dokany/pull/1053,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/1053#issuecomment-1019575185,"Fixes #355 .
Compared with opening the properties of windows local drive's sub-directories, I found the IOCTL_MOUNTDEV_QUERY_DEVICE_NAME return STATUS_INVALID_PARAMETER, while the dokan mirror drive's sub-dir return SUCCESS.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

add IsVolumeOpen check and return STATUS_INVALID_PARAMETER in the MOUNTDEVCONTROLTYPE.",Thanks again for your contribution @ATRiiX üèÜ very appreciated!,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1062,2022-02-01T16:56:28Z,2022-02-05T21:01:39Z,2022-02-05T21:01:39Z,MERGED,True,16,7,1,https://github.com/nikola-sh,Fix SetFileAttributes behavior for memfs sample,1,[],https://github.com/dokan-dev/dokany/pull/1062,https://github.com/nikola-sh,1,https://github.com/dokan-dev/dokany/pull/1062,"Fixes issue that SetFileAttributes(..., FILE_ATTRIBUTE_NORMAL) can
clean attributes prohibited to clean, for example, FILE_ATTRIBUTE_DIRECTORY .
See SetFileAttributesW documentation.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Operate on allowed attributes only
Remove incorrect behavior in case fileattributes == 0
Rework incorrect condition (fileattributes & (fileattributes - 1))","Fixes issue that SetFileAttributes(..., FILE_ATTRIBUTE_NORMAL) can
clean attributes prohibited to clean, for example, FILE_ATTRIBUTE_DIRECTORY .
See SetFileAttributesW documentation.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Operate on allowed attributes only
Remove incorrect behavior in case fileattributes == 0
Rework incorrect condition (fileattributes & (fileattributes - 1))",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1062,2022-02-01T16:56:28Z,2022-02-05T21:01:39Z,2022-02-05T21:01:39Z,MERGED,True,16,7,1,https://github.com/nikola-sh,Fix SetFileAttributes behavior for memfs sample,1,[],https://github.com/dokan-dev/dokany/pull/1062,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/1062#issuecomment-1030698207,"Fixes issue that SetFileAttributes(..., FILE_ATTRIBUTE_NORMAL) can
clean attributes prohibited to clean, for example, FILE_ATTRIBUTE_DIRECTORY .
See SetFileAttributesW documentation.
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

Operate on allowed attributes only
Remove incorrect behavior in case fileattributes == 0
Rework incorrect condition (fileattributes & (fileattributes - 1))","Thanks @nikola-sh for reporting the issue and directly providing a pull request! Very appreciated! üèÜ
Sorry for the delay",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1080,2022-03-21T17:36:11Z,2022-03-22T12:53:56Z,2022-03-22T14:37:42Z,CLOSED,False,0,0,1,https://github.com/gmh5225,converting file format to UTF-8 that can be compiled by llvm,1,[],https://github.com/dokan-dev/dokany/pull/1080,https://github.com/gmh5225,1,https://github.com/dokan-dev/dokany/pull/1080,"Converting file format to UTF-8 that can be compiled by llvm.
How to testing?
You can use llvm-msvc to compile it [link]","Converting file format to UTF-8 that can be compiled by llvm.
How to testing?
You can use llvm-msvc to compile it [link]",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1080,2022-03-21T17:36:11Z,2022-03-22T12:53:56Z,2022-03-22T14:37:42Z,CLOSED,False,0,0,1,https://github.com/gmh5225,converting file format to UTF-8 that can be compiled by llvm,1,[],https://github.com/dokan-dev/dokany/pull/1080,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/1080#issuecomment-1074581173,"Converting file format to UTF-8 that can be compiled by llvm.
How to testing?
You can use llvm-msvc to compile it [link]","Hi @gmh5225 ,
Looks like file is already UTF-8. What is the issue you are trying to solve ?",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1080,2022-03-21T17:36:11Z,2022-03-22T12:53:56Z,2022-03-22T14:37:42Z,CLOSED,False,0,0,1,https://github.com/gmh5225,converting file format to UTF-8 that can be compiled by llvm,1,[],https://github.com/dokan-dev/dokany/pull/1080,https://github.com/gmh5225,3,https://github.com/dokan-dev/dokany/pull/1080#issuecomment-1074689035,"Converting file format to UTF-8 that can be compiled by llvm.
How to testing?
You can use llvm-msvc to compile it [link]","Hi @gmh5225 , Looks like file is already UTF-8. What is the issue you are trying to solve ?

The original file format is UTF-16 (LE).
1>util\log.c(492,10): fatal error : UTF-16 (LE) byte order mark detected in 'util/ioctl.inc', but encoding is not supported",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1080,2022-03-21T17:36:11Z,2022-03-22T12:53:56Z,2022-03-22T14:37:42Z,CLOSED,False,0,0,1,https://github.com/gmh5225,converting file format to UTF-8 that can be compiled by llvm,1,[],https://github.com/dokan-dev/dokany/pull/1080,https://github.com/Liryna,4,https://github.com/dokan-dev/dokany/pull/1080#issuecomment-1075138934,"Converting file format to UTF-8 that can be compiled by llvm.
How to testing?
You can use llvm-msvc to compile it [link]","Thanks @gmh5225 . As Github website is not correctly showing the diff, I preferred to apply the conversion myself.
0e2c835
Let me know if there is an issue and thanks for the contribution!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1080,2022-03-21T17:36:11Z,2022-03-22T12:53:56Z,2022-03-22T14:37:42Z,CLOSED,False,0,0,1,https://github.com/gmh5225,converting file format to UTF-8 that can be compiled by llvm,1,[],https://github.com/dokan-dev/dokany/pull/1080,https://github.com/gmh5225,5,https://github.com/dokan-dev/dokany/pull/1080#issuecomment-1075264348,"Converting file format to UTF-8 that can be compiled by llvm.
How to testing?
You can use llvm-msvc to compile it [link]",OK. No problem.,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1085,2022-04-01T07:52:29Z,2022-04-01T11:23:49Z,2022-04-02T01:06:12Z,MERGED,True,2,2,1,https://github.com/ATRiiX,FUSE - update library name in module definition,1,[],https://github.com/dokan-dev/dokany/pull/1085,https://github.com/ATRiiX,1,https://github.com/dokan-dev/dokany/pull/1085,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
When dynamic linking the dokanfuse library, the application would still looking for the dll named dokanfuse1.
Need update it in file dokanfuse.def.","Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
When dynamic linking the dokanfuse library, the application would still looking for the dll named dokanfuse1.
Need update it in file dokanfuse.def.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1085,2022-04-01T07:52:29Z,2022-04-01T11:23:49Z,2022-04-02T01:06:12Z,MERGED,True,2,2,1,https://github.com/ATRiiX,FUSE - update library name in module definition,1,[],https://github.com/dokan-dev/dokany/pull/1085,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/1085#issuecomment-1085780726,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
When dynamic linking the dokanfuse library, the application would still looking for the dll named dokanfuse1.
Need update it in file dokanfuse.def.",Oups! Thank you very much @ATRiiX !,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1095,2022-05-31T12:11:59Z,,2022-05-31T12:12:16Z,OPEN,False,0,6,1,https://github.com/KoltesDigital,Library - Remove unused DOKAN_LINK_INFORMATION,1,[],https://github.com/dokan-dev/dokany/pull/1095,https://github.com/KoltesDigital,1,https://github.com/dokan-dev/dokany/pull/1095,"Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

DOKAN_LINK_INFORMATION is not used anymore.","Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:

DOKAN_LINK_INFORMATION is not used anymore.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1096,2022-06-01T14:38:14Z,2022-06-02T12:35:59Z,2022-06-03T12:41:29Z,MERGED,True,18,11,2,https://github.com/KoltesDigital,Library - Allow FindFilesWithPattern to return STATUS_NOT_IMPLEMENTED,1,[],https://github.com/dokan-dev/dokany/pull/1096,https://github.com/KoltesDigital,1,https://github.com/dokan-dev/dokany/pull/1096,"Reverts #9eb4d15bc4c533b73dd718b3114c0be758f874d9
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
I'm upgrading the Rust bindings to use ^2. The high-level API always defines FindFilesWithPattern, with a default implementation returning STATUS_NOT_IMPLEMENTED. But the MemFS example was not working well. I discovered that a few months ago, this function was not allowed to return STATUS_NOT_IMPLEMENTED anymore. I find that's too bad.
After I tried for a long time to allow Rust to choose whether FindFiles and FindFilesWithPattern are defined, I finally moved to changing the C library's behavior. It gives back the ability to all functions to return STATUS_NOT_IMPLEMENTED. I believe this will be beneficial for other bindings as well.","Reverts #9eb4d15bc4c533b73dd718b3114c0be758f874d9
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
I'm upgrading the Rust bindings to use ^2. The high-level API always defines FindFilesWithPattern, with a default implementation returning STATUS_NOT_IMPLEMENTED. But the MemFS example was not working well. I discovered that a few months ago, this function was not allowed to return STATUS_NOT_IMPLEMENTED anymore. I find that's too bad.
After I tried for a long time to allow Rust to choose whether FindFiles and FindFilesWithPattern are defined, I finally moved to changing the C library's behavior. It gives back the ability to all functions to return STATUS_NOT_IMPLEMENTED. I believe this will be beneficial for other bindings as well.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1096,2022-06-01T14:38:14Z,2022-06-02T12:35:59Z,2022-06-03T12:41:29Z,MERGED,True,18,11,2,https://github.com/KoltesDigital,Library - Allow FindFilesWithPattern to return STATUS_NOT_IMPLEMENTED,1,[],https://github.com/dokan-dev/dokany/pull/1096,https://github.com/Liryna,2,https://github.com/dokan-dev/dokany/pull/1096#issuecomment-1144343471,"Reverts #9eb4d15bc4c533b73dd718b3114c0be758f874d9
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
I'm upgrading the Rust bindings to use ^2. The high-level API always defines FindFilesWithPattern, with a default implementation returning STATUS_NOT_IMPLEMENTED. But the MemFS example was not working well. I discovered that a few months ago, this function was not allowed to return STATUS_NOT_IMPLEMENTED anymore. I find that's too bad.
After I tried for a long time to allow Rust to choose whether FindFiles and FindFilesWithPattern are defined, I finally moved to changing the C library's behavior. It gives back the ability to all functions to return STATUS_NOT_IMPLEMENTED. I believe this will be beneficial for other bindings as well.","Thank you @KoltesDigital for the pull request! I agree it is way easier to change the library than adapting all the wrappers. This should have been done at first but we needed a üí™ contributor like you to make it happen!
Please see the comment I added.",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1096,2022-06-01T14:38:14Z,2022-06-02T12:35:59Z,2022-06-03T12:41:29Z,MERGED,True,18,11,2,https://github.com/KoltesDigital,Library - Allow FindFilesWithPattern to return STATUS_NOT_IMPLEMENTED,1,[],https://github.com/dokan-dev/dokany/pull/1096,https://github.com/KoltesDigital,3,https://github.com/dokan-dev/dokany/pull/1096#issuecomment-1144538561,"Reverts #9eb4d15bc4c533b73dd718b3114c0be758f874d9
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
I'm upgrading the Rust bindings to use ^2. The high-level API always defines FindFilesWithPattern, with a default implementation returning STATUS_NOT_IMPLEMENTED. But the MemFS example was not working well. I discovered that a few months ago, this function was not allowed to return STATUS_NOT_IMPLEMENTED anymore. I find that's too bad.
After I tried for a long time to allow Rust to choose whether FindFiles and FindFilesWithPattern are defined, I finally moved to changing the C library's behavior. It gives back the ability to all functions to return STATUS_NOT_IMPLEMENTED. I believe this will be beneficial for other bindings as well.",Haha don't overstate it üòÑ,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1096,2022-06-01T14:38:14Z,2022-06-02T12:35:59Z,2022-06-03T12:41:29Z,MERGED,True,18,11,2,https://github.com/KoltesDigital,Library - Allow FindFilesWithPattern to return STATUS_NOT_IMPLEMENTED,1,[],https://github.com/dokan-dev/dokany/pull/1096,https://github.com/KoltesDigital,4,https://github.com/dokan-dev/dokany/pull/1096#issuecomment-1144735462,"Reverts #9eb4d15bc4c533b73dd718b3114c0be758f874d9
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
I'm upgrading the Rust bindings to use ^2. The high-level API always defines FindFilesWithPattern, with a default implementation returning STATUS_NOT_IMPLEMENTED. But the MemFS example was not working well. I discovered that a few months ago, this function was not allowed to return STATUS_NOT_IMPLEMENTED anymore. I find that's too bad.
After I tried for a long time to allow Rust to choose whether FindFiles and FindFilesWithPattern are defined, I finally moved to changing the C library's behavior. It gives back the ability to all functions to return STATUS_NOT_IMPLEMENTED. I believe this will be beneficial for other bindings as well.",While you're here: is there a reason why PFillFindData returns 0 on success and PFillFindStreamData returns 0 on error?,True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1096,2022-06-01T14:38:14Z,2022-06-02T12:35:59Z,2022-06-03T12:41:29Z,MERGED,True,18,11,2,https://github.com/KoltesDigital,Library - Allow FindFilesWithPattern to return STATUS_NOT_IMPLEMENTED,1,[],https://github.com/dokan-dev/dokany/pull/1096,https://github.com/Liryna,5,https://github.com/dokan-dev/dokany/pull/1096#issuecomment-1144812663,"Reverts #9eb4d15bc4c533b73dd718b3114c0be758f874d9
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
I'm upgrading the Rust bindings to use ^2. The high-level API always defines FindFilesWithPattern, with a default implementation returning STATUS_NOT_IMPLEMENTED. But the MemFS example was not working well. I discovered that a few months ago, this function was not allowed to return STATUS_NOT_IMPLEMENTED anymore. I find that's too bad.
After I tried for a long time to allow Rust to choose whether FindFiles and FindFilesWithPattern are defined, I finally moved to changing the C library's behavior. It gives back the ability to all functions to return STATUS_NOT_IMPLEMENTED. I believe this will be beneficial for other bindings as well.","Thanks for the quick change! üèÜ
Regarding PFillFindData & PFillFindStreamData , some context: The difference is that directory listing is produced by a IRP_MJ_DIRECTORY_CONTROL  which supports Flags like SL_INDEX_SPECIFIED which request to resume the listing (previously stopped by the destination buffer being too small) from where we stopped. That's why DokanFillFileData cache all the items and never return an error right now.
Stream listing is produced by IRP_MJ_QUERY_INFORMATION which does not have this logic. When the buffer is full, we just return buffer overflow so that the kernel reallocate a larger one until it fit the data. That's why DokanFillFindStreamData return a failure when the buffer is full to ask the user FS to abort the listing since no new entry can be added.
So now answering your question why 0 is a success for PFillFindData and FALSE is a failure for PFillFindStreamData: Legacy logic üò¢ There is no reason. Maybe it should have been changed when we moved to 2.x",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1096,2022-06-01T14:38:14Z,2022-06-02T12:35:59Z,2022-06-03T12:41:29Z,MERGED,True,18,11,2,https://github.com/KoltesDigital,Library - Allow FindFilesWithPattern to return STATUS_NOT_IMPLEMENTED,1,[],https://github.com/dokan-dev/dokany/pull/1096,https://github.com/KoltesDigital,6,https://github.com/dokan-dev/dokany/pull/1096#issuecomment-1145086297,"Reverts #9eb4d15bc4c533b73dd718b3114c0be758f874d9
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
I'm upgrading the Rust bindings to use ^2. The high-level API always defines FindFilesWithPattern, with a default implementation returning STATUS_NOT_IMPLEMENTED. But the MemFS example was not working well. I discovered that a few months ago, this function was not allowed to return STATUS_NOT_IMPLEMENTED anymore. I find that's too bad.
After I tried for a long time to allow Rust to choose whether FindFiles and FindFilesWithPattern are defined, I finally moved to changing the C library's behavior. It gives back the ability to all functions to return STATUS_NOT_IMPLEMENTED. I believe this will be beneficial for other bindings as well.","Thanks for the explanations, the merge, and the project overall!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1096,2022-06-01T14:38:14Z,2022-06-02T12:35:59Z,2022-06-03T12:41:29Z,MERGED,True,18,11,2,https://github.com/KoltesDigital,Library - Allow FindFilesWithPattern to return STATUS_NOT_IMPLEMENTED,1,[],https://github.com/dokan-dev/dokany/pull/1096,https://github.com/KoltesDigital,7,https://github.com/dokan-dev/dokany/pull/1096#issuecomment-1145109488,"Reverts #9eb4d15bc4c533b73dd718b3114c0be758f874d9
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
I'm upgrading the Rust bindings to use ^2. The high-level API always defines FindFilesWithPattern, with a default implementation returning STATUS_NOT_IMPLEMENTED. But the MemFS example was not working well. I discovered that a few months ago, this function was not allowed to return STATUS_NOT_IMPLEMENTED anymore. I find that's too bad.
After I tried for a long time to allow Rust to choose whether FindFiles and FindFilesWithPattern are defined, I finally moved to changing the C library's behavior. It gives back the ability to all functions to return STATUS_NOT_IMPLEMENTED. I believe this will be beneficial for other bindings as well.","I just noticed that it's written at the bottom of https://github.com/dokan-dev/dokany/wiki/Update-Dokan-1.1.0-application-to-Dokany-2.0.0 . I'm not allowed to change it, so please consider editing it!",True,{}
dokan-dev/dokany,https://github.com/dokan-dev/dokany,1096,2022-06-01T14:38:14Z,2022-06-02T12:35:59Z,2022-06-03T12:41:29Z,MERGED,True,18,11,2,https://github.com/KoltesDigital,Library - Allow FindFilesWithPattern to return STATUS_NOT_IMPLEMENTED,1,[],https://github.com/dokan-dev/dokany/pull/1096,https://github.com/Liryna,8,https://github.com/dokan-dev/dokany/pull/1096#issuecomment-1145923638,"Reverts #9eb4d15bc4c533b73dd718b3114c0be758f874d9
Checklist

 My code follows the style guidelines of this project
 I have performed a self-review of my own code
 I have commented my code, particularly in hard-to-understand areas
 I have made corresponding changes to the existing documentation
 My changes generate no new warnings
 I have updated the change log (Add/Change/Fix)
 I have cleaned up the commit history (use rebase and squash)

Changes proposed in this pull request:
I'm upgrading the Rust bindings to use ^2. The high-level API always defines FindFilesWithPattern, with a default implementation returning STATUS_NOT_IMPLEMENTED. But the MemFS example was not working well. I discovered that a few months ago, this function was not allowed to return STATUS_NOT_IMPLEMENTED anymore. I find that's too bad.
After I tried for a long time to allow Rust to choose whether FindFiles and FindFilesWithPattern are defined, I finally moved to changing the C library's behavior. It gives back the ability to all functions to return STATUS_NOT_IMPLEMENTED. I believe this will be beneficial for other bindings as well.",@KoltesDigital https://github.com/dokan-dev/dokany/wiki/Update-Dokan-1.1.0-application-to-Dokany-2.0.0 is now updated üëç Thanks!,True,{}
