apple/cups,https://github.com/apple/cups,4787,2016-03-17T17:49:58Z,2016-03-24T22:02:17Z,2016-03-24T23:04:30Z,CLOSED,False,5,55,6,https://github.com/computersforpeace,--enable-debug-printfs bugfix + other cosmetic fixes,3,['priority-low'],https://github.com/apple/cups/pull/4787,https://github.com/computersforpeace,1,https://github.com/apple/cups/pull/4787,"Addresses these:
#4784
http://www.cups.org/pipermail/cups/2016-March/027577.html
I hope you're taking Github PRs now?
Regards,
Brian","Addresses these:
#4784
http://www.cups.org/pipermail/cups/2016-March/027577.html
I hope you're taking Github PRs now?
Regards,
Brian",True,{}
apple/cups,https://github.com/apple/cups,4787,2016-03-17T17:49:58Z,2016-03-24T22:02:17Z,2016-03-24T23:04:30Z,CLOSED,False,5,55,6,https://github.com/computersforpeace,--enable-debug-printfs bugfix + other cosmetic fixes,3,['priority-low'],https://github.com/apple/cups/pull/4787,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4787#issuecomment-198086674,"Addresses these:
#4784
http://www.cups.org/pipermail/cups/2016-March/027577.html
I hope you're taking Github PRs now?
Regards,
Brian","Yes, we'll be accepting PRs, but please be patient as I am currently swamped making this Github thing happen... :)",True,{}
apple/cups,https://github.com/apple/cups,4787,2016-03-17T17:49:58Z,2016-03-24T22:02:17Z,2016-03-24T23:04:30Z,CLOSED,False,5,55,6,https://github.com/computersforpeace,--enable-debug-printfs bugfix + other cosmetic fixes,3,['priority-low'],https://github.com/apple/cups/pull/4787,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/4787#issuecomment-201044042,"Addresses these:
#4784
http://www.cups.org/pipermail/cups/2016-March/027577.html
I hope you're taking Github PRs now?
Regards,
Brian","The poppler/ghostscript changes were addressed separately.
Fixed debug_ops.
[master 508de67] The debug strings table for mime type operations was out of sync with the enumeration (PR #4787)
[branch-2.1 f94124c] Mirror fix from master.
I'm undecided on whether I'll add the vim swap file change to .gitignore; that's something you can handle locally in the meantime...",True,{}
apple/cups,https://github.com/apple/cups,4787,2016-03-17T17:49:58Z,2016-03-24T22:02:17Z,2016-03-24T23:04:30Z,CLOSED,False,5,55,6,https://github.com/computersforpeace,--enable-debug-printfs bugfix + other cosmetic fixes,3,['priority-low'],https://github.com/apple/cups/pull/4787,https://github.com/computersforpeace,4,https://github.com/apple/cups/pull/4787#issuecomment-201064016,"Addresses these:
#4784
http://www.cups.org/pipermail/cups/2016-March/027577.html
I hope you're taking Github PRs now?
Regards,
Brian","Did you have any comments on this part of my original question?

It'd be best if we could use the compiler to our advantage to catch
these types of errors (e.g., introduce some kind of compile-time
assertion;, or use a switch/case without a 'default' instead of an
array, since many compilers would warn about the unused enum), but I
didn't really want to refactor this all for a bugfix. I'm also not as
familiar with the non-Linux systems that CUPS is built for, so I'm not
sure what (if any) C99 features I could use, for instance.

I notice you didn't even take my comment for the enum:
/* NOTE: update debug_ops[] in type.c whenever editing this enum */

so it seems this is just as liable to get broken again in the future.",True,{}
apple/cups,https://github.com/apple/cups,4787,2016-03-17T17:49:58Z,2016-03-24T22:02:17Z,2016-03-24T23:04:30Z,CLOSED,False,5,55,6,https://github.com/computersforpeace,--enable-debug-printfs bugfix + other cosmetic fixes,3,['priority-low'],https://github.com/apple/cups/pull/4787,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/4787#issuecomment-201066130,"Addresses these:
#4784
http://www.cups.org/pipermail/cups/2016-March/027577.html
I hope you're taking Github PRs now?
Regards,
Brian","mime.h is a public header so I don't want to expose internal implementation details there (probably just confuse anyone reading the header).
But regardless, we've added 2 new operations to the enum over the last 18 years so I'm not particularly worried about it.",True,{}
apple/cups,https://github.com/apple/cups,4788,2016-03-17T22:29:49Z,2016-03-17T23:26:30Z,2016-03-17T23:27:32Z,MERGED,True,11,0,1,https://github.com/leoarnold,Add a mailmap for correct work attribution,1,['priority-low'],https://github.com/apple/cups/pull/4788,https://github.com/leoarnold,1,https://github.com/apple/cups/pull/4788,This MailMap will ensure correct GitHub attribution for Michael R Sweet,This MailMap will ensure correct GitHub attribution for Michael R Sweet,True,{}
apple/cups,https://github.com/apple/cups,4788,2016-03-17T22:29:49Z,2016-03-17T23:26:30Z,2016-03-17T23:27:32Z,MERGED,True,11,0,1,https://github.com/leoarnold,Add a mailmap for correct work attribution,1,['priority-low'],https://github.com/apple/cups/pull/4788,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4788#issuecomment-198129151,This MailMap will ensure correct GitHub attribution for Michael R Sweet,"Thanks, I've merged this...",True,{}
apple/cups,https://github.com/apple/cups,4792,2016-03-25T10:14:12Z,2016-04-21T20:39:20Z,2016-04-21T20:39:23Z,MERGED,True,1,1,1,https://github.com/OdyX,Fix spelling error in 'returning',1,[],https://github.com/apple/cups/pull/4792,https://github.com/OdyX,1,https://github.com/apple/cups/pull/4792,,,True,{}
apple/cups,https://github.com/apple/cups,4792,2016-03-25T10:14:12Z,2016-04-21T20:39:20Z,2016-04-21T20:39:23Z,MERGED,True,1,1,1,https://github.com/OdyX,Fix spelling error in 'returning',1,[],https://github.com/apple/cups/pull/4792,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4792#issuecomment-213104987,,Thanks!,True,{}
apple/cups,https://github.com/apple/cups,4807,2016-04-19T17:24:45Z,2016-04-21T20:38:49Z,2016-08-05T17:04:00Z,MERGED,True,3,3,1,https://github.com/OdyX,Fix spanish gerunds in index.html,1,[],https://github.com/apple/cups/pull/4807,https://github.com/OdyX,1,https://github.com/apple/cups/pull/4807,"See the Debian bug: https://bugs.debian.org/821788 from Santiago Vila:

The file doc/es/index.html.in is a translation of doc/index.html.in, but gerunds like ""Using Network Printers"" have been translated as ""Usando [...]"" (Spanish gerund, which is not the same as English gerund). English gerund is a noun, so it should be translated as such.","See the Debian bug: https://bugs.debian.org/821788 from Santiago Vila:

The file doc/es/index.html.in is a translation of doc/index.html.in, but gerunds like ""Using Network Printers"" have been translated as ""Usando [...]"" (Spanish gerund, which is not the same as English gerund). English gerund is a noun, so it should be translated as such.",True,{}
apple/cups,https://github.com/apple/cups,4807,2016-04-19T17:24:45Z,2016-04-21T20:38:49Z,2016-08-05T17:04:00Z,MERGED,True,3,3,1,https://github.com/OdyX,Fix spanish gerunds in index.html,1,[],https://github.com/apple/cups/pull/4807,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4807#issuecomment-213104907,"See the Debian bug: https://bugs.debian.org/821788 from Santiago Vila:

The file doc/es/index.html.in is a translation of doc/index.html.in, but gerunds like ""Using Network Printers"" have been translated as ""Usando [...]"" (Spanish gerund, which is not the same as English gerund). English gerund is a noun, so it should be translated as such.",Thanks!,True,{}
apple/cups,https://github.com/apple/cups,4808,2016-04-20T00:36:43Z,2016-04-21T20:22:50Z,2016-04-21T20:22:50Z,CLOSED,False,3,4,1,https://github.com/justicz,fix preprocessor if for dnssd || avahi,1,[],https://github.com/apple/cups/pull/4808,https://github.com/justicz,1,https://github.com/apple/cups/pull/4808,took entirely too long to figure out why this wasn't compiling :),took entirely too long to figure out why this wasn't compiling :),True,{}
apple/cups,https://github.com/apple/cups,4808,2016-04-20T00:36:43Z,2016-04-21T20:22:50Z,2016-04-21T20:22:50Z,CLOSED,False,3,4,1,https://github.com/justicz,fix preprocessor if for dnssd || avahi,1,[],https://github.com/apple/cups/pull/4808,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4808#issuecomment-213099802,took entirely too long to figure out why this wasn't compiling :),[master 5558a2e] PR #4808: Fix builds without Avahi or mDNSResponder.,True,{}
apple/cups,https://github.com/apple/cups,4811,2016-04-21T17:50:51Z,2016-04-21T17:54:18Z,2016-04-21T17:54:18Z,CLOSED,False,5,0,1,https://github.com/dab18,get_printers: check SystemGroup members,1,[],https://github.com/apple/cups/pull/4811,https://github.com/dab18,1,https://github.com/apple/cups/pull/4811,"resolve #4810
Signed-off-by: Dmitry Bakshaev dab1818@gmail.com","resolve #4810
Signed-off-by: Dmitry Bakshaev dab1818@gmail.com",True,{}
apple/cups,https://github.com/apple/cups,4811,2016-04-21T17:50:51Z,2016-04-21T17:54:18Z,2016-04-21T17:54:18Z,CLOSED,False,5,0,1,https://github.com/dab18,get_printers: check SystemGroup members,1,[],https://github.com/apple/cups/pull/4811,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4811#issuecomment-213037856,"resolve #4810
Signed-off-by: Dmitry Bakshaev dab1818@gmail.com",Behaves correctly.,True,{}
apple/cups,https://github.com/apple/cups,4814,2016-04-23T09:22:24Z,2016-04-24T15:19:04Z,2016-04-24T15:19:05Z,MERGED,True,413,434,2,https://github.com/jschwender,"updated, more complete german translation",2,[],https://github.com/apple/cups/pull/4814,https://github.com/jschwender,1,https://github.com/apple/cups/pull/4814,"I have reviewed the translations and made it more complete, some minor fixes","I have reviewed the translations and made it more complete, some minor fixes",True,{}
apple/cups,https://github.com/apple/cups,4818,2016-04-29T17:19:26Z,2016-05-26T11:21:50Z,2016-05-26T11:21:50Z,MERGED,True,8,8,1,https://github.com/jschwender,add some missing translation,3,['priority-low'],https://github.com/apple/cups/pull/4818,https://github.com/jschwender,1,https://github.com/apple/cups/pull/4818,"I added some missing translation in german template.
greetings!","I added some missing translation in german template.
greetings!",True,{}
apple/cups,https://github.com/apple/cups,4822,2016-05-09T11:55:36Z,2016-05-26T11:20:30Z,2016-05-26T11:20:45Z,MERGED,True,0,9,1,https://github.com/zdohnal,Update lpinfo.man - removed -U username,1,['enhancement'],https://github.com/apple/cups/pull/4822,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/4822,"I already asked on cups-devel mailing list but without answer, so I am contacting you this way https://www.cups.org/pipermail/cups-devel/2016-April/016827.html","I already asked on cups-devel mailing list but without answer, so I am contacting you this way https://www.cups.org/pipermail/cups-devel/2016-April/016827.html",True,{}
apple/cups,https://github.com/apple/cups,4825,2016-05-11T20:30:24Z,2016-06-21T15:09:37Z,2016-06-21T15:59:34Z,MERGED,True,210,202,11,https://github.com/computersforpeace,Add Upstart socket activation support,3,['enhancement'],https://github.com/apple/cups/pull/4825,https://github.com/computersforpeace,1,https://github.com/apple/cups/pull/4825,"I took this as a reference:
https://bugs.launchpad.net/upstart/+bug/1276713
But rewrote major chunks of it, to rebase onto the latest CUPS, fix bugs, clean up junk, make upstart support configurable, and refactor the general ""on demand"" code, so I didn't have to duplicate it yet again.
Tested on Chromium OS.
I will try to figure out how to CC Till, but I don't know GitHub that well.","I took this as a reference:
https://bugs.launchpad.net/upstart/+bug/1276713
But rewrote major chunks of it, to rebase onto the latest CUPS, fix bugs, clean up junk, make upstart support configurable, and refactor the general ""on demand"" code, so I didn't have to duplicate it yet again.
Tested on Chromium OS.
I will try to figure out how to CC Till, but I don't know GitHub that well.",True,{}
apple/cups,https://github.com/apple/cups,4825,2016-05-11T20:30:24Z,2016-06-21T15:09:37Z,2016-06-21T15:59:34Z,MERGED,True,210,202,11,https://github.com/computersforpeace,Add Upstart socket activation support,3,['enhancement'],https://github.com/apple/cups/pull/4825,https://github.com/computersforpeace,2,https://github.com/apple/cups/pull/4825#issuecomment-218581220,"I took this as a reference:
https://bugs.launchpad.net/upstart/+bug/1276713
But rewrote major chunks of it, to rebase onto the latest CUPS, fix bugs, clean up junk, make upstart support configurable, and refactor the general ""on demand"" code, so I didn't have to duplicate it yet again.
Tested on Chromium OS.
I will try to figure out how to CC Till, but I don't know GitHub that well.",@tillkamppeter FYI,True,{}
apple/cups,https://github.com/apple/cups,4825,2016-05-11T20:30:24Z,2016-06-21T15:09:37Z,2016-06-21T15:59:34Z,MERGED,True,210,202,11,https://github.com/computersforpeace,Add Upstart socket activation support,3,['enhancement'],https://github.com/apple/cups/pull/4825,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/4825#issuecomment-218585896,"I took this as a reference:
https://bugs.launchpad.net/upstart/+bug/1276713
But rewrote major chunks of it, to rebase onto the latest CUPS, fix bugs, clean up junk, make upstart support configurable, and refactor the general ""on demand"" code, so I didn't have to duplicate it yet again.
Tested on Chromium OS.
I will try to figure out how to CC Till, but I don't know GitHub that well.","We'll need a signed contributor's agreement for this one...  Details here:
https://github.com/apple/cups/blob/master/CONTRIBUTING.md
and:
https://www.cups.org/AppleContributorAgreement_2011-03-10.pdf",True,{}
apple/cups,https://github.com/apple/cups,4825,2016-05-11T20:30:24Z,2016-06-21T15:09:37Z,2016-06-21T15:59:34Z,MERGED,True,210,202,11,https://github.com/computersforpeace,Add Upstart socket activation support,3,['enhancement'],https://github.com/apple/cups/pull/4825,https://github.com/tillkamppeter,4,https://github.com/apple/cups/pull/4825#issuecomment-218589320,"I took this as a reference:
https://bugs.launchpad.net/upstart/+bug/1276713
But rewrote major chunks of it, to rebase onto the latest CUPS, fix bugs, clean up junk, make upstart support configurable, and refactor the general ""on demand"" code, so I didn't have to duplicate it yet again.
Tested on Chromium OS.
I will try to figure out how to CC Till, but I don't know GitHub that well.","@computersforpeace: Great, thank you for working on getting this upstream.",True,{}
apple/cups,https://github.com/apple/cups,4825,2016-05-11T20:30:24Z,2016-06-21T15:09:37Z,2016-06-21T15:59:34Z,MERGED,True,210,202,11,https://github.com/computersforpeace,Add Upstart socket activation support,3,['enhancement'],https://github.com/apple/cups/pull/4825,https://github.com/computersforpeace,5,https://github.com/apple/cups/pull/4825#issuecomment-222796640,"I took this as a reference:
https://bugs.launchpad.net/upstart/+bug/1276713
But rewrote major chunks of it, to rebase onto the latest CUPS, fix bugs, clean up junk, make upstart support configurable, and refactor the general ""on demand"" code, so I didn't have to duplicate it yet again.
Tested on Chromium OS.
I will try to figure out how to CC Till, but I don't know GitHub that well.","FYI, I emailed the contributor's agreement last week. Let me know if you have problems with either the CLA or the code.",True,{}
apple/cups,https://github.com/apple/cups,4825,2016-05-11T20:30:24Z,2016-06-21T15:09:37Z,2016-06-21T15:59:34Z,MERGED,True,210,202,11,https://github.com/computersforpeace,Add Upstart socket activation support,3,['enhancement'],https://github.com/apple/cups/pull/4825,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/4825#issuecomment-226233161,"I took this as a reference:
https://bugs.launchpad.net/upstart/+bug/1276713
But rewrote major chunks of it, to rebase onto the latest CUPS, fix bugs, clean up junk, make upstart support configurable, and refactor the general ""on demand"" code, so I didn't have to duplicate it yet again.
Tested on Chromium OS.
I will try to figure out how to CC Till, but I don't know GitHub that well.","OK, legal has approved everything so I'll be merging this for the next 2.2 beta...",True,{}
apple/cups,https://github.com/apple/cups,4825,2016-05-11T20:30:24Z,2016-06-21T15:09:37Z,2016-06-21T15:59:34Z,MERGED,True,210,202,11,https://github.com/computersforpeace,Add Upstart socket activation support,3,['enhancement'],https://github.com/apple/cups/pull/4825,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/4825#issuecomment-227486686,"I took this as a reference:
https://bugs.launchpad.net/upstart/+bug/1276713
But rewrote major chunks of it, to rebase onto the latest CUPS, fix bugs, clean up junk, make upstart support configurable, and refactor the general ""on demand"" code, so I didn't have to duplicate it yet again.
Tested on Chromium OS.
I will try to figure out how to CC Till, but I don't know GitHub that well.","Also see follow up commit with some cleanup:
[master 1166bf5] Do some cleanup for the on-demand support - remove old launchd support (no longer needed), naming/style updates, fix compiler warnings.",True,{}
apple/cups,https://github.com/apple/cups,4829,2016-05-29T15:55:49Z,2016-05-30T23:11:29Z,2016-05-30T23:11:29Z,CLOSED,False,5,5,1,https://github.com/leoarnold,Fix typo in cupsctl man webpage,1,['priority-low'],https://github.com/apple/cups/pull/4829,https://github.com/leoarnold,1,https://github.com/apple/cups/pull/4829,The typo / conversion error seems to have snuck in with CUPS 2.0,The typo / conversion error seems to have snuck in with CUPS 2.0,True,{}
apple/cups,https://github.com/apple/cups,4829,2016-05-29T15:55:49Z,2016-05-30T23:11:29Z,2016-05-30T23:11:29Z,CLOSED,False,5,5,1,https://github.com/leoarnold,Fix typo in cupsctl man webpage,1,['priority-low'],https://github.com/apple/cups/pull/4829,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4829#issuecomment-222494961,The typo / conversion error seems to have snuck in with CUPS 2.0,The change needs to actually happen in the man page source and not the formatted HTML from it. Investigating...,True,{}
apple/cups,https://github.com/apple/cups,4829,2016-05-29T15:55:49Z,2016-05-30T23:11:29Z,2016-05-30T23:11:29Z,CLOSED,False,5,5,1,https://github.com/leoarnold,Fix typo in cupsctl man webpage,1,['priority-low'],https://github.com/apple/cups/pull/4829,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/4829#issuecomment-222564401,The typo / conversion error seems to have snuck in with CUPS 2.0,"[master 3bd2e63] Fix typo in cupsctl man page (PR #4829)
[branch-2.1 91480df] Mirror fix from master.",True,{}
apple/cups,https://github.com/apple/cups,4832,2016-06-02T14:10:21Z,2016-06-02T16:09:33Z,2016-06-02T16:09:34Z,CLOSED,False,1,23,1,https://github.com/mfly,Fix for EPM packaging file,1,['priority-low'],https://github.com/apple/cups/pull/4832,https://github.com/mfly,1,https://github.com/apple/cups/pull/4832,#4831,#4831,True,{}
apple/cups,https://github.com/apple/cups,4832,2016-06-02T14:10:21Z,2016-06-02T16:09:33Z,2016-06-02T16:09:34Z,CLOSED,False,1,23,1,https://github.com/mfly,Fix for EPM packaging file,1,['priority-low'],https://github.com/apple/cups/pull/4832,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4832#issuecomment-223334877,#4831,"OK, the documentation files change isn't correct - we separate API help into the -devel package.",True,{}
apple/cups,https://github.com/apple/cups,4832,2016-06-02T14:10:21Z,2016-06-02T16:09:33Z,2016-06-02T16:09:34Z,CLOSED,False,1,23,1,https://github.com/mfly,Fix for EPM packaging file,1,['priority-low'],https://github.com/apple/cups/pull/4832,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/4832#issuecomment-223340621,#4831,"Also found a bunch of missing files.
[master 63c5db7] Fix EPM packaging file.",True,{}
apple/cups,https://github.com/apple/cups,4836,2016-06-08T07:02:31Z,2016-06-08T18:49:35Z,2016-06-08T20:54:53Z,MERGED,True,3,3,1,https://github.com/bigon,Fix malformed device-id for printers found by dnssd,1,['priority-low'],https://github.com/apple/cups/pull/4836,https://github.com/bigon,1,https://github.com/apple/cups/pull/4836,"Add missing semicolon between printer model and command
Closes: #4835","Add missing semicolon between printer model and command
Closes: #4835",True,{}
apple/cups,https://github.com/apple/cups,4836,2016-06-08T07:02:31Z,2016-06-08T18:49:35Z,2016-06-08T20:54:53Z,MERGED,True,3,3,1,https://github.com/bigon,Fix malformed device-id for printers found by dnssd,1,['priority-low'],https://github.com/apple/cups/pull/4836,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4836#issuecomment-224690799,"Add missing semicolon between printer model and command
Closes: #4835",Also committing to 2.1.x.,True,{}
apple/cups,https://github.com/apple/cups,4839,2016-06-15T07:04:23Z,2016-06-15T10:05:58Z,2016-06-15T10:06:10Z,CLOSED,False,1,5,1,https://github.com/zdohnal,Editing cups-lpd.man.in,1,['wontfix'],https://github.com/apple/cups/pull/4839,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/4839,"Hello Mike,
Jirka (jpopelka) changed cups-lpd.man.in a little in our project, but his patch is for old version of cups (1.6.3), so I tried to edit his patch into format, which can be applied into current version of CUPS. Do you want to merge it into your project?","Hello Mike,
Jirka (jpopelka) changed cups-lpd.man.in a little in our project, but his patch is for old version of cups (1.6.3), so I tried to edit his patch into format, which can be applied into current version of CUPS. Do you want to merge it into your project?",True,{}
apple/cups,https://github.com/apple/cups,4839,2016-06-15T07:04:23Z,2016-06-15T10:05:58Z,2016-06-15T10:06:10Z,CLOSED,False,1,5,1,https://github.com/zdohnal,Editing cups-lpd.man.in,1,['wontfix'],https://github.com/apple/cups/pull/4839,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4839#issuecomment-226144071,"Hello Mike,
Jirka (jpopelka) changed cups-lpd.man.in a little in our project, but his patch is for old version of cups (1.6.3), so I tried to edit his patch into format, which can be applied into current version of CUPS. Do you want to merge it into your project?","While that might be appropriate advice on a specific Linux distro, CUPS is still used on platforms that use inetd and xinetd so I am not comfortable removing that information.",True,{}
apple/cups,https://github.com/apple/cups,4841,2016-06-15T17:17:14Z,2016-06-21T17:57:27Z,2016-06-21T17:57:27Z,MERGED,True,14,0,2,https://github.com/computersforpeace,Document cupsd.conf's IdleExitTimeout,1,[],https://github.com/apple/cups/pull/4841,https://github.com/computersforpeace,1,https://github.com/apple/cups/pull/4841,,,True,{}
apple/cups,https://github.com/apple/cups,4858,2016-07-22T23:11:18Z,2016-08-08T16:08:47Z,2016-08-08T16:08:47Z,MERGED,True,153,155,43,https://github.com/robert-scheck,Improved German translation,1,['priority-low'],https://github.com/apple/cups/pull/4858,https://github.com/robert-scheck,1,https://github.com/apple/cups/pull/4858,"Improved German translation: Added missing translations, corrected wrong wordings, corrected typos, used better phrases, corrected English-German mixtures, etc.
In case you disagree partially with my suggestions, please at least cherry-pick everything else and come back to me to discuss the leftovers.
Personally, I do not treat this patch as a ""significant contribution to CUPS"" - if I'm wrong, please let me know (the patch adds no new features, no large codebase changes, just a bunch of translation updates).","Improved German translation: Added missing translations, corrected wrong wordings, corrected typos, used better phrases, corrected English-German mixtures, etc.
In case you disagree partially with my suggestions, please at least cherry-pick everything else and come back to me to discuss the leftovers.
Personally, I do not treat this patch as a ""significant contribution to CUPS"" - if I'm wrong, please let me know (the patch adds no new features, no large codebase changes, just a bunch of translation updates).",True,"{'THUMBS_UP': ['https://github.com/jwflory', 'https://github.com/cwickert'], 'HOORAY': ['https://github.com/jwflory']}"
apple/cups,https://github.com/apple/cups,4858,2016-07-22T23:11:18Z,2016-08-08T16:08:47Z,2016-08-08T16:08:47Z,MERGED,True,153,155,43,https://github.com/robert-scheck,Improved German translation,1,['priority-low'],https://github.com/apple/cups/pull/4858,https://github.com/cwickert,2,https://github.com/apple/cups/pull/4858#issuecomment-235077071,"Improved German translation: Added missing translations, corrected wrong wordings, corrected typos, used better phrases, corrected English-German mixtures, etc.
In case you disagree partially with my suggestions, please at least cherry-pick everything else and come back to me to discuss the leftovers.
Personally, I do not treat this patch as a ""significant contribution to CUPS"" - if I'm wrong, please let me know (the patch adds no new features, no large codebase changes, just a bunch of translation updates).","As native German speaker, someone who studied linguistics and has managed various German translation teams (Xfce, LXDE, …) , I strongly suggest accepting this patch.",True,{}
apple/cups,https://github.com/apple/cups,4858,2016-07-22T23:11:18Z,2016-08-08T16:08:47Z,2016-08-08T16:08:47Z,MERGED,True,153,155,43,https://github.com/robert-scheck,Improved German translation,1,['priority-low'],https://github.com/apple/cups/pull/4858,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/4858#issuecomment-235117655,"Improved German translation: Added missing translations, corrected wrong wordings, corrected typos, used better phrases, corrected English-German mixtures, etc.
In case you disagree partially with my suggestions, please at least cherry-pick everything else and come back to me to discuss the leftovers.
Personally, I do not treat this patch as a ""significant contribution to CUPS"" - if I'm wrong, please let me know (the patch adds no new features, no large codebase changes, just a bunch of translation updates).","@robert-scheck : Translations are not treated as significant contributions, so we are good there.
@cwickert : No need to push hard for this, as long as a translation is complete we take it... :)",True,{}
apple/cups,https://github.com/apple/cups,4858,2016-07-22T23:11:18Z,2016-08-08T16:08:47Z,2016-08-08T16:08:47Z,MERGED,True,153,155,43,https://github.com/robert-scheck,Improved German translation,1,['priority-low'],https://github.com/apple/cups/pull/4858,https://github.com/robert-scheck,4,https://github.com/apple/cups/pull/4858#issuecomment-235267267,"Improved German translation: Added missing translations, corrected wrong wordings, corrected typos, used better phrases, corrected English-German mixtures, etc.
In case you disagree partially with my suggestions, please at least cherry-pick everything else and come back to me to discuss the leftovers.
Personally, I do not treat this patch as a ""significant contribution to CUPS"" - if I'm wrong, please let me know (the patch adds no new features, no large codebase changes, just a bunch of translation updates).","The translation might not be 100% complete, but should be > 95% from my point of view. There are some things where I'm not sure how to translate (e.g. command.tmpl) and maybe some further things that slipped through. In case you see some issues with the patch, let me know early so that I can pay attention to it. Btw, I don't think @cwickert wanted to push hard in an unfriendly way, but more make clear that the overall quality of the translation gets improved due to the patch (at least that's my understanding).",True,{}
apple/cups,https://github.com/apple/cups,4861,2016-07-27T18:21:36Z,2016-08-08T16:21:05Z,2016-08-08T16:21:05Z,CLOSED,False,1,1,1,https://github.com/mariospr,Increase the allocated buffer size for names of loaded PPDs (Issue #4860),1,['enhancement'],https://github.com/apple/cups/pull/4861,https://github.com/mariospr,1,https://github.com/apple/cups/pull/4861,"Having 128 characters is probably enough in most systems, but in Endless
we have a custom system in place to automatically download printer drivers
that will be accessible from long paths under /usr/share/ppd/eos-config-printer
(e.g. /usr/share/ppd/eos-config-printer/epson-inkjet-printer-201301w_ppds_Epson)
As this path will become part of the virtual path for the PPD, this limit
will cause trouble in cases where the full PPD name exceeds it, since the
path CUPS will try to open will not exist, as it will be truncated.","Having 128 characters is probably enough in most systems, but in Endless
we have a custom system in place to automatically download printer drivers
that will be accessible from long paths under /usr/share/ppd/eos-config-printer
(e.g. /usr/share/ppd/eos-config-printer/epson-inkjet-printer-201301w_ppds_Epson)
As this path will become part of the virtual path for the PPD, this limit
will cause trouble in cases where the full PPD name exceeds it, since the
path CUPS will try to open will not exist, as it will be truncated.",True,{}
apple/cups,https://github.com/apple/cups,4861,2016-07-27T18:21:36Z,2016-08-08T16:21:05Z,2016-08-08T16:21:05Z,CLOSED,False,1,1,1,https://github.com/mariospr,Increase the allocated buffer size for names of loaded PPDs (Issue #4860),1,['enhancement'],https://github.com/apple/cups/pull/4861,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4861#issuecomment-238289622,"Having 128 characters is probably enough in most systems, but in Endless
we have a custom system in place to automatically download printer drivers
that will be accessible from long paths under /usr/share/ppd/eos-config-printer
(e.g. /usr/share/ppd/eos-config-printer/epson-inkjet-printer-201301w_ppds_Epson)
As this path will become part of the virtual path for the PPD, this limit
will cause trouble in cases where the full PPD name exceeds it, since the
path CUPS will try to open will not exist, as it will be truncated.","[master 4a971b9] Update cups-driverd and spec-ipp to be consistent about supporting name(255) values for the ""ppd-name"" attribute (PR #4860)",True,{}
apple/cups,https://github.com/apple/cups,4865,2016-08-12T17:52:34Z,2016-08-13T22:31:41Z,2016-08-13T22:31:48Z,MERGED,True,6,6,3,https://github.com/ryandesign,Don't use https for links to lists.cups.org,1,[],https://github.com/apple/cups/pull/4865,https://github.com/ryandesign,1,https://github.com/apple/cups/pull/4865,"The SSL certificate on the lists server doesn't include lists.cups.org
yet.","The SSL certificate on the lists server doesn't include lists.cups.org
yet.",True,{}
apple/cups,https://github.com/apple/cups,4873,2016-08-31T10:53:40Z,2016-08-31T14:36:44Z,2016-08-31T14:36:44Z,MERGED,True,1,1,1,https://github.com/ryandesign,Fix lists link in 404 page,1,[],https://github.com/apple/cups/pull/4873,https://github.com/ryandesign,1,https://github.com/apple/cups/pull/4873,,,True,{}
apple/cups,https://github.com/apple/cups,4877,2016-09-17T16:49:26Z,2016-09-20T15:10:44Z,2016-09-20T15:10:56Z,MERGED,True,33,33,1,https://github.com/Atalanttore,Update cups_de.po,1,['priority-low'],https://github.com/apple/cups/pull/4877,https://github.com/Atalanttore,1,https://github.com/apple/cups/pull/4877,Expanded german translation.,Expanded german translation.,True,{}
apple/cups,https://github.com/apple/cups,4879,2016-09-19T16:09:52Z,2016-09-20T15:08:52Z,2016-09-20T15:08:53Z,CLOSED,False,1,0,1,https://github.com/xuzhen,Return NULL if no connection available. Fix issue #4870,1,[],https://github.com/apple/cups/pull/4879,https://github.com/xuzhen,1,https://github.com/apple/cups/pull/4879,,,True,{}
apple/cups,https://github.com/apple/cups,4879,2016-09-19T16:09:52Z,2016-09-20T15:08:52Z,2016-09-20T15:08:53Z,CLOSED,False,1,0,1,https://github.com/xuzhen,Return NULL if no connection available. Fix issue #4870,1,[],https://github.com/apple/cups/pull/4879,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4879#issuecomment-248330742,,"This ""fix"" will break connections to network printers/servers with more than one address, which is basically all of them (IPv4+IPv6). But I'll keep investigating...",True,{}
apple/cups,https://github.com/apple/cups,4885,2016-09-26T08:34:31Z,2016-10-01T21:46:07Z,2016-10-01T21:46:15Z,MERGED,True,7,7,4,https://github.com/OdyX,Fix some manpage formatting inconsistencies,7,['priority-low'],https://github.com/apple/cups/pull/4885,https://github.com/OdyX,1,https://github.com/apple/cups/pull/4885,"On https://bugs.debian.org/838854, Helge Kreutzmann debian@helgefjell.de reported some manpage formatting inconsistencies, which I've hereby converted to the source groff format.","On https://bugs.debian.org/838854, Helge Kreutzmann debian@helgefjell.de reported some manpage formatting inconsistencies, which I've hereby converted to the source groff format.",True,{}
apple/cups,https://github.com/apple/cups,4886,2016-09-28T22:56:18Z,2016-10-01T19:04:11Z,2016-10-01T19:04:22Z,MERGED,True,160,157,1,https://github.com/jschwender,Update cups_de.po,1,['priority-low'],https://github.com/apple/cups/pull/4886,https://github.com/jschwender,1,https://github.com/apple/cups/pull/4886,Some typos fixed and more translations added,Some typos fixed and more translations added,True,{}
apple/cups,https://github.com/apple/cups,4887,2016-09-28T23:02:15Z,2016-10-01T19:03:28Z,2016-10-01T19:03:39Z,MERGED,True,1,0,1,https://github.com/jschwender,Update CREDITS.txt,1,['priority-low'],https://github.com/apple/cups/pull/4887,https://github.com/jschwender,1,https://github.com/apple/cups/pull/4887,"I made most of the German localization, hope it is enough to be listed here.","I made most of the German localization, hope it is enough to be listed here.",True,{}
apple/cups,https://github.com/apple/cups,4896,2016-10-08T13:20:32Z,2016-10-21T03:50:07Z,2016-10-21T04:28:40Z,CLOSED,False,3,3,1,https://github.com/yorkie,doc: remove extra > in example codes,1,['priority-low'],https://github.com/apple/cups/pull/4896,https://github.com/yorkie,1,https://github.com/apple/cups/pull/4896,"As the title described, just found these nits while reading the docs @michaelrsweet :)","As the title described, just found these nits while reading the docs @michaelrsweet :)",True,{}
apple/cups,https://github.com/apple/cups,4896,2016-10-08T13:20:32Z,2016-10-21T03:50:07Z,2016-10-21T04:28:40Z,CLOSED,False,3,3,1,https://github.com/yorkie,doc: remove extra > in example codes,1,['priority-low'],https://github.com/apple/cups/pull/4896,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4896#issuecomment-253530811,"As the title described, just found these nits while reading the docs @michaelrsweet :)","Actually, these changes need to be made in the source files (filter/api-filter.shtml and filter/api-raster.shtml, respectively).",True,{}
apple/cups,https://github.com/apple/cups,4896,2016-10-08T13:20:32Z,2016-10-21T03:50:07Z,2016-10-21T04:28:40Z,CLOSED,False,3,3,1,https://github.com/yorkie,doc: remove extra > in example codes,1,['priority-low'],https://github.com/apple/cups/pull/4896,https://github.com/yorkie,3,https://github.com/apple/cups/pull/4896#issuecomment-253721377,"As the title described, just found these nits while reading the docs @michaelrsweet :)","Hi @michaelrsweet thanks, done but I didn't find the file filter/api-filter.shtml :)",True,{}
apple/cups,https://github.com/apple/cups,4896,2016-10-08T13:20:32Z,2016-10-21T03:50:07Z,2016-10-21T04:28:40Z,CLOSED,False,3,3,1,https://github.com/yorkie,doc: remove extra > in example codes,1,['priority-low'],https://github.com/apple/cups/pull/4896,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/4896#issuecomment-255287314,"As the title described, just found these nits while reading the docs @michaelrsweet :)",[master 8b3724f] Update API documentation (PR #4896).,True,{}
apple/cups,https://github.com/apple/cups,4897,2016-10-09T15:37:48Z,2017-05-01T18:52:40Z,2017-06-26T16:32:21Z,CLOSED,False,22,12,5,https://github.com/OdyX,Cross-build fixes,2,['enhancement'],https://github.com/apple/cups/pull/4897,https://github.com/OdyX,1,https://github.com/apple/cups/pull/4897,"Helmut Grohne has reported in https://bugs.debian.org/837936 the only two missing pieces to allow CUPS cross-building. Here come the patches.
This addresses #4872.","Helmut Grohne has reported in https://bugs.debian.org/837936 the only two missing pieces to allow CUPS cross-building. Here come the patches.
This addresses #4872.",True,{}
apple/cups,https://github.com/apple/cups,4897,2016-10-09T15:37:48Z,2017-05-01T18:52:40Z,2017-06-26T16:32:21Z,CLOSED,False,22,12,5,https://github.com/OdyX,Cross-build fixes,2,['enhancement'],https://github.com/apple/cups/pull/4897,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4897#issuecomment-253533162,"Helmut Grohne has reported in https://bugs.debian.org/837936 the only two missing pieces to allow CUPS cross-building. Here come the patches.
This addresses #4872.","We can't accept these changes as-is.

Compiler tests should be in config-scripts/cups-compiler.m4
I'm not crazy about the mantohtml changes since strncpy usage will throw a LOT of warnings on many platforms and with most code checking tools.
Completely dropping genstrings here means that changes to the driver info file will never be reflected in the message catalogs.

I'd be more interested in changes that bypass building/running mantohtml and genstrings when doing cross-compilation but not when doing a normal build. The HTML versions of the man pages are part of the repository (don't need to be rewritten normally), and similarly we have current message catalogs in the repository.",True,{}
apple/cups,https://github.com/apple/cups,4897,2016-10-09T15:37:48Z,2017-05-01T18:52:40Z,2017-06-26T16:32:21Z,CLOSED,False,22,12,5,https://github.com/OdyX,Cross-build fixes,2,['enhancement'],https://github.com/apple/cups/pull/4897,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/4897#issuecomment-296795056,"Helmut Grohne has reported in https://bugs.debian.org/837936 the only two missing pieces to allow CUPS cross-building. Here come the patches.
This addresses #4872.","OK, I've put together my own changes that should fix things for cross-compilation.  Please test and let me know if you run into any problems...
[master 105922e] Add support for cross-compilation (Issue #4897)",True,{'HOORAY': ['https://github.com/Redfoxymoon']}
apple/cups,https://github.com/apple/cups,4897,2016-10-09T15:37:48Z,2017-05-01T18:52:40Z,2017-06-26T16:32:21Z,CLOSED,False,22,12,5,https://github.com/OdyX,Cross-build fixes,2,['enhancement'],https://github.com/apple/cups/pull/4897,https://github.com/Redfoxymoon,4,https://github.com/apple/cups/pull/4897#issuecomment-310853039,"Helmut Grohne has reported in https://bugs.debian.org/837936 the only two missing pieces to allow CUPS cross-building. Here come the patches.
This addresses #4872.","config-scripts/cups-pam.m4. line 56	""marwin*)"" typo?",True,{}
apple/cups,https://github.com/apple/cups,4897,2016-10-09T15:37:48Z,2017-05-01T18:52:40Z,2017-06-26T16:32:21Z,CLOSED,False,22,12,5,https://github.com/OdyX,Cross-build fixes,2,['enhancement'],https://github.com/apple/cups/pull/4897,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/4897#issuecomment-311112210,"Helmut Grohne has reported in https://bugs.debian.org/837936 the only two missing pieces to allow CUPS cross-building. Here come the patches.
This addresses #4872.",Fixed!,True,{}
apple/cups,https://github.com/apple/cups,4903,2016-10-17T06:38:19Z,2019-05-15T20:43:02Z,2019-05-15T20:43:12Z,CLOSED,False,123,119,5,https://github.com/dimv36,Localization for job's and printer's status messages and messages in cupsdAddEvent(),2,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/4903,https://github.com/dimv36,1,https://github.com/apple/cups/pull/4903,Those patch add localization for messages in cupsdAddEvent() and localization for status of printers and jobs.,Those patch add localization for messages in cupsdAddEvent() and localization for status of printers and jobs.,True,{}
apple/cups,https://github.com/apple/cups,4903,2016-10-17T06:38:19Z,2019-05-15T20:43:02Z,2019-05-15T20:43:12Z,CLOSED,False,123,119,5,https://github.com/dimv36,Localization for job's and printer's status messages and messages in cupsdAddEvent(),2,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/4903,https://github.com/dimv36,2,https://github.com/apple/cups/pull/4903#issuecomment-254146661,Those patch add localization for messages in cupsdAddEvent() and localization for status of printers and jobs.,"Sorry, those patch add only translation possibility of those messages, but not translation at all.",True,{}
apple/cups,https://github.com/apple/cups,4903,2016-10-17T06:38:19Z,2019-05-15T20:43:02Z,2019-05-15T20:43:12Z,CLOSED,False,123,119,5,https://github.com/dimv36,Localization for job's and printer's status messages and messages in cupsdAddEvent(),2,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/4903,https://github.com/dimv36,3,https://github.com/apple/cups/pull/4903#issuecomment-254187304,Those patch add localization for messages in cupsdAddEvent() and localization for status of printers and jobs.,This commit adds localization support in functions cupsdAddEvent() & cupsdSetJobState(),True,{}
apple/cups,https://github.com/apple/cups,4903,2016-10-17T06:38:19Z,2019-05-15T20:43:02Z,2019-05-15T20:43:12Z,CLOSED,False,123,119,5,https://github.com/dimv36,Localization for job's and printer's status messages and messages in cupsdAddEvent(),2,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/4903,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/4903#issuecomment-254187577,Those patch add localization for messages in cupsdAddEvent() and localization for status of printers and jobs.,"OK, so as-is this patch is not usable.
One of the reasons we have not localized the notification text in cupsd is that the subscriber's natural language can be different than the system-wide default language. Doing this properly requires localizing the event multiple times (once for each subscription).",True,{}
apple/cups,https://github.com/apple/cups,4903,2016-10-17T06:38:19Z,2019-05-15T20:43:02Z,2019-05-15T20:43:12Z,CLOSED,False,123,119,5,https://github.com/dimv36,Localization for job's and printer's status messages and messages in cupsdAddEvent(),2,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/4903,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/4903#issuecomment-254188011,Those patch add localization for messages in cupsdAddEvent() and localization for status of printers and jobs.,"Also, the cupsNotifyGetSubject and cupsNotifyGetText functions in libcups localize notifications on the client-side (independent of the subscription language)",True,{}
apple/cups,https://github.com/apple/cups,4903,2016-10-17T06:38:19Z,2019-05-15T20:43:02Z,2019-05-15T20:43:12Z,CLOSED,False,123,119,5,https://github.com/dimv36,Localization for job's and printer's status messages and messages in cupsdAddEvent(),2,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/4903,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/4903#issuecomment-492816160,Those patch add localization for messages in cupsdAddEvent() and localization for status of printers and jobs.,"Sorry, not accepting this PR...",True,{}
apple/cups,https://github.com/apple/cups,4907,2016-10-19T14:56:40Z,2016-10-19T16:35:44Z,2016-10-19T18:25:14Z,CLOSED,False,17,0,1,https://github.com/dimv36,Fix side effects of remote administration on local printers,1,['wontfix'],https://github.com/apple/cups/pull/4907,https://github.com/dimv36,1,https://github.com/apple/cups/pull/4907,"This is fix of remote administration's side effects of updating local printer's configuration, that we discussed in issue (#4906). I suppose, if CUPS running in not-local mode and printer is local we deny updating printer's configuration.","This is fix of remote administration's side effects of updating local printer's configuration, that we discussed in issue (#4906). I suppose, if CUPS running in not-local mode and printer is local we deny updating printer's configuration.",True,{}
apple/cups,https://github.com/apple/cups,4907,2016-10-19T14:56:40Z,2016-10-19T16:35:44Z,2016-10-19T18:25:14Z,CLOSED,False,17,0,1,https://github.com/dimv36,Fix side effects of remote administration on local printers,1,['wontfix'],https://github.com/apple/cups/pull/4907,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4907#issuecomment-254868548,"This is fix of remote administration's side effects of updating local printer's configuration, that we discussed in issue (#4906). I suppose, if CUPS running in not-local mode and printer is local we deny updating printer's configuration.",But if you have enabled remote administration then you will still want to be able to modify local (not shared) print queues remotely.,True,{}
apple/cups,https://github.com/apple/cups,4907,2016-10-19T14:56:40Z,2016-10-19T16:35:44Z,2016-10-19T18:25:14Z,CLOSED,False,17,0,1,https://github.com/dimv36,Fix side effects of remote administration on local printers,1,['wontfix'],https://github.com/apple/cups/pull/4907,https://github.com/dimv36,3,https://github.com/apple/cups/pull/4907#issuecomment-254899152,"This is fix of remote administration's side effects of updating local printer's configuration, that we discussed in issue (#4906). I suppose, if CUPS running in not-local mode and printer is local we deny updating printer's configuration.","I suppose, if I can't get local printers via CUPS-Get-Printers request with enabled remote administration, then I can't modify local print queues remotely.
Do you want modify local print queue? OK, disable remote administration.
Or another solution. We can't get any local print queues with enabled remote administration. So, may we remove any checks on printer (does it local) and we will got full list of printers (include local). Then your idea about

But if you have enabled remote administration then you will still want to be able to modify local (not shared) print queues remotely.

seems to me more correct then we have.",True,{}
apple/cups,https://github.com/apple/cups,4925,2016-11-22T20:52:24Z,2016-11-30T13:48:08Z,2016-11-30T19:19:44Z,CLOSED,False,23,4,2,https://github.com/frazhome,Make ZPL Orientation configurable ,4,['wontfix'],https://github.com/apple/cups/pull/4925,https://github.com/frazhome,1,https://github.com/apple/cups/pull/4925,shouldn't the orientation configurable? Sometimes I need the label 'leading edge' and sometime 'foremost edge',shouldn't the orientation configurable? Sometimes I need the label 'leading edge' and sometime 'foremost edge',True,{}
apple/cups,https://github.com/apple/cups,4925,2016-11-22T20:52:24Z,2016-11-30T13:48:08Z,2016-11-30T19:19:44Z,CLOSED,False,23,4,2,https://github.com/frazhome,Make ZPL Orientation configurable ,4,['wontfix'],https://github.com/apple/cups/pull/4925,https://github.com/frazhome,2,https://github.com/apple/cups/pull/4925#issuecomment-262364312,shouldn't the orientation configurable? Sometimes I need the label 'leading edge' and sometime 'foremost edge',"sorry for some garbage. It is my first  pull request.
Only the commit with ZPL Orientation configurable ... is usefull",True,{}
apple/cups,https://github.com/apple/cups,4925,2016-11-22T20:52:24Z,2016-11-30T13:48:08Z,2016-11-30T19:19:44Z,CLOSED,False,23,4,2,https://github.com/frazhome,Make ZPL Orientation configurable ,4,['wontfix'],https://github.com/apple/cups/pull/4925,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/4925#issuecomment-263877239,shouldn't the orientation configurable? Sometimes I need the label 'leading edge' and sometime 'foremost edge',"The issue is that the leading edge of the output is supposed to be the top of the page image when orientation-requested=3 (portrait) - that's the IPP and Printer MIB definition. To get the old behavior you need to use orientation-requested=6 (reverse-portrait), which will cause the print filters to generate an ""upside-down"" image so that the label comes out looking right-side up.
So while I agree having the output the old way can be useful, we need to make sure the output is consistent between drivers and printers.",True,{}
apple/cups,https://github.com/apple/cups,4925,2016-11-22T20:52:24Z,2016-11-30T13:48:08Z,2016-11-30T19:19:44Z,CLOSED,False,23,4,2,https://github.com/frazhome,Make ZPL Orientation configurable ,4,['wontfix'],https://github.com/apple/cups/pull/4925,https://github.com/frazhome,4,https://github.com/apple/cups/pull/4925#issuecomment-263967685,shouldn't the orientation configurable? Sometimes I need the label 'leading edge' and sometime 'foremost edge',"Thanks a lot for the clarification!
How do I setup this as default setting and is this visible in the webinterface?",True,{}
apple/cups,https://github.com/apple/cups,4955,2017-02-01T09:50:33Z,2017-02-01T12:34:02Z,2017-02-02T17:10:01Z,CLOSED,False,5,21,1,https://github.com/jschwender,Update log.c to log ISO time stamps,1,['wontfix'],https://github.com/apple/cups/pull/4955,https://github.com/jschwender,1,https://github.com/apple/cups/pull/4955,"Enhance the logging time stamp to conform with RFC 3339, ISO 8601.","Enhance the logging time stamp to conform with RFC 3339, ISO 8601.",True,{}
apple/cups,https://github.com/apple/cups,4955,2017-02-01T09:50:33Z,2017-02-01T12:34:02Z,2017-02-02T17:10:01Z,CLOSED,False,5,21,1,https://github.com/jschwender,Update log.c to log ISO time stamps,1,['wontfix'],https://github.com/apple/cups/pull/4955,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4955#issuecomment-276646622,"Enhance the logging time stamp to conform with RFC 3339, ISO 8601.","CUPS uses Apache Common Log Format, and so uses its date/time format.
Given that we have no desire to change the internally-supported log format and most of the subsequent development in this area is with the system logging daemons, we won't be taking this pull request. Sorry.",True,{}
apple/cups,https://github.com/apple/cups,4955,2017-02-01T09:50:33Z,2017-02-01T12:34:02Z,2017-02-02T17:10:01Z,CLOSED,False,5,21,1,https://github.com/jschwender,Update log.c to log ISO time stamps,1,['wontfix'],https://github.com/apple/cups/pull/4955,https://github.com/jschwender,3,https://github.com/apple/cups/pull/4955#issuecomment-276738441,"Enhance the logging time stamp to conform with RFC 3339, ISO 8601.","Thanks Michael for your response. I understand, this is reasonable. My idea is probaly short-sighted.
Would you consider it if it was alternatively configurable by cupsd.conf as W3C extended format?
Any concerns with that?",True,{}
apple/cups,https://github.com/apple/cups,4955,2017-02-01T09:50:33Z,2017-02-01T12:34:02Z,2017-02-02T17:10:01Z,CLOSED,False,5,21,1,https://github.com/jschwender,Update log.c to log ISO time stamps,1,['wontfix'],https://github.com/apple/cups/pull/4955,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/4955#issuecomment-277019152,"Enhance the logging time stamp to conform with RFC 3339, ISO 8601.","Yes, we are not adding more file logging to cupsd. ASL, syslog, systemd logging, etc. all provide support for ISO date/time stamps, and those are the long-term logging solution for CUPS.",True,{}
apple/cups,https://github.com/apple/cups,4972,2017-02-27T19:57:58Z,2017-02-28T14:54:19Z,2017-02-28T14:54:32Z,MERGED,True,1,1,1,https://github.com/jwilk,Fix .PHONY declaration,1,['priority-low'],https://github.com/apple/cups/pull/4972,https://github.com/jwilk,1,https://github.com/apple/cups/pull/4972,,,True,{}
apple/cups,https://github.com/apple/cups,4977,2017-03-10T16:25:24Z,2017-03-10T17:34:41Z,2017-03-10T17:34:48Z,CLOSED,False,123,0,8,https://github.com/zdohnal,Enabling CUPS to work with recent configuration from /etc/resolv.conf without restart,8,['wontfix'],https://github.com/apple/cups/pull/4977,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/4977,"Hi Mike,
Our customer reported problem with CUPS about it is not using recent configuration from /etc/resolv.conf without CUPS' restart. It is issue with glibc, but it is known issue for upstream and they are working on solution, but it will not be solved in near future. So I tried to create workaround for CUPS to make it use recent nameserver's IP from /etc/resolv.conf.
This patch is based on comparing modification times (acquired by stat()) and if they differ, res_init() is called. All of these are encapsulated in function httpCheckResolv(), which is called before all functions, which works with nameservers.
When I looked into code I saw you are using res_init() when hostname/IP resolution went wrong, so I am checking need_res_init value and if it is set to 1 and my function already reloaded resolver, it sets need_res_init to 0.
I know that using inotify will be probably more complex solution, but if it is glibc issue to begin with, I thought the stat() function will be sufficient as temporary workaround for CUPS.
I tested this patch on RHEL7 with CUPS-1.6.3 and it worked. So do you want to add this workaround to CUPS, Mike? I know there are some imperfections in this patch (like not checking return status in some places - because I didn't get how you deal with errors there), but I am willing to help with correcting it by your advices.","Hi Mike,
Our customer reported problem with CUPS about it is not using recent configuration from /etc/resolv.conf without CUPS' restart. It is issue with glibc, but it is known issue for upstream and they are working on solution, but it will not be solved in near future. So I tried to create workaround for CUPS to make it use recent nameserver's IP from /etc/resolv.conf.
This patch is based on comparing modification times (acquired by stat()) and if they differ, res_init() is called. All of these are encapsulated in function httpCheckResolv(), which is called before all functions, which works with nameservers.
When I looked into code I saw you are using res_init() when hostname/IP resolution went wrong, so I am checking need_res_init value and if it is set to 1 and my function already reloaded resolver, it sets need_res_init to 0.
I know that using inotify will be probably more complex solution, but if it is glibc issue to begin with, I thought the stat() function will be sufficient as temporary workaround for CUPS.
I tested this patch on RHEL7 with CUPS-1.6.3 and it worked. So do you want to add this workaround to CUPS, Mike? I know there are some imperfections in this patch (like not checking return status in some places - because I didn't get how you deal with errors there), but I am willing to help with correcting it by your advices.",True,{}
apple/cups,https://github.com/apple/cups,4977,2017-03-10T16:25:24Z,2017-03-10T17:34:41Z,2017-03-10T17:34:48Z,CLOSED,False,123,0,8,https://github.com/zdohnal,Enabling CUPS to work with recent configuration from /etc/resolv.conf without restart,8,['wontfix'],https://github.com/apple/cups/pull/4977,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4977#issuecomment-285733191,"Hi Mike,
Our customer reported problem with CUPS about it is not using recent configuration from /etc/resolv.conf without CUPS' restart. It is issue with glibc, but it is known issue for upstream and they are working on solution, but it will not be solved in near future. So I tried to create workaround for CUPS to make it use recent nameserver's IP from /etc/resolv.conf.
This patch is based on comparing modification times (acquired by stat()) and if they differ, res_init() is called. All of these are encapsulated in function httpCheckResolv(), which is called before all functions, which works with nameservers.
When I looked into code I saw you are using res_init() when hostname/IP resolution went wrong, so I am checking need_res_init value and if it is set to 1 and my function already reloaded resolver, it sets need_res_init to 0.
I know that using inotify will be probably more complex solution, but if it is glibc issue to begin with, I thought the stat() function will be sufficient as temporary workaround for CUPS.
I tested this patch on RHEL7 with CUPS-1.6.3 and it worked. So do you want to add this workaround to CUPS, Mike? I know there are some imperfections in this patch (like not checking return status in some places - because I didn't get how you deal with errors there), but I am willing to help with correcting it by your advices.","Sorry, but I don't want to include this in CUPS. The fix belongs below CUPS (and the simplest would be to patch glibc to do the same stat check) since it affects all long-running processes, not just cupsd.",True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/antlarr,1,https://github.com/apple/cups/pull/4989,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815","cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815",True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/4989#issuecomment-293591929,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815","mDNSResponder has a similar mechanism, however in practice it has not proven reliable since all it means is that there are no more responses queued up... Will think about how we can make this better...",True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/4989#issuecomment-294970187,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815","OK, I have a better (generic) fix for this that uses some of the tricks from the dnssd backend to return early when we know we have all responses. Doing some more testing and will push a change once I'm satisfied.",True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/antlarr,4,https://github.com/apple/cups/pull/4989#issuecomment-295190976,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815","Cool, thanks for working on this. Do you have your solution published anywhere so I can test it too?",True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/4989#issuecomment-295259828,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815","Sorry, no, I'm just working directly on master for this change. But it shouldn't be too much longer before I push it to Github...",True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/4989#issuecomment-295403817,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815",[master a2187a6] Update cupsEnumDests implementation to return early if all printers have been discovered (Issue #4989),True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/4989#issuecomment-295404016,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815",Please verify the fix in Github resolves the problems you were having.,True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/antlarr,8,https://github.com/apple/cups/pull/4989#issuecomment-295706789,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815",I added a couple of comments to your commit. Do you want me to modify my PR to fix those? Or do you prefer to work on them yourself?,True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/michaelrsweet,9,https://github.com/apple/cups/pull/4989#issuecomment-295719227,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815",@antlarr I'm doing follow-up testing on a few Linux distros now (first pass mainly tested macOS) and had found the issues you have reported in the comments to the commit. I have some more changes for Avahi coming...,True,{'THUMBS_UP': ['https://github.com/antlarr']}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/michaelrsweet,10,https://github.com/apple/cups/pull/4989#issuecomment-295753192,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815","OK, just pushed more changes that seem to make Ubuntu happy.",True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/antlarr,11,https://github.com/apple/cups/pull/4989#issuecomment-295793508,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815","Perfect, with a2187a6, 657c5b5 and 3fae3b3 now it works fine.
Thanks, I'll include those three commits in openSUSE Leap/Tumbleweed and SUSE Linux Enterprise. I'll close this pull request if you think that's ok now.",True,{}
apple/cups,https://github.com/apple/cups,4989,2017-04-11T10:30:35Z,2017-04-20T16:12:02Z,2017-04-20T16:12:02Z,CLOSED,False,8,2,1,https://github.com/antlarr,Fix cupsEnumDests to finish when receiving the ALL_FOR_NOW avahi event,1,['priority-low'],https://github.com/apple/cups/pull/4989,https://github.com/michaelrsweet,12,https://github.com/apple/cups/pull/4989#issuecomment-295796047,"cupsEnumDests listens for avahi answers for msec milliseconds (where
msec is given as a parameter to cupsEnumDests). avahi sends an
ALL_FOR_NOW event [1] when ""more records will probably not show up in
the near future"". This means that from the reception of ALL_FOR_NOW
to the timeout triggering, cupsEnumDests basically does nothing but
block the caller. Also, since the caller can't know how long it will
take cupsEnumDests to receive all information from avahi, this means
developers are encouraged to use ""big enough"" values for msec,
thus blocking their calling threads unnecessarily.
This patch makes cupsEnumDests react to the ALL_FOR_NOW event and
finish as soon as all avahi caches have been read and all static
servers have been queried.
No behavior is changed when HAVE_DNSSD is defined.
[1] http://www.avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87a430e1134047305e7b892e784cf72f815","Yes, I'll probably keep testing on our other supported platforms (Windows in particular) but you should be good to go on Linux.",True,{'THUMBS_UP': ['https://github.com/antlarr']}
apple/cups,https://github.com/apple/cups,4996,2017-05-10T12:35:50Z,2017-06-19T13:07:20Z,2017-06-19T13:08:15Z,MERGED,True,1,1,1,https://github.com/psychomario,cupstestppd Buffer Overflow,1,['priority-low'],https://github.com/apple/cups/pull/4996,https://github.com/psychomario,1,https://github.com/apple/cups/pull/4996,"Due to the lack of a length specifier in a sscanf used to read the PPD PSVersion field, a malicious PPD file can overflow the junkstr char array in a classic buffer overflow scenario. Since the \n character is also missing from the sscanf, it's possible to read multiple lines directly into the buffer.
This patch adds both a maximum length specifier, and stops the sscanf reading multiple lines, both of which alone will mitigate this overflow.
Since this is a helper tool and not the main CUPS server, and exploiting this (at least on my machines) is completely blocked by ASLR and Stack Canaries, so I felt OK with submitting this PR publicly. My apologies if this is not acceptable.","Due to the lack of a length specifier in a sscanf used to read the PPD PSVersion field, a malicious PPD file can overflow the junkstr char array in a classic buffer overflow scenario. Since the \n character is also missing from the sscanf, it's possible to read multiple lines directly into the buffer.
This patch adds both a maximum length specifier, and stops the sscanf reading multiple lines, both of which alone will mitigate this overflow.
Since this is a helper tool and not the main CUPS server, and exploiting this (at least on my machines) is completely blocked by ASLR and Stack Canaries, so I felt OK with submitting this PR publicly. My apologies if this is not acceptable.",True,{}
apple/cups,https://github.com/apple/cups,5016,2017-06-05T12:39:00Z,2017-06-05T13:50:09Z,2017-06-23T19:37:09Z,MERGED,True,1,0,1,https://github.com/jnerin,Fix closures and button in templates/es/jobs.tmpl,1,[],https://github.com/apple/cups/pull/5016,https://github.com/jnerin,1,https://github.com/apple/cups/pull/5016,Add missing closures and reprint button in templates/es/jobs.tmpl. Before this completed job list output was broken for Spanish language.,Add missing closures and reprint button in templates/es/jobs.tmpl. Before this completed job list output was broken for Spanish language.,True,{}
apple/cups,https://github.com/apple/cups,5029,2017-06-11T04:46:22Z,2017-06-19T13:10:10Z,2017-06-25T07:40:28Z,MERGED,True,8916,0,1,https://github.com/MingcongBai,locale: introduce cups_zh_CN.po,1,['priority-low'],https://github.com/apple/cups/pull/5029,https://github.com/MingcongBai,1,https://github.com/apple/cups/pull/5029,Not sure if there's anything else to do... Haven't tested it out yet.,Not sure if there's anything else to do... Haven't tested it out yet.,True,{}
apple/cups,https://github.com/apple/cups,5029,2017-06-11T04:46:22Z,2017-06-19T13:10:10Z,2017-06-25T07:40:28Z,MERGED,True,8916,0,1,https://github.com/MingcongBai,locale: introduce cups_zh_CN.po,1,['priority-low'],https://github.com/apple/cups/pull/5029,https://github.com/MingcongBai,2,https://github.com/apple/cups/pull/5029#issuecomment-310888108,Not sure if there's anything else to do... Haven't tested it out yet.,@michaelrsweet Thanks so much!,True,{}
apple/cups,https://github.com/apple/cups,5044,2017-07-04T06:35:03Z,2017-07-04T13:45:02Z,2017-07-04T13:45:02Z,MERGED,True,3,0,1,https://github.com/kesterriley,Update cups.spec.in,1,['priority-medium'],https://github.com/apple/cups/pull/5044,https://github.com/kesterriley,1,https://github.com/apple/cups/pull/5044,"To fix issue 5043.
Checking for unpackaged file(s): /usr/lib/rpm/check-files /root/rpmbuild/BUILDROOT/cups-2.2.4-0.x86_64
error: Installed (but unpackaged) file(s) found:
/usr/share/locale/zh_CN/cups_zh_CN.po
RPM build errors:
Installed (but unpackaged) file(s) found:
/usr/share/locale/zh_CN/cups_zh_CN.po","To fix issue 5043.
Checking for unpackaged file(s): /usr/lib/rpm/check-files /root/rpmbuild/BUILDROOT/cups-2.2.4-0.x86_64
error: Installed (but unpackaged) file(s) found:
/usr/share/locale/zh_CN/cups_zh_CN.po
RPM build errors:
Installed (but unpackaged) file(s) found:
/usr/share/locale/zh_CN/cups_zh_CN.po",True,{}
apple/cups,https://github.com/apple/cups,5054,2017-07-11T06:33:14Z,2017-07-18T12:31:50Z,2017-07-18T12:32:01Z,MERGED,True,1,1,1,https://github.com/sanbrother,Fix : dead lock when there is already an active job,1,['priority-low'],https://github.com/apple/cups/pull/5054,https://github.com/sanbrother,1,https://github.com/apple/cups/pull/5054,It seems like a coding miss.,It seems like a coding miss.,True,{}
apple/cups,https://github.com/apple/cups,5062,2017-07-17T12:27:16Z,2017-07-17T22:03:36Z,2017-07-17T22:03:47Z,MERGED,True,3,0,1,https://github.com/rohieb,configure: don't accidentally set @LIBTOOL@ to 'yes',1,['priority-low'],https://github.com/apple/cups/pull/5062,https://github.com/rohieb,1,https://github.com/apple/cups/pull/5062,"Substituting @libtool@ with 'yes' would result in a lot of console
output (34 GB in my case, before SIGKILL), without getting anything
compiled at all.
Adresses #5050","Substituting @libtool@ with 'yes' would result in a lot of console
output (34 GB in my case, before SIGKILL), without getting anything
compiled at all.
Adresses #5050",True,{}
apple/cups,https://github.com/apple/cups,5066,2017-07-22T14:15:36Z,2017-07-24T15:21:15Z,2017-07-25T10:46:04Z,MERGED,True,284,264,1,https://github.com/sblondon,Update french translations,1,['priority-low'],https://github.com/apple/cups/pull/5066,https://github.com/sblondon,1,https://github.com/apple/cups/pull/5066,"This patch provides an update of cups_fr.po : it adds several strings and fixes few of the previous ones.
There are still a lot of untranslated strings. However I think it's a good first step.
Do you think it's mergeable? Do you want more french translations?","This patch provides an update of cups_fr.po : it adds several strings and fixes few of the previous ones.
There are still a lot of untranslated strings. However I think it's a good first step.
Do you think it's mergeable? Do you want more french translations?",True,{}
apple/cups,https://github.com/apple/cups,5066,2017-07-22T14:15:36Z,2017-07-24T15:21:15Z,2017-07-25T10:46:04Z,MERGED,True,284,264,1,https://github.com/sblondon,Update french translations,1,['priority-low'],https://github.com/apple/cups/pull/5066,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5066#issuecomment-317457277,"This patch provides an update of cups_fr.po : it adds several strings and fixes few of the previous ones.
There are still a lot of untranslated strings. However I think it's a good first step.
Do you think it's mergeable? Do you want more french translations?",Will review and merge if everything looks OK.,True,{}
apple/cups,https://github.com/apple/cups,5066,2017-07-22T14:15:36Z,2017-07-24T15:21:15Z,2017-07-25T10:46:04Z,MERGED,True,284,264,1,https://github.com/sblondon,Update french translations,1,['priority-low'],https://github.com/apple/cups/pull/5066,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5066#issuecomment-317457879,"This patch provides an update of cups_fr.po : it adds several strings and fixes few of the previous ones.
There are still a lot of untranslated strings. However I think it's a good first step.
Do you think it's mergeable? Do you want more french translations?","Looks good visually, will merge and then correct any errors that checkpo shows...",True,{}
apple/cups,https://github.com/apple/cups,5066,2017-07-22T14:15:36Z,2017-07-24T15:21:15Z,2017-07-25T10:46:04Z,MERGED,True,284,264,1,https://github.com/sblondon,Update french translations,1,['priority-low'],https://github.com/apple/cups/pull/5066,https://github.com/sblondon,4,https://github.com/apple/cups/pull/5066#issuecomment-317700562,"This patch provides an update of cups_fr.po : it adds several strings and fixes few of the previous ones.
There are still a lot of untranslated strings. However I think it's a good first step.
Do you think it's mergeable? Do you want more french translations?",Thanks!,True,{}
apple/cups,https://github.com/apple/cups,5076,2017-07-30T12:45:41Z,2017-08-25T15:41:58Z,2017-08-25T15:41:58Z,CLOSED,False,89119,56894,1135,None,Branch 2.0,41,['wontfix'],https://github.com/apple/cups/pull/5076,None,1,https://github.com/apple/cups/pull/5076,,,True,{}
apple/cups,https://github.com/apple/cups,5077,2017-07-30T12:48:35Z,2017-08-25T15:41:58Z,2017-08-25T15:41:58Z,CLOSED,False,28598,8006,361,None,Branch 2.1,102,['wontfix'],https://github.com/apple/cups/pull/5077,None,1,https://github.com/apple/cups/pull/5077,,,True,{}
apple/cups,https://github.com/apple/cups,5078,2017-07-30T14:40:54Z,2017-08-25T15:41:58Z,2017-08-25T15:41:58Z,CLOSED,False,89119,56894,1135,None,Branch 2.0,41,['wontfix'],https://github.com/apple/cups/pull/5078,None,1,https://github.com/apple/cups/pull/5078,,,True,{}
apple/cups,https://github.com/apple/cups,5079,2017-07-30T14:41:34Z,2017-08-25T15:41:58Z,2017-08-25T15:41:58Z,CLOSED,False,110754,57937,1205,None,Branch 2.1,143,['wontfix'],https://github.com/apple/cups/pull/5079,None,1,https://github.com/apple/cups/pull/5079,,,True,{}
apple/cups,https://github.com/apple/cups,5079,2017-07-30T14:41:34Z,2017-08-25T15:41:58Z,2017-08-25T15:41:58Z,CLOSED,False,110754,57937,1205,None,Branch 2.1,143,['wontfix'],https://github.com/apple/cups/pull/5079,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5079#issuecomment-318947506,,@Kirill82 What is the purpose of this and your other pull requests?,True,{}
apple/cups,https://github.com/apple/cups,5081,2017-08-06T20:02:59Z,2017-08-25T04:56:08Z,2017-08-25T04:56:08Z,MERGED,True,41,41,1,https://github.com/sblondon,Update french translations,1,['priority-low'],https://github.com/apple/cups/pull/5081,https://github.com/sblondon,1,https://github.com/apple/cups/pull/5081,"This patch adds new translations into french language.
The first line fixes only a missing unbrakable space.
I checked that msgfmt cups_fr.po runs without errors (no output, exit value is 0).","This patch adds new translations into french language.
The first line fixes only a missing unbrakable space.
I checked that msgfmt cups_fr.po runs without errors (no output, exit value is 0).",True,{}
apple/cups,https://github.com/apple/cups,5098,2017-08-28T14:35:35Z,2017-08-28T21:59:51Z,2017-08-28T21:59:51Z,CLOSED,False,216195,109557,1303,https://github.com/Cistoge,Disable port comparison in _cupsConnect() when connection type is AF_UNIX,1237,['priority-low'],https://github.com/apple/cups/pull/5098,https://github.com/Cistoge,1,https://github.com/apple/cups/pull/5098,"Hello,
I could not print with cups 2.2.1, at least not with the command line tools, when policy was set to authenticated.
First, I found that the cause was the comparison of cg->ipp_port and httpAddrPort(cg->http->hostaddr)) in _cupsConnect() in request.c, because when connection type is AF_UNIX, the first is 631 and the second is 0. That causes the connection to be closed and a new one to be established immediately after, but the new connection does not have the authentication information of the previous connection.
Then, I found that this was introduced when httpAddrPort() in http-addr.c was changed so that it returns 0 instead of 631 in the case when connection type is AF_UNIX. As it makes sense to return 0 as port number in that case, I did not change httpAddrPort(), but _cupsConnect() in request.c, so that the port comparison between cg->ipp_port and httpAddrPort(cg->http->hostaddr)) only takes place in non-AF_UNIX connections.
I attached a patch and would like it to be reviewed.
Regards
Christoph
no_port_comparison_with_unix_socket.patch.txt","Hello,
I could not print with cups 2.2.1, at least not with the command line tools, when policy was set to authenticated.
First, I found that the cause was the comparison of cg->ipp_port and httpAddrPort(cg->http->hostaddr)) in _cupsConnect() in request.c, because when connection type is AF_UNIX, the first is 631 and the second is 0. That causes the connection to be closed and a new one to be established immediately after, but the new connection does not have the authentication information of the previous connection.
Then, I found that this was introduced when httpAddrPort() in http-addr.c was changed so that it returns 0 instead of 631 in the case when connection type is AF_UNIX. As it makes sense to return 0 as port number in that case, I did not change httpAddrPort(), but _cupsConnect() in request.c, so that the port comparison between cg->ipp_port and httpAddrPort(cg->http->hostaddr)) only takes place in non-AF_UNIX connections.
I attached a patch and would like it to be reviewed.
Regards
Christoph
no_port_comparison_with_unix_socket.patch.txt",True,{}
apple/cups,https://github.com/apple/cups,5098,2017-08-28T14:35:35Z,2017-08-28T21:59:51Z,2017-08-28T21:59:51Z,CLOSED,False,216195,109557,1303,https://github.com/Cistoge,Disable port comparison in _cupsConnect() when connection type is AF_UNIX,1237,['priority-low'],https://github.com/apple/cups/pull/5098,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5098#issuecomment-325495750,"Hello,
I could not print with cups 2.2.1, at least not with the command line tools, when policy was set to authenticated.
First, I found that the cause was the comparison of cg->ipp_port and httpAddrPort(cg->http->hostaddr)) in _cupsConnect() in request.c, because when connection type is AF_UNIX, the first is 631 and the second is 0. That causes the connection to be closed and a new one to be established immediately after, but the new connection does not have the authentication information of the previous connection.
Then, I found that this was introduced when httpAddrPort() in http-addr.c was changed so that it returns 0 instead of 631 in the case when connection type is AF_UNIX. As it makes sense to return 0 as port number in that case, I did not change httpAddrPort(), but _cupsConnect() in request.c, so that the port comparison between cg->ipp_port and httpAddrPort(cg->http->hostaddr)) only takes place in non-AF_UNIX connections.
I attached a patch and would like it to be reviewed.
Regards
Christoph
no_port_comparison_with_unix_socket.patch.txt","Pushed a similar fix:
[master 9449dd9] The CUPS library did not reuse domain sockets (Issue #5098)",True,{}
apple/cups,https://github.com/apple/cups,5099,2017-08-28T17:07:56Z,2017-10-12T18:28:18Z,2017-10-12T18:28:18Z,CLOSED,False,3,1,1,https://github.com/OdyX,Tests: error_log entries counting is off by two 'Unknown default SystemGroup' occurences,1,['priority-low'],https://github.com/apple/cups/pull/5099,https://github.com/OdyX,1,https://github.com/apple/cups/pull/5099,"This regression was introduced by the fix for #5041 which makes builds with --with-system-groups=lpadmin in environments where that same system group doesn't exist fail in the testsuite with the following error:
FAIL: 35 error messages, expected 33.
E [28/Aug/2017:13:46:06.572986 +0000] Unknown default SystemGroup ""lpadmin"".
…

The error_log error counting is off by two additionnal error messages as above.
This patch is how we fixed it in Debian, adressing specifically this problem only. There's certainly a better way to fix this than omitting that line in the error_log lines counting.
By the way; these are all the exceptions we take into account to only count '33' errors consistently:
count=`$GREP '^E ' $BASE/log/error_log | \
       $GREP -v '(usb) crashed on signal 11' | \
       $GREP -v '(dnssd) stopped with status 1' | \
       $GREP -v 'loadFile failed: temp file: not a PDF file' | \
       $GREP -v 'Failed to connect to system bus' | \
       $GREP -v -E 'Unable to open listen socket for address .* Address family not supported by protocol.' | \
       $GREP -v 'Unable to write uncompressed print data: Broken pipe' | \
       $GREP -v 'Unknown default SystemGroup' | \
       wc -l | awk '{print $1}'`","This regression was introduced by the fix for #5041 which makes builds with --with-system-groups=lpadmin in environments where that same system group doesn't exist fail in the testsuite with the following error:
FAIL: 35 error messages, expected 33.
E [28/Aug/2017:13:46:06.572986 +0000] Unknown default SystemGroup ""lpadmin"".
…

The error_log error counting is off by two additionnal error messages as above.
This patch is how we fixed it in Debian, adressing specifically this problem only. There's certainly a better way to fix this than omitting that line in the error_log lines counting.
By the way; these are all the exceptions we take into account to only count '33' errors consistently:
count=`$GREP '^E ' $BASE/log/error_log | \
       $GREP -v '(usb) crashed on signal 11' | \
       $GREP -v '(dnssd) stopped with status 1' | \
       $GREP -v 'loadFile failed: temp file: not a PDF file' | \
       $GREP -v 'Failed to connect to system bus' | \
       $GREP -v -E 'Unable to open listen socket for address .* Address family not supported by protocol.' | \
       $GREP -v 'Unable to write uncompressed print data: Broken pipe' | \
       $GREP -v 'Unknown default SystemGroup' | \
       wc -l | awk '{print $1}'`",True,{}
apple/cups,https://github.com/apple/cups,5099,2017-08-28T17:07:56Z,2017-10-12T18:28:18Z,2017-10-12T18:28:18Z,CLOSED,False,3,1,1,https://github.com/OdyX,Tests: error_log entries counting is off by two 'Unknown default SystemGroup' occurences,1,['priority-low'],https://github.com/apple/cups/pull/5099,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5099#issuecomment-331719141,"This regression was introduced by the fix for #5041 which makes builds with --with-system-groups=lpadmin in environments where that same system group doesn't exist fail in the testsuite with the following error:
FAIL: 35 error messages, expected 33.
E [28/Aug/2017:13:46:06.572986 +0000] Unknown default SystemGroup ""lpadmin"".
…

The error_log error counting is off by two additionnal error messages as above.
This patch is how we fixed it in Debian, adressing specifically this problem only. There's certainly a better way to fix this than omitting that line in the error_log lines counting.
By the way; these are all the exceptions we take into account to only count '33' errors consistently:
count=`$GREP '^E ' $BASE/log/error_log | \
       $GREP -v '(usb) crashed on signal 11' | \
       $GREP -v '(dnssd) stopped with status 1' | \
       $GREP -v 'loadFile failed: temp file: not a PDF file' | \
       $GREP -v 'Failed to connect to system bus' | \
       $GREP -v -E 'Unable to open listen socket for address .* Address family not supported by protocol.' | \
       $GREP -v 'Unable to write uncompressed print data: Broken pipe' | \
       $GREP -v 'Unknown default SystemGroup' | \
       wc -l | awk '{print $1}'`","Not sure why you are seeing extra messages, but will investigate...",True,{}
apple/cups,https://github.com/apple/cups,5099,2017-08-28T17:07:56Z,2017-10-12T18:28:18Z,2017-10-12T18:28:18Z,CLOSED,False,3,1,1,https://github.com/OdyX,Tests: error_log entries counting is off by two 'Unknown default SystemGroup' occurences,1,['priority-low'],https://github.com/apple/cups/pull/5099,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5099#issuecomment-336225278,"This regression was introduced by the fix for #5041 which makes builds with --with-system-groups=lpadmin in environments where that same system group doesn't exist fail in the testsuite with the following error:
FAIL: 35 error messages, expected 33.
E [28/Aug/2017:13:46:06.572986 +0000] Unknown default SystemGroup ""lpadmin"".
…

The error_log error counting is off by two additionnal error messages as above.
This patch is how we fixed it in Debian, adressing specifically this problem only. There's certainly a better way to fix this than omitting that line in the error_log lines counting.
By the way; these are all the exceptions we take into account to only count '33' errors consistently:
count=`$GREP '^E ' $BASE/log/error_log | \
       $GREP -v '(usb) crashed on signal 11' | \
       $GREP -v '(dnssd) stopped with status 1' | \
       $GREP -v 'loadFile failed: temp file: not a PDF file' | \
       $GREP -v 'Failed to connect to system bus' | \
       $GREP -v -E 'Unable to open listen socket for address .* Address family not supported by protocol.' | \
       $GREP -v 'Unable to write uncompressed print data: Broken pipe' | \
       $GREP -v 'Unknown default SystemGroup' | \
       wc -l | awk '{print $1}'`","OK, well for now filtering the error messages seems to be the least invasive way to avoid this:
[master 9798049] Fix ""make check"" for restricted environments (Issue #5099)",True,{}
apple/cups,https://github.com/apple/cups,5101,2017-08-31T08:36:17Z,2017-11-06T21:58:05Z,2017-11-06T21:58:16Z,CLOSED,False,3,0,1,https://github.com/scabrero,Fix authorization check for kerberos local connections,1,['priority-medium'],https://github.com/apple/cups/pull/5101,https://github.com/scabrero,1,https://github.com/apple/cups/pull/5101,"When a client connects through local socket, it is always authenticated
using Basic and socket peer credentials regardless the authentication
method configured. The authorization function should take this into
account and skip the authentication method check for AF_LOCAL connections.
Signed-off-by: Samuel Cabrero scabrero@suse.de","When a client connects through local socket, it is always authenticated
using Basic and socket peer credentials regardless the authentication
method configured. The authorization function should take this into
account and skip the authentication method check for AF_LOCAL connections.
Signed-off-by: Samuel Cabrero scabrero@suse.de",True,{}
apple/cups,https://github.com/apple/cups,5101,2017-08-31T08:36:17Z,2017-11-06T21:58:05Z,2017-11-06T21:58:16Z,CLOSED,False,3,0,1,https://github.com/scabrero,Fix authorization check for kerberos local connections,1,['priority-medium'],https://github.com/apple/cups/pull/5101,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5101#issuecomment-331719086,"When a client connects through local socket, it is always authenticated
using Basic and socket peer credentials regardless the authentication
method configured. The authorization function should take this into
account and skip the authentication method check for AF_LOCAL connections.
Signed-off-by: Samuel Cabrero scabrero@suse.de",Need to do a security review - at first blush this isn't the right fix (we should be using Kerberos for local connections) but will check...,True,{}
apple/cups,https://github.com/apple/cups,5101,2017-08-31T08:36:17Z,2017-11-06T21:58:05Z,2017-11-06T21:58:16Z,CLOSED,False,3,0,1,https://github.com/scabrero,Fix authorization check for kerberos local connections,1,['priority-medium'],https://github.com/apple/cups/pull/5101,https://github.com/sriemer,3,https://github.com/apple/cups/pull/5101#issuecomment-333142453,"When a client connects through local socket, it is always authenticated
using Basic and socket peer credentials regardless the authentication
method configured. The authorization function should take this into
account and skip the authentication method check for AF_LOCAL connections.
Signed-off-by: Samuel Cabrero scabrero@suse.de","The problem exists together with Samba. Kerberos auth is used for the CUPS web interface and Kerberos is used for the Windows clients. When pausing/resuming printers with Windows Explorer, Samba has to authenticate to CUPS (again).",True,{}
apple/cups,https://github.com/apple/cups,5101,2017-08-31T08:36:17Z,2017-11-06T21:58:05Z,2017-11-06T21:58:16Z,CLOSED,False,3,0,1,https://github.com/scabrero,Fix authorization check for kerberos local connections,1,['priority-medium'],https://github.com/apple/cups/pull/5101,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5101#issuecomment-341226151,"When a client connects through local socket, it is always authenticated
using Basic and socket peer credentials regardless the authentication
method configured. The authorization function should take this into
account and skip the authentication method check for AF_LOCAL connections.
Signed-off-by: Samuel Cabrero scabrero@suse.de","@sriemer Basically, you are asking for the local user account (whatever Samba is using) to be able to bypass the Kerberos authentication requirement. But a Samba user may not have a corresponding local user account, right? This could end up being ""nobody"" or ""root"" or some other account, right?
Unless we know that the Samba user exists as a local user account, this doesn't look like the correct fix (whatever that fix should be).",True,{}
apple/cups,https://github.com/apple/cups,5101,2017-08-31T08:36:17Z,2017-11-06T21:58:05Z,2017-11-06T21:58:16Z,CLOSED,False,3,0,1,https://github.com/scabrero,Fix authorization check for kerberos local connections,1,['priority-medium'],https://github.com/apple/cups/pull/5101,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5101#issuecomment-342301392,"When a client connects through local socket, it is always authenticated
using Basic and socket peer credentials regardless the authentication
method configured. The authorization function should take this into
account and skip the authentication method check for AF_LOCAL connections.
Signed-off-by: Samuel Cabrero scabrero@suse.de","and after going through the auth code again (as part of a HTTP Digest modernization effort), it looks like neither cupsd nor libcups will use peer credentials if Kerberos (Negotiate) is enabled.
Closing this PR. Please open a new one if you come up with a solution...",True,{}
apple/cups,https://github.com/apple/cups,5103,2017-09-01T11:42:31Z,2017-09-05T20:57:37Z,2017-09-07T07:55:31Z,MERGED,True,3,0,1,https://github.com/michaelweghorn,Add a USB quirk rule for the Kyocera Ecosys P6130cdn (Issue #5102),1,['priority-low'],https://github.com/apple/cups/pull/5103,https://github.com/michaelweghorn,1,https://github.com/apple/cups/pull/5103,This adds the respective USB quirk entry needed to fix #5102.,This adds the respective USB quirk entry needed to fix #5102.,True,{}
apple/cups,https://github.com/apple/cups,5103,2017-09-01T11:42:31Z,2017-09-05T20:57:37Z,2017-09-07T07:55:31Z,MERGED,True,3,0,1,https://github.com/michaelweghorn,Add a USB quirk rule for the Kyocera Ecosys P6130cdn (Issue #5102),1,['priority-low'],https://github.com/apple/cups/pull/5103,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5103#issuecomment-327301151,This adds the respective USB quirk entry needed to fix #5102.,Thanks!,True,{}
apple/cups,https://github.com/apple/cups,5112,2017-09-12T11:18:16Z,2017-09-28T17:12:02Z,2017-09-28T17:12:02Z,MERGED,True,0,1,1,https://github.com/paulmenzel,Remove Libgcrypt detection,1,[],https://github.com/apple/cups/pull/5112,https://github.com/paulmenzel,1,https://github.com/apple/cups/pull/5112,,,True,{}
apple/cups,https://github.com/apple/cups,5112,2017-09-12T11:18:16Z,2017-09-28T17:12:02Z,2017-09-28T17:12:02Z,MERGED,True,0,1,1,https://github.com/paulmenzel,Remove Libgcrypt detection,1,[],https://github.com/apple/cups/pull/5112,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5112#issuecomment-328938593,,It would be useful to know the context/purpose of this change.,True,{}
apple/cups,https://github.com/apple/cups,5112,2017-09-12T11:18:16Z,2017-09-28T17:12:02Z,2017-09-28T17:12:02Z,MERGED,True,0,1,1,https://github.com/paulmenzel,Remove Libgcrypt detection,1,[],https://github.com/apple/cups/pull/5112,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5112#issuecomment-332239443,,@paulmenzel Why is this change needed?,True,{}
apple/cups,https://github.com/apple/cups,5112,2017-09-12T11:18:16Z,2017-09-28T17:12:02Z,2017-09-28T17:12:02Z,MERGED,True,0,1,1,https://github.com/paulmenzel,Remove Libgcrypt detection,1,[],https://github.com/apple/cups/pull/5112,https://github.com/paulmenzel,4,https://github.com/apple/cups/pull/5112#issuecomment-332852757,,"Sorry, I thought it’s clear from the commit message.

Prevent configure script from searching libgcrypt-config, because
libgcrypt is not used anywere else in the package.

Please tell me, what is unclear.",True,{}
apple/cups,https://github.com/apple/cups,5112,2017-09-12T11:18:16Z,2017-09-28T17:12:02Z,2017-09-28T17:12:02Z,MERGED,True,0,1,1,https://github.com/paulmenzel,Remove Libgcrypt detection,1,[],https://github.com/apple/cups/pull/5112,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5112#issuecomment-332902237,,"OK, I didn't see the commit message from your fork, just the changed files in the pull request. Makes sense.",True,{}
apple/cups,https://github.com/apple/cups,5113,2017-09-12T15:34:33Z,2017-09-12T18:15:00Z,2019-02-25T13:54:06Z,CLOSED,False,163,0,1,https://github.com/paulmenzel,Integrate Travis CI,3,[],https://github.com/apple/cups/pull/5113,https://github.com/paulmenzel,1,https://github.com/apple/cups/pull/5113,"It’s good practice to test each commit and merge/pull request before accepting it into the master branch.
Travis CI offers such a service, and integrates well with GitHub. After creating an
account, that account can be associated with a GitHub account, and build testing can then be enabled
for a project.
Then, if a file .travis.yml is present in the top level directory of the project, Travis CI will execute the
configured commands, and annotates a merge/pull request, if all commands succeed or fail.
This merge/pull request adds the configuration file for Travis CI.","It’s good practice to test each commit and merge/pull request before accepting it into the master branch.
Travis CI offers such a service, and integrates well with GitHub. After creating an
account, that account can be associated with a GitHub account, and build testing can then be enabled
for a project.
Then, if a file .travis.yml is present in the top level directory of the project, Travis CI will execute the
configured commands, and annotates a merge/pull request, if all commands succeed or fail.
This merge/pull request adds the configuration file for Travis CI.",True,{}
apple/cups,https://github.com/apple/cups,5113,2017-09-12T15:34:33Z,2017-09-12T18:15:00Z,2019-02-25T13:54:06Z,CLOSED,False,163,0,1,https://github.com/paulmenzel,Integrate Travis CI,3,[],https://github.com/apple/cups/pull/5113,https://github.com/paulmenzel,2,https://github.com/apple/cups/pull/5113#issuecomment-328891494,"It’s good practice to test each commit and merge/pull request before accepting it into the master branch.
Travis CI offers such a service, and integrates well with GitHub. After creating an
account, that account can be associated with a GitHub account, and build testing can then be enabled
for a project.
Then, if a file .travis.yml is present in the top level directory of the project, Travis CI will execute the
configured commands, and annotates a merge/pull request, if all commands succeed or fail.
This merge/pull request adds the configuration file for Travis CI.","My fork is already associated with Travis CI, so here is the current status.",True,{}
apple/cups,https://github.com/apple/cups,5113,2017-09-12T15:34:33Z,2017-09-12T18:15:00Z,2019-02-25T13:54:06Z,CLOSED,False,163,0,1,https://github.com/paulmenzel,Integrate Travis CI,3,[],https://github.com/apple/cups/pull/5113,https://github.com/paulmenzel,3,https://github.com/apple/cups/pull/5113#issuecomment-328928653,"It’s good practice to test each commit and merge/pull request before accepting it into the master branch.
Travis CI offers such a service, and integrates well with GitHub. After creating an
account, that account can be associated with a GitHub account, and build testing can then be enabled
for a project.
Then, if a file .travis.yml is present in the top level directory of the project, Travis CI will execute the
configured commands, and annotates a merge/pull request, if all commands succeed or fail.
This merge/pull request adds the configuration file for Travis CI.","I removed the macOS builds with GCC from Homebrew from the build matrix, as this currently fails. The latest upload passes all items from the build matrix.",True,{}
apple/cups,https://github.com/apple/cups,5113,2017-09-12T15:34:33Z,2017-09-12T18:15:00Z,2019-02-25T13:54:06Z,CLOSED,False,163,0,1,https://github.com/paulmenzel,Integrate Travis CI,3,[],https://github.com/apple/cups/pull/5113,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5113#issuecomment-328937748,"It’s good practice to test each commit and merge/pull request before accepting it into the master branch.
Travis CI offers such a service, and integrates well with GitHub. After creating an
account, that account can be associated with a GitHub account, and build testing can then be enabled
for a project.
Then, if a file .travis.yml is present in the top level directory of the project, Travis CI will execute the
configured commands, and annotates a merge/pull request, if all commands succeed or fail.
This merge/pull request adds the configuration file for Travis CI.","Sorry, we are not using Travis for CUPS development, we have our own internal solution. And as for making macOS builds work with third-party compilers, that is simply not something we will support.",True,{}
apple/cups,https://github.com/apple/cups,5113,2017-09-12T15:34:33Z,2017-09-12T18:15:00Z,2019-02-25T13:54:06Z,CLOSED,False,163,0,1,https://github.com/paulmenzel,Integrate Travis CI,3,[],https://github.com/apple/cups/pull/5113,https://github.com/paulmenzel,5,https://github.com/apple/cups/pull/5113#issuecomment-466760430,"It’s good practice to test each commit and merge/pull request before accepting it into the master branch.
Travis CI offers such a service, and integrates well with GitHub. After creating an
account, that account can be associated with a GitHub account, and build testing can then be enabled
for a project.
Then, if a file .travis.yml is present in the top level directory of the project, Travis CI will execute the
configured commands, and annotates a merge/pull request, if all commands succeed or fail.
This merge/pull request adds the configuration file for Travis CI.","Just a note, that this was added in October 2018 in commit d65e20f (Add Travis CI support.). Maybe it should be backported to the 2.2.x branch.",True,{}
apple/cups,https://github.com/apple/cups,5113,2017-09-12T15:34:33Z,2017-09-12T18:15:00Z,2019-02-25T13:54:06Z,CLOSED,False,163,0,1,https://github.com/paulmenzel,Integrate Travis CI,3,[],https://github.com/apple/cups/pull/5113,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5113#issuecomment-466865245,"It’s good practice to test each commit and merge/pull request before accepting it into the master branch.
Travis CI offers such a service, and integrates well with GitHub. After creating an
account, that account can be associated with a GitHub account, and build testing can then be enabled
for a project.
Then, if a file .travis.yml is present in the top level directory of the project, Travis CI will execute the
configured commands, and annotates a merge/pull request, if all commands succeed or fail.
This merge/pull request adds the configuration file for Travis CI.","@paulmenzel I may have added a Travis config file, but I am unable to grant it privileges to an Apple repository so it will be going away... :(",True,{}
apple/cups,https://github.com/apple/cups,5113,2017-09-12T15:34:33Z,2017-09-12T18:15:00Z,2019-02-25T13:54:06Z,CLOSED,False,163,0,1,https://github.com/paulmenzel,Integrate Travis CI,3,[],https://github.com/apple/cups/pull/5113,https://github.com/paulmenzel,7,https://github.com/apple/cups/pull/5113#issuecomment-466952587,"It’s good practice to test each commit and merge/pull request before accepting it into the master branch.
Travis CI offers such a service, and integrates well with GitHub. After creating an
account, that account can be associated with a GitHub account, and build testing can then be enabled
for a project.
Then, if a file .travis.yml is present in the top level directory of the project, Travis CI will execute the
configured commands, and annotates a merge/pull request, if all commands succeed or fail.
This merge/pull request adds the configuration file for Travis CI.","On 02/25/19 05:07, Michael R Sweet wrote:
 @paulmenzel I may have added a Travis config file, but I am unable to
 grant it privileges to an Apple repository so it will be going
 away... :(
Did you contact the Travis CI folks?",True,{}
apple/cups,https://github.com/apple/cups,5113,2017-09-12T15:34:33Z,2017-09-12T18:15:00Z,2019-02-25T13:54:06Z,CLOSED,False,163,0,1,https://github.com/paulmenzel,Integrate Travis CI,3,[],https://github.com/apple/cups/pull/5113,https://github.com/michaelrsweet,8,https://github.com/apple/cups/pull/5113#issuecomment-467019069,"It’s good practice to test each commit and merge/pull request before accepting it into the master branch.
Travis CI offers such a service, and integrates well with GitHub. After creating an
account, that account can be associated with a GitHub account, and build testing can then be enabled
for a project.
Then, if a file .travis.yml is present in the top level directory of the project, Travis CI will execute the
configured commands, and annotates a merge/pull request, if all commands succeed or fail.
This merge/pull request adds the configuration file for Travis CI.","@paulmenzel It is not a Travis CI thing, it is an organizational thing at Apple (who needs to grant the access to Travis CI).",True,{}
apple/cups,https://github.com/apple/cups,5122,2017-09-25T15:17:41Z,2017-10-12T14:44:12Z,2017-10-12T14:44:12Z,CLOSED,False,33,11,1,https://github.com/rohieb,configure: improve interpreter detection,3,['priority-low'],https://github.com/apple/cups/pull/5122,https://github.com/rohieb,1,https://github.com/apple/cups/pull/5122,"Currently, when configure is called with --with-java or --with-java=, auto-detection is performed. When called with --without-java, HAVE_JAVA is still being defined. This is unfortunate when cross-compiling for embedded systems, we would end up with Java on the host being auto-detected (which is not what we have on the target), or with a wrong HAVE_JAVA define.
This implements a way to explicitely disable scripting support for all supported languages with ``without-java` (or the respective options for Perl, PHP and Python)
While we're at it, make the detection a bit more verbose, and do some cleanup.","Currently, when configure is called with --with-java or --with-java=, auto-detection is performed. When called with --without-java, HAVE_JAVA is still being defined. This is unfortunate when cross-compiling for embedded systems, we would end up with Java on the host being auto-detected (which is not what we have on the target), or with a wrong HAVE_JAVA define.
This implements a way to explicitely disable scripting support for all supported languages with ``without-java` (or the respective options for Perl, PHP and Python)
While we're at it, make the detection a bit more verbose, and do some cleanup.",True,{}
apple/cups,https://github.com/apple/cups,5122,2017-09-25T15:17:41Z,2017-10-12T14:44:12Z,2017-10-12T14:44:12Z,CLOSED,False,33,11,1,https://github.com/rohieb,configure: improve interpreter detection,3,['priority-low'],https://github.com/apple/cups/pull/5122,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5122#issuecomment-332236917,"Currently, when configure is called with --with-java or --with-java=, auto-detection is performed. When called with --without-java, HAVE_JAVA is still being defined. This is unfortunate when cross-compiling for embedded systems, we would end up with Java on the host being auto-detected (which is not what we have on the target), or with a wrong HAVE_JAVA define.
This implements a way to explicitely disable scripting support for all supported languages with ``without-java` (or the respective options for Perl, PHP and Python)
While we're at it, make the detection a bit more verbose, and do some cleanup.","Ultimately I think I want to eliminate all of the third-party scripting support - only Java ""needs"" special handing as the others support the #! interpreter mechanism...",True,{}
apple/cups,https://github.com/apple/cups,5122,2017-09-25T15:17:41Z,2017-10-12T14:44:12Z,2017-10-12T14:44:12Z,CLOSED,False,33,11,1,https://github.com/rohieb,configure: improve interpreter detection,3,['priority-low'],https://github.com/apple/cups/pull/5122,https://github.com/rohieb,3,https://github.com/apple/cups/pull/5122#issuecomment-332508113,"Currently, when configure is called with --with-java or --with-java=, auto-detection is performed. When called with --without-java, HAVE_JAVA is still being defined. This is unfortunate when cross-compiling for embedded systems, we would end up with Java on the host being auto-detected (which is not what we have on the target), or with a wrong HAVE_JAVA define.
This implements a way to explicitely disable scripting support for all supported languages with ``without-java` (or the respective options for Perl, PHP and Python)
While we're at it, make the detection a bit more verbose, and do some cleanup.","Ah ok, yes, that seems reasonable. Feel free to only pick the Java part from this PR.",True,{}
apple/cups,https://github.com/apple/cups,5122,2017-09-25T15:17:41Z,2017-10-12T14:44:12Z,2017-10-12T14:44:12Z,CLOSED,False,33,11,1,https://github.com/rohieb,configure: improve interpreter detection,3,['priority-low'],https://github.com/apple/cups/pull/5122,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5122#issuecomment-336159438,"Currently, when configure is called with --with-java or --with-java=, auto-detection is performed. When called with --without-java, HAVE_JAVA is still being defined. This is unfortunate when cross-compiling for embedded systems, we would end up with Java on the host being auto-detected (which is not what we have on the target), or with a wrong HAVE_JAVA define.
This implements a way to explicitely disable scripting support for all supported languages with ``without-java` (or the respective options for Perl, PHP and Python)
While we're at it, make the detection a bit more verbose, and do some cleanup.","I pushed a slightly different change:
[master b889560] Fixed the script interpreter detection in the configure script (Issue #5122)",True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5123,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?","Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?",True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5123#issuecomment-332234694,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?",We should do something; reviewing...,True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/jsmeix,3,https://github.com/apple/cups/pull/5123#issuecomment-332468053,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?","Please, be very careful before you let a backend
exit with non-zero exit status because that can
by default disable the whole print queue.
In particular when a printer is disconnected or powered off
it may re-appear after a short time because when a print job
does not print out as expected the usual user bahaviour is
to disconnect or power off the printer (regardless what one
may tell users what ""the right way"" would be in such cases)
users will first and foremost disconnect or power off the printer
in case of any issue.
In the past there were tons of annoyed user complaints
about CUPS because of the default backend behaviour
to exit too early in case of issues that look like a final error
but were actually only temporary issues, e.g. issue like
https://bugzilla.opensuse.org/show_bug.cgi?id=337665
https://bugzilla.opensuse.org/show_bug.cgi?id=338605
and
https://bugzilla.opensuse.org/show_bug.cgi?id=337794
Those tons of annoyed user complaints even lead to
special workarounds like the 'beh' backend error handler
which cause (as any workaround) its own special problems
(e.g. the 'hp' backend from HPLIP did not work with 'beh').
Because a printer may re-appear after a short time
after it was disconnected or powered off, a backend
should wait a reasonable long time (better a bit longer
than a bit too short) for the printer to-re-appear and
if the printer re-appears then ""do the right thing"" which
is not so easy:
I think when a printer gets ""lost"" while the backend runs
but the backend did not yet send a single byte of data
to the printer then the backend can wait a very long time
for the printer to re-appear and if it re-appears the
backend can re-start its communication with the printer.
If the printer does not re-appear after a long timeout time
I think this is still no sufficient reason to disable the queue.
Perhaps the user has a laptop and moved into another
network and comes back three days later (e.g. on Monday
after the weekend). Then his queue should not have been
disabled. But I think the user is then probably no longer
interested in his old print job from three days ago so that
the old job does not need to be reprinted.
I think when a printer gets ""lost"" while the backend is
already sending data to it and later it re-appears (while
the same backend process is waiting for the printer
to re-appear), there is in general no way how to
correctly resume such an interrupted print job.
Accordingly I think the backend should exit with
something like CUPS_BACKEND_HOLD or
CUPS_BACKEND_CANCEL or
CUPS_BACKEND_RETRY[_CURRENT].
I think when a printer gets ""lost"" while the backend
is sending data to it and it does not re-appears during
the timeout time while the same backend process is
waiting for the printer to re-appear, the backend must
not exit with CUPS_BACKEND_STOP or
CUPS_BACKEND_FAILED because I think this is
not a sufficient reason to stop the whole print queue.
I think in this case CUPS_BACKEND_CANCEL
is the only right one because when a printer got ""lost""
for a long time it means the user intended that
""the job was canceled at the printer""
(cf. ""man 7 backend"").
Cf. what I had written a loger time ago when backends
exit too early in case of temporary issues in
https://bugzilla.opensuse.org/show_bug.cgi?id=337794#c16
therein in particular what I had written at that time that the
""backends should be more robust against possibly transient errors""
(where some details are nowadays probably somewhat outdated).",True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/zdohnal,4,https://github.com/apple/cups/pull/5123#issuecomment-334173859,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?","@jsmeix  Ok, I'll change the patch to reflect your advices - if ENOTCONN or ETIMEDOUT came, socket backend will return CUPS_BACKEND_CANCEL. Is it acceptable?",True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5123#issuecomment-334326816,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?",The correct behavior will be to retry the connection unless the job was submitted to a class or the job has been canceled. Neither error is fatal.,True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/zdohnal,6,https://github.com/apple/cups/pull/5123#issuecomment-334454919,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?","Truth is we are writing new failover backend, which I want to show you or Till because of possible adding to your project when backend will be complete. This failover backend works in similar way like classes, but user can prioritize queues, which influences to which queues job arrives first. For implementing this behavior, I need socket backend to end and send info to failover backend about success/failure, so other queue can be tried.
If I understand correctly, there are two advices:

do not use CUPS_BACKEND_FAILED
backend needs to retry connection
So there is suggestion - would it be acceptable that when errno will be ETIMEDOUT or ENOTCONN, socket backend will retry the connection until contimeout expires and returns CUPS_BACKEND_CANCEL or new error code CUPS_BACKEND_TIMEDOUT (used only for this)?

Something like this:
if (error == ECONNREFUSED || error == EHOSTDOWN ||
error == EHOSTUNREACH || error == ENOTCONN || error == ETIMEDOUT)
{
if (contimeout && (time(NULL) - start_time) > contimeout)
{
_cupsLangPrintFilter(stderr, ""ERROR"",
_(""The printer is not responding.""));
if (error == ENOTCONN || error == ETIMEDOUT)
return (CUPS_BACKEND_CANCEL);
else
return (CUPS_BACKEND_FAILED);
}",True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5123#issuecomment-334467909,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?","No, we don't want to add more exit codes or change behavior here. Nor will we incorporate yet another backend to implement different prioritization or queues, etc.
The long-term goal of the CUPS project is to eliminate PPD files and printer drivers, and only use IPP to communicate with printers and servers. Ultimately that will result in a vast simplification of the server code which will allow us to offer things like prioritized queues without worrying that some printer driver or backend will break things.",True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/zdohnal,8,https://github.com/apple/cups/pull/5123#issuecomment-334472731,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?","Ok, thank you for answer. Closing this pull request.",True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/michaelrsweet,9,https://github.com/apple/cups/pull/5123#issuecomment-334561979,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?","I actually pushed the following change for this:

[master 4cf66fe] The network backends now retry on more error conditions (Issue #5123)

Basically I added ETIMEDOUT and ENOTCONN to the list of networking errors we potentially retry.",True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/zdohnal,10,https://github.com/apple/cups/pull/5123#issuecomment-334665100,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?",Thank you Mike :) . But I am not able to see the commit you mentioned. Is it some error in git?,True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/michaelrsweet,11,https://github.com/apple/cups/pull/5123#issuecomment-334722198,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?","Sorry, push must have failed yesterday. Pushed now...",True,{}
apple/cups,https://github.com/apple/cups,5123,2017-09-26T14:01:18Z,2017-10-05T13:57:02Z,2017-10-06T11:03:00Z,CLOSED,False,12,1,1,https://github.com/zdohnal,socket backend doesn't fail when printer is disconnected,1,['priority-low'],https://github.com/apple/cups/pull/5123,https://github.com/zdohnal,12,https://github.com/apple/cups/pull/5123#issuecomment-334724753,"Hi Mike,
we ran several test and found out that socket backend doesn't return failure if printer is disconnected or powered off. httpAddrConnect() function returns ETIMEDOUT or ENOTCONN in these cases and code doesn't catch them. Created patch catches them and returns failure.
Is it acceptable behavior for socket backend?","No problem, thank you Mike.",True,{}
apple/cups,https://github.com/apple/cups,5134,2017-10-02T13:03:20Z,2017-10-12T14:23:45Z,2017-10-12T14:23:45Z,MERGED,True,1186,0,71,https://github.com/LAfricain,Creation of template/fr and French translation of all the template files,2,['priority-low'],https://github.com/apple/cups/pull/5134,https://github.com/LAfricain,1,https://github.com/apple/cups/pull/5134,"Cups 2 wasn't translated to French, Now it's done.","Cups 2 wasn't translated to French, Now it's done.",True,{}
apple/cups,https://github.com/apple/cups,5136,2017-10-04T11:45:42Z,2017-10-05T00:35:13Z,2017-10-05T13:54:04Z,CLOSED,False,15,10,5,https://github.com/zdohnal,Proposed patch for issue #5135,1,[],https://github.com/apple/cups/pull/5136,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5136,More info in issue #5135,More info in issue #5135,True,{}
apple/cups,https://github.com/apple/cups,5136,2017-10-04T11:45:42Z,2017-10-05T00:35:13Z,2017-10-05T13:54:04Z,CLOSED,False,15,10,5,https://github.com/zdohnal,Proposed patch for issue #5135,1,[],https://github.com/apple/cups/pull/5136,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5136#issuecomment-334170934,More info in issue #5135,"Only other thing to do is create something like cupsEnumDests2(), which is used for non default http connection - but it will need to extract code from cupsEnumDests(), where http needs to be used and then call cupsEnumDests(), but I do not see any simple way how to do it. For now I use duplicate of cupsEnumDests, which uses http.",True,{}
apple/cups,https://github.com/apple/cups,5136,2017-10-04T11:45:42Z,2017-10-05T00:35:13Z,2017-10-05T13:54:04Z,CLOSED,False,15,10,5,https://github.com/zdohnal,Proposed patch for issue #5135,1,[],https://github.com/apple/cups/pull/5136,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5136#issuecomment-334327401,More info in issue #5135,"We won't change public API in a way that breaks source or binary compatibility, and we have no plans of updating cupsEnumDests to take a http_t pointer argument since the use of remote CUPS servers has been deprecated for a long time due to incompatibilities with sandboxing on macOS and the various security features on the different Linux distros.",True,{}
apple/cups,https://github.com/apple/cups,5136,2017-10-04T11:45:42Z,2017-10-05T00:35:13Z,2017-10-05T13:54:04Z,CLOSED,False,15,10,5,https://github.com/zdohnal,Proposed patch for issue #5135,1,[],https://github.com/apple/cups/pull/5136,https://github.com/zdohnal,4,https://github.com/apple/cups/pull/5136#issuecomment-334431909,More info in issue #5135,"If I create the patch without breaking public API, would it be acceptable?",True,{}
apple/cups,https://github.com/apple/cups,5136,2017-10-04T11:45:42Z,2017-10-05T00:35:13Z,2017-10-05T13:54:04Z,CLOSED,False,15,10,5,https://github.com/zdohnal,Proposed patch for issue #5135,1,[],https://github.com/apple/cups/pull/5136,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5136#issuecomment-334466019,More info in issue #5135,We will come up with a patch shortly. Please be patient.,True,{}
apple/cups,https://github.com/apple/cups,5136,2017-10-04T11:45:42Z,2017-10-05T00:35:13Z,2017-10-05T13:54:04Z,CLOSED,False,15,10,5,https://github.com/zdohnal,Proposed patch for issue #5135,1,[],https://github.com/apple/cups/pull/5136,https://github.com/zdohnal,6,https://github.com/apple/cups/pull/5136#issuecomment-334471829,More info in issue #5135,"I am sorry, I didn't want to sound impatient, I just wanted to help you with solution (I have patch without breaking public API now, I can create pull request anytime). To sum it up, I apologize.",True,{}
apple/cups,https://github.com/apple/cups,5139,2017-10-12T19:53:55Z,2017-10-12T23:39:23Z,2017-10-12T23:39:37Z,MERGED,True,12,12,1,https://github.com/kant,Minor fixes (proposals),1,['enhancement'],https://github.com/apple/cups/pull/5139,https://github.com/kant,1,https://github.com/apple/cups/pull/5139,,,True,{}
apple/cups,https://github.com/apple/cups,5139,2017-10-12T19:53:55Z,2017-10-12T23:39:23Z,2017-10-12T23:39:37Z,MERGED,True,12,12,1,https://github.com/kant,Minor fixes (proposals),1,['enhancement'],https://github.com/apple/cups/pull/5139,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5139#issuecomment-336310450,,Thanks!,True,{}
apple/cups,https://github.com/apple/cups,5146,2017-10-16T22:46:15Z,2017-10-19T14:52:59Z,2017-10-19T14:53:00Z,MERGED,True,7,9,1,https://github.com/DavieV,Remove unnecessary nesting in if statements.,1,['priority-low'],https://github.com/apple/cups/pull/5146,https://github.com/DavieV,1,https://github.com/apple/cups/pull/5146,Found some if statements which are nested unnecessarily.,Found some if statements which are nested unnecessarily.,True,{}
apple/cups,https://github.com/apple/cups,5147,2017-10-17T16:10:47Z,2017-10-17T19:51:41Z,2017-10-17T19:51:41Z,CLOSED,False,44,21,1,https://github.com/zdohnal, dnssd-discovered (by avahi) device URIs not usable,1,[],https://github.com/apple/cups/pull/5147,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5147,"Hi Mike,
I was checking old patches we have and I've found this one - apparently dnssd devices discovered by avahi doesn't work, because current code uses addresses from list returned from httpAddrGetList(), not address from Avahi.
Patch was created by Tim Waugh in the past and there is bug report from the past https://bugzilla.redhat.com/show_bug.cgi?id=948288 . Code in these parts of http-support.c hasn't changed since 2012, report was created in 2013, I think the issue is there still.","Hi Mike,
I was checking old patches we have and I've found this one - apparently dnssd devices discovered by avahi doesn't work, because current code uses addresses from list returned from httpAddrGetList(), not address from Avahi.
Patch was created by Tim Waugh in the past and there is bug report from the past https://bugzilla.redhat.com/show_bug.cgi?id=948288 . Code in these parts of http-support.c hasn't changed since 2012, report was created in 2013, I think the issue is there still.",True,{}
apple/cups,https://github.com/apple/cups,5147,2017-10-17T16:10:47Z,2017-10-17T19:51:41Z,2017-10-17T19:51:41Z,CLOSED,False,44,21,1,https://github.com/zdohnal, dnssd-discovered (by avahi) device URIs not usable,1,[],https://github.com/apple/cups/pull/5147,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5147#issuecomment-337350025,"Hi Mike,
I was checking old patches we have and I've found this one - apparently dnssd devices discovered by avahi doesn't work, because current code uses addresses from list returned from httpAddrGetList(), not address from Avahi.
Patch was created by Tim Waugh in the past and there is bug report from the past https://bugzilla.redhat.com/show_bug.cgi?id=948288 . Code in these parts of http-support.c hasn't changed since 2012, report was created in 2013, I think the issue is there still.","Ok, if we can’t resolve a .local host name, that would be a serious distribution or avahi bug. Certainly on Ubuntu the resolution of .local names via getnameinfo works, and you MUST support multiple addresses for mDNS or face serious interop issues (which is why httpAddrConnect tries connections to all of the resolved addresses)
This isn’t the correct fix.",True,{}
apple/cups,https://github.com/apple/cups,5148,2017-10-17T16:32:11Z,2017-10-19T14:49:49Z,2017-10-19T14:49:49Z,MERGED,True,6,0,1,https://github.com/zdohnal,add usb quirks for canon mp540 and Samsung ML-2160 Series,1,['priority-low'],https://github.com/apple/cups/pull/5148,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5148,"Hi Mike,
Canon MP540 and Samsung ML-2160 Series printers were unable to print fine, when they were connected by usb. Adding these usb quirks solved issues. Would you mind merging it into CUPS project?","Hi Mike,
Canon MP540 and Samsung ML-2160 Series printers were unable to print fine, when they were connected by usb. Adding these usb quirks solved issues. Would you mind merging it into CUPS project?",True,{}
apple/cups,https://github.com/apple/cups,5149,2017-10-19T22:58:17Z,2017-10-20T02:57:53Z,2017-10-20T02:57:53Z,CLOSED,False,56,62,7,https://github.com/hardfalcon,Clean up implementation for SSLOptions,2,[],https://github.com/apple/cups/pull/5149,https://github.com/hardfalcon,1,https://github.com/apple/cups/pull/5149,"This cleans up the implementation for the SSLOptions configuration directive:

Fixed the logic for DenyCBC on Linux and other gnutls platforms.
Fixed the logic for _httpTLSSetOptions() in cups/usersys.c to prevent unsolicited overwriting of the SSLOptions read from cupsd.conf.
The options / tls_options variables got changed into unsigned integers since we are using them as bit maps and not as ""normal"" numbers.
The _HTTP_TLS_* constants got shifted by one bit to accomodate the new constant _HTTP_TLS_UNCHANGED, which means that the values changed for all of these constants. This is needed so we can distinguish between ""explicitly use the default settings"" and ""don't change/overwrite the existing configuration"".
In some places, numerical values were replaced with the corresponding _HTTP_TLS_* constants.
Added explicit warnings about the AllowDH, AllowRC4 and AllowSSL3 parameters to the manual.","This cleans up the implementation for the SSLOptions configuration directive:

Fixed the logic for DenyCBC on Linux and other gnutls platforms.
Fixed the logic for _httpTLSSetOptions() in cups/usersys.c to prevent unsolicited overwriting of the SSLOptions read from cupsd.conf.
The options / tls_options variables got changed into unsigned integers since we are using them as bit maps and not as ""normal"" numbers.
The _HTTP_TLS_* constants got shifted by one bit to accomodate the new constant _HTTP_TLS_UNCHANGED, which means that the values changed for all of these constants. This is needed so we can distinguish between ""explicitly use the default settings"" and ""don't change/overwrite the existing configuration"".
In some places, numerical values were replaced with the corresponding _HTTP_TLS_* constants.
Added explicit warnings about the AllowDH, AllowRC4 and AllowSSL3 parameters to the manual.",True,{}
apple/cups,https://github.com/apple/cups,5149,2017-10-19T22:58:17Z,2017-10-20T02:57:53Z,2017-10-20T02:57:53Z,CLOSED,False,56,62,7,https://github.com/hardfalcon,Clean up implementation for SSLOptions,2,[],https://github.com/apple/cups/pull/5149,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5149#issuecomment-338069964,"This cleans up the implementation for the SSLOptions configuration directive:

Fixed the logic for DenyCBC on Linux and other gnutls platforms.
Fixed the logic for _httpTLSSetOptions() in cups/usersys.c to prevent unsolicited overwriting of the SSLOptions read from cupsd.conf.
The options / tls_options variables got changed into unsigned integers since we are using them as bit maps and not as ""normal"" numbers.
The _HTTP_TLS_* constants got shifted by one bit to accomodate the new constant _HTTP_TLS_UNCHANGED, which means that the values changed for all of these constants. This is needed so we can distinguish between ""explicitly use the default settings"" and ""don't change/overwrite the existing configuration"".
In some places, numerical values were replaced with the corresponding _HTTP_TLS_* constants.
Added explicit warnings about the AllowDH, AllowRC4 and AllowSSL3 parameters to the manual.","OK, so we can't take this pull request as-is, particularly the wording changes for the Allow* value documentation.",True,{}
apple/cups,https://github.com/apple/cups,5149,2017-10-19T22:58:17Z,2017-10-20T02:57:53Z,2017-10-20T02:57:53Z,CLOSED,False,56,62,7,https://github.com/hardfalcon,Clean up implementation for SSLOptions,2,[],https://github.com/apple/cups/pull/5149,https://github.com/hardfalcon,3,https://github.com/apple/cups/pull/5149#issuecomment-338073499,"This cleans up the implementation for the SSLOptions configuration directive:

Fixed the logic for DenyCBC on Linux and other gnutls platforms.
Fixed the logic for _httpTLSSetOptions() in cups/usersys.c to prevent unsolicited overwriting of the SSLOptions read from cupsd.conf.
The options / tls_options variables got changed into unsigned integers since we are using them as bit maps and not as ""normal"" numbers.
The _HTTP_TLS_* constants got shifted by one bit to accomodate the new constant _HTTP_TLS_UNCHANGED, which means that the values changed for all of these constants. This is needed so we can distinguish between ""explicitly use the default settings"" and ""don't change/overwrite the existing configuration"".
In some places, numerical values were replaced with the corresponding _HTTP_TLS_* constants.
Added explicit warnings about the AllowDH, AllowRC4 and AllowSSL3 parameters to the manual.","Any proposition for a better wording? Especially the AllowDH parameter is really dangerous, since it effectively enables MITM attacks without any computational cost. The ANON-DH ciphersuites it enables in gnutls correspond to the DH subset of the aNULL ciphersuites in OpenSSL - which means they do not offer any authentication whatsoever.
I'm still wondering how ANON-DH could make it into CUPS at all - even if there were printers which required such broken ciphersuites, it would still be better to access them via plain HTTP/IPP instead of globally forcing the whole CUPS server to offer these ciphersuites.",True,{}
apple/cups,https://github.com/apple/cups,5149,2017-10-19T22:58:17Z,2017-10-20T02:57:53Z,2017-10-20T02:57:53Z,CLOSED,False,56,62,7,https://github.com/hardfalcon,Clean up implementation for SSLOptions,2,[],https://github.com/apple/cups/pull/5149,https://github.com/hardfalcon,4,https://github.com/apple/cups/pull/5149#issuecomment-338076747,"This cleans up the implementation for the SSLOptions configuration directive:

Fixed the logic for DenyCBC on Linux and other gnutls platforms.
Fixed the logic for _httpTLSSetOptions() in cups/usersys.c to prevent unsolicited overwriting of the SSLOptions read from cupsd.conf.
The options / tls_options variables got changed into unsigned integers since we are using them as bit maps and not as ""normal"" numbers.
The _HTTP_TLS_* constants got shifted by one bit to accomodate the new constant _HTTP_TLS_UNCHANGED, which means that the values changed for all of these constants. This is needed so we can distinguish between ""explicitly use the default settings"" and ""don't change/overwrite the existing configuration"".
In some places, numerical values were replaced with the corresponding _HTTP_TLS_* constants.
Added explicit warnings about the AllowDH, AllowRC4 and AllowSSL3 parameters to the manual.","I've just cross-checked with cups/tls-darwin.c - on macOS, all anonymous ciphersuites are explicitly disabled with even a remark in the code that they should never be enabled because they're insecure.
It seems that gnutls simply doesn't support/implement static DH key exchanges at all, so it's simply impossible to implement the AllowDH parameter on gnutls platforms. I'd propose changing it into a no-op and updating the manual accordingly.",True,{}
apple/cups,https://github.com/apple/cups,5149,2017-10-19T22:58:17Z,2017-10-20T02:57:53Z,2017-10-20T02:57:53Z,CLOSED,False,56,62,7,https://github.com/hardfalcon,Clean up implementation for SSLOptions,2,[],https://github.com/apple/cups/pull/5149,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5149#issuecomment-338078654,"This cleans up the implementation for the SSLOptions configuration directive:

Fixed the logic for DenyCBC on Linux and other gnutls platforms.
Fixed the logic for _httpTLSSetOptions() in cups/usersys.c to prevent unsolicited overwriting of the SSLOptions read from cupsd.conf.
The options / tls_options variables got changed into unsigned integers since we are using them as bit maps and not as ""normal"" numbers.
The _HTTP_TLS_* constants got shifted by one bit to accomodate the new constant _HTTP_TLS_UNCHANGED, which means that the values changed for all of these constants. This is needed so we can distinguish between ""explicitly use the default settings"" and ""don't change/overwrite the existing configuration"".
In some places, numerical values were replaced with the corresponding _HTTP_TLS_* constants.
Added explicit warnings about the AllowDH, AllowRC4 and AllowSSL3 parameters to the manual.","The wording we have is neutral about the security implications of the Allow* options because a) they are disabled by default for a reason, which a simple Google search will show, and b) typically if you have to use an Allow* option it is because you have no other choice. Calling things horrible or insecure is unnecessary.
As for the AllowDH option, if indeed GNU TLS no longer implements any DH cipher suites except for the NULL ones, then we should probably not support it there. Additionally I'll make sure we unconditionally exclude all NULL suites.",True,{}
apple/cups,https://github.com/apple/cups,5149,2017-10-19T22:58:17Z,2017-10-20T02:57:53Z,2017-10-20T02:57:53Z,CLOSED,False,56,62,7,https://github.com/hardfalcon,Clean up implementation for SSLOptions,2,[],https://github.com/apple/cups/pull/5149,https://github.com/hardfalcon,6,https://github.com/apple/cups/pull/5149#issuecomment-338081140,"This cleans up the implementation for the SSLOptions configuration directive:

Fixed the logic for DenyCBC on Linux and other gnutls platforms.
Fixed the logic for _httpTLSSetOptions() in cups/usersys.c to prevent unsolicited overwriting of the SSLOptions read from cupsd.conf.
The options / tls_options variables got changed into unsigned integers since we are using them as bit maps and not as ""normal"" numbers.
The _HTTP_TLS_* constants got shifted by one bit to accomodate the new constant _HTTP_TLS_UNCHANGED, which means that the values changed for all of these constants. This is needed so we can distinguish between ""explicitly use the default settings"" and ""don't change/overwrite the existing configuration"".
In some places, numerical values were replaced with the corresponding _HTTP_TLS_* constants.
Added explicit warnings about the AllowDH, AllowRC4 and AllowSSL3 parameters to the manual.","Wording: I'd prefer to explicitly warn users about insecure options, but it's your project, so your call, your rules. I've updated the PR accordingly.
AllowDH: I've turned AllowDH into a no-op on gnutls and updated the manual accordingly.
I've also added notes about the platforms on which the specific SSLOptions are supported.",True,{}
apple/cups,https://github.com/apple/cups,5149,2017-10-19T22:58:17Z,2017-10-20T02:57:53Z,2017-10-20T02:57:53Z,CLOSED,False,56,62,7,https://github.com/hardfalcon,Clean up implementation for SSLOptions,2,[],https://github.com/apple/cups/pull/5149,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5149#issuecomment-338092641,"This cleans up the implementation for the SSLOptions configuration directive:

Fixed the logic for DenyCBC on Linux and other gnutls platforms.
Fixed the logic for _httpTLSSetOptions() in cups/usersys.c to prevent unsolicited overwriting of the SSLOptions read from cupsd.conf.
The options / tls_options variables got changed into unsigned integers since we are using them as bit maps and not as ""normal"" numbers.
The _HTTP_TLS_* constants got shifted by one bit to accomodate the new constant _HTTP_TLS_UNCHANGED, which means that the values changed for all of these constants. This is needed so we can distinguish between ""explicitly use the default settings"" and ""don't change/overwrite the existing configuration"".
In some places, numerical values were replaced with the corresponding _HTTP_TLS_* constants.
Added explicit warnings about the AllowDH, AllowRC4 and AllowSSL3 parameters to the manual.",[master 02c88e6] Fix cipher suite selection with GNU TLS (Issue #5145),True,{}
apple/cups,https://github.com/apple/cups,5150,2017-10-22T21:38:20Z,2017-10-23T20:07:45Z,2017-10-23T20:07:46Z,MERGED,True,5,3,1,https://github.com/hardfalcon, Fix AllowRC4 and AllowSSL3 on GnuTLS platforms ,7,['priority-high'],https://github.com/apple/cups/pull/5150,https://github.com/hardfalcon,1,https://github.com/apple/cups/pull/5150,"Commit  02c88e6 fixed some of the issues on GnuTLS platforms, but AllowRC4 and AllowSSL3 are still not working (at least not on Archlinux with GnuTLS 3.5.15). This PR fixes those as well.","Commit  02c88e6 fixed some of the issues on GnuTLS platforms, but AllowRC4 and AllowSSL3 are still not working (at least not on Archlinux with GnuTLS 3.5.15). This PR fixes those as well.",True,{}
apple/cups,https://github.com/apple/cups,5152,2017-10-25T13:27:38Z,2017-10-25T14:04:42Z,2017-10-25T20:49:25Z,MERGED,True,3,3,1,https://github.com/michaelweghorn,Add missing space in German localization,1,['priority-low'],https://github.com/apple/cups/pull/5152,https://github.com/michaelweghorn,1,https://github.com/apple/cups/pull/5152,This adds a missing space character in the German translation.,This adds a missing space character in the German translation.,True,{}
apple/cups,https://github.com/apple/cups,5153,2017-10-25T15:04:38Z,2019-05-15T20:41:59Z,2019-05-15T20:42:16Z,CLOSED,False,23,10,1,https://github.com/zdohnal,snmp page counting is unreliable - give way to disable it in PPD file,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5153,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5153,"Hi Mike,
our customer found out that snmp page counting is unreliable for some printers (printers seems to send end of printing before life counter in printer snmp agent got updated - this behavior resulted in bad page count in cups web ui), so we implemented the way to turn off page counting by snmp. User simply add ""cupsSNMPPages: False"" into printer ppd file and cups then uses counting by 'PAGE X 1' messages.
I understand CUPS project is on its way to drop .ppd functionality, but IMHO it is good to offer opportunity for these, which still uses ppd files and they complain about snmp page counting, until better solution is implemented.","Hi Mike,
our customer found out that snmp page counting is unreliable for some printers (printers seems to send end of printing before life counter in printer snmp agent got updated - this behavior resulted in bad page count in cups web ui), so we implemented the way to turn off page counting by snmp. User simply add ""cupsSNMPPages: False"" into printer ppd file and cups then uses counting by 'PAGE X 1' messages.
I understand CUPS project is on its way to drop .ppd functionality, but IMHO it is good to offer opportunity for these, which still uses ppd files and they complain about snmp page counting, until better solution is implemented.",True,{}
apple/cups,https://github.com/apple/cups,5153,2017-10-25T15:04:38Z,2019-05-15T20:41:59Z,2019-05-15T20:42:16Z,CLOSED,False,23,10,1,https://github.com/zdohnal,snmp page counting is unreliable - give way to disable it in PPD file,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5153,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5153#issuecomment-339408888,"Hi Mike,
our customer found out that snmp page counting is unreliable for some printers (printers seems to send end of printing before life counter in printer snmp agent got updated - this behavior resulted in bad page count in cups web ui), so we implemented the way to turn off page counting by snmp. User simply add ""cupsSNMPPages: False"" into printer ppd file and cups then uses counting by 'PAGE X 1' messages.
I understand CUPS project is on its way to drop .ppd functionality, but IMHO it is good to offer opportunity for these, which still uses ppd files and they complain about snmp page counting, until better solution is implemented.","@zdohnal How is this different from the *cupsSNMPSupplies keyword that does the same thing (plus supply level information)?
I really don't want to add yet another switch for controlling a legacy protocol.",True,{}
apple/cups,https://github.com/apple/cups,5153,2017-10-25T15:04:38Z,2019-05-15T20:41:59Z,2019-05-15T20:42:16Z,CLOSED,False,23,10,1,https://github.com/zdohnal,snmp page counting is unreliable - give way to disable it in PPD file,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5153,https://github.com/zdohnal,3,https://github.com/apple/cups/pull/5153#issuecomment-339557276,"Hi Mike,
our customer found out that snmp page counting is unreliable for some printers (printers seems to send end of printing before life counter in printer snmp agent got updated - this behavior resulted in bad page count in cups web ui), so we implemented the way to turn off page counting by snmp. User simply add ""cupsSNMPPages: False"" into printer ppd file and cups then uses counting by 'PAGE X 1' messages.
I understand CUPS project is on its way to drop .ppd functionality, but IMHO it is good to offer opportunity for these, which still uses ppd files and they complain about snmp page counting, until better solution is implemented.",It only switches off SNMP page counting - supply level info is still shipped by SNMP.,True,{}
apple/cups,https://github.com/apple/cups,5153,2017-10-25T15:04:38Z,2019-05-15T20:41:59Z,2019-05-15T20:42:16Z,CLOSED,False,23,10,1,https://github.com/zdohnal,snmp page counting is unreliable - give way to disable it in PPD file,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5153,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5153#issuecomment-340493811,"Hi Mike,
our customer found out that snmp page counting is unreliable for some printers (printers seems to send end of printing before life counter in printer snmp agent got updated - this behavior resulted in bad page count in cups web ui), so we implemented the way to turn off page counting by snmp. User simply add ""cupsSNMPPages: False"" into printer ppd file and cups then uses counting by 'PAGE X 1' messages.
I understand CUPS project is on its way to drop .ppd functionality, but IMHO it is good to offer opportunity for these, which still uses ppd files and they complain about snmp page counting, until better solution is implemented.","Still not convinced, but will hold this possibly for a future release.",True,{}
apple/cups,https://github.com/apple/cups,5153,2017-10-25T15:04:38Z,2019-05-15T20:41:59Z,2019-05-15T20:42:16Z,CLOSED,False,23,10,1,https://github.com/zdohnal,snmp page counting is unreliable - give way to disable it in PPD file,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5153,https://github.com/zdohnal,5,https://github.com/apple/cups/pull/5153#issuecomment-340701369,"Hi Mike,
our customer found out that snmp page counting is unreliable for some printers (printers seems to send end of printing before life counter in printer snmp agent got updated - this behavior resulted in bad page count in cups web ui), so we implemented the way to turn off page counting by snmp. User simply add ""cupsSNMPPages: False"" into printer ppd file and cups then uses counting by 'PAGE X 1' messages.
I understand CUPS project is on its way to drop .ppd functionality, but IMHO it is good to offer opportunity for these, which still uses ppd files and they complain about snmp page counting, until better solution is implemented.","I can possibly rewrite it into similar way as cupsSNMPSupplies are applied - like command line option, if it helps. But it didn't look like as such serious issue with high impact to have extra command line option - but sure, it will look better if it can be set by command line. Is it acceptable?",True,{}
apple/cups,https://github.com/apple/cups,5153,2017-10-25T15:04:38Z,2019-05-15T20:41:59Z,2019-05-15T20:42:16Z,CLOSED,False,23,10,1,https://github.com/zdohnal,snmp page counting is unreliable - give way to disable it in PPD file,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5153,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5153#issuecomment-343197296,"Hi Mike,
our customer found out that snmp page counting is unreliable for some printers (printers seems to send end of printing before life counter in printer snmp agent got updated - this behavior resulted in bad page count in cups web ui), so we implemented the way to turn off page counting by snmp. User simply add ""cupsSNMPPages: False"" into printer ppd file and cups then uses counting by 'PAGE X 1' messages.
I understand CUPS project is on its way to drop .ppd functionality, but IMHO it is good to offer opportunity for these, which still uses ppd files and they complain about snmp page counting, until better solution is implemented.","OK, the changes for issue #4991 should mitigate the issues associated with lowball accounting numbers - we now use MAX(printer-page-count,filter-page-count) when reporting the number of pages that were printed.",True,{}
apple/cups,https://github.com/apple/cups,5153,2017-10-25T15:04:38Z,2019-05-15T20:41:59Z,2019-05-15T20:42:16Z,CLOSED,False,23,10,1,https://github.com/zdohnal,snmp page counting is unreliable - give way to disable it in PPD file,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5153,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5153#issuecomment-492815827,"Hi Mike,
our customer found out that snmp page counting is unreliable for some printers (printers seems to send end of printing before life counter in printer snmp agent got updated - this behavior resulted in bad page count in cups web ui), so we implemented the way to turn off page counting by snmp. User simply add ""cupsSNMPPages: False"" into printer ppd file and cups then uses counting by 'PAGE X 1' messages.
I understand CUPS project is on its way to drop .ppd functionality, but IMHO it is good to offer opportunity for these, which still uses ppd files and they complain about snmp page counting, until better solution is implemented.","OK, I'm punting on this pull request since our future focus will be on modern protocols...",True,{}
apple/cups,https://github.com/apple/cups,5155,2017-10-26T05:32:24Z,2017-10-30T16:04:07Z,2017-10-30T16:04:07Z,MERGED,True,13,14,1,https://github.com/DavieV,Rearranging order of null checks in lpadmin,1,['priority-low'],https://github.com/apple/cups/pull/5155,https://github.com/DavieV,1,https://github.com/apple/cups/pull/5155,Rearranging the null checks in lpadmin so that the connection is opened after the printer has been checked. I think it makes more sense to fail if the printer is null before bothering to open an http connection.,Rearranging the null checks in lpadmin so that the connection is opened after the printer has been checked. I think it makes more sense to fail if the printer is null before bothering to open an http connection.,True,{}
apple/cups,https://github.com/apple/cups,5161,2017-11-06T12:28:09Z,2017-11-06T21:50:03Z,2017-11-06T21:50:03Z,MERGED,True,218,218,49,https://github.com/gpunktschmitz,added html tag LABEL to inputs of type CHECKBOX and RADIO,1,['enhancement'],https://github.com/apple/cups/pull/5161,https://github.com/gpunktschmitz,1,https://github.com/apple/cups/pull/5161,,,True,{}
apple/cups,https://github.com/apple/cups,5161,2017-11-06T12:28:09Z,2017-11-06T21:50:03Z,2017-11-06T21:50:03Z,MERGED,True,218,218,49,https://github.com/gpunktschmitz,added html tag LABEL to inputs of type CHECKBOX and RADIO,1,['enhancement'],https://github.com/apple/cups/pull/5161,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5161#issuecomment-342180626,,@gpunktschmitz Is there a specific reason for this addition?,True,{}
apple/cups,https://github.com/apple/cups,5161,2017-11-06T12:28:09Z,2017-11-06T21:50:03Z,2017-11-06T21:50:03Z,MERGED,True,218,218,49,https://github.com/gpunktschmitz,added html tag LABEL to inputs of type CHECKBOX and RADIO,1,['enhancement'],https://github.com/apple/cups/pull/5161,https://github.com/gpunktschmitz,3,https://github.com/apple/cups/pull/5161#issuecomment-342199964,,@michaelrsweet it makes the administration/web interface more convenient/easier to use.,True,{}
apple/cups,https://github.com/apple/cups,5161,2017-11-06T12:28:09Z,2017-11-06T21:50:03Z,2017-11-06T21:50:03Z,MERGED,True,218,218,49,https://github.com/gpunktschmitz,added html tag LABEL to inputs of type CHECKBOX and RADIO,1,['enhancement'],https://github.com/apple/cups/pull/5161,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5161#issuecomment-342202600,,"@gpunktschmitz How does it make the web interface more convenient/easier to use?
(doesn't look/work any different for me)",True,{}
apple/cups,https://github.com/apple/cups,5161,2017-11-06T12:28:09Z,2017-11-06T21:50:03Z,2017-11-06T21:50:03Z,MERGED,True,218,218,49,https://github.com/gpunktschmitz,added html tag LABEL to inputs of type CHECKBOX and RADIO,1,['enhancement'],https://github.com/apple/cups/pull/5161,https://github.com/gpunktschmitz,5,https://github.com/apple/cups/pull/5161#issuecomment-342203202,,@michaelrsweet you may now click on the text (label) to activate the checkbox.,True,{}
apple/cups,https://github.com/apple/cups,5161,2017-11-06T12:28:09Z,2017-11-06T21:50:03Z,2017-11-06T21:50:03Z,MERGED,True,218,218,49,https://github.com/gpunktschmitz,added html tag LABEL to inputs of type CHECKBOX and RADIO,1,['enhancement'],https://github.com/apple/cups/pull/5161,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5161#issuecomment-342206329,,"@gpunktschmitz I just tried this with Safari, Firefox, and Chrome (all up-to-date) and none of them allowed me to just click on the label text to toggle the check boxes or radio buttons.
What platform/browser are you seeing this on?",True,{}
apple/cups,https://github.com/apple/cups,5161,2017-11-06T12:28:09Z,2017-11-06T21:50:03Z,2017-11-06T21:50:03Z,MERGED,True,218,218,49,https://github.com/gpunktschmitz,added html tag LABEL to inputs of type CHECKBOX and RADIO,1,['enhancement'],https://github.com/apple/cups/pull/5161,https://github.com/gpunktschmitz,7,https://github.com/apple/cups/pull/5161#issuecomment-342208784,,@michaelrsweet I'm running Firefox/Linux Mint 18.2 - as this is basic HTML4 it should work on all browsers/plattforms. Just to double-check: when you go to the admin-page you cannot click on the the server settings text to activate the checkbox? if not - can you provide me with the source view of the admin-page?,True,{}
apple/cups,https://github.com/apple/cups,5161,2017-11-06T12:28:09Z,2017-11-06T21:50:03Z,2017-11-06T21:50:03Z,MERGED,True,218,218,49,https://github.com/gpunktschmitz,added html tag LABEL to inputs of type CHECKBOX and RADIO,1,['enhancement'],https://github.com/apple/cups/pull/5161,https://github.com/michaelrsweet,8,https://github.com/apple/cups/pull/5161#issuecomment-342210982,,"Never mind, when I copied one of the changes the ""id"" for the checkbox didn't make it over correctly. Once I had the right id attribute it started working...
Will queue this up for CUPS 2.3...",True,{}
apple/cups,https://github.com/apple/cups,5162,2017-11-06T17:17:43Z,2017-11-06T17:40:04Z,2017-11-06T17:40:04Z,MERGED,True,1,1,1,https://github.com/chemicalstorm,Fix typo in french translation,1,['priority-low'],https://github.com/apple/cups/pull/5162,https://github.com/chemicalstorm,1,https://github.com/apple/cups/pull/5162,Simple typo fix,Simple typo fix,True,{}
apple/cups,https://github.com/apple/cups,5170,2017-11-10T03:14:03Z,2017-11-27T20:53:06Z,2017-11-27T20:53:06Z,MERGED,True,1,1,1,https://github.com/reddevillg,consider loop detected to be success,1,['priority-low'],https://github.com/apple/cups/pull/5170,https://github.com/reddevillg,1,https://github.com/apple/cups/pull/5170,"if return 0, load_ppds won't continue to search other files in current directory.","if return 0, load_ppds won't continue to search other files in current directory.",True,{}
apple/cups,https://github.com/apple/cups,5175,2017-11-17T23:12:39Z,2017-11-22T22:30:06Z,2017-11-22T22:30:06Z,CLOSED,False,1,1,1,https://github.com/kschlepp,Increase size of max header length to accomodate token authentication,1,['unable-to-reproduce'],https://github.com/apple/cups/pull/5175,https://github.com/kschlepp,1,https://github.com/apple/cups/pull/5175,Some tokens are larger than the current max header value length allows for.,Some tokens are larger than the current max header value length allows for.,True,{}
apple/cups,https://github.com/apple/cups,5175,2017-11-17T23:12:39Z,2017-11-22T22:30:06Z,2017-11-22T22:30:06Z,CLOSED,False,1,1,1,https://github.com/kschlepp,Increase size of max header length to accomodate token authentication,1,['unable-to-reproduce'],https://github.com/apple/cups/pull/5175,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5175#issuecomment-345405794,Some tokens are larger than the current max header value length allows for.,"No, aside from increasing the size of the http_t structure 8-fold, this change would break binary compatibility.
What header do you need larger for authentication? We already store the Authorization header in an allocated string, and for CUPS 2.3.x and larger for WWW-Authenticate as well.",True,{}
apple/cups,https://github.com/apple/cups,5175,2017-11-17T23:12:39Z,2017-11-22T22:30:06Z,2017-11-22T22:30:06Z,CLOSED,False,1,1,1,https://github.com/kschlepp,Increase size of max header length to accomodate token authentication,1,['unable-to-reproduce'],https://github.com/apple/cups/pull/5175,https://github.com/kschlepp,3,https://github.com/apple/cups/pull/5175#issuecomment-346446298,Some tokens are larger than the current max header value length allows for.,We need to use HTTP_FIELD_AUTHENTICATION. Should we be using HTTP_FIELD_WWW_AUTHENTICATE instead?,True,{}
apple/cups,https://github.com/apple/cups,5175,2017-11-17T23:12:39Z,2017-11-22T22:30:06Z,2017-11-22T22:30:06Z,CLOSED,False,1,1,1,https://github.com/kschlepp,Increase size of max header length to accomodate token authentication,1,['unable-to-reproduce'],https://github.com/apple/cups/pull/5175,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5175#issuecomment-346467590,Some tokens are larger than the current max header value length allows for.,"HTTP_FIELD_AUTHENTICATION (Authentication: ...) is what you send from the client to the server. That one has been allocated for a very long time (since Kerberos was added) so the 256 byte value limit does not apply.
HTTP_FIELD_WWW_AUTHENTICATE (WWW-Authenticate: ...) is what you send from the server to the client in a challenge (401) response. That field was recently just changed to be allocated for the forthcoming CUPS 2.3 release.
What sort of problems are you having? Are the Authentication: headers sent via libcups getting truncated or ???",True,{}
apple/cups,https://github.com/apple/cups,5175,2017-11-17T23:12:39Z,2017-11-22T22:30:06Z,2017-11-22T22:30:06Z,CLOSED,False,1,1,1,https://github.com/kschlepp,Increase size of max header length to accomodate token authentication,1,['unable-to-reproduce'],https://github.com/apple/cups/pull/5175,https://github.com/kschlepp,5,https://github.com/apple/cups/pull/5175#issuecomment-346490305,Some tokens are larger than the current max header value length allows for.,"There is some confusion on my team about the changes we needed to make. I'm going to close this.
Sorry about that! Thanks for your help!",True,{}
apple/cups,https://github.com/apple/cups,5181,2017-11-28T20:50:33Z,2017-11-28T22:44:01Z,2017-11-28T22:47:34Z,MERGED,True,1,1,1,https://github.com/LuHee,Respect AccessLog configuration when compiled against journald.,1,['priority-medium'],https://github.com/apple/cups/pull/5181,https://github.com/LuHee,1,https://github.com/apple/cups/pull/5181,When cups is compiled against journald access log is written to journal if ErrorLog is set to syslog and the AccesLog settings is ignored.,When cups is compiled against journald access log is written to journal if ErrorLog is set to syslog and the AccesLog settings is ignored.,True,{}
apple/cups,https://github.com/apple/cups,5184,2017-12-05T09:26:38Z,2017-12-05T17:31:15Z,2017-12-05T17:31:24Z,MERGED,True,3,1,1,https://github.com/albert-astals-cid-kdab,Fix compilation,1,[],https://github.com/apple/cups/pull/5184,https://github.com/albert-astals-cid-kdab,1,https://github.com/apple/cups/pull/5184,,,True,{}
apple/cups,https://github.com/apple/cups,5195,2017-12-16T00:24:31Z,2018-01-10T02:18:55Z,2018-01-10T02:18:55Z,CLOSED,False,5,5,1,https://github.com/kant,URL Https updated,1,[],https://github.com/apple/cups/pull/5195,https://github.com/kant,1,https://github.com/apple/cups/pull/5195,,,True,{}
apple/cups,https://github.com/apple/cups,5195,2017-12-16T00:24:31Z,2018-01-10T02:18:55Z,2018-01-10T02:18:55Z,CLOSED,False,5,5,1,https://github.com/kant,URL Https updated,1,[],https://github.com/apple/cups/pull/5195,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5195#issuecomment-352144487,,@kant What is the purpose of this change?,True,{}
apple/cups,https://github.com/apple/cups,5196,2017-12-16T00:26:02Z,2018-01-10T02:18:55Z,2018-01-10T02:18:55Z,CLOSED,False,4,4,1,https://github.com/kant,url https updated,1,[],https://github.com/apple/cups/pull/5196,https://github.com/kant,1,https://github.com/apple/cups/pull/5196,,,True,{}
apple/cups,https://github.com/apple/cups,5196,2017-12-16T00:26:02Z,2018-01-10T02:18:55Z,2018-01-10T02:18:55Z,CLOSED,False,4,4,1,https://github.com/kant,url https updated,1,[],https://github.com/apple/cups/pull/5196,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5196#issuecomment-352144424,,@kant What is the purpose of this change?,True,{}
apple/cups,https://github.com/apple/cups,5197,2017-12-16T00:27:22Z,2018-01-10T02:18:55Z,2018-01-10T02:18:55Z,CLOSED,False,5,5,1,https://github.com/kant,URL https updated,1,[],https://github.com/apple/cups/pull/5197,https://github.com/kant,1,https://github.com/apple/cups/pull/5197,,,True,{}
apple/cups,https://github.com/apple/cups,5198,2017-12-16T00:28:51Z,2018-01-10T02:18:55Z,2018-01-10T02:18:55Z,CLOSED,False,5,5,1,https://github.com/kant,URL https updated,1,[],https://github.com/apple/cups/pull/5198,https://github.com/kant,1,https://github.com/apple/cups/pull/5198,,,True,{}
apple/cups,https://github.com/apple/cups,5199,2017-12-16T00:30:03Z,2018-01-10T02:18:55Z,2018-01-10T02:18:55Z,CLOSED,False,5,5,1,https://github.com/kant,URL https updated,1,[],https://github.com/apple/cups/pull/5199,https://github.com/kant,1,https://github.com/apple/cups/pull/5199,,,True,{}
apple/cups,https://github.com/apple/cups,5210,2017-12-30T14:29:23Z,2018-01-10T02:17:26Z,2018-01-10T15:31:42Z,MERGED,True,288,274,1,https://github.com/Atalanttore,Update cups_de.po,1,['priority-low'],https://github.com/apple/cups/pull/5210,https://github.com/Atalanttore,1,https://github.com/apple/cups/pull/5210,Updated existing and untranslated strings.,Updated existing and untranslated strings.,True,{}
apple/cups,https://github.com/apple/cups,5212,2018-01-02T14:32:00Z,2018-01-10T02:10:03Z,2018-01-10T02:10:11Z,MERGED,True,0,1,1,https://github.com/albert-astals-cid-kdab,Remove unused _PPD_NORMAL_CONSTRAINTS enum,1,['priority-low'],https://github.com/apple/cups/pull/5212,https://github.com/albert-astals-cid-kdab,1,https://github.com/apple/cups/pull/5212,,,True,{}
apple/cups,https://github.com/apple/cups,5213,2018-01-02T15:20:06Z,2018-01-10T02:06:52Z,2018-01-10T02:06:52Z,MERGED,True,1,1,1,https://github.com/albert-astals-cid-kdab,Fix ppdInstallableConflict conflict reporting,1,['priority-low'],https://github.com/apple/cups/pull/5213,https://github.com/albert-astals-cid-kdab,1,https://github.com/apple/cups/pull/5213,"Without this patch it was taking all constraints into account, not only the ones
regarding the passed option so if you had a conflict somewhere else, every other
single option would be said to be conflicting which doesn't match what the
documentation says this function should do.","Without this patch it was taking all constraints into account, not only the ones
regarding the passed option so if you had a conflict somewhere else, every other
single option would be said to be conflicting which doesn't match what the
documentation says this function should do.",True,{}
apple/cups,https://github.com/apple/cups,5213,2018-01-02T15:20:06Z,2018-01-10T02:06:52Z,2018-01-10T02:06:52Z,MERGED,True,1,1,1,https://github.com/albert-astals-cid-kdab,Fix ppdInstallableConflict conflict reporting,1,['priority-low'],https://github.com/apple/cups/pull/5213,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5213#issuecomment-356477409,"Without this patch it was taking all constraints into account, not only the ones
regarding the passed option so if you had a conflict somewhere else, every other
single option would be said to be conflicting which doesn't match what the
documentation says this function should do.","Looks reasonable, thanks for the fix!",True,{}
apple/cups,https://github.com/apple/cups,5217,2018-01-09T15:39:02Z,2018-01-10T02:16:50Z,2018-01-10T04:48:48Z,MERGED,True,2,0,1,https://github.com/StefanScherer,Fix compile without HAVE_SSL,1,['priority-medium'],https://github.com/apple/cups/pull/5217,https://github.com/StefanScherer,1,https://github.com/apple/cups/pull/5217,"A compile error occurs in usersys.c when HAVE_SSL is not defined.
This additional ifdef fixes it.
Same as istopwg/ippsample#68","A compile error occurs in usersys.c when HAVE_SSL is not defined.
This additional ifdef fixes it.
Same as istopwg/ippsample#68",True,{}
apple/cups,https://github.com/apple/cups,5226,2018-01-16T13:06:21Z,2018-01-16T14:11:37Z,2018-01-16T14:11:40Z,CLOSED,False,65,49,1,https://github.com/tillkamppeter,"When writing CUPS/PWG/Apple Raster compressed, byte-swapping never happens",1,[],https://github.com/apple/cups/pull/5226,https://github.com/tillkamppeter,1,https://github.com/apple/cups/pull/5226,This is the fix for Issue #5225.,This is the fix for Issue #5225.,True,{}
apple/cups,https://github.com/apple/cups,5226,2018-01-16T13:06:21Z,2018-01-16T14:11:37Z,2018-01-16T14:11:40Z,CLOSED,False,65,49,1,https://github.com/tillkamppeter,"When writing CUPS/PWG/Apple Raster compressed, byte-swapping never happens",1,[],https://github.com/apple/cups/pull/5226,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5226#issuecomment-357971907,This is the fix for Issue #5225.,"I don't think this is the fix we'll want to use, but will address Issue #5225 for a subsequent 2.3 beta.",True,{}
apple/cups,https://github.com/apple/cups,5227,2018-01-18T00:47:58Z,2018-01-18T14:31:09Z,2018-01-18T15:58:24Z,CLOSED,False,12,6,1,https://github.com/tillkamppeter,Let the PPD Generator read color spaces and color depth correctly from IPP data,2,[],https://github.com/apple/cups/pull/5227,https://github.com/tillkamppeter,1,https://github.com/apple/cups/pull/5227,"The PPD generator did not support all combinations of color spaces and color depths when reading the information from the answer to the get-printer-attributes IPP request. especially if in Apple Raster a range of color depths is given for a color space, like ""W8-16"", ""ADOBERGB24-48"", ... Now support for a color space in any color depth is recognized and the highest depth available chosen for each color space.
On my DeskJet 2540 this was especially leading to the fact that only the standard RGB color space appeared in the ""ColorModel"" option and not the also supported Gray and AdobeRGB color spaces. These two color spaces also print perfectly on the printer with 16 bit color depth (with CUPS 2.3b2).
HP-DeskJet_2540-ipp-attr-ippserver.txt","The PPD generator did not support all combinations of color spaces and color depths when reading the information from the answer to the get-printer-attributes IPP request. especially if in Apple Raster a range of color depths is given for a color space, like ""W8-16"", ""ADOBERGB24-48"", ... Now support for a color space in any color depth is recognized and the highest depth available chosen for each color space.
On my DeskJet 2540 this was especially leading to the fact that only the standard RGB color space appeared in the ""ColorModel"" option and not the also supported Gray and AdobeRGB color spaces. These two color spaces also print perfectly on the printer with 16 bit color depth (with CUPS 2.3b2).
HP-DeskJet_2540-ipp-attr-ippserver.txt",True,{}
apple/cups,https://github.com/apple/cups,5227,2018-01-18T00:47:58Z,2018-01-18T14:31:09Z,2018-01-18T15:58:24Z,CLOSED,False,12,6,1,https://github.com/tillkamppeter,Let the PPD Generator read color spaces and color depth correctly from IPP data,2,[],https://github.com/apple/cups/pull/5227,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5227#issuecomment-358529864,"The PPD generator did not support all combinations of color spaces and color depths when reading the information from the answer to the get-printer-attributes IPP request. especially if in Apple Raster a range of color depths is given for a color space, like ""W8-16"", ""ADOBERGB24-48"", ... Now support for a color space in any color depth is recognized and the highest depth available chosen for each color space.
On my DeskJet 2540 this was especially leading to the fact that only the standard RGB color space appeared in the ""ColorModel"" option and not the also supported Gray and AdobeRGB color spaces. These two color spaces also print perfectly on the printer with 16 bit color depth (with CUPS 2.3b2).
HP-DeskJet_2540-ipp-attr-ippserver.txt","We cannot accept this pull request as-is.
First, defaulting to the highest bit depth will lead to serious performance regressions. This is not something we will change our minds on - high bit depth for AdobeRGB is OK (and expected), but not for the others.
Second, sRGB is only defined for 24-bit (8-bit per component). Higher bit depth sRGB is actually a different color space (scRGB, defined by HP and Microsoft) as none of the ""tweaks"" employed for 16-bit and 24-bit sRGB are valid for higher bit depths. scRGB never caught on and we don't support it ""natively"".
Finally, we will consider supporting 24-bit AdobeRGB, but despite the wider gamut you lose a lot of color resolution so the results are often worse than for 24-bit sRGB. For that reason we don't actually allow 24-bit AdobeRGB with Apple Raster, but if a printer is reporting support for it we might bend the rules for that...",True,{}
apple/cups,https://github.com/apple/cups,5227,2018-01-18T00:47:58Z,2018-01-18T14:31:09Z,2018-01-18T15:58:24Z,CLOSED,False,12,6,1,https://github.com/tillkamppeter,Let the PPD Generator read color spaces and color depth correctly from IPP data,2,[],https://github.com/apple/cups/pull/5227,https://github.com/tillkamppeter,3,https://github.com/apple/cups/pull/5227#issuecomment-358636720,"The PPD generator did not support all combinations of color spaces and color depths when reading the information from the answer to the get-printer-attributes IPP request. especially if in Apple Raster a range of color depths is given for a color space, like ""W8-16"", ""ADOBERGB24-48"", ... Now support for a color space in any color depth is recognized and the highest depth available chosen for each color space.
On my DeskJet 2540 this was especially leading to the fact that only the standard RGB color space appeared in the ""ColorModel"" option and not the also supported Gray and AdobeRGB color spaces. These two color spaces also print perfectly on the printer with 16 bit color depth (with CUPS 2.3b2).
HP-DeskJet_2540-ipp-attr-ippserver.txt","Thanks for the info, I simply purely followed the output of the printer on get-printer-attributes and also that CUPS, cups-filters and the printer are handling the color depths correctly.
Now I have taken your answer into account, in case of the printer offering both 8 and 16 bit for a color space defaulting to 8 bit for sRGB and 16 bit for AdobeRGB, and creating two choices for Grayscale. If the printer offers only one color depth for a color space, this depth is simply taken.
Important is also that all Black, Grayscale, sRGB, and AdobeRGB color spaces reported by the printer are recognized and especially entries in the URF info string which have two color depths.
I am ignoring DeviceGray and DeviceRGB color spaces as I do not know about how they behave color-management-wise.",True,{}
apple/cups,https://github.com/apple/cups,5227,2018-01-18T00:47:58Z,2018-01-18T14:31:09Z,2018-01-18T15:58:24Z,CLOSED,False,12,6,1,https://github.com/tillkamppeter,Let the PPD Generator read color spaces and color depth correctly from IPP data,2,[],https://github.com/apple/cups/pull/5227,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5227#issuecomment-358663418,"The PPD generator did not support all combinations of color spaces and color depths when reading the information from the answer to the get-printer-attributes IPP request. especially if in Apple Raster a range of color depths is given for a color space, like ""W8-16"", ""ADOBERGB24-48"", ... Now support for a color space in any color depth is recognized and the highest depth available chosen for each color space.
On my DeskJet 2540 this was especially leading to the fact that only the standard RGB color space appeared in the ""ColorModel"" option and not the also supported Gray and AdobeRGB color spaces. These two color spaces also print perfectly on the printer with 16 bit color depth (with CUPS 2.3b2).
HP-DeskJet_2540-ipp-attr-ippserver.txt",[master c283f46] Add support for deep grayscale (ColorModel=Gray16) and 8-bit AdobeRGB (Issue #5227),True,{}
apple/cups,https://github.com/apple/cups,5227,2018-01-18T00:47:58Z,2018-01-18T14:31:09Z,2018-01-18T15:58:24Z,CLOSED,False,12,6,1,https://github.com/tillkamppeter,Let the PPD Generator read color spaces and color depth correctly from IPP data,2,[],https://github.com/apple/cups/pull/5227,https://github.com/tillkamppeter,5,https://github.com/apple/cups/pull/5227#issuecomment-358691203,"The PPD generator did not support all combinations of color spaces and color depths when reading the information from the answer to the get-printer-attributes IPP request. especially if in Apple Raster a range of color depths is given for a color space, like ""W8-16"", ""ADOBERGB24-48"", ... Now support for a color space in any color depth is recognized and the highest depth available chosen for each color space.
On my DeskJet 2540 this was especially leading to the fact that only the standard RGB color space appeared in the ""ColorModel"" option and not the also supported Gray and AdobeRGB color spaces. These two color spaces also print perfectly on the printer with 16 bit color depth (with CUPS 2.3b2).
HP-DeskJet_2540-ipp-attr-ippserver.txt",I have tested your change now and on my printer at least it provides the same options as my change. Thanks.,True,{}
apple/cups,https://github.com/apple/cups,5232,2018-01-19T17:00:34Z,2018-01-19T20:36:59Z,2018-01-19T20:36:59Z,MERGED,True,8,8,1,https://github.com/christoph-morrison,Some typo fixes in the german translation,1,['priority-low'],https://github.com/apple/cups/pull/5232,https://github.com/christoph-morrison,1,https://github.com/apple/cups/pull/5232,Fixed some discovered typos in locale/cups_de.po,Fixed some discovered typos in locale/cups_de.po,True,{}
apple/cups,https://github.com/apple/cups,5234,2018-01-23T13:05:54Z,2018-02-20T23:12:57Z,2018-02-20T23:12:57Z,CLOSED,False,14,0,1,https://github.com/vliaskov,cupsdIsAuthorized: substitute invalid requesting-user-name with defau…,1,[],https://github.com/apple/cups/pull/5234,https://github.com/vliaskov,1,https://github.com/apple/cups/pull/5234,"…lt value
when running in ""relaxed conformance"" mode (Issue #5229)
This is a potential fix for #5229. Other suggestions are welcome.","…lt value
when running in ""relaxed conformance"" mode (Issue #5229)
This is a potential fix for #5229. Other suggestions are welcome.",True,{}
apple/cups,https://github.com/apple/cups,5234,2018-01-23T13:05:54Z,2018-02-20T23:12:57Z,2018-02-20T23:12:57Z,CLOSED,False,14,0,1,https://github.com/vliaskov,cupsdIsAuthorized: substitute invalid requesting-user-name with defau…,1,[],https://github.com/apple/cups/pull/5234,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5234#issuecomment-367154247,"…lt value
when running in ""relaxed conformance"" mode (Issue #5229)
This is a potential fix for #5229. Other suggestions are welcome.",Closing since parent bug has been otherwise fixed.,True,{}
apple/cups,https://github.com/apple/cups,5240,2018-01-29T12:03:51Z,2018-01-29T19:34:35Z,2018-01-29T19:34:48Z,MERGED,True,1,1,1,https://github.com/zdohnal,Respect PageLog configuration when compiled with journald,1,['priority-high'],https://github.com/apple/cups/pull/5240,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5240,"Same as pull request from Lutz Heermann, but for PageLog.","Same as pull request from Lutz Heermann, but for PageLog.",True,{}
apple/cups,https://github.com/apple/cups,5252,2018-02-20T19:34:31Z,2018-02-20T23:12:25Z,2018-02-20T23:12:25Z,CLOSED,False,1,1,1,https://github.com/jeis2497052,Propose fix typo,1,['priority-low'],https://github.com/apple/cups/pull/5252,https://github.com/jeis2497052,1,https://github.com/apple/cups/pull/5252,is this update OK?,is this update OK?,True,{}
apple/cups,https://github.com/apple/cups,5252,2018-02-20T19:34:31Z,2018-02-20T23:12:25Z,2018-02-20T23:12:25Z,CLOSED,False,1,1,1,https://github.com/jeis2497052,Propose fix typo,1,['priority-low'],https://github.com/apple/cups/pull/5252,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5252#issuecomment-367093604,is this update OK?,"Yes, although I'll update the source and not just the generated file. Thanks for the report!",True,{}
apple/cups,https://github.com/apple/cups,5252,2018-02-20T19:34:31Z,2018-02-20T23:12:25Z,2018-02-20T23:12:25Z,CLOSED,False,1,1,1,https://github.com/jeis2497052,Propose fix typo,1,['priority-low'],https://github.com/apple/cups/pull/5252,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5252#issuecomment-367154130,is this update OK?,[master 699fe02] Update documentation (Issue #5252),True,{}
apple/cups,https://github.com/apple/cups,5253,2018-02-23T13:52:33Z,2018-02-23T18:25:57Z,2018-04-02T20:40:29Z,CLOSED,False,2,0,1,https://github.com/michaelweghorn,Fix build for HAVE_LIBPAM=0,1,['priority-medium'],https://github.com/apple/cups/pull/5253,https://github.com/michaelweghorn,1,https://github.com/apple/cups/pull/5253,"This adds a missing #includethat fixes the build for the case where
'HAVE_LIBPAM' is 0.
The following error occurs without this:
[...]
Making all in scheduler...
Compiling auth.c...
auth.c:2017:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state;          /* Primary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2018:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state2;         /* Secondary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2038:5: warning: implicit declaration of function '_cupsMD5Init' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Init(&state);
    ^
auth.c:2039:5: warning: implicit declaration of function '_cupsMD5Append' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Append(&state, (unsigned char *)pw, pwlen);
    ^
auth.c:2046:5: warning: implicit declaration of function '_cupsMD5Finish' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Finish(&state2, digest);
    ^
3 warnings and 2 errors generated.
../Makedefs:260: recipe for target 'auth.o' failed
make[1]: *** [auth.o] Error 1
Makefile:25: recipe for target 'all' failed
make: *** [all] Error 1","This adds a missing #includethat fixes the build for the case where
'HAVE_LIBPAM' is 0.
The following error occurs without this:
[...]
Making all in scheduler...
Compiling auth.c...
auth.c:2017:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state;          /* Primary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2018:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state2;         /* Secondary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2038:5: warning: implicit declaration of function '_cupsMD5Init' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Init(&state);
    ^
auth.c:2039:5: warning: implicit declaration of function '_cupsMD5Append' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Append(&state, (unsigned char *)pw, pwlen);
    ^
auth.c:2046:5: warning: implicit declaration of function '_cupsMD5Finish' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Finish(&state2, digest);
    ^
3 warnings and 2 errors generated.
../Makedefs:260: recipe for target 'auth.o' failed
make[1]: *** [auth.o] Error 1
Makefile:25: recipe for target 'all' failed
make: *** [all] Error 1",True,{}
apple/cups,https://github.com/apple/cups,5253,2018-02-23T13:52:33Z,2018-02-23T18:25:57Z,2018-04-02T20:40:29Z,CLOSED,False,2,0,1,https://github.com/michaelweghorn,Fix build for HAVE_LIBPAM=0,1,['priority-medium'],https://github.com/apple/cups/pull/5253,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5253#issuecomment-368066917,"This adds a missing #includethat fixes the build for the case where
'HAVE_LIBPAM' is 0.
The following error occurs without this:
[...]
Making all in scheduler...
Compiling auth.c...
auth.c:2017:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state;          /* Primary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2018:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state2;         /* Secondary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2038:5: warning: implicit declaration of function '_cupsMD5Init' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Init(&state);
    ^
auth.c:2039:5: warning: implicit declaration of function '_cupsMD5Append' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Append(&state, (unsigned char *)pw, pwlen);
    ^
auth.c:2046:5: warning: implicit declaration of function '_cupsMD5Finish' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Finish(&state2, digest);
    ^
3 warnings and 2 errors generated.
../Makedefs:260: recipe for target 'auth.o' failed
make[1]: *** [auth.o] Error 1
Makefile:25: recipe for target 'all' failed
make: *** [all] Error 1","That header actually can’t be used anymore since the CUPS MD5 implementation is only used on legacy platforms. PAM will soon be required for authentication, period.",True,{}
apple/cups,https://github.com/apple/cups,5253,2018-02-23T13:52:33Z,2018-02-23T18:25:57Z,2018-04-02T20:40:29Z,CLOSED,False,2,0,1,https://github.com/michaelweghorn,Fix build for HAVE_LIBPAM=0,1,['priority-medium'],https://github.com/apple/cups/pull/5253,https://github.com/michaelweghorn,3,https://github.com/apple/cups/pull/5253#issuecomment-368090166,"This adds a missing #includethat fixes the build for the case where
'HAVE_LIBPAM' is 0.
The following error occurs without this:
[...]
Making all in scheduler...
Compiling auth.c...
auth.c:2017:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state;          /* Primary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2018:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state2;         /* Secondary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2038:5: warning: implicit declaration of function '_cupsMD5Init' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Init(&state);
    ^
auth.c:2039:5: warning: implicit declaration of function '_cupsMD5Append' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Append(&state, (unsigned char *)pw, pwlen);
    ^
auth.c:2046:5: warning: implicit declaration of function '_cupsMD5Finish' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Finish(&state2, digest);
    ^
3 warnings and 2 errors generated.
../Makedefs:260: recipe for target 'auth.o' failed
make[1]: *** [auth.o] Error 1
Makefile:25: recipe for target 'all' failed
make: *** [all] Error 1","That's fine for me; I just came across that build failure when doing a test build to have a look at something else.
I'm totally satisfied when instead of merging this, PAM is made mandatory and a configure error is caused when the PAM development files are not installed (rather than the build error I encountered).",True,{}
apple/cups,https://github.com/apple/cups,5253,2018-02-23T13:52:33Z,2018-02-23T18:25:57Z,2018-04-02T20:40:29Z,CLOSED,False,2,0,1,https://github.com/michaelweghorn,Fix build for HAVE_LIBPAM=0,1,['priority-medium'],https://github.com/apple/cups/pull/5253,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5253#issuecomment-368096250,"This adds a missing #includethat fixes the build for the case where
'HAVE_LIBPAM' is 0.
The following error occurs without this:
[...]
Making all in scheduler...
Compiling auth.c...
auth.c:2017:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state;          /* Primary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2018:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state2;         /* Secondary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2038:5: warning: implicit declaration of function '_cupsMD5Init' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Init(&state);
    ^
auth.c:2039:5: warning: implicit declaration of function '_cupsMD5Append' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Append(&state, (unsigned char *)pw, pwlen);
    ^
auth.c:2046:5: warning: implicit declaration of function '_cupsMD5Finish' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Finish(&state2, digest);
    ^
3 warnings and 2 errors generated.
../Makedefs:260: recipe for target 'auth.o' failed
make[1]: *** [auth.o] Error 1
Makefile:25: recipe for target 'all' failed
make: *** [all] Error 1","OK, I opted to just remove the MD5 password code and use crypt() by itself without PAM for now - crypt() is supposed to handle the supported password hashes anyways, and systems have been using SHA and other hashes for a long time as well...",True,{}
apple/cups,https://github.com/apple/cups,5253,2018-02-23T13:52:33Z,2018-02-23T18:25:57Z,2018-04-02T20:40:29Z,CLOSED,False,2,0,1,https://github.com/michaelweghorn,Fix build for HAVE_LIBPAM=0,1,['priority-medium'],https://github.com/apple/cups/pull/5253,https://github.com/pierre-labastie,5,https://github.com/apple/cups/pull/5253#issuecomment-378031318,"This adds a missing #includethat fixes the build for the case where
'HAVE_LIBPAM' is 0.
The following error occurs without this:
[...]
Making all in scheduler...
Compiling auth.c...
auth.c:2017:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state;          /* Primary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2018:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state2;         /* Secondary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2038:5: warning: implicit declaration of function '_cupsMD5Init' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Init(&state);
    ^
auth.c:2039:5: warning: implicit declaration of function '_cupsMD5Append' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Append(&state, (unsigned char *)pw, pwlen);
    ^
auth.c:2046:5: warning: implicit declaration of function '_cupsMD5Finish' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Finish(&state2, digest);
    ^
3 warnings and 2 errors generated.
../Makedefs:260: recipe for target 'auth.o' failed
make[1]: *** [auth.o] Error 1
Makefile:25: recipe for target 'all' failed
make: *** [all] Error 1","In the 2.2. branch, it looks like there is still a reference to cups_md5_state_t in scheduler/auth.c if HAVE_LIBPAM is 0. See lines 2021-2. Is the backport complete?",True,{}
apple/cups,https://github.com/apple/cups,5253,2018-02-23T13:52:33Z,2018-02-23T18:25:57Z,2018-04-02T20:40:29Z,CLOSED,False,2,0,1,https://github.com/michaelweghorn,Fix build for HAVE_LIBPAM=0,1,['priority-medium'],https://github.com/apple/cups/pull/5253,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5253#issuecomment-378037450,"This adds a missing #includethat fixes the build for the case where
'HAVE_LIBPAM' is 0.
The following error occurs without this:
[...]
Making all in scheduler...
Compiling auth.c...
auth.c:2017:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state;          /* Primary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2018:5: error: unknown type name '_cups_md5_state_t'; did you mean '_cups_message_t'?
    _cups_md5_state_t   state2;         /* Secondary MD5 state info */
    ^~~~~~~~~~~~~~~~~
    _cups_message_t
../cups/language-private.h:52:3: note: '_cups_message_t' declared here
} _cups_message_t;
  ^
auth.c:2038:5: warning: implicit declaration of function '_cupsMD5Init' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Init(&state);
    ^
auth.c:2039:5: warning: implicit declaration of function '_cupsMD5Append' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Append(&state, (unsigned char *)pw, pwlen);
    ^
auth.c:2046:5: warning: implicit declaration of function '_cupsMD5Finish' is invalid in C99 [-Wimplicit-function-declaration]
    _cupsMD5Finish(&state2, digest);
    ^
3 warnings and 2 errors generated.
../Makedefs:260: recipe for target 'auth.o' failed
make[1]: *** [auth.o] Error 1
Makefile:25: recipe for target 'all' failed
make: *** [all] Error 1","No, we didn't remove the code from 2.2.x.
Tracking that fix with Issue #5283...",True,{}
apple/cups,https://github.com/apple/cups,5254,2018-02-26T07:51:11Z,2018-02-26T12:58:48Z,2018-02-26T14:20:37Z,CLOSED,False,2,2,2,https://github.com/michaelweghorn,Allow raw printing using 'file' backend,1,['wontfix'],https://github.com/apple/cups/pull/5254,https://github.com/michaelweghorn,1,https://github.com/apple/cups/pull/5254,"This makes it possible to do raw printing using the 'file'
backend, which was no longer working since commit
462b6e7.
While I am aware that this use case is not officially supported, it's still helpful to do troubleshooting in some cases without having to install any custom backend.","This makes it possible to do raw printing using the 'file'
backend, which was no longer working since commit
462b6e7.
While I am aware that this use case is not officially supported, it's still helpful to do troubleshooting in some cases without having to install any custom backend.",True,{}
apple/cups,https://github.com/apple/cups,5254,2018-02-26T07:51:11Z,2018-02-26T12:58:48Z,2018-02-26T14:20:37Z,CLOSED,False,2,2,2,https://github.com/michaelweghorn,Allow raw printing using 'file' backend,1,['wontfix'],https://github.com/apple/cups/pull/5254,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5254#issuecomment-368494316,"This makes it possible to do raw printing using the 'file'
backend, which was no longer working since commit
462b6e7.
While I am aware that this use case is not officially supported, it's still helpful to do troubleshooting in some cases without having to install any custom backend.","Sorry, not going to do this as allowing print admins to copy files to an arbitrary location as root is not particularly safe, and we have plans of eventually removing support for file URIs completely.",True,{}
apple/cups,https://github.com/apple/cups,5254,2018-02-26T07:51:11Z,2018-02-26T12:58:48Z,2018-02-26T14:20:37Z,CLOSED,False,2,2,2,https://github.com/michaelweghorn,Allow raw printing using 'file' backend,1,['wontfix'],https://github.com/apple/cups/pull/5254,https://github.com/michaelweghorn,3,https://github.com/apple/cups/pull/5254#issuecomment-368517980,"This makes it possible to do raw printing using the 'file'
backend, which was no longer working since commit
462b6e7.
While I am aware that this use case is not officially supported, it's still helpful to do troubleshooting in some cases without having to install any custom backend.",Thanks for the quick reply. Removing it completely sounds like a good option then in the long run.,True,{}
apple/cups,https://github.com/apple/cups,5261,2018-03-08T22:29:35Z,2019-05-15T22:37:24Z,2019-05-15T22:37:24Z,CLOSED,False,1,1,1,https://github.com/computersforpeace,cups-config: only CUPS libraries go in non-static `cups-config --libs`,1,['investigating'],https://github.com/apple/cups/pull/5261,https://github.com/computersforpeace,1,https://github.com/apple/cups/pull/5261,"We're including compression and crypto libraries in the linker flags
output, even when we're built as a shared library. This doesn't make
sense, because callers of cups-config are only looking for their direct
dependencies. If they plan to make any SSL or zlib calls of their own,
they should be managing those flags on their own.
This resolves problems seen in package management, where libcups users
end up inadvertently linking against (e.g.) gnutls directly, without the
package manager being aware. (And thus, it doesn't know to rebuild on
library upgrades.)","We're including compression and crypto libraries in the linker flags
output, even when we're built as a shared library. This doesn't make
sense, because callers of cups-config are only looking for their direct
dependencies. If they plan to make any SSL or zlib calls of their own,
they should be managing those flags on their own.
This resolves problems seen in package management, where libcups users
end up inadvertently linking against (e.g.) gnutls directly, without the
package manager being aware. (And thus, it doesn't know to rebuild on
library upgrades.)",True,{}
apple/cups,https://github.com/apple/cups,5261,2018-03-08T22:29:35Z,2019-05-15T22:37:24Z,2019-05-15T22:37:24Z,CLOSED,False,1,1,1,https://github.com/computersforpeace,cups-config: only CUPS libraries go in non-static `cups-config --libs`,1,['investigating'],https://github.com/apple/cups/pull/5261,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5261#issuecomment-371651265,"We're including compression and crypto libraries in the linker flags
output, even when we're built as a shared library. This doesn't make
sense, because callers of cups-config are only looking for their direct
dependencies. If they plan to make any SSL or zlib calls of their own,
they should be managing those flags on their own.
This resolves problems seen in package management, where libcups users
end up inadvertently linking against (e.g.) gnutls directly, without the
package manager being aware. (And thus, it doesn't know to rebuild on
library upgrades.)",We've had problems with this in the past; will re-investigate but I know on some platforms doing this doesn't actually work... :/,True,{}
apple/cups,https://github.com/apple/cups,5261,2018-03-08T22:29:35Z,2019-05-15T22:37:24Z,2019-05-15T22:37:24Z,CLOSED,False,1,1,1,https://github.com/computersforpeace,cups-config: only CUPS libraries go in non-static `cups-config --libs`,1,['investigating'],https://github.com/apple/cups/pull/5261,https://github.com/computersforpeace,3,https://github.com/apple/cups/pull/5261#issuecomment-371961377,"We're including compression and crypto libraries in the linker flags
output, even when we're built as a shared library. This doesn't make
sense, because callers of cups-config are only looking for their direct
dependencies. If they plan to make any SSL or zlib calls of their own,
they should be managing those flags on their own.
This resolves problems seen in package management, where libcups users
end up inadvertently linking against (e.g.) gnutls directly, without the
package manager being aware. (And thus, it doesn't know to rebuild on
library upgrades.)","Any tips on what platform(s)? I don't believe any other *-config tool (e.g., pkg-config) works the way cups-config currently does.",True,{}
apple/cups,https://github.com/apple/cups,5261,2018-03-08T22:29:35Z,2019-05-15T22:37:24Z,2019-05-15T22:37:24Z,CLOSED,False,1,1,1,https://github.com/computersforpeace,cups-config: only CUPS libraries go in non-static `cups-config --libs`,1,['investigating'],https://github.com/apple/cups/pull/5261,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5261#issuecomment-371964895,"We're including compression and crypto libraries in the linker flags
output, even when we're built as a shared library. This doesn't make
sense, because callers of cups-config are only looking for their direct
dependencies. If they plan to make any SSL or zlib calls of their own,
they should be managing those flags on their own.
This resolves problems seen in package management, where libcups users
end up inadvertently linking against (e.g.) gnutls directly, without the
package manager being aware. (And thus, it doesn't know to rebuild on
library upgrades.)","AIX, HP-UX, IRIX, macOS and some versions of Solaris for sure.",True,{}
apple/cups,https://github.com/apple/cups,5261,2018-03-08T22:29:35Z,2019-05-15T22:37:24Z,2019-05-15T22:37:24Z,CLOSED,False,1,1,1,https://github.com/computersforpeace,cups-config: only CUPS libraries go in non-static `cups-config --libs`,1,['investigating'],https://github.com/apple/cups/pull/5261,https://github.com/vapier,5,https://github.com/apple/cups/pull/5261#issuecomment-372089498,"We're including compression and crypto libraries in the linker flags
output, even when we're built as a shared library. This doesn't make
sense, because callers of cups-config are only looking for their direct
dependencies. If they plan to make any SSL or zlib calls of their own,
they should be managing those flags on their own.
This resolves problems seen in package management, where libcups users
end up inadvertently linking against (e.g.) gnutls directly, without the
package manager being aware. (And thus, it doesn't know to rebuild on
library upgrades.)",do those include static linking ?  i can understand on static-only systems needing the extra linkage.,True,{}
apple/cups,https://github.com/apple/cups,5261,2018-03-08T22:29:35Z,2019-05-15T22:37:24Z,2019-05-15T22:37:24Z,CLOSED,False,1,1,1,https://github.com/computersforpeace,cups-config: only CUPS libraries go in non-static `cups-config --libs`,1,['investigating'],https://github.com/apple/cups/pull/5261,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5261#issuecomment-372128468,"We're including compression and crypto libraries in the linker flags
output, even when we're built as a shared library. This doesn't make
sense, because callers of cups-config are only looking for their direct
dependencies. If they plan to make any SSL or zlib calls of their own,
they should be managing those flags on their own.
This resolves problems seen in package management, where libcups users
end up inadvertently linking against (e.g.) gnutls directly, without the
package manager being aware. (And thus, it doesn't know to rebuild on
library upgrades.)","No, those are all operating systems that support shared libraries. They just don't always support recursive linkage (i.e. just the symbols referenced in the shared library get bound) so the application linking to libcups that also needs one or more additional functions from a dependent library must also link to the dependent library.
Like I said, I'll re-investigate to see if we can move away from that, or at least make it conditional on a per-platform basis...",True,{}
apple/cups,https://github.com/apple/cups,5261,2018-03-08T22:29:35Z,2019-05-15T22:37:24Z,2019-05-15T22:37:24Z,CLOSED,False,1,1,1,https://github.com/computersforpeace,cups-config: only CUPS libraries go in non-static `cups-config --libs`,1,['investigating'],https://github.com/apple/cups/pull/5261,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5261#issuecomment-492849674,"We're including compression and crypto libraries in the linker flags
output, even when we're built as a shared library. This doesn't make
sense, because callers of cups-config are only looking for their direct
dependencies. If they plan to make any SSL or zlib calls of their own,
they should be managing those flags on their own.
This resolves problems seen in package management, where libcups users
end up inadvertently linking against (e.g.) gnutls directly, without the
package manager being aware. (And thus, it doesn't know to rebuild on
library upgrades.)","Required quite a bit more than the simple change you suggested, but I believe master now has what you wanted... :)
[master 3e391a8] Update build system and cups-config script to not add extra libraries to the ""--libs"" output (Issue #5261)",True,{}
apple/cups,https://github.com/apple/cups,5264,2018-03-13T15:13:15Z,2018-03-13T17:26:44Z,2018-03-14T19:14:01Z,MERGED,True,96,96,1,https://github.com/jschwender,some new translations completed,1,['priority-low'],https://github.com/apple/cups/pull/5264,https://github.com/jschwender,1,https://github.com/apple/cups/pull/5264,,,True,{}
apple/cups,https://github.com/apple/cups,5264,2018-03-13T15:13:15Z,2018-03-13T17:26:44Z,2018-03-14T19:14:01Z,MERGED,True,96,96,1,https://github.com/jschwender,some new translations completed,1,['priority-low'],https://github.com/apple/cups/pull/5264,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5264#issuecomment-373141056,,"@IOOI-SqAR Thanks for the review, I'll apply those changes shortly.",True,{}
apple/cups,https://github.com/apple/cups,5264,2018-03-13T15:13:15Z,2018-03-13T17:26:44Z,2018-03-14T19:14:01Z,MERGED,True,96,96,1,https://github.com/jschwender,some new translations completed,1,['priority-low'],https://github.com/apple/cups/pull/5264,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5264#issuecomment-373142165,,[master 739ad3f] Typo changes after review (Issue #5264),True,{}
apple/cups,https://github.com/apple/cups,5286,2018-04-03T14:31:34Z,2018-04-10T19:36:59Z,2018-04-10T19:36:59Z,MERGED,True,0,29,2,https://github.com/kohlrabi,Remove mentions of non-implemented -U option from lpoptions manpage,1,['priority-low'],https://github.com/apple/cups/pull/5286,https://github.com/kohlrabi,1,https://github.com/apple/cups/pull/5286,"The man page for lpoptions mentions a -U username option, to set the username for a printer. This option does not exist in lpoptions.c proper.","The man page for lpoptions mentions a -U username option, to set the username for a printer. This option does not exist in lpoptions.c proper.",True,{}
apple/cups,https://github.com/apple/cups,5287,2018-04-03T18:39:15Z,2018-04-03T20:36:34Z,2018-04-03T20:36:34Z,CLOSED,False,23,4,2,https://github.com/kohlrabi,Add option to have per-printer usernames in lpoptions.,3,['enhancement'],https://github.com/apple/cups/pull/5287,https://github.com/kohlrabi,1,https://github.com/apple/cups/pull/5287,"This PR implements the option to allow per-printer usernames, set via lpoptions. I avoided breaking the spec for entries in lpoptions, which are of the form Dest <name> [<options>] or Default <name> [<options>]. I instead added a ""special"" option named User, which will be used by the options.c to set the cups_user, and by lpoptions.c to put the username to.
I would have loved to create a more ""clean"" solution, witout (ab)using options for that, but that would have probably broken the aforementioned spec of lpoptions. I'm interested in better ideas of how to handle this.","This PR implements the option to allow per-printer usernames, set via lpoptions. I avoided breaking the spec for entries in lpoptions, which are of the form Dest <name> [<options>] or Default <name> [<options>]. I instead added a ""special"" option named User, which will be used by the options.c to set the cups_user, and by lpoptions.c to put the username to.
I would have loved to create a more ""clean"" solution, witout (ab)using options for that, but that would have probably broken the aforementioned spec of lpoptions. I'm interested in better ideas of how to handle this.",True,{}
apple/cups,https://github.com/apple/cups,5287,2018-04-03T18:39:15Z,2018-04-03T20:36:34Z,2018-04-03T20:36:34Z,CLOSED,False,23,4,2,https://github.com/kohlrabi,Add option to have per-printer usernames in lpoptions.,3,['enhancement'],https://github.com/apple/cups/pull/5287,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5287#issuecomment-378355238,"This PR implements the option to allow per-printer usernames, set via lpoptions. I avoided breaking the spec for entries in lpoptions, which are of the form Dest <name> [<options>] or Default <name> [<options>]. I instead added a ""special"" option named User, which will be used by the options.c to set the cups_user, and by lpoptions.c to put the username to.
I would have loved to create a more ""clean"" solution, witout (ab)using options for that, but that would have probably broken the aforementioned spec of lpoptions. I'm interested in better ideas of how to handle this.",I'm not sure we want to do this...,True,{}
apple/cups,https://github.com/apple/cups,5287,2018-04-03T18:39:15Z,2018-04-03T20:36:34Z,2018-04-03T20:36:34Z,CLOSED,False,23,4,2,https://github.com/kohlrabi,Add option to have per-printer usernames in lpoptions.,3,['enhancement'],https://github.com/apple/cups/pull/5287,https://github.com/kohlrabi,3,https://github.com/apple/cups/pull/5287#issuecomment-378357934,"This PR implements the option to allow per-printer usernames, set via lpoptions. I avoided breaking the spec for entries in lpoptions, which are of the form Dest <name> [<options>] or Default <name> [<options>]. I instead added a ""special"" option named User, which will be used by the options.c to set the cups_user, and by lpoptions.c to put the username to.
I would have loved to create a more ""clean"" solution, witout (ab)using options for that, but that would have probably broken the aforementioned spec of lpoptions. I'm interested in better ideas of how to handle this.","I have noticed that the man-page for lpoptions mentions an option -U username, which is not implemented in lpoptions.c. I first sent a PR which removed the option from the documentation (it's currently the tip of my master). Then I thought it might be more useful to actually implement that option.
I realize that ""blocking"" or ""overloading"" the option will not allow to have a separate option ""User"" defined for the printer, and it is pretty non-discoverable.
I'm willing to explore other ways to do this, and dive more deeply into the code, but I wanted to have a solution which creates 100% backwards compatible lpoptions files (unless the option ""User"" can be understood otherwise). And it adds new functionality.
If you decide to reject, I will happily add the PR which removes the -U option from the man pages.",True,{}
apple/cups,https://github.com/apple/cups,5287,2018-04-03T18:39:15Z,2018-04-03T20:36:34Z,2018-04-03T20:36:34Z,CLOSED,False,23,4,2,https://github.com/kohlrabi,Add option to have per-printer usernames in lpoptions.,3,['enhancement'],https://github.com/apple/cups/pull/5287,https://github.com/kohlrabi,4,https://github.com/apple/cups/pull/5287#issuecomment-378367210,"This PR implements the option to allow per-printer usernames, set via lpoptions. I avoided breaking the spec for entries in lpoptions, which are of the form Dest <name> [<options>] or Default <name> [<options>]. I instead added a ""special"" option named User, which will be used by the options.c to set the cups_user, and by lpoptions.c to put the username to.
I would have loved to create a more ""clean"" solution, witout (ab)using options for that, but that would have probably broken the aforementioned spec of lpoptions. I'm interested in better ideas of how to handle this.","Another option would be to scrap the -U option altogether, and add a regular -o option to set the user name (-o user or -o username). In that case the parsing code in options.c can be kept, the code for lpoptions.c can be scrapped, and the documentation for lpoptins and friends should be updated with the new option -o user=username.",True,{}
apple/cups,https://github.com/apple/cups,5297,2018-04-18T07:41:35Z,2018-04-18T12:48:47Z,2018-04-18T12:48:58Z,MERGED,True,1,1,1,None,Allow cupsd daemon to exit on idle,1,['priority-low'],https://github.com/apple/cups/pull/5297,None,1,https://github.com/apple/cups/pull/5297,"When using socket activation cups daemon can safely exit on idle and be automatically started when it's needed. Using Restart=always prevent this behavior and causes cups daemon constantly restarting itself instead of exiting. Users reported[1] that Restart=on-failure was enough to fix issues[2] so Restart=always may be unnecessary and harmful.
[1] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=861470
[2] #5263","When using socket activation cups daemon can safely exit on idle and be automatically started when it's needed. Using Restart=always prevent this behavior and causes cups daemon constantly restarting itself instead of exiting. Users reported[1] that Restart=on-failure was enough to fix issues[2] so Restart=always may be unnecessary and harmful.
[1] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=861470
[2] #5263",True,{}
apple/cups,https://github.com/apple/cups,5300,2018-04-19T12:18:18Z,2018-04-25T00:35:07Z,2018-04-25T00:35:07Z,CLOSED,False,1,1,1,https://github.com/seal-ag,"Typo ""3600dpi"" -> ""360dpi""?",1,['priority-low'],https://github.com/apple/cups/pull/5300,https://github.com/seal-ag,1,https://github.com/apple/cups/pull/5300,"Hi,
is this a little typo in ipp-everywhere.test?
Greetings
Anne","Hi,
is this a little typo in ipp-everywhere.test?
Greetings
Anne",True,{}
apple/cups,https://github.com/apple/cups,5300,2018-04-19T12:18:18Z,2018-04-25T00:35:07Z,2018-04-25T00:35:07Z,CLOSED,False,1,1,1,https://github.com/seal-ag,"Typo ""3600dpi"" -> ""360dpi""?",1,['priority-low'],https://github.com/apple/cups/pull/5300,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5300#issuecomment-384123205,"Hi,
is this a little typo in ipp-everywhere.test?
Greetings
Anne","[master 619d6d9] Fix 360dpi typo (Issue #5300)
[branch-2.2 5c7df4f] Fix 360dpi typo (Issue #5300)",True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/albert-astals-cid-kdab,1,https://github.com/apple/cups/pull/5303,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them",True,"{'HOORAY': ['https://github.com/KAMiKAZOW'], 'THUMBS_UP': ['https://github.com/aleixpol', 'https://github.com/jankusanagi', 'https://github.com/Gallaecio', 'https://github.com/Kaffeine']}"
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/albert-astals-cid-kdab,2,https://github.com/apple/cups/pull/5303#issuecomment-384587090,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them",@michaelweghorn This should fix the problem you're having with the PDF-Drucker.ppd file you sent me.,True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5303#issuecomment-384623553,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","Will consider this, but PPDs have been deprecated for over 10 years now...",True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/albert-astals-cid-kdab,4,https://github.com/apple/cups/pull/5303#issuecomment-384625153,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","I understand, and this is kind of off topic here, but i'll ask anyway, how are we supposed to get the same level of functionality if not using ppd?",True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5303#issuecomment-384628378,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","Modern printers (basically anything sold since 2010) support IPP-based printing using standard formats - we really only ""need"" PPDs for older printers and special use printers that haven't yet adopted IPP - mainly industrial (label/POS/kiosk) and things like those 2x3"" mobile (bluetooth) photo printers. I'll be presenting an alternative to PPDs at the 2018 Open Printing summit next month that uses the ippserver sample code to create ""printer applications"" that can be used by any CUPS client since CUPS 1.4.",True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/michaelweghorn,6,https://github.com/apple/cups/pull/5303#issuecomment-384719984,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","@michaelweghorn This should fix the problem you're having with the PDF-Drucker.ppd file you sent me.

@albert-astals-cid-kdab It does. Thanks!

Modern printers (basically anything sold since 2010) support IPP-based printing using standard formats - we really only ""need"" PPDs for older printers and special use printers that haven't yet adopted IPP - mainly industrial (label/POS/kiosk) and things like those 2x3"" mobile (bluetooth) photo printers. I'll be presenting an alternative to PPDs at the 2018 Open Printing summit next month that uses the ippserver sample code to create ""printer applications"" that can be used by any CUPS client since CUPS 1.4.

@michaelrsweet I'm really looking forward to hearing more about this then. In the current situation, we unfortunately had to take the difficult decision to stick with the deprecated APIs after careful evaluation. We had the practical problem that devices did not provide all of their options via IPP, even though many of them had some support for IPP.  (Corresponding IPP attributes did exist in the specification in the cases I had a closer look at, but were not supported/exposed by the devices.) This included rather new printers as well. It would be great to have a way to finally be able to drop obsolete and deprecated APIs without losing functionality.",True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5303#issuecomment-384733706,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","@michaelweghorn The printer application method is more targeted at printers that don't support IPP at all or do it so badly we can't use them directly.
Newer printers that don't implement all of their functionality via IPP will (unless somebody cares deeply enough about it to write it themselves) need a firmware update from the printer vendor. Firmware updates are somewhat likely for longer-lived office MFPs, which is (coincidentally) where we see these sorts of gaps between IPP and printer drivers - really depends on how much customer feedback they get (so they know the IPP functionality is important...)",True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/michaelweghorn,8,https://github.com/apple/cups/pull/5303#issuecomment-384751417,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","@michaelrsweet For those specific MFPs with insufficient support for IPP attributes, we did actually contact the vendor/supplier and got a list of IPP attributes that are currently supported and the information that they might have a look at implementing more if we were willing to pay. Given that even the new devices were problematic and there is a multitude of the ""printers that don't support IPP at all or do it so badly we can't use them directly"" around as well, we ""gave up"" at this point and decided to stick with the deprecated APIs for now.
Is that printer application method some kind of ""wrapper"" to be able to use PPD-based printers just like ""real"" IPP printers? That would be great in my opinion,  since it would make the ""nasty stuff with the deprecated things"" be done in one place and allow frameworks/applications to finally migrate to the new APIs and still use the old printers and their functionality.",True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/michaelrsweet,9,https://github.com/apple/cups/pull/5303#issuecomment-385406154,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","@michaelweghorn The printer application could provide a PPD-based wrapper, however it would still suffer from the same limitations of the current CUPS WRT mapping IPP's ""job-password"" attribute to whatever PPD option(s) are used by the driver. An alternative would be for a vendor (or third party) to support a printer application for those printers, with the printer-specific bits being described in a different way, internally, and exposed externally as the ""job-password"" attribute.
I'm hoping to provide some examples/sample code in the PWG's ippsample project so that it is relatively easy to deploy this sort of solution.",True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/michaelweghorn,10,https://github.com/apple/cups/pull/5303#issuecomment-385456636,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them",@michaelrsweet: Thanks for the update!,True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/albert-astals-cid-kdab,11,https://github.com/apple/cups/pull/5303#issuecomment-387359681,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them",friendly ping about getting this merged :),True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/michaelrsweet,12,https://github.com/apple/cups/pull/5303#issuecomment-387456221,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","@albert-astals-cid-kdab At this point we are debating the merit of ""fixing"" this issue; these fields were never meant to be localized and PPDs have been deprecated for a very long time. I should have a final answer for you in the next month or so.",True,{}
apple/cups,https://github.com/apple/cups,5303,2018-04-26T10:10:21Z,2018-06-05T15:43:02Z,2018-06-05T15:43:10Z,CLOSED,False,28,0,1,https://github.com/albert-astals-cid-kdab,ppdLocalize: Also translate some global ppd properties,1,"['enhancement', 'wontfix']",https://github.com/apple/cups/pull/5303,https://github.com/michaelrsweet,13,https://github.com/apple/cups/pull/5303#issuecomment-394758961,"There's quite a few ppds out there with translations for Manufacturer, ModelName, ShortNickName and NickName so use them","Sorry, we've decided that we won't be localizing these fields.",True,"{'THUMBS_DOWN': ['https://github.com/KAMiKAZOW', 'https://github.com/tcanabrava', 'https://github.com/jankusanagi', 'https://github.com/Gallaecio', 'https://github.com/Kaffeine', 'https://github.com/TheFlagCourier']}"
apple/cups,https://github.com/apple/cups,5306,2018-04-30T23:13:50Z,2018-05-01T12:36:29Z,2018-05-01T12:50:20Z,MERGED,True,1,1,1,https://github.com/speachy,Fix typo in example (cupsCommand -> cupsCommands),1,['priority-low'],https://github.com/apple/cups/pull/5306,https://github.com/speachy,1,https://github.com/apple/cups/pull/5306,"Hey, this trivial patch fixes a typo in the CUPS Command File example.  I wasted several hours on this before realizing the example was wrong.","Hey, this trivial patch fixes a typo in the CUPS Command File example.  I wasted several hours on this before realizing the example was wrong.",True,{}
apple/cups,https://github.com/apple/cups,5306,2018-04-30T23:13:50Z,2018-05-01T12:36:29Z,2018-05-01T12:50:20Z,MERGED,True,1,1,1,https://github.com/speachy,Fix typo in example (cupsCommand -> cupsCommands),1,['priority-low'],https://github.com/apple/cups/pull/5306,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5306#issuecomment-385661089,"Hey, this trivial patch fixes a typo in the CUPS Command File example.  I wasted several hours on this before realizing the example was wrong.",Whoops!,True,{}
apple/cups,https://github.com/apple/cups,5306,2018-04-30T23:13:50Z,2018-05-01T12:36:29Z,2018-05-01T12:50:20Z,MERGED,True,1,1,1,https://github.com/speachy,Fix typo in example (cupsCommand -> cupsCommands),1,['priority-low'],https://github.com/apple/cups/pull/5306,https://github.com/speachy,3,https://github.com/apple/cups/pull/5306#issuecomment-385663557,"Hey, this trivial patch fixes a typo in the CUPS Command File example.  I wasted several hours on this before realizing the example was wrong.","The docs also say ""The only required command is PrintSelfTestPage.""  Which is inconsistent with the text describing the purpose/use of 'cupsCommands'' -- and the CUPS code that utilizes it.
Cheers!",True,{}
apple/cups,https://github.com/apple/cups,5312,2018-05-08T23:28:55Z,2018-05-11T17:19:48Z,2018-06-03T22:07:33Z,MERGED,True,4,0,1,https://github.com/hansmi,mailto: Wait for server opening message,1,['priority-medium'],https://github.com/apple/cups/pull/5312,https://github.com/hansmi,1,https://github.com/apple/cups/pull/5312,"A subset of all mailserver configurations reject SMTP sessions where the
client sends anything before the server sent its opening message. This
is the case with Exim on Ubuntu Artful, for example:

SMTP protocol synchronization error (input sent without waiting for
greeting)

Not waiting for the opening message is a violation of the session
initiation described in RFC5321 (section 3.1). Update the mailto
notifier to wait for a non-error status code from the server before
proceeding to start the mail transaction.","A subset of all mailserver configurations reject SMTP sessions where the
client sends anything before the server sent its opening message. This
is the case with Exim on Ubuntu Artful, for example:

SMTP protocol synchronization error (input sent without waiting for
greeting)

Not waiting for the opening message is a violation of the session
initiation described in RFC5321 (section 3.1). Update the mailto
notifier to wait for a non-error status code from the server before
proceeding to start the mail transaction.",True,{}
apple/cups,https://github.com/apple/cups,5312,2018-05-08T23:28:55Z,2018-05-11T17:19:48Z,2018-06-03T22:07:33Z,MERGED,True,4,0,1,https://github.com/hansmi,mailto: Wait for server opening message,1,['priority-medium'],https://github.com/apple/cups/pull/5312,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5312#issuecomment-387763235,"A subset of all mailserver configurations reject SMTP sessions where the
client sends anything before the server sent its opening message. This
is the case with Exim on Ubuntu Artful, for example:

SMTP protocol synchronization error (input sent without waiting for
greeting)

Not waiting for the opening message is a violation of the session
initiation described in RFC5321 (section 3.1). Update the mailto
notifier to wait for a non-error status code from the server before
proceeding to start the mail transaction.","OK, so we'll definitely pick this up, but I'm thinking I want a wait timeout in there in case we are talking to a non-conforming SMTP server...",True,{}
apple/cups,https://github.com/apple/cups,5312,2018-05-08T23:28:55Z,2018-05-11T17:19:48Z,2018-06-03T22:07:33Z,MERGED,True,4,0,1,https://github.com/hansmi,mailto: Wait for server opening message,1,['priority-medium'],https://github.com/apple/cups/pull/5312,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5312#issuecomment-388428646,"A subset of all mailserver configurations reject SMTP sessions where the
client sends anything before the server sent its opening message. This
is the case with Exim on Ubuntu Artful, for example:

SMTP protocol synchronization error (input sent without waiting for
greeting)

Not waiting for the opening message is a violation of the session
initiation described in RFC5321 (section 3.1). Update the mailto
notifier to wait for a non-error status code from the server before
proceeding to start the mail transaction.","Looking at the code we are not doing timeouts for the other cupsFileGets calls, so we'll go with it... :)",True,{}
apple/cups,https://github.com/apple/cups,5316,2018-05-22T08:58:50Z,2018-07-19T07:39:09Z,2018-07-19T07:39:09Z,CLOSED,False,6,0,1,https://github.com/g0hl1n,usb-quirks: use unidir mode for for CUSTOM VK80 & VKP80III,1,['priority-low'],https://github.com/apple/cups/pull/5316,https://github.com/g0hl1n,1,https://github.com/apple/cups/pull/5316,,,True,{}
apple/cups,https://github.com/apple/cups,5316,2018-05-22T08:58:50Z,2018-07-19T07:39:09Z,2018-07-19T07:39:09Z,CLOSED,False,6,0,1,https://github.com/g0hl1n,usb-quirks: use unidir mode for for CUSTOM VK80 & VKP80III,1,['priority-low'],https://github.com/apple/cups/pull/5316,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5316#issuecomment-394758542,,"How common are these printers? If you just need these for a specific driver, it would be better to just bundle a quirks file with the driver - the USB backend loads everything from the /usr/share/cups/usb directory.",True,{}
apple/cups,https://github.com/apple/cups,5316,2018-05-22T08:58:50Z,2018-07-19T07:39:09Z,2018-07-19T07:39:09Z,CLOSED,False,6,0,1,https://github.com/g0hl1n,usb-quirks: use unidir mode for for CUSTOM VK80 & VKP80III,1,['priority-low'],https://github.com/apple/cups/pull/5316,https://github.com/g0hl1n,3,https://github.com/apple/cups/pull/5316#issuecomment-406184482,,"Hi Michael,
those printers are used a lot within POS, vending and similar devices.
But it seems to be a cleaner solution to bundle a separate quirks file with their driver.
thank you!",True,{}
apple/cups,https://github.com/apple/cups,5317,2018-05-24T20:08:16Z,2018-06-05T15:45:01Z,2018-06-05T15:45:01Z,MERGED,True,38,38,16,https://github.com/nils-van-zuijlen,Correct typos for French_France,1,['priority-low'],https://github.com/apple/cups/pull/5317,https://github.com/nils-van-zuijlen,1,https://github.com/apple/cups/pull/5317,In the templates,In the templates,True,{}
apple/cups,https://github.com/apple/cups,5321,2018-06-03T22:13:40Z,2018-06-05T15:37:19Z,2018-06-05T15:37:19Z,CLOSED,False,1,1,1,https://github.com/hansmi,pstops: Avoid operating on uninitialized memory,1,['priority-medium'],https://github.com/apple/cups/pull/5321,https://github.com/hansmi,1,https://github.com/apple/cups/pull/5321,"The ""parse_text"" function would read beyond the input buffer if
a PostScript file contained a malformed ""%%Page"" line, i.e.
$ cat >malformed.ps <<'EOF'
%!PS-Adobe-0
0
%%Page: (
EOF

Valgrind report:
  Use of uninitialised value of size 8
     at 0x11C048: parse_text (pstops.c:2234)
     by 0x11F109: copy_page (pstops.c:1245)
     by 0x1201C2: copy_dsc (pstops.c:850)
     by 0x120FB7: filter_main (pstops.c:343)
     by 0x1210E2: main (fuzzfilter.c:48)

Fixed by checking whether the byte to be examined isn't NUL.","The ""parse_text"" function would read beyond the input buffer if
a PostScript file contained a malformed ""%%Page"" line, i.e.
$ cat >malformed.ps <<'EOF'
%!PS-Adobe-0
0
%%Page: (
EOF

Valgrind report:
  Use of uninitialised value of size 8
     at 0x11C048: parse_text (pstops.c:2234)
     by 0x11F109: copy_page (pstops.c:1245)
     by 0x1201C2: copy_dsc (pstops.c:850)
     by 0x120FB7: filter_main (pstops.c:343)
     by 0x1210E2: main (fuzzfilter.c:48)

Fixed by checking whether the byte to be examined isn't NUL.",True,{}
apple/cups,https://github.com/apple/cups,5321,2018-06-03T22:13:40Z,2018-06-05T15:37:19Z,2018-06-05T15:37:19Z,CLOSED,False,1,1,1,https://github.com/hansmi,pstops: Avoid operating on uninitialized memory,1,['priority-medium'],https://github.com/apple/cups/pull/5321,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5321#issuecomment-394756845,"The ""parse_text"" function would read beyond the input buffer if
a PostScript file contained a malformed ""%%Page"" line, i.e.
$ cat >malformed.ps <<'EOF'
%!PS-Adobe-0
0
%%Page: (
EOF

Valgrind report:
  Use of uninitialised value of size 8
     at 0x11C048: parse_text (pstops.c:2234)
     by 0x11F109: copy_page (pstops.c:1245)
     by 0x1201C2: copy_dsc (pstops.c:850)
     by 0x120FB7: filter_main (pstops.c:343)
     by 0x1210E2: main (fuzzfilter.c:48)

Fixed by checking whether the byte to be examined isn't NUL.","[master 0541a2c] Fix a parsing bug in the pstops filter (Issue #5321)
[branch-2.2 6ff5bbe] Fix a parsing bug in the pstops filter (Issue #5321)",True,{}
apple/cups,https://github.com/apple/cups,5326,2018-06-08T06:57:01Z,2018-12-06T19:42:23Z,2018-12-06T19:42:24Z,CLOSED,False,31,0,1,https://github.com/zdohnal,adding lpr --help option,1,['enhancement'],https://github.com/apple/cups/pull/5326,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5326,"Hi Mike,
currently I'm doing another cleanup in CUPS on Fedora and I found some patches from which can help CUPS itself. This one is about adding --help parameter to lpr command.
Do you find it usable?","Hi Mike,
currently I'm doing another cleanup in CUPS on Fedora and I found some patches from which can help CUPS itself. This one is about adding --help parameter to lpr command.
Do you find it usable?",True,{}
apple/cups,https://github.com/apple/cups,5326,2018-06-08T06:57:01Z,2018-12-06T19:42:23Z,2018-12-06T19:42:24Z,CLOSED,False,31,0,1,https://github.com/zdohnal,adding lpr --help option,1,['enhancement'],https://github.com/apple/cups/pull/5326,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5326#issuecomment-395912716,"Hi Mike,
currently I'm doing another cleanup in CUPS on Fedora and I found some patches from which can help CUPS itself. This one is about adding --help parameter to lpr command.
Do you find it usable?",Maybe for 2.3.x (although the text will likely change to normalize the format with any other program help we have...),True,{}
apple/cups,https://github.com/apple/cups,5326,2018-06-08T06:57:01Z,2018-12-06T19:42:23Z,2018-12-06T19:42:24Z,CLOSED,False,31,0,1,https://github.com/zdohnal,adding lpr --help option,1,['enhancement'],https://github.com/apple/cups/pull/5326,https://github.com/zdohnal,3,https://github.com/apple/cups/pull/5326#issuecomment-396224730,"Hi Mike,
currently I'm doing another cleanup in CUPS on Fedora and I found some patches from which can help CUPS itself. This one is about adding --help parameter to lpr command.
Do you find it usable?","Ok, I'll look into other helps for lp* commands and try to normalize it with them as example.",True,{}
apple/cups,https://github.com/apple/cups,5326,2018-06-08T06:57:01Z,2018-12-06T19:42:23Z,2018-12-06T19:42:24Z,CLOSED,False,31,0,1,https://github.com/zdohnal,adding lpr --help option,1,['enhancement'],https://github.com/apple/cups/pull/5326,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5326#issuecomment-396328008,"Hi Mike,
currently I'm doing another cleanup in CUPS on Fedora and I found some patches from which can help CUPS itself. This one is about adding --help parameter to lpr command.
Do you find it usable?","One of the things we do in other commands is to write out the options individually so that we have a few, common and short strings to localize rather than a bunch of large ones that are unique to every program.",True,{}
apple/cups,https://github.com/apple/cups,5326,2018-06-08T06:57:01Z,2018-12-06T19:42:23Z,2018-12-06T19:42:24Z,CLOSED,False,31,0,1,https://github.com/zdohnal,adding lpr --help option,1,['enhancement'],https://github.com/apple/cups/pull/5326,https://github.com/zdohnal,5,https://github.com/apple/cups/pull/5326#issuecomment-413158553,"Hi Mike,
currently I'm doing another cleanup in CUPS on Fedora and I found some patches from which can help CUPS itself. This one is about adding --help parameter to lpr command.
Do you find it usable?","I didn't forget about this issue - I'll get into it in near future, I hope :(",True,{}
apple/cups,https://github.com/apple/cups,5326,2018-06-08T06:57:01Z,2018-12-06T19:42:23Z,2018-12-06T19:42:24Z,CLOSED,False,31,0,1,https://github.com/zdohnal,adding lpr --help option,1,['enhancement'],https://github.com/apple/cups/pull/5326,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5326#issuecomment-445003669,"Hi Mike,
currently I'm doing another cleanup in CUPS on Fedora and I found some patches from which can help CUPS itself. This one is about adding --help parameter to lpr command.
Do you find it usable?","OK, I've pushed a full set of changes so that all user commands now support --help.",True,{}
apple/cups,https://github.com/apple/cups,5328,2018-06-08T12:07:38Z,2020-11-27T07:02:22Z,2020-11-27T07:02:22Z,CLOSED,False,18,0,1,https://github.com/zdohnal,adds logging when job fails due bad required conversion,1,['enhancement'],https://github.com/apple/cups/pull/5328,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5328,This one adds messages to the log when job failed due bad required conversion and proposes available conversions for usage.,This one adds messages to the log when job failed due bad required conversion and proposes available conversions for usage.,True,{}
apple/cups,https://github.com/apple/cups,5328,2018-06-08T12:07:38Z,2020-11-27T07:02:22Z,2020-11-27T07:02:22Z,CLOSED,False,18,0,1,https://github.com/zdohnal,adds logging when job fails due bad required conversion,1,['enhancement'],https://github.com/apple/cups/pull/5328,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5328#issuecomment-395747190,This one adds messages to the log when job failed due bad required conversion and proposes available conversions for usage.,"Well, we should never get in this state since we won’t accept a job in a format we can’t convert... will have to think on this one...
Also, we already log the filters on startup when debug logging is enabled. Don’t think we want to log them again for every failed job (a lot of log entries)",True,{}
apple/cups,https://github.com/apple/cups,5328,2018-06-08T12:07:38Z,2020-11-27T07:02:22Z,2020-11-27T07:02:22Z,CLOSED,False,18,0,1,https://github.com/zdohnal,adds logging when job fails due bad required conversion,1,['enhancement'],https://github.com/apple/cups/pull/5328,https://github.com/zdohnal,3,https://github.com/apple/cups/pull/5328#issuecomment-395760610,This one adds messages to the log when job failed due bad required conversion and proposes available conversions for usage.,Sounds reasonable... then what about removing the first message and have the latter for DEBUG2 level?,True,{}
apple/cups,https://github.com/apple/cups,5328,2018-06-08T12:07:38Z,2020-11-27T07:02:22Z,2020-11-27T07:02:22Z,CLOSED,False,18,0,1,https://github.com/zdohnal,adds logging when job fails due bad required conversion,1,['enhancement'],https://github.com/apple/cups/pull/5328,https://github.com/zdohnal,4,https://github.com/apple/cups/pull/5328#issuecomment-413158563,This one adds messages to the log when job failed due bad required conversion and proposes available conversions for usage.,"I didn't forget about this issue - I'll get into it in near future, I hope :(",True,{}
apple/cups,https://github.com/apple/cups,5328,2018-06-08T12:07:38Z,2020-11-27T07:02:22Z,2020-11-27T07:02:22Z,CLOSED,False,18,0,1,https://github.com/zdohnal,adds logging when job fails due bad required conversion,1,['enhancement'],https://github.com/apple/cups/pull/5328,https://github.com/zdohnal,5,https://github.com/apple/cups/pull/5328#issuecomment-734679970,This one adds messages to the log when job failed due bad required conversion and proposes available conversions for usage.,"Ok, I re-evaluated  the issue and it doesn't seem worth the pros.",True,{}
apple/cups,https://github.com/apple/cups,5329,2018-06-08T15:11:01Z,2018-10-29T17:42:35Z,2018-10-29T17:42:35Z,CLOSED,False,6,0,1,https://github.com/zdohnal,Add device ID for Dymo LabelWriter 400,2,['enhancement'],https://github.com/apple/cups/pull/5329,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5329,SSIA,SSIA,True,{}
apple/cups,https://github.com/apple/cups,5329,2018-06-08T15:11:01Z,2018-10-29T17:42:35Z,2018-10-29T17:42:35Z,CLOSED,False,6,0,1,https://github.com/zdohnal,Add device ID for Dymo LabelWriter 400,2,['enhancement'],https://github.com/apple/cups/pull/5329,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5329#issuecomment-395912331,SSIA,"There are other printers this driver works with, so I'm not sure I want to tie this driver to it...
Is there a reason you need this?",True,{}
apple/cups,https://github.com/apple/cups,5329,2018-06-08T15:11:01Z,2018-10-29T17:42:35Z,2018-10-29T17:42:35Z,CLOSED,False,6,0,1,https://github.com/zdohnal,Add device ID for Dymo LabelWriter 400,2,['enhancement'],https://github.com/apple/cups/pull/5329,https://github.com/zdohnal,3,https://github.com/apple/cups/pull/5329#issuecomment-396238806,SSIA,"I'm sorry, you're right - I made a mistake - I reviewed the patch badly, setting the ppd for only LabelWriter is not okay...
About the reason: Once there was Fedora user, who had a problem with installing his Dymo LabelWriter 400 - he got a bad ppd file and Tim fixed it by the patch above. There is the report https://bugzilla.redhat.com/show_bug.cgi?id=747866 . Dymo LabelWriter 400 doesn't have any support in foomatic or gutenprint and cups dymo ppd worked for user.
Is it acceptable to have another ppd in CUPS for LabelWriter (see updated patch) or should I pursue this issue in f.e. foomatic, because ppds are going away?",True,{}
apple/cups,https://github.com/apple/cups,5329,2018-06-08T15:11:01Z,2018-10-29T17:42:35Z,2018-10-29T17:42:35Z,CLOSED,False,6,0,1,https://github.com/zdohnal,Add device ID for Dymo LabelWriter 400,2,['enhancement'],https://github.com/apple/cups/pull/5329,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5329#issuecomment-396300637,SSIA,"@zdohnal It isn't just PPDs that are going away, it is drivers (including foomatic!)
We'll have some discussions amongst ourselves - I hesitate to add a new driver while we are in the process of getting rid of them...",True,{}
apple/cups,https://github.com/apple/cups,5329,2018-06-08T15:11:01Z,2018-10-29T17:42:35Z,2018-10-29T17:42:35Z,CLOSED,False,6,0,1,https://github.com/zdohnal,Add device ID for Dymo LabelWriter 400,2,['enhancement'],https://github.com/apple/cups/pull/5329,https://github.com/zdohnal,5,https://github.com/apple/cups/pull/5329#issuecomment-396307227,SSIA,"@michaelrsweet ok, I understood the printer driver projects will stay, because printer applications (ipp server + printer driver project such Gutenprint/Foomatic) can have use for them when managing old legacy printers, which don't support IPP everywhere...
Is there a way in .drv file to tell: ""Please use this ppd with this printer too""? I was unable to find such way... if there is not, we can close the pull request.",True,{}
apple/cups,https://github.com/apple/cups,5329,2018-06-08T15:11:01Z,2018-10-29T17:42:35Z,2018-10-29T17:42:35Z,CLOSED,False,6,0,1,https://github.com/zdohnal,Add device ID for Dymo LabelWriter 400,2,['enhancement'],https://github.com/apple/cups/pull/5329,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5329#issuecomment-396312350,SSIA,"@zdohnal Printer driver projects, yes, but I'm (perhaps too optimistically) hoping that Foomatic will no longer be needed.
The 1284DeviceID and NickName strings are the ones used for driver matching. We aren't technically adding another driver here, but historically we haven't provided printer-specific values. Maybe we can do something with the MFG and CMD values so we match any Dymo printer?",True,{}
apple/cups,https://github.com/apple/cups,5329,2018-06-08T15:11:01Z,2018-10-29T17:42:35Z,2018-10-29T17:42:35Z,CLOSED,False,6,0,1,https://github.com/zdohnal,Add device ID for Dymo LabelWriter 400,2,['enhancement'],https://github.com/apple/cups/pull/5329,https://github.com/zdohnal,7,https://github.com/apple/cups/pull/5329#issuecomment-413158538,SSIA,"I didn't forget about this issue - I'll get into it in near future, I hope :(",True,{}
apple/cups,https://github.com/apple/cups,5330,2018-06-08T20:39:40Z,2018-06-11T13:39:00Z,2018-06-11T13:39:00Z,CLOSED,False,10,14,1,https://github.com/heftig,Fix validation rejecting all NAME and TEXT attrs,1,[],https://github.com/apple/cups/pull/5330,https://github.com/heftig,1,https://github.com/apple/cups/pull/5330,"When the UTF-8 validation loop finishes successfully, *ptr points at
the '\0' at the end of the string. The code misinterpreted this as a
control character (*ptr < ' ') and failed the validation.
Fixes #5325","When the UTF-8 validation loop finishes successfully, *ptr points at
the '\0' at the end of the string. The code misinterpreted this as a
control character (*ptr < ' ') and failed the validation.
Fixes #5325",True,{}
apple/cups,https://github.com/apple/cups,5330,2018-06-08T20:39:40Z,2018-06-11T13:39:00Z,2018-06-11T13:39:00Z,CLOSED,False,10,14,1,https://github.com/heftig,Fix validation rejecting all NAME and TEXT attrs,1,[],https://github.com/apple/cups/pull/5330,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5330#issuecomment-396246242,"When the UTF-8 validation loop finishes successfully, *ptr points at
the '\0' at the end of the string. The code misinterpreted this as a
control character (*ptr < ' ') and failed the validation.
Fixes #5325","I've chosen to fix this a little differently:
[master 592a7a7b5] Fix regressions in ippValidateAttribute (Issue #5322, Issue #5330)
[branch-2.2 18545a5] Fix regressions in ippValidateAttribute (Issue #5322, Issue #5330)",True,{}
apple/cups,https://github.com/apple/cups,5332,2018-06-09T09:36:18Z,2018-06-11T13:23:11Z,2018-06-11T16:15:59Z,MERGED,True,1,1,1,https://github.com/felixonmars,Fix a typo in snmp.c,1,['priority-low'],https://github.com/apple/cups/pull/5332,https://github.com/felixonmars,1,https://github.com/apple/cups/pull/5332,,,True,{}
apple/cups,https://github.com/apple/cups,5337,2018-06-11T15:59:43Z,2018-06-19T01:47:05Z,2018-06-25T09:34:09Z,CLOSED,False,33,42,1,https://github.com/zdohnal,log history for journal,1,['enhancement'],https://github.com/apple/cups/pull/5337,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5337,"Hi Mike,
when I was reproducing Fedora bug https://bugzilla.redhat.com/show_bug.cgi?id=1589593 , I found out the LogLevel directive is ignored when I have logging set to syslog (systemd-journald in Fedora) when LogDebugHistory is greater than 0 (I have it set to 200, according gdb).
To track the fix I looked more into cupsdLogJob function and found out there is job logs history tracked for no-systemd OS - so to solve 'ignoring issue' I implemented this patch, which now correctly respects the LogLevels (tested) and has job logs history for systemd OS (this one needs testing).
I tested it by changing where ErrorLog goes (syslog, /var/log/cups) and changing LogLevels (none, warn, debug2), but I don't know how to test job logs history feature.
Would CUPS benefit from this patch?","Hi Mike,
when I was reproducing Fedora bug https://bugzilla.redhat.com/show_bug.cgi?id=1589593 , I found out the LogLevel directive is ignored when I have logging set to syslog (systemd-journald in Fedora) when LogDebugHistory is greater than 0 (I have it set to 200, according gdb).
To track the fix I looked more into cupsdLogJob function and found out there is job logs history tracked for no-systemd OS - so to solve 'ignoring issue' I implemented this patch, which now correctly respects the LogLevels (tested) and has job logs history for systemd OS (this one needs testing).
I tested it by changing where ErrorLog goes (syslog, /var/log/cups) and changing LogLevels (none, warn, debug2), but I don't know how to test job logs history feature.
Would CUPS benefit from this patch?",True,{}
apple/cups,https://github.com/apple/cups,5337,2018-06-11T15:59:43Z,2018-06-19T01:47:05Z,2018-06-25T09:34:09Z,CLOSED,False,33,42,1,https://github.com/zdohnal,log history for journal,1,['enhancement'],https://github.com/apple/cups/pull/5337,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5337#issuecomment-396297800,"Hi Mike,
when I was reproducing Fedora bug https://bugzilla.redhat.com/show_bug.cgi?id=1589593 , I found out the LogLevel directive is ignored when I have logging set to syslog (systemd-journald in Fedora) when LogDebugHistory is greater than 0 (I have it set to 200, according gdb).
To track the fix I looked more into cupsdLogJob function and found out there is job logs history tracked for no-systemd OS - so to solve 'ignoring issue' I implemented this patch, which now correctly respects the LogLevels (tested) and has job logs history for systemd OS (this one needs testing).
I tested it by changing where ErrorLog goes (syslog, /var/log/cups) and changing LogLevels (none, warn, debug2), but I don't know how to test job logs history feature.
Would CUPS benefit from this patch?","I'll need to look at this a little more, but I think we'll take this.",True,{}
apple/cups,https://github.com/apple/cups,5337,2018-06-11T15:59:43Z,2018-06-19T01:47:05Z,2018-06-25T09:34:09Z,CLOSED,False,33,42,1,https://github.com/zdohnal,log history for journal,1,['enhancement'],https://github.com/apple/cups/pull/5337,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5337#issuecomment-398248192,"Hi Mike,
when I was reproducing Fedora bug https://bugzilla.redhat.com/show_bug.cgi?id=1589593 , I found out the LogLevel directive is ignored when I have logging set to syslog (systemd-journald in Fedora) when LogDebugHistory is greater than 0 (I have it set to 200, according gdb).
To track the fix I looked more into cupsdLogJob function and found out there is job logs history tracked for no-systemd OS - so to solve 'ignoring issue' I implemented this patch, which now correctly respects the LogLevels (tested) and has job logs history for systemd OS (this one needs testing).
I tested it by changing where ErrorLog goes (syslog, /var/log/cups) and changing LogLevels (none, warn, debug2), but I don't know how to test job logs history feature.
Would CUPS benefit from this patch?","Pushed a slightly different change:
[master 945c83b] Fix auto-debug logging of job errors with systemd (Issue #5337)
[branch-2.2 ae9f0b2] Fix auto-debug logging of job errors with systemd (Issue #5337)",True,{}
apple/cups,https://github.com/apple/cups,5337,2018-06-11T15:59:43Z,2018-06-19T01:47:05Z,2018-06-25T09:34:09Z,CLOSED,False,33,42,1,https://github.com/zdohnal,log history for journal,1,['enhancement'],https://github.com/apple/cups/pull/5337,https://github.com/zdohnal,4,https://github.com/apple/cups/pull/5337#issuecomment-399891472,"Hi Mike,
when I was reproducing Fedora bug https://bugzilla.redhat.com/show_bug.cgi?id=1589593 , I found out the LogLevel directive is ignored when I have logging set to syslog (systemd-journald in Fedora) when LogDebugHistory is greater than 0 (I have it set to 200, according gdb).
To track the fix I looked more into cupsdLogJob function and found out there is job logs history tracked for no-systemd OS - so to solve 'ignoring issue' I implemented this patch, which now correctly respects the LogLevels (tested) and has job logs history for systemd OS (this one needs testing).
I tested it by changing where ErrorLog goes (syslog, /var/log/cups) and changing LogLevels (none, warn, debug2), but I don't know how to test job logs history feature.
Would CUPS benefit from this patch?","LGTM! Thanks, Mike!",True,{}
apple/cups,https://github.com/apple/cups,5339,2018-06-12T08:28:18Z,2018-06-12T12:36:52Z,2018-06-12T12:37:04Z,MERGED,True,82,74,1,https://github.com/MingcongBai,locale/zh_CN: complete translation,1,['priority-low'],https://github.com/apple/cups/pull/5339,https://github.com/MingcongBai,1,https://github.com/apple/cups/pull/5339,"Just general completion.
One typo introduced from my last submission was fixed.","Just general completion.
One typo introduced from my last submission was fixed.",True,{}
apple/cups,https://github.com/apple/cups,5345,2018-06-29T17:48:16Z,2018-09-28T15:16:15Z,2018-09-28T15:16:15Z,CLOSED,False,107,1,1,https://github.com/tillkamppeter,PPDs for driverless printing: Make jobs be printed in correct order for face-up/face-down,3,['priority-medium'],https://github.com/apple/cups/pull/5345,https://github.com/tillkamppeter,1,https://github.com/apple/cups/pull/5345,"In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.","In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.",True,{}
apple/cups,https://github.com/apple/cups,5345,2018-06-29T17:48:16Z,2018-09-28T15:16:15Z,2018-09-28T15:16:15Z,CLOSED,False,107,1,1,https://github.com/tillkamppeter,PPDs for driverless printing: Make jobs be printed in correct order for face-up/face-down,3,['priority-medium'],https://github.com/apple/cups/pull/5345,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5345#issuecomment-401445422,"In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.","Till, I appreciate the pull request but the current changes have issues. See my comments...",True,{}
apple/cups,https://github.com/apple/cups,5345,2018-06-29T17:48:16Z,2018-09-28T15:16:15Z,2018-09-28T15:16:15Z,CLOSED,False,107,1,1,https://github.com/tillkamppeter,PPDs for driverless printing: Make jobs be printed in correct order for face-up/face-down,3,['priority-medium'],https://github.com/apple/cups/pull/5345,https://github.com/tillkamppeter,3,https://github.com/apple/cups/pull/5345#issuecomment-401462854,"In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.",I have fixed the two issues now.,True,{}
apple/cups,https://github.com/apple/cups,5345,2018-06-29T17:48:16Z,2018-09-28T15:16:15Z,2018-09-28T15:16:15Z,CLOSED,False,107,1,1,https://github.com/tillkamppeter,PPDs for driverless printing: Make jobs be printed in correct order for face-up/face-down,3,['priority-medium'],https://github.com/apple/cups/pull/5345,https://github.com/tudor2k3,4,https://github.com/apple/cups/pull/5345#issuecomment-401804026,"In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.","Hello,
 Is this also a fix for my Canon IR C1225 not respecting long-edge/short-edge duplex printing? Or do i have to open a different bug?

                 Thank you.",True,{}
apple/cups,https://github.com/apple/cups,5345,2018-06-29T17:48:16Z,2018-09-28T15:16:15Z,2018-09-28T15:16:15Z,CLOSED,False,107,1,1,https://github.com/tillkamppeter,PPDs for driverless printing: Make jobs be printed in correct order for face-up/face-down,3,['priority-medium'],https://github.com/apple/cups/pull/5345,https://github.com/tillkamppeter,5,https://github.com/apple/cups/pull/5345#issuecomment-401805338,"In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.","@tudor2k3, please open a separate issue, as this one is only for OutputOrder as it does not do more than adding lines concerning the output order to the PPD.",True,{}
apple/cups,https://github.com/apple/cups,5345,2018-06-29T17:48:16Z,2018-09-28T15:16:15Z,2018-09-28T15:16:15Z,CLOSED,False,107,1,1,https://github.com/tillkamppeter,PPDs for driverless printing: Make jobs be printed in correct order for face-up/face-down,3,['priority-medium'],https://github.com/apple/cups/pull/5345,https://github.com/tillkamppeter,6,https://github.com/apple/cups/pull/5345#issuecomment-408534095,"In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.",Is there still anything to be fixed on my pull request?,True,{}
apple/cups,https://github.com/apple/cups,5345,2018-06-29T17:48:16Z,2018-09-28T15:16:15Z,2018-09-28T15:16:15Z,CLOSED,False,107,1,1,https://github.com/tillkamppeter,PPDs for driverless printing: Make jobs be printed in correct order for face-up/face-down,3,['priority-medium'],https://github.com/apple/cups/pull/5345,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5345#issuecomment-408727025,"In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.","Till, I haven't had a chance to review this fully, and since I am on a summer break at the moment it won't be happening anytime soon. Don't expect anything to happen until the end of August at the earliest.",True,{}
apple/cups,https://github.com/apple/cups,5345,2018-06-29T17:48:16Z,2018-09-28T15:16:15Z,2018-09-28T15:16:15Z,CLOSED,False,107,1,1,https://github.com/tillkamppeter,PPDs for driverless printing: Make jobs be printed in correct order for face-up/face-down,3,['priority-medium'],https://github.com/apple/cups/pull/5345,https://github.com/michaelrsweet,8,https://github.com/apple/cups/pull/5345#issuecomment-425460443,"In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.","@tillkamppeter You are still using the non-portable strcasestr function...  Since these values are case sensitive, it should just be a matter of changing to strstr.
There are some other potential optimizations I'll look at doing as well...",True,{}
apple/cups,https://github.com/apple/cups,5345,2018-06-29T17:48:16Z,2018-09-28T15:16:15Z,2018-09-28T15:16:15Z,CLOSED,False,107,1,1,https://github.com/tillkamppeter,PPDs for driverless printing: Make jobs be printed in correct order for face-up/face-down,3,['priority-medium'],https://github.com/apple/cups/pull/5345,https://github.com/michaelrsweet,9,https://github.com/apple/cups/pull/5345#issuecomment-425469247,"In #5315 and OpenPrinting/cups-filters#47 a user complained about that on printers which stack up their output pages face-up the pages should get printed in reverse order.
I have investigated this and the main problem is that many PPD files are missing the appropriate information about how the paper gets stacked.
In case of driverless printing the answers to the get-printer-attributes request always contains the needed information. Either the names of the output-bins (attributes ""output-bin-supported"", ""output-bin-default"" are named ""face-up"" or ""face-down"" or there is an array named ""printer-output-tray"" with the same number of items as ""output-bin-supported"", describing the properties of each output bin, especially telling about the way the pages get stacked (PWG 5100.13 – IPP: Job and Printer Extensions – Set 3, section 5.6.36).
The patch (which I also have applied to the PPD generator of cups-filters) makes this information available in the generated PPD files for driverless printing. Once, the PPD file gets a ""*DefaultOutputOrder: ..."" line with either ""Normal"" or ""Reverse"" as value, the latter indicating that the pages get stackked face-up in the default tray and therefore the pages need to get printed in reverse order (which pdftopdf of cups-filters takes care of in this case). Second, if the PPD has an ""OutputBin"" option, I add a ""*PageStackOrder ..."" line to each choice of the ""OutputBin"" option telling whether this bin is face-up or face-down. Also this is taken care of by pdftopdf (see ""*OutputOrder"", p124, and ""*PageStackOrder"", p125, in Adobe's PPD specs).
This way printers set up with driverless printing of CUPS should print the jobs in the correct order with respect to the fact that they stack their output face-up or face-down.","[master bf86060] Support face-up printers (Issue #5345)
[branch-2.2 fe1fac1] Support face-up printers (Issue #5345)",True,{}
apple/cups,https://github.com/apple/cups,5348,2018-07-04T20:35:29Z,2018-07-18T18:25:10Z,2018-07-18T18:25:10Z,MERGED,True,2,2,2,https://github.com/snifbr,Some fixes about pt_BR translate,2,['priority-low'],https://github.com/apple/cups/pull/5348,https://github.com/snifbr,1,https://github.com/apple/cups/pull/5348,"I did a new deploy of cups (version 2.2.7) today in a fresh ubuntu 18.04 installation and found:

one bug in templates/pt_BR/job-header.tmpl; and


When someone click on button ""Mostrar trabalhos concluídos"", the value passed is wrong.


one translate error in templates/pt_BR/header.tpml.


At cups interface header the translanting of ""Admin"" is wrong.

So I'd like put my contributing here.","I did a new deploy of cups (version 2.2.7) today in a fresh ubuntu 18.04 installation and found:

one bug in templates/pt_BR/job-header.tmpl; and


When someone click on button ""Mostrar trabalhos concluídos"", the value passed is wrong.


one translate error in templates/pt_BR/header.tpml.


At cups interface header the translanting of ""Admin"" is wrong.

So I'd like put my contributing here.",True,{}
apple/cups,https://github.com/apple/cups,5350,2018-07-08T00:29:42Z,2018-07-18T18:22:58Z,2018-07-18T18:22:58Z,MERGED,True,22,22,2,https://github.com/benlees,Correct typos in rastertolabel,5,['priority-low'],https://github.com/apple/cups/pull/5350,https://github.com/benlees,1,https://github.com/apple/cups/pull/5350,"Whilst testing changes for #5092 (see rastertolabel-mods branch), I noticed a few typos in rastertolabel.

Zebra CPCL output appears to specify the PAGE-HEIGHT as header->cupsWidth.
Intellitech print density outputs an unsigned integer, where a signed integer is required
Related to the Intellitech print density, the values for cupsCompression in sample.drv produce the wrong output.","Whilst testing changes for #5092 (see rastertolabel-mods branch), I noticed a few typos in rastertolabel.

Zebra CPCL output appears to specify the PAGE-HEIGHT as header->cupsWidth.
Intellitech print density outputs an unsigned integer, where a signed integer is required
Related to the Intellitech print density, the values for cupsCompression in sample.drv produce the wrong output.",True,{}
apple/cups,https://github.com/apple/cups,5369,2018-08-07T14:43:19Z,2018-08-19T13:06:38Z,2018-08-19T13:06:38Z,CLOSED,False,8,0,1,https://github.com/JackGrinningCat,Update man-lpadmin.html to document -E as option,1,['priority-low'],https://github.com/apple/cups/pull/5369,https://github.com/JackGrinningCat,1,https://github.com/apple/cups/pull/5369,"Added -E before -x -p -d as documented option.
Added example with description of usage of -E as enabled and -E for enforced encryption.","Added -E before -x -p -d as documented option.
Added example with description of usage of -E as enabled and -E for enforced encryption.",True,{}
apple/cups,https://github.com/apple/cups,5369,2018-08-07T14:43:19Z,2018-08-19T13:06:38Z,2018-08-19T13:06:38Z,CLOSED,False,8,0,1,https://github.com/JackGrinningCat,Update man-lpadmin.html to document -E as option,1,['priority-low'],https://github.com/apple/cups/pull/5369,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5369#issuecomment-411271861,"Added -E before -x -p -d as documented option.
Added example with description of usage of -E as enabled and -E for enforced encryption.","We need to update the man page source, not the HTML...",True,{}
apple/cups,https://github.com/apple/cups,5369,2018-08-07T14:43:19Z,2018-08-19T13:06:38Z,2018-08-19T13:06:38Z,CLOSED,False,8,0,1,https://github.com/JackGrinningCat,Update man-lpadmin.html to document -E as option,1,['priority-low'],https://github.com/apple/cups/pull/5369,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5369#issuecomment-414126582,"Added -E before -x -p -d as documented option.
Added example with description of usage of -E as enabled and -E for enforced encryption.","I didn't end up adding an example, just documentation for the option and a note about the double meaning.
[master d5d6477] Update lpadmin man page (Issue #5369)
[branch-2.2 b424272] Update lpadmin man page (Issue #5369)",True,{}
apple/cups,https://github.com/apple/cups,5374,2018-08-15T10:59:29Z,2018-08-15T13:40:33Z,2018-08-15T13:53:05Z,CLOSED,False,25,1,6,https://github.com/zdohnal,Fixes based on coverity scan issues,12,[],https://github.com/apple/cups/pull/5374,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5374,"Hi Mike,
I ran static analysis by coverity scan for cups-2.2.6, which we have in Fedora 28, and fixed several issues which were reported. I'll send you initial results of scan by email (in case there are some issues, which can be exploitable).
Does it look good to you?","Hi Mike,
I ran static analysis by coverity scan for cups-2.2.6, which we have in Fedora 28, and fixed several issues which were reported. I'll send you initial results of scan by email (in case there are some issues, which can be exploitable).
Does it look good to you?",True,{}
apple/cups,https://github.com/apple/cups,5374,2018-08-15T10:59:29Z,2018-08-15T13:40:33Z,2018-08-15T13:53:05Z,CLOSED,False,25,1,6,https://github.com/zdohnal,Fixes based on coverity scan issues,12,[],https://github.com/apple/cups/pull/5374,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5374#issuecomment-413167371,"Hi Mike,
I ran static analysis by coverity scan for cups-2.2.6, which we have in Fedora 28, and fixed several issues which were reported. I'll send you initial results of scan by email (in case there are some issues, which can be exploitable).
Does it look good to you?",I'm only sending fixes for issues which are in master branch too.,True,{}
apple/cups,https://github.com/apple/cups,5374,2018-08-15T10:59:29Z,2018-08-15T13:40:33Z,2018-08-15T13:53:05Z,CLOSED,False,25,1,6,https://github.com/zdohnal,Fixes based on coverity scan issues,12,[],https://github.com/apple/cups/pull/5374,https://github.com/zdohnal,3,https://github.com/apple/cups/pull/5374#issuecomment-413200600,"Hi Mike,
I ran static analysis by coverity scan for cups-2.2.6, which we have in Fedora 28, and fixed several issues which were reported. I'll send you initial results of scan by email (in case there are some issues, which can be exploitable).
Does it look good to you?",I'll send cleaner branch...,True,{}
apple/cups,https://github.com/apple/cups,5374,2018-08-15T10:59:29Z,2018-08-15T13:40:33Z,2018-08-15T13:53:05Z,CLOSED,False,25,1,6,https://github.com/zdohnal,Fixes based on coverity scan issues,12,[],https://github.com/apple/cups/pull/5374,https://github.com/zdohnal,4,https://github.com/apple/cups/pull/5374#issuecomment-413204181,"Hi Mike,
I ran static analysis by coverity scan for cups-2.2.6, which we have in Fedora 28, and fixed several issues which were reported. I'll send you initial results of scan by email (in case there are some issues, which can be exploitable).
Does it look good to you?",See #5375,True,{}
apple/cups,https://github.com/apple/cups,5375,2018-08-15T13:52:10Z,2018-08-21T14:03:10Z,2018-09-21T08:36:47Z,CLOSED,False,25,1,6,https://github.com/zdohnal,Fixing several issues reported by coverity scan,1,['priority-low'],https://github.com/apple/cups/pull/5375,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5375,Here is cleaner commit...,Here is cleaner commit...,True,{}
apple/cups,https://github.com/apple/cups,5375,2018-08-15T13:52:10Z,2018-08-21T14:03:10Z,2018-09-21T08:36:47Z,CLOSED,False,25,1,6,https://github.com/zdohnal,Fixing several issues reported by coverity scan,1,['priority-low'],https://github.com/apple/cups/pull/5375,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5375#issuecomment-413226173,Here is cleaner commit...,"All issues in report which sent you were labeled as important, so there are other issues, but coverity doesn't count them as important.",True,{}
apple/cups,https://github.com/apple/cups,5375,2018-08-15T13:52:10Z,2018-08-21T14:03:10Z,2018-09-21T08:36:47Z,CLOSED,False,25,1,6,https://github.com/zdohnal,Fixing several issues reported by coverity scan,1,['priority-low'],https://github.com/apple/cups/pull/5375,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5375#issuecomment-414685349,Here is cleaner commit...,"I pushed changes for the full scan report to branch-2.2 and master:
[master 3416fe9] Fix memory leaks found by Coverity (Issue #5375)
[branch-2.2 1a3ff20] Fix memory leaks found by Coverity (Issue #5375)",True,{}
apple/cups,https://github.com/apple/cups,5375,2018-08-15T13:52:10Z,2018-08-21T14:03:10Z,2018-09-21T08:36:47Z,CLOSED,False,25,1,6,https://github.com/zdohnal,Fixing several issues reported by coverity scan,1,['priority-low'],https://github.com/apple/cups/pull/5375,https://github.com/zdohnal,4,https://github.com/apple/cups/pull/5375#issuecomment-416137574,Here is cleaner commit...,"I apologize for late reply, I was on vacation last week - I'll run it through coverity scan and I'll check with you about results.",True,{}
apple/cups,https://github.com/apple/cups,5375,2018-08-15T13:52:10Z,2018-08-21T14:03:10Z,2018-09-21T08:36:47Z,CLOSED,False,25,1,6,https://github.com/zdohnal,Fixing several issues reported by coverity scan,1,['priority-low'],https://github.com/apple/cups/pull/5375,https://github.com/zdohnal,5,https://github.com/apple/cups/pull/5375#issuecomment-423458534,Here is cleaner commit...,"I checked the commit with coverity - the results are okay, no new important reports. Thank you!",True,{}
apple/cups,https://github.com/apple/cups,5393,2018-09-04T11:03:52Z,2018-09-10T14:36:54Z,2018-09-10T14:37:05Z,CLOSED,False,1,0,1,https://github.com/zdohnal,cc->ssl_options needs to be initialized,1,[],https://github.com/apple/cups/pull/5393,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5393,"Hi Mike,
I was backporting MinTLS/MaxTLS functionality from 2.2.8 to 2.2.6 and I found out when you don't have any 'SSLOptions' directive in client.conf, then cc->ssl_options isn't initialized and has undefined value. And that undefined value is used in other functions and can cause troubles.
Would you mind merging this patch? It is just initialization and I and user who had troubles tested it and it worked.","Hi Mike,
I was backporting MinTLS/MaxTLS functionality from 2.2.8 to 2.2.6 and I found out when you don't have any 'SSLOptions' directive in client.conf, then cc->ssl_options isn't initialized and has undefined value. And that undefined value is used in other functions and can cause troubles.
Would you mind merging this patch? It is just initialization and I and user who had troubles tested it and it worked.",True,{}
apple/cups,https://github.com/apple/cups,5393,2018-09-04T11:03:52Z,2018-09-10T14:36:54Z,2018-09-10T14:37:05Z,CLOSED,False,1,0,1,https://github.com/zdohnal,cc->ssl_options needs to be initialized,1,[],https://github.com/apple/cups/pull/5393,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5393#issuecomment-419936231,"Hi Mike,
I was backporting MinTLS/MaxTLS functionality from 2.2.8 to 2.2.6 and I found out when you don't have any 'SSLOptions' directive in client.conf, then cc->ssl_options isn't initialized and has undefined value. And that undefined value is used in other functions and can cause troubles.
Would you mind merging this patch? It is just initialization and I and user who had troubles tested it and it worked.","Um, that function does a memset of the whole conf struct to 0. Initializing ssl_options to 0 here is unnecessary...",True,{}
apple/cups,https://github.com/apple/cups,5398,2018-09-17T11:43:27Z,2018-09-18T15:42:16Z,2018-09-18T15:57:07Z,CLOSED,False,6,6,1,https://github.com/zdohnal,Create more general message from job.c,1,['enhancement'],https://github.com/apple/cups/pull/5398,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5398,"Hi Mike,
some users ( https://bugzilla.redhat.com/show_bug.cgi?id=1629677 ) can be confused by messages from job.c about seeing logs in error_log, but system default is set to syslog. I tried to create more general message with mentioning of cups-files.conf:
""XXXXXXXXXXXXXXXXXXXXX; please consult logs for details. See where log location is in cups-files.conf.""
Is it acceptable for CUPS to accept such change in the message? I hope it can help against user's confusion...","Hi Mike,
some users ( https://bugzilla.redhat.com/show_bug.cgi?id=1629677 ) can be confused by messages from job.c about seeing logs in error_log, but system default is set to syslog. I tried to create more general message with mentioning of cups-files.conf:
""XXXXXXXXXXXXXXXXXXXXX; please consult logs for details. See where log location is in cups-files.conf.""
Is it acceptable for CUPS to accept such change in the message? I hope it can help against user's confusion...",True,{}
apple/cups,https://github.com/apple/cups,5398,2018-09-17T11:43:27Z,2018-09-18T15:42:16Z,2018-09-18T15:57:07Z,CLOSED,False,6,6,1,https://github.com/zdohnal,Create more general message from job.c,1,['enhancement'],https://github.com/apple/cups/pull/5398,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5398#issuecomment-422416699,"Hi Mike,
some users ( https://bugzilla.redhat.com/show_bug.cgi?id=1629677 ) can be confused by messages from job.c about seeing logs in error_log, but system default is set to syslog. I tried to create more general message with mentioning of cups-files.conf:
""XXXXXXXXXXXXXXXXXXXXX; please consult logs for details. See where log location is in cups-files.conf.""
Is it acceptable for CUPS to accept such change in the message? I hope it can help against user's confusion...",No reason we can't just report the location...,True,{}
apple/cups,https://github.com/apple/cups,5398,2018-09-17T11:43:27Z,2018-09-18T15:42:16Z,2018-09-18T15:57:07Z,CLOSED,False,6,6,1,https://github.com/zdohnal,Create more general message from job.c,1,['enhancement'],https://github.com/apple/cups/pull/5398,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5398#issuecomment-422445141,"Hi Mike,
some users ( https://bugzilla.redhat.com/show_bug.cgi?id=1629677 ) can be confused by messages from job.c about seeing logs in error_log, but system default is set to syslog. I tried to create more general message with mentioning of cups-files.conf:
""XXXXXXXXXXXXXXXXXXXXX; please consult logs for details. See where log location is in cups-files.conf.""
Is it acceptable for CUPS to accept such change in the message? I hope it can help against user's confusion...",[branch-2.2 b485551] Log actual location of error_log (Issue #5398),True,{}
apple/cups,https://github.com/apple/cups,5398,2018-09-17T11:43:27Z,2018-09-18T15:42:16Z,2018-09-18T15:57:07Z,CLOSED,False,6,6,1,https://github.com/zdohnal,Create more general message from job.c,1,['enhancement'],https://github.com/apple/cups/pull/5398,https://github.com/zdohnal,4,https://github.com/apple/cups/pull/5398#issuecomment-422450200,"Hi Mike,
some users ( https://bugzilla.redhat.com/show_bug.cgi?id=1629677 ) can be confused by messages from job.c about seeing logs in error_log, but system default is set to syslog. I tried to create more general message with mentioning of cups-files.conf:
""XXXXXXXXXXXXXXXXXXXXX; please consult logs for details. See where log location is in cups-files.conf.""
Is it acceptable for CUPS to accept such change in the message? I hope it can help against user's confusion...","You're faster than me :)  - but I'm glad I would solved it the same way as you after you give an idea about telling actual place of logs. But I forgot about emptiness of ErrorLog, so still way to go.",True,{}
apple/cups,https://github.com/apple/cups,5408,2018-10-04T13:21:45Z,2018-11-07T15:41:08Z,2018-11-07T15:41:08Z,CLOSED,False,1,1,1,https://github.com/victor-oliveira1,Update index.html.in,1,['priority-low'],https://github.com/apple/cups/pull/5408,https://github.com/victor-oliveira1,1,https://github.com/apple/cups/pull/5408,"The translation is wrong.
Instead of Administrarção it's Administração.","The translation is wrong.
Instead of Administrarção it's Administração.",True,{}
apple/cups,https://github.com/apple/cups,5408,2018-10-04T13:21:45Z,2018-11-07T15:41:08Z,2018-11-07T15:41:08Z,CLOSED,False,1,1,1,https://github.com/victor-oliveira1,Update index.html.in,1,['priority-low'],https://github.com/apple/cups/pull/5408,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5408#issuecomment-436667015,"The translation is wrong.
Instead of Administrarção it's Administração.","[master 08eac60] Localization updates (Issue #5408)
[branch-2.2 37665f1] Localization updates (Issue #5408)",True,{}
apple/cups,https://github.com/apple/cups,5410,2018-10-09T05:22:45Z,2018-11-08T14:30:07Z,2018-11-08T14:30:07Z,MERGED,True,7,7,1,https://github.com/MingcongBai,locale/zh_CN: 100%,1,['priority-low'],https://github.com/apple/cups/pull/5410,https://github.com/MingcongBai,1,https://github.com/apple/cups/pull/5410,,,True,{}
apple/cups,https://github.com/apple/cups,5411,2018-10-13T00:08:55Z,2018-10-16T03:21:21Z,2018-10-16T03:21:22Z,CLOSED,False,186,128,9,https://github.com/dpronin,Update build files,1,['enhancement'],https://github.com/apple/cups/pull/5411,https://github.com/dpronin,1,https://github.com/apple/cups/pull/5411,"Updated configure, several config-scripts/*.m4, several Makefiles

in config-scripts/cups-common.m4 'AR' variable is used from environment (required for object-files compiled with -flto), in case it is not provided AR is set by searching for 'ar' program (by default as it was)
in config-scripts/cups-compiler.m4 'Os' imposed flag has been removed from OPTIM variable because it interferes with '-flto' if provided. 'Os', if required, can be improsed by CFLAGS/CXXFLAGS environment variables configurable by a user
in config-scripts/cups-opsys.m4 'CODE_SIGN' variable is set by searching for PATH to 'true' binary instead of using forcefully imposed '/usr/bin/true' because in some systems 'true' can be located in a different place. If 'true' cannot be found by this way the default behaviour is preserved and takes place (like it was)
in cups/Makefile, ppdc/Makefile, filter/Makefile, scheduler/Makefile, cgi-bin/Makefile 'LDFLAGS' is used when linking a shared library for being able to link at least with '-flto' flag. LDFLAGS should be provided always when linking, LDFLAGS as well as CFLAGS and CXXFLAGS can be set by a user whom configures a project
'configure' script updated with 'autoconf --force > configure', version 2.69 of autoconf is used","Updated configure, several config-scripts/*.m4, several Makefiles

in config-scripts/cups-common.m4 'AR' variable is used from environment (required for object-files compiled with -flto), in case it is not provided AR is set by searching for 'ar' program (by default as it was)
in config-scripts/cups-compiler.m4 'Os' imposed flag has been removed from OPTIM variable because it interferes with '-flto' if provided. 'Os', if required, can be improsed by CFLAGS/CXXFLAGS environment variables configurable by a user
in config-scripts/cups-opsys.m4 'CODE_SIGN' variable is set by searching for PATH to 'true' binary instead of using forcefully imposed '/usr/bin/true' because in some systems 'true' can be located in a different place. If 'true' cannot be found by this way the default behaviour is preserved and takes place (like it was)
in cups/Makefile, ppdc/Makefile, filter/Makefile, scheduler/Makefile, cgi-bin/Makefile 'LDFLAGS' is used when linking a shared library for being able to link at least with '-flto' flag. LDFLAGS should be provided always when linking, LDFLAGS as well as CFLAGS and CXXFLAGS can be set by a user whom configures a project
'configure' script updated with 'autoconf --force > configure', version 2.69 of autoconf is used",True,{}
apple/cups,https://github.com/apple/cups,5411,2018-10-13T00:08:55Z,2018-10-16T03:21:21Z,2018-10-16T03:21:22Z,CLOSED,False,186,128,9,https://github.com/dpronin,Update build files,1,['enhancement'],https://github.com/apple/cups/pull/5411,https://github.com/dpronin,2,https://github.com/apple/cups/pull/5411#issuecomment-429494387,"Updated configure, several config-scripts/*.m4, several Makefiles

in config-scripts/cups-common.m4 'AR' variable is used from environment (required for object-files compiled with -flto), in case it is not provided AR is set by searching for 'ar' program (by default as it was)
in config-scripts/cups-compiler.m4 'Os' imposed flag has been removed from OPTIM variable because it interferes with '-flto' if provided. 'Os', if required, can be improsed by CFLAGS/CXXFLAGS environment variables configurable by a user
in config-scripts/cups-opsys.m4 'CODE_SIGN' variable is set by searching for PATH to 'true' binary instead of using forcefully imposed '/usr/bin/true' because in some systems 'true' can be located in a different place. If 'true' cannot be found by this way the default behaviour is preserved and takes place (like it was)
in cups/Makefile, ppdc/Makefile, filter/Makefile, scheduler/Makefile, cgi-bin/Makefile 'LDFLAGS' is used when linking a shared library for being able to link at least with '-flto' flag. LDFLAGS should be provided always when linking, LDFLAGS as well as CFLAGS and CXXFLAGS can be set by a user whom configures a project
'configure' script updated with 'autoconf --force > configure', version 2.69 of autoconf is used","My system is gentoo linux
> uname -a
Linux dannftk-gentoo-host 4.18.10-gentoo-dannftk #1 SMP Mon Oct 1 12:54:09 MSK 2018 x86_64 Intel(R) Core(TM) i3-4005U CPU @ 1.70GHz GenuineIntel GNU/Linux

I checked configuring by means of the following command
AR=llvm-ar CC=clang CXX=clang++ CFLAGS=""-O2 -pipe -march=native -mtune=generic -flto -std=gnu11"" CXXFLAGS=""-O2 -pipe -march=native -mtune=generic -flto -std=gnu++17 -stdlib=libc++"" LDFLAGS=""-flto -fuse-ld=gold"" ./configure

then I ran the command to check building
make all

everything has been built successfully
Actually, I didn't touch any *.dylib and libtool specific targets in Makefile, for me to haven't been able to verify them properly in my environment, let it alone I don't have Mac to check at least *.dylib, let it be the next iteration
I could check libtool specific targets and improve them if you like me to do that. For this I should adjust my environment",True,{}
apple/cups,https://github.com/apple/cups,5411,2018-10-13T00:08:55Z,2018-10-16T03:21:21Z,2018-10-16T03:21:22Z,CLOSED,False,186,128,9,https://github.com/dpronin,Update build files,1,['enhancement'],https://github.com/apple/cups/pull/5411,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5411#issuecomment-429547365,"Updated configure, several config-scripts/*.m4, several Makefiles

in config-scripts/cups-common.m4 'AR' variable is used from environment (required for object-files compiled with -flto), in case it is not provided AR is set by searching for 'ar' program (by default as it was)
in config-scripts/cups-compiler.m4 'Os' imposed flag has been removed from OPTIM variable because it interferes with '-flto' if provided. 'Os', if required, can be improsed by CFLAGS/CXXFLAGS environment variables configurable by a user
in config-scripts/cups-opsys.m4 'CODE_SIGN' variable is set by searching for PATH to 'true' binary instead of using forcefully imposed '/usr/bin/true' because in some systems 'true' can be located in a different place. If 'true' cannot be found by this way the default behaviour is preserved and takes place (like it was)
in cups/Makefile, ppdc/Makefile, filter/Makefile, scheduler/Makefile, cgi-bin/Makefile 'LDFLAGS' is used when linking a shared library for being able to link at least with '-flto' flag. LDFLAGS should be provided always when linking, LDFLAGS as well as CFLAGS and CXXFLAGS can be set by a user whom configures a project
'configure' script updated with 'autoconf --force > configure', version 2.69 of autoconf is used","Can’t accept this as-is, but will review in detail next week.",True,{}
apple/cups,https://github.com/apple/cups,5411,2018-10-13T00:08:55Z,2018-10-16T03:21:21Z,2018-10-16T03:21:22Z,CLOSED,False,186,128,9,https://github.com/dpronin,Update build files,1,['enhancement'],https://github.com/apple/cups/pull/5411,https://github.com/dpronin,4,https://github.com/apple/cups/pull/5411#issuecomment-429640978,"Updated configure, several config-scripts/*.m4, several Makefiles

in config-scripts/cups-common.m4 'AR' variable is used from environment (required for object-files compiled with -flto), in case it is not provided AR is set by searching for 'ar' program (by default as it was)
in config-scripts/cups-compiler.m4 'Os' imposed flag has been removed from OPTIM variable because it interferes with '-flto' if provided. 'Os', if required, can be improsed by CFLAGS/CXXFLAGS environment variables configurable by a user
in config-scripts/cups-opsys.m4 'CODE_SIGN' variable is set by searching for PATH to 'true' binary instead of using forcefully imposed '/usr/bin/true' because in some systems 'true' can be located in a different place. If 'true' cannot be found by this way the default behaviour is preserved and takes place (like it was)
in cups/Makefile, ppdc/Makefile, filter/Makefile, scheduler/Makefile, cgi-bin/Makefile 'LDFLAGS' is used when linking a shared library for being able to link at least with '-flto' flag. LDFLAGS should be provided always when linking, LDFLAGS as well as CFLAGS and CXXFLAGS can be set by a user whom configures a project
'configure' script updated with 'autoconf --force > configure', version 2.69 of autoconf is used",I will be waiting for your review up impatiently,True,{}
apple/cups,https://github.com/apple/cups,5411,2018-10-13T00:08:55Z,2018-10-16T03:21:21Z,2018-10-16T03:21:22Z,CLOSED,False,186,128,9,https://github.com/dpronin,Update build files,1,['enhancement'],https://github.com/apple/cups/pull/5411,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5411#issuecomment-430065082,"Updated configure, several config-scripts/*.m4, several Makefiles

in config-scripts/cups-common.m4 'AR' variable is used from environment (required for object-files compiled with -flto), in case it is not provided AR is set by searching for 'ar' program (by default as it was)
in config-scripts/cups-compiler.m4 'Os' imposed flag has been removed from OPTIM variable because it interferes with '-flto' if provided. 'Os', if required, can be improsed by CFLAGS/CXXFLAGS environment variables configurable by a user
in config-scripts/cups-opsys.m4 'CODE_SIGN' variable is set by searching for PATH to 'true' binary instead of using forcefully imposed '/usr/bin/true' because in some systems 'true' can be located in a different place. If 'true' cannot be found by this way the default behaviour is preserved and takes place (like it was)
in cups/Makefile, ppdc/Makefile, filter/Makefile, scheduler/Makefile, cgi-bin/Makefile 'LDFLAGS' is used when linking a shared library for being able to link at least with '-flto' flag. LDFLAGS should be provided always when linking, LDFLAGS as well as CFLAGS and CXXFLAGS can be set by a user whom configures a project
'configure' script updated with 'autoconf --force > configure', version 2.69 of autoconf is used","[master c8c5ec3] Search for codesign/true, use LDFLAGS for shared libraries (Issue #5411)",True,{}
apple/cups,https://github.com/apple/cups,5411,2018-10-13T00:08:55Z,2018-10-16T03:21:21Z,2018-10-16T03:21:22Z,CLOSED,False,186,128,9,https://github.com/dpronin,Update build files,1,['enhancement'],https://github.com/apple/cups/pull/5411,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5411#issuecomment-430087195,"Updated configure, several config-scripts/*.m4, several Makefiles

in config-scripts/cups-common.m4 'AR' variable is used from environment (required for object-files compiled with -flto), in case it is not provided AR is set by searching for 'ar' program (by default as it was)
in config-scripts/cups-compiler.m4 'Os' imposed flag has been removed from OPTIM variable because it interferes with '-flto' if provided. 'Os', if required, can be improsed by CFLAGS/CXXFLAGS environment variables configurable by a user
in config-scripts/cups-opsys.m4 'CODE_SIGN' variable is set by searching for PATH to 'true' binary instead of using forcefully imposed '/usr/bin/true' because in some systems 'true' can be located in a different place. If 'true' cannot be found by this way the default behaviour is preserved and takes place (like it was)
in cups/Makefile, ppdc/Makefile, filter/Makefile, scheduler/Makefile, cgi-bin/Makefile 'LDFLAGS' is used when linking a shared library for being able to link at least with '-flto' flag. LDFLAGS should be provided always when linking, LDFLAGS as well as CFLAGS and CXXFLAGS can be set by a user whom configures a project
'configure' script updated with 'autoconf --force > configure', version 2.69 of autoconf is used","[branch-2.2 bef1d62] Search for codesign/true, use LDFLAGS for shared libraries (Issue #5411)",True,{}
apple/cups,https://github.com/apple/cups,5413,2018-10-17T14:02:20Z,2018-11-07T16:35:53Z,2018-11-07T17:05:20Z,CLOSED,False,6,1,2,https://github.com/zdohnal,Abort job with multiple files when backend fails,1,['priority-low'],https://github.com/apple/cups/pull/5413,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5413,"Hi,
there is the first shot, which gets multiple files job aborted when backend suddenly lost connection during data transfer as I wrote in email. I am lost in making such job retry - I think a recovery for retry is rather complicated - checking which file didn't print correctly and probably creating new job for the unfinished business.
This pull request is connected to issue #5359 , is it a right way to go?","Hi,
there is the first shot, which gets multiple files job aborted when backend suddenly lost connection during data transfer as I wrote in email. I am lost in making such job retry - I think a recovery for retry is rather complicated - checking which file didn't print correctly and probably creating new job for the unfinished business.
This pull request is connected to issue #5359 , is it a right way to go?",True,{}
apple/cups,https://github.com/apple/cups,5413,2018-10-17T14:02:20Z,2018-11-07T16:35:53Z,2018-11-07T17:05:20Z,CLOSED,False,6,1,2,https://github.com/zdohnal,Abort job with multiple files when backend fails,1,['priority-low'],https://github.com/apple/cups/pull/5413,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5413#issuecomment-430642626,"Hi,
there is the first shot, which gets multiple files job aborted when backend suddenly lost connection during data transfer as I wrote in email. I am lost in making such job retry - I think a recovery for retry is rather complicated - checking which file didn't print correctly and probably creating new job for the unfinished business.
This pull request is connected to issue #5359 , is it a right way to go?","I ran basic tests from project and results are good. There are expected failures (according test) and one unexpected, but without connection to the issue (4.4-subscription-ops.test failed with server-error-internal-error (Invalid group tag.))",True,{}
apple/cups,https://github.com/apple/cups,5413,2018-10-17T14:02:20Z,2018-11-07T16:35:53Z,2018-11-07T17:05:20Z,CLOSED,False,6,1,2,https://github.com/zdohnal,Abort job with multiple files when backend fails,1,['priority-low'],https://github.com/apple/cups/pull/5413,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5413#issuecomment-436688610,"Hi,
there is the first shot, which gets multiple files job aborted when backend suddenly lost connection during data transfer as I wrote in email. I am lost in making such job retry - I think a recovery for retry is rather complicated - checking which file didn't print correctly and probably creating new job for the unfinished business.
This pull request is connected to issue #5359 , is it a right way to go?","I pushed a slightly different fix, and all tests appear to pass.
[master 72a2134] Fix stuck multi-file jobs (Issue #5359, Issue #5413)
[branch-2.2 e7e33bf] Fix stuck multi-file jobs (Issue #5359, Issue #5413)",True,{}
apple/cups,https://github.com/apple/cups,5413,2018-10-17T14:02:20Z,2018-11-07T16:35:53Z,2018-11-07T17:05:20Z,CLOSED,False,6,1,2,https://github.com/zdohnal,Abort job with multiple files when backend fails,1,['priority-low'],https://github.com/apple/cups/pull/5413,https://github.com/zdohnal,4,https://github.com/apple/cups/pull/5413#issuecomment-436699502,"Hi,
there is the first shot, which gets multiple files job aborted when backend suddenly lost connection during data transfer as I wrote in email. I am lost in making such job retry - I think a recovery for retry is rather complicated - checking which file didn't print correctly and probably creating new job for the unfinished business.
This pull request is connected to issue #5359 , is it a right way to go?","Thank you, Mike! I'll test it tomorrow!",True,{}
apple/cups,https://github.com/apple/cups,5435,2018-11-12T23:23:33Z,2018-11-14T14:46:25Z,2018-11-14T14:46:26Z,CLOSED,False,1,1,1,https://github.com/hansmi,Avoid truncation when encoding Kerberos token,1,['priority-medium'],https://github.com/apple/cups/pull/5435,https://github.com/hansmi,1,https://github.com/apple/cups/pull/5435,"The ""httpEncode64_2"" function appends padding (0-3x ""=""). The buffer
size calculation in ""_cupsSetNegotiateAuthString"" did the calculation
wrongly and would have a buffer overflow for tokens of size (N * 4)
+ 1 and (N * 4) + 2. With this change the buffer size is computed
correctly.
See commit message for detailed calculation.","The ""httpEncode64_2"" function appends padding (0-3x ""=""). The buffer
size calculation in ""_cupsSetNegotiateAuthString"" did the calculation
wrongly and would have a buffer overflow for tokens of size (N * 4)
+ 1 and (N * 4) + 2. With this change the buffer size is computed
correctly.
See commit message for detailed calculation.",True,{}
apple/cups,https://github.com/apple/cups,5435,2018-11-12T23:23:33Z,2018-11-14T14:46:25Z,2018-11-14T14:46:26Z,CLOSED,False,1,1,1,https://github.com/hansmi,Avoid truncation when encoding Kerberos token,1,['priority-medium'],https://github.com/apple/cups/pull/5435,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5435#issuecomment-438268842,"The ""httpEncode64_2"" function appends padding (0-3x ""=""). The buffer
size calculation in ""_cupsSetNegotiateAuthString"" did the calculation
wrongly and would have a buffer overflow for tokens of size (N * 4)
+ 1 and (N * 4) + 2. With this change the buffer size is computed
correctly.
See commit message for detailed calculation.","Changing the title to reflect the issue - httpEncode64_2 won't overflow, it will truncate.",True,{}
apple/cups,https://github.com/apple/cups,5435,2018-11-12T23:23:33Z,2018-11-14T14:46:25Z,2018-11-14T14:46:26Z,CLOSED,False,1,1,1,https://github.com/hansmi,Avoid truncation when encoding Kerberos token,1,['priority-medium'],https://github.com/apple/cups/pull/5435,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5435#issuecomment-438686464,"The ""httpEncode64_2"" function appends padding (0-3x ""=""). The buffer
size calculation in ""_cupsSetNegotiateAuthString"" did the calculation
wrongly and would have a buffer overflow for tokens of size (N * 4)
+ 1 and (N * 4) + 2. With this change the buffer size is computed
correctly.
See commit message for detailed calculation.","[master ef2f369] Fix potential truncation of Kerberos credentials (Issue #5435)
[branch-2.2 fe35d60] Fix potential truncation of Kerberos credentials (Issue #5435)",True,{}
apple/cups,https://github.com/apple/cups,5451,2018-12-08T12:19:15Z,2018-12-08T13:14:27Z,2018-12-08T13:14:39Z,CLOSED,False,1,1,1,https://github.com/Polynomial-C,Fix call to usage which requires an int argument,1,['priority-medium'],https://github.com/apple/cups/pull/5451,https://github.com/Polynomial-C,1,https://github.com/apple/cups/pull/5451,"Otherwise compilation fails:
main.c: In function ‘main’:
main.c:158:7: error: too few arguments to function ‘usage’
       usage();
       ^~~~~
main.c:73:14: note: declared here
 static void  usage(int status) _CUPS_NORETURN;
              ^~~~~
make[1]: *** [../Makedefs:270: main.o] Error 1","Otherwise compilation fails:
main.c: In function ‘main’:
main.c:158:7: error: too few arguments to function ‘usage’
       usage();
       ^~~~~
main.c:73:14: note: declared here
 static void  usage(int status) _CUPS_NORETURN;
              ^~~~~
make[1]: *** [../Makedefs:270: main.o] Error 1",True,{}
apple/cups,https://github.com/apple/cups,5451,2018-12-08T12:19:15Z,2018-12-08T13:14:27Z,2018-12-08T13:14:39Z,CLOSED,False,1,1,1,https://github.com/Polynomial-C,Fix call to usage which requires an int argument,1,['priority-medium'],https://github.com/apple/cups/pull/5451,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5451#issuecomment-445458359,"Otherwise compilation fails:
main.c: In function ‘main’:
main.c:158:7: error: too few arguments to function ‘usage’
       usage();
       ^~~~~
main.c:73:14: note: declared here
 static void  usage(int status) _CUPS_NORETURN;
              ^~~~~
make[1]: *** [../Makedefs:270: main.o] Error 1",[master 065632e] Fix compile errors - not sure why these didn't show up before...,True,{}
apple/cups,https://github.com/apple/cups,5461,2018-12-11T19:07:18Z,2019-01-07T14:59:30Z,2019-01-07T14:59:39Z,MERGED,True,2,0,1,https://github.com/erkanisik1,turkish update,1,['priority-low'],https://github.com/apple/cups/pull/5461,https://github.com/erkanisik1,1,https://github.com/apple/cups/pull/5461,,,True,{}
apple/cups,https://github.com/apple/cups,5463,2018-12-14T14:58:11Z,2018-12-14T15:03:58Z,2018-12-14T15:03:58Z,MERGED,True,1,1,1,https://github.com/OdyX,Fix service_idle_exit build issue with -Werror=maybe-unitialized,1,['priority-low'],https://github.com/apple/cups/pull/5463,https://github.com/OdyX,1,https://github.com/apple/cups/pull/5463,"There's only one line that makes the build fail under -Werror=maybe-unitialized :
Compiling listen.c...
cc  -fPIC -g -fstack-protector -D_GNU_SOURCE -I.. -D_CUPS_SOURCE -isystem /usr/include/mit-krb5 -Wdate-time -D_FORTIFY_SOURCE=2 -isystem /usr/include/mit-krb5 -g -O2 -fdebug-prefix-map=/tmp/reprotest.wwqjgR/const_build_path=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -I/usr/include/libusb-1.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -DDBUS_API_SUBJECT_TO_CHANGE -D_FORTIFY_SOURCE=2 -D_REENTRANT -I/usr/include/p11-kit-1 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_THREAD_SAFE -D_REENTRANT  -Werror -Wno-error=deprecated-declarations -Wall -Wno-format-y2k -Wunused -Wno-unused-result -Wsign-conversion -Wno-format-truncation -Wno-tautological-compare -c -o listen.o listen.c
main.c: In function ‘main’:
main.c:942:14: error: ‘service_idle_exit’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
     if (!fds && service_idle_exit)
              ^~

It should be initialized to 0, right?","There's only one line that makes the build fail under -Werror=maybe-unitialized :
Compiling listen.c...
cc  -fPIC -g -fstack-protector -D_GNU_SOURCE -I.. -D_CUPS_SOURCE -isystem /usr/include/mit-krb5 -Wdate-time -D_FORTIFY_SOURCE=2 -isystem /usr/include/mit-krb5 -g -O2 -fdebug-prefix-map=/tmp/reprotest.wwqjgR/const_build_path=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -I/usr/include/libusb-1.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -DDBUS_API_SUBJECT_TO_CHANGE -D_FORTIFY_SOURCE=2 -D_REENTRANT -I/usr/include/p11-kit-1 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_THREAD_SAFE -D_REENTRANT  -Werror -Wno-error=deprecated-declarations -Wall -Wno-format-y2k -Wunused -Wno-unused-result -Wsign-conversion -Wno-format-truncation -Wno-tautological-compare -c -o listen.o listen.c
main.c: In function ‘main’:
main.c:942:14: error: ‘service_idle_exit’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
     if (!fds && service_idle_exit)
              ^~

It should be initialized to 0, right?",True,{}
apple/cups,https://github.com/apple/cups,5463,2018-12-14T14:58:11Z,2018-12-14T15:03:58Z,2018-12-14T15:03:58Z,MERGED,True,1,1,1,https://github.com/OdyX,Fix service_idle_exit build issue with -Werror=maybe-unitialized,1,['priority-low'],https://github.com/apple/cups/pull/5463,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5463#issuecomment-447351381,"There's only one line that makes the build fail under -Werror=maybe-unitialized :
Compiling listen.c...
cc  -fPIC -g -fstack-protector -D_GNU_SOURCE -I.. -D_CUPS_SOURCE -isystem /usr/include/mit-krb5 -Wdate-time -D_FORTIFY_SOURCE=2 -isystem /usr/include/mit-krb5 -g -O2 -fdebug-prefix-map=/tmp/reprotest.wwqjgR/const_build_path=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -I/usr/include/libusb-1.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -DDBUS_API_SUBJECT_TO_CHANGE -D_FORTIFY_SOURCE=2 -D_REENTRANT -I/usr/include/p11-kit-1 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_THREAD_SAFE -D_REENTRANT  -Werror -Wno-error=deprecated-declarations -Wall -Wno-format-y2k -Wunused -Wno-unused-result -Wsign-conversion -Wno-format-truncation -Wno-tautological-compare -c -o listen.o listen.c
main.c: In function ‘main’:
main.c:942:14: error: ‘service_idle_exit’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
     if (!fds && service_idle_exit)
              ^~

It should be initialized to 0, right?","Gotta love GCC for being honest about not being sure about their warnings... :/
Initializing service_idle_exit to 0 is a safe enough, if unnecessary, change.",True,{}
apple/cups,https://github.com/apple/cups,5471,2019-01-05T00:15:41Z,2019-01-07T14:58:47Z,2019-01-07T14:59:00Z,MERGED,True,16,8,1,https://github.com/Atalanttore,Update cups_de.po,1,['priority-low'],https://github.com/apple/cups/pull/5471,https://github.com/Atalanttore,1,https://github.com/apple/cups/pull/5471,Added some german translations.,Added some german translations.,True,{}
apple/cups,https://github.com/apple/cups,5473,2019-01-08T22:49:31Z,2019-01-09T18:21:17Z,2019-01-09T18:27:17Z,CLOSED,False,2,2,1,https://github.com/ppawliczek,PPD parser: Calling cupsFileGetChar(...) after EOF,1,['priority-low'],https://github.com/apple/cups/pull/5473,https://github.com/ppawliczek,1,https://github.com/apple/cups/pull/5473,"For some input data the function cupsFileGetChar(...) was incorrectly called
from the function ppd_read(...) after returning EOF in a previous call. This
causes incorrect state of cups_file and results in memory leak.","For some input data the function cupsFileGetChar(...) was incorrectly called
from the function ppd_read(...) after returning EOF in a previous call. This
causes incorrect state of cups_file and results in memory leak.",True,{}
apple/cups,https://github.com/apple/cups,5473,2019-01-08T22:49:31Z,2019-01-09T18:21:17Z,2019-01-09T18:27:17Z,CLOSED,False,2,2,1,https://github.com/ppawliczek,PPD parser: Calling cupsFileGetChar(...) after EOF,1,['priority-low'],https://github.com/apple/cups/pull/5473,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5473#issuecomment-452801097,"For some input data the function cupsFileGetChar(...) was incorrectly called
from the function ppd_read(...) after returning EOF in a previous call. This
causes incorrect state of cups_file and results in memory leak.","That's not the right place to add this check. I've committed a change to the cupsFileGetChar and cupsFileRead functions to immediately return EOF rather than calling cups_fill.
[master 96fee30] Protect against continuing to read from a file at EOF (Issue #5473)",True,{}
apple/cups,https://github.com/apple/cups,5473,2019-01-08T22:49:31Z,2019-01-09T18:21:17Z,2019-01-09T18:27:17Z,CLOSED,False,2,2,1,https://github.com/ppawliczek,PPD parser: Calling cupsFileGetChar(...) after EOF,1,['priority-low'],https://github.com/apple/cups/pull/5473,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5473#issuecomment-452803452,"For some input data the function cupsFileGetChar(...) was incorrectly called
from the function ppd_read(...) after returning EOF in a previous call. This
causes incorrect state of cups_file and results in memory leak.",[branch-2.2 18518f3] Protect against continuing to read from a file at EOF (Issue #5473),True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/ppawliczek,1,https://github.com/apple/cups/pull/5474,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5474#issuecomment-452511714,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","No. Your change allocates the search key every time we look up a string, which will do the exact opposite of what the string pool code is intended to do (efficiently store immutable copies of strings)
We have unit tests for this code and have no reports of problems - where are you seeing issues, and what are the backtraces?",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5474#issuecomment-452809607,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","@ppawliczek I've done some more investigation - seems like configuring the CUPS source with the ""--enable-debug-guards"" option should help you find where the string pool corruption is happening. To reiterate my previous comment, this code needs to run fast and allocating and copying every time is not compatible with that goal (otherwise we'd just allocate separate copies of the string every time...) - we are trading string comparison time for dramatically-reduced memory usage.",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/ppawliczek,4,https://github.com/apple/cups/pull/5474#issuecomment-453684079,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","Hi Michael! I am sorry for late answer. First of all, let me say that I completely understand your point of view. However dereferencing an unaligned struct is an undefined behavior in C. Since we work with several architectures we decided to patch CUPS on our side.",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5474#issuecomment-453709522,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","@ppawliczek The first member of the struct is a 32-bit integer. Short of a bug, all C string constants should be at least 32-bit aligned on modern platforms (I know macOS uses 64-bit alignment for performance), so I'd really appreciate some additional information (including the platform you are running on) to determine what is going wrong. Your change introduces a significant performance regression and doesn't address usage of _cupsStrRetain.",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/ppawliczek,6,https://github.com/apple/cups/pull/5474#issuecomment-454888053,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","@michaelrsweet The function _cupsStrRetain(...) has the following description:
/*
'_cupsStrRetain()' - Increment the reference count of a string.
Note: This function does not verify that the passed pointer is in the
string pool, so any calls to it MUST know they are passing in a
good pointer.
*/
It is always given a correct pointer, so there is no reason to make any changes there.
The problem with patched functions is that sometimes the given pointer (char*) is not aligned and this results in unaligned pointer to struct _cups_sp_item_t. It was detected by our sanitizer (dereferencing unaligned structure) when parsing PPD file.
I know this change hits overall performance. However our tests show no measurable difference between patched and unpatched version. It is probably caused by the fact that vast majority of CPU time is spent in various external filters (pdftopdf, ghostscript etc), not in CUPS.",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5474#issuecomment-456176445,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","OK, my first pass is to change the PPD API to not use the string pool, since it was modifying the strings after allocation and, as you noted, passing some unaligned strings:
[master 5118c5739] Fix potential unaligned accesses in the string pool (Issue #5474)
[branch-2.2 6844678] Fix potential unaligned accesses in the string pool (Issue #5474)",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/michaelrsweet,8,https://github.com/apple/cups/pull/5474#issuecomment-456178463,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","@ppawliczek I am doing a further review of callers to the string pool functions:

_cupsStrAlloc should not care about alignment since we never access the ref_count member during the search
_cupsStrFree validates the pointer before accessing ref_count - this should likewise not need any special handling (except when debug guards are enabled, but that isn't something that is used in production... I could change the code there slightly to search first and then check, however)
_cupsStrRetain is supposed to only be used on strings from the pool as an optimization - I will audit all calls to ensure they are always used correctly.

I would appreciate your testing current Git master (without your changes) to let me know whether you are still able to reproduce the issues you originally reported.",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/michaelrsweet,9,https://github.com/apple/cups/pull/5474#issuecomment-456199755,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","Found some other usage of the string pool outside CUPS proper and removed it. Also switched to _cupsStrAlloc where it wasn't guaranteed that the string was in the pool.
Finally, updated _cupsStrFree to look for the guard after a match.
[master 86c184f] Clean out some more _cupsStr cruft that might potentially cause an unaligned memory access (Issue #5474)
[branch-2.2 ddcb034] Clean out some more _cupsStr cruft that might potentially cause an unaligned memory access (Issue #5474)",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/ppawliczek,10,https://github.com/apple/cups/pull/5474#issuecomment-460348207,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","@michaelrsweet Unfortunately, I am not able to test the current master. I have no control over our testing infrastructure, it runs test on our ""master"" only. So, I will have some results when we merge new CUPS version to our repository.",True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/michaelrsweet,11,https://github.com/apple/cups/pull/5474#issuecomment-463382570,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.",@ppawliczek Any ETA on your next merge?,True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/michaelrsweet,12,https://github.com/apple/cups/pull/5474#issuecomment-465196235,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.",Please let me know if the problem is not resolved...,True,{}
apple/cups,https://github.com/apple/cups,5474,2019-01-08T22:51:00Z,2019-02-19T16:09:15Z,2019-02-28T01:29:23Z,CLOSED,False,42,34,1,https://github.com/ppawliczek,Misaligned address of _cups_sp_item_t struct,1,['priority-high'],https://github.com/apple/cups/pull/5474,https://github.com/ppawliczek,13,https://github.com/apple/cups/pull/5474#issuecomment-468099356,"Strings registered with functions declared in cups/string.h were sometimes
converted in-place to _cups_sp_item_t structures. This caused problem with
misaligned addresses of temporary _cups_sp_item_t structures created this way.
This patch introduced a couple of modifications to string.c, now all used
_cups_sp_item_t structures are created and filled in proper way.","I do not know ETA for next CUPS merge. However, we will try to configure a public fuzzer for CUPS.",True,{}
apple/cups,https://github.com/apple/cups,5475,2019-01-08T22:51:47Z,2019-01-21T18:45:21Z,2019-01-21T18:45:22Z,CLOSED,False,19,12,1,https://github.com/ppawliczek,"PPD parser: Only last ""Emulators"" statement is taken into account + memory leak",1,['priority-low'],https://github.com/apple/cups/pull/5475,https://github.com/ppawliczek,1,https://github.com/apple/cups/pull/5475,"Each occurence of ""Emulators"" keyword overwrites the previous parsed
""Emulators"" statement. It also causes a memory leak. The problem is solved here
by concatenating together values from all occurences of ""Emulators"" statements.","Each occurence of ""Emulators"" keyword overwrites the previous parsed
""Emulators"" statement. It also causes a memory leak. The problem is solved here
by concatenating together values from all occurences of ""Emulators"" statements.",True,{}
apple/cups,https://github.com/apple/cups,5475,2019-01-08T22:51:47Z,2019-01-21T18:45:21Z,2019-01-21T18:45:22Z,CLOSED,False,19,12,1,https://github.com/ppawliczek,"PPD parser: Only last ""Emulators"" statement is taken into account + memory leak",1,['priority-low'],https://github.com/apple/cups/pull/5475,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5475#issuecomment-452508373,"Each occurence of ""Emulators"" keyword overwrites the previous parsed
""Emulators"" statement. It also causes a memory leak. The problem is solved here
by concatenating together values from all occurences of ""Emulators"" statements.","Happy to fix this, but keep in mind that CUPS never uses the value and PPDs are long deprecated...",True,{}
apple/cups,https://github.com/apple/cups,5475,2019-01-08T22:51:47Z,2019-01-21T18:45:21Z,2019-01-21T18:45:22Z,CLOSED,False,19,12,1,https://github.com/ppawliczek,"PPD parser: Only last ""Emulators"" statement is taken into account + memory leak",1,['priority-low'],https://github.com/apple/cups/pull/5475,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5475#issuecomment-456167486,"Each occurence of ""Emulators"" keyword overwrites the previous parsed
""Emulators"" statement. It also causes a memory leak. The problem is solved here
by concatenating together values from all occurences of ""Emulators"" statements.","I opted to just remove the code that deals with the emulations array completely - nothing in CUPS uses this array and it was just more ""dead code"" cluttering up libcups.
[master 4b5a691] Stop parsing the Emulators keywords in PPD files (Issue #5475)
[branch-2.2 558bba7] Stop parsing the Emulators keywords in PPD files (Issue #5475)",True,{}
apple/cups,https://github.com/apple/cups,5477,2019-01-10T11:22:24Z,2019-01-10T11:35:28Z,2019-01-10T14:38:44Z,CLOSED,False,70,22,9,https://github.com/mcb30,Raw TLS socket support,2,['wontfix'],https://github.com/apple/cups/pull/5477,https://github.com/mcb30,1,https://github.com/apple/cups/pull/5477,"This small patch series adds support for TLS to the socket backend.  This allows CUPS to communicate with printers such as the Zebra ZQ520, which can listen on port 9143 for TLS-encrypted AppSocket/JetDirect connections.","This small patch series adds support for TLS to the socket backend.  This allows CUPS to communicate with printers such as the Zebra ZQ520, which can listen on port 9143 for TLS-encrypted AppSocket/JetDirect connections.",True,{}
apple/cups,https://github.com/apple/cups,5477,2019-01-10T11:22:24Z,2019-01-10T11:35:28Z,2019-01-10T14:38:44Z,CLOSED,False,70,22,9,https://github.com/mcb30,Raw TLS socket support,2,['wontfix'],https://github.com/apple/cups/pull/5477,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5477#issuecomment-453065367,"This small patch series adds support for TLS to the socket backend.  This allows CUPS to communicate with printers such as the Zebra ZQ520, which can listen on port 9143 for TLS-encrypted AppSocket/JetDirect connections.","Sorry, we have no desire to support yet another vendor specific ‘protocol’.",True,{}
apple/cups,https://github.com/apple/cups,5477,2019-01-10T11:22:24Z,2019-01-10T11:35:28Z,2019-01-10T14:38:44Z,CLOSED,False,70,22,9,https://github.com/mcb30,Raw TLS socket support,2,['wontfix'],https://github.com/apple/cups/pull/5477,https://github.com/mcb30,3,https://github.com/apple/cups/pull/5477#issuecomment-453111299,"This small patch series adds support for TLS to the socket backend.  This allows CUPS to communicate with printers such as the Zebra ZQ520, which can listen on port 9143 for TLS-encrypted AppSocket/JetDirect connections.",It's just standard AppSocket/JetDirect but with TLS.  It's not vendor-specific in any way: the example of the Zebra ZQ520 is just to demonstrate that there are printers in existence that support this.,True,{}
apple/cups,https://github.com/apple/cups,5477,2019-01-10T11:22:24Z,2019-01-10T11:35:28Z,2019-01-10T14:38:44Z,CLOSED,False,70,22,9,https://github.com/mcb30,Raw TLS socket support,2,['wontfix'],https://github.com/apple/cups/pull/5477,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5477#issuecomment-453117585,"This small patch series adds support for TLS to the socket backend.  This allows CUPS to communicate with printers such as the Zebra ZQ520, which can listen on port 9143 for TLS-encrypted AppSocket/JetDirect connections.","First, this is the first printer I've ever heard of supporting raw TLS sockets - it isn't common, nor am I aware of any standardization efforts or protocol documentation for it. (And no, the TLS spec isn't enough!)
Second, there is an international standard protocol with TLS support that is supported by over 98% of all network printers - IPP. Besides the basic print data transfer supported by IPP, you also get status monitoring, capabilities, and (in most cases) higher-level file format support allowing printers to ""just work"" without vendor-specific software.
So, we have no interest in supporting a vendor-specific protocol that continues a legacy of vendor-specific software.",True,{}
apple/cups,https://github.com/apple/cups,5481,2019-01-15T20:08:46Z,2019-01-21T16:55:52Z,2019-01-21T16:55:52Z,MERGED,True,2,0,1,https://github.com/scootergrisen,Add [da] translation,1,['priority-low'],https://github.com/apple/cups/pull/5481,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5481,,,True,{}
apple/cups,https://github.com/apple/cups,5486,2019-01-21T19:06:05Z,2019-01-21T19:11:16Z,2019-01-21T19:11:24Z,MERGED,True,54,0,1,https://github.com/scootergrisen,Add doc/da/index.html.in,1,['priority-low'],https://github.com/apple/cups/pull/5486,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5486,,,True,{}
apple/cups,https://github.com/apple/cups,5489,2019-01-22T01:15:52Z,2019-01-23T15:56:43Z,2019-01-23T15:56:43Z,MERGED,True,1092,0,67,https://github.com/scootergrisen,Add translations for templates/da,1,['priority-low'],https://github.com/apple/cups/pull/5489,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5489,,,True,{}
apple/cups,https://github.com/apple/cups,5492,2019-01-22T03:19:27Z,2019-01-23T15:55:49Z,2019-01-23T15:55:49Z,MERGED,True,3,5,1,https://github.com/scootergrisen,Fix a problem with msgid/msgstr in cups_de.po,3,['priority-low'],https://github.com/apple/cups/pull/5492,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5492,,,True,{}
apple/cups,https://github.com/apple/cups,5493,2019-01-22T03:41:32Z,2019-01-23T15:54:37Z,2019-01-23T15:54:37Z,MERGED,True,3,4,1,https://github.com/scootergrisen,Remove some newlines from cups_ru.po,1,['priority-low'],https://github.com/apple/cups/pull/5493,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5493,msgfmt -c cups_ru.po gave some warnings about some ending \n that was in the source strings.,msgfmt -c cups_ru.po gave some warnings about some ending \n that was in the source strings.,True,{}
apple/cups,https://github.com/apple/cups,5494,2019-01-22T04:09:04Z,2019-01-23T16:02:30Z,2019-01-23T19:45:49Z,CLOSED,False,1104,12,76,https://github.com/scootergrisen,Fix po headers (Language-Team and Language),2,['priority-low'],https://github.com/apple/cups/pull/5494,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5494,,,True,{}
apple/cups,https://github.com/apple/cups,5494,2019-01-22T04:09:04Z,2019-01-23T16:02:30Z,2019-01-23T19:45:49Z,CLOSED,False,1104,12,76,https://github.com/scootergrisen,Fix po headers (Language-Team and Language),2,['priority-low'],https://github.com/apple/cups/pull/5494,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5494#issuecomment-456855053,,@scootergrisen Did you intend to include your web interface templates with this pull request?,True,{}
apple/cups,https://github.com/apple/cups,5494,2019-01-22T04:09:04Z,2019-01-23T16:02:30Z,2019-01-23T19:45:49Z,CLOSED,False,1104,12,76,https://github.com/scootergrisen,Fix po headers (Language-Team and Language),2,['priority-low'],https://github.com/apple/cups/pull/5494,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5494#issuecomment-456858907,,[master de0c206cd] Fix metadata header and strip old messages.,True,{}
apple/cups,https://github.com/apple/cups,5494,2019-01-22T04:09:04Z,2019-01-23T16:02:30Z,2019-01-23T19:45:49Z,CLOSED,False,1104,12,76,https://github.com/scootergrisen,Fix po headers (Language-Team and Language),2,['priority-low'],https://github.com/apple/cups/pull/5494,https://github.com/scootergrisen,4,https://github.com/apple/cups/pull/5494#issuecomment-456940286,,"@scootergrisen Did you intend to include your web interface templates with this pull request?

No i mess up the git stuff im not so good at git.",True,{}
apple/cups,https://github.com/apple/cups,5499,2019-01-24T05:47:31Z,2019-01-24T14:38:29Z,2019-01-24T14:38:29Z,MERGED,True,0,1,1,https://github.com/scootergrisen,Remove newline,1,['priority-low'],https://github.com/apple/cups/pull/5499,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5499,So it matches the source/template file.,So it matches the source/template file.,True,{}
apple/cups,https://github.com/apple/cups,5500,2019-01-24T05:49:37Z,2019-01-24T14:37:26Z,2019-01-24T14:37:35Z,MERGED,True,0,1,1,https://github.com/scootergrisen,Remove newline,1,['priority-low'],https://github.com/apple/cups/pull/5500,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5500,So it matches the source/template file,So it matches the source/template file,True,{}
apple/cups,https://github.com/apple/cups,5501,2019-01-24T05:55:05Z,2019-01-24T14:36:58Z,2019-01-24T14:37:05Z,MERGED,True,1,1,1,https://github.com/scootergrisen,"Add ""# German message catalog for CUPS.""",1,['priority-low'],https://github.com/apple/cups/pull/5501,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5501,,,True,{}
apple/cups,https://github.com/apple/cups,5504,2019-01-26T02:30:51Z,2019-02-13T21:33:28Z,2019-02-14T14:36:06Z,CLOSED,False,8,8,7,https://github.com/scootergrisen,A few string corrections,3,['priority-low'],https://github.com/apple/cups/pull/5504,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5504,,,True,{}
apple/cups,https://github.com/apple/cups,5504,2019-01-26T02:30:51Z,2019-02-13T21:33:28Z,2019-02-14T14:36:06Z,CLOSED,False,8,8,7,https://github.com/scootergrisen,A few string corrections,3,['priority-low'],https://github.com/apple/cups/pull/5504,https://github.com/scootergrisen,2,https://github.com/apple/cups/pull/5504#issuecomment-457793831,,"How do i remove ""Fix po headers (Language-Team and Language)"" from this pull request?",True,{}
apple/cups,https://github.com/apple/cups,5504,2019-01-26T02:30:51Z,2019-02-13T21:33:28Z,2019-02-14T14:36:06Z,CLOSED,False,8,8,7,https://github.com/scootergrisen,A few string corrections,3,['priority-low'],https://github.com/apple/cups/pull/5504,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5504#issuecomment-463243417,,@scootergrisen Not sure. But I can just manually merge the string corrections...,True,{}
apple/cups,https://github.com/apple/cups,5504,2019-01-26T02:30:51Z,2019-02-13T21:33:28Z,2019-02-14T14:36:06Z,CLOSED,False,8,8,7,https://github.com/scootergrisen,A few string corrections,3,['priority-low'],https://github.com/apple/cups/pull/5504,https://github.com/scootergrisen,4,https://github.com/apple/cups/pull/5504#issuecomment-463295974,,"Maybe i just undid what you did.
I dont know.",True,{}
apple/cups,https://github.com/apple/cups,5504,2019-01-26T02:30:51Z,2019-02-13T21:33:28Z,2019-02-14T14:36:06Z,CLOSED,False,8,8,7,https://github.com/scootergrisen,A few string corrections,3,['priority-low'],https://github.com/apple/cups/pull/5504,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5504#issuecomment-463381492,,[master fa2851d] Update Danish localization (Issue #5504),True,{}
apple/cups,https://github.com/apple/cups,5507,2019-02-03T05:50:25Z,2021-03-11T12:03:55Z,2021-03-11T12:03:56Z,CLOSED,False,56,0,2,https://github.com/CameronNemo,scheduler/main.c: support READY_FD protocol,1,[],https://github.com/apple/cups/pull/5507,https://github.com/CameronNemo,1,https://github.com/apple/cups/pull/5507,"This pull request add supports for a lightweight service readiness protocol.
The specification and reference supervisor implementation of the protocol can be found here.
The protocol is compatible with the s6 service supervision suite, and the reference implementation can be paired with many other service supervisors.","This pull request add supports for a lightweight service readiness protocol.
The specification and reference supervisor implementation of the protocol can be found here.
The protocol is compatible with the s6 service supervision suite, and the reference implementation can be paired with many other service supervisors.",True,{'THUMBS_UP': ['https://github.com/Piraty']}
apple/cups,https://github.com/apple/cups,5507,2019-02-03T05:50:25Z,2021-03-11T12:03:55Z,2021-03-11T12:03:56Z,CLOSED,False,56,0,2,https://github.com/CameronNemo,scheduler/main.c: support READY_FD protocol,1,[],https://github.com/apple/cups/pull/5507,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5507#issuecomment-460105988,"This pull request add supports for a lightweight service readiness protocol.
The specification and reference supervisor implementation of the protocol can be found here.
The protocol is compatible with the s6 service supervision suite, and the reference implementation can be paired with many other service supervisors.",Never heard of this - how widely is this deployed?,True,{}
apple/cups,https://github.com/apple/cups,5507,2019-02-03T05:50:25Z,2021-03-11T12:03:55Z,2021-03-11T12:03:56Z,CLOSED,False,56,0,2,https://github.com/CameronNemo,scheduler/main.c: support READY_FD protocol,1,[],https://github.com/apple/cups/pull/5507,https://github.com/CameronNemo,3,https://github.com/apple/cups/pull/5507#issuecomment-460108154,"This pull request add supports for a lightweight service readiness protocol.
The specification and reference supervisor implementation of the protocol can be found here.
The protocol is compatible with the s6 service supervision suite, and the reference implementation can be paired with many other service supervisors.","While not as common as systemd, s6 has gained traction and reputation as an alternative service manager on Linux. s6 will be in the upcoming stable release of Debian, for example.
The advantages of this protocol compared to systemd's NOTIFY_SOCKET are fairly clear from this PR I think: there are no external dependencies and only simple IO operations are necessary to support it. It is also agnostic to PID and mount namespace changes, unlike systemd's mechanism.",True,{}
apple/cups,https://github.com/apple/cups,5507,2019-02-03T05:50:25Z,2021-03-11T12:03:55Z,2021-03-11T12:03:56Z,CLOSED,False,56,0,2,https://github.com/CameronNemo,scheduler/main.c: support READY_FD protocol,1,[],https://github.com/apple/cups/pull/5507,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5507#issuecomment-460109422,"This pull request add supports for a lightweight service readiness protocol.
The specification and reference supervisor implementation of the protocol can be found here.
The protocol is compatible with the s6 service supervision suite, and the reference implementation can be paired with many other service supervisors.","Well, at this point I'm not keen on these changes as-is, and it isn't clear at all how cupsd is started or managed using this new interface?",True,{}
apple/cups,https://github.com/apple/cups,5507,2019-02-03T05:50:25Z,2021-03-11T12:03:55Z,2021-03-11T12:03:56Z,CLOSED,False,56,0,2,https://github.com/CameronNemo,scheduler/main.c: support READY_FD protocol,1,[],https://github.com/apple/cups/pull/5507,https://github.com/CameronNemo,5,https://github.com/apple/cups/pull/5507#issuecomment-460110040,"This pull request add supports for a lightweight service readiness protocol.
The specification and reference supervisor implementation of the protocol can be found here.
The protocol is compatible with the s6 service supervision suite, and the reference implementation can be paired with many other service supervisors.","Is there any way I can improve the patch to be less intrusive or more palatable?
Regarding how cupsd is started using a supervisor supporting the protocol: that is really up to service manager. You can see some examples here. Note that only s6 supports the mechanism natively, other service managers would need to implement the supervision side of the protocol or use the reference implementation (which itself is a small, flexible, portable and liberally licensed program written in C).
The target audience for this option is system integrator, who would presumably already know how to use the protocol if they are interested in it.
I understand if you would like to defer the changes until s6 and the readiness notification mechanism see wider use.",True,{}
apple/cups,https://github.com/apple/cups,5507,2019-02-03T05:50:25Z,2021-03-11T12:03:55Z,2021-03-11T12:03:56Z,CLOSED,False,56,0,2,https://github.com/CameronNemo,scheduler/main.c: support READY_FD protocol,1,[],https://github.com/apple/cups/pull/5507,https://github.com/skarnet,6,https://github.com/apple/cups/pull/5507#issuecomment-462124577,"This pull request add supports for a lightweight service readiness protocol.
The specification and reference supervisor implementation of the protocol can be found here.
The protocol is compatible with the s6 service supervision suite, and the reference implementation can be paired with many other service supervisors.","s6 is already pretty popular with Docker users. You can look up ""s6 Docker"" to get an idea.
Badoo uses it. Lots of small companies use it. It's not the default in any mainstream distribution at the moment, but expect that to change in the upcoming years. ;-)",True,{}
apple/cups,https://github.com/apple/cups,5507,2019-02-03T05:50:25Z,2021-03-11T12:03:55Z,2021-03-11T12:03:56Z,CLOSED,False,56,0,2,https://github.com/CameronNemo,scheduler/main.c: support READY_FD protocol,1,[],https://github.com/apple/cups/pull/5507,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5507#issuecomment-796688202,"This pull request add supports for a lightweight service readiness protocol.
The specification and reference supervisor implementation of the protocol can be found here.
The protocol is compatible with the s6 service supervision suite, and the reference implementation can be paired with many other service supervisors.",Please report this to the OpenPrinting CUPS project.,True,{'THUMBS_UP': ['https://github.com/CameronNemo']}
apple/cups,https://github.com/apple/cups,5513,2019-02-11T18:48:40Z,2019-02-13T21:30:50Z,2019-02-13T21:30:50Z,CLOSED,False,113,6,4,https://github.com/zdohnal,Show warning about logs in syslog in Web UI,2,['enhancement'],https://github.com/apple/cups/pull/5513,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5513,"Hi Mike!
I set all cupsd logs to be in system log (journal), but it breaks viewing logs in CUPS web ui - it ends with 'Not Found', which can be confusing for users.
I tried to focus on the issue and solve it in the pull request - I introduced new file in CUPS_CACHEDIR, which will contain warning message (file is created and the message is written there during reading configuration - if configuration changes in the way there is no logs in syslog, file is deleted):
'The log has been moved to system log. Please consult your logging system for logs.'
CGI binary then gets the file instead of original log file (if CUPS is built with correct features - systemd or vsyslog and the logging is set to syslog).
Viewing logs in web ui shows warning instead of 'Not Found'. Is it acceptable behavior and could it be added to the project?","Hi Mike!
I set all cupsd logs to be in system log (journal), but it breaks viewing logs in CUPS web ui - it ends with 'Not Found', which can be confusing for users.
I tried to focus on the issue and solve it in the pull request - I introduced new file in CUPS_CACHEDIR, which will contain warning message (file is created and the message is written there during reading configuration - if configuration changes in the way there is no logs in syslog, file is deleted):
'The log has been moved to system log. Please consult your logging system for logs.'
CGI binary then gets the file instead of original log file (if CUPS is built with correct features - systemd or vsyslog and the logging is set to syslog).
Viewing logs in web ui shows warning instead of 'Not Found'. Is it acceptable behavior and could it be added to the project?",True,{}
apple/cups,https://github.com/apple/cups,5513,2019-02-11T18:48:40Z,2019-02-13T21:30:50Z,2019-02-13T21:30:50Z,CLOSED,False,113,6,4,https://github.com/zdohnal,Show warning about logs in syslog in Web UI,2,['enhancement'],https://github.com/apple/cups/pull/5513,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5513#issuecomment-462955967,"Hi Mike!
I set all cupsd logs to be in system log (journal), but it breaks viewing logs in CUPS web ui - it ends with 'Not Found', which can be confusing for users.
I tried to focus on the issue and solve it in the pull request - I introduced new file in CUPS_CACHEDIR, which will contain warning message (file is created and the message is written there during reading configuration - if configuration changes in the way there is no logs in syslog, file is deleted):
'The log has been moved to system log. Please consult your logging system for logs.'
CGI binary then gets the file instead of original log file (if CUPS is built with correct features - systemd or vsyslog and the logging is set to syslog).
Viewing logs in web ui shows warning instead of 'Not Found'. Is it acceptable behavior and could it be added to the project?",I'd much rather just hide the log buttons when syslog/etc. are in use.,True,{}
apple/cups,https://github.com/apple/cups,5513,2019-02-11T18:48:40Z,2019-02-13T21:30:50Z,2019-02-13T21:30:50Z,CLOSED,False,113,6,4,https://github.com/zdohnal,Show warning about logs in syslog in Web UI,2,['enhancement'],https://github.com/apple/cups/pull/5513,https://github.com/zdohnal,3,https://github.com/apple/cups/pull/5513#issuecomment-463166246,"Hi Mike!
I set all cupsd logs to be in system log (journal), but it breaks viewing logs in CUPS web ui - it ends with 'Not Found', which can be confusing for users.
I tried to focus on the issue and solve it in the pull request - I introduced new file in CUPS_CACHEDIR, which will contain warning message (file is created and the message is written there during reading configuration - if configuration changes in the way there is no logs in syslog, file is deleted):
'The log has been moved to system log. Please consult your logging system for logs.'
CGI binary then gets the file instead of original log file (if CUPS is built with correct features - systemd or vsyslog and the logging is set to syslog).
Viewing logs in web ui shows warning instead of 'Not Found'. Is it acceptable behavior and could it be added to the project?","@michaelrsweet You're right, that's better idea, although I found two things:


As I looked into code and if I understood it correctly, it would need to read cups-files.conf in cupsAdminGetServerSettings() function to get current setup of log location. Or move 'AccessLog/ErrorLog/PageLog' directives to cupsd.conf/create a new directive in cupsd.conf for it.


It can be confusing when user will want to have CUPS error_log in syslog, but others in /var/log/cups directory - missing one or two 'View X log' buttons can look bad when the rest will be there.


What is your opinion on these two points? Is it acceptable to read cups-files.conf, set new cgi variable, change admin template a little and set ""INPUT TYPE={?variable}"" according cgi variable (SUBMIT/HIDDEN)?",True,{}
apple/cups,https://github.com/apple/cups,5513,2019-02-11T18:48:40Z,2019-02-13T21:30:50Z,2019-02-13T21:30:50Z,CLOSED,False,113,6,4,https://github.com/zdohnal,Show warning about logs in syslog in Web UI,2,['enhancement'],https://github.com/apple/cups/pull/5513,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5513#issuecomment-463242390,"Hi Mike!
I set all cupsd logs to be in system log (journal), but it breaks viewing logs in CUPS web ui - it ends with 'Not Found', which can be confusing for users.
I tried to focus on the issue and solve it in the pull request - I introduced new file in CUPS_CACHEDIR, which will contain warning message (file is created and the message is written there during reading configuration - if configuration changes in the way there is no logs in syslog, file is deleted):
'The log has been moved to system log. Please consult your logging system for logs.'
CGI binary then gets the file instead of original log file (if CUPS is built with correct features - systemd or vsyslog and the logging is set to syslog).
Viewing logs in web ui shows warning instead of 'Not Found'. Is it acceptable behavior and could it be added to the project?","Really, given the current (default) use of systemd logging on most Linux distros and the disabling of the web interface by default, my personal preference is just to remove the buttons completely from the admin page.",True,{}
apple/cups,https://github.com/apple/cups,5513,2019-02-11T18:48:40Z,2019-02-13T21:30:50Z,2019-02-13T21:30:50Z,CLOSED,False,113,6,4,https://github.com/zdohnal,Show warning about logs in syslog in Web UI,2,['enhancement'],https://github.com/apple/cups/pull/5513,https://github.com/zdohnal,5,https://github.com/apple/cups/pull/5513#issuecomment-463248835,"Hi Mike!
I set all cupsd logs to be in system log (journal), but it breaks viewing logs in CUPS web ui - it ends with 'Not Found', which can be confusing for users.
I tried to focus on the issue and solve it in the pull request - I introduced new file in CUPS_CACHEDIR, which will contain warning message (file is created and the message is written there during reading configuration - if configuration changes in the way there is no logs in syslog, file is deleted):
'The log has been moved to system log. Please consult your logging system for logs.'
CGI binary then gets the file instead of original log file (if CUPS is built with correct features - systemd or vsyslog and the logging is set to syslog).
Viewing logs in web ui shows warning instead of 'Not Found'. Is it acceptable behavior and could it be added to the project?","Ok, I'll prepare the removal of log buttons from web ui (even when /var/log/cups location is used).",True,{}
apple/cups,https://github.com/apple/cups,5513,2019-02-11T18:48:40Z,2019-02-13T21:30:50Z,2019-02-13T21:30:50Z,CLOSED,False,113,6,4,https://github.com/zdohnal,Show warning about logs in syslog in Web UI,2,['enhancement'],https://github.com/apple/cups/pull/5513,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5513#issuecomment-463380443,"Hi Mike!
I set all cupsd logs to be in system log (journal), but it breaks viewing logs in CUPS web ui - it ends with 'Not Found', which can be confusing for users.
I tried to focus on the issue and solve it in the pull request - I introduced new file in CUPS_CACHEDIR, which will contain warning message (file is created and the message is written there during reading configuration - if configuration changes in the way there is no logs in syslog, file is deleted):
'The log has been moved to system log. Please consult your logging system for logs.'
CGI binary then gets the file instead of original log file (if CUPS is built with correct features - systemd or vsyslog and the logging is set to syslog).
Viewing logs in web ui shows warning instead of 'Not Found'. Is it acceptable behavior and could it be added to the project?",[master 0d94b8b] Remove log buttons from admin page since most Linux distros use systemd logging (Issue #5513),True,{}
apple/cups,https://github.com/apple/cups,5519,2019-02-18T07:05:48Z,2019-02-19T16:12:26Z,2019-02-19T16:12:26Z,MERGED,True,1,1,1,https://github.com/IslandCow,Make explicit cast from enum to integer,1,['priority-low'],https://github.com/apple/cups/pull/5519,https://github.com/IslandCow,1,https://github.com/apple/cups/pull/5519,Clang-7 complains that there is a cast from unsigned (ipp_finishing_t which is an enum) to signed (int).  Perform an explicit cast since this should always be safe as long as ipp_finsihing_t is not too large.,Clang-7 complains that there is a cast from unsigned (ipp_finishing_t which is an enum) to signed (int).  Perform an explicit cast since this should always be safe as long as ipp_finsihing_t is not too large.,True,{}
apple/cups,https://github.com/apple/cups,5519,2019-02-18T07:05:48Z,2019-02-19T16:12:26Z,2019-02-19T16:12:26Z,MERGED,True,1,1,1,https://github.com/IslandCow,Make explicit cast from enum to integer,1,['priority-low'],https://github.com/apple/cups/pull/5519,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5519#issuecomment-465150385,Clang-7 complains that there is a cast from unsigned (ipp_finishing_t which is an enum) to signed (int).  Perform an explicit cast since this should always be safe as long as ipp_finsihing_t is not too large.,"OK, sure.",True,{}
apple/cups,https://github.com/apple/cups,5523,2019-02-19T05:35:22Z,2019-02-19T16:12:05Z,2019-02-19T16:12:05Z,CLOSED,False,3,0,1,https://github.com/BytEvil,Updated the USB quirks rule for Xerox Phaser 6020 color printers,1,['priority-low'],https://github.com/apple/cups/pull/5523,https://github.com/BytEvil,1,https://github.com/apple/cups/pull/5523,,,True,{}
apple/cups,https://github.com/apple/cups,5523,2019-02-19T05:35:22Z,2019-02-19T16:12:05Z,2019-02-19T16:12:05Z,CLOSED,False,3,0,1,https://github.com/BytEvil,Updated the USB quirks rule for Xerox Phaser 6020 color printers,1,['priority-low'],https://github.com/apple/cups/pull/5523,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5523#issuecomment-465148373,,"Hmm, this will be the 4th printer that needs this option. I might just make no-reattach the default for all Xerox printers...",True,{}
apple/cups,https://github.com/apple/cups,5523,2019-02-19T05:35:22Z,2019-02-19T16:12:05Z,2019-02-19T16:12:05Z,CLOSED,False,3,0,1,https://github.com/BytEvil,Updated the USB quirks rule for Xerox Phaser 6020 color printers,1,['priority-low'],https://github.com/apple/cups/pull/5523,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5523#issuecomment-465197542,,"[master 5ca3a7f] Add USB quirks rule for Xerox printers (Issue #5523)
[branch-2.2 9f6cee7] Add USB quirks rule for Xerox printers (Issue #5523)",True,{}
apple/cups,https://github.com/apple/cups,5527,2019-02-23T21:57:16Z,2019-02-24T11:17:58Z,2019-02-24T11:17:58Z,CLOSED,False,0,0,22,https://github.com/Rigo-V,Optimise PNGs,1,[],https://github.com/apple/cups/pull/5527,https://github.com/Rigo-V,1,https://github.com/apple/cups/pull/5527,Shaved approximately 310kB off of the PNG files losslessly with zopflipng.,Shaved approximately 310kB off of the PNG files losslessly with zopflipng.,True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/paulmenzel,1,https://github.com/apple/cups/pull/5528,,,True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/paulmenzel,2,https://github.com/apple/cups/pull/5528#issuecomment-466764382,,"I got an email from Travis CI, saying the build failed.
The problem is unrelated to my change though.
E: Unable to locate package libsystemd-dev
The command ""sudo apt-get install -y libavahi-client-dev libgnutls28-dev libkrb5-dev libnss-mdns libpam-dev libsystemd-dev libusb-1.0-0-dev zlib1g-dev"" failed and exited with 100 during

No idea, why it can’t be found, as the package exists in all Ubuntu releases.",True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5528#issuecomment-466865017,,"@paulmenzel How widely implemented are these security features?
Also, at first glance we'll need to use @ variables for the writable directories, not to mention that a lot of drivers depend on other locations being writable as well.",True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/paulmenzel,4,https://github.com/apple/cups/pull/5528#issuecomment-466952093,,"On 02/25/19 05:06, Michael R Sweet wrote:
 @paulmenzel How widely implemented are these security features?
Do you mean in general or just for the CUPS daemon? In general,
they are now widely implement, and a lot of services use them. For
CUPS it’s not widely used yet.
 Also, at first glance we'll need to use `@` variables for the
 writable directories,
Sorry, I missed that, and have now amended the commit. Is
`@CUPS_SERVERROOT@` meant for `/etc/cups`?
 not to mention that a *lot* of drivers depend on other locations
 being writable as well.
In separate paths, or below the CUPS directories?",True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5528#issuecomment-467024980,,"@paulmenzel I was more concerned with whether these changes were widely implements/supported by systemd - if this is a relatively new thing I'd rather have the distros pick this up first and only incorporate it once things have settled down.
@CUPS_SERVERROOT@ is for /etc/cups, and the other directories each have a corresponding variable.
As for writable directories, yes there are a number of drivers and third-party solutions that regularly write outside the usual CUPS directories. For macOS we use more of a blacklist approach for system directories, and apply custom sandbox profiles to print filters and other ""helper"" programs separate from the scheduler (cupsd). Using the same security profile for cupsd and its children is of limited usefulness... :/",True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/CameronNemo,6,https://github.com/apple/cups/pull/5528#issuecomment-469076248,,"FWIW Ubuntu has shipped cups with an AppArmor profile for years. Debian will do the same for the upcoming Buster release. Perhaps LSM policy is a more fruitful avenue to pursue, considering how limited systemd's security directives can be.",True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/Maryse47,7,https://github.com/apple/cups/pull/5528#issuecomment-522310175,,"@CameronNemo only few distros have AppArmor enabled by default while most distros use systemd. Also systemd  security directives aren't limited in comparison with AppArmor, actually it's the opposite  - systemd can handle seccomp rules while AppArmor doesn't.",True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/CameronNemo,8,https://github.com/apple/cups/pull/5528#issuecomment-522335430,,"the only seccomp feature you are using is the w^x directive. that can easily be emulated with apparmor by only allowing files to be mapped or written, not both.
but yes systemd gets you more distro coverage. i was just offering a friendly suggestion.",True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/Maryse47,9,https://github.com/apple/cups/pull/5528#issuecomment-522561326,,"@CameronNemo
No, systemd allows for blacklist/whitelist specific syscalls, not used here but possible.
Also AppArmor doesn't allow to express w^x for the same file which is the point.
I don't know why you refer to ""you are using"" when I didn't created this PR.",True,{}
apple/cups,https://github.com/apple/cups,5528,2019-02-24T10:31:51Z,2021-03-11T12:04:45Z,2021-03-11T12:04:45Z,CLOSED,False,11,0,1,https://github.com/paulmenzel,Harden cupsd systemd service by default,1,['enhancement'],https://github.com/apple/cups/pull/5528,https://github.com/michaelrsweet,10,https://github.com/apple/cups/pull/5528#issuecomment-796688645,,Please report this to the OpenPrinting CUPS project.,True,{}
apple/cups,https://github.com/apple/cups,5529,2019-02-24T11:15:33Z,2019-05-15T20:40:31Z,2019-05-15T20:40:31Z,CLOSED,False,0,0,27,https://github.com/Rigo-V,Optimise graphics (PNG+PDF) with zopflipng and ghostscript,2,['enhancement'],https://github.com/apple/cups/pull/5529,https://github.com/Rigo-V,1,https://github.com/apple/cups/pull/5529,Shaved 1.8MiB off the pdf files test/*.pdf.,Shaved 1.8MiB off the pdf files test/*.pdf.,True,{}
apple/cups,https://github.com/apple/cups,5529,2019-02-24T11:15:33Z,2019-05-15T20:40:31Z,2019-05-15T20:40:31Z,CLOSED,False,0,0,27,https://github.com/Rigo-V,Optimise graphics (PNG+PDF) with zopflipng and ghostscript,2,['enhancement'],https://github.com/apple/cups/pull/5529,https://github.com/Rigo-V,2,https://github.com/apple/cups/pull/5529#issuecomment-466764735,Shaved 1.8MiB off the pdf files test/*.pdf.,"This seems to contain the PNG optimisations from the pull request 5527 as well, so I closed that one.",True,{}
apple/cups,https://github.com/apple/cups,5529,2019-02-24T11:15:33Z,2019-05-15T20:40:31Z,2019-05-15T20:40:31Z,CLOSED,False,0,0,27,https://github.com/Rigo-V,Optimise graphics (PNG+PDF) with zopflipng and ghostscript,2,['enhancement'],https://github.com/apple/cups/pull/5529,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5529#issuecomment-466864714,Shaved 1.8MiB off the pdf files test/*.pdf.,"Since these files are generated using a separate program, and since Ghostscript-generated PDFs are not always the nicest, I hesitate to accept this pull request. Will investigate incorporating zopflipng (or something like it) into the PNG generation toolchain, but Ghostscript is a non-starter for this.",True,{}
apple/cups,https://github.com/apple/cups,5529,2019-02-24T11:15:33Z,2019-05-15T20:40:31Z,2019-05-15T20:40:31Z,CLOSED,False,0,0,27,https://github.com/Rigo-V,Optimise graphics (PNG+PDF) with zopflipng and ghostscript,2,['enhancement'],https://github.com/apple/cups/pull/5529,https://github.com/Rigo-V,4,https://github.com/apple/cups/pull/5529#issuecomment-466984012,Shaved 1.8MiB off the pdf files test/*.pdf.,"I understand your hesitation regarding the use of ghostscript. It sometimes make ugly pdfs. I used this command:
gs -sDEVICE=pdfwrite -dBATCH -dNOPAUSE -dPDFSETTINGS=/prepress -dCompatibilityLevel=1.4 -sOutputFile=file.pdf file.pdf.uncompressed
for compressing onepage-a4.pdf, onepage-letter.pdf, document-a4.pdf and document-letter.pdf, and cannot notice any loss of detail in the compressed files.
I cannot remember which exact command I used for the testfile.pdf, but there seems to be no degradation in it either (apart from the non-functioning hyperlinks, but that shouldn't be much of a problem since the file is for testing printing, right?
It'd obviously be fantastic if you incorporated optimisations in your toolchain itself. If that happens I definitely wouldn't mind this PR be rejected. Zopflipng seems like the best but also the slowest. But since the PNGs seem to be changed very rarely, this shouldn't be much of an issue.
I use the following options myself:
--iterations=500 --filters=01234mepb --lossy_transparent",True,{}
apple/cups,https://github.com/apple/cups,5529,2019-02-24T11:15:33Z,2019-05-15T20:40:31Z,2019-05-15T20:40:31Z,CLOSED,False,0,0,27,https://github.com/Rigo-V,Optimise graphics (PNG+PDF) with zopflipng and ghostscript,2,['enhancement'],https://github.com/apple/cups/pull/5529,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5529#issuecomment-492812367,Shaved 1.8MiB off the pdf files test/*.pdf.,"OK, I've done a bunch of testing and am happy with the results. Changes are getting pushed now...",True,{}
apple/cups,https://github.com/apple/cups,5529,2019-02-24T11:15:33Z,2019-05-15T20:40:31Z,2019-05-15T20:40:31Z,CLOSED,False,0,0,27,https://github.com/Rigo-V,Optimise graphics (PNG+PDF) with zopflipng and ghostscript,2,['enhancement'],https://github.com/apple/cups/pull/5529,https://github.com/michaelrsweet,6,https://github.com/apple/cups/pull/5529#issuecomment-492815352,Shaved 1.8MiB off the pdf files test/*.pdf.,"OK, changes are now merged.",True,{}
apple/cups,https://github.com/apple/cups,5531,2019-02-25T10:35:37Z,2019-02-25T14:04:14Z,2019-02-25T14:11:49Z,CLOSED,False,5,5,2,https://github.com/paulmenzel,Fix Travis CI configuration,3,['wontfix'],https://github.com/apple/cups/pull/5531,https://github.com/paulmenzel,1,https://github.com/apple/cups/pull/5531,,,True,{}
apple/cups,https://github.com/apple/cups,5531,2019-02-25T10:35:37Z,2019-02-25T14:04:14Z,2019-02-25T14:11:49Z,CLOSED,False,5,5,2,https://github.com/paulmenzel,Fix Travis CI configuration,3,['wontfix'],https://github.com/apple/cups/pull/5531,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5531#issuecomment-467022559,,"Sorry, I'm in the process of removing the travis support from the mainline CUPS due to my lack of privileges to grant repository access to Travis CI. I wish this was not so, but ...",True,{}
apple/cups,https://github.com/apple/cups,5531,2019-02-25T10:35:37Z,2019-02-25T14:04:14Z,2019-02-25T14:11:49Z,CLOSED,False,5,5,2,https://github.com/paulmenzel,Fix Travis CI configuration,3,['wontfix'],https://github.com/apple/cups/pull/5531,https://github.com/paulmenzel,3,https://github.com/apple/cups/pull/5531#issuecomment-467025106,,"I’d vote for keeping it even though you cannot directly use it, I still can, and it already found some things.
This pull request is still work in progress, as I put a commit trying to fix a build issue on top.",True,{}
apple/cups,https://github.com/apple/cups,5535,2019-02-27T18:45:05Z,2019-02-27T20:36:17Z,2019-02-27T20:36:17Z,CLOSED,False,2,2,1,https://github.com/Nikitosh,Fix saving cupsJobPassword in PPD cache,1,['priority-low'],https://github.com/apple/cups/pull/5535,https://github.com/Nikitosh,1,https://github.com/apple/cups/pull/5535,"It seems there are typos in saving/reading PPD cache file, therefore ""job-password-supported"" attribute can't be fetched correctly.","It seems there are typos in saving/reading PPD cache file, therefore ""job-password-supported"" attribute can't be fetched correctly.",True,{}
apple/cups,https://github.com/apple/cups,5535,2019-02-27T18:45:05Z,2019-02-27T20:36:17Z,2019-02-27T20:36:17Z,CLOSED,False,2,2,1,https://github.com/Nikitosh,Fix saving cupsJobPassword in PPD cache,1,['priority-low'],https://github.com/apple/cups/pull/5535,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5535#issuecomment-468011192,"It seems there are typos in saving/reading PPD cache file, therefore ""job-password-supported"" attribute can't be fetched correctly.","OK, so the proposed changes are exactly correct, and it looks like there are also issues with JobAccountingId and JobAccountUserId...
Will be pushing a slightly different set of changes shortly...",True,{}
apple/cups,https://github.com/apple/cups,5535,2019-02-27T18:45:05Z,2019-02-27T20:36:17Z,2019-02-27T20:36:17Z,CLOSED,False,2,2,1,https://github.com/Nikitosh,Fix saving cupsJobPassword in PPD cache,1,['priority-low'],https://github.com/apple/cups/pull/5535,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5535#issuecomment-468020225,"It seems there are typos in saving/reading PPD cache file, therefore ""job-password-supported"" attribute can't be fetched correctly.","[master d88008a] Fix PPD caching and IPP Everywhere PPDs (Issue #5535)
[branch-2.2 dc792541e] Fix PPD caching and IPP Everywhere PPDs (Issue #5535)",True,{}
apple/cups,https://github.com/apple/cups,5551,2019-03-28T13:00:53Z,2019-04-15T20:16:39Z,2019-04-15T20:16:39Z,CLOSED,False,1,0,1,https://github.com/vtapia,scheduler/org.cups.cupsd.service.in: ensure that sssd is up when cups starts,1,['priority-low'],https://github.com/apple/cups/pull/5551,https://github.com/vtapia,1,https://github.com/apple/cups/pull/5551,"When the group defined in the SystemGroup directive is provided via
sssd, and sssd is not available when cups starts, cups will crash. This
patch makes cups start after sssd when both are present in the machine.
(Issue #5550)","When the group defined in the SystemGroup directive is provided via
sssd, and sssd is not available when cups starts, cups will crash. This
patch makes cups start after sssd when both are present in the machine.
(Issue #5550)",True,{}
apple/cups,https://github.com/apple/cups,5551,2019-03-28T13:00:53Z,2019-04-15T20:16:39Z,2019-04-15T20:16:39Z,CLOSED,False,1,0,1,https://github.com/vtapia,scheduler/org.cups.cupsd.service.in: ensure that sssd is up when cups starts,1,['priority-low'],https://github.com/apple/cups/pull/5551,https://github.com/imsedgar,2,https://github.com/apple/cups/pull/5551#issuecomment-477600291,"When the group defined in the SystemGroup directive is provided via
sssd, and sssd is not available when cups starts, cups will crash. This
patch makes cups start after sssd when both are present in the machine.
(Issue #5550)","If there is a After= dependency to the main repository, then the default from Fedora should also included:
After=network.target ypbind.service
CUPS requires a working network connection (to reach network printers), and sssd is just one possible name service, so ypbind should also be included. I would request to change the line to
After=network.target ypbind.service sssd.service",True,{'THUMBS_UP': ['https://github.com/zdohnal']}
apple/cups,https://github.com/apple/cups,5551,2019-03-28T13:00:53Z,2019-04-15T20:16:39Z,2019-04-15T20:16:39Z,CLOSED,False,1,0,1,https://github.com/vtapia,scheduler/org.cups.cupsd.service.in: ensure that sssd is up when cups starts,1,['priority-low'],https://github.com/apple/cups/pull/5551,https://github.com/zdohnal,3,https://github.com/apple/cups/pull/5551#issuecomment-477616959,"When the group defined in the SystemGroup directive is provided via
sssd, and sssd is not available when cups starts, cups will crash. This
patch makes cups start after sssd when both are present in the machine.
(Issue #5550)","@imsedgar Thanks for raising the issue up! I added that patch in Fedora some time ago, but I was not sure if it is a issue for upstream. The patch is for users, which use NIS for getting users/groups from other machine and put NIS user/group into SystemGroup. (But since NIS is quite old and not very used, I was not sure about reporting upstream).",True,{}
apple/cups,https://github.com/apple/cups,5551,2019-03-28T13:00:53Z,2019-04-15T20:16:39Z,2019-04-15T20:16:39Z,CLOSED,False,1,0,1,https://github.com/vtapia,scheduler/org.cups.cupsd.service.in: ensure that sssd is up when cups starts,1,['priority-low'],https://github.com/apple/cups/pull/5551,https://github.com/imsedgar,4,https://github.com/apple/cups/pull/5551#issuecomment-477634073,"When the group defined in the SystemGroup directive is provided via
sssd, and sssd is not available when cups starts, cups will crash. This
patch makes cups start after sssd when both are present in the machine.
(Issue #5550)","@zdohnal @vtapia In general I think that only ""After=network.target"" is necessary, because cups is a service that needs only access local files and the network. Packages (rpm, deb) can create a local user for this local service. This service is independent from the same service on other computers, there is no need to use the same uid, gid, username or group name between different hosts. So I think it is preferable not to share the user and group between different hosts, but keep it local to each host. Because of this I think it is a bad idea to share it in nis, ldap, active directory, etc.
For local use, I think, if sssd is configured but not running, then the name resolution interfaces will access files in /etc directly.",True,{}
apple/cups,https://github.com/apple/cups,5551,2019-03-28T13:00:53Z,2019-04-15T20:16:39Z,2019-04-15T20:16:39Z,CLOSED,False,1,0,1,https://github.com/vtapia,scheduler/org.cups.cupsd.service.in: ensure that sssd is up when cups starts,1,['priority-low'],https://github.com/apple/cups/pull/5551,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5551#issuecomment-483402043,"When the group defined in the SystemGroup directive is provided via
sssd, and sssd is not available when cups starts, cups will crash. This
patch makes cups start after sssd when both are present in the machine.
(Issue #5550)","[master 4d0f195] Update systemd service file for cupsd (Issue #5551)
[branch-2.2 aaebca5] Update systemd service file for cupsd (Issue #5551)",True,{}
apple/cups,https://github.com/apple/cups,5557,2019-04-05T15:44:42Z,2019-04-15T20:28:49Z,2019-04-15T20:28:49Z,CLOSED,False,9,0,1,https://github.com/Nikitosh,"Fix cupsCheckDestSupported() handling of ""job-password"" option",1,['priority-low'],https://github.com/apple/cups/pull/5557,https://github.com/Nikitosh,1,https://github.com/apple/cups/pull/5557,"CUPS doesn't handle correctly ""job-password"" option in cupsCheckDestSupported() function, since it expects the integer value when IPP tag of ""X-supported"" attribute is IPP_TAG_INTEGER, but in case of ""job-password"" we have string value.
This commit adds separate check for that and fixes it.","CUPS doesn't handle correctly ""job-password"" option in cupsCheckDestSupported() function, since it expects the integer value when IPP tag of ""X-supported"" attribute is IPP_TAG_INTEGER, but in case of ""job-password"" we have string value.
This commit adds separate check for that and fixes it.",True,{}
apple/cups,https://github.com/apple/cups,5557,2019-04-05T15:44:42Z,2019-04-15T20:28:49Z,2019-04-15T20:28:49Z,CLOSED,False,9,0,1,https://github.com/Nikitosh,"Fix cupsCheckDestSupported() handling of ""job-password"" option",1,['priority-low'],https://github.com/apple/cups/pull/5557,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5557#issuecomment-483399088,"CUPS doesn't handle correctly ""job-password"" option in cupsCheckDestSupported() function, since it expects the integer value when IPP tag of ""X-supported"" attribute is IPP_TAG_INTEGER, but in case of ""job-password"" we have string value.
This commit adds separate check for that and fixes it.","Hmm, I think we want to make this more general. Investigating.",True,{}
apple/cups,https://github.com/apple/cups,5557,2019-04-05T15:44:42Z,2019-04-15T20:28:49Z,2019-04-15T20:28:49Z,CLOSED,False,9,0,1,https://github.com/Nikitosh,"Fix cupsCheckDestSupported() handling of ""job-password"" option",1,['priority-low'],https://github.com/apple/cups/pull/5557,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5557#issuecomment-483406164,"CUPS doesn't handle correctly ""job-password"" option in cupsCheckDestSupported() function, since it expects the integer value when IPP tag of ""X-supported"" attribute is IPP_TAG_INTEGER, but in case of ""job-password"" we have string value.
This commit adds separate check for that and fixes it.","[master 677e4ca] For octetString values, compare the length against the -supported value (Issue #5557)
[branch-2.2 0ad7895] For octetString values, compare the length against the -supported value (Issue #5557)",True,{}
apple/cups,https://github.com/apple/cups,5558,2019-04-05T15:59:20Z,2019-04-15T20:06:56Z,2019-04-15T20:06:56Z,CLOSED,False,13,1,1,https://github.com/Nikitosh,Fix handling of OctetString in get_options() function,1,['priority-high'],https://github.com/apple/cups/pull/5558,https://github.com/Nikitosh,1,https://github.com/apple/cups/pull/5558,"The OctetString option was handled as if they have IPP_TAG_NAME tag, though it stores its data in unknown.data instead of string.text and also stores length instead of '\0' end symbol.","The OctetString option was handled as if they have IPP_TAG_NAME tag, though it stores its data in unknown.data instead of string.text and also stores length instead of '\0' end symbol.",True,{}
apple/cups,https://github.com/apple/cups,5558,2019-04-05T15:59:20Z,2019-04-15T20:06:56Z,2019-04-15T20:06:56Z,CLOSED,False,13,1,1,https://github.com/Nikitosh,Fix handling of OctetString in get_options() function,1,['priority-high'],https://github.com/apple/cups/pull/5558,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5558#issuecomment-483382409,"The OctetString option was handled as if they have IPP_TAG_NAME tag, though it stores its data in unknown.data instead of string.text and also stores length instead of '\0' end symbol.",This fix is incomplete - ipp_length() also needs to be updated...,True,{}
apple/cups,https://github.com/apple/cups,5558,2019-04-05T15:59:20Z,2019-04-15T20:06:56Z,2019-04-15T20:06:56Z,CLOSED,False,13,1,1,https://github.com/Nikitosh,Fix handling of OctetString in get_options() function,1,['priority-high'],https://github.com/apple/cups/pull/5558,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5558#issuecomment-483398784,"The OctetString option was handled as if they have IPP_TAG_NAME tag, though it stores its data in unknown.data instead of string.text and also stores length instead of '\0' end symbol.","I'm also opting to support hex encoding when the string contains binary data.
[master 5483fd2] Correctly encode octetString values for print filters (Issue #5558)
[branch-2.2 803b6de] Correctly encode octetString values for print filters (Issue #5558)",True,{}
apple/cups,https://github.com/apple/cups,5567,2019-04-18T14:18:57Z,2019-04-18T17:31:18Z,2019-04-18T17:31:18Z,CLOSED,False,14,3,1,https://github.com/dheeraj135,Correct ippeveprinter.c compilation error on Ubuntu.,1,[],https://github.com/apple/cups/pull/5567,https://github.com/dheeraj135,1,https://github.com/apple/cups/pull/5567,"Make command fails to compile the ippeveprinter.c file on Ubuntu. I tested this patch on Ubuntu 18.04 and Ubuntu 19.04 and it seems to work.
Fix #5566.","Make command fails to compile the ippeveprinter.c file on Ubuntu. I tested this patch on Ubuntu 18.04 and Ubuntu 19.04 and it seems to work.
Fix #5566.",True,{}
apple/cups,https://github.com/apple/cups,5567,2019-04-18T14:18:57Z,2019-04-18T17:31:18Z,2019-04-18T17:31:18Z,CLOSED,False,14,3,1,https://github.com/dheeraj135,Correct ippeveprinter.c compilation error on Ubuntu.,1,[],https://github.com/apple/cups/pull/5567,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5567#issuecomment-484603696,"Make command fails to compile the ippeveprinter.c file on Ubuntu. I tested this patch on Ubuntu 18.04 and Ubuntu 19.04 and it seems to work.
Fix #5566.","No, the correct fix is to change the typedef for Avahi.",True,{'THUMBS_UP': ['https://github.com/dheeraj135']}
apple/cups,https://github.com/apple/cups,5577,2019-05-08T12:20:06Z,2019-05-08T14:44:26Z,2019-05-08T15:33:37Z,MERGED,True,6,6,1,https://github.com/OdyX,Test: Fix *topdf filters to find the examples in the correct path,2,['priority-low'],https://github.com/apple/cups/pull/5577,https://github.com/OdyX,1,https://github.com/apple/cups/pull/5577,"As identified in #5576 (comment), some files cannot be found in tests.
Indeed, the generated filters look for some example files in test/ while they moved to examples/ between v2.3b7 and v2.3b8.","As identified in #5576 (comment), some files cannot be found in tests.
Indeed, the generated filters look for some example files in test/ while they moved to examples/ between v2.3b7 and v2.3b8.",True,{}
apple/cups,https://github.com/apple/cups,5577,2019-05-08T12:20:06Z,2019-05-08T14:44:26Z,2019-05-08T15:33:37Z,MERGED,True,6,6,1,https://github.com/OdyX,Test: Fix *topdf filters to find the examples in the correct path,2,['priority-low'],https://github.com/apple/cups/pull/5577,https://github.com/OdyX,2,https://github.com/apple/cups/pull/5577#issuecomment-490485602,"As identified in #5576 (comment), some files cannot be found in tests.
Indeed, the generated filters look for some example files in test/ while they moved to examples/ between v2.3b7 and v2.3b8.",These patches fix #5576 indeed: https://travis-ci.org/OdyX/cups/builds/529780093,True,{}
apple/cups,https://github.com/apple/cups,5577,2019-05-08T12:20:06Z,2019-05-08T14:44:26Z,2019-05-08T15:33:37Z,MERGED,True,6,6,1,https://github.com/OdyX,Test: Fix *topdf filters to find the examples in the correct path,2,['priority-low'],https://github.com/apple/cups/pull/5577,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5577#issuecomment-490515120,"As identified in #5576 (comment), some files cannot be found in tests.
Indeed, the generated filters look for some example files in test/ while they moved to examples/ between v2.3b7 and v2.3b8.","Ah, good catch!",True,{}
apple/cups,https://github.com/apple/cups,5588,2019-05-30T12:20:04Z,2019-05-30T14:20:51Z,2019-05-30T14:21:37Z,MERGED,True,1,1,1,https://github.com/dargad,Fix parentheses in cupsdCleanJobs.,1,['priority-medium'],https://github.com/apple/cups/pull/5588,https://github.com/dargad,1,https://github.com/apple/cups/pull/5588,While backporting the PreserveJobHistory fix to Ubuntu 16.04 I noticed there probably is a typo. Adjusted syntax to be consistent with next if.,While backporting the PreserveJobHistory fix to Ubuntu 16.04 I noticed there probably is a typo. Adjusted syntax to be consistent with next if.,True,{}
apple/cups,https://github.com/apple/cups,5590,2019-06-03T16:30:59Z,2019-06-10T19:13:00Z,2019-06-10T19:13:00Z,MERGED,True,2,2,1,https://github.com/yurashek,Swapped branches of HAVE_SSL condition,1,['priority-medium'],https://github.com/apple/cups/pull/5590,https://github.com/yurashek,1,https://github.com/apple/cups/pull/5590,"Swapped branches of #ifdef HAVE_SSL conditional
Can not be built if HAVE_SSL is undefined because of missing ""securi"" identifier.","Swapped branches of #ifdef HAVE_SSL conditional
Can not be built if HAVE_SSL is undefined because of missing ""securi"" identifier.",True,{}
apple/cups,https://github.com/apple/cups,5591,2019-06-07T04:02:30Z,2019-06-13T20:40:28Z,2019-06-13T20:40:28Z,CLOSED,False,13,13,5,https://github.com/mpsuzuki,insert explicit casts to calm compiler warnings for -Wsign-conversion,1,['priority-low'],https://github.com/apple/cups/pull/5591,https://github.com/mpsuzuki,1,https://github.com/apple/cups/pull/5591,"During compilation of the latest source, I received several warnings for -WSign-conversion. Here is a patch inserting explicit casts to calm them.","During compilation of the latest source, I received several warnings for -WSign-conversion. Here is a patch inserting explicit casts to calm them.",True,{}
apple/cups,https://github.com/apple/cups,5591,2019-06-07T04:02:30Z,2019-06-13T20:40:28Z,2019-06-13T20:40:28Z,CLOSED,False,13,13,5,https://github.com/mpsuzuki,insert explicit casts to calm compiler warnings for -Wsign-conversion,1,['priority-low'],https://github.com/apple/cups/pull/5591,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5591#issuecomment-500410991,"During compilation of the latest source, I received several warnings for -WSign-conversion. Here is a patch inserting explicit casts to calm them.",Sigh...  This is all because the newest GCC defaults to unsigned enums... Will consider for 2.3.x.,True,{}
apple/cups,https://github.com/apple/cups,5591,2019-06-07T04:02:30Z,2019-06-13T20:40:28Z,2019-06-13T20:40:28Z,CLOSED,False,13,13,5,https://github.com/mpsuzuki,insert explicit casts to calm compiler warnings for -Wsign-conversion,1,['priority-low'],https://github.com/apple/cups/pull/5591,https://github.com/mpsuzuki,3,https://github.com/apple/cups/pull/5591#issuecomment-500413653,"During compilation of the latest source, I received several warnings for -WSign-conversion. Here is a patch inserting explicit casts to calm them.","I see. How about add ""-Wno-sign-conversion"" to CFLAGS as quick workaround?",True,{}
apple/cups,https://github.com/apple/cups,5591,2019-06-07T04:02:30Z,2019-06-13T20:40:28Z,2019-06-13T20:40:28Z,CLOSED,False,13,13,5,https://github.com/mpsuzuki,insert explicit casts to calm compiler warnings for -Wsign-conversion,1,['priority-low'],https://github.com/apple/cups/pull/5591,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5591#issuecomment-500550298,"During compilation of the latest source, I received several warnings for -WSign-conversion. Here is a patch inserting explicit casts to calm them.","@mpsuzuki The problem with -Wno-sign-conversion is that it also eliminates valid issues, like between size_t and ssize_t, that we want to see reported.",True,{}
apple/cups,https://github.com/apple/cups,5591,2019-06-07T04:02:30Z,2019-06-13T20:40:28Z,2019-06-13T20:40:28Z,CLOSED,False,13,13,5,https://github.com/mpsuzuki,insert explicit casts to calm compiler warnings for -Wsign-conversion,1,['priority-low'],https://github.com/apple/cups/pull/5591,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5591#issuecomment-501870540,"During compilation of the latest source, I received several warnings for -WSign-conversion. Here is a patch inserting explicit casts to calm them.","Merged mostly as-is...
[master 8ef4f50] Eliminate new GCC compiler warnings (Issue #5591)",True,{}
apple/cups,https://github.com/apple/cups,5592,2019-06-07T04:04:51Z,2019-06-07T08:19:58Z,2019-06-07T08:19:58Z,CLOSED,False,2,2,1,https://github.com/mpsuzuki,"dump both of uri & securi if HAVE_SSL, dump uri only if not HAVE_SSL",1,[],https://github.com/apple/cups/pull/5592,https://github.com/mpsuzuki,1,https://github.com/apple/cups/pull/5592,"During compilation of the latest source, accidentally I found a failure in building without SSL. It seems that current source does not dump securi if SSL is available but tries to dump securi if SSL is unavailable. securi is not defined if SSL is unavailable, so I exchanged the debug messages for the cases with/without SSL.","During compilation of the latest source, accidentally I found a failure in building without SSL. It seems that current source does not dump securi if SSL is available but tries to dump securi if SSL is unavailable. securi is not defined if SSL is unavailable, so I exchanged the debug messages for the cases with/without SSL.",True,{}
apple/cups,https://github.com/apple/cups,5592,2019-06-07T04:04:51Z,2019-06-07T08:19:58Z,2019-06-07T08:19:58Z,CLOSED,False,2,2,1,https://github.com/mpsuzuki,"dump both of uri & securi if HAVE_SSL, dump uri only if not HAVE_SSL",1,[],https://github.com/apple/cups/pull/5592,https://github.com/mpsuzuki,2,https://github.com/apple/cups/pull/5592#issuecomment-499799981,"During compilation of the latest source, accidentally I found a failure in building without SSL. It seems that current source does not dump securi if SSL is available but tries to dump securi if SSL is unavailable. securi is not defined if SSL is unavailable, so I exchanged the debug messages for the cases with/without SSL.","sorry, I found this PR is a duplicate of PR #5590, I close this.",True,{}
apple/cups,https://github.com/apple/cups,5593,2019-06-07T04:09:39Z,2019-06-10T13:09:17Z,2019-06-10T13:17:14Z,MERGED,True,0,22,1,https://github.com/mpsuzuki,remove unused to64() from scheduler/auth.c to calm warning for -Wunused-functions,1,['priority-low'],https://github.com/apple/cups/pull/5593,https://github.com/mpsuzuki,1,https://github.com/apple/cups/pull/5593,"scheduler/auth.c has static to64() function if LIBPAM is unavailable, but there is no part using it. To calm -Wunused-functions, I removed to64(). Please could you consider?","scheduler/auth.c has static to64() function if LIBPAM is unavailable, but there is no part using it. To calm -Wunused-functions, I removed to64(). Please could you consider?",True,{}
apple/cups,https://github.com/apple/cups,5593,2019-06-07T04:09:39Z,2019-06-10T13:09:17Z,2019-06-10T13:17:14Z,MERGED,True,0,22,1,https://github.com/mpsuzuki,remove unused to64() from scheduler/auth.c to calm warning for -Wunused-functions,1,['priority-low'],https://github.com/apple/cups/pull/5593,https://github.com/mpsuzuki,2,https://github.com/apple/cups/pull/5593#issuecomment-500412998,"scheduler/auth.c has static to64() function if LIBPAM is unavailable, but there is no part using it. To calm -Wunused-functions, I removed to64(). Please could you consider?",thank you for taking care on this!,True,{}
apple/cups,https://github.com/apple/cups,5594,2019-06-10T15:09:04Z,2019-12-04T16:52:56Z,2019-12-04T16:52:56Z,CLOSED,False,41,0,2,https://github.com/trialuser02,Implement `cupsEnumDests2` function.,1,['enhancement'],https://github.com/apple/cups/pull/5594,https://github.com/trialuser02,1,https://github.com/apple/cups/pull/5594,I propose to implement the function cupsEnumDests2. It will allow to enumerate destinations using specified connection.,I propose to implement the function cupsEnumDests2. It will allow to enumerate destinations using specified connection.,True,{}
apple/cups,https://github.com/apple/cups,5594,2019-06-10T15:09:04Z,2019-12-04T16:52:56Z,2019-12-04T16:52:56Z,CLOSED,False,41,0,2,https://github.com/trialuser02,Implement `cupsEnumDests2` function.,1,['enhancement'],https://github.com/apple/cups/pull/5594,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5594#issuecomment-500551821,I propose to implement the function cupsEnumDests2. It will allow to enumerate destinations using specified connection.,"Will consider, however one of the key elements of cupsEnumDests is that it doesn't depend on the application being able to talk directly to a printer - sandboxing can prevent outside network connections. By providing the http_t connection for the ""local"" server you run the risk of that breaking, and we don't want to provide more ways for developers to get things wrong...",True,{}
apple/cups,https://github.com/apple/cups,5594,2019-06-10T15:09:04Z,2019-12-04T16:52:56Z,2019-12-04T16:52:56Z,CLOSED,False,41,0,2,https://github.com/trialuser02,Implement `cupsEnumDests2` function.,1,['enhancement'],https://github.com/apple/cups/pull/5594,https://github.com/trialuser02,3,https://github.com/apple/cups/pull/5594#issuecomment-500573603,I propose to implement the function cupsEnumDests2. It will allow to enumerate destinations using specified connection.,But other functions have alternative with http_t* argument (cupsGetDests -> cupsGetDests2). It is rather strange that this function is not in this list.,True,{}
apple/cups,https://github.com/apple/cups,5594,2019-06-10T15:09:04Z,2019-12-04T16:52:56Z,2019-12-04T16:52:56Z,CLOSED,False,41,0,2,https://github.com/trialuser02,Implement `cupsEnumDests2` function.,1,['enhancement'],https://github.com/apple/cups/pull/5594,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5594#issuecomment-500575927,I propose to implement the function cupsEnumDests2. It will allow to enumerate destinations using specified connection.,"@trialuser02 cupsEnumDests provides an abstraction for the connection details - you discover available printers with cupsEnumDests, and connect to the appropriate service with the cupsConnectDest API afterwards.",True,{}
apple/cups,https://github.com/apple/cups,5594,2019-06-10T15:09:04Z,2019-12-04T16:52:56Z,2019-12-04T16:52:56Z,CLOSED,False,41,0,2,https://github.com/trialuser02,Implement `cupsEnumDests2` function.,1,['enhancement'],https://github.com/apple/cups/pull/5594,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5594#issuecomment-561733632,I propose to implement the function cupsEnumDests2. It will allow to enumerate destinations using specified connection.,"Sorry, we've decided not to implement this function.",True,{}
apple/cups,https://github.com/apple/cups,5606,2019-07-03T15:21:22Z,2021-03-11T12:03:12Z,2021-03-11T12:03:12Z,CLOSED,False,9,0,1,https://github.com/roberthoffmann,"Fix ""sides"" option if using *Duplex* in lpoptions file",1,['priority-low'],https://github.com/apple/cups/pull/5606,https://github.com/roberthoffmann,1,https://github.com/apple/cups/pull/5606,"Remove Duplex option read from lpoptions file if ""sides"" is
specified on command line. Otherwise both options would be
present and ""sides"" would not override Duplex.
Test case:
Have a ~/.cups/lpoptions file containing a Duplex option like this:
$ cat ~/.cups/lpoptions
Default myprinter Duplex=None PageSize=A4
Print a document with more than one page on a printer supporting
duplex:
$ lpr -P myprinter -o sides=two-sided-long-edge test.pdf
Without this patch the document is not printed two-sided,
with this patch applied it is printed two-sided.","Remove Duplex option read from lpoptions file if ""sides"" is
specified on command line. Otherwise both options would be
present and ""sides"" would not override Duplex.
Test case:
Have a ~/.cups/lpoptions file containing a Duplex option like this:
$ cat ~/.cups/lpoptions
Default myprinter Duplex=None PageSize=A4
Print a document with more than one page on a printer supporting
duplex:
$ lpr -P myprinter -o sides=two-sided-long-edge test.pdf
Without this patch the document is not printed two-sided,
with this patch applied it is printed two-sided.",True,{}
apple/cups,https://github.com/apple/cups,5606,2019-07-03T15:21:22Z,2021-03-11T12:03:12Z,2021-03-11T12:03:12Z,CLOSED,False,9,0,1,https://github.com/roberthoffmann,"Fix ""sides"" option if using *Duplex* in lpoptions file",1,['priority-low'],https://github.com/apple/cups/pull/5606,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5606#issuecomment-508153950,"Remove Duplex option read from lpoptions file if ""sides"" is
specified on command line. Otherwise both options would be
present and ""sides"" would not override Duplex.
Test case:
Have a ~/.cups/lpoptions file containing a Duplex option like this:
$ cat ~/.cups/lpoptions
Default myprinter Duplex=None PageSize=A4
Print a document with more than one page on a printer supporting
duplex:
$ lpr -P myprinter -o sides=two-sided-long-edge test.pdf
Without this patch the document is not printed two-sided,
with this patch applied it is printed two-sided.","This isn't strictly the correct fix, as there are many PPD options that map to sides... Will consider for a future update.",True,{}
apple/cups,https://github.com/apple/cups,5606,2019-07-03T15:21:22Z,2021-03-11T12:03:12Z,2021-03-11T12:03:12Z,CLOSED,False,9,0,1,https://github.com/roberthoffmann,"Fix ""sides"" option if using *Duplex* in lpoptions file",1,['priority-low'],https://github.com/apple/cups/pull/5606,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5606#issuecomment-796687802,"Remove Duplex option read from lpoptions file if ""sides"" is
specified on command line. Otherwise both options would be
present and ""sides"" would not override Duplex.
Test case:
Have a ~/.cups/lpoptions file containing a Duplex option like this:
$ cat ~/.cups/lpoptions
Default myprinter Duplex=None PageSize=A4
Print a document with more than one page on a printer supporting
duplex:
$ lpr -P myprinter -o sides=two-sided-long-edge test.pdf
Without this patch the document is not printed two-sided,
with this patch applied it is printed two-sided.",Please report this to the OpenPrinting CUPS project.,True,{}
apple/cups,https://github.com/apple/cups,5608,2019-07-08T22:05:54Z,2019-07-12T12:36:10Z,2019-07-12T12:36:10Z,MERGED,True,1,1,1,https://github.com/kenshin33,french translation correction,1,['priority-low'],https://github.com/apple/cups/pull/5608,https://github.com/kenshin33,1,https://github.com/apple/cups/pull/5608,,,True,{}
apple/cups,https://github.com/apple/cups,5610,2019-07-09T11:29:06Z,2019-07-16T13:28:30Z,2019-07-16T15:11:01Z,CLOSED,False,2,0,1,https://github.com/zdohnal,Fix not-working cupsSNMPSupplies and cupsIPPSupplies settings via lpa…,2,['priority-medium'],https://github.com/apple/cups/pull/5610,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5610,"…dmin
Connected to issue #5609","…dmin
Connected to issue #5609",True,{}
apple/cups,https://github.com/apple/cups,5610,2019-07-09T11:29:06Z,2019-07-16T13:28:30Z,2019-07-16T15:11:01Z,CLOSED,False,2,0,1,https://github.com/zdohnal,Fix not-working cupsSNMPSupplies and cupsIPPSupplies settings via lpa…,2,['priority-medium'],https://github.com/apple/cups/pull/5610,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5610#issuecomment-510870062,"…dmin
Connected to issue #5609","Looks about right, will need to merge by hand however...",True,{}
apple/cups,https://github.com/apple/cups,5610,2019-07-09T11:29:06Z,2019-07-16T13:28:30Z,2019-07-16T15:11:01Z,CLOSED,False,2,0,1,https://github.com/zdohnal,Fix not-working cupsSNMPSupplies and cupsIPPSupplies settings via lpa…,2,['priority-medium'],https://github.com/apple/cups/pull/5610,https://github.com/zdohnal,3,https://github.com/apple/cups/pull/5610#issuecomment-511717667,"…dmin
Connected to issue #5609","Oh, I missed the indentation - I hope I corrected it now, please correct me if I'm wrong.",True,{}
apple/cups,https://github.com/apple/cups,5610,2019-07-09T11:29:06Z,2019-07-16T13:28:30Z,2019-07-16T15:11:01Z,CLOSED,False,2,0,1,https://github.com/zdohnal,Fix not-working cupsSNMPSupplies and cupsIPPSupplies settings via lpa…,2,['priority-medium'],https://github.com/apple/cups/pull/5610,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5610#issuecomment-511813868,"…dmin
Connected to issue #5609","Indentation looks fine, I just can't merge to multiple Git branches via pull requests. No biggy, this is a small change...",True,{}
apple/cups,https://github.com/apple/cups,5610,2019-07-09T11:29:06Z,2019-07-16T13:28:30Z,2019-07-16T15:11:01Z,CLOSED,False,2,0,1,https://github.com/zdohnal,Fix not-working cupsSNMPSupplies and cupsIPPSupplies settings via lpa…,2,['priority-medium'],https://github.com/apple/cups/pull/5610,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5610#issuecomment-511815733,"…dmin
Connected to issue #5609","Oh, and there were two other places where we needed to set ppdchanged to 1...
[master 9539c53] Fix lpadmin with cupsIPPSupplies and cupsSNMPSupplies (Issue #5610)
[branch-2.2 c507739] Fix lpadmin with cupsIPPSupplies and cupsSNMPSupplies (Issue #5610)",True,{}
apple/cups,https://github.com/apple/cups,5610,2019-07-09T11:29:06Z,2019-07-16T13:28:30Z,2019-07-16T15:11:01Z,CLOSED,False,2,0,1,https://github.com/zdohnal,Fix not-working cupsSNMPSupplies and cupsIPPSupplies settings via lpa…,2,['priority-medium'],https://github.com/apple/cups/pull/5610,https://github.com/zdohnal,6,https://github.com/apple/cups/pull/5610#issuecomment-511843363,"…dmin
Connected to issue #5609","Indentation looks fine, I just can't merge to multiple Git branches via pull requests. No biggy, this is a small change...

Can I do anything about it in the future?

Oh, and there were two other places where we needed to set ppdchanged to 1...

D'oh, I missed those two, thank you for checking!

[master 9539c53] Fix lpadmin with cupsIPPSupplies and cupsSNMPSupplies (Issue #5610)
[branch-2.2 c507739] Fix lpadmin with cupsIPPSupplies and cupsSNMPSupplies (Issue #5610)

Thank you for the fix!",True,{}
apple/cups,https://github.com/apple/cups,5610,2019-07-09T11:29:06Z,2019-07-16T13:28:30Z,2019-07-16T15:11:01Z,CLOSED,False,2,0,1,https://github.com/zdohnal,Fix not-working cupsSNMPSupplies and cupsIPPSupplies settings via lpa…,2,['priority-medium'],https://github.com/apple/cups/pull/5610,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5610#issuecomment-511858886,"…dmin
Connected to issue #5609","@zdohnal Unfortunately, Github is all about merging to master. Until they add support for pull requests against alternate branches I'll just keep doing manual merges...
Most of these fixes are pretty small anythings, so it is no problem - the bulk of the work has already been done! :)",True,{}
apple/cups,https://github.com/apple/cups,5611,2019-07-10T17:45:07Z,2019-08-16T17:32:36Z,2019-08-16T17:34:13Z,CLOSED,False,0,0,0,https://github.com/j39m,Add extra NULL check before calling strlcpy().,0,['unable-to-reproduce'],https://github.com/apple/cups/pull/5611,https://github.com/j39m,1,https://github.com/apple/cups/pull/5611,"We detected a crash in _ppdCreateFromIPP() when calling [_cups_]strlcpy(). The trace suggested that the ippGetString() call was returning NULL.
Unfortunately, I was unable to reproduce this crash locally.","We detected a crash in _ppdCreateFromIPP() when calling [_cups_]strlcpy(). The trace suggested that the ippGetString() call was returning NULL.
Unfortunately, I was unable to reproduce this crash locally.",True,{}
apple/cups,https://github.com/apple/cups,5611,2019-07-10T17:45:07Z,2019-08-16T17:32:36Z,2019-08-16T17:34:13Z,CLOSED,False,0,0,0,https://github.com/j39m,Add extra NULL check before calling strlcpy().,0,['unable-to-reproduce'],https://github.com/apple/cups/pull/5611,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5611#issuecomment-510869754,"We detected a crash in _ppdCreateFromIPP() when calling [_cups_]strlcpy(). The trace suggested that the ippGetString() call was returning NULL.
Unfortunately, I was unable to reproduce this crash locally.",It is impossible for ippGetString to return NULL for a valid text attribute pointer. Will investigate some more but it would be very useful to have some details of the affected printer.,True,{}
apple/cups,https://github.com/apple/cups,5611,2019-07-10T17:45:07Z,2019-08-16T17:32:36Z,2019-08-16T17:34:13Z,CLOSED,False,0,0,0,https://github.com/j39m,Add extra NULL check before calling strlcpy().,0,['unable-to-reproduce'],https://github.com/apple/cups/pull/5611,https://github.com/j39m,3,https://github.com/apple/cups/pull/5611#issuecomment-516620822,"We detected a crash in _ppdCreateFromIPP() when calling [_cups_]strlcpy(). The trace suggested that the ippGetString() call was returning NULL.
Unfortunately, I was unable to reproduce this crash locally.","I'm sorry to say I don't have that data; we don't know what printer could have done this. My teammate recalls that he configured ippserver to reply without a make-and-model to elicit a crash from lpadmin.
Here's a long-winded stack trace:
Thread 0 (crashed)
 0  libc-2.23.so!strlen + 0x26
    rax = 0x0000000000000000   rdx = 0x0000000000000029
    rcx = 0x0000000000000000   rbx = 0x0000000000000028
    rsi = 0x0000000000000000   rdi = 0x0000000000000000
    rbp = 0x00007ffd170bf260   rsp = 0x00007ffd170bf238
     r8 = 0x00007743bb852580    r9 = 0x000000000000001a
    r10 = 0x0000000000000009   r11 = 0x00007ffd170bf1d0
    r12 = 0x00005fa0c3c6cc10   r13 = 0x00005fa0c3c70250
    r14 = 0x0000000000000000   r15 = 0x00007ffd170bf8d0
    rip = 0x00007743bb534a46
    Found by: given as instruction pointer in context
 1  libcups.so.2!_cups_strlcpy [string.c : 745 + 0x8]
    rbx = 0x0000000000000028   rbp = 0x00007ffd170bf260
    rsp = 0x00007ffd170bf240   r12 = 0x00005fa0c3c6cc10
    r13 = 0x00005fa0c3c70250   r14 = 0x0000000000000000
    r15 = 0x00007ffd170bf8d0   rip = 0x00007743bbc4f0fe
    Found by: call frame info
 2  libcups.so.2!_ppdCreateFromIPP [ppd-cache.c : 0 + 0x18]
    rbx = 0x0000000000007404   rbp = 0x00007ffd170bfa30
    rsp = 0x00007ffd170bf270   r12 = 0x00005fa0c3c6cc10
    r13 = 0x00005fa0c3c70250   r14 = 0x00005fa0c3c70420
    r15 = 0x00005fa0c3c703e0   rip = 0x00007743bbc46ae1
    Found by: call frame info
 3  lpadmin!main [lpadmin.c : 1280 + 0x14]
    rbx = 0x00005fa0c3c6cc10   rbp = 0x00007ffd170c0f00
    rsp = 0x00007ffd170bfa40   r12 = 0x00005fa0c3c5ac70
    r13 = 0x00005fa0c375bfbf   r14 = 0x00005fa0c3c66740
    r15 = 0x00005fa0c3c59e24   rip = 0x00005fa0c375a86e
    Found by: call frame info
 4  libc-2.23.so!__libc_start_main [libc-start.c : 289 + 0x1a]
    rbx = 0x0000000000000000   rbp = 0x00007ffd170c0fd0
    rsp = 0x00007ffd170c0f10   r12 = 0x00005fa0c375bba0
    r13 = 0x00007ffd170c0ff0   r14 = 0x0000000000000000
    r15 = 0x0000000000000000   rip = 0x00007743bb4cf736
    Found by: call frame info
 5  lpadmin!_start + 0x29
    rbx = 0x0000000000000000   rbp = 0x0000000000000000
    rsp = 0x00007ffd170c0fe0   r12 = 0x00005fa0c3758f00
    r13 = 0x00007ffd170c0ff0   r14 = 0x0000000000000000
    r15 = 0x0000000000000000   rip = 0x00005fa0c3758f29
    Found by: call frame info
 6  0x7ffd170c0fe8
    rbx = 0x0000000000000000   rbp = 0x0000000000000000
    rsp = 0x00007ffd170c0fe8   r12 = 0x00005fa0c3758f00
    r13 = 0x00007ffd170c0ff0   r14 = 0x0000000000000000
    r15 = 0x0000000000000000   rip = 0x00007ffd170c0fe8
    Found by: call frame info
 7  lpadmin!_init + 0x538
    rsp = 0x00007ffd170c1130   rip = 0x00005fa0c3758f00
    Found by: stack scanning",True,{}
apple/cups,https://github.com/apple/cups,5611,2019-07-10T17:45:07Z,2019-08-16T17:32:36Z,2019-08-16T17:34:13Z,CLOSED,False,0,0,0,https://github.com/j39m,Add extra NULL check before calling strlcpy().,0,['unable-to-reproduce'],https://github.com/apple/cups/pull/5611,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5611#issuecomment-517472916,"We detected a crash in _ppdCreateFromIPP() when calling [_cups_]strlcpy(). The trace suggested that the ippGetString() call was returning NULL.
Unfortunately, I was unable to reproduce this crash locally.","@j39m  What version of CUPS are you using? I tried what you said and got the (expected) ""unknown"" for the make and model.",True,{}
apple/cups,https://github.com/apple/cups,5611,2019-07-10T17:45:07Z,2019-08-16T17:32:36Z,2019-08-16T17:34:13Z,CLOSED,False,0,0,0,https://github.com/j39m,Add extra NULL check before calling strlcpy().,0,['unable-to-reproduce'],https://github.com/apple/cups/pull/5611,https://github.com/j39m,5,https://github.com/apple/cups/pull/5611#issuecomment-518381079,"We detected a crash in _ppdCreateFromIPP() when calling [_cups_]strlcpy(). The trace suggested that the ippGetString() call was returning NULL.
Unfortunately, I was unable to reproduce this crash locally.",The bulk of the reports we observe come from the Chrome OS fork of CUPS 2.1.4.,True,{}
apple/cups,https://github.com/apple/cups,5611,2019-07-10T17:45:07Z,2019-08-16T17:32:36Z,2019-08-16T17:34:13Z,CLOSED,False,0,0,0,https://github.com/j39m,Add extra NULL check before calling strlcpy().,0,['unable-to-reproduce'],https://github.com/apple/cups/pull/5611,https://github.com/j39m,6,https://github.com/apple/cups/pull/5611#issuecomment-522090248,"We detected a crash in _ppdCreateFromIPP() when calling [_cups_]strlcpy(). The trace suggested that the ippGetString() call was returning NULL.
Unfortunately, I was unable to reproduce this crash locally.","Sorry, I bungled the git setup with this. I'll reopen this pull request for posterity in a properly separated branch for posterity...",True,{}
apple/cups,https://github.com/apple/cups,5613,2019-07-16T06:03:25Z,2019-07-16T13:18:14Z,2019-07-16T13:18:14Z,CLOSED,False,8,2,1,https://github.com/manu0401,Lookup groups using group->gr_mem even if getgrouplist() failed,1,['priority-medium'],https://github.com/apple/cups/pull/5613,https://github.com/manu0401,1,https://github.com/apple/cups/pull/5613,"getgrouplist() iterate on each group, searching if the user
is included, while group->gr_mem iterated on user list for
the target group. In some case the former method can miss
the result while the later will succeed. This is the case
for OpenLDAP dyngroup, where the group members are automatically
generated on group search. Searching by group member gives no
result, while searching the member of a given groups is fine.","getgrouplist() iterate on each group, searching if the user
is included, while group->gr_mem iterated on user list for
the target group. In some case the former method can miss
the result while the later will succeed. This is the case
for OpenLDAP dyngroup, where the group members are automatically
generated on group search. Searching by group member gives no
result, while searching the member of a given groups is fine.",True,{}
apple/cups,https://github.com/apple/cups,5613,2019-07-16T06:03:25Z,2019-07-16T13:18:14Z,2019-07-16T13:18:14Z,CLOSED,False,8,2,1,https://github.com/manu0401,Lookup groups using group->gr_mem even if getgrouplist() failed,1,['priority-medium'],https://github.com/apple/cups/pull/5613,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5613#issuecomment-511798950,"getgrouplist() iterate on each group, searching if the user
is included, while group->gr_mem iterated on user list for
the target group. In some case the former method can miss
the result while the later will succeed. This is the case
for OpenLDAP dyngroup, where the group members are automatically
generated on group search. Searching by group member gives no
result, while searching the member of a given groups is fine.","Will consider this, although I am definitely not super happy about the inconsistency...",True,{}
apple/cups,https://github.com/apple/cups,5613,2019-07-16T06:03:25Z,2019-07-16T13:18:14Z,2019-07-16T13:18:14Z,CLOSED,False,8,2,1,https://github.com/manu0401,Lookup groups using group->gr_mem even if getgrouplist() failed,1,['priority-medium'],https://github.com/apple/cups/pull/5613,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5613#issuecomment-511811770,"getgrouplist() iterate on each group, searching if the user
is included, while group->gr_mem iterated on user list for
the target group. In some case the former method can miss
the result while the later will succeed. This is the case
for OpenLDAP dyngroup, where the group members are automatically
generated on group search. Searching by group member gives no
result, while searching the member of a given groups is fine.","I reworked this change to move the membership list check up front, followed by the getgrouplist check. We already have the list of usernames that are members, so this made more sense than checking after the (semi-expensive) getgrouplist check.
[master 3c27d2a] Always check the group membership list (Issue #5613)
[branch-2.2 666d076] Always check the group membership list (Issue #5613)",True,{}
apple/cups,https://github.com/apple/cups,5618,2019-07-20T10:25:05Z,2019-08-01T18:31:19Z,2019-08-01T18:31:33Z,CLOSED,False,3,0,1,https://github.com/rompic,Add USB quirk for HP LaserJet 1015 (Issue #5617),1,['priority-low'],https://github.com/apple/cups/pull/5618,https://github.com/rompic,1,https://github.com/apple/cups/pull/5618,,,True,{}
apple/cups,https://github.com/apple/cups,5618,2019-07-20T10:25:05Z,2019-08-01T18:31:19Z,2019-08-01T18:31:33Z,CLOSED,False,3,0,1,https://github.com/rompic,Add USB quirk for HP LaserJet 1015 (Issue #5617),1,['priority-low'],https://github.com/apple/cups/pull/5618,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5618#issuecomment-517406075,,Done!,True,{}
apple/cups,https://github.com/apple/cups,5620,2019-07-26T06:15:15Z,2019-07-26T20:03:00Z,2019-07-26T20:03:00Z,CLOSED,False,44,5,7,https://github.com/zdohnal,Introduce cupsHashNoCryptoData and --enable-gnutls-relax-mode configu…,2,[],https://github.com/apple/cups/pull/5620,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5620,"…re option
The cupsHashNoCryptoData function is for hashing non cryptographic data by MD5
hash function. MD5 hash function can be disabled in GNU TLS on specific machines
so new --enable-gnutls-relax-mode enables GNU TLS relax mode for use cases of MD5
which are not considered as encryption.","…re option
The cupsHashNoCryptoData function is for hashing non cryptographic data by MD5
hash function. MD5 hash function can be disabled in GNU TLS on specific machines
so new --enable-gnutls-relax-mode enables GNU TLS relax mode for use cases of MD5
which are not considered as encryption.",True,{}
apple/cups,https://github.com/apple/cups,5620,2019-07-26T06:15:15Z,2019-07-26T20:03:00Z,2019-07-26T20:03:00Z,CLOSED,False,44,5,7,https://github.com/zdohnal,Introduce cupsHashNoCryptoData and --enable-gnutls-relax-mode configu…,2,[],https://github.com/apple/cups/pull/5620,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5620#issuecomment-515340074,"…re option
The cupsHashNoCryptoData function is for hashing non cryptographic data by MD5
hash function. MD5 hash function can be disabled in GNU TLS on specific machines
so new --enable-gnutls-relax-mode enables GNU TLS relax mode for use cases of MD5
which are not considered as encryption.",I check it for cookie and UUID creation and it works.,True,{}
apple/cups,https://github.com/apple/cups,5620,2019-07-26T06:15:15Z,2019-07-26T20:03:00Z,2019-07-26T20:03:00Z,CLOSED,False,44,5,7,https://github.com/zdohnal,Introduce cupsHashNoCryptoData and --enable-gnutls-relax-mode configu…,2,[],https://github.com/apple/cups/pull/5620,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5620#issuecomment-515581714,"…re option
The cupsHashNoCryptoData function is for hashing non cryptographic data by MD5
hash function. MD5 hash function can be disabled in GNU TLS on specific machines
so new --enable-gnutls-relax-mode enables GNU TLS relax mode for use cases of MD5
which are not considered as encryption.",No,True,{}
apple/cups,https://github.com/apple/cups,5621,2019-07-29T08:44:08Z,2019-10-15T21:06:54Z,2019-10-15T21:06:54Z,MERGED,True,3,0,1,https://github.com/zdohnal,SIGSEGV in CUPS web ui when adding a printer,1,"['priority-medium', 'investigating']",https://github.com/apple/cups/pull/5621,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5621,"Hi,
I have a report in Fedora from ABRT tool https://bugzilla.redhat.com/show_bug.cgi?id=1720688 , which caught SIGSEGV in CUPS when user tried to add new printer by CUPS web ui.
It seems the element, which is tried to dup, is NULL. The check if it is NULL should cover it.
Does the patch look good? Please let me know if I can enhance something.","Hi,
I have a report in Fedora from ABRT tool https://bugzilla.redhat.com/show_bug.cgi?id=1720688 , which caught SIGSEGV in CUPS when user tried to add new printer by CUPS web ui.
It seems the element, which is tried to dup, is NULL. The check if it is NULL should cover it.
Does the patch look good? Please let me know if I can enhance something.",True,{}
apple/cups,https://github.com/apple/cups,5621,2019-07-29T08:44:08Z,2019-10-15T21:06:54Z,2019-10-15T21:06:54Z,MERGED,True,3,0,1,https://github.com/zdohnal,SIGSEGV in CUPS web ui when adding a printer,1,"['priority-medium', 'investigating']",https://github.com/apple/cups/pull/5621,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5621#issuecomment-515904814,"Hi,
I have a report in Fedora from ABRT tool https://bugzilla.redhat.com/show_bug.cgi?id=1720688 , which caught SIGSEGV in CUPS when user tried to add new printer by CUPS web ui.
It seems the element, which is tried to dup, is NULL. The check if it is NULL should cover it.
Does the patch look good? Please let me know if I can enhance something.","Here is backtrace
backtrace.txt",True,{}
apple/cups,https://github.com/apple/cups,5621,2019-07-29T08:44:08Z,2019-10-15T21:06:54Z,2019-10-15T21:06:54Z,MERGED,True,3,0,1,https://github.com/zdohnal,SIGSEGV in CUPS web ui when adding a printer,1,"['priority-medium', 'investigating']",https://github.com/apple/cups/pull/5621,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5621#issuecomment-515937307,"Hi,
I have a report in Fedora from ABRT tool https://bugzilla.redhat.com/show_bug.cgi?id=1720688 , which caught SIGSEGV in CUPS when user tried to add new printer by CUPS web ui.
It seems the element, which is tried to dup, is NULL. The check if it is NULL should cover it.
Does the patch look good? Please let me know if I can enhance something.","Hmm, that shouldn’t normally happen, but will investigate further.",True,{}
apple/cups,https://github.com/apple/cups,5622,2019-07-29T15:31:10Z,2019-08-02T11:55:10Z,2019-08-02T11:55:10Z,CLOSED,False,17,0,2,https://github.com/zdohnal,"Introduce --enable-gnutls-relax-mode, apply it in cupsHashData()",2,['priority-medium'],https://github.com/apple/cups/pull/5622,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5622,#5601,#5601,True,{}
apple/cups,https://github.com/apple/cups,5622,2019-07-29T15:31:10Z,2019-08-02T11:55:10Z,2019-08-02T11:55:10Z,CLOSED,False,17,0,2,https://github.com/zdohnal,"Introduce --enable-gnutls-relax-mode, apply it in cupsHashData()",2,['priority-medium'],https://github.com/apple/cups/pull/5622,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5622#issuecomment-516503960,#5601,@zdohnal Is the GNUTLS_FIPS140_SET_LAX_MODE call not an actual function? I would prefer to just auto-detect it at configure time and call it if it is defined. The more knobs we get the less likely it is that it will work... :/,True,{}
apple/cups,https://github.com/apple/cups,5622,2019-07-29T15:31:10Z,2019-08-02T11:55:10Z,2019-08-02T11:55:10Z,CLOSED,False,17,0,2,https://github.com/zdohnal,"Introduce --enable-gnutls-relax-mode, apply it in cupsHashData()",2,['priority-medium'],https://github.com/apple/cups/pull/5622,https://github.com/zdohnal,3,https://github.com/apple/cups/pull/5622#issuecomment-516908217,#5601,"It is actually macro for:
if (gnutls_fips140_mode_enabled())
gnutls_fips140_set_mode(GNUTLS_FIPS140_LAX, GNUTLS_FIPS140_SET_MODE_THREAD);
See https://gnutls.org/manual/html_node/FIPS140_002d2-mode.html
Ok, I'll see what I can do in cups-ssl.m4 about it.",True,{}
apple/cups,https://github.com/apple/cups,5622,2019-07-29T15:31:10Z,2019-08-02T11:55:10Z,2019-08-02T11:55:10Z,CLOSED,False,17,0,2,https://github.com/zdohnal,"Introduce --enable-gnutls-relax-mode, apply it in cupsHashData()",2,['priority-medium'],https://github.com/apple/cups/pull/5622,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5622#issuecomment-517363949,#5601,"@zdohnal Based on the documentation for that function, we can safely do a configure check for gnutls_fips140_set_mode and then do:
unsigned oldmode = gnutls_fips140_mode_enabled();
gnutls_fips140_set_mode(GNUTLS_FIPS140_LAX, GNUTLS_FIPS140_SET_MODE_THREAD);

...

gnutls_fips140_set_mode(oldmode, GNUTLS_FIPS140_SET_MODE_THREAD);

This will save and restore the mode around the hashing calls, and hopefully not step on any other users of this API (since we'd restore the previous setting, not just put it back to strict...)",True,{}
apple/cups,https://github.com/apple/cups,5622,2019-07-29T15:31:10Z,2019-08-02T11:55:10Z,2019-08-02T11:55:10Z,CLOSED,False,17,0,2,https://github.com/zdohnal,"Introduce --enable-gnutls-relax-mode, apply it in cupsHashData()",2,['priority-medium'],https://github.com/apple/cups/pull/5622,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5622#issuecomment-517404711,#5601,"Pushed changes for both 2.3.x and 2.2.x. Please review and let me know if this addresses your issues...
[master 9ec6124] GNU TLS FIPS140 support (Issue #5601, Issue #5622)
[branch-2.2 2f26c6b] GNU TLS FIPS140 support (Issue #5601, Issue #5622)",True,{}
apple/cups,https://github.com/apple/cups,5623,2019-07-30T00:27:33Z,2019-08-01T18:02:49Z,2019-08-01T18:02:49Z,CLOSED,False,73,66,1,https://github.com/ppawliczek,Correct problem with memory access violation for incorrect PPD file,1,['priority-high'],https://github.com/apple/cups/pull/5623,https://github.com/ppawliczek,1,https://github.com/apple/cups/pull/5623,"The problem occurres when an input PPD file contains a pair of the same
ParamCustom* keywords with the same name and different type. In this case
the PPD parser may cause memory leak or memory violation when one of
the type is PPD_CUSTOM_PASSCODE, PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.
A parameter with expected parameter type is added to ppd_get_cparam(...).","The problem occurres when an input PPD file contains a pair of the same
ParamCustom* keywords with the same name and different type. In this case
the PPD parser may cause memory leak or memory violation when one of
the type is PPD_CUSTOM_PASSCODE, PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.
A parameter with expected parameter type is added to ppd_get_cparam(...).",True,{}
apple/cups,https://github.com/apple/cups,5623,2019-07-30T00:27:33Z,2019-08-01T18:02:49Z,2019-08-01T18:02:49Z,CLOSED,False,73,66,1,https://github.com/ppawliczek,Correct problem with memory access violation for incorrect PPD file,1,['priority-high'],https://github.com/apple/cups/pull/5623,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5623#issuecomment-516222878,"The problem occurres when an input PPD file contains a pair of the same
ParamCustom* keywords with the same name and different type. In this case
the PPD parser may cause memory leak or memory violation when one of
the type is PPD_CUSTOM_PASSCODE, PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.
A parameter with expected parameter type is added to ppd_get_cparam(...).",@ppawliczek Please attach the problematic PPD file.,True,{}
apple/cups,https://github.com/apple/cups,5623,2019-07-30T00:27:33Z,2019-08-01T18:02:49Z,2019-08-01T18:02:49Z,CLOSED,False,73,66,1,https://github.com/ppawliczek,Correct problem with memory access violation for incorrect PPD file,1,['priority-high'],https://github.com/apple/cups/pull/5623,https://github.com/ppawliczek,3,https://github.com/apple/cups/pull/5623#issuecomment-516504639,"The problem occurres when an input PPD file contains a pair of the same
ParamCustom* keywords with the same name and different type. In this case
the PPD parser may cause memory leak or memory violation when one of
the type is PPD_CUSTOM_PASSCODE, PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.
A parameter with expected parameter type is added to ppd_get_cparam(...).","The PPS file is incorrect, however it should not cause incorrect memory reads.
As I can recall, incorrect read occurs when the PPD file is being closed (when some memory is freed).
clusterfuzz-testcase-minimized-cups_ppdopen_fuzzer-6243187697647616.zip",True,{}
apple/cups,https://github.com/apple/cups,5623,2019-07-30T00:27:33Z,2019-08-01T18:02:49Z,2019-08-01T18:02:49Z,CLOSED,False,73,66,1,https://github.com/ppawliczek,Correct problem with memory access violation for incorrect PPD file,1,['priority-high'],https://github.com/apple/cups/pull/5623,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5623#issuecomment-517396004,"The problem occurres when an input PPD file contains a pair of the same
ParamCustom* keywords with the same name and different type. In this case
the PPD parser may cause memory leak or memory violation when one of
the type is PPD_CUSTOM_PASSCODE, PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.
A parameter with expected parameter type is added to ppd_get_cparam(...).","[master dc00a7c] Fix some PPD parser issues discovered via fuzzing (Issue #5623, Issue #5624)
[master 8e048e4] Fix some PPD parser issues discovered via fuzzing (Issue #5623, Issue #5624)
[branch-2.2 d11af54] Fix some PPD parser issues discovered via fuzzing (Issue #5623, Issue #5624)",True,{}
apple/cups,https://github.com/apple/cups,5624,2019-07-30T00:43:39Z,2019-08-01T18:02:32Z,2019-08-01T18:02:32Z,CLOSED,False,4,2,1,https://github.com/ppawliczek,Correct problem with UNKNOWN READ/SEGV for incorrect PPD file,1,['priority-high'],https://github.com/apple/cups/pull/5624,https://github.com/ppawliczek,1,https://github.com/apple/cups/pull/5624,"The problem occurres when an input PPD file contains a specific combination of
*PageSize keywords with incorrect types. In this case the PPD parser may cause
memory violation when one of the type is PPD_CUSTOM_PASSCODE,
PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.","The problem occurres when an input PPD file contains a specific combination of
*PageSize keywords with incorrect types. In this case the PPD parser may cause
memory violation when one of the type is PPD_CUSTOM_PASSCODE,
PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.",True,{}
apple/cups,https://github.com/apple/cups,5624,2019-07-30T00:43:39Z,2019-08-01T18:02:32Z,2019-08-01T18:02:32Z,CLOSED,False,4,2,1,https://github.com/ppawliczek,Correct problem with UNKNOWN READ/SEGV for incorrect PPD file,1,['priority-high'],https://github.com/apple/cups/pull/5624,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5624#issuecomment-516222763,"The problem occurres when an input PPD file contains a specific combination of
*PageSize keywords with incorrect types. In this case the PPD parser may cause
memory violation when one of the type is PPD_CUSTOM_PASSCODE,
PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.",@ppawliczek Please attach the problematic PPD file.,True,{}
apple/cups,https://github.com/apple/cups,5624,2019-07-30T00:43:39Z,2019-08-01T18:02:32Z,2019-08-01T18:02:32Z,CLOSED,False,4,2,1,https://github.com/ppawliczek,Correct problem with UNKNOWN READ/SEGV for incorrect PPD file,1,['priority-high'],https://github.com/apple/cups/pull/5624,https://github.com/ppawliczek,3,https://github.com/apple/cups/pull/5624#issuecomment-516506458,"The problem occurres when an input PPD file contains a specific combination of
*PageSize keywords with incorrect types. In this case the PPD parser may cause
memory violation when one of the type is PPD_CUSTOM_PASSCODE,
PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.","clusterfuzz-testcase-minimized-cups_ppdopen_fuzzer-5709920246431744.zip
The stack from SEGV:
in cfree /var/tmp/portage/cross-x86_64-cros-linux-gnu/glibc-2.27-r8/work/glibc-2.27/malloc/malloc.c:3098
in ppdClose (/usr/lib64/libcups.so.2+0xa0375)
in _ppdOpen (/usr/lib64/libcups.so.2+0xa7fc9)",True,{}
apple/cups,https://github.com/apple/cups,5624,2019-07-30T00:43:39Z,2019-08-01T18:02:32Z,2019-08-01T18:02:32Z,CLOSED,False,4,2,1,https://github.com/ppawliczek,Correct problem with UNKNOWN READ/SEGV for incorrect PPD file,1,['priority-high'],https://github.com/apple/cups/pull/5624,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5624#issuecomment-517395882,"The problem occurres when an input PPD file contains a specific combination of
*PageSize keywords with incorrect types. In this case the PPD parser may cause
memory violation when one of the type is PPD_CUSTOM_PASSCODE,
PPD_CUSTOM_PASSWORD or PPD_CUSTOM_STRING.","[master dc00a7c] Fix some PPD parser issues discovered via fuzzing (Issue #5623, Issue #5624)
[master 8e048e4] Fix some PPD parser issues discovered via fuzzing (Issue #5623, Issue #5624)
[branch-2.2 d11af54] Fix some PPD parser issues discovered via fuzzing (Issue #5623, Issue #5624)",True,{}
apple/cups,https://github.com/apple/cups,5635,2019-08-16T17:37:48Z,2019-08-19T23:43:07Z,2019-08-19T23:43:21Z,CLOSED,False,6,3,1,https://github.com/j39m,Add extra NULL check before calling strlcpy().,1,"['unable-to-reproduce', 'investigating']",https://github.com/apple/cups/pull/5635,https://github.com/j39m,1,https://github.com/apple/cups/pull/5635,"This pull request is a copy of pull #5611, which I closed for bad git hygiene.","This pull request is a copy of pull #5611, which I closed for bad git hygiene.",True,{}
apple/cups,https://github.com/apple/cups,5635,2019-08-16T17:37:48Z,2019-08-19T23:43:07Z,2019-08-19T23:43:21Z,CLOSED,False,6,3,1,https://github.com/j39m,Add extra NULL check before calling strlcpy().,1,"['unable-to-reproduce', 'investigating']",https://github.com/apple/cups/pull/5635,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5635#issuecomment-522100709,"This pull request is a copy of pull #5611, which I closed for bad git hygiene.","@j39m This is still not something I want to change - ippGetString cannot return NULL under these conditions, so either the ChromeOS fork of CUPS has broken something or there is some other memory corruption happening that is causing this behavior.
We really need to be able to reproduce this before any action can be taken. Is there nothing you can provide to further isolate the cause?",True,{}
apple/cups,https://github.com/apple/cups,5635,2019-08-16T17:37:48Z,2019-08-19T23:43:07Z,2019-08-19T23:43:21Z,CLOSED,False,6,3,1,https://github.com/j39m,Add extra NULL check before calling strlcpy().,1,"['unable-to-reproduce', 'investigating']",https://github.com/apple/cups/pull/5635,https://github.com/j39m,3,https://github.com/apple/cups/pull/5635#issuecomment-522110978,"This pull request is a copy of pull #5611, which I closed for bad git hygiene.",I'll try to reproduce this and will close this PR if nothing turns up. Sorry for the trouble.,True,{}
apple/cups,https://github.com/apple/cups,5635,2019-08-16T17:37:48Z,2019-08-19T23:43:07Z,2019-08-19T23:43:21Z,CLOSED,False,6,3,1,https://github.com/j39m,Add extra NULL check before calling strlcpy().,1,"['unable-to-reproduce', 'investigating']",https://github.com/apple/cups/pull/5635,https://github.com/j39m,4,https://github.com/apple/cups/pull/5635#issuecomment-522795430,"This pull request is a copy of pull #5611, which I closed for bad git hygiene.",I tried hacking at ippserver to reproduce the crash but turned up empty-handed.,True,{}
apple/cups,https://github.com/apple/cups,5637,2019-08-21T20:42:28Z,2019-08-23T12:26:06Z,2019-08-23T12:26:20Z,MERGED,True,7,7,1,https://github.com/polluks,Fixed typos,1,['priority-low'],https://github.com/apple/cups/pull/5637,https://github.com/polluks,1,https://github.com/apple/cups/pull/5637,,,True,{}
apple/cups,https://github.com/apple/cups,5638,2019-08-23T13:37:02Z,2019-08-23T15:18:14Z,2019-08-23T15:18:29Z,MERGED,True,2,2,2,https://github.com/nicolasfella,Add wheel to system groups,1,['priority-medium'],https://github.com/apple/cups/pull/5638,https://github.com/nicolasfella,1,https://github.com/apple/cups/pull/5638,"Members of the wheel group are able to gain system privileges, so for intents and purposes of CUPS it can be considered a system group. This allows to use privileged operations in the web interface as the user instead of root for members of the wheel group.
Fedora Linux applies this by default: https://unix.stackexchange.com/questions/235477/cups-add-printer-page-returns-forbidden-on-web-interface","Members of the wheel group are able to gain system privileges, so for intents and purposes of CUPS it can be considered a system group. This allows to use privileged operations in the web interface as the user instead of root for members of the wheel group.
Fedora Linux applies this by default: https://unix.stackexchange.com/questions/235477/cups-add-printer-page-returns-forbidden-on-web-interface",True,{}
apple/cups,https://github.com/apple/cups,5643,2019-08-29T23:18:32Z,2019-11-14T20:35:43Z,2019-11-14T20:35:44Z,CLOSED,False,5,0,1,https://github.com/mattjohnsonpint,Prevent cert creation failure on leap day,1,['priority-medium'],https://github.com/apple/cups/pull/5643,https://github.com/mattjohnsonpint,1,https://github.com/apple/cups/pull/5643,"The http_sspi_make_credentials function in cups/tls-sspi.c has a leap year bug.

  
    
      cups/cups/tls-sspi.c
    
    
        Lines 1968 to 1973
      in
      bc5060a
    
  
  
    

        
          
           GetSystemTime(&et); 
        

        
          
           et.wYear += years; 
        

        
          
            
        

        
          
           ZeroMemory(&exts, sizeof(exts)); 
        

        
          
            
        

        
          
           createdContext = CertCreateSelfSignCertificate(hProv, &sib, 0, &kpi, NULL, NULL, &et, &exts); 
        
    
  


This will fail if the code is executed on Feb 29th of a leap year (of which 2020 is the next one), unless the years being added also results in et.wYear being a leap year.  In other words, 2020-02-29 + 1 year would result in 2021-02-29, which does not exist.  In this case, CertCreateSelfSignCertificate will fail.
The attached PR checks for this condition, and adjusts such dates back one day to February 28th, which is a reasonable and common practice.
Please be sure this gets merged and highlighted in the release notes.  Those that rely on this code path will want to have fully deployed such code well before leap day 2020.  Thanks.","The http_sspi_make_credentials function in cups/tls-sspi.c has a leap year bug.

  
    
      cups/cups/tls-sspi.c
    
    
        Lines 1968 to 1973
      in
      bc5060a
    
  
  
    

        
          
           GetSystemTime(&et); 
        

        
          
           et.wYear += years; 
        

        
          
            
        

        
          
           ZeroMemory(&exts, sizeof(exts)); 
        

        
          
            
        

        
          
           createdContext = CertCreateSelfSignCertificate(hProv, &sib, 0, &kpi, NULL, NULL, &et, &exts); 
        
    
  


This will fail if the code is executed on Feb 29th of a leap year (of which 2020 is the next one), unless the years being added also results in et.wYear being a leap year.  In other words, 2020-02-29 + 1 year would result in 2021-02-29, which does not exist.  In this case, CertCreateSelfSignCertificate will fail.
The attached PR checks for this condition, and adjusts such dates back one day to February 28th, which is a reasonable and common practice.
Please be sure this gets merged and highlighted in the release notes.  Those that rely on this code path will want to have fully deployed such code well before leap day 2020.  Thanks.",True,{}
apple/cups,https://github.com/apple/cups,5643,2019-08-29T23:18:32Z,2019-11-14T20:35:43Z,2019-11-14T20:35:44Z,CLOSED,False,5,0,1,https://github.com/mattjohnsonpint,Prevent cert creation failure on leap day,1,['priority-medium'],https://github.com/apple/cups/pull/5643,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5643#issuecomment-526417538,"The http_sspi_make_credentials function in cups/tls-sspi.c has a leap year bug.

  
    
      cups/cups/tls-sspi.c
    
    
        Lines 1968 to 1973
      in
      bc5060a
    
  
  
    

        
          
           GetSystemTime(&et); 
        

        
          
           et.wYear += years; 
        

        
          
            
        

        
          
           ZeroMemory(&exts, sizeof(exts)); 
        

        
          
            
        

        
          
           createdContext = CertCreateSelfSignCertificate(hProv, &sib, 0, &kpi, NULL, NULL, &et, &exts); 
        
    
  


This will fail if the code is executed on Feb 29th of a leap year (of which 2020 is the next one), unless the years being added also results in et.wYear being a leap year.  In other words, 2020-02-29 + 1 year would result in 2021-02-29, which does not exist.  In this case, CertCreateSelfSignCertificate will fail.
The attached PR checks for this condition, and adjusts such dates back one day to February 28th, which is a reasonable and common practice.
Please be sure this gets merged and highlighted in the release notes.  Those that rely on this code path will want to have fully deployed such code well before leap day 2020.  Thanks.","FWIW, I'm not aware of too many users of libcups on Windows to provide an IPP server, but I'll make sure to include this fix in the next patch update...",True,{'THUMBS_UP': ['https://github.com/mattjohnsonpint']}
apple/cups,https://github.com/apple/cups,5643,2019-08-29T23:18:32Z,2019-11-14T20:35:43Z,2019-11-14T20:35:44Z,CLOSED,False,5,0,1,https://github.com/mattjohnsonpint,Prevent cert creation failure on leap day,1,['priority-medium'],https://github.com/apple/cups/pull/5643,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5643#issuecomment-554068032,"The http_sspi_make_credentials function in cups/tls-sspi.c has a leap year bug.

  
    
      cups/cups/tls-sspi.c
    
    
        Lines 1968 to 1973
      in
      bc5060a
    
  
  
    

        
          
           GetSystemTime(&et); 
        

        
          
           et.wYear += years; 
        

        
          
            
        

        
          
           ZeroMemory(&exts, sizeof(exts)); 
        

        
          
            
        

        
          
           createdContext = CertCreateSelfSignCertificate(hProv, &sib, 0, &kpi, NULL, NULL, &et, &exts); 
        
    
  


This will fail if the code is executed on Feb 29th of a leap year (of which 2020 is the next one), unless the years being added also results in et.wYear being a leap year.  In other words, 2020-02-29 + 1 year would result in 2021-02-29, which does not exist.  In this case, CertCreateSelfSignCertificate will fail.
The attached PR checks for this condition, and adjusts such dates back one day to February 28th, which is a reasonable and common practice.
Please be sure this gets merged and highlighted in the release notes.  Those that rely on this code path will want to have fully deployed such code well before leap day 2020.  Thanks.","I opted for a simpler fix that avoids expiration dates on Feb 29th, no matter whether it is a leap year or not.
[master 6d391f7] Don't generate certificates that expire on Feb 29th (Issue #5643)",True,{'THUMBS_UP': ['https://github.com/mattjohnsonpint']}
apple/cups,https://github.com/apple/cups,5649,2019-09-13T16:14:01Z,2019-09-13T17:09:34Z,2019-09-13T17:13:08Z,CLOSED,False,18927,0,1,https://github.com/scootergrisen,Create untranslated cups.da.po,1,[],https://github.com/apple/cups/pull/5649,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5649,"It seems Debian currently only includes the other translated files (like templates) if this file exists.
So i create this untranslated cups.da.po file and hope Debian will include danish translation in their CUPS packages.","It seems Debian currently only includes the other translated files (like templates) if this file exists.
So i create this untranslated cups.da.po file and hope Debian will include danish translation in their CUPS packages.",True,{}
apple/cups,https://github.com/apple/cups,5649,2019-09-13T16:14:01Z,2019-09-13T17:09:34Z,2019-09-13T17:13:08Z,CLOSED,False,18927,0,1,https://github.com/scootergrisen,Create untranslated cups.da.po,1,[],https://github.com/apple/cups/pull/5649,https://github.com/scootergrisen,2,https://github.com/apple/cups/pull/5649#issuecomment-531317742,"It seems Debian currently only includes the other translated files (like templates) if this file exists.
So i create this untranslated cups.da.po file and hope Debian will include danish translation in their CUPS packages.","Should have been cups_da.po not cups.da.po.
Created #5650 instead.",True,{}
apple/cups,https://github.com/apple/cups,5650,2019-09-13T17:12:21Z,2019-12-04T16:51:56Z,2020-02-18T11:51:50Z,CLOSED,False,18927,0,1,https://github.com/scootergrisen,Create untranslated cups_da.po,1,[],https://github.com/apple/cups/pull/5650,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5650,"It seems translated files (templates etc.) is only included in CUPS packages for distributions if a po file exists for that language.
So i create this untranslated cups_da.po file and hope danish translation will be included.","It seems translated files (templates etc.) is only included in CUPS packages for distributions if a po file exists for that language.
So i create this untranslated cups_da.po file and hope danish translation will be included.",True,{}
apple/cups,https://github.com/apple/cups,5650,2019-09-13T17:12:21Z,2019-12-04T16:51:56Z,2020-02-18T11:51:50Z,CLOSED,False,18927,0,1,https://github.com/scootergrisen,Create untranslated cups_da.po,1,[],https://github.com/apple/cups/pull/5650,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5650#issuecomment-561733133,"It seems translated files (templates etc.) is only included in CUPS packages for distributions if a po file exists for that language.
So i create this untranslated cups_da.po file and hope danish translation will be included.","Sorry, until we have a significant number of translated strings we can't include it...",True,{}
apple/cups,https://github.com/apple/cups,5650,2019-09-13T17:12:21Z,2019-12-04T16:51:56Z,2020-02-18T11:51:50Z,CLOSED,False,18927,0,1,https://github.com/scootergrisen,Create untranslated cups_da.po,1,[],https://github.com/apple/cups/pull/5650,https://github.com/scootergrisen,3,https://github.com/apple/cups/pull/5650#issuecomment-561830871,"It seems translated files (templates etc.) is only included in CUPS packages for distributions if a po file exists for that language.
So i create this untranslated cups_da.po file and hope danish translation will be included.","How many is ""significant number""?",True,{}
apple/cups,https://github.com/apple/cups,5650,2019-09-13T17:12:21Z,2019-12-04T16:51:56Z,2020-02-18T11:51:50Z,CLOSED,False,18927,0,1,https://github.com/scootergrisen,Create untranslated cups_da.po,1,[],https://github.com/apple/cups/pull/5650,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5650#issuecomment-561833565,"It seems translated files (templates etc.) is only included in CUPS packages for distributions if a po file exists for that language.
So i create this untranslated cups_da.po file and hope danish translation will be included.","We'd want many of the printer-state-reasons keywords (marker-xxx, media-xxx, and toner-xxx are the most common) along with the messages from the common print commands (cancel, lp, lpadmin, lpc, lpoptions, lpq, lpr, lpstat) covered, at least.",True,{}
apple/cups,https://github.com/apple/cups,5650,2019-09-13T17:12:21Z,2019-12-04T16:51:56Z,2020-02-18T11:51:50Z,CLOSED,False,18927,0,1,https://github.com/scootergrisen,Create untranslated cups_da.po,1,[],https://github.com/apple/cups/pull/5650,https://github.com/scootergrisen,5,https://github.com/apple/cups/pull/5650#issuecomment-561848261,"It seems translated files (templates etc.) is only included in CUPS packages for distributions if a po file exists for that language.
So i create this untranslated cups_da.po file and hope danish translation will be included.","It seems no language have translated marker-, media- and toner-*.
Expect ""en"" but that's the source language.
And its not always clear what the source string is/what i should translate.
So i think it would be better to fix this before asking people to translate it.
If i translate it now and the following problem is fixed i will have to translate it once again.
If cups_da.po says:

#. TRANSLATORS: Marker Opc Missing
msgid ""printer-state-reasons.marker-opc-missing""
msgstr """"

First of all the string i should translate should be in msgid.
But ok i look at the comment instead and use ""Marker Opc Missing"" as the source string.
But then if i look in cups_en.po the string that is suppose to be the source string is not the same.
Its ""OPC missing"" not ""Marker Opc Missing"" like the comment says.

#. TRANSLATORS: Marker Opc Missing
msgid ""printer-state-reasons.marker-opc-missing""
msgstr ""OPC missing""",True,{}
apple/cups,https://github.com/apple/cups,5650,2019-09-13T17:12:21Z,2019-12-04T16:51:56Z,2020-02-18T11:51:50Z,CLOSED,False,18927,0,1,https://github.com/scootergrisen,Create untranslated cups_da.po,1,[],https://github.com/apple/cups/pull/5650,https://github.com/scootergrisen,6,https://github.com/apple/cups/pull/5650#issuecomment-587423941,"It seems translated files (templates etc.) is only included in CUPS packages for distributions if a po file exists for that language.
So i create this untranslated cups_da.po file and hope danish translation will be included.",I made #5707 instead.,True,{}
apple/cups,https://github.com/apple/cups,5657,2019-09-30T16:48:39Z,2019-10-08T00:02:13Z,2019-10-08T00:02:13Z,CLOSED,False,3,3,1,https://github.com/kant,Minor fix on line 68,1,['priority-low'],https://github.com/apple/cups/pull/5657,https://github.com/kant,1,https://github.com/apple/cups/pull/5657,plus some minor formatting proposals,plus some minor formatting proposals,True,{}
apple/cups,https://github.com/apple/cups,5660,2019-10-07T20:44:19Z,2019-10-07T23:54:26Z,2019-10-27T14:23:38Z,CLOSED,False,11,11,1,https://github.com/Niteshyadav0331,Update README.md,1,['wontfix'],https://github.com/apple/cups/pull/5660,https://github.com/Niteshyadav0331,1,https://github.com/apple/cups/pull/5660,"open source - open-source
device specefic - device-specefic
example - example,
which are - that are
settings - setting's
lpr - LPR
oraw - raw","open source - open-source
device specefic - device-specefic
example - example,
which are - that are
settings - setting's
lpr - LPR
oraw - raw",True,{}
apple/cups,https://github.com/apple/cups,5660,2019-10-07T20:44:19Z,2019-10-07T23:54:26Z,2019-10-27T14:23:38Z,CLOSED,False,11,11,1,https://github.com/Niteshyadav0331,Update README.md,1,['wontfix'],https://github.com/apple/cups/pull/5660,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5660#issuecomment-539253323,"open source - open-source
device specefic - device-specefic
example - example,
which are - that are
settings - setting's
lpr - LPR
oraw - raw","Sorry, aside from maybe adopting the ""open-source"" hyphenation, the rest of the changes are not correct.",True,{}
apple/cups,https://github.com/apple/cups,5660,2019-10-07T20:44:19Z,2019-10-07T23:54:26Z,2019-10-27T14:23:38Z,CLOSED,False,11,11,1,https://github.com/Niteshyadav0331,Update README.md,1,['wontfix'],https://github.com/apple/cups/pull/5660,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5660#issuecomment-539254036,"open source - open-source
device specefic - device-specefic
example - example,
which are - that are
settings - setting's
lpr - LPR
oraw - raw","Did some quick research and ""open source"" appears to be the accepted form for this usage.",True,{}
apple/cups,https://github.com/apple/cups,5660,2019-10-07T20:44:19Z,2019-10-07T23:54:26Z,2019-10-27T14:23:38Z,CLOSED,False,11,11,1,https://github.com/Niteshyadav0331,Update README.md,1,['wontfix'],https://github.com/apple/cups/pull/5660,https://github.com/Romejanic,4,https://github.com/apple/cups/pull/5660#issuecomment-546699454,"open source - open-source
device specefic - device-specefic
example - example,
which are - that are
settings - setting's
lpr - LPR
oraw - raw","Also setting's is incorrect, the correct grammar is settings which it already was",True,{}
apple/cups,https://github.com/apple/cups,5663,2019-10-10T00:48:55Z,2019-10-10T11:59:53Z,2019-10-10T11:59:54Z,CLOSED,False,30,7,2,https://github.com/j39m,Pessimize PPD choice allocation,1,['wontfix'],https://github.com/apple/cups/pull/5663,https://github.com/j39m,1,https://github.com/apple/cups/pull/5663,We noticed that our Clusterfuzz instance occasionally had trouble allocating ppd_choice_ts once the test cases got huge. This change aims to address that by allocating memory a little more greedily.,We noticed that our Clusterfuzz instance occasionally had trouble allocating ppd_choice_ts once the test cases got huge. This change aims to address that by allocating memory a little more greedily.,True,{}
apple/cups,https://github.com/apple/cups,5663,2019-10-10T00:48:55Z,2019-10-10T11:59:53Z,2019-10-10T11:59:54Z,CLOSED,False,30,7,2,https://github.com/j39m,Pessimize PPD choice allocation,1,['wontfix'],https://github.com/apple/cups/pull/5663,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5663#issuecomment-540538239,We noticed that our Clusterfuzz instance occasionally had trouble allocating ppd_choice_ts once the test cases got huge. This change aims to address that by allocating memory a little more greedily.,"Sorry, but we will not accept this pull request for a few reasons:


The current code is optimized for the most common usage, and optimizing with power-of-two increases will dramatically increase the memory usage of CUPS which is not what we want.


The proposed changes break binary compatibility with the current PPD API by changing the size of (unfortunately) public structures.


The PPD API has been deprecated for a very long time and we have no interest in optimizing or making major changes to it at this point in time.


PPD-based printer drivers are deprecated in CUPS 2.3, and the preferred replacement has been  IPP Everywhere since CUPS 1.4.",True,{'THUMBS_UP': ['https://github.com/j39m']}
apple/cups,https://github.com/apple/cups,5677,2019-11-07T12:14:47Z,2019-11-07T14:04:17Z,2019-11-07T14:04:17Z,MERGED,True,1,1,1,https://github.com/reddevillg,Fix /admin/log section,1,['priority-low'],https://github.com/apple/cups/pull/5677,https://github.com/reddevillg,1,https://github.com/apple/cups/pull/5677,Skip previous /admim/log location rules as well.,Skip previous /admim/log location rules as well.,True,{}
apple/cups,https://github.com/apple/cups,5679,2019-11-08T09:01:49Z,2019-11-14T17:54:56Z,2019-11-14T18:02:04Z,CLOSED,False,44,58,1,https://github.com/michaelweghorn,Make printer instances work again,2,['wontfix'],https://github.com/apple/cups/pull/5679,https://github.com/michaelweghorn,1,https://github.com/apple/cups/pull/5679,"Hi Mike,
since commit c5f5c5a, printer instances don't work anymore.
They can be created, e.g. using
lpoptions -p myprinter/myinstance -o Duplex=None

and then show up in ~/.cups/lpoptions. However, they are not listed when e.g. running lpstat -v or in print dialogs.
These two commits make printer instances work again for the case where queues from the local CUPS server are used.
Handling of instances for autodiscovered printers might need a follow-up commit. I wasn't 100 % sure about this, so left it unchanged.","Hi Mike,
since commit c5f5c5a, printer instances don't work anymore.
They can be created, e.g. using
lpoptions -p myprinter/myinstance -o Duplex=None

and then show up in ~/.cups/lpoptions. However, they are not listed when e.g. running lpstat -v or in print dialogs.
These two commits make printer instances work again for the case where queues from the local CUPS server are used.
Handling of instances for autodiscovered printers might need a follow-up commit. I wasn't 100 % sure about this, so left it unchanged.",True,{}
apple/cups,https://github.com/apple/cups,5679,2019-11-08T09:01:49Z,2019-11-14T17:54:56Z,2019-11-14T18:02:04Z,CLOSED,False,44,58,1,https://github.com/michaelweghorn,Make printer instances work again,2,['wontfix'],https://github.com/apple/cups/pull/5679,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5679#issuecomment-554003711,"Hi Mike,
since commit c5f5c5a, printer instances don't work anymore.
They can be created, e.g. using
lpoptions -p myprinter/myinstance -o Duplex=None

and then show up in ~/.cups/lpoptions. However, they are not listed when e.g. running lpstat -v or in print dialogs.
These two commits make printer instances work again for the case where queues from the local CUPS server are used.
Handling of instances for autodiscovered printers might need a follow-up commit. I wasn't 100 % sure about this, so left it unchanged.","Sorry, that change has some bad side-effects. I will push a simpler fix to cups_enum_dests against the parent bug...",True,{}
apple/cups,https://github.com/apple/cups,5679,2019-11-08T09:01:49Z,2019-11-14T17:54:56Z,2019-11-14T18:02:04Z,CLOSED,False,44,58,1,https://github.com/michaelweghorn,Make printer instances work again,2,['wontfix'],https://github.com/apple/cups/pull/5679,https://github.com/michaelweghorn,3,https://github.com/apple/cups/pull/5679#issuecomment-554006605,"Hi Mike,
since commit c5f5c5a, printer instances don't work anymore.
They can be created, e.g. using
lpoptions -p myprinter/myinstance -o Duplex=None

and then show up in ~/.cups/lpoptions. However, they are not listed when e.g. running lpstat -v or in print dialogs.
These two commits make printer instances work again for the case where queues from the local CUPS server are used.
Handling of instances for autodiscovered printers might need a follow-up commit. I wasn't 100 % sure about this, so left it unchanged.","Fine for me, thanks for looking into it!",True,{}
apple/cups,https://github.com/apple/cups,5690,2019-11-23T04:41:32Z,2021-03-11T12:02:35Z,2021-03-11T13:31:59Z,MERGED,True,8,8,2,https://github.com/neheb,treewide: Replace bzero with memset,1,['enhancement'],https://github.com/apple/cups/pull/5690,https://github.com/neheb,1,https://github.com/apple/cups/pull/5690,"bzero has been deprecated by POSIX 2008. It recommends the use of memset
instead.","bzero has been deprecated by POSIX 2008. It recommends the use of memset
instead.",True,{}
apple/cups,https://github.com/apple/cups,5690,2019-11-23T04:41:32Z,2021-03-11T12:02:35Z,2021-03-11T13:31:59Z,MERGED,True,8,8,2,https://github.com/neheb,treewide: Replace bzero with memset,1,['enhancement'],https://github.com/apple/cups/pull/5690,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5690#issuecomment-557793365,"bzero has been deprecated by POSIX 2008. It recommends the use of memset
instead.","It may be deprecated by POSIX, but this is platform specific code and zero is not deprecated on macOS. Will consider it...",True,{}
apple/cups,https://github.com/apple/cups,5690,2019-11-23T04:41:32Z,2021-03-11T12:02:35Z,2021-03-11T13:31:59Z,MERGED,True,8,8,2,https://github.com/neheb,treewide: Replace bzero with memset,1,['enhancement'],https://github.com/apple/cups/pull/5690,https://github.com/neheb,3,https://github.com/apple/cups/pull/5690#issuecomment-557816839,"bzero has been deprecated by POSIX 2008. It recommends the use of memset
instead.",OTOH that Darwin file already uses memset.,True,{}
apple/cups,https://github.com/apple/cups,5694,2019-11-28T15:59:31Z,2019-12-04T16:49:26Z,2019-12-04T16:49:26Z,MERGED,True,1,1,1,https://github.com/gaaf,Fix error in jobs template,1,['priority-low'],https://github.com/apple/cups/pull/5694,https://github.com/gaaf,1,https://github.com/apple/cups/pull/5694,"Fixes error:
E [28/Nov/2019:16:55:51 +0100] [CGI] Saw EOF, expected ':'!
E [28/Nov/2019:16:55:51 +0100] [CGI] Saw EOF, expected '}'!
E [28/Nov/2019:16:55:51 +0100] [CGI] Saw EOF, expected '}'!
E [28/Nov/2019:16:55:51 +0100] [CGI] Saw EOF, expected '}'!","Fixes error:
E [28/Nov/2019:16:55:51 +0100] [CGI] Saw EOF, expected ':'!
E [28/Nov/2019:16:55:51 +0100] [CGI] Saw EOF, expected '}'!
E [28/Nov/2019:16:55:51 +0100] [CGI] Saw EOF, expected '}'!
E [28/Nov/2019:16:55:51 +0100] [CGI] Saw EOF, expected '}'!",True,{}
apple/cups,https://github.com/apple/cups,5695,2019-12-04T18:36:20Z,2019-12-04T18:43:29Z,2019-12-05T00:30:35Z,MERGED,True,1,1,1,https://github.com/IslandCow,Off by one error in ipp_finishings_vendor,1,['priority-low'],https://github.com/apple/cups/pull/5695,https://github.com/IslandCow,1,https://github.com/apple/cups/pull/5695,"When enumvalue is 101 and attrname is ""finsishings-supported""
we were getting the memory after ipp_finishings_vendor
in the ipp_job_collation_types array.","When enumvalue is 101 and attrname is ""finsishings-supported""
we were getting the memory after ipp_finishings_vendor
in the ipp_job_collation_types array.",True,{}
apple/cups,https://github.com/apple/cups,5695,2019-12-04T18:36:20Z,2019-12-04T18:43:29Z,2019-12-05T00:30:35Z,MERGED,True,1,1,1,https://github.com/IslandCow,Off by one error in ipp_finishings_vendor,1,['priority-low'],https://github.com/apple/cups/pull/5695,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5695#issuecomment-561783758,"When enumvalue is 101 and attrname is ""finsishings-supported""
we were getting the memory after ipp_finishings_vendor
in the ipp_job_collation_types array.","I don't see how this happens with value 101. 0x40000066 maybe, but not 101.
Anyways, will take the fix.",True,{}
apple/cups,https://github.com/apple/cups,5695,2019-12-04T18:36:20Z,2019-12-04T18:43:29Z,2019-12-05T00:30:35Z,MERGED,True,1,1,1,https://github.com/IslandCow,Off by one error in ipp_finishings_vendor,1,['priority-low'],https://github.com/apple/cups/pull/5695,https://github.com/IslandCow,3,https://github.com/apple/cups/pull/5695#issuecomment-561910158,"When enumvalue is 101 and attrname is ""finsishings-supported""
we were getting the memory after ipp_finishings_vendor
in the ipp_job_collation_types array.",Thanks for pulling.  The problematic value is 0x40000065 because the length of the array is 0x65 or 101.,True,{}
apple/cups,https://github.com/apple/cups,5700,2019-12-08T13:56:24Z,2019-12-13T14:40:30Z,2019-12-13T16:57:43Z,CLOSED,False,4,5,2,https://github.com/OdyX,Fix FTBFS with recent GCC 9,2,['priority-low'],https://github.com/apple/cups/pull/5700,https://github.com/OdyX,1,https://github.com/apple/cups/pull/5700,"master currently doesn't build on Debian unstable; see Travis-CI log: https://travis-ci.org/OdyX/cups/jobs/620941340
First ""error: variable 'waittime' set but not used [-Werror=unused-but-set-variable]""
Compiling ipp.c...
ipp.c: In function 'main':
ipp.c:236:10: error: variable 'waittime' set but not used [-Werror=unused-but-set-variable]
  236 |   time_t waittime;  /* Wait time for held jobs */
      |          ^~~~~~~~

With this fixed; then ""error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]""
Compiling lpd.c...
lpd.c: In function 'lpd_queue':
lpd.c:1049:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1049 |       if (lpd_command(fd, ""\002%d cfA%03.3d%.15s\n"", (int)strlen(control),
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~
lpd.c:1099:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1099 |       if (lpd_command(fd, ""\003"" CUPS_LLFMT "" dfA%03.3d%.15s\n"",
      |                           ^~~~~~
lpd.c:1182:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1182 |       if (lpd_command(fd, ""\002%d cfA%03.3d%.15s\n"", (int)strlen(control),
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~","master currently doesn't build on Debian unstable; see Travis-CI log: https://travis-ci.org/OdyX/cups/jobs/620941340
First ""error: variable 'waittime' set but not used [-Werror=unused-but-set-variable]""
Compiling ipp.c...
ipp.c: In function 'main':
ipp.c:236:10: error: variable 'waittime' set but not used [-Werror=unused-but-set-variable]
  236 |   time_t waittime;  /* Wait time for held jobs */
      |          ^~~~~~~~

With this fixed; then ""error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]""
Compiling lpd.c...
lpd.c: In function 'lpd_queue':
lpd.c:1049:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1049 |       if (lpd_command(fd, ""\002%d cfA%03.3d%.15s\n"", (int)strlen(control),
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~
lpd.c:1099:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1099 |       if (lpd_command(fd, ""\003"" CUPS_LLFMT "" dfA%03.3d%.15s\n"",
      |                           ^~~~~~
lpd.c:1182:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1182 |       if (lpd_command(fd, ""\002%d cfA%03.3d%.15s\n"", (int)strlen(control),
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~",True,{}
apple/cups,https://github.com/apple/cups,5700,2019-12-08T13:56:24Z,2019-12-13T14:40:30Z,2019-12-13T16:57:43Z,CLOSED,False,4,5,2,https://github.com/OdyX,Fix FTBFS with recent GCC 9,2,['priority-low'],https://github.com/apple/cups/pull/5700,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5700#issuecomment-565464899,"master currently doesn't build on Debian unstable; see Travis-CI log: https://travis-ci.org/OdyX/cups/jobs/620941340
First ""error: variable 'waittime' set but not used [-Werror=unused-but-set-variable]""
Compiling ipp.c...
ipp.c: In function 'main':
ipp.c:236:10: error: variable 'waittime' set but not used [-Werror=unused-but-set-variable]
  236 |   time_t waittime;  /* Wait time for held jobs */
      |          ^~~~~~~~

With this fixed; then ""error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]""
Compiling lpd.c...
lpd.c: In function 'lpd_queue':
lpd.c:1049:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1049 |       if (lpd_command(fd, ""\002%d cfA%03.3d%.15s\n"", (int)strlen(control),
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~
lpd.c:1099:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1099 |       if (lpd_command(fd, ""\003"" CUPS_LLFMT "" dfA%03.3d%.15s\n"",
      |                           ^~~~~~
lpd.c:1182:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1182 |       if (lpd_command(fd, ""\002%d cfA%03.3d%.15s\n"", (int)strlen(control),
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~","The numbers in the LPD commands need to be zero-filled, so we want %03d.
[master dbdf8a2] Fix some new compiler warnings (Issue #5700)
[branch-2.2 e93ab4a] Fix some new compiler warnings (Issue #5700)",True,{}
apple/cups,https://github.com/apple/cups,5700,2019-12-08T13:56:24Z,2019-12-13T14:40:30Z,2019-12-13T16:57:43Z,CLOSED,False,4,5,2,https://github.com/OdyX,Fix FTBFS with recent GCC 9,2,['priority-low'],https://github.com/apple/cups/pull/5700,https://github.com/OdyX,3,https://github.com/apple/cups/pull/5700#issuecomment-565518843,"master currently doesn't build on Debian unstable; see Travis-CI log: https://travis-ci.org/OdyX/cups/jobs/620941340
First ""error: variable 'waittime' set but not used [-Werror=unused-but-set-variable]""
Compiling ipp.c...
ipp.c: In function 'main':
ipp.c:236:10: error: variable 'waittime' set but not used [-Werror=unused-but-set-variable]
  236 |   time_t waittime;  /* Wait time for held jobs */
      |          ^~~~~~~~

With this fixed; then ""error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]""
Compiling lpd.c...
lpd.c: In function 'lpd_queue':
lpd.c:1049:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1049 |       if (lpd_command(fd, ""\002%d cfA%03.3d%.15s\n"", (int)strlen(control),
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~
lpd.c:1099:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1099 |       if (lpd_command(fd, ""\003"" CUPS_LLFMT "" dfA%03.3d%.15s\n"",
      |                           ^~~~~~
lpd.c:1182:27: error: '0' flag ignored with precision and '%d' gnu_printf format [-Werror=format=]
 1182 |       if (lpd_command(fd, ""\002%d cfA%03.3d%.15s\n"", (int)strlen(control),
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~","By the way; cups 2.2.13 fails to build with:
Compiling dir.c...
dir.c: In function 'cupsDirRead':
dir.c:383:46: error: '%s' directive output may be truncated writing up to 255 bytes into a region of size between 0 and 1023 [-Werror=format-truncation=]
  383 |     snprintf(filename, sizeof(filename), ""%s/%s"", dp->directory, entry->d_name);
      |                                              ^~
dir.c:383:5: note: 'snprintf' output between 2 and 1280 bytes into a destination of size 1024
  383 |     snprintf(filename, sizeof(filename), ""%s/%s"", dp->directory, entry->d_name);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

See: https://travis-ci.org/OdyX/cups/jobs/624676621",True,{}
apple/cups,https://github.com/apple/cups,5707,2019-12-18T14:43:25Z,2021-03-11T11:46:41Z,2021-03-11T11:46:41Z,CLOSED,False,19062,0,1,https://github.com/scootergrisen,Add cups_da.po,2,[],https://github.com/apple/cups/pull/5707,https://github.com/scootergrisen,1,https://github.com/apple/cups/pull/5707,,,True,{}
apple/cups,https://github.com/apple/cups,5707,2019-12-18T14:43:25Z,2021-03-11T11:46:41Z,2021-03-11T11:46:41Z,CLOSED,False,19062,0,1,https://github.com/scootergrisen,Add cups_da.po,2,[],https://github.com/apple/cups/pull/5707,https://github.com/scootergrisen,2,https://github.com/apple/cups/pull/5707#issuecomment-576470277,,"Is everything ok with this?
I would like to make sure the changes will get into the code before next release.",True,{}
apple/cups,https://github.com/apple/cups,5707,2019-12-18T14:43:25Z,2021-03-11T11:46:41Z,2021-03-11T11:46:41Z,CLOSED,False,19062,0,1,https://github.com/scootergrisen,Add cups_da.po,2,[],https://github.com/apple/cups/pull/5707,https://github.com/polluks,3,https://github.com/apple/cups/pull/5707#issuecomment-592051938,,"Is everything ok with this?
I would like to make sure the changes will get into the code before next release.

No commits since Michael left...",True,{}
apple/cups,https://github.com/apple/cups,5707,2019-12-18T14:43:25Z,2021-03-11T11:46:41Z,2021-03-11T11:46:41Z,CLOSED,False,19062,0,1,https://github.com/scootergrisen,Add cups_da.po,2,[],https://github.com/apple/cups/pull/5707,https://github.com/michaelrsweet,4,https://github.com/apple/cups/pull/5707#issuecomment-796678769,,Please submit this to the OpenPrinting CUPS project.,True,{}
apple/cups,https://github.com/apple/cups,5710,2019-12-27T08:47:19Z,2020-01-02T04:45:37Z,2020-01-02T09:59:49Z,CLOSED,False,3,2,1,https://github.com/vlangcoder,Fix permissions of ipp Backend for legacy driverless printing support,1,['wontfix'],https://github.com/apple/cups/pull/5710,https://github.com/vlangcoder,1,https://github.com/apple/cups/pull/5710,"Cups-filters 1.26.0+ assumes 755 for the driverless printing fallback logic.
Ubuntu 19.10 already applies a distro specific patch to cups for this.
The issue was brought up here
OpenPrinting/cups-filters#163.","Cups-filters 1.26.0+ assumes 755 for the driverless printing fallback logic.
Ubuntu 19.10 already applies a distro specific patch to cups for this.
The issue was brought up here
OpenPrinting/cups-filters#163.",True,"{'THUMBS_UP': ['https://github.com/DeepakPatankar', 'https://github.com/vlangcoder', 'https://github.com/GueGuerreiro']}"
apple/cups,https://github.com/apple/cups,5710,2019-12-27T08:47:19Z,2020-01-02T04:45:37Z,2020-01-02T09:59:49Z,CLOSED,False,3,2,1,https://github.com/vlangcoder,Fix permissions of ipp Backend for legacy driverless printing support,1,['wontfix'],https://github.com/apple/cups/pull/5710,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5710#issuecomment-570117433,"Cups-filters 1.26.0+ assumes 755 for the driverless printing fallback logic.
Ubuntu 19.10 already applies a distro specific patch to cups for this.
The issue was brought up here
OpenPrinting/cups-filters#163.","That would break Kerberized printing, can't do it.",True,{}
apple/cups,https://github.com/apple/cups,5710,2019-12-27T08:47:19Z,2020-01-02T04:45:37Z,2020-01-02T09:59:49Z,CLOSED,False,3,2,1,https://github.com/vlangcoder,Fix permissions of ipp Backend for legacy driverless printing support,1,['wontfix'],https://github.com/apple/cups/pull/5710,https://github.com/vlangcoder,3,https://github.com/apple/cups/pull/5710#issuecomment-570147224,"Cups-filters 1.26.0+ assumes 755 for the driverless printing fallback logic.
Ubuntu 19.10 already applies a distro specific patch to cups for this.
The issue was brought up here
OpenPrinting/cups-filters#163.","Thank you for your feedback.
I created a new issue for cups-filters to discuss how we can fix this otherwise.
OpenPrinting/cups-filters#183",True,{}
apple/cups,https://github.com/apple/cups,5722,2020-01-20T11:37:48Z,2020-09-14T09:24:08Z,2020-09-14T09:24:43Z,CLOSED,False,3268,580,18,https://github.com/zdohnal,Prioritize print-color-mode-supported over PWG when creating color mo…,6,[],https://github.com/apple/cups/pull/5722,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5722,"…dels
The same patch as for cups-filters ppd generator, fixes #5713 .","…dels
The same patch as for cups-filters ppd generator, fixes #5713 .",True,{}
apple/cups,https://github.com/apple/cups,5722,2020-01-20T11:37:48Z,2020-09-14T09:24:08Z,2020-09-14T09:24:43Z,CLOSED,False,3268,580,18,https://github.com/zdohnal,Prioritize print-color-mode-supported over PWG when creating color mo…,6,[],https://github.com/apple/cups/pull/5722,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5722#issuecomment-691934761,"…dels
The same patch as for cups-filters ppd generator, fixes #5713 .",I will create a new pull request in the future.,True,{}
apple/cups,https://github.com/apple/cups,5724,2020-01-21T09:48:28Z,2021-03-11T11:53:36Z,2021-03-11T11:53:37Z,CLOSED,False,6,0,1,https://github.com/efuss,Ignore HTTP-date values with invalid year field,1,['wontfix'],https://github.com/apple/cups/pull/5724,https://github.com/efuss,1,https://github.com/apple/cups/pull/5724,"Some clients request PPD files with a random value (e.g.., 25 Nov 4461684 22:08:41) in the If-Modified-Since header (see Issue #5511).
Ignore this by rejecting invalid (RFC 7231 says the year field is 4DIGIT) years in httpGetDateTime().","Some clients request PPD files with a random value (e.g.., 25 Nov 4461684 22:08:41) in the If-Modified-Since header (see Issue #5511).
Ignore this by rejecting invalid (RFC 7231 says the year field is 4DIGIT) years in httpGetDateTime().",True,{}
apple/cups,https://github.com/apple/cups,5724,2020-01-21T09:48:28Z,2021-03-11T11:53:36Z,2021-03-11T11:53:37Z,CLOSED,False,6,0,1,https://github.com/efuss,Ignore HTTP-date values with invalid year field,1,['wontfix'],https://github.com/apple/cups/pull/5724,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5724#issuecomment-796682538,"Some clients request PPD files with a random value (e.g.., 25 Nov 4461684 22:08:41) in the If-Modified-Since header (see Issue #5511).
Ignore this by rejecting invalid (RFC 7231 says the year field is 4DIGIT) years in httpGetDateTime().",Fixed in OpenPrinting CUPS.,True,{}
apple/cups,https://github.com/apple/cups,5725,2020-01-24T16:56:21Z,2021-03-11T11:52:11Z,2021-03-11T11:52:11Z,CLOSED,False,1,1,1,https://github.com/daftaupe,Fix typo in jobs-header.tmpl,1,[],https://github.com/apple/cups/pull/5725,https://github.com/daftaupe,1,https://github.com/apple/cups/pull/5725,,,True,{}
apple/cups,https://github.com/apple/cups,5725,2020-01-24T16:56:21Z,2021-03-11T11:52:11Z,2021-03-11T11:52:11Z,CLOSED,False,1,1,1,https://github.com/daftaupe,Fix typo in jobs-header.tmpl,1,[],https://github.com/apple/cups/pull/5725,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5725#issuecomment-796681730,,Please submit this to the OpenPrinting CUPS project.,True,{}
apple/cups,https://github.com/apple/cups,5738,2020-02-14T15:51:38Z,2020-09-14T09:25:08Z,2020-09-14T09:25:08Z,CLOSED,False,3269,578,18,https://github.com/zdohnal,Fix leakage of ppd,6,[],https://github.com/apple/cups/pull/5738,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5738,"Hi,
I run our internal RH coverity scan, which identified memory leak of ppd structure.
Would you mind merging it into the project?","Hi,
I run our internal RH coverity scan, which identified memory leak of ppd structure.
Would you mind merging it into the project?",True,{}
apple/cups,https://github.com/apple/cups,5738,2020-02-14T15:51:38Z,2020-09-14T09:25:08Z,2020-09-14T09:25:08Z,CLOSED,False,3269,578,18,https://github.com/zdohnal,Fix leakage of ppd,6,[],https://github.com/apple/cups/pull/5738,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5738#issuecomment-691935012,"Hi,
I run our internal RH coverity scan, which identified memory leak of ppd structure.
Would you mind merging it into the project?",I will create a new pull request in the future.,True,{}
apple/cups,https://github.com/apple/cups,5770,2020-04-20T05:03:49Z,2021-03-11T12:01:32Z,2021-03-11T12:01:32Z,CLOSED,False,33,26,1,https://github.com/inflex,Fix inability to differentiate between multiple same-model printers on USB (dymo),1,[],https://github.com/apple/cups/pull/5770,https://github.com/inflex,1,https://github.com/apple/cups/pull/5770,"Problem:
cups will not properly differentiate between multiple same-model devices on the USB bus if they do not have a unique serial number in the IEEE1284 ID string, even if the USB data does in fact have a unique serial attribute.
Modification/Fix:
Changed make_device_uri() so that it will look for a serial number in the USB device data first before it tries to find the data in the IEEE1284 string.
Existing code also was possibly not likely to work because the devdesc struct was not initialised with libusb_get_device_descriptor() before _get'ing the iSerialNumber.
Code now permits the use of multiple printers of the same model/type even with the same IEEE1284 data SERN which was the case with the DYMO LabelWriter 450 units.","Problem:
cups will not properly differentiate between multiple same-model devices on the USB bus if they do not have a unique serial number in the IEEE1284 ID string, even if the USB data does in fact have a unique serial attribute.
Modification/Fix:
Changed make_device_uri() so that it will look for a serial number in the USB device data first before it tries to find the data in the IEEE1284 string.
Existing code also was possibly not likely to work because the devdesc struct was not initialised with libusb_get_device_descriptor() before _get'ing the iSerialNumber.
Code now permits the use of multiple printers of the same model/type even with the same IEEE1284 data SERN which was the case with the DYMO LabelWriter 450 units.",True,{}
apple/cups,https://github.com/apple/cups,5770,2020-04-20T05:03:49Z,2021-03-11T12:01:32Z,2021-03-11T12:01:32Z,CLOSED,False,33,26,1,https://github.com/inflex,Fix inability to differentiate between multiple same-model printers on USB (dymo),1,[],https://github.com/apple/cups/pull/5770,https://github.com/inflex,2,https://github.com/apple/cups/pull/5770#issuecomment-616971445,"Problem:
cups will not properly differentiate between multiple same-model devices on the USB bus if they do not have a unique serial number in the IEEE1284 ID string, even if the USB data does in fact have a unique serial attribute.
Modification/Fix:
Changed make_device_uri() so that it will look for a serial number in the USB device data first before it tries to find the data in the IEEE1284 string.
Existing code also was possibly not likely to work because the devdesc struct was not initialised with libusb_get_device_descriptor() before _get'ing the iSerialNumber.
Code now permits the use of multiple printers of the same model/type even with the same IEEE1284 data SERN which was the case with the DYMO LabelWriter 450 units.",Just a heads-up that I thought about last night;   this fix may have some problematic side-effects in that the DeviceURI could potentially change for existing installed systems if they didn't previously have a serial number in the DeviceURI and subsequently could result in existing installations not properly functioning after an update.,True,{}
apple/cups,https://github.com/apple/cups,5770,2020-04-20T05:03:49Z,2021-03-11T12:01:32Z,2021-03-11T12:01:32Z,CLOSED,False,33,26,1,https://github.com/inflex,Fix inability to differentiate between multiple same-model printers on USB (dymo),1,[],https://github.com/apple/cups/pull/5770,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5770#issuecomment-796686944,"Problem:
cups will not properly differentiate between multiple same-model devices on the USB bus if they do not have a unique serial number in the IEEE1284 ID string, even if the USB data does in fact have a unique serial attribute.
Modification/Fix:
Changed make_device_uri() so that it will look for a serial number in the USB device data first before it tries to find the data in the IEEE1284 string.
Existing code also was possibly not likely to work because the devdesc struct was not initialised with libusb_get_device_descriptor() before _get'ing the iSerialNumber.
Code now permits the use of multiple printers of the same model/type even with the same IEEE1284 data SERN which was the case with the DYMO LabelWriter 450 units.",Please report this to the OpenPrinting CUPS project.,True,{}
apple/cups,https://github.com/apple/cups,5773,2020-04-26T23:09:45Z,2021-03-11T11:51:40Z,2021-03-11T11:51:41Z,CLOSED,False,2,1,1,https://github.com/pacew,"fix wide roll printing: In rastertopwg.c, don't core dump if map.pwg is NULL",1,[],https://github.com/apple/cups/pull/5773,https://github.com/pacew,1,https://github.com/apple/cups/pull/5773,"I don't have any understanding of the big picture, but after I recently updated my ubuntu system, I could no longer print to my HP T120 wide format roll printer.  I tracked it down to a core dump from rastertopwg caused by an attempt to reference pwg_size->map.pwg when it was NULL.  With this change in place, I can print to my T120 again.","I don't have any understanding of the big picture, but after I recently updated my ubuntu system, I could no longer print to my HP T120 wide format roll printer.  I tracked it down to a core dump from rastertopwg caused by an attempt to reference pwg_size->map.pwg when it was NULL.  With this change in place, I can print to my T120 again.",True,{}
apple/cups,https://github.com/apple/cups,5773,2020-04-26T23:09:45Z,2021-03-11T11:51:40Z,2021-03-11T11:51:41Z,CLOSED,False,2,1,1,https://github.com/pacew,"fix wide roll printing: In rastertopwg.c, don't core dump if map.pwg is NULL",1,[],https://github.com/apple/cups/pull/5773,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5773#issuecomment-796681424,"I don't have any understanding of the big picture, but after I recently updated my ubuntu system, I could no longer print to my HP T120 wide format roll printer.  I tracked it down to a core dump from rastertopwg caused by an attempt to reference pwg_size->map.pwg when it was NULL.  With this change in place, I can print to my T120 again.",Fixed in OpenPrinting CUPS.,True,{}
apple/cups,https://github.com/apple/cups,5782,2020-05-21T07:40:12Z,2020-09-14T09:25:04Z,2020-09-14T09:25:04Z,CLOSED,False,3272,578,18,https://github.com/zdohnal,Generate ETIMEDOUT when remaining_time is reached and EHOSTDOWN when …,6,[],https://github.com/apple/cups/pull/5782,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5782,"…all addresses are tried
Hi,
the patch fixes issue #5757 , where httpAddrConnect2() sets 2 other errnos - ETIMEDOUT and EHOSTDOWN - when two conditions are met:

when remaining_time is reached, it sets errno to ETIMEDOUT
when there are no other addresses and number of file descriptors is zero, it sets errno to EHOSTDOWN

This will propagate error into backends, where contimeout can be applied now. Other usages httpAddrConnect2() will not change:

httpAddrConnect() - is used in socket backend (where previous EINPROGRESS isn't taken care of and new errnos will result in applying correct timeouts), in cupsFileOpen() and ippfind tool, where the behavior will not change, because it checks only return value and not errno - httpAddrConnect2() still returns error as before
httpReconnect() - it will just return different errno in http->error - ETIMEDOUT or EHOSTDOWN instead of EINPROGRESS in those two mentioned cases. The previous result - the failure - will not change
ippeveprinter - still will return error.

Would you mind adding the patch to CUPS project? Please tell me if I can change anything.
Thank you in advance!
Zdenek","…all addresses are tried
Hi,
the patch fixes issue #5757 , where httpAddrConnect2() sets 2 other errnos - ETIMEDOUT and EHOSTDOWN - when two conditions are met:

when remaining_time is reached, it sets errno to ETIMEDOUT
when there are no other addresses and number of file descriptors is zero, it sets errno to EHOSTDOWN

This will propagate error into backends, where contimeout can be applied now. Other usages httpAddrConnect2() will not change:

httpAddrConnect() - is used in socket backend (where previous EINPROGRESS isn't taken care of and new errnos will result in applying correct timeouts), in cupsFileOpen() and ippfind tool, where the behavior will not change, because it checks only return value and not errno - httpAddrConnect2() still returns error as before
httpReconnect() - it will just return different errno in http->error - ETIMEDOUT or EHOSTDOWN instead of EINPROGRESS in those two mentioned cases. The previous result - the failure - will not change
ippeveprinter - still will return error.

Would you mind adding the patch to CUPS project? Please tell me if I can change anything.
Thank you in advance!
Zdenek",True,{}
apple/cups,https://github.com/apple/cups,5782,2020-05-21T07:40:12Z,2020-09-14T09:25:04Z,2020-09-14T09:25:04Z,CLOSED,False,3272,578,18,https://github.com/zdohnal,Generate ETIMEDOUT when remaining_time is reached and EHOSTDOWN when …,6,[],https://github.com/apple/cups/pull/5782,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5782#issuecomment-691934978,"…all addresses are tried
Hi,
the patch fixes issue #5757 , where httpAddrConnect2() sets 2 other errnos - ETIMEDOUT and EHOSTDOWN - when two conditions are met:

when remaining_time is reached, it sets errno to ETIMEDOUT
when there are no other addresses and number of file descriptors is zero, it sets errno to EHOSTDOWN

This will propagate error into backends, where contimeout can be applied now. Other usages httpAddrConnect2() will not change:

httpAddrConnect() - is used in socket backend (where previous EINPROGRESS isn't taken care of and new errnos will result in applying correct timeouts), in cupsFileOpen() and ippfind tool, where the behavior will not change, because it checks only return value and not errno - httpAddrConnect2() still returns error as before
httpReconnect() - it will just return different errno in http->error - ETIMEDOUT or EHOSTDOWN instead of EINPROGRESS in those two mentioned cases. The previous result - the failure - will not change
ippeveprinter - still will return error.

Would you mind adding the patch to CUPS project? Please tell me if I can change anything.
Thank you in advance!
Zdenek",I will create a new pull request in the future.,True,{}
apple/cups,https://github.com/apple/cups,5783,2020-05-21T18:38:41Z,2020-05-25T18:20:09Z,2020-05-25T18:20:09Z,CLOSED,False,1114,1082,1,https://github.com/jschwender,more complete translations,6,[],https://github.com/apple/cups/pull/5783,https://github.com/jschwender,1,https://github.com/apple/cups/pull/5783,"this is only 53% strings translated, but most of the attribute strings are now translated. So far i have only checked that it compiles and works. More later.","this is only 53% strings translated, but most of the attribute strings are now translated. So far i have only checked that it compiles and works. More later.",True,{}
apple/cups,https://github.com/apple/cups,5785,2020-05-25T18:26:20Z,2020-06-25T19:09:04Z,2020-06-25T19:09:04Z,CLOSED,False,1305,1273,11,https://github.com/jschwender,updated translation (de),9,[],https://github.com/apple/cups/pull/5785,https://github.com/jschwender,1,https://github.com/apple/cups/pull/5785,"translation for IPP everywhere added, now most of the attributes in the print dialogs are localized.","translation for IPP everywhere added, now most of the attributes in the print dialogs are localized.",True,{}
apple/cups,https://github.com/apple/cups,5789,2020-06-06T15:17:02Z,2021-03-11T12:00:03Z,2021-03-11T12:00:04Z,CLOSED,False,3,0,1,https://github.com/sgipower,HP Laserjet 1010 delay required,1,[],https://github.com/apple/cups/pull/5789,https://github.com/sgipower,1,https://github.com/apple/cups/pull/5789,HP Laserjet suffers the same problem as the 1150 and 1015. The last page isn't printed until the job times out.,HP Laserjet suffers the same problem as the 1150 and 1015. The last page isn't printed until the job times out.,True,{}
apple/cups,https://github.com/apple/cups,5789,2020-06-06T15:17:02Z,2021-03-11T12:00:03Z,2021-03-11T12:00:04Z,CLOSED,False,3,0,1,https://github.com/sgipower,HP Laserjet 1010 delay required,1,[],https://github.com/apple/cups/pull/5789,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5789#issuecomment-796686113,HP Laserjet suffers the same problem as the 1150 and 1015. The last page isn't printed until the job times out.,Fixed in OpenPrinting CUPS,True,{}
apple/cups,https://github.com/apple/cups,5792,2020-06-08T13:59:15Z,2020-09-14T09:25:00Z,2020-09-14T09:25:00Z,CLOSED,False,3273,578,18,https://github.com/zdohnal,"Web interface: Set the actual device uri, not device_uri|make_model s…",6,[],https://github.com/apple/cups/pull/5792,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5792,"…tring from html form
Hi @salgernon ,
if I try to install my printer with IPP everywhere model via CUPS web UI, it creates a raw print queue with incorrect device uri.
The reason is device_uri from html form template contains URI|make_model string - cgi script admin correctly gets make_model, but doesn't reset device_uri after that to the real device_uri.
Would you mind adding the patch to CUPS project?
Thank you in advance!
Zdenek","…tring from html form
Hi @salgernon ,
if I try to install my printer with IPP everywhere model via CUPS web UI, it creates a raw print queue with incorrect device uri.
The reason is device_uri from html form template contains URI|make_model string - cgi script admin correctly gets make_model, but doesn't reset device_uri after that to the real device_uri.
Would you mind adding the patch to CUPS project?
Thank you in advance!
Zdenek",True,{}
apple/cups,https://github.com/apple/cups,5792,2020-06-08T13:59:15Z,2020-09-14T09:25:00Z,2020-09-14T09:25:00Z,CLOSED,False,3273,578,18,https://github.com/zdohnal,"Web interface: Set the actual device uri, not device_uri|make_model s…",6,[],https://github.com/apple/cups/pull/5792,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5792#issuecomment-691934949,"…tring from html form
Hi @salgernon ,
if I try to install my printer with IPP everywhere model via CUPS web UI, it creates a raw print queue with incorrect device uri.
The reason is device_uri from html form template contains URI|make_model string - cgi script admin correctly gets make_model, but doesn't reset device_uri after that to the real device_uri.
Would you mind adding the patch to CUPS project?
Thank you in advance!
Zdenek",I will create a new pull request in the future.,True,{}
apple/cups,https://github.com/apple/cups,5793,2020-06-11T08:32:15Z,2020-09-14T09:24:55Z,2020-09-14T09:24:55Z,CLOSED,False,3287,577,17,https://github.com/zdohnal,ipptool: support mdns uris,6,[],https://github.com/apple/cups/pull/5793,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5793,"Hi,
ipptool utility doesn't support mdns uris, so debugging IPP printers is more difficult, because sudo lpinfo -l -v reports mdns uri for IPP print queues.
The patch does MDNS name resolution before doing ipp request.
Would you mind adding the patch into the project?
Thank you in advance,
Zdenek","Hi,
ipptool utility doesn't support mdns uris, so debugging IPP printers is more difficult, because sudo lpinfo -l -v reports mdns uri for IPP print queues.
The patch does MDNS name resolution before doing ipp request.
Would you mind adding the patch into the project?
Thank you in advance,
Zdenek",True,{}
apple/cups,https://github.com/apple/cups,5793,2020-06-11T08:32:15Z,2020-09-14T09:24:55Z,2020-09-14T09:24:55Z,CLOSED,False,3287,577,17,https://github.com/zdohnal,ipptool: support mdns uris,6,[],https://github.com/apple/cups/pull/5793,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5793#issuecomment-691934895,"Hi,
ipptool utility doesn't support mdns uris, so debugging IPP printers is more difficult, because sudo lpinfo -l -v reports mdns uri for IPP print queues.
The patch does MDNS name resolution before doing ipp request.
Would you mind adding the patch into the project?
Thank you in advance,
Zdenek",I will create a new pull request in the future.,True,{}
apple/cups,https://github.com/apple/cups,5797,2020-06-25T20:28:54Z,2021-03-11T11:50:17Z,2021-03-11T11:50:17Z,CLOSED,False,1801,1620,11,https://github.com/jschwender,Update cups_de.po and clearify an expression in templates,4,[],https://github.com/apple/cups/pull/5797,https://github.com/jschwender,1,https://github.com/apple/cups/pull/5797,added more translations (de) to po file. Using a more precise expression in the german templates.,added more translations (de) to po file. Using a more precise expression in the german templates.,True,{}
apple/cups,https://github.com/apple/cups,5797,2020-06-25T20:28:54Z,2021-03-11T11:50:17Z,2021-03-11T11:50:17Z,CLOSED,False,1801,1620,11,https://github.com/jschwender,Update cups_de.po and clearify an expression in templates,4,[],https://github.com/apple/cups/pull/5797,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5797#issuecomment-796680671,added more translations (de) to po file. Using a more precise expression in the german templates.,Fixed in OpenPrinting CUPS.,True,{}
apple/cups,https://github.com/apple/cups,5800,2020-07-04T19:14:24Z,2021-03-11T11:49:15Z,2021-03-11T11:49:15Z,CLOSED,False,5523,1074,1,https://github.com/bellaperez,[ca]: Updates and fixes to Catalan translation,6,[],https://github.com/apple/cups/pull/5800,https://github.com/bellaperez,1,https://github.com/apple/cups/pull/5800,Updates and fixes for a very old translation,Updates and fixes for a very old translation,True,{}
apple/cups,https://github.com/apple/cups,5800,2020-07-04T19:14:24Z,2021-03-11T11:49:15Z,2021-03-11T11:49:15Z,CLOSED,False,5523,1074,1,https://github.com/bellaperez,[ca]: Updates and fixes to Catalan translation,6,[],https://github.com/apple/cups/pull/5800,https://github.com/bellaperez,2,https://github.com/apple/cups/pull/5800#issuecomment-657110346,Updates and fixes for a very old translation,"To: @michaelrsweet
Catalan CUPS translation is ready!",True,{}
apple/cups,https://github.com/apple/cups,5800,2020-07-04T19:14:24Z,2021-03-11T11:49:15Z,2021-03-11T11:49:15Z,CLOSED,False,5523,1074,1,https://github.com/bellaperez,[ca]: Updates and fixes to Catalan translation,6,[],https://github.com/apple/cups/pull/5800,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5800#issuecomment-796680039,Updates and fixes for a very old translation,Please submit this to the OpenPrinting CUPS project.,True,{}
apple/cups,https://github.com/apple/cups,5807,2020-07-20T07:59:42Z,2021-02-02T18:40:50Z,2021-02-02T18:40:53Z,CLOSED,False,1,1,1,https://github.com/jschwender,Fix for #5805 -  number of copies,1,[],https://github.com/apple/cups/pull/5807,https://github.com/jschwender,1,https://github.com/apple/cups/pull/5807,"With that fix, the ppd file that is created by installing a ippeverywhere printer contains correctly ""True"" and the number of copies is correctly printed. Without that fix, that bool value in the ppd is ""true"" and as a result the number of copies is ignored and it always prints a single copy.","With that fix, the ppd file that is created by installing a ippeverywhere printer contains correctly ""True"" and the number of copies is correctly printed. Without that fix, that bool value in the ppd is ""true"" and as a result the number of copies is ignored and it always prints a single copy.",True,{}
apple/cups,https://github.com/apple/cups,5809,2020-07-21T10:59:39Z,2020-09-14T09:24:50Z,2020-09-14T09:24:50Z,CLOSED,False,3281,578,20,https://github.com/zdohnal,cups/dests.c: cupsGetNamedDest() - set IPP_STATUS_ERROR_NOT_FOUND err…,6,[],https://github.com/apple/cups/pull/5809,https://github.com/zdohnal,1,https://github.com/apple/cups/pull/5809,"…or if queue was not found
lp.c/lpr.c: check for IPP_STATUS_ERROR_NOT_FOUND and generate a proper message if hit
Hi,
here is the pull request connected to #5808 .
Localization files probably will need to be regenerated to support the new string in the pull request, but regenerating it by myself would cause conflicts for other people who has pull requests for localizations.
Please regenerate localization files whenever you see fit.","…or if queue was not found
lp.c/lpr.c: check for IPP_STATUS_ERROR_NOT_FOUND and generate a proper message if hit
Hi,
here is the pull request connected to #5808 .
Localization files probably will need to be regenerated to support the new string in the pull request, but regenerating it by myself would cause conflicts for other people who has pull requests for localizations.
Please regenerate localization files whenever you see fit.",True,{}
apple/cups,https://github.com/apple/cups,5809,2020-07-21T10:59:39Z,2020-09-14T09:24:50Z,2020-09-14T09:24:50Z,CLOSED,False,3281,578,20,https://github.com/zdohnal,cups/dests.c: cupsGetNamedDest() - set IPP_STATUS_ERROR_NOT_FOUND err…,6,[],https://github.com/apple/cups/pull/5809,https://github.com/zdohnal,2,https://github.com/apple/cups/pull/5809#issuecomment-691934855,"…or if queue was not found
lp.c/lpr.c: check for IPP_STATUS_ERROR_NOT_FOUND and generate a proper message if hit
Hi,
here is the pull request connected to #5808 .
Localization files probably will need to be regenerated to support the new string in the pull request, but regenerating it by myself would cause conflicts for other people who has pull requests for localizations.
Please regenerate localization files whenever you see fit.",I will create a new pull request in the future.,True,{}
apple/cups,https://github.com/apple/cups,5811,2020-07-22T17:28:29Z,2021-02-02T18:39:57Z,2021-02-02T18:40:00Z,CLOSED,False,0,1,1,https://github.com/jschwender,Fix for issue #5802,1,[],https://github.com/apple/cups/pull/5811,https://github.com/jschwender,1,https://github.com/apple/cups/pull/5811,I don't see a need for any height specification here. Looks good to me without and fixes the issue.,I don't see a need for any height specification here. Looks good to me without and fixes the issue.,True,{}
apple/cups,https://github.com/apple/cups,5812,2020-07-22T17:39:58Z,2021-02-02T18:38:35Z,2021-02-02T18:38:56Z,CLOSED,False,2,2,1,https://github.com/jschwender,missing translation added,1,[],https://github.com/apple/cups/pull/5812,https://github.com/jschwender,1,https://github.com/apple/cups/pull/5812,,,True,{}
apple/cups,https://github.com/apple/cups,5818,2020-08-06T14:43:31Z,2021-03-11T11:59:36Z,2021-03-11T11:59:37Z,CLOSED,False,8,4,1,https://github.com/alejandroclaro,Fix infinite loop waiting for usb printer to be available,1,[],https://github.com/apple/cups/pull/5818,https://github.com/alejandroclaro,1,https://github.com/apple/cups/pull/5818,"Waiting forever for the USB device to be available is not a reliable solution. Sometimes it is not possible to impose a policy of maximum waiting time for the job to be completed in the scheduler, without knowing if the process is actually being carried out correctly or not. Because of this, a maximum number of tries is introduced to make sure the backend process ends in a failure condition if the USB device is connected.
This solves #5817","Waiting forever for the USB device to be available is not a reliable solution. Sometimes it is not possible to impose a policy of maximum waiting time for the job to be completed in the scheduler, without knowing if the process is actually being carried out correctly or not. Because of this, a maximum number of tries is introduced to make sure the backend process ends in a failure condition if the USB device is connected.
This solves #5817",True,{}
apple/cups,https://github.com/apple/cups,5818,2020-08-06T14:43:31Z,2021-03-11T11:59:36Z,2021-03-11T11:59:37Z,CLOSED,False,8,4,1,https://github.com/alejandroclaro,Fix infinite loop waiting for usb printer to be available,1,[],https://github.com/apple/cups/pull/5818,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5818#issuecomment-796685862,"Waiting forever for the USB device to be available is not a reliable solution. Sometimes it is not possible to impose a policy of maximum waiting time for the job to be completed in the scheduler, without knowing if the process is actually being carried out correctly or not. Because of this, a maximum number of tries is introduced to make sure the backend process ends in a failure condition if the USB device is connected.
This solves #5817","Best to report this to the OpenPrinting CUPS project, however your proposed solution is no better. The network backends look at whether the destination is a class (and so we should give up after one try) but otherwise keep trying indefinitely.",True,{}
apple/cups,https://github.com/apple/cups,5823,2020-08-14T14:43:31Z,2021-03-11T11:56:26Z,2021-03-11T11:56:26Z,CLOSED,False,3,0,1,https://github.com/nadrimajstor,Add USB quirk rule for Citizen CT-S4000 printer,1,[],https://github.com/apple/cups/pull/5823,https://github.com/nadrimajstor,1,https://github.com/apple/cups/pull/5823,"Fix 8 seconds pause between print jobs.
Fix (sometimes) fail to cut the receipt at the end.","Fix 8 seconds pause between print jobs.
Fix (sometimes) fail to cut the receipt at the end.",True,{}
apple/cups,https://github.com/apple/cups,5823,2020-08-14T14:43:31Z,2021-03-11T11:56:26Z,2021-03-11T11:56:26Z,CLOSED,False,3,0,1,https://github.com/nadrimajstor,Add USB quirk rule for Citizen CT-S4000 printer,1,[],https://github.com/apple/cups/pull/5823,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5823#issuecomment-796684213,"Fix 8 seconds pause between print jobs.
Fix (sometimes) fail to cut the receipt at the end.",Fixed in OpenPrinting CUPS,True,{}
apple/cups,https://github.com/apple/cups,5824,2020-08-14T17:49:29Z,2020-08-30T14:14:56Z,2020-08-30T14:14:56Z,CLOSED,False,21,0,1,https://github.com/umairaziz112221,Create SECURITY.md,1,[],https://github.com/apple/cups/pull/5824,https://github.com/umairaziz112221,1,https://github.com/apple/cups/pull/5824,,,True,{}
apple/cups,https://github.com/apple/cups,5827,2020-09-07T15:02:34Z,2021-03-11T11:48:51Z,2021-03-11T16:11:29Z,CLOSED,False,2,2,1,https://github.com/orbea,backend/Makefile: Don't use libtool.,1,[],https://github.com/apple/cups/pull/5827,https://github.com/orbea,1,https://github.com/apple/cups/pull/5827,"This is not needed and causes problems with more strict implementations of libtool.
With slibtool it fails.
Installing backends in /tmp/package-cups/usr/lib64/cups/backend
rdlibtool: error: --mode must be specified.
rdlibtool: error: --mode must be specified.
make[1]: *** [Makefile:120: install-exec] Error 2
make: *** [Makefile:198: install-exec] Error 1

https://git.foss21.org/slibtool","This is not needed and causes problems with more strict implementations of libtool.
With slibtool it fails.
Installing backends in /tmp/package-cups/usr/lib64/cups/backend
rdlibtool: error: --mode must be specified.
rdlibtool: error: --mode must be specified.
make[1]: *** [Makefile:120: install-exec] Error 2
make: *** [Makefile:198: install-exec] Error 1

https://git.foss21.org/slibtool",True,{}
apple/cups,https://github.com/apple/cups,5827,2020-09-07T15:02:34Z,2021-03-11T11:48:51Z,2021-03-11T16:11:29Z,CLOSED,False,2,2,1,https://github.com/orbea,backend/Makefile: Don't use libtool.,1,[],https://github.com/apple/cups/pull/5827,https://github.com/prlw1,2,https://github.com/apple/cups/pull/5827#issuecomment-712259474,"This is not needed and causes problems with more strict implementations of libtool.
With slibtool it fails.
Installing backends in /tmp/package-cups/usr/lib64/cups/backend
rdlibtool: error: --mode must be specified.
rdlibtool: error: --mode must be specified.
make[1]: *** [Makefile:120: install-exec] Error 2
make: *** [Makefile:198: install-exec] Error 1

https://git.foss21.org/slibtool","FWIW this patch has been in http://pkgsrc.org since January 2016 (and a similar one since May 2010)
so can be considered tested in the wild on a variety of operating systems.
http://cdn.netbsd.org/pub/pkgsrc/current/pkgsrc/print/cups-base/patches/patch-af
(date not entirely obvious as cups package was renamed cups-base in 2017)",True,{}
apple/cups,https://github.com/apple/cups,5827,2020-09-07T15:02:34Z,2021-03-11T11:48:51Z,2021-03-11T16:11:29Z,CLOSED,False,2,2,1,https://github.com/orbea,backend/Makefile: Don't use libtool.,1,[],https://github.com/apple/cups/pull/5827,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5827#issuecomment-796679839,"This is not needed and causes problems with more strict implementations of libtool.
With slibtool it fails.
Installing backends in /tmp/package-cups/usr/lib64/cups/backend
rdlibtool: error: --mode must be specified.
rdlibtool: error: --mode must be specified.
make[1]: *** [Makefile:120: install-exec] Error 2
make: *** [Makefile:198: install-exec] Error 1

https://git.foss21.org/slibtool",Please submit this to the OpenPrinting CUPS project.,True,{}
apple/cups,https://github.com/apple/cups,5827,2020-09-07T15:02:34Z,2021-03-11T11:48:51Z,2021-03-11T16:11:29Z,CLOSED,False,2,2,1,https://github.com/orbea,backend/Makefile: Don't use libtool.,1,[],https://github.com/apple/cups/pull/5827,https://github.com/orbea,4,https://github.com/apple/cups/pull/5827#issuecomment-796783561,"This is not needed and causes problems with more strict implementations of libtool.
With slibtool it fails.
Installing backends in /tmp/package-cups/usr/lib64/cups/backend
rdlibtool: error: --mode must be specified.
rdlibtool: error: --mode must be specified.
make[1]: *** [Makefile:120: install-exec] Error 2
make: *** [Makefile:198: install-exec] Error 1

https://git.foss21.org/slibtool","@michaelrsweet Already done a while ago. OpenPrinting/cups#11
Is this repo going to be finally replaced now?",True,{}
apple/cups,https://github.com/apple/cups,5827,2020-09-07T15:02:34Z,2021-03-11T11:48:51Z,2021-03-11T16:11:29Z,CLOSED,False,2,2,1,https://github.com/orbea,backend/Makefile: Don't use libtool.,1,[],https://github.com/apple/cups/pull/5827,https://github.com/michaelrsweet,5,https://github.com/apple/cups/pull/5827#issuecomment-796837736,"This is not needed and causes problems with more strict implementations of libtool.
With slibtool it fails.
Installing backends in /tmp/package-cups/usr/lib64/cups/backend
rdlibtool: error: --mode must be specified.
rdlibtool: error: --mode must be specified.
make[1]: *** [Makefile:120: install-exec] Error 2
make: *** [Makefile:198: install-exec] Error 1

https://git.foss21.org/slibtool",@orbea OpenPrinting has taken over CUPS development for Linux/BSD/etc. Apple is still developing CUPS for macOS. And I'm working to keep the two in sync...,True,{'THUMBS_UP': ['https://github.com/orbea']}
apple/cups,https://github.com/apple/cups,5831,2020-09-21T08:51:52Z,2021-03-11T11:55:56Z,2021-03-11T11:55:56Z,CLOSED,False,3,0,1,https://github.com/AmadeusHF,Update org.cups.usb-quirks,1,[],https://github.com/apple/cups/pull/5831,https://github.com/AmadeusHF,1,https://github.com/apple/cups/pull/5831,Fix for low speed USB raw data exchange due to Canon slow back-channel,Fix for low speed USB raw data exchange due to Canon slow back-channel,True,{}
apple/cups,https://github.com/apple/cups,5831,2020-09-21T08:51:52Z,2021-03-11T11:55:56Z,2021-03-11T11:55:56Z,CLOSED,False,3,0,1,https://github.com/AmadeusHF,Update org.cups.usb-quirks,1,[],https://github.com/apple/cups/pull/5831,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5831#issuecomment-796683944,Fix for low speed USB raw data exchange due to Canon slow back-channel,Fixed in OpenPrinting CUPS,True,{}
apple/cups,https://github.com/apple/cups,5835,2020-10-03T12:02:44Z,2021-03-11T11:54:42Z,2021-03-11T11:54:42Z,CLOSED,False,2,2,2,https://github.com/ferivoz,Fix typo in ppdc documentation.,1,[],https://github.com/apple/cups/pull/5835,https://github.com/ferivoz,1,https://github.com/apple/cups/pull/5835,PCFilenName is supposed to be PCFileName.,PCFilenName is supposed to be PCFileName.,True,{'THUMBS_UP': ['https://github.com/yarons']}
apple/cups,https://github.com/apple/cups,5835,2020-10-03T12:02:44Z,2021-03-11T11:54:42Z,2021-03-11T11:54:42Z,CLOSED,False,2,2,2,https://github.com/ferivoz,Fix typo in ppdc documentation.,1,[],https://github.com/apple/cups/pull/5835,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5835#issuecomment-796683268,PCFilenName is supposed to be PCFileName.,Fixed in OpenPrinting CUPS.,True,{}
apple/cups,https://github.com/apple/cups,5836,2020-10-06T01:55:01Z,2021-03-11T11:48:13Z,2021-03-11T11:48:13Z,CLOSED,False,4415,1134,98,https://github.com/tsite,Fix memory leaks,107,[],https://github.com/apple/cups/pull/5836,https://github.com/tsite,1,https://github.com/apple/cups/pull/5836,http://crrev.com/c/2446885,http://crrev.com/c/2446885,True,{}
apple/cups,https://github.com/apple/cups,5836,2020-10-06T01:55:01Z,2021-03-11T11:48:13Z,2021-03-11T11:48:13Z,CLOSED,False,4415,1134,98,https://github.com/tsite,Fix memory leaks,107,[],https://github.com/apple/cups/pull/5836,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5836#issuecomment-796679551,http://crrev.com/c/2446885,Fixed in OpenPrinting CUPS.,True,{}
apple/cups,https://github.com/apple/cups,5837,2020-10-06T02:50:21Z,2021-03-11T11:47:53Z,2021-03-11T11:47:54Z,CLOSED,False,1,1,1,https://github.com/tsite,undefined behavior: signed integer overflow,1,[],https://github.com/apple/cups/pull/5837,https://github.com/tsite,1,https://github.com/apple/cups/pull/5837,,,True,{}
apple/cups,https://github.com/apple/cups,5837,2020-10-06T02:50:21Z,2021-03-11T11:47:53Z,2021-03-11T11:47:54Z,CLOSED,False,1,1,1,https://github.com/tsite,undefined behavior: signed integer overflow,1,[],https://github.com/apple/cups/pull/5837,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5837#issuecomment-796679390,,Fixed in OpenPrinting CUPS.,True,{}
apple/cups,https://github.com/apple/cups,5846,2020-10-19T14:58:24Z,2021-03-11T11:49:54Z,2021-03-11T11:49:54Z,CLOSED,False,2,2,1,https://github.com/prlw1,"Build ippfind in dnssd case, not just avahi and darwin cases.",1,[],https://github.com/apple/cups/pull/5846,https://github.com/prlw1,1,https://github.com/apple/cups/pull/5846,"This seems to be the intention of cups commit 766a822, but a comma
got in the way.","This seems to be the intention of cups commit 766a822, but a comma
got in the way.",True,{}
apple/cups,https://github.com/apple/cups,5846,2020-10-19T14:58:24Z,2021-03-11T11:49:54Z,2021-03-11T11:49:54Z,CLOSED,False,2,2,1,https://github.com/prlw1,"Build ippfind in dnssd case, not just avahi and darwin cases.",1,[],https://github.com/apple/cups/pull/5846,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5846#issuecomment-796680400,"This seems to be the intention of cups commit 766a822, but a comma
got in the way.",Fixed in OpenPrinting CUPS.,True,{}
apple/cups,https://github.com/apple/cups,5847,2020-10-27T16:42:08Z,2021-03-11T11:47:24Z,2021-03-11T11:47:25Z,CLOSED,False,19,18,2,https://github.com/scabrero,Fix negotiate authentication between CGIs and scheduler,4,[],https://github.com/apple/cups/pull/5847,https://github.com/scabrero,1,https://github.com/apple/cups/pull/5847,"Fixes the infinite loop when ""Negotiate"" authentication is used and allows ""Local"" certificate based authentication when connecting to localhost:
    Client                       CGI
    Browser <- Remote conn -> admin.cgi <--- Localhost conn --->  Scheduler
      |                           |                                    |
      + --- HTTP/POST /admin/ --> |                                    |
      |                           + --- CUPS-Get-Devices ------------> |
      |                           |                                    |
      |                           | <-- 401 Unauthorized --------------+
      |                           |     WWW-Authenticate:              |
      |                           |       Negotiate, (PeerCred,) Local |
      |                           |                                    |
      | <-- 401 Unauthorized -----+                                    |
      |     WWW-Authenticate:     |                                    |
      |       Negotiate           |                                    |
      |                           |                                    |
      | --- HTTP/POST /admin/ --> |                                    |
      |     Authorization:        + --- IPP CUPS-GetDevices ---------> |
      |       Negotiate           |     Authorization: Local <cert>    |
      |                           |                                    |

Fixes #5596","Fixes the infinite loop when ""Negotiate"" authentication is used and allows ""Local"" certificate based authentication when connecting to localhost:
    Client                       CGI
    Browser <- Remote conn -> admin.cgi <--- Localhost conn --->  Scheduler
      |                           |                                    |
      + --- HTTP/POST /admin/ --> |                                    |
      |                           + --- CUPS-Get-Devices ------------> |
      |                           |                                    |
      |                           | <-- 401 Unauthorized --------------+
      |                           |     WWW-Authenticate:              |
      |                           |       Negotiate, (PeerCred,) Local |
      |                           |                                    |
      | <-- 401 Unauthorized -----+                                    |
      |     WWW-Authenticate:     |                                    |
      |       Negotiate           |                                    |
      |                           |                                    |
      | --- HTTP/POST /admin/ --> |                                    |
      |     Authorization:        + --- IPP CUPS-GetDevices ---------> |
      |       Negotiate           |     Authorization: Local <cert>    |
      |                           |                                    |

Fixes #5596",True,{}
apple/cups,https://github.com/apple/cups,5847,2020-10-27T16:42:08Z,2021-03-11T11:47:24Z,2021-03-11T11:47:25Z,CLOSED,False,19,18,2,https://github.com/scabrero,Fix negotiate authentication between CGIs and scheduler,4,[],https://github.com/apple/cups/pull/5847,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5847#issuecomment-796679152,"Fixes the infinite loop when ""Negotiate"" authentication is used and allows ""Local"" certificate based authentication when connecting to localhost:
    Client                       CGI
    Browser <- Remote conn -> admin.cgi <--- Localhost conn --->  Scheduler
      |                           |                                    |
      + --- HTTP/POST /admin/ --> |                                    |
      |                           + --- CUPS-Get-Devices ------------> |
      |                           |                                    |
      |                           | <-- 401 Unauthorized --------------+
      |                           |     WWW-Authenticate:              |
      |                           |       Negotiate, (PeerCred,) Local |
      |                           |                                    |
      | <-- 401 Unauthorized -----+                                    |
      |     WWW-Authenticate:     |                                    |
      |       Negotiate           |                                    |
      |                           |                                    |
      | --- HTTP/POST /admin/ --> |                                    |
      |     Authorization:        + --- IPP CUPS-GetDevices ---------> |
      |       Negotiate           |     Authorization: Local <cert>    |
      |                           |                                    |

Fixes #5596",Fixed in OpenPrinting CUPS.,True,{}
apple/cups,https://github.com/apple/cups,5883,2021-01-18T00:58:09Z,2021-03-11T11:46:57Z,2021-03-11T11:46:57Z,CLOSED,False,45,45,1,https://github.com/fschwa,proofreading German translation,1,[],https://github.com/apple/cups/pull/5883,https://github.com/fschwa,1,https://github.com/apple/cups/pull/5883,,,True,{}
apple/cups,https://github.com/apple/cups,5883,2021-01-18T00:58:09Z,2021-03-11T11:46:57Z,2021-03-11T11:46:57Z,CLOSED,False,45,45,1,https://github.com/fschwa,proofreading German translation,1,[],https://github.com/apple/cups/pull/5883,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5883#issuecomment-796678893,,Please submit this to the OpenPrinting CUPS project.,True,{}
apple/cups,https://github.com/apple/cups,5905,2021-03-18T17:36:40Z,2021-03-18T18:02:07Z,2021-03-18T18:02:26Z,CLOSED,False,126,0,1,https://github.com/slinkouswasalreadytaken,Dark CSS refresh,1,['duplicate'],https://github.com/apple/cups/pull/5905,https://github.com/slinkouswasalreadytaken,1,https://github.com/apple/cups/pull/5905,"Added dark, more modern style, based on Safari 14's dev tools.","Added dark, more modern style, based on Safari 14's dev tools.",True,{}
apple/cups,https://github.com/apple/cups,5905,2021-03-18T17:36:40Z,2021-03-18T18:02:07Z,2021-03-18T18:02:26Z,CLOSED,False,126,0,1,https://github.com/slinkouswasalreadytaken,Dark CSS refresh,1,['duplicate'],https://github.com/apple/cups/pull/5905,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5905#issuecomment-802168926,"Added dark, more modern style, based on Safari 14's dev tools.",@slinkouswasalreadytaken We'll process your pull request on OpenPrinting...,True,{'THUMBS_UP': ['https://github.com/slinkouswasalreadytaken']}
apple/cups,https://github.com/apple/cups,5910,2021-03-30T11:24:46Z,2021-03-30T11:59:24Z,2021-03-30T11:59:24Z,CLOSED,False,1,1,2,https://github.com/DanilKorotenko,Fixed typo in example code.,1,"['enhancement', 'priority-low']",https://github.com/apple/cups/pull/5910,https://github.com/DanilKorotenko,1,https://github.com/apple/cups/pull/5910,,,True,{}
apple/cups,https://github.com/apple/cups,5910,2021-03-30T11:24:46Z,2021-03-30T11:59:24Z,2021-03-30T11:59:24Z,CLOSED,False,1,1,2,https://github.com/DanilKorotenko,Fixed typo in example code.,1,"['enhancement', 'priority-low']",https://github.com/apple/cups/pull/5910,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5910#issuecomment-810145936,,This will get fixed over in the OpenPrinting CUPS project...,True,{}
apple/cups,https://github.com/apple/cups,5910,2021-03-30T11:24:46Z,2021-03-30T11:59:24Z,2021-03-30T11:59:24Z,CLOSED,False,1,1,2,https://github.com/DanilKorotenko,Fixed typo in example code.,1,"['enhancement', 'priority-low']",https://github.com/apple/cups/pull/5910,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5910#issuecomment-810162272,,Closing since the reporter re-filed against the OpenPrinting CUPS repository.,True,{}
apple/cups,https://github.com/apple/cups,5913,2021-04-05T20:00:00Z,2021-04-26T20:15:00Z,2021-04-26T20:15:05Z,MERGED,True,5352,1288,73,https://github.com/michaelrsweet,Import select bug fixes and improvements from the OpenPrinting CUPS repository.,11,"['enhancement', 'priority-high', 'bug']",https://github.com/apple/cups/pull/5913,https://github.com/michaelrsweet,1,https://github.com/apple/cups/pull/5913,"These are bug fixes and improvements from the OpenPrinting CUPS repository. I've tried to minimize the number of non-macOS related changes but still included a few critical Linux/Windows-specific bug fixes for those that haven't switched from the Apple to the OpenPrinting CUPS repository.
Changelog:

The automated test suite can now be activated using make test for
consistency with other projects and CI environments - the old make check
continues to work as well, and the previous test server behavior can be
accessed by running make testserver.
ippeveprinter now supports multiple icons and strings files.
ippeveprinter now uses the system's FQDN with Avahi.
ippeveprinter now supports Get-Printer-Attributes on ""/"".
ippeveprinter now uses a deterministic ""printer-uuid"" value.
ippeveprinter now uses system sounds on macOS for Identify-Printer.
Updated ippfind to look for files in ""~/Desktop"" on Windows.
Updated ippfind to honor SKIP-XXX directives with PAUSE.
Updated IPP Everywhere support to work around printers that only advertise
color raster support but really also support grayscale (OpenPrinting #1)
ipptool now supports DNS-SD URIs like ipps://My%20Printer._ipps._tcp.local
(OpenPrinting #5)
ipptool now supports monitoring the printer state while submitting a job
with the MONITOR-PRINTER-STATE directive (OpenPrinting #153)
ipptool now supports testing for unique values with the WITH-DISTINCT-VALUES
predicate (OpenPrinting #153)
ipptool now supports retrying requests on a server-error-busy status code
(OpenPrinting #153)
ipptool now supports value-tag(MAX) and value-tag(MIN:MAX) for the
OF-TYPE predicate (OpenPrinting #153)
The scheduler now allows root backends to have world read permissions but not
world execute permissions (OpenPrinting #21)
Failures to bind IPv6 listener sockets no longer cause errors if IPv6 is
disabled on the host (OpenPrinting #25)
The SNMP backend now supports the HP and Ricoh vendor MIBs (OpenPrinting #28)
The scheduler no longer includes a timestamp in files it writes (OpenPrinting #29)
IPP Everywhere PPDs could have an ""unknown"" default InputSlot (OpenPrinting #44)
The httpAddrListen function now uses a listen backlog of 128.
The PPD functions now treat boolean values as case-insensitive (OpenPrinting #106)
Temporary queue names no longer end with an underscore (OpenPrinting #110)
Added USB quirks (Issue #5789, #5766, #5823, #5831, #5838, #5843, #5867)
Fixed IPP Everywhere v1.1 conformance issues in ippeveprinter.
Fixed DNS-SD name collision support in ippeveprinter.
Fixed compiler and code analyzer warnings.
Fixed TLS support on Windows.
Fixed ippfind sub-type searches with Avahi.
Fixed the default hostname used by ippeveprinter on macOS.
Fixed resolution of local IPP-USB printers with Avahi.
Fixed coverity issues (OpenPrinting #2)
Fixed httpAddrConnect issues (OpenPrinting #3)
Fixed web interface device URI issue (OpenPrinting #4)
Fixed lp/lpr ""printer/class not found"" error reporting (OpenPrinting #6)
Fixed a memory leak in the scheduler (OpenPrinting #12)
Fixed a potential integer overflow in the PPD hashing code (OpenPrinting #13)
Fixed output-bin and print-quality handling issues (OpenPrinting #18)
Fixed PPD options getting mapped to odd IPP values like ""tray---4"" (OpenPrinting #23)
Fixed remote access to the cupsd.conf and log files (OpenPrinting #24)
Fixed a logging regression caused by a previous change for Issue #5604
(OpenPrinting #25)
Fixed the ""uri-security-supported"" value from the scheduler (OpenPrinting #42)
Fixed IPP backend crash bug with ""printer-alert"" values (OpenPrinting #43)
Fixed default options that incorrectly use the ""custom"" prefix (OpenPrinting #48)
Fixed a memory leak when resolving DNS-SD URIs (OpenPrinting #49)
Fixed cupsManualCopies values in IPP Everywhere PPDs (Issue #5807)
Fixed duplicate ColorModel entries for AirPrint printers (Issue 59)
Fixed crash bug in ppdOpen (OpenPrinting #64, OpenPrinting #78)
Fixed regression in snprintf emulation function (OpenPrinting #67)
Fixed segfault in help.cgi when searching in man pages (OpenPrinting #81)
Fixed a bug in ipptool that caused the reuse of request IDs when repeating a
test (OpenPrinting #153)
Root certificates were incorrectly stored in ""~/.cups/ssl"".
Fixed a PPD memory leak caused by emulator definitions (OpenPrinting #124)","These are bug fixes and improvements from the OpenPrinting CUPS repository. I've tried to minimize the number of non-macOS related changes but still included a few critical Linux/Windows-specific bug fixes for those that haven't switched from the Apple to the OpenPrinting CUPS repository.
Changelog:

The automated test suite can now be activated using make test for
consistency with other projects and CI environments - the old make check
continues to work as well, and the previous test server behavior can be
accessed by running make testserver.
ippeveprinter now supports multiple icons and strings files.
ippeveprinter now uses the system's FQDN with Avahi.
ippeveprinter now supports Get-Printer-Attributes on ""/"".
ippeveprinter now uses a deterministic ""printer-uuid"" value.
ippeveprinter now uses system sounds on macOS for Identify-Printer.
Updated ippfind to look for files in ""~/Desktop"" on Windows.
Updated ippfind to honor SKIP-XXX directives with PAUSE.
Updated IPP Everywhere support to work around printers that only advertise
color raster support but really also support grayscale (OpenPrinting #1)
ipptool now supports DNS-SD URIs like ipps://My%20Printer._ipps._tcp.local
(OpenPrinting #5)
ipptool now supports monitoring the printer state while submitting a job
with the MONITOR-PRINTER-STATE directive (OpenPrinting #153)
ipptool now supports testing for unique values with the WITH-DISTINCT-VALUES
predicate (OpenPrinting #153)
ipptool now supports retrying requests on a server-error-busy status code
(OpenPrinting #153)
ipptool now supports value-tag(MAX) and value-tag(MIN:MAX) for the
OF-TYPE predicate (OpenPrinting #153)
The scheduler now allows root backends to have world read permissions but not
world execute permissions (OpenPrinting #21)
Failures to bind IPv6 listener sockets no longer cause errors if IPv6 is
disabled on the host (OpenPrinting #25)
The SNMP backend now supports the HP and Ricoh vendor MIBs (OpenPrinting #28)
The scheduler no longer includes a timestamp in files it writes (OpenPrinting #29)
IPP Everywhere PPDs could have an ""unknown"" default InputSlot (OpenPrinting #44)
The httpAddrListen function now uses a listen backlog of 128.
The PPD functions now treat boolean values as case-insensitive (OpenPrinting #106)
Temporary queue names no longer end with an underscore (OpenPrinting #110)
Added USB quirks (Issue #5789, #5766, #5823, #5831, #5838, #5843, #5867)
Fixed IPP Everywhere v1.1 conformance issues in ippeveprinter.
Fixed DNS-SD name collision support in ippeveprinter.
Fixed compiler and code analyzer warnings.
Fixed TLS support on Windows.
Fixed ippfind sub-type searches with Avahi.
Fixed the default hostname used by ippeveprinter on macOS.
Fixed resolution of local IPP-USB printers with Avahi.
Fixed coverity issues (OpenPrinting #2)
Fixed httpAddrConnect issues (OpenPrinting #3)
Fixed web interface device URI issue (OpenPrinting #4)
Fixed lp/lpr ""printer/class not found"" error reporting (OpenPrinting #6)
Fixed a memory leak in the scheduler (OpenPrinting #12)
Fixed a potential integer overflow in the PPD hashing code (OpenPrinting #13)
Fixed output-bin and print-quality handling issues (OpenPrinting #18)
Fixed PPD options getting mapped to odd IPP values like ""tray---4"" (OpenPrinting #23)
Fixed remote access to the cupsd.conf and log files (OpenPrinting #24)
Fixed a logging regression caused by a previous change for Issue #5604
(OpenPrinting #25)
Fixed the ""uri-security-supported"" value from the scheduler (OpenPrinting #42)
Fixed IPP backend crash bug with ""printer-alert"" values (OpenPrinting #43)
Fixed default options that incorrectly use the ""custom"" prefix (OpenPrinting #48)
Fixed a memory leak when resolving DNS-SD URIs (OpenPrinting #49)
Fixed cupsManualCopies values in IPP Everywhere PPDs (Issue #5807)
Fixed duplicate ColorModel entries for AirPrint printers (Issue 59)
Fixed crash bug in ppdOpen (OpenPrinting #64, OpenPrinting #78)
Fixed regression in snprintf emulation function (OpenPrinting #67)
Fixed segfault in help.cgi when searching in man pages (OpenPrinting #81)
Fixed a bug in ipptool that caused the reuse of request IDs when repeating a
test (OpenPrinting #153)
Root certificates were incorrectly stored in ""~/.cups/ssl"".
Fixed a PPD memory leak caused by emulator definitions (OpenPrinting #124)",True,{}
apple/cups,https://github.com/apple/cups,5939,2021-07-31T17:58:34Z,2021-08-17T13:52:23Z,2021-08-17T17:47:44Z,CLOSED,False,3,0,1,https://github.com/Swyter,Add the Canon PIXMA MP240 to the USB quirk list,1,['wontfix'],https://github.com/apple/cups/pull/5939,https://github.com/Swyter,1,https://github.com/apple/cups/pull/5939,"Without it the printer gets stuck waiting for some kind of USB response from the computer 3/4 into the page. Right at the end of the job. Sometimes it moves the printing head once every few minutes, if we wait for 20-30 minutes it often finishes correctly. Which is unacceptable.
Using no-reattach unidir instead of only unidir seems to also work fine, but it seemed superfluous in my case, so try that if things are still wonky. Disconnecting the USB cable makes it stop the job instantly, spitting the rest of the page.
The same setup works on Windows just fine. Maybe adding the other MP2XX models into the list should be considered. In my case, until a few months ago printing via CUPS without any kinds of quirks seemed to work fine, so it seems like some kind of regression.
The credit goes to @mounaiban for the original solution:
agalakhov/captdriver#7 (comment)
More information here:
agalakhov/captdriver#7 (comment)","Without it the printer gets stuck waiting for some kind of USB response from the computer 3/4 into the page. Right at the end of the job. Sometimes it moves the printing head once every few minutes, if we wait for 20-30 minutes it often finishes correctly. Which is unacceptable.
Using no-reattach unidir instead of only unidir seems to also work fine, but it seemed superfluous in my case, so try that if things are still wonky. Disconnecting the USB cable makes it stop the job instantly, spitting the rest of the page.
The same setup works on Windows just fine. Maybe adding the other MP2XX models into the list should be considered. In my case, until a few months ago printing via CUPS without any kinds of quirks seemed to work fine, so it seems like some kind of regression.
The credit goes to @mounaiban for the original solution:
agalakhov/captdriver#7 (comment)
More information here:
agalakhov/captdriver#7 (comment)",True,{}
apple/cups,https://github.com/apple/cups,5939,2021-07-31T17:58:34Z,2021-08-17T13:52:23Z,2021-08-17T17:47:44Z,CLOSED,False,3,0,1,https://github.com/Swyter,Add the Canon PIXMA MP240 to the USB quirk list,1,['wontfix'],https://github.com/apple/cups/pull/5939,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5939#issuecomment-900317713,"Without it the printer gets stuck waiting for some kind of USB response from the computer 3/4 into the page. Right at the end of the job. Sometimes it moves the printing head once every few minutes, if we wait for 20-30 minutes it often finishes correctly. Which is unacceptable.
Using no-reattach unidir instead of only unidir seems to also work fine, but it seemed superfluous in my case, so try that if things are still wonky. Disconnecting the USB cable makes it stop the job instantly, spitting the rest of the page.
The same setup works on Windows just fine. Maybe adding the other MP2XX models into the list should be considered. In my case, until a few months ago printing via CUPS without any kinds of quirks seemed to work fine, so it seems like some kind of regression.
The credit goes to @mounaiban for the original solution:
agalakhov/captdriver#7 (comment)
More information here:
agalakhov/captdriver#7 (comment)","As all future CUPS development is happening over in OpenPrinting, I'm closing this PR out without merging and have merged the change into OpenPrinting CUPS instead.",True,{'THUMBS_UP': ['https://github.com/Swyter']}
apple/cups,https://github.com/apple/cups,5939,2021-07-31T17:58:34Z,2021-08-17T13:52:23Z,2021-08-17T17:47:44Z,CLOSED,False,3,0,1,https://github.com/Swyter,Add the Canon PIXMA MP240 to the USB quirk list,1,['wontfix'],https://github.com/apple/cups/pull/5939,https://github.com/Swyter,3,https://github.com/apple/cups/pull/5939#issuecomment-900507101,"Without it the printer gets stuck waiting for some kind of USB response from the computer 3/4 into the page. Right at the end of the job. Sometimes it moves the printing head once every few minutes, if we wait for 20-30 minutes it often finishes correctly. Which is unacceptable.
Using no-reattach unidir instead of only unidir seems to also work fine, but it seemed superfluous in my case, so try that if things are still wonky. Disconnecting the USB cable makes it stop the job instantly, spitting the rest of the page.
The same setup works on Windows just fine. Maybe adding the other MP2XX models into the list should be considered. In my case, until a few months ago printing via CUPS without any kinds of quirks seemed to work fine, so it seems like some kind of regression.
The credit goes to @mounaiban for the original solution:
agalakhov/captdriver#7 (comment)
More information here:
agalakhov/captdriver#7 (comment)","Makes sense, thanks for merging.",True,{}
apple/cups,https://github.com/apple/cups,5947,2021-08-25T17:45:43Z,2021-08-29T13:48:22Z,2021-08-29T13:48:26Z,CLOSED,False,19,6,2,https://github.com/AtariDreams,Fix possible memory leaks from xml_escape usage,1,[],https://github.com/apple/cups/pull/5947,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5947,"When using xml_escape, we assume that msg will be the pointers that hold on to the memory, which we can free once we delete the message. However, when msg is NULL, we cannot do that, so we must have temp variables that are there just in case, and be brief and barely visible as to not cause too much commotion in the code.","When using xml_escape, we assume that msg will be the pointers that hold on to the memory, which we can free once we delete the message. However, when msg is NULL, we cannot do that, so we must have temp variables that are there just in case, and be brief and barely visible as to not cause too much commotion in the code.",True,{}
apple/cups,https://github.com/apple/cups,5948,2021-08-30T18:57:28Z,2021-08-30T20:11:08Z,2021-08-30T20:11:08Z,MERGED,True,7,11,1,https://github.com/AtariDreams,Sync usb-darwin to upstream,1,"['priority-low', 'platform issue', 'bug']",https://github.com/apple/cups/pull/5948,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5948,Add the upstream changes to darwin's fork,Add the upstream changes to darwin's fork,True,{}
apple/cups,https://github.com/apple/cups,5949,2021-08-30T19:01:24Z,2021-08-30T20:10:15Z,2021-08-30T20:10:15Z,MERGED,True,3,1,1,https://github.com/AtariDreams,Prevent writing to NULL if buffer is NULL,1,"['priority-low', 'bug']",https://github.com/apple/cups/pull/5949,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5949,Synced from upstream,Synced from upstream,True,{}
apple/cups,https://github.com/apple/cups,5950,2021-08-30T19:07:03Z,2021-08-30T20:09:33Z,2021-08-30T20:15:26Z,MERGED,True,4,3,1,https://github.com/AtariDreams,Fix bug that removes language instead of country code,1,"['priority-low', 'bug']",https://github.com/apple/cups/pull/5950,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5950,Synced from OpenPrinting,Synced from OpenPrinting,True,{}
apple/cups,https://github.com/apple/cups,5951,2021-08-30T19:50:13Z,2021-08-30T20:00:23Z,2021-08-30T20:00:31Z,CLOSED,False,5406,4655,18,https://github.com/AtariDreams,"Update m4, configure.ac, and configure",1,['wontfix'],https://github.com/apple/cups/pull/5951,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5951,"It's not perfect, but it works the same, and at least it does not require unneeded checks or ancient commands from older versions of autoconf","It's not perfect, but it works the same, and at least it does not require unneeded checks or ancient commands from older versions of autoconf",True,{}
apple/cups,https://github.com/apple/cups,5951,2021-08-30T19:50:13Z,2021-08-30T20:00:23Z,2021-08-30T20:00:31Z,CLOSED,False,5406,4655,18,https://github.com/AtariDreams,"Update m4, configure.ac, and configure",1,['wontfix'],https://github.com/apple/cups/pull/5951,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5951#issuecomment-908647609,"It's not perfect, but it works the same, and at least it does not require unneeded checks or ancient commands from older versions of autoconf","Sorry, we aren't accepting large changes to the configure script for Apple CUPS, which is strictly in maintenance mode now.",True,{}
apple/cups,https://github.com/apple/cups,5952,2021-08-30T21:37:07Z,2021-09-05T13:02:05Z,2021-09-05T13:02:06Z,MERGED,True,6,6,6,https://github.com/AtariDreams,Add _CUPS_NORETURN to missing functions,1,"['enhancement', 'priority-low']",https://github.com/apple/cups/pull/5952,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5952,"Almost every non-returning function has this qualifier, but not all. This should properly define them all as well as shrink the final binary a little bit.","Almost every non-returning function has this qualifier, but not all. This should properly define them all as well as shrink the final binary a little bit.",True,{}
apple/cups,https://github.com/apple/cups,5952,2021-08-30T21:37:07Z,2021-09-05T13:02:05Z,2021-09-05T13:02:06Z,MERGED,True,6,6,6,https://github.com/AtariDreams,Add _CUPS_NORETURN to missing functions,1,"['enhancement', 'priority-low']",https://github.com/apple/cups/pull/5952,https://github.com/AtariDreams,2,https://github.com/apple/cups/pull/5952#issuecomment-911767278,"Almost every non-returning function has this qualifier, but not all. This should properly define them all as well as shrink the final binary a little bit.",@michaelrsweet anything else?,True,{}
apple/cups,https://github.com/apple/cups,5953,2021-09-03T14:52:04Z,2021-09-07T16:32:41Z,2021-09-07T16:32:41Z,MERGED,True,45,71,15,https://github.com/AtariDreams,Remove redundant code,1,"['enhancement', 'priority-low']",https://github.com/apple/cups/pull/5953,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5953,"Some of the code is either dead code, redundant, or always true. Meaning they do not do anything since the cases were already dealt with in earlier parts of the code. It would be best to remove this code.
Note that some of the code removal required a tiny bit of refactoring.","Some of the code is either dead code, redundant, or always true. Meaning they do not do anything since the cases were already dealt with in earlier parts of the code. It would be best to remove this code.
Note that some of the code removal required a tiny bit of refactoring.",True,{}
apple/cups,https://github.com/apple/cups,5953,2021-09-03T14:52:04Z,2021-09-07T16:32:41Z,2021-09-07T16:32:41Z,MERGED,True,45,71,15,https://github.com/AtariDreams,Remove redundant code,1,"['enhancement', 'priority-low']",https://github.com/apple/cups/pull/5953,https://github.com/AtariDreams,2,https://github.com/apple/cups/pull/5953#issuecomment-913788579,"Some of the code is either dead code, redundant, or always true. Meaning they do not do anything since the cases were already dealt with in earlier parts of the code. It would be best to remove this code.
Note that some of the code removal required a tiny bit of refactoring.",All issues addressed!,True,{}
apple/cups,https://github.com/apple/cups,5955,2021-09-04T18:39:06Z,2021-09-04T23:26:48Z,2021-09-06T16:00:37Z,CLOSED,False,9397,7040,45,https://github.com/AtariDreams,Bring configuration improvements from 2.4,1,['wontfix'],https://github.com/apple/cups/pull/5955,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5955,"No actual code changes or new features are made or added. Instead, the scripts have been modernized only with the configuration bug fixes ported over.
The generated scripts are functionally the same, just cleaned up and refactored.","No actual code changes or new features are made or added. Instead, the scripts have been modernized only with the configuration bug fixes ported over.
The generated scripts are functionally the same, just cleaned up and refactored.",True,{}
apple/cups,https://github.com/apple/cups,5955,2021-09-04T18:39:06Z,2021-09-04T23:26:48Z,2021-09-06T16:00:37Z,CLOSED,False,9397,7040,45,https://github.com/AtariDreams,Bring configuration improvements from 2.4,1,['wontfix'],https://github.com/apple/cups/pull/5955,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5955#issuecomment-913054076,"No actual code changes or new features are made or added. Instead, the scripts have been modernized only with the configuration bug fixes ported over.
The generated scripts are functionally the same, just cleaned up and refactored.","Understand, we do not make major changes to the configure script or build system in a patch release. These changes are fine for CUPS 2.4, but not for CUPS 2.3.x.",True,{}
apple/cups,https://github.com/apple/cups,5956,2021-09-06T16:33:58Z,2021-09-07T16:34:04Z,2021-09-11T18:39:50Z,MERGED,True,2,2,1,https://github.com/AtariDreams,Fix path to libcupsimage.so.2 in EPM packaging,1,"['priority-low', 'bug']",https://github.com/apple/cups/pull/5956,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5956,Cherry picked from OpenPrinting CUPS,Cherry picked from OpenPrinting CUPS,True,{}
apple/cups,https://github.com/apple/cups,5957,2021-09-07T16:42:36Z,2021-09-08T22:09:07Z,2021-09-08T22:09:08Z,MERGED,True,1,1,1,https://github.com/AtariDreams,CUPS Web UI: Fix uninitialized variable during driver selection (#242),1,"['priority-low', 'bug']",https://github.com/apple/cups/pull/5957,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5957,Cherry picked from OpenPrinting/cups#242,Cherry picked from OpenPrinting/cups#242,True,{}
apple/cups,https://github.com/apple/cups,5958,2021-09-07T22:44:46Z,2021-09-17T15:10:19Z,2021-09-17T15:10:20Z,CLOSED,False,938,996,143,https://github.com/AtariDreams,Clang-tidy fixes,1,[],https://github.com/apple/cups/pull/5958,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5958,,,True,{}
apple/cups,https://github.com/apple/cups,5958,2021-09-07T22:44:46Z,2021-09-17T15:10:19Z,2021-09-17T15:10:20Z,CLOSED,False,938,996,143,https://github.com/AtariDreams,Clang-tidy fixes,1,[],https://github.com/apple/cups/pull/5958,https://github.com/AtariDreams,2,https://github.com/apple/cups/pull/5958#issuecomment-916226422,,All issues fixed!,True,{}
apple/cups,https://github.com/apple/cups,5958,2021-09-07T22:44:46Z,2021-09-17T15:10:19Z,2021-09-17T15:10:20Z,CLOSED,False,938,996,143,https://github.com/AtariDreams,Clang-tidy fixes,1,[],https://github.com/apple/cups/pull/5958,https://github.com/AtariDreams,3,https://github.com/apple/cups/pull/5958#issuecomment-916923879,,All changes finished!,True,{}
apple/cups,https://github.com/apple/cups,5958,2021-09-07T22:44:46Z,2021-09-17T15:10:19Z,2021-09-17T15:10:20Z,CLOSED,False,938,996,143,https://github.com/AtariDreams,Clang-tidy fixes,1,[],https://github.com/apple/cups/pull/5958,https://github.com/AtariDreams,4,https://github.com/apple/cups/pull/5958#issuecomment-918480776,,All issues addressed @michaelrsweet,True,{}
apple/cups,https://github.com/apple/cups,5958,2021-09-07T22:44:46Z,2021-09-17T15:10:19Z,2021-09-17T15:10:20Z,CLOSED,False,938,996,143,https://github.com/AtariDreams,Clang-tidy fixes,1,[],https://github.com/apple/cups/pull/5958,https://github.com/AtariDreams,5,https://github.com/apple/cups/pull/5958#issuecomment-920060468,,That's all the changes I wanted to make. Thank you so much!,True,{}
apple/cups,https://github.com/apple/cups,5958,2021-09-07T22:44:46Z,2021-09-17T15:10:19Z,2021-09-17T15:10:20Z,CLOSED,False,938,996,143,https://github.com/AtariDreams,Clang-tidy fixes,1,[],https://github.com/apple/cups/pull/5958,https://github.com/AtariDreams,6,https://github.com/apple/cups/pull/5958#issuecomment-921862138,,"@michaelrsweet I removed ONLY the ones that call the c standard functions for chars, as they were not meant to have the input done with & 255. Everything else I left.",True,{}
apple/cups,https://github.com/apple/cups,5958,2021-09-07T22:44:46Z,2021-09-17T15:10:19Z,2021-09-17T15:10:20Z,CLOSED,False,938,996,143,https://github.com/AtariDreams,Clang-tidy fixes,1,[],https://github.com/apple/cups/pull/5958,https://github.com/michaelrsweet,7,https://github.com/apple/cups/pull/5958#issuecomment-921874201,,"@AtariDreams The definition of the ctype macros allows for the value -1 (EOF constant) and character values from 0 to 255 (the range of a typical unsigned char with 8-bit bytes).
The char data type is (explicitly per the C standards going back to K&R) undefined WRT signedness. The default on some platforms is signed char, and others unsigned char. If char is unsigned, then the ""& 255"" is not needed. But if char is signed, these ctype macros blow up spectacularly when confronted with UTF-8 text.
Our options are:

Keep the ""& 255""
Write new versions of the macros that explicitly ignore values outside the range of 0 to 127 (although that will have some side-effects for some 8-bit charsets that the ctype macros might otherwise support)
Write new versions of the macros that are UTF-8 aware and take a pointer instead of an integer

Given that Apple CUPS is strictly in maintenance mode, I choose option 1.",True,{}
apple/cups,https://github.com/apple/cups,5960,2021-09-11T18:23:36Z,2021-09-13T10:38:59Z,2022-01-24T17:15:01Z,MERGED,True,0,4,1,https://github.com/AtariDreams,scheduler/log.c: Use [Job N] even for syslog,1,"['enhancement', 'priority-low']",https://github.com/apple/cups/pull/5960,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5960,Cherry picked from OpenPrinting/cups#154,Cherry picked from OpenPrinting/cups#154,True,{}
apple/cups,https://github.com/apple/cups,5961,2021-09-15T17:28:59Z,2021-09-15T19:29:37Z,2021-09-15T19:35:31Z,MERGED,True,3,4,2,https://github.com/AtariDreams,Fix swapped arguments,1,"['priority-medium', 'bug']",https://github.com/apple/cups/pull/5961,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5961,The gamma and density arguments are passed in the wrong order. This patch fixes this.,The gamma and density arguments are passed in the wrong order. This patch fixes this.,True,{}
apple/cups,https://github.com/apple/cups,5962,2021-09-15T18:06:22Z,2021-09-15T19:20:08Z,2021-09-15T19:20:17Z,CLOSED,False,707,664,137,https://github.com/AtariDreams,Clang tidy 2.0,1,['wontfix'],https://github.com/apple/cups/pull/5962,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5962,"This time, the focus of this fix is on abuse of & 255, especially used in place of casting to unsigned char.
Not to mention, the clib functions for characters already handle the sign extension of chars passed to it.
Finally, I added function header ifdefs.","This time, the focus of this fix is on abuse of & 255, especially used in place of casting to unsigned char.
Not to mention, the clib functions for characters already handle the sign extension of chars passed to it.
Finally, I added function header ifdefs.",True,{}
apple/cups,https://github.com/apple/cups,5962,2021-09-15T18:06:22Z,2021-09-15T19:20:08Z,2021-09-15T19:20:17Z,CLOSED,False,707,664,137,https://github.com/AtariDreams,Clang tidy 2.0,1,['wontfix'],https://github.com/apple/cups/pull/5962,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5962#issuecomment-920310643,"This time, the focus of this fix is on abuse of & 255, especially used in place of casting to unsigned char.
Not to mention, the clib functions for characters already handle the sign extension of chars passed to it.
Finally, I added function header ifdefs.",See my comments on the OpenPrinting CUPS PR you filed. Not getting applied on Apple CUPS...,True,{}
apple/cups,https://github.com/apple/cups,5963,2021-09-15T20:38:21Z,2021-09-16T15:39:31Z,2021-09-16T15:39:32Z,MERGED,True,1,1,1,https://github.com/AtariDreams,Fix missing comma,1,"['priority-medium', 'bug']",https://github.com/apple/cups/pull/5963,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5963,,,True,{}
apple/cups,https://github.com/apple/cups,5964,2021-09-17T14:34:07Z,2021-09-17T14:41:14Z,2022-01-24T17:14:49Z,MERGED,True,1,1,1,https://github.com/AtariDreams,Don't use comma after last enum,1,"['priority-low', 'bug']",https://github.com/apple/cups/pull/5964,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5964,,,True,{}
apple/cups,https://github.com/apple/cups,5965,2021-09-17T16:12:28Z,2021-09-17T17:52:07Z,2022-01-24T17:14:44Z,MERGED,True,1,1,1,https://github.com/AtariDreams,Use correct parameter name for delete_message,1,"['priority-low', 'bug']",https://github.com/apple/cups/pull/5965,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5965,,,True,{}
apple/cups,https://github.com/apple/cups,5966,2021-09-17T18:13:23Z,2021-10-03T00:23:22Z,2021-10-08T18:01:21Z,CLOSED,False,738,655,112,https://github.com/AtariDreams,Clang-tidy fixes,1,['wontfix'],https://github.com/apple/cups/pull/5966,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5966,"This time, I got rid of all the & 255 changes. Everything should be OK now","This time, I got rid of all the & 255 changes. Everything should be OK now",True,{}
apple/cups,https://github.com/apple/cups,5966,2021-09-17T18:13:23Z,2021-10-03T00:23:22Z,2021-10-08T18:01:21Z,CLOSED,False,738,655,112,https://github.com/AtariDreams,Clang-tidy fixes,1,['wontfix'],https://github.com/apple/cups/pull/5966,https://github.com/AtariDreams,2,https://github.com/apple/cups/pull/5966#issuecomment-926717994,"This time, I got rid of all the & 255 changes. Everything should be OK now","Alright, I am done adding changes. I am ready with what I have",True,{}
apple/cups,https://github.com/apple/cups,5966,2021-09-17T18:13:23Z,2021-10-03T00:23:22Z,2021-10-08T18:01:21Z,CLOSED,False,738,655,112,https://github.com/AtariDreams,Clang-tidy fixes,1,['wontfix'],https://github.com/apple/cups/pull/5966,https://github.com/michaelrsweet,3,https://github.com/apple/cups/pull/5966#issuecomment-932839262,"This time, I got rid of all the & 255 changes. Everything should be OK now","OK, after some internal discussions I've decided that we are going to stop merging any more ""cleanup"" changes into Apple CUPS. The focus for Apple CUPS is on bug and interoperability fixes and not on general code cleanup.
As usual, I will continue reviewing any cleanup changes you have for OpenPrinting CUPS, but please limit your Apple CUPS PRs to bug fixes or changes that are necessary for interoperability. Thank you!",True,{}
apple/cups,https://github.com/apple/cups,5971,2021-09-27T17:26:03Z,2021-10-01T15:14:03Z,2021-10-01T15:14:15Z,MERGED,True,4,5,1,https://github.com/AtariDreams,Change job state to IPP_JOB_HELD when job is restarted with appropriate job-held-until attribute.,1,"['priority-low', 'bug']",https://github.com/apple/cups/pull/5971,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5971,Synced from upstream,Synced from upstream,True,{}
apple/cups,https://github.com/apple/cups,5972,2021-09-27T17:34:44Z,2021-10-01T15:13:19Z,2021-10-01T15:13:49Z,CLOSED,False,31,37,1,https://github.com/AtariDreams,fix _cupsGet1284Values,1,"['priority-low', 'bug']",https://github.com/apple/cups/pull/5972,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5972,Synced from upstream,Synced from upstream,True,{}
apple/cups,https://github.com/apple/cups,5972,2021-09-27T17:34:44Z,2021-10-01T15:13:19Z,2021-10-01T15:13:49Z,CLOSED,False,31,37,1,https://github.com/AtariDreams,fix _cupsGet1284Values,1,"['priority-low', 'bug']",https://github.com/apple/cups/pull/5972,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5972#issuecomment-932317637,Synced from upstream,Pushed the changes (and ONLY the changes) from OpenPrinting CUPS myself.,True,{}
apple/cups,https://github.com/apple/cups,5974,2021-09-30T17:04:05Z,2021-10-01T15:07:17Z,2021-10-01T15:07:28Z,MERGED,True,1,2,1,https://github.com/AtariDreams,"Expand whitelist for use of ""offline-report""",1,"['enhancement', 'priority-low']",https://github.com/apple/cups/pull/5974,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5974,Cherry picked from OpenPrinting/cups@17ee0b4,Cherry picked from OpenPrinting/cups@17ee0b4,True,{}
apple/cups,https://github.com/apple/cups,5976,2021-10-01T14:42:34Z,2021-10-01T15:05:42Z,2022-01-24T17:14:36Z,MERGED,True,2,2,1,https://github.com/AtariDreams,Add buffer range check.,1,"['priority-low', 'platform issue', 'bug']",https://github.com/apple/cups/pull/5976,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5976,Synced from upstream,Synced from upstream,True,{}
apple/cups,https://github.com/apple/cups,5977,2021-10-02T01:01:34Z,2021-10-03T00:16:12Z,2021-10-03T14:08:57Z,CLOSED,False,6,7,1,https://github.com/AtariDreams,fix _cupsGet1284Values,1,['wontfix'],https://github.com/apple/cups/pull/5977,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5977,Synced from upstream,Synced from upstream,True,{}
apple/cups,https://github.com/apple/cups,5977,2021-10-02T01:01:34Z,2021-10-03T00:16:12Z,2021-10-03T14:08:57Z,CLOSED,False,6,7,1,https://github.com/AtariDreams,fix _cupsGet1284Values,1,['wontfix'],https://github.com/apple/cups/pull/5977,https://github.com/michaelrsweet,2,https://github.com/apple/cups/pull/5977#issuecomment-932838411,Synced from upstream,"No longer taking ""clean up"" PRs for Apple CUPS, sorry.",True,{}
apple/cups,https://github.com/apple/cups,5978,2021-10-03T15:08:25Z,,2021-10-03T15:08:25Z,OPEN,False,1,2,1,https://github.com/AtariDreams,Do not check for verbose when outputting critical error,1,[],https://github.com/apple/cups/pull/5978,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5978,"This isn't really a cleanup. This is the only case where an allocation error does not get printed UNLESS it is verbose, which doesn't align with the other behavior. Let's output this error whenever we get an allocation error regardless of verbosity.","This isn't really a cleanup. This is the only case where an allocation error does not get printed UNLESS it is verbose, which doesn't align with the other behavior. Let's output this error whenever we get an allocation error regardless of verbosity.",True,{}
apple/cups,https://github.com/apple/cups,5979,2021-10-03T15:18:05Z,,2021-10-03T15:18:05Z,OPEN,False,6,1,1,https://github.com/AtariDreams,exit if dinfoptr allocation fails,1,[],https://github.com/apple/cups/pull/5979,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5979,"If allocation for dinfoptr fails, output an error and exit","If allocation for dinfoptr fails, output an error and exit",True,{}
apple/cups,https://github.com/apple/cups,5980,2021-10-03T15:22:29Z,,2021-10-03T15:22:29Z,OPEN,False,1,2,1,https://github.com/AtariDreams,"Do not check for ppd, since that is done at the start",1,[],https://github.com/apple/cups/pull/5980,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5980,"The entire point of the function is to open a file to import it, and then close it.
The function will not run if ppd is NULL and it shouldn't be set to NULL at all. It is best for the function to remove that one check only.
If you consider this a ""cleanup"", please make this the one exception, as I won't be making this type of change anymore.","The entire point of the function is to open a file to import it, and then close it.
The function will not run if ppd is NULL and it shouldn't be set to NULL at all. It is best for the function to remove that one check only.
If you consider this a ""cleanup"", please make this the one exception, as I won't be making this type of change anymore.",True,{}
apple/cups,https://github.com/apple/cups,5981,2021-10-08T18:17:15Z,,2021-10-08T18:17:15Z,OPEN,False,4,6,1,https://github.com/AtariDreams,Removed unused argument in function that doesn't even have a pointer,1,[],https://github.com/apple/cups/pull/5981,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5981,"This means compilers, especially the much older ones compiling this software, doesn't have to go out of its way to use a register where it doesn't have to.","This means compilers, especially the much older ones compiling this software, doesn't have to go out of its way to use a register where it doesn't have to.",True,{}
apple/cups,https://github.com/apple/cups,5982,2021-10-08T18:21:57Z,,2021-10-08T19:06:18Z,OPEN,False,3,3,3,https://github.com/AtariDreams,Remove trailing commas from array,1,[],https://github.com/apple/cups/pull/5982,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5982,Some compilers will throw errors otherwise,Some compilers will throw errors otherwise,True,{}
apple/cups,https://github.com/apple/cups,5983,2021-10-08T19:05:05Z,,2021-10-08T19:05:05Z,OPEN,False,1,7,1,https://github.com/AtariDreams,Remove unused static variable,1,[],https://github.com/apple/cups/pull/5983,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5983,"It is only assigned to value of 0 anyway, and never used or appears ever.","It is only assigned to value of 0 anyway, and never used or appears ever.",True,{}
apple/cups,https://github.com/apple/cups,5984,2021-10-08T19:15:58Z,,2021-10-08T19:15:58Z,OPEN,False,2,2,1,https://github.com/AtariDreams,Fix wrongful typing of status,1,[],https://github.com/apple/cups/pull/5984,https://github.com/AtariDreams,1,https://github.com/apple/cups/pull/5984,"http_uri_status_t is the correct type, not int","http_uri_status_t is the correct type, not int",True,{}
apple/cups,https://github.com/apple/cups,5985,2021-10-14T21:52:58Z,,2021-10-14T21:52:58Z,OPEN,False,1,1,1,https://github.com/AlaskanEmily,Avoid a crash when an Avahi or mDNS printer has neither device-uri nor printer-uri-supported set.,1,[],https://github.com/apple/cups/pull/5985,https://github.com/AlaskanEmily,1,https://github.com/apple/cups/pull/5985,This was found in https://bugzilla.mozilla.org/1691347,This was found in https://bugzilla.mozilla.org/1691347,True,{}
apple/cups,https://github.com/apple/cups,5996,2021-11-18T20:39:21Z,,2021-11-18T20:39:21Z,OPEN,False,45,45,33,https://github.com/luzpaz,Fix various typos,1,[],https://github.com/apple/cups/pull/5996,https://github.com/luzpaz,1,https://github.com/apple/cups/pull/5996,"Found via codespell -q 3 -S *.po,*.ps,./templates/da,./templates/pt_BR,./templates/de,./templates/es,./templates/fr,./doc/pt_BR,./doc/da,./doc/de,./doc/es -L bale,dashs,flate,numer,stil,varius","Found via codespell -q 3 -S *.po,*.ps,./templates/da,./templates/pt_BR,./templates/de,./templates/es,./templates/fr,./doc/pt_BR,./doc/da,./doc/de,./doc/es -L bale,dashs,flate,numer,stil,varius",True,{}
apple/cups,https://github.com/apple/cups,5997,2021-11-26T16:44:05Z,,2021-11-26T16:44:05Z,OPEN,False,3,2,1,https://github.com/jjkeijser,Fix drowning of minor_status code when accepting GSSAPI security context,1,[],https://github.com/apple/cups/pull/5997,https://github.com/jjkeijser,1,https://github.com/apple/cups/pull/5997,"Fix drowing out of the GSSAPI minor_status code when accepting GSSAPI security context. This fixes the issue during GSSAPI (Kerbos) negotation in case the server is misconfigured. Without the patch, cupsd reports
  Error accepting GSSAPI security context.: Unspecified GSS failure.  Minor code may provide more information, Unknown error 

With the patch, the true GSSAPI error is printed:
  Error accepting GSSAPI security context.: Unspecified GSS failure.  Minor code may provide more information, Request ticket server host/host.example.nl@EXAMPLE.COM kvno 6 not found in keytab; keytab is likely out of date

Signed-off-by: Jan Just Keijser jan.just.keijser@gmail.com","Fix drowing out of the GSSAPI minor_status code when accepting GSSAPI security context. This fixes the issue during GSSAPI (Kerbos) negotation in case the server is misconfigured. Without the patch, cupsd reports
  Error accepting GSSAPI security context.: Unspecified GSS failure.  Minor code may provide more information, Unknown error 

With the patch, the true GSSAPI error is printed:
  Error accepting GSSAPI security context.: Unspecified GSS failure.  Minor code may provide more information, Request ticket server host/host.example.nl@EXAMPLE.COM kvno 6 not found in keytab; keytab is likely out of date

Signed-off-by: Jan Just Keijser jan.just.keijser@gmail.com",True,{}
apple/cups,https://github.com/apple/cups,5999,2021-12-09T15:11:20Z,,2021-12-09T15:11:20Z,OPEN,False,1,1,1,https://github.com/ayushman17,fix capitalization,1,[],https://github.com/apple/cups/pull/5999,https://github.com/ayushman17,1,https://github.com/apple/cups/pull/5999,"With this PR Docs have been updated
docs update => proper capitalisation would be better. 👍
Other information:
Signed-off-by: Ayushman Singh Chauhan ascb508@gmail.com","With this PR Docs have been updated
docs update => proper capitalisation would be better. 👍
Other information:
Signed-off-by: Ayushman Singh Chauhan ascb508@gmail.com",True,{}
apple/cups,https://github.com/apple/cups,6018,2022-02-09T01:59:53Z,,2022-02-18T07:38:57Z,OPEN,False,8,0,1,https://github.com/xpyanfa,Fixed the issue that Xprinter device is wrongly displayed as Xerox by cups,1,[],https://github.com/apple/cups/pull/6018,https://github.com/xpyanfa,1,https://github.com/apple/cups/pull/6018,Add Xprinter device support.,Add Xprinter device support.,True,{}
apple/cups,https://github.com/apple/cups,6033,2022-04-07T14:46:24Z,,2022-04-07T14:46:24Z,OPEN,False,97,4,2,https://github.com/jjkeijser,Printer list,2,[],https://github.com/apple/cups/pull/6033,https://github.com/jjkeijser,1,https://github.com/apple/cups/pull/6033,"Add support for filtering the list of printers on the client side
When a cups server has hundreds of printers defined, each client-side operation becomes very slow, as the full list of printers is queried from the server for almost every operation. Also, the list of printers presented to the user becomes far too long, e.g. in GUI-based programs such as LibreOffice.
With this patch, a user can list a set of printers that {s}he wants to queried. This list can be specified using either an environment variable
export CUPS_PRINTER_LIST=""printer1, printer2, printer3""
or by adding a line to the ~/.cups/lpoptions file
printer-list  printer1, printer2, printer3
Please note that the list of printers can either be comma-separated or space-separated.","Add support for filtering the list of printers on the client side
When a cups server has hundreds of printers defined, each client-side operation becomes very slow, as the full list of printers is queried from the server for almost every operation. Also, the list of printers presented to the user becomes far too long, e.g. in GUI-based programs such as LibreOffice.
With this patch, a user can list a set of printers that {s}he wants to queried. This list can be specified using either an environment variable
export CUPS_PRINTER_LIST=""printer1, printer2, printer3""
or by adding a line to the ~/.cups/lpoptions file
printer-list  printer1, printer2, printer3
Please note that the list of printers can either be comma-separated or space-separated.",True,{}
