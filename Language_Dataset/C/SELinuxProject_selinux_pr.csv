SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,11,2016-02-03T20:38:27Z,2016-02-09T18:58:46Z,2016-02-09T18:58:46Z,CLOSED,False,50,12,4,https://github.com/shootingatshadow,read_spec_entry: fail on non-ascii,1,[],https://github.com/SELinuxProject/selinux/pull/11,https://github.com/shootingatshadow,1,https://github.com/SELinuxProject/selinux/pull/11,"Inserting non-ascii characters into a file_contexts file can cause a
failure on labeling but still result in a successful build.
Hard error on non-ascii characters.
Signed-off-by: William Roberts william.c.roberts@intel.com","Inserting non-ascii characters into a file_contexts file can cause a
failure on labeling but still result in a successful build.
Hard error on non-ascii characters.
Signed-off-by: William Roberts william.c.roberts@intel.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,11,2016-02-03T20:38:27Z,2016-02-09T18:58:46Z,2016-02-09T18:58:46Z,CLOSED,False,50,12,4,https://github.com/shootingatshadow,read_spec_entry: fail on non-ascii,1,[],https://github.com/SELinuxProject/selinux/pull/11,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/11#issuecomment-180424918,"Inserting non-ascii characters into a file_contexts file can cause a
failure on labeling but still result in a successful build.
Hard error on non-ascii characters.
Signed-off-by: William Roberts william.c.roberts@intel.com",Possibly we should simultaneously update process_line() in label_file.h to log an error message if read_spec_entries() returns an error?  Otherwise they likely get no useful output?,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,11,2016-02-03T20:38:27Z,2016-02-09T18:58:46Z,2016-02-09T18:58:46Z,CLOSED,False,50,12,4,https://github.com/shootingatshadow,read_spec_entry: fail on non-ascii,1,[],https://github.com/SELinuxProject/selinux/pull/11,https://github.com/shootingatshadow,3,https://github.com/SELinuxProject/selinux/pull/11#issuecomment-180437105,"Inserting non-ascii characters into a file_contexts file can cause a
failure on labeling but still result in a successful build.
Hard error on non-ascii characters.
Signed-off-by: William Roberts william.c.roberts@intel.com","Totally agree, the error output on this sucks! Unique return codes perhaps?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,11,2016-02-03T20:38:27Z,2016-02-09T18:58:46Z,2016-02-09T18:58:46Z,CLOSED,False,50,12,4,https://github.com/shootingatshadow,read_spec_entry: fail on non-ascii,1,[],https://github.com/SELinuxProject/selinux/pull/11,https://github.com/shootingatshadow,4,https://github.com/SELinuxProject/selinux/pull/11#issuecomment-181969030,"Inserting non-ascii characters into a file_contexts file can cause a
failure on labeling but still result in a successful build.
Hard error on non-ascii characters.
Signed-off-by: William Roberts william.c.roberts@intel.com","stephensmalley, apparently github updates PR's by just updating the forked branch. So I think you have what is up on Android now.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,11,2016-02-03T20:38:27Z,2016-02-09T18:58:46Z,2016-02-09T18:58:46Z,CLOSED,False,50,12,4,https://github.com/shootingatshadow,read_spec_entry: fail on non-ascii,1,[],https://github.com/SELinuxProject/selinux/pull/11,https://github.com/shootingatshadow,5,https://github.com/SELinuxProject/selinux/pull/11#issuecomment-182004881,"Inserting non-ascii characters into a file_contexts file can cause a
failure on labeling but still result in a successful build.
Hard error on non-ascii characters.
Signed-off-by: William Roberts william.c.roberts@intel.com",moved to the mailing list,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,12,2016-03-25T13:37:08Z,2016-03-25T18:15:34Z,2016-03-25T18:15:34Z,MERGED,True,4,4,3,https://github.com/rhatdan,Fix location of selinuxfs mount point,1,[],https://github.com/SELinuxProject/selinux/pull/12,https://github.com/rhatdan,1,https://github.com/SELinuxProject/selinux/pull/12,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,12,2016-03-25T13:37:08Z,2016-03-25T18:15:34Z,2016-03-25T18:15:34Z,MERGED,True,4,4,3,https://github.com/rhatdan,Fix location of selinuxfs mount point,1,[],https://github.com/SELinuxProject/selinux/pull/12,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/12#issuecomment-201280981,,Please post to selinux list too.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,14,2016-05-16T18:48:52Z,2016-05-16T20:51:41Z,2016-05-16T20:51:41Z,CLOSED,False,1,1,1,https://github.com/roidelapluie,libsemanage: Support overriding Makefile RANLIB,1,[],https://github.com/SELinuxProject/selinux/pull/14,https://github.com/roidelapluie,1,https://github.com/SELinuxProject/selinux/pull/14,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,14,2016-05-16T18:48:52Z,2016-05-16T20:51:41Z,2016-05-16T20:51:41Z,CLOSED,False,1,1,1,https://github.com/roidelapluie,libsemanage: Support overriding Makefile RANLIB,1,[],https://github.com/SELinuxProject/selinux/pull/14,https://github.com/roidelapluie,2,https://github.com/SELinuxProject/selinux/pull/14#issuecomment-219511685,,http://marc.info/?l=selinux&m=146308321704803&w=2,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,15,2016-05-16T18:51:56Z,2016-05-16T20:51:30Z,2016-05-16T20:51:30Z,CLOSED,False,8,6,4,https://github.com/roidelapluie,"libselinux, libsemanage: respect CC and PKG_CONFIG environment variable",1,[],https://github.com/SELinuxProject/selinux/pull/15,https://github.com/roidelapluie,1,https://github.com/SELinuxProject/selinux/pull/15,"Compilation tools respects certain environment variables, like CC.
However, in libselinux and libsemanage, they are not respected
everywhere. This command fixes respect for those variables, falling back
to the previous hardcoded values if not specified.
http://marc.info/?l=selinux&m=146269154430195&w=2","Compilation tools respects certain environment variables, like CC.
However, in libselinux and libsemanage, they are not respected
everywhere. This command fixes respect for those variables, falling back
to the previous hardcoded values if not specified.
http://marc.info/?l=selinux&m=146269154430195&w=2",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,18,2016-06-17T17:57:04Z,2016-06-22T18:03:24Z,2016-06-22T18:03:24Z,MERGED,True,4,2,1,https://github.com/mikedlr,Update sandbox types in  manual to match actual usage ,1,[],https://github.com/SELinuxProject/selinux/pull/18,https://github.com/mikedlr,1,https://github.com/SELinuxProject/selinux/pull/18,This pull request updates the sandbox manual page to match what seems to be reality.  See #17 for more details.,This pull request updates the sandbox manual page to match what seems to be reality.  See #17 for more details.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,22,2016-08-17T20:07:01Z,2016-08-18T18:36:25Z,2016-08-18T18:36:25Z,MERGED,True,2,2,2,https://github.com/wakeful,fixing incorrect help message,2,[],https://github.com/SELinuxProject/selinux/pull/22,https://github.com/wakeful,1,https://github.com/SELinuxProject/selinux/pull/22,a small fix to correct semanage cli help message.,a small fix to correct semanage cli help message.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,22,2016-08-17T20:07:01Z,2016-08-18T18:36:25Z,2016-08-18T18:36:25Z,MERGED,True,2,2,2,https://github.com/wakeful,fixing incorrect help message,2,[],https://github.com/SELinuxProject/selinux/pull/22,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/22#issuecomment-240716720,a small fix to correct semanage cli help message.,"Also seems to be wrong in the semanage.8 man page.
For future reference, we prefer patches to be sent to the selinux mailing list (selinux AT tycho.nsa.gov; subscribe via selinux-join AT tycho.nsa.gov).",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,35,2016-11-24T19:02:25Z,2016-11-28T14:39:11Z,2017-02-25T09:55:03Z,MERGED,True,4,4,1,https://github.com/cgzones,fix semanage fcontext help message,1,[],https://github.com/SELinuxProject/selinux/pull/35,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/35,the ftype options were incorrect,the ftype options were incorrect,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,35,2016-11-24T19:02:25Z,2016-11-28T14:39:11Z,2017-02-25T09:55:03Z,MERGED,True,4,4,1,https://github.com/cgzones,fix semanage fcontext help message,1,[],https://github.com/SELinuxProject/selinux/pull/35,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/35#issuecomment-263286917,the ftype options were incorrect,"Thanks, will merge since it is trivial, but note that we prefer patches posted to selinux AT tycho.nsa.gov.  Subscribe via selinux-join AT tycho.nsa.gov.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,36,2016-11-30T13:46:34Z,2016-11-30T14:22:28Z,2016-11-30T14:22:28Z,CLOSED,False,6,4,1,https://github.com/kyle-walker,seobject: Handle python error returns correctly,1,[],https://github.com/SELinuxProject/selinux/pull/36,https://github.com/kyle-walker,1,https://github.com/SELinuxProject/selinux/pull/36,"Following commit 9792099 (Properly build the swig exception file even if the headers are missing),
the underlying semanage_fcontext_query_local and semanage_fcontext_query calls result in an OSError
return. This results in the following error when attempting to modify a fcontext defined in the
systems base policy.
libsemanage.dbase_llist_query: could not query record value (No such file or directory).
OSError: No such file or directory

To resolve the error, handle the OSError exception, but retain the previous query operation.
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1398427
Signed-off-by: Kyle Walker kwalker@redhat.com","Following commit 9792099 (Properly build the swig exception file even if the headers are missing),
the underlying semanage_fcontext_query_local and semanage_fcontext_query calls result in an OSError
return. This results in the following error when attempting to modify a fcontext defined in the
systems base policy.
libsemanage.dbase_llist_query: could not query record value (No such file or directory).
OSError: No such file or directory

To resolve the error, handle the OSError exception, but retain the previous query operation.
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1398427
Signed-off-by: Kyle Walker kwalker@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,36,2016-11-30T13:46:34Z,2016-11-30T14:22:28Z,2016-11-30T14:22:28Z,CLOSED,False,6,4,1,https://github.com/kyle-walker,seobject: Handle python error returns correctly,1,[],https://github.com/SELinuxProject/selinux/pull/36,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/36#issuecomment-263877780,"Following commit 9792099 (Properly build the swig exception file even if the headers are missing),
the underlying semanage_fcontext_query_local and semanage_fcontext_query calls result in an OSError
return. This results in the following error when attempting to modify a fcontext defined in the
systems base policy.
libsemanage.dbase_llist_query: could not query record value (No such file or directory).
OSError: No such file or directory

To resolve the error, handle the OSError exception, but retain the previous query operation.
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1398427
Signed-off-by: Kyle Walker kwalker@redhat.com","Please post to selinux@tycho.nsa.gov, after subscribing via selinux-join@tycho.nsa.gov.
Prefer patches via mailing list, especially if non-trivial.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,36,2016-11-30T13:46:34Z,2016-11-30T14:22:28Z,2016-11-30T14:22:28Z,CLOSED,False,6,4,1,https://github.com/kyle-walker,seobject: Handle python error returns correctly,1,[],https://github.com/SELinuxProject/selinux/pull/36,https://github.com/stephensmalley,3,https://github.com/SELinuxProject/selinux/pull/36#issuecomment-263878833,"Following commit 9792099 (Properly build the swig exception file even if the headers are missing),
the underlying semanage_fcontext_query_local and semanage_fcontext_query calls result in an OSError
return. This results in the following error when attempting to modify a fcontext defined in the
systems base policy.
libsemanage.dbase_llist_query: could not query record value (No such file or directory).
OSError: No such file or directory

To resolve the error, handle the OSError exception, but retain the previous query operation.
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1398427
Signed-off-by: Kyle Walker kwalker@redhat.com","Also, I don't understand how the referenced commit could be causing this problem (are you sure you are citing the correct one?) and it seems like we ought to fix this in the python bindings rather than the caller(s).",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,36,2016-11-30T13:46:34Z,2016-11-30T14:22:28Z,2016-11-30T14:22:28Z,CLOSED,False,6,4,1,https://github.com/kyle-walker,seobject: Handle python error returns correctly,1,[],https://github.com/SELinuxProject/selinux/pull/36,https://github.com/stephensmalley,4,https://github.com/SELinuxProject/selinux/pull/36#issuecomment-263881188,"Following commit 9792099 (Properly build the swig exception file even if the headers are missing),
the underlying semanage_fcontext_query_local and semanage_fcontext_query calls result in an OSError
return. This results in the following error when attempting to modify a fcontext defined in the
systems base policy.
libsemanage.dbase_llist_query: could not query record value (No such file or directory).
OSError: No such file or directory

To resolve the error, handle the OSError exception, but retain the previous query operation.
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1398427
Signed-off-by: Kyle Walker kwalker@redhat.com","Oh, I think I understand now.  commit 9406ace changed the python bindings to throw exceptions rather than return NULL, so that is the actual cause.  However, until commit 9792099, you likely weren't getting the exception wrappers at all because you didn't have the headers installed in the system path, and thus we didn't see this behavior until that commit.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,36,2016-11-30T13:46:34Z,2016-11-30T14:22:28Z,2016-11-30T14:22:28Z,CLOSED,False,6,4,1,https://github.com/kyle-walker,seobject: Handle python error returns correctly,1,[],https://github.com/SELinuxProject/selinux/pull/36,https://github.com/kyle-walker,5,https://github.com/SELinuxProject/selinux/pull/36#issuecomment-263884750,"Following commit 9792099 (Properly build the swig exception file even if the headers are missing),
the underlying semanage_fcontext_query_local and semanage_fcontext_query calls result in an OSError
return. This results in the following error when attempting to modify a fcontext defined in the
systems base policy.
libsemanage.dbase_llist_query: could not query record value (No such file or directory).
OSError: No such file or directory

To resolve the error, handle the OSError exception, but retain the previous query operation.
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1398427
Signed-off-by: Kyle Walker kwalker@redhat.com","@stephensmalley
Correct! Sorry for the incorrect submit, and the missing detail above. You are absolutely correct. The issue only recently came to light because 9792099 was included in a rebase and fixed the silent compile-time failure.
Would it be beneficial to close this PR and resubmit to the mailing list instead?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,36,2016-11-30T13:46:34Z,2016-11-30T14:22:28Z,2016-11-30T14:22:28Z,CLOSED,False,6,4,1,https://github.com/kyle-walker,seobject: Handle python error returns correctly,1,[],https://github.com/SELinuxProject/selinux/pull/36,https://github.com/stephensmalley,6,https://github.com/SELinuxProject/selinux/pull/36#issuecomment-263884931,"Following commit 9792099 (Properly build the swig exception file even if the headers are missing),
the underlying semanage_fcontext_query_local and semanage_fcontext_query calls result in an OSError
return. This results in the following error when attempting to modify a fcontext defined in the
systems base policy.
libsemanage.dbase_llist_query: could not query record value (No such file or directory).
OSError: No such file or directory

To resolve the error, handle the OSError exception, but retain the previous query operation.
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1398427
Signed-off-by: Kyle Walker kwalker@redhat.com","Yes, we'd prefer that.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,36,2016-11-30T13:46:34Z,2016-11-30T14:22:28Z,2016-11-30T14:22:28Z,CLOSED,False,6,4,1,https://github.com/kyle-walker,seobject: Handle python error returns correctly,1,[],https://github.com/SELinuxProject/selinux/pull/36,https://github.com/kyle-walker,7,https://github.com/SELinuxProject/selinux/pull/36#issuecomment-263885126,"Following commit 9792099 (Properly build the swig exception file even if the headers are missing),
the underlying semanage_fcontext_query_local and semanage_fcontext_query calls result in an OSError
return. This results in the following error when attempting to modify a fcontext defined in the
systems base policy.
libsemanage.dbase_llist_query: could not query record value (No such file or directory).
OSError: No such file or directory

To resolve the error, handle the OSError exception, but retain the previous query operation.
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1398427
Signed-off-by: Kyle Walker kwalker@redhat.com","Absolutely, closing now and will pursue the mailing list posting.
Thank you for the patience and guidance!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,52,2017-04-03T18:35:23Z,2017-04-04T01:58:56Z,2017-04-04T01:58:56Z,CLOSED,False,1,1,1,https://github.com/matthew-l-weber,libselinux: PYSITEDIR has dup path,1,[],https://github.com/SELinuxProject/selinux/pull/52,https://github.com/matthew-l-weber,1,https://github.com/SELinuxProject/selinux/pull/52,"When $(DESTDIR) is defined, the $(PYSITEDIR) ends up with a double
absolute path.  (In the normal case with $(DESTDIR) not defined,
site.getsitepackages()[0] already results in an absolute path)
Signed-off-by: Matthew Weber matthew.weber@rockwellcollins.com","When $(DESTDIR) is defined, the $(PYSITEDIR) ends up with a double
absolute path.  (In the normal case with $(DESTDIR) not defined,
site.getsitepackages()[0] already results in an absolute path)
Signed-off-by: Matthew Weber matthew.weber@rockwellcollins.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,52,2017-04-03T18:35:23Z,2017-04-04T01:58:56Z,2017-04-04T01:58:56Z,CLOSED,False,1,1,1,https://github.com/matthew-l-weber,libselinux: PYSITEDIR has dup path,1,[],https://github.com/SELinuxProject/selinux/pull/52,https://github.com/matthew-l-weber,2,https://github.com/SELinuxProject/selinux/pull/52#issuecomment-291371081,"When $(DESTDIR) is defined, the $(PYSITEDIR) ends up with a double
absolute path.  (In the normal case with $(DESTDIR) not defined,
site.getsitepackages()[0] already results in an absolute path)
Signed-off-by: Matthew Weber matthew.weber@rockwellcollins.com",See issue ticket above for non-issue status after analysis.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,58,2017-05-27T04:21:26Z,2017-06-01T17:59:04Z,2017-06-01T17:59:05Z,CLOSED,False,9,9,9,https://github.com/bmwiedemann,sort input files,1,[],https://github.com/SELinuxProject/selinux/pull/58,https://github.com/bmwiedemann,1,https://github.com/SELinuxProject/selinux/pull/58,"when building packages (e.g. for openSUSE Linux)
(random) filesystem order of input files
influences ordering of functions in the output,
thus without the patch, builds (in disposable VMs) would usually differ.
See https://reproducible-builds.org/ for why this matters.","when building packages (e.g. for openSUSE Linux)
(random) filesystem order of input files
influences ordering of functions in the output,
thus without the patch, builds (in disposable VMs) would usually differ.
See https://reproducible-builds.org/ for why this matters.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,58,2017-05-27T04:21:26Z,2017-06-01T17:59:04Z,2017-06-01T17:59:05Z,CLOSED,False,9,9,9,https://github.com/bmwiedemann,sort input files,1,[],https://github.com/SELinuxProject/selinux/pull/58,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/58#issuecomment-304880386,"when building packages (e.g. for openSUSE Linux)
(random) filesystem order of input files
influences ordering of functions in the output,
thus without the patch, builds (in disposable VMs) would usually differ.
See https://reproducible-builds.org/ for why this matters.",Please post to selinux AT tycho.nsa.gov (subscribe via selinux-join AT tycho.nsa.gov).,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,58,2017-05-27T04:21:26Z,2017-06-01T17:59:04Z,2017-06-01T17:59:05Z,CLOSED,False,9,9,9,https://github.com/bmwiedemann,sort input files,1,[],https://github.com/SELinuxProject/selinux/pull/58,https://github.com/bmwiedemann,3,https://github.com/SELinuxProject/selinux/pull/58#issuecomment-304929193,"when building packages (e.g. for openSUSE Linux)
(random) filesystem order of input files
influences ordering of functions in the output,
thus without the patch, builds (in disposable VMs) would usually differ.
See https://reproducible-builds.org/ for why this matters.","I tried, but both of their mailservers produce timeouts from my mailserver IP 144.76.96.7
 4  juniper4.dc2.nbg1.hetzner.com (213.239.245.26)  2.865 ms  2.859 ms  2.846 ms
 5  ae55.edge7.Frankfurt1.Level3.net (195.16.162.253)  6.581 ms ae51.bar2.Munich1.Level3.net (62.140.25.101)  5.471 ms ae55.edge7.Frankfurt1.Level3.net (195.16.162.253)  6.167 ms
 6  * * *
 7  4.34.4.74 (4.34.4.74)  96.032 ms  96.114 ms  94.006 ms
 8  * * *

so I would be happy if someone could relay the patch for me.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,58,2017-05-27T04:21:26Z,2017-06-01T17:59:04Z,2017-06-01T17:59:05Z,CLOSED,False,9,9,9,https://github.com/bmwiedemann,sort input files,1,[],https://github.com/SELinuxProject/selinux/pull/58,https://github.com/stephensmalley,4,https://github.com/SELinuxProject/selinux/pull/58#issuecomment-305571598,"when building packages (e.g. for openSUSE Linux)
(random) filesystem order of input files
influences ordering of functions in the output,
thus without the patch, builds (in disposable VMs) would usually differ.
See https://reproducible-builds.org/ for why this matters.",Applied from email as c18ea1d,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,59,2017-06-19T18:27:35Z,2017-06-19T19:24:47Z,2017-06-19T19:24:47Z,CLOSED,False,41,31,7,https://github.com/pks-t,Portability patches,3,[],https://github.com/SELinuxProject/selinux/pull/59,https://github.com/pks-t,1,https://github.com/SELinuxProject/selinux/pull/59,"This is a first batch of small portability fixes. It removes a few instances of non-portable functions, problems with hardened toolchains defining FORTIFY_SOURCE and removes usage of __BEGIN_DECLS.
While I guess that the first two commits of removing __BEGIN_DECLS and the patch for FORTIFY_SOURCE are uncontroversial, I can imagine the removal of getpwent_r being a bit more so due to the alternative being non-reentrant. But to the best of my knowledge the code in question is not even called in a threaded context, so I actually doubt it matters much. Anyway, seeing that I'm new to this code base I could very likely be wrong.","This is a first batch of small portability fixes. It removes a few instances of non-portable functions, problems with hardened toolchains defining FORTIFY_SOURCE and removes usage of __BEGIN_DECLS.
While I guess that the first two commits of removing __BEGIN_DECLS and the patch for FORTIFY_SOURCE are uncontroversial, I can imagine the removal of getpwent_r being a bit more so due to the alternative being non-reentrant. But to the best of my knowledge the code in question is not even called in a threaded context, so I actually doubt it matters much. Anyway, seeing that I'm new to this code base I could very likely be wrong.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,59,2017-06-19T18:27:35Z,2017-06-19T19:24:47Z,2017-06-19T19:24:47Z,CLOSED,False,41,31,7,https://github.com/pks-t,Portability patches,3,[],https://github.com/SELinuxProject/selinux/pull/59,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/59#issuecomment-309531388,"This is a first batch of small portability fixes. It removes a few instances of non-portable functions, problems with hardened toolchains defining FORTIFY_SOURCE and removes usage of __BEGIN_DECLS.
While I guess that the first two commits of removing __BEGIN_DECLS and the patch for FORTIFY_SOURCE are uncontroversial, I can imagine the removal of getpwent_r being a bit more so due to the alternative being non-reentrant. But to the best of my knowledge the code in question is not even called in a threaded context, so I actually doubt it matters much. Anyway, seeing that I'm new to this code base I could very likely be wrong.",Prefer patches submitted via git send-email or equivalent to selinux AT tycho.nsa.gov unless unable to do so; subscribe via selinux-join AT tycho.nsa.gov.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,59,2017-06-19T18:27:35Z,2017-06-19T19:24:47Z,2017-06-19T19:24:47Z,CLOSED,False,41,31,7,https://github.com/pks-t,Portability patches,3,[],https://github.com/SELinuxProject/selinux/pull/59,https://github.com/pks-t,3,https://github.com/SELinuxProject/selinux/pull/59#issuecomment-309542904,"This is a first batch of small portability fixes. It removes a few instances of non-portable functions, problems with hardened toolchains defining FORTIFY_SOURCE and removes usage of __BEGIN_DECLS.
While I guess that the first two commits of removing __BEGIN_DECLS and the patch for FORTIFY_SOURCE are uncontroversial, I can imagine the removal of getpwent_r being a bit more so due to the alternative being non-reentrant. But to the best of my knowledge the code in question is not even called in a threaded context, so I actually doubt it matters much. Anyway, seeing that I'm new to this code base I could very likely be wrong.","Will do, thanks for the info!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,60,2017-07-18T09:09:43Z,2017-08-17T17:11:40Z,2017-08-17T17:11:40Z,CLOSED,False,1,1,1,https://github.com/gcolbert,Fixed bad reference in roleattribute,1,[],https://github.com/SELinuxProject/selinux/pull/60,https://github.com/gcolbert,1,https://github.com/SELinuxProject/selinux/pull/60,"""roleattribute"" was referencing ""typeattributeset"", but I believe it should be referencing ""roleattributeset"" instead.","""roleattribute"" was referencing ""typeattributeset"", but I believe it should be referencing ""roleattributeset"" instead.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,60,2017-07-18T09:09:43Z,2017-08-17T17:11:40Z,2017-08-17T17:11:40Z,CLOSED,False,1,1,1,https://github.com/gcolbert,Fixed bad reference in roleattribute,1,[],https://github.com/SELinuxProject/selinux/pull/60,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/60#issuecomment-316060132,"""roleattribute"" was referencing ""typeattributeset"", but I believe it should be referencing ""roleattributeset"" instead.","Prefer patches via git send-email to selinux AT tycho.nsa.gov, subscribe via selinux-join AT tycho.nsa.gov.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,60,2017-07-18T09:09:43Z,2017-08-17T17:11:40Z,2017-08-17T17:11:40Z,CLOSED,False,1,1,1,https://github.com/gcolbert,Fixed bad reference in roleattribute,1,[],https://github.com/SELinuxProject/selinux/pull/60,https://github.com/jwcart2,3,https://github.com/SELinuxProject/selinux/pull/60#issuecomment-323136040,"""roleattribute"" was referencing ""typeattributeset"", but I believe it should be referencing ""roleattributeset"" instead.",I have applied this change.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,65,2017-10-12T18:14:04Z,2017-10-12T18:18:06Z,2017-10-12T18:18:06Z,MERGED,True,1,477,5,https://github.com/williamcroberts,semodule-utils: remove semodule_deps,1,[],https://github.com/SELinuxProject/selinux/pull/65,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/65,"As discussed in #64,
semodule_deps has apparently been broken for a very long time for
binary modules and is completely irrelevant for CIL modules.  If there
are any users of it, they ought to be rewritten anyway since it is
not producing correct dependency information, and the ultimate goal
is to stop using binary modules altogether so it is not worth fixing.
Remove it to avoid any further broken usage.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","As discussed in #64,
semodule_deps has apparently been broken for a very long time for
binary modules and is completely irrelevant for CIL modules.  If there
are any users of it, they ought to be rewritten anyway since it is
not producing correct dependency information, and the ultimate goal
is to stop using binary modules altogether so it is not worth fixing.
Remove it to avoid any further broken usage.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,66,2017-10-18T16:01:50Z,2017-10-24T15:06:13Z,2017-10-24T15:06:13Z,CLOSED,False,0,2,1,https://github.com/williamcroberts,CleanSpec.mk: remove,1,[],https://github.com/SELinuxProject/selinux/pull/66,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/66,"The Android.mk files were removed but the CleanSpec.mk lingered on,
remove it.
Signed-off-by: William Roberts william.c.roberts@intel.com","The Android.mk files were removed but the CleanSpec.mk lingered on,
remove it.
Signed-off-by: William Roberts william.c.roberts@intel.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,66,2017-10-18T16:01:50Z,2017-10-24T15:06:13Z,2017-10-24T15:06:13Z,CLOSED,False,0,2,1,https://github.com/williamcroberts,CleanSpec.mk: remove,1,[],https://github.com/SELinuxProject/selinux/pull/66,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/66#issuecomment-337641102,"The Android.mk files were removed but the CleanSpec.mk lingered on,
remove it.
Signed-off-by: William Roberts william.c.roberts@intel.com",Just using this to test the travis-ci. I will send this out to the mailing list soon.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,67,2017-10-19T14:43:08Z,2017-10-19T15:00:46Z,2019-01-10T16:36:09Z,CLOSED,False,124,39,6,https://github.com/stephensmalley,selinux: libselinux: Enable multiple input files to selabel_open.,1,[],https://github.com/SELinuxProject/selinux/pull/67,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/67,"The file_contexts labeling backend, specified in label_file.c, currently assumes
that only one path will be specified as an option to selabel_open().  The split
of platform and non-platform policy on device, however, will necessitate the
loading of two disparate policy files.  Rather than combining the files and then
calling the existing API on a newly-formed file, just add the ability to specify
multiple files to use.  Order of opt specification to selabel_open matters.
This corresponds to AOSP commit 50400d3, which
lead to a fork with upstream, which we'd like to correct.
Signed-off-by: Dan Cashman dcashman@android.com","The file_contexts labeling backend, specified in label_file.c, currently assumes
that only one path will be specified as an option to selabel_open().  The split
of platform and non-platform policy on device, however, will necessitate the
loading of two disparate policy files.  Rather than combining the files and then
calling the existing API on a newly-formed file, just add the ability to specify
multiple files to use.  Order of opt specification to selabel_open matters.
This corresponds to AOSP commit 50400d3, which
lead to a fork with upstream, which we'd like to correct.
Signed-off-by: Dan Cashman dcashman@android.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,67,2017-10-19T14:43:08Z,2017-10-19T15:00:46Z,2019-01-10T16:36:09Z,CLOSED,False,124,39,6,https://github.com/stephensmalley,selinux: libselinux: Enable multiple input files to selabel_open.,1,[],https://github.com/SELinuxProject/selinux/pull/67,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/67#issuecomment-337931242,"The file_contexts labeling backend, specified in label_file.c, currently assumes
that only one path will be specified as an option to selabel_open().  The split
of platform and non-platform policy on device, however, will necessitate the
loading of two disparate policy files.  Rather than combining the files and then
calling the existing API on a newly-formed file, just add the ability to specify
multiple files to use.  Order of opt specification to selabel_open matters.
This corresponds to AOSP commit 50400d3, which
lead to a fork with upstream, which we'd like to correct.
Signed-off-by: Dan Cashman dcashman@android.com","Do not merge!  Just testing whether our travis-ci tests would catch the fact that this commit introduces a bug that produces seg faults in coreutils, selabel_lookup, and other userspace programs.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,67,2017-10-19T14:43:08Z,2017-10-19T15:00:46Z,2019-01-10T16:36:09Z,CLOSED,False,124,39,6,https://github.com/stephensmalley,selinux: libselinux: Enable multiple input files to selabel_open.,1,[],https://github.com/SELinuxProject/selinux/pull/67,https://github.com/stephensmalley,3,https://github.com/SELinuxProject/selinux/pull/67#issuecomment-337935943,"The file_contexts labeling backend, specified in label_file.c, currently assumes
that only one path will be specified as an option to selabel_open().  The split
of platform and non-platform policy on device, however, will necessitate the
loading of two disparate policy files.  Rather than combining the files and then
calling the existing API on a newly-formed file, just add the ability to specify
multiple files to use.  Order of opt specification to selabel_open matters.
This corresponds to AOSP commit 50400d3, which
lead to a fork with upstream, which we'd like to correct.
Signed-off-by: Dan Cashman dcashman@android.com","Ok, apparently not. Guess we need to look at what needs to be added to the travis-ci tests.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,67,2017-10-19T14:43:08Z,2017-10-19T15:00:46Z,2019-01-10T16:36:09Z,CLOSED,False,124,39,6,https://github.com/stephensmalley,selinux: libselinux: Enable multiple input files to selabel_open.,1,[],https://github.com/SELinuxProject/selinux/pull/67,https://github.com/williamcroberts,4,https://github.com/SELinuxProject/selinux/pull/67#issuecomment-337965234,"The file_contexts labeling backend, specified in label_file.c, currently assumes
that only one path will be specified as an option to selabel_open().  The split
of platform and non-platform policy on device, however, will necessitate the
loading of two disparate policy files.  Rather than combining the files and then
calling the existing API on a newly-formed file, just add the ability to specify
multiple files to use.  Order of opt specification to selabel_open matters.
This corresponds to AOSP commit 50400d3, which
lead to a fork with upstream, which we'd like to correct.
Signed-off-by: Dan Cashman dcashman@android.com","Very cool, that answers my question I posted to you.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,68,2017-10-24T15:05:21Z,2017-10-25T20:07:38Z,2019-01-10T16:36:11Z,MERGED,True,2,0,1,https://github.com/stephensmalley,libsepol: free ibendport device names,1,[],https://github.com/SELinuxProject/selinux/pull/68,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/68,"When reading policy, ibendport device names are allocated in
ocontext_read_selinux() but they are not freed when calling
sepol_policydb_free();
Fix this by freeing them in ocontext_selinux_free().
Signed-off-by: Jan Zarsky jzarsky@redhat.com","When reading policy, ibendport device names are allocated in
ocontext_read_selinux() but they are not freed when calling
sepol_policydb_free();
Fix this by freeing them in ocontext_selinux_free().
Signed-off-by: Jan Zarsky jzarsky@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,69,2017-10-25T12:49:54Z,2017-10-26T19:51:34Z,2019-01-10T16:36:13Z,MERGED,True,3,3,1,https://github.com/stephensmalley,Travis-CI: try working around network issues by retrying downloads,1,[],https://github.com/SELinuxProject/selinux/pull/69,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/69,"Some Travis-CI builds failed because of issues when downloading
refpolicy files for sepolgen tests. Use curl's option --retry to make
the downloads work when the networking issues are only transient.
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org","Some Travis-CI builds failed because of issues when downloading
refpolicy files for sepolgen tests. Use curl's option --retry to make
the downloads work when the networking issues are only transient.
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,71,2017-11-27T15:53:43Z,2017-11-27T19:09:17Z,2017-11-27T19:09:17Z,MERGED,True,1,1,1,https://github.com/williamcroberts,libsemanage: properly check return value of iterate function,1,[],https://github.com/SELinuxProject/selinux/pull/71,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/71,"Function dbase_llist_iterate iterates over records and checks return
value of iterate function. According to a manpage semanage_iterate(3),
handler can return value 1 for early exit. dbase_llist_iterate
currently checks for return value > 1, which does not include
expected value 1. This affects most of the semanage_iterate
and semanage_local functions.
Signed-off-by: Jan Zarsky jzarsky@redhat.com","Function dbase_llist_iterate iterates over records and checks return
value of iterate function. According to a manpage semanage_iterate(3),
handler can return value 1 for early exit. dbase_llist_iterate
currently checks for return value > 1, which does not include
expected value 1. This affects most of the semanage_iterate
and semanage_local functions.
Signed-off-by: Jan Zarsky jzarsky@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,72,2017-11-28T16:25:57Z,2017-12-01T13:56:11Z,2019-01-10T16:36:16Z,MERGED,True,13,0,3,https://github.com/stephensmalley,libsemanage: Use umask(0077) for fopen() write operations,1,[],https://github.com/SELinuxProject/selinux/pull/72,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/72,"When a calling process uses umask(0) some files in the SELinux module
store can be created to be world writeable. With this patch, libsemanage
sets umask(0077) before fopen() operations and restores the original
umask value when it's done.
Fixes:
drwx------. /var/lib/selinux/targeted/active
-rw-rw-rw-. /var/lib/selinux/targeted/active/booleans.local
-rw-rw-rw-. /var/lib/selinux/targeted/active/policy.linked
-rw-rw-rw-. /var/lib/selinux/targeted/active/seusers.local
drwx------. /var/lib/selinux/targeted/active/modules/400/permissive_sshd_t
-rw-rw-rw-. /var/lib/selinux/targeted/active/modules/400/permissive_sshd_t/cil
-rw-rw-rw-. /var/lib/selinux/targeted/active/modules/400/permissive_sshd_t/lang_ext
drwx------. /var/lib/selinux/targeted/active/modules/disabled
-rw-rw-rw-. /var/lib/selinux/targeted/active/modules/disabled/zosremote
Signed-off-by: Petr Lautrbach plautrba@redhat.com","When a calling process uses umask(0) some files in the SELinux module
store can be created to be world writeable. With this patch, libsemanage
sets umask(0077) before fopen() operations and restores the original
umask value when it's done.
Fixes:
drwx------. /var/lib/selinux/targeted/active
-rw-rw-rw-. /var/lib/selinux/targeted/active/booleans.local
-rw-rw-rw-. /var/lib/selinux/targeted/active/policy.linked
-rw-rw-rw-. /var/lib/selinux/targeted/active/seusers.local
drwx------. /var/lib/selinux/targeted/active/modules/400/permissive_sshd_t
-rw-rw-rw-. /var/lib/selinux/targeted/active/modules/400/permissive_sshd_t/cil
-rw-rw-rw-. /var/lib/selinux/targeted/active/modules/400/permissive_sshd_t/lang_ext
drwx------. /var/lib/selinux/targeted/active/modules/disabled
-rw-rw-rw-. /var/lib/selinux/targeted/active/modules/disabled/zosremote
Signed-off-by: Petr Lautrbach plautrba@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,73,2017-12-18T20:19:06Z,2017-12-18T20:46:54Z,2019-01-10T16:36:24Z,MERGED,True,25,20,1,https://github.com/stephensmalley,python/semanage: make seobject.py backward compatible,1,[],https://github.com/SELinuxProject/selinux/pull/73,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/73,"Commit 985753f changed behavior of seobject class constructors. While
semanage itself was fixed, there are other tools like
system-config-selinux and chcat which depend on the original behavior.
This change make the constructors backward compatible.
Fixes: $ system-config-selinux
Traceback (most recent call last):
File ""/usr/share/system-config-selinux/system-config-selinux.py"", line 196, in 
app = childWindow()
File ""/usr/share/system-config-selinux/system-config-selinux.py"", line 100, in init
self.add_page(booleansPage.booleansPage(xml))
File ""/usr/share/system-config-selinux/booleansPage.py"", line 142, in init
self.load(self.filter)
File ""/usr/share/system-config-selinux/booleansPage.py"", line 212, in load
self.booleans = seobject.booleanRecords()
TypeError: init() missing 1 required positional argument: 'args'
Signed-off-by: Petr Lautrbach plautrba@redhat.com","Commit 985753f changed behavior of seobject class constructors. While
semanage itself was fixed, there are other tools like
system-config-selinux and chcat which depend on the original behavior.
This change make the constructors backward compatible.
Fixes: $ system-config-selinux
Traceback (most recent call last):
File ""/usr/share/system-config-selinux/system-config-selinux.py"", line 196, in 
app = childWindow()
File ""/usr/share/system-config-selinux/system-config-selinux.py"", line 100, in init
self.add_page(booleansPage.booleansPage(xml))
File ""/usr/share/system-config-selinux/booleansPage.py"", line 142, in init
self.load(self.filter)
File ""/usr/share/system-config-selinux/booleansPage.py"", line 212, in load
self.booleans = seobject.booleanRecords()
TypeError: init() missing 1 required positional argument: 'args'
Signed-off-by: Petr Lautrbach plautrba@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,74,2018-01-13T16:41:02Z,2018-01-13T18:49:14Z,2018-01-13T18:49:14Z,MERGED,True,3,6,2,https://github.com/williamcroberts,libselinux: Correct manpages regarding removable_context,1,[],https://github.com/SELinuxProject/selinux/pull/74,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/74,"The selabel_media(5) man page incorrectly stated that the
removable_context(5) would be read if an selabel_lookup(3)
failed. Correct the man pages that fixes [1].
[1] https://bugzilla.redhat.com/show_bug.cgi?id=1395621
Signed-off-by: Richard Haines richard_c_haines@btinternet.com","The selabel_media(5) man page incorrectly stated that the
removable_context(5) would be read if an selabel_lookup(3)
failed. Correct the man pages that fixes [1].
[1] https://bugzilla.redhat.com/show_bug.cgi?id=1395621
Signed-off-by: Richard Haines richard_c_haines@btinternet.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,75,2018-01-16T15:30:38Z,2018-01-16T15:44:24Z,2019-01-10T16:36:28Z,CLOSED,False,58,65,16,https://github.com/stephensmalley,Rework of Makefiles,3,[],https://github.com/SELinuxProject/selinux/pull/75,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/75,"I have reworked the Makefiles a bit to make it more compatible with
the standard semantics for DESTDIR and PREFIX.
What made me look at this was a package I was working on in
Buildroot[1] that was using the pkg-config file generated
from libselinux. The pkg-config file generated has bogus paths
which results in that my package did not compile.
When looking further in our packages for libselinux/libsepol/libsemanage,
we allready do ""tricks"" to make it compile.
For example, we set DESTDIR during compilation to compute library and header paths.
DESTDIR should be supported only in the install* and uninstall* targets,
as those are the only targets where it is useful. [2]
PREFIX should be used to set a prefix for the installation.
This could be provided both in compile and install stages.
For example, consider the following line:
#make DESTDIR=/tmp/selinux install
It will generate a libselinux.pc file that looks like this:
prefix=/tmp/selinux/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=/tmp/selinux/usr/include
The DESTDIR should not be part of the prefix. The correct output should be:
prefix=/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=/usr/include
The following example do not compile at all:
#make DESTDIR=/tmp/myroot PREFIX=/selinux install
In this case, everything should be installed under /tmp/myroot/selinux.
The prefix in all generated pkg-files should have the path /selinux/xxxxx ( not /tmp/myroot/selinux/xxxx).
This patchsets tries to solve the following issues:

The pkg-config files generates odd paths when using DESTDIR without PREFIX
DESTDIR is needed during compile time to compute library and header paths which it should not.
Installing with both DESTDIR and PREFIX set gives us odd paths
Make usage of DESTDIR and PREFIX more standard

However, DESTDIR is still needed in the ""root"" Makefile to make libsemanage to compile.
But all components (libselinux, libsepol and libsemanage) can be compiled separatly with
standard usage of DESTDIR and PREFIX.
Thanks,
Best regards
Marcus Folkesson
[1] https://buildroot.org/
[2] https://www.gnu.org/prep/standards/html_node/DESTDIR.html","I have reworked the Makefiles a bit to make it more compatible with
the standard semantics for DESTDIR and PREFIX.
What made me look at this was a package I was working on in
Buildroot[1] that was using the pkg-config file generated
from libselinux. The pkg-config file generated has bogus paths
which results in that my package did not compile.
When looking further in our packages for libselinux/libsepol/libsemanage,
we allready do ""tricks"" to make it compile.
For example, we set DESTDIR during compilation to compute library and header paths.
DESTDIR should be supported only in the install* and uninstall* targets,
as those are the only targets where it is useful. [2]
PREFIX should be used to set a prefix for the installation.
This could be provided both in compile and install stages.
For example, consider the following line:
#make DESTDIR=/tmp/selinux install
It will generate a libselinux.pc file that looks like this:
prefix=/tmp/selinux/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=/tmp/selinux/usr/include
The DESTDIR should not be part of the prefix. The correct output should be:
prefix=/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=/usr/include
The following example do not compile at all:
#make DESTDIR=/tmp/myroot PREFIX=/selinux install
In this case, everything should be installed under /tmp/myroot/selinux.
The prefix in all generated pkg-files should have the path /selinux/xxxxx ( not /tmp/myroot/selinux/xxxx).
This patchsets tries to solve the following issues:

The pkg-config files generates odd paths when using DESTDIR without PREFIX
DESTDIR is needed during compile time to compute library and header paths which it should not.
Installing with both DESTDIR and PREFIX set gives us odd paths
Make usage of DESTDIR and PREFIX more standard

However, DESTDIR is still needed in the ""root"" Makefile to make libsemanage to compile.
But all components (libselinux, libsepol and libsemanage) can be compiled separatly with
standard usage of DESTDIR and PREFIX.
Thanks,
Best regards
Marcus Folkesson
[1] https://buildroot.org/
[2] https://www.gnu.org/prep/standards/html_node/DESTDIR.html",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,75,2018-01-16T15:30:38Z,2018-01-16T15:44:24Z,2019-01-10T16:36:28Z,CLOSED,False,58,65,16,https://github.com/stephensmalley,Rework of Makefiles,3,[],https://github.com/SELinuxProject/selinux/pull/75,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/75#issuecomment-358004612,"I have reworked the Makefiles a bit to make it more compatible with
the standard semantics for DESTDIR and PREFIX.
What made me look at this was a package I was working on in
Buildroot[1] that was using the pkg-config file generated
from libselinux. The pkg-config file generated has bogus paths
which results in that my package did not compile.
When looking further in our packages for libselinux/libsepol/libsemanage,
we allready do ""tricks"" to make it compile.
For example, we set DESTDIR during compilation to compute library and header paths.
DESTDIR should be supported only in the install* and uninstall* targets,
as those are the only targets where it is useful. [2]
PREFIX should be used to set a prefix for the installation.
This could be provided both in compile and install stages.
For example, consider the following line:
#make DESTDIR=/tmp/selinux install
It will generate a libselinux.pc file that looks like this:
prefix=/tmp/selinux/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=/tmp/selinux/usr/include
The DESTDIR should not be part of the prefix. The correct output should be:
prefix=/usr
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=/usr/include
The following example do not compile at all:
#make DESTDIR=/tmp/myroot PREFIX=/selinux install
In this case, everything should be installed under /tmp/myroot/selinux.
The prefix in all generated pkg-files should have the path /selinux/xxxxx ( not /tmp/myroot/selinux/xxxx).
This patchsets tries to solve the following issues:

The pkg-config files generates odd paths when using DESTDIR without PREFIX
DESTDIR is needed during compile time to compute library and header paths which it should not.
Installing with both DESTDIR and PREFIX set gives us odd paths
Make usage of DESTDIR and PREFIX more standard

However, DESTDIR is still needed in the ""root"" Makefile to make libsemanage to compile.
But all components (libselinux, libsepol and libsemanage) can be compiled separatly with
standard usage of DESTDIR and PREFIX.
Thanks,
Best regards
Marcus Folkesson
[1] https://buildroot.org/
[2] https://www.gnu.org/prep/standards/html_node/DESTDIR.html",Alters install location of the shared objects.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,76,2018-01-25T18:21:05Z,2018-01-25T20:27:48Z,2018-01-25T20:27:48Z,MERGED,True,44,18,3,https://github.com/williamcroberts,libsemanage: Allow tmp files to be kept if a compile fails,1,[],https://github.com/SELinuxProject/selinux/pull/76,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/76,"Allow the tmp build files to be kept for debugging when a policy
build fails.
Signed-off-by: Richard Haines richard_c_haines@btinternet.com","Allow the tmp build files to be kept for debugging when a policy
build fails.
Signed-off-by: Richard Haines richard_c_haines@btinternet.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,76,2018-01-25T18:21:05Z,2018-01-25T20:27:48Z,2018-01-25T20:27:48Z,MERGED,True,44,18,3,https://github.com/williamcroberts,libsemanage: Allow tmp files to be kept if a compile fails,1,[],https://github.com/SELinuxProject/selinux/pull/76,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/76#issuecomment-360554406,"Allow the tmp build files to be kept for debugging when a policy
build fails.
Signed-off-by: Richard Haines richard_c_haines@btinternet.com","Just putting this up to run the CI on it, not ready for merge.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,77,2018-01-25T21:58:45Z,2018-02-14T19:06:04Z,2020-05-01T10:00:12Z,CLOSED,False,1,3372,7,https://github.com/fishilico,gui: remove selinux-sepolgengui,2,[],https://github.com/SELinuxProject/selinux/pull/77,https://github.com/fishilico,1,https://github.com/SELinuxProject/selinux/pull/77,"Hi,
I sent a few hours ago these two patches on the mailing list, by as the first one seems to be blocked somewhere (I have only received back the second one), I am publishing them on Github too, as a Pull Request.
These patches removes selinux-sepolgengui because this application is not compatible with Gtk3, Python 3 (it requires PyGTK), etc. and would otherwise require some effort to update it.
More precisely, even though pygi-convert.sh updated the code in order to try making the application compatible with Python 3, PyGI... (in commit 0f3beeb), polgen.glade is still incompatible with Gtk-Builder (it would need to be converted). I do not want to spend time converting this file when I see that a bug preventing this application to launch has been present for more than one year.
Cheers","Hi,
I sent a few hours ago these two patches on the mailing list, by as the first one seems to be blocked somewhere (I have only received back the second one), I am publishing them on Github too, as a Pull Request.
These patches removes selinux-sepolgengui because this application is not compatible with Gtk3, Python 3 (it requires PyGTK), etc. and would otherwise require some effort to update it.
More precisely, even though pygi-convert.sh updated the code in order to try making the application compatible with Python 3, PyGI... (in commit 0f3beeb), polgen.glade is still incompatible with Gtk-Builder (it would need to be converted). I do not want to spend time converting this file when I see that a bug preventing this application to launch has been present for more than one year.
Cheers",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,77,2018-01-25T21:58:45Z,2018-02-14T19:06:04Z,2020-05-01T10:00:12Z,CLOSED,False,1,3372,7,https://github.com/fishilico,gui: remove selinux-sepolgengui,2,[],https://github.com/SELinuxProject/selinux/pull/77,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/77#issuecomment-365711546,"Hi,
I sent a few hours ago these two patches on the mailing list, by as the first one seems to be blocked somewhere (I have only received back the second one), I am publishing them on Github too, as a Pull Request.
These patches removes selinux-sepolgengui because this application is not compatible with Gtk3, Python 3 (it requires PyGTK), etc. and would otherwise require some effort to update it.
More precisely, even though pygi-convert.sh updated the code in order to try making the application compatible with Python 3, PyGI... (in commit 0f3beeb), polgen.glade is still incompatible with Gtk-Builder (it would need to be converted). I do not want to spend time converting this file when I see that a bug preventing this application to launch has been present for more than one year.
Cheers","Petr Lautrbach have submitted patches which fix sepolgengui: https://marc.info/?l=selinux&m=151860211514842&w=2 . As this component is used, I drop this pull request.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,79,2018-02-14T19:04:28Z,2018-02-21T21:45:09Z,2018-02-21T21:45:14Z,CLOSED,False,411,407,50,https://github.com/fishilico,Rework of makefiles v5,16,[],https://github.com/SELinuxProject/selinux/pull/79,https://github.com/fishilico,1,https://github.com/SELinuxProject/selinux/pull/79,"Hi,
I open this PR in order to test on Travis-CI the patches sent in https://marc.info/?l=selinux&m=151860227714887&w=2","Hi,
I open this PR in order to test on Travis-CI the patches sent in https://marc.info/?l=selinux&m=151860227714887&w=2",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,79,2018-02-14T19:04:28Z,2018-02-21T21:45:09Z,2018-02-21T21:45:14Z,CLOSED,False,411,407,50,https://github.com/fishilico,Rework of makefiles v5,16,[],https://github.com/SELinuxProject/selinux/pull/79,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/79#issuecomment-367484244,"Hi,
I open this PR in order to test on Travis-CI the patches sent in https://marc.info/?l=selinux&m=151860227714887&w=2",Merged: https://github.com/SELinuxProject/selinux/commits/fdd306711a54a4b3feda8a10bd0f5d7b27f12c2b,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,80,2018-02-22T17:57:00Z,2018-02-23T20:23:49Z,2018-02-23T20:23:49Z,MERGED,True,593,639,6,https://github.com/bachradsusi,"Python 3, GTK3 fixes for gui/polgengui.py",8,[],https://github.com/SELinuxProject/selinux/pull/80,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/80,"Follow-up of #77
This is based on the set of patches related to polgengui.py:
https://marc.info/?l=selinux&m=151860211514842&w=2
https://marc.info/?l=selinux&m=151864307629079&w=2
https://marc.info/?l=selinux&m=151864311929090&w=2
https://marc.info/?l=selinux&m=151864316529106&w=2
https://marc.info/?l=selinux&m=151932191009882&w=2","Follow-up of #77
This is based on the set of patches related to polgengui.py:
https://marc.info/?l=selinux&m=151860211514842&w=2
https://marc.info/?l=selinux&m=151864307629079&w=2
https://marc.info/?l=selinux&m=151864311929090&w=2
https://marc.info/?l=selinux&m=151864316529106&w=2
https://marc.info/?l=selinux&m=151932191009882&w=2",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,82,2018-02-28T19:00:51Z,2018-02-28T19:37:33Z,2018-02-28T19:37:33Z,MERGED,True,1,1,1,https://github.com/williamcroberts,libsemanage: Improve warning for installing disabled module,1,[],https://github.com/SELinuxProject/selinux/pull/82,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/82,"Resolves: rhbz#1337199
Signed-off-by: Vit Mojzis vmojzis@redhat.com","Resolves: rhbz#1337199
Signed-off-by: Vit Mojzis vmojzis@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,82,2018-02-28T19:00:51Z,2018-02-28T19:37:33Z,2018-02-28T19:37:33Z,MERGED,True,1,1,1,https://github.com/williamcroberts,libsemanage: Improve warning for installing disabled module,1,[],https://github.com/SELinuxProject/selinux/pull/82,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/82#issuecomment-369354188,"Resolves: rhbz#1337199
Signed-off-by: Vit Mojzis vmojzis@redhat.com","One of those fun random CURL failures, re-starting. If it fails again ill merge.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,83,2018-03-09T09:10:02Z,2018-03-26T14:23:10Z,2018-03-26T14:23:10Z,CLOSED,False,11,0,1,https://github.com/phhusson,WIP: Delete identical genfscon-s,1,[],https://github.com/SELinuxProject/selinux/pull/83,https://github.com/phhusson,1,https://github.com/SELinuxProject/selinux/pull/83,"secilc has a multiple_decls option to allow for multiple type
declarations.
The next step is to allow multiple samples of the same rules.
This commit does this on genfscon
One usecase is Android/Project Treble:
With Project Treble, vendor might include rules included in later
in framework.
In order to be able to update the framework in this case, we need
to remove identical rules.
I have several pending questions before considering merging:

Should the ""compact"" function be somewhere else? Or perhaps there is already some variant available?
Should the ""compact"" function simply take a cil_sort rather than a C array?
Should we compact all types indifferently? If so, we need to guarantee that the _compare function returns 0 only when the types rules are identical, and not just the same match rule. Is this already the case?
How is memory allocation done/will compact impact the release of the memory? (In my understanding this is just one big chunk, so the size isn't used when free-ing, so it should be ok)","secilc has a multiple_decls option to allow for multiple type
declarations.
The next step is to allow multiple samples of the same rules.
This commit does this on genfscon
One usecase is Android/Project Treble:
With Project Treble, vendor might include rules included in later
in framework.
In order to be able to update the framework in this case, we need
to remove identical rules.
I have several pending questions before considering merging:

Should the ""compact"" function be somewhere else? Or perhaps there is already some variant available?
Should the ""compact"" function simply take a cil_sort rather than a C array?
Should we compact all types indifferently? If so, we need to guarantee that the _compare function returns 0 only when the types rules are identical, and not just the same match rule. Is this already the case?
How is memory allocation done/will compact impact the release of the memory? (In my understanding this is just one big chunk, so the size isn't used when free-ing, so it should be ok)",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,83,2018-03-09T09:10:02Z,2018-03-26T14:23:10Z,2018-03-26T14:23:10Z,CLOSED,False,11,0,1,https://github.com/phhusson,WIP: Delete identical genfscon-s,1,[],https://github.com/SELinuxProject/selinux/pull/83,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/83#issuecomment-374317651,"secilc has a multiple_decls option to allow for multiple type
declarations.
The next step is to allow multiple samples of the same rules.
This commit does this on genfscon
One usecase is Android/Project Treble:
With Project Treble, vendor might include rules included in later
in framework.
In order to be able to update the framework in this case, we need
to remove identical rules.
I have several pending questions before considering merging:

Should the ""compact"" function be somewhere else? Or perhaps there is already some variant available?
Should the ""compact"" function simply take a cil_sort rather than a C array?
Should we compact all types indifferently? If so, we need to guarantee that the _compare function returns 0 only when the types rules are identical, and not just the same match rule. Is this already the case?
How is memory allocation done/will compact impact the release of the memory? (In my understanding this is just one big chunk, so the size isn't used when free-ing, so it should be ok)",@jwcart2 please take to selinux mailing list for discussion.  Subscribe via selinux-join@tycho.nsa.gov.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,83,2018-03-09T09:10:02Z,2018-03-26T14:23:10Z,2018-03-26T14:23:10Z,CLOSED,False,11,0,1,https://github.com/phhusson,WIP: Delete identical genfscon-s,1,[],https://github.com/SELinuxProject/selinux/pull/83,https://github.com/stephensmalley,3,https://github.com/SELinuxProject/selinux/pull/83#issuecomment-376183533,"secilc has a multiple_decls option to allow for multiple type
declarations.
The next step is to allow multiple samples of the same rules.
This commit does this on genfscon
One usecase is Android/Project Treble:
With Project Treble, vendor might include rules included in later
in framework.
In order to be able to update the framework in this case, we need
to remove identical rules.
I have several pending questions before considering merging:

Should the ""compact"" function be somewhere else? Or perhaps there is already some variant available?
Should the ""compact"" function simply take a cil_sort rather than a C array?
Should we compact all types indifferently? If so, we need to guarantee that the _compare function returns 0 only when the types rules are identical, and not just the same match rule. Is this already the case?
How is memory allocation done/will compact impact the release of the memory? (In my understanding this is just one big chunk, so the size isn't used when free-ing, so it should be ok)",Closing PR since patch/discussion has moved to list,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,84,2018-03-09T15:46:41Z,2018-03-13T10:57:05Z,2019-01-10T16:36:40Z,MERGED,True,98,50,2,https://github.com/stephensmalley,libsemanage: replace access() checks to make setuid programs work,1,[],https://github.com/SELinuxProject/selinux/pull/84,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/84,"access() uses real UID instead of effective UID which causes false
negative checks in setuid programs.
Replace access() calls (mostly tests for file existence) by stat().
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1186431
Signed-off-by: Vit Mojzis vmojzis@redhat.com","access() uses real UID instead of effective UID which causes false
negative checks in setuid programs.
Replace access() calls (mostly tests for file existence) by stat().
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1186431
Signed-off-by: Vit Mojzis vmojzis@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,85,2018-03-09T15:47:06Z,2018-03-15T20:52:56Z,2019-01-10T16:36:38Z,MERGED,True,2,0,1,https://github.com/stephensmalley,libsepol: Export sepol_polcap_getnum/name functions,1,[],https://github.com/SELinuxProject/selinux/pull/85,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/85,"Export the sepol_polcap_getnum/name() functions to users of
the shared library.  This will enable SETools to stop depending
on the static library.
Note that we may want to move polcaps.h up one level since
the convention is that headers directly under include/sepol are
shared library APIs while headers under include/sepol/policydb
are limited to static users.  However, this will unnecessarily
break the build for existing static users so it is deferred.
Suggested-by: Chris PeBenito pebenito@ieee.org
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","Export the sepol_polcap_getnum/name() functions to users of
the shared library.  This will enable SETools to stop depending
on the static library.
Note that we may want to move polcaps.h up one level since
the convention is that headers directly under include/sepol are
shared library APIs while headers under include/sepol/policydb
are limited to static users.  However, this will unnecessarily
break the build for existing static users so it is deferred.
Suggested-by: Chris PeBenito pebenito@ieee.org
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,85,2018-03-09T15:47:06Z,2018-03-15T20:52:56Z,2019-01-10T16:36:38Z,MERGED,True,2,0,1,https://github.com/stephensmalley,libsepol: Export sepol_polcap_getnum/name functions,1,[],https://github.com/SELinuxProject/selinux/pull/85,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/85#issuecomment-373519101,"Export the sepol_polcap_getnum/name() functions to users of
the shared library.  This will enable SETools to stop depending
on the static library.
Note that we may want to move polcaps.h up one level since
the convention is that headers directly under include/sepol are
shared library APIs while headers under include/sepol/policydb
are limited to static users.  However, this will unnecessarily
break the build for existing static users so it is deferred.
Suggested-by: Chris PeBenito pebenito@ieee.org
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","I was just prepping this patch, I see you have it, ill merge it.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,86,2018-03-14T19:29:05Z,2018-03-17T08:06:49Z,2018-03-17T08:06:49Z,CLOSED,False,10,13,3,https://github.com/bachradsusi,"libselinux, libsemanage: Replace PYSITEDIR with PYTHONLIBDIR",1,[],https://github.com/SELinuxProject/selinux/pull/86,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/86,"libselinux and libsemanage Makefiles invoke site.getsitepackages() in
order to get the path to the directory /usr/lib/pythonX.Y/site-packages
that matches the Python interpreter chosen with $(PYTHON). This method
is incompatible with Python virtual environments, as described in
pypa/virtualenv#355 (comment) .
This issue has been opened for more than 5 years.
On the contrary python/semanage/ and python/sepolgen/ Makefiles use
distutils.sysconfig.get_python_lib() in order to get the site-packages
path into a variable named PYTHONLIBDIR. This way of computing
PYTHONLIBDIR is compatible with virtual environments and gives the same
result as PYSITEDIR.
As PYTHONLIBDIR works in more cases than PYSITEDIR, make libselinux and
libsemanage Makefiles use it. And as native code is installed (as part
of the SWIG wrapper), use ""plat_specific=1"" in order to use /usr/lib64
on systems which distinguish /usr/lib64 from /usr/lib.
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org","libselinux and libsemanage Makefiles invoke site.getsitepackages() in
order to get the path to the directory /usr/lib/pythonX.Y/site-packages
that matches the Python interpreter chosen with $(PYTHON). This method
is incompatible with Python virtual environments, as described in
pypa/virtualenv#355 (comment) .
This issue has been opened for more than 5 years.
On the contrary python/semanage/ and python/sepolgen/ Makefiles use
distutils.sysconfig.get_python_lib() in order to get the site-packages
path into a variable named PYTHONLIBDIR. This way of computing
PYTHONLIBDIR is compatible with virtual environments and gives the same
result as PYSITEDIR.
As PYTHONLIBDIR works in more cases than PYSITEDIR, make libselinux and
libsemanage Makefiles use it. And as native code is installed (as part
of the SWIG wrapper), use ""plat_specific=1"" in order to use /usr/lib64
on systems which distinguish /usr/lib64 from /usr/lib.
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,86,2018-03-14T19:29:05Z,2018-03-17T08:06:49Z,2018-03-17T08:06:49Z,CLOSED,False,10,13,3,https://github.com/bachradsusi,"libselinux, libsemanage: Replace PYSITEDIR with PYTHONLIBDIR",1,[],https://github.com/SELinuxProject/selinux/pull/86,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/86#issuecomment-373902677,"libselinux and libsemanage Makefiles invoke site.getsitepackages() in
order to get the path to the directory /usr/lib/pythonX.Y/site-packages
that matches the Python interpreter chosen with $(PYTHON). This method
is incompatible with Python virtual environments, as described in
pypa/virtualenv#355 (comment) .
This issue has been opened for more than 5 years.
On the contrary python/semanage/ and python/sepolgen/ Makefiles use
distutils.sysconfig.get_python_lib() in order to get the site-packages
path into a variable named PYTHONLIBDIR. This way of computing
PYTHONLIBDIR is compatible with virtual environments and gives the same
result as PYSITEDIR.
As PYTHONLIBDIR works in more cases than PYSITEDIR, make libselinux and
libsemanage Makefiles use it. And as native code is installed (as part
of the SWIG wrapper), use ""plat_specific=1"" in order to use /usr/lib64
on systems which distinguish /usr/lib64 from /usr/lib.
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org",Merged in 07629c0,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,87,2018-03-19T15:21:55Z,2018-03-19T16:18:29Z,2018-03-19T16:18:30Z,MERGED,True,2,1,1,https://github.com/williamcroberts,libsemanage/direct_api.c: Fix iterating over array,1,[],https://github.com/SELinuxProject/selinux/pull/87,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/87,"Fix sizeof calculation in array iteration introduced by commit
6bb8282
""libsemanage: replace access() checks to make setuid programs work""
Signed-off-by: Vit Mojzis vmojzis@redhat.com","Fix sizeof calculation in array iteration introduced by commit
6bb8282
""libsemanage: replace access() checks to make setuid programs work""
Signed-off-by: Vit Mojzis vmojzis@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,88,2018-03-26T13:57:56Z,2018-03-26T14:19:53Z,2019-01-10T16:36:42Z,MERGED,True,41,34,2,https://github.com/stephensmalley,"policycoreutils/semodule: man page, --help, and enable/disable multiple modules changes",2,[],https://github.com/SELinuxProject/selinux/pull/88,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/88,Two patches from Vit Mojzis to improve semodule usage and make it more consistent,Two patches from Vit Mojzis to improve semodule usage and make it more consistent,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,89,2018-03-26T18:22:25Z,2018-03-26T19:29:38Z,2018-03-26T20:48:16Z,MERGED,True,12,19,2,https://github.com/j-vanderstoep,Resolve conflicts in expandattribute.,1,[],https://github.com/SELinuxProject/selinux/pull/89,https://github.com/j-vanderstoep,1,https://github.com/SELinuxProject/selinux/pull/89,"This commit resolves conflicts in values of expandattribute statements
in policy language and expandtypeattribute in CIL.
For example, these statements resolve to false in policy language:
expandattribute hal_audio true;
expandattribute hal_audio false;
Similarly, in CIL these also resolve to false.
(expandtypeattribute (hal_audio) true)
(expandtypeattribute (hal_audio) false)
A warning will be issued on this conflict.
Motivation
When Android combines multiple .cil files from system.img and vendor.img
it's possible to have conflicting expandattribute statements.
This change deals with this scenario by resolving the value of the
corresponding expandtypeattribute to false. The rationale behind this
override is that true is used for reduce run-time lookups, while
false is used for tests which must pass.
Signed-off-by: Tri Vo trong@android.com
Acked-by: Jeff Vander Stoep jeffv@google.com
Acked-by: William Roberts william.c.roberts@intel.com
Acked-by: James Carter jwcart2@tycho.nsa.gov","This commit resolves conflicts in values of expandattribute statements
in policy language and expandtypeattribute in CIL.
For example, these statements resolve to false in policy language:
expandattribute hal_audio true;
expandattribute hal_audio false;
Similarly, in CIL these also resolve to false.
(expandtypeattribute (hal_audio) true)
(expandtypeattribute (hal_audio) false)
A warning will be issued on this conflict.
Motivation
When Android combines multiple .cil files from system.img and vendor.img
it's possible to have conflicting expandattribute statements.
This change deals with this scenario by resolving the value of the
corresponding expandtypeattribute to false. The rationale behind this
override is that true is used for reduce run-time lookups, while
false is used for tests which must pass.
Signed-off-by: Tri Vo trong@android.com
Acked-by: Jeff Vander Stoep jeffv@google.com
Acked-by: William Roberts william.c.roberts@intel.com
Acked-by: James Carter jwcart2@tycho.nsa.gov",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,90,2018-03-30T16:31:59Z,2018-04-04T16:09:12Z,2018-04-04T16:09:12Z,MERGED,True,12,14,6,https://github.com/williamcroberts,verify file contexts during permissive and print line number on bad entry,2,[],https://github.com/SELinuxProject/selinux/pull/90,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/90,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,91,2018-04-12T19:37:54Z,2018-04-13T17:41:48Z,2019-01-10T16:36:47Z,MERGED,True,5,0,1,https://github.com/stephensmalley,python/sepolgen: Try to translate SELinux contexts to raw,1,[],https://github.com/SELinuxProject/selinux/pull/91,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/91,"This allows sepolgen to generate policy from AVC messages that contain
contexts translated by mcstrans.
Fixes:
# echo ""type=USER_AVC msg=audit(1468415802.940:2199604): pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0-s15:c0.c1023 msg='avc:  denied  { status } for auid=n/a uid=0 gid=0 cmdline=""/usr/lib/systemd/systemd-logind"" scontext=system_u:system_r:systemd_logind_t:SystemLow-SystemHigh tcontext=system_u:system_r:init_t:s0-s15:c0.c1023 tclass=system  exe=""/usr/lib/systemd/systemd"" sauid=0 hostname=? addr=? terminal=?'"" | audit2allow
libsepol.mls_from_string: invalid MLS context SystemLow-SystemHigh
libsepol.mls_from_string: could not construct mls context structure
libsepol.context_from_record: could not create context structure
libsepol.context_from_string: could not create context structure
libsepol.sepol_context_to_sid: could not convert
system_u:system_r:systemd_logind_t:SystemLow-SystemHigh to sid
Signed-off-by: Vit Mojzis vmojzis@redhat.com","This allows sepolgen to generate policy from AVC messages that contain
contexts translated by mcstrans.
Fixes:
# echo ""type=USER_AVC msg=audit(1468415802.940:2199604): pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0-s15:c0.c1023 msg='avc:  denied  { status } for auid=n/a uid=0 gid=0 cmdline=""/usr/lib/systemd/systemd-logind"" scontext=system_u:system_r:systemd_logind_t:SystemLow-SystemHigh tcontext=system_u:system_r:init_t:s0-s15:c0.c1023 tclass=system  exe=""/usr/lib/systemd/systemd"" sauid=0 hostname=? addr=? terminal=?'"" | audit2allow
libsepol.mls_from_string: invalid MLS context SystemLow-SystemHigh
libsepol.mls_from_string: could not construct mls context structure
libsepol.context_from_record: could not create context structure
libsepol.context_from_string: could not create context structure
libsepol.sepol_context_to_sid: could not convert
system_u:system_r:systemd_logind_t:SystemLow-SystemHigh to sid
Signed-off-by: Vit Mojzis vmojzis@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,92,2018-04-12T19:38:39Z,2018-04-13T20:21:27Z,2019-01-10T16:36:49Z,MERGED,True,2,2,1,https://github.com/stephensmalley,libsemanage: do not change file mode of seusers and users_extra,1,[],https://github.com/SELinuxProject/selinux/pull/92,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/92,"Commit 8702a86 causes file mode of
seusers and users_extra to change based on the value defined in config
file whenever direct_commit is called and policy is not rebuilt.
(e.g. when setting a boolean).
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1512639
$ ll /var/lib/selinux/targeted/active/users_extra
-rw-------. 1 root root 101 11. dub 17.31 /var/lib/selinux/targeted/active/users_extra
$ ll /var/lib/selinux/targeted/active/seusers
-rw-------. 1 root root 73 11. dub 17.31 /var/lib/selinux/targeted/active/seusers
$ semanage boolean -m --on httpd_can_network_connect
$ ll /var/lib/selinux/targeted/active/seusers
-rw-r--r--. 1 root root 73 23. bře 16.59 /var/lib/selinux/targeted/active/seusers
$ ll /var/lib/selinux/targeted/active/users_extra
-rw-r--r--. 1 root root 101 23. bře 16.59 /var/lib/selinux/targeted/active/users_extra
$ rpm -Vq selinux-policy-targeted
.M.....T.    /var/lib/selinux/targeted/active/seusers
.M.....T.    /var/lib/selinux/targeted/active/users_extra
Signed-off-by: Vit Mojzis vmojzis@redhat.com","Commit 8702a86 causes file mode of
seusers and users_extra to change based on the value defined in config
file whenever direct_commit is called and policy is not rebuilt.
(e.g. when setting a boolean).
Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1512639
$ ll /var/lib/selinux/targeted/active/users_extra
-rw-------. 1 root root 101 11. dub 17.31 /var/lib/selinux/targeted/active/users_extra
$ ll /var/lib/selinux/targeted/active/seusers
-rw-------. 1 root root 73 11. dub 17.31 /var/lib/selinux/targeted/active/seusers
$ semanage boolean -m --on httpd_can_network_connect
$ ll /var/lib/selinux/targeted/active/seusers
-rw-r--r--. 1 root root 73 23. bře 16.59 /var/lib/selinux/targeted/active/seusers
$ ll /var/lib/selinux/targeted/active/users_extra
-rw-r--r--. 1 root root 101 23. bře 16.59 /var/lib/selinux/targeted/active/users_extra
$ rpm -Vq selinux-policy-targeted
.M.....T.    /var/lib/selinux/targeted/active/seusers
.M.....T.    /var/lib/selinux/targeted/active/users_extra
Signed-off-by: Vit Mojzis vmojzis@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,93,2018-04-16T15:28:40Z,2018-04-17T20:55:58Z,2018-04-17T20:55:58Z,MERGED,True,18,12,4,https://github.com/williamcroberts,misc cleanups,5,[],https://github.com/SELinuxProject/selinux/pull/93,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/93,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,94,2018-04-25T16:15:33Z,2018-04-25T17:09:14Z,2018-04-25T17:09:14Z,MERGED,True,12,0,2,https://github.com/williamcroberts,Patches,3,[],https://github.com/SELinuxProject/selinux/pull/94,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/94,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,95,2018-05-04T13:29:34Z,2018-05-08T12:11:59Z,2019-01-10T16:36:53Z,MERGED,True,6,14,5,https://github.com/stephensmalley,Fix build warnings with gcc 8,4,[],https://github.com/SELinuxProject/selinux/pull/95,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/95,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,96,2018-05-17T13:56:51Z,2018-05-21T06:48:46Z,2019-01-10T16:36:55Z,CLOSED,False,38,8,6,https://github.com/stephensmalley,Musl fixes,5,[],https://github.com/SELinuxProject/selinux/pull/96,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/96,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,96,2018-05-17T13:56:51Z,2018-05-21T06:48:46Z,2019-01-10T16:36:55Z,CLOSED,False,38,8,6,https://github.com/stephensmalley,Musl fixes,5,[],https://github.com/SELinuxProject/selinux/pull/96,https://github.com/perfinion,2,https://github.com/SELinuxProject/selinux/pull/96#issuecomment-390568388,,Merged,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,99,2018-09-21T16:24:03Z,2018-09-21T19:51:37Z,2018-09-21T19:51:37Z,MERGED,True,0,19,2,https://github.com/williamcroberts,checkpolicy: remove extraneous policy build noise,1,[],https://github.com/SELinuxProject/selinux/pull/99,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/99,"Reduce noise when calling the checkpolicy command line. In Android, this
creates unnecessary build noise which we'd like to avoid.
https://en.wikipedia.org/wiki/Unix_philosophy
Rule of Silence
Developers should design programs so that they do not print
unnecessary output. This rule aims to allow other programs
and developers to pick out the information they need from a
program's output without having to parse verbosity.
An alternative approach would be to add a -s (silent) option to these
tools, or to have the Android build system redirect stdout to /dev/null.
Signed-off-by: Nick Kralevich nnk@google.com","Reduce noise when calling the checkpolicy command line. In Android, this
creates unnecessary build noise which we'd like to avoid.
https://en.wikipedia.org/wiki/Unix_philosophy
Rule of Silence
Developers should design programs so that they do not print
unnecessary output. This rule aims to allow other programs
and developers to pick out the information they need from a
program's output without having to parse verbosity.
An alternative approach would be to add a -s (silent) option to these
tools, or to have the Android build system redirect stdout to /dev/null.
Signed-off-by: Nick Kralevich nnk@google.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,100,2018-09-24T19:01:58Z,2018-09-25T15:05:42Z,2018-09-25T15:05:42Z,MERGED,True,12,8,2,https://github.com/williamcroberts,secilc: better error handling,2,[],https://github.com/SELinuxProject/selinux/pull/100,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/100,"Nick Kralevich via Selinux (2):
whitespace and spelling cleanup
secilc: better error handling","Nick Kralevich via Selinux (2):
whitespace and spelling cleanup
secilc: better error handling",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,101,2018-10-03T14:53:30Z,2018-10-11T14:53:09Z,2020-02-06T12:10:44Z,MERGED,True,2,1,1,https://github.com/WOnder93,restorecond: Do not ignore the -f option,1,[],https://github.com/SELinuxProject/selinux/pull/101,https://github.com/WOnder93,1,https://github.com/SELinuxProject/selinux/pull/101,"Since the default value of watch_file is set unconditionally after the
command-line arguments have been parsed, the -f option is (and has
always been) effectively ignored. Fix this by setting it before the
parsing.
Signed-off-by: Ondrej Mosnacek omosnace@redhat.com","Since the default value of watch_file is set unconditionally after the
command-line arguments have been parsed, the -f option is (and has
always been) effectively ignored. Fix this by setting it before the
parsing.
Signed-off-by: Ondrej Mosnacek omosnace@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,101,2018-10-03T14:53:30Z,2018-10-11T14:53:09Z,2020-02-06T12:10:44Z,MERGED,True,2,1,1,https://github.com/WOnder93,restorecond: Do not ignore the -f option,1,[],https://github.com/SELinuxProject/selinux/pull/101,https://github.com/WOnder93,2,https://github.com/SELinuxProject/selinux/pull/101#issuecomment-426690831,"Since the default value of watch_file is set unconditionally after the
command-line arguments have been parsed, the -f option is (and has
always been) effectively ignored. Fix this by setting it before the
parsing.
Signed-off-by: Ondrej Mosnacek omosnace@redhat.com","Now posted to the list, as it should have been, sorry: https://www.mail-archive.com/selinux@tycho.nsa.gov/msg07835.html",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,102,2018-10-11T14:21:17Z,2018-10-11T14:53:19Z,2018-10-11T14:53:19Z,MERGED,True,1,1,1,https://github.com/williamcroberts,libsemanage: improve semanage_migrate_store import failure,1,[],https://github.com/SELinuxProject/selinux/pull/102,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/102,"The selinux/semanage python module import error in semanage_migrate_store
was misleading. Before, it would report that the selinux/semanage modules
were not installed even though they were on the system.
Now the import failure is only reported if the modules are not installed.
Otherwise, a stack trace is printed for all other errors in the selinux/semanage
python modules.
Signed-off-by: Yuli Khodorkovskiy yuli.khodorkovskiy@crunchydata.com","The selinux/semanage python module import error in semanage_migrate_store
was misleading. Before, it would report that the selinux/semanage modules
were not installed even though they were on the system.
Now the import failure is only reported if the modules are not installed.
Otherwise, a stack trace is printed for all other errors in the selinux/semanage
python modules.
Signed-off-by: Yuli Khodorkovskiy yuli.khodorkovskiy@crunchydata.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,103,2018-10-11T14:34:03Z,2018-10-12T17:38:01Z,2018-10-27T18:03:26Z,MERGED,True,24,5,3,https://github.com/williamcroberts,libsepol: Add ability to sort ocontexts in libsepol and add option to use it in checkpolicy,2,[],https://github.com/SELinuxProject/selinux/pull/103,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/103,"ocontexts (initial sids, fs_use_*, genfscon, portcon, etc) are sorted by libsemanage when using policy modules and by libsepol when using CIL, but they are not sorted by checkpolicy when creating a policy from a policy.conf.
Checkpolicy's behavior allows control over the ordering which determines the matching order for portcons and other ocontext rules, but there are times when that specific control is not desired.
This patch set exposes an internal ocontext sorting function and adds a command line option to checkpolicy to sort ocontexts.
James Carter (2):
libsepol: Create policydb_sort_ocontexts()
checkpolicy: Add option to sort ocontexts when creating a binary
policy
checkpolicy/checkpolicy.c                  | 22 +++++++++++++++++-----
libsepol/include/sepol/policydb/policydb.h |  2 ++
libsepol/src/policydb.c                    |  5 +++++
3 files changed, 24 insertions(+), 5 deletions(-)","ocontexts (initial sids, fs_use_*, genfscon, portcon, etc) are sorted by libsemanage when using policy modules and by libsepol when using CIL, but they are not sorted by checkpolicy when creating a policy from a policy.conf.
Checkpolicy's behavior allows control over the ordering which determines the matching order for portcons and other ocontext rules, but there are times when that specific control is not desired.
This patch set exposes an internal ocontext sorting function and adds a command line option to checkpolicy to sort ocontexts.
James Carter (2):
libsepol: Create policydb_sort_ocontexts()
checkpolicy: Add option to sort ocontexts when creating a binary
policy
checkpolicy/checkpolicy.c                  | 22 +++++++++++++++++-----
libsepol/include/sepol/policydb/policydb.h |  2 ++
libsepol/src/policydb.c                    |  5 +++++
3 files changed, 24 insertions(+), 5 deletions(-)",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,103,2018-10-11T14:34:03Z,2018-10-12T17:38:01Z,2018-10-27T18:03:26Z,MERGED,True,24,5,3,https://github.com/williamcroberts,libsepol: Add ability to sort ocontexts in libsepol and add option to use it in checkpolicy,2,[],https://github.com/SELinuxProject/selinux/pull/103,https://github.com/StidOfficial,2,https://github.com/SELinuxProject/selinux/pull/103#issuecomment-431626926,"ocontexts (initial sids, fs_use_*, genfscon, portcon, etc) are sorted by libsemanage when using policy modules and by libsepol when using CIL, but they are not sorted by checkpolicy when creating a policy from a policy.conf.
Checkpolicy's behavior allows control over the ordering which determines the matching order for portcons and other ocontext rules, but there are times when that specific control is not desired.
This patch set exposes an internal ocontext sorting function and adds a command line option to checkpolicy to sort ocontexts.
James Carter (2):
libsepol: Create policydb_sort_ocontexts()
checkpolicy: Add option to sort ocontexts when creating a binary
policy
checkpolicy/checkpolicy.c                  | 22 +++++++++++++++++-----
libsepol/include/sepol/policydb/policydb.h |  2 ++
libsepol/src/policydb.c                    |  5 +++++
3 files changed, 24 insertions(+), 5 deletions(-)","I have this error, during compilation :
checkpolicy.c: In function 'main':
checkpolicy.c:645:12: error: implicit declaration of function 'policydb_sort_ocontexts'; did you mean 'policydb_user_cache'? [-Werror=implicit-function-declaration]
      ret = policydb_sort_ocontexts(&policydb);
            ^~~~~~~~~~~~~~~~~~~~~~~
            policydb_user_cache
cc1: all warnings being treated as errors",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,103,2018-10-11T14:34:03Z,2018-10-12T17:38:01Z,2018-10-27T18:03:26Z,MERGED,True,24,5,3,https://github.com/williamcroberts,libsepol: Add ability to sort ocontexts in libsepol and add option to use it in checkpolicy,2,[],https://github.com/SELinuxProject/selinux/pull/103,https://github.com/fishilico,3,https://github.com/SELinuxProject/selinux/pull/103#issuecomment-431650362,"ocontexts (initial sids, fs_use_*, genfscon, portcon, etc) are sorted by libsemanage when using policy modules and by libsepol when using CIL, but they are not sorted by checkpolicy when creating a policy from a policy.conf.
Checkpolicy's behavior allows control over the ordering which determines the matching order for portcons and other ocontext rules, but there are times when that specific control is not desired.
This patch set exposes an internal ocontext sorting function and adds a command line option to checkpolicy to sort ocontexts.
James Carter (2):
libsepol: Create policydb_sort_ocontexts()
checkpolicy: Add option to sort ocontexts when creating a binary
policy
checkpolicy/checkpolicy.c                  | 22 +++++++++++++++++-----
libsepol/include/sepol/policydb/policydb.h |  2 ++
libsepol/src/policydb.c                    |  5 +++++
3 files changed, 24 insertions(+), 5 deletions(-)",This error occurs for example if checkpolicy is been built with a libsepol version which is not master (this PR also introduced policydb_sort_ocontexts in libsepol/include/sepol/policydb/policydb.h). Is it what you are doing? Which version of libsepol are you using? You may need to add a -I/path/to/libsepol/include to the CFLAGS you are using.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,103,2018-10-11T14:34:03Z,2018-10-12T17:38:01Z,2018-10-27T18:03:26Z,MERGED,True,24,5,3,https://github.com/williamcroberts,libsepol: Add ability to sort ocontexts in libsepol and add option to use it in checkpolicy,2,[],https://github.com/SELinuxProject/selinux/pull/103,https://github.com/StidOfficial,4,https://github.com/SELinuxProject/selinux/pull/103#issuecomment-431655520,"ocontexts (initial sids, fs_use_*, genfscon, portcon, etc) are sorted by libsemanage when using policy modules and by libsepol when using CIL, but they are not sorted by checkpolicy when creating a policy from a policy.conf.
Checkpolicy's behavior allows control over the ordering which determines the matching order for portcons and other ocontext rules, but there are times when that specific control is not desired.
This patch set exposes an internal ocontext sorting function and adds a command line option to checkpolicy to sort ocontexts.
James Carter (2):
libsepol: Create policydb_sort_ocontexts()
checkpolicy: Add option to sort ocontexts when creating a binary
policy
checkpolicy/checkpolicy.c                  | 22 +++++++++++++++++-----
libsepol/include/sepol/policydb/policydb.h |  2 ++
libsepol/src/policydb.c                    |  5 +++++
3 files changed, 24 insertions(+), 5 deletions(-)","Try to compile the master branch (make -C selinux all), and yes not includes is set.
cc -O2 -Werror -Wall -Wextra -Wmissing-format-attribute -Wmissing-noreturn -Wpointer-arith -Wshadow -Wstrict-prototypes -Wundef -Wunused -Wwrite-strings -o checkpolicy.o -c checkpolicy.c",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,103,2018-10-11T14:34:03Z,2018-10-12T17:38:01Z,2018-10-27T18:03:26Z,MERGED,True,24,5,3,https://github.com/williamcroberts,libsepol: Add ability to sort ocontexts in libsepol and add option to use it in checkpolicy,2,[],https://github.com/SELinuxProject/selinux/pull/103,https://github.com/StidOfficial,5,https://github.com/SELinuxProject/selinux/pull/103#issuecomment-431656949,"ocontexts (initial sids, fs_use_*, genfscon, portcon, etc) are sorted by libsemanage when using policy modules and by libsepol when using CIL, but they are not sorted by checkpolicy when creating a policy from a policy.conf.
Checkpolicy's behavior allows control over the ordering which determines the matching order for portcons and other ocontext rules, but there are times when that specific control is not desired.
This patch set exposes an internal ocontext sorting function and adds a command line option to checkpolicy to sort ocontexts.
James Carter (2):
libsepol: Create policydb_sort_ocontexts()
checkpolicy: Add option to sort ocontexts when creating a binary
policy
checkpolicy/checkpolicy.c                  | 22 +++++++++++++++++-----
libsepol/include/sepol/policydb/policydb.h |  2 ++
libsepol/src/policydb.c                    |  5 +++++
3 files changed, 24 insertions(+), 5 deletions(-)","I have add :
export CFLAGS=-Ilibsepol/include/
export LDFLAGS=-L`pwd`/libsepol/src

He success but i have a implicit declaration warning :
cc -Ilibsepol/include/ -o checkpolicy.o -c checkpolicy.c
checkpolicy.c: In function 'main':
checkpolicy.c:645:12: warning: implicit declaration of function 'policydb_sort_ocontexts'; did you mean 'policydb_user_cache'? [-Wimplicit-function-declaration]
      ret = policydb_sort_ocontexts(&policydb);
            ^~~~~~~~~~~~~~~~~~~~~~~
            policydb_user_cache

Maybe add a include and library dir in Makefile.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,103,2018-10-11T14:34:03Z,2018-10-12T17:38:01Z,2018-10-27T18:03:26Z,MERGED,True,24,5,3,https://github.com/williamcroberts,libsepol: Add ability to sort ocontexts in libsepol and add option to use it in checkpolicy,2,[],https://github.com/SELinuxProject/selinux/pull/103,https://github.com/fishilico,6,https://github.com/SELinuxProject/selinux/pull/103#issuecomment-431686326,"ocontexts (initial sids, fs_use_*, genfscon, portcon, etc) are sorted by libsemanage when using policy modules and by libsepol when using CIL, but they are not sorted by checkpolicy when creating a policy from a policy.conf.
Checkpolicy's behavior allows control over the ordering which determines the matching order for portcons and other ocontext rules, but there are times when that specific control is not desired.
This patch set exposes an internal ocontext sorting function and adds a command line option to checkpolicy to sort ocontexts.
James Carter (2):
libsepol: Create policydb_sort_ocontexts()
checkpolicy: Add option to sort ocontexts when creating a binary
policy
checkpolicy/checkpolicy.c                  | 22 +++++++++++++++++-----
libsepol/include/sepol/policydb/policydb.h |  2 ++
libsepol/src/policydb.c                    |  5 +++++
3 files changed, 24 insertions(+), 5 deletions(-)","The way the tools and libraries are packaged (each subdirectory in its own package) makes it difficult to do things like including ../libsepol/include from checkpolicy/. In order to build the current master branch, the supported way consists in using make DESTDIR=... install, with DESTDIR targeting a directory where include files and libraries get copied and used by the tools. This is handled by 
  
    
      selinux/Makefile
    
    
        Lines 22 to 31
      in
      d3c359e
    
  
  
    

        
          
           ifneq ($(DESTDIR),) 
        

        
          
           	LIBDIR ?= $(DESTDIR)$(PREFIX)/lib 
        

        
          
           	LIBSEPOLA ?= $(LIBDIR)/libsepol.a 
        

        
          
            
        

        
          
           	CFLAGS += -I$(DESTDIR)$(PREFIX)/include 
        

        
          
           	LDFLAGS += -L$(DESTDIR)$(PREFIX)/lib -L$(LIBDIR) 
        

        
          
           	export CFLAGS 
        

        
          
           	export LDFLAGS 
        

        
          
           	export LIBSEPOLA 
        

        
          
           endif 
        
    
  


Once the libraries are installed there, make DESTDIR=... all (and make DESTDIR=... test) should work.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,103,2018-10-11T14:34:03Z,2018-10-12T17:38:01Z,2018-10-27T18:03:26Z,MERGED,True,24,5,3,https://github.com/williamcroberts,libsepol: Add ability to sort ocontexts in libsepol and add option to use it in checkpolicy,2,[],https://github.com/SELinuxProject/selinux/pull/103,https://github.com/StidOfficial,7,https://github.com/SELinuxProject/selinux/pull/103#issuecomment-431694662,"ocontexts (initial sids, fs_use_*, genfscon, portcon, etc) are sorted by libsemanage when using policy modules and by libsepol when using CIL, but they are not sorted by checkpolicy when creating a policy from a policy.conf.
Checkpolicy's behavior allows control over the ordering which determines the matching order for portcons and other ocontext rules, but there are times when that specific control is not desired.
This patch set exposes an internal ocontext sorting function and adds a command line option to checkpolicy to sort ocontexts.
James Carter (2):
libsepol: Create policydb_sort_ocontexts()
checkpolicy: Add option to sort ocontexts when creating a binary
policy
checkpolicy/checkpolicy.c                  | 22 +++++++++++++++++-----
libsepol/include/sepol/policydb/policydb.h |  2 ++
libsepol/src/policydb.c                    |  5 +++++
3 files changed, 24 insertions(+), 5 deletions(-)","I have this error with make DESTDIR=/tmp/test install :
run_init.c: In function 'authenticate_via_shadow_passwd':
run_init.c:210:25: error: implicit declaration of function 'crypt'; did you mean 'creat'? [-Werror=implicit-function-declaration]
  encrypted_password_s = crypt(unencrypted_password_s,
                         ^~~~~
                         creat
run_init.c:210:23: error: assignment to 'char *' from 'int' makes pointer from integer without a cast [-Werror=int-conversion]
  encrypted_password_s = crypt(unencrypted_password_s,
                       ^
cc1: all warnings being treated as errors

Is not possible to add like this ?
diff --git a/checkpolicy/Makefile b/checkpolicy/Makefile
index 4c817cd6..1fadd876 100644
--- a/checkpolicy/Makefile
+++ b/checkpolicy/Makefile
@@ -9,13 +9,13 @@ TARGETS = checkpolicy checkmodule
 LEX = flex
 YACC = bison -y
 
-CFLAGS ?= -g -Wall -Werror -Wshadow -O2 -pipe -fno-strict-aliasing
+CFLAGS ?= -g -Wall -Werror -Wshadow -O2 -pipe -fno-strict-aliasing -I../libsepol/include
 
 # If no specific libsepol.a is specified, fall back on LDFLAGS search path
 # Otherwise, as $(LIBSEPOLA) already appears in the dependencies, there
 # is no need to define a value for LDLIBS_LIBSEPOLA
 ifeq ($(LIBSEPOLA),)
-        LDLIBS_LIBSEPOLA := -l:libsepol.a
+        LDLIBS_LIBSEPOLA := ../libsepol/src/libsepol.a
 endif
 
 CHECKOBJS = y.tab.o lex.yy.o queue.o module_compiler.o parse_util.o \
diff --git a/checkpolicy/test/Makefile b/checkpolicy/test/Makefile
index 89e7557c..6568a237 100644
--- a/checkpolicy/test/Makefile
+++ b/checkpolicy/test/Makefile
@@ -7,7 +7,7 @@ CFLAGS ?= -g -Wall -W -Werror -O2 -pipe
 # Otherwise, as $(LIBSEPOLA) already appears in the dependencies, there
 # is no need to define a value for LDLIBS_LIBSEPOLA
 ifeq ($(LIBSEPOLA),)
-        LDLIBS_LIBSEPOLA := -l:libsepol.a
+        LDLIBS_LIBSEPOLA := ../../libsepol/src/libsepol.a
 endif
 
 all: dispol dismod",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,103,2018-10-11T14:34:03Z,2018-10-12T17:38:01Z,2018-10-27T18:03:26Z,MERGED,True,24,5,3,https://github.com/williamcroberts,libsepol: Add ability to sort ocontexts in libsepol and add option to use it in checkpolicy,2,[],https://github.com/SELinuxProject/selinux/pull/103,https://github.com/fishilico,8,https://github.com/SELinuxProject/selinux/pull/103#issuecomment-433642406,"ocontexts (initial sids, fs_use_*, genfscon, portcon, etc) are sorted by libsemanage when using policy modules and by libsepol when using CIL, but they are not sorted by checkpolicy when creating a policy from a policy.conf.
Checkpolicy's behavior allows control over the ordering which determines the matching order for portcons and other ocontext rules, but there are times when that specific control is not desired.
This patch set exposes an internal ocontext sorting function and adds a command line option to checkpolicy to sort ocontexts.
James Carter (2):
libsepol: Create policydb_sort_ocontexts()
checkpolicy: Add option to sort ocontexts when creating a binary
policy
checkpolicy/checkpolicy.c                  | 22 +++++++++++++++++-----
libsepol/include/sepol/policydb/policydb.h |  2 ++
libsepol/src/policydb.c                    |  5 +++++
3 files changed, 24 insertions(+), 5 deletions(-)","Using ../libsepol/src/libsepol.a would force directory libsepol to be present every time checkpolicy is built. This is the case when working on this git repository, but not when building the packages (when building checkpolicy, libsepol may be installed without its source files being available). This is why there is this -l:libsepol.a notation, which looks for libsepol.a in directories specified by -L in $LDFLAGS, which contains -L$(DESTDIR)$(PREFIX)/lib when building from the root directory.
For the issue with crypt, please report this issue separately, and please give some information on the system you are using (at least OS/distribution, compiler name and version, libc name and version). man crypt tells:
#define _XOPEN_SOURCE       /* See feature_test_macros(7) */
#include <unistd.h>

... and run_init.c includes unistd.h with this macro, defined in policycoreutils/run_init/Makefile. Therefore it seems to be likely a problem with your libc not following the standard which is documented in the man page, or with the Makefile not applying CFLAGS += -D_XOPEN_SOURCE=500.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,104,2018-10-11T14:38:37Z,2018-10-15T17:39:16Z,2018-10-15T17:39:16Z,MERGED,True,136,124,5,https://github.com/williamcroberts,libsepol: Cleanup initial sid handling when writing CIL and policy.conf files,4,[],https://github.com/SELinuxProject/selinux/pull/104,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/104,"Removes some redundent definitions of initial sid name strings
Adds range checking when looking up an initial sid name string for an index
Adds two new Xen initial sids

James Carter (4):
libsepol: Rename kernel_to_common.c stack functions
libsepol: Eliminate initial sid string definitions in module_to_cil.c
libsepol: Check that initial sid indexes are within the valid range
libsepol: Add two new Xen initial SIDs","Removes some redundent definitions of initial sid name strings
Adds range checking when looking up an initial sid name string for an index
Adds two new Xen initial sids

James Carter (4):
libsepol: Rename kernel_to_common.c stack functions
libsepol: Eliminate initial sid string definitions in module_to_cil.c
libsepol: Check that initial sid indexes are within the valid range
libsepol: Add two new Xen initial SIDs",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,105,2018-10-17T15:37:00Z,2018-10-25T21:06:46Z,2018-10-25T21:06:46Z,MERGED,True,25,7,1,https://github.com/williamcroberts,libsepol: fix endianity in ibpkey range checks,2,[],https://github.com/SELinuxProject/selinux/pull/105,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/105,"We need to convert from little-endian before dong range checks on the
ibpkey port numbers, otherwise we would be checking a wrong value.
Fixes: 9fbb311 (""libsepol: Add ibpkey ocontext handling"")
Acked-by: William Roberts william.c.roberts@intel.com
Acked-by: Stephen Smalley sds@tycho.nsa.gov
Signed-off-by: Ondrej Mosnacek omosnace@redhat.com","We need to convert from little-endian before dong range checks on the
ibpkey port numbers, otherwise we would be checking a wrong value.
Fixes: 9fbb311 (""libsepol: Add ibpkey ocontext handling"")
Acked-by: William Roberts william.c.roberts@intel.com
Acked-by: Stephen Smalley sds@tycho.nsa.gov
Signed-off-by: Ondrej Mosnacek omosnace@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,106,2018-10-21T18:30:33Z,2018-10-27T07:55:52Z,2018-10-27T07:55:52Z,CLOSED,False,10,10,3,https://github.com/StidOfficial,Fix snprintf truncated error,1,[],https://github.com/SELinuxProject/selinux/pull/106,https://github.com/StidOfficial,1,https://github.com/SELinuxProject/selinux/pull/106,"Fix some error with snprintf(unknown, 17, ""%s%u"", ""UNKNOWN"", i);","Fix some error with snprintf(unknown, 17, ""%s%u"", ""UNKNOWN"", i);",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,106,2018-10-21T18:30:33Z,2018-10-27T07:55:52Z,2018-10-27T07:55:52Z,CLOSED,False,10,10,3,https://github.com/StidOfficial,Fix snprintf truncated error,1,[],https://github.com/SELinuxProject/selinux/pull/106,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/106#issuecomment-431693751,"Fix some error with snprintf(unknown, 17, ""%s%u"", ""UNKNOWN"", i);","Patches are reviewed on a mailing list, selinux@vger.kernel.org, as the README tells:

  
    
      selinux/README
    
    
         Line 1
      in
      d3c359e
    
  
  
    

        
          
           Please submit all bug reports and patches to selinux@vger.kernel.org. 
        
    
  


Could you please send it there, with a proper Signed-off-by:  line?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,106,2018-10-21T18:30:33Z,2018-10-27T07:55:52Z,2018-10-27T07:55:52Z,CLOSED,False,10,10,3,https://github.com/StidOfficial,Fix snprintf truncated error,1,[],https://github.com/SELinuxProject/selinux/pull/106,https://github.com/StidOfficial,3,https://github.com/SELinuxProject/selinux/pull/106#issuecomment-432836162,"Fix some error with snprintf(unknown, 17, ""%s%u"", ""UNKNOWN"", i);",Now is good ?,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,106,2018-10-21T18:30:33Z,2018-10-27T07:55:52Z,2018-10-27T07:55:52Z,CLOSED,False,10,10,3,https://github.com/StidOfficial,Fix snprintf truncated error,1,[],https://github.com/SELinuxProject/selinux/pull/106,https://github.com/fishilico,4,https://github.com/SELinuxProject/selinux/pull/106#issuecomment-433600184,"Fix some error with snprintf(unknown, 17, ""%s%u"", ""UNKNOWN"", i);","Merged, thanks.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,107,2018-10-24T20:53:01Z,2018-10-26T13:53:13Z,2018-10-26T13:53:17Z,MERGED,True,0,10,1,https://github.com/stephensmalley,mcstrans: remove unused getpeercon_raw() call,1,[],https://github.com/SELinuxProject/selinux/pull/107,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/107,"There is a call to getpeercon_raw() in mcstransd, but nothing is done
with the context. The purpose of process_request() is to translate a
context and we would like that to succeed even if, for some reason,
getpeercon_raw() fails.
Signed-off-by: Yuli Khodorkovskiy yuli@crunchydata.com
Signed-off-by: Joshua Brindle joshua.brindle@crunchydata.com","There is a call to getpeercon_raw() in mcstransd, but nothing is done
with the context. The purpose of process_request() is to translate a
context and we would like that to succeed even if, for some reason,
getpeercon_raw() fails.
Signed-off-by: Yuli Khodorkovskiy yuli@crunchydata.com
Signed-off-by: Joshua Brindle joshua.brindle@crunchydata.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,110,2018-11-05T14:12:47Z,2018-11-05T14:31:47Z,2019-01-10T16:37:11Z,MERGED,True,2,2,2,https://github.com/stephensmalley,libselinux: fix overly strict validation of file_contexts.bin,1,[],https://github.com/SELinuxProject/selinux/pull/110,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/110,"load_mmap and regex_load_mmap (in the !USE_PCRE2 case) were
incorrectly treating the absence of any fixed stems or study data
as an error, rejecting valid file_contexts.bin files.  Remove
the extraneous validation checks.
Test:
$ cat > file_contexts <<EOF
(/.*)?                u:object_r:system_file:s0
/lib                   u:object_r:system_dir:s0
EOF
$ sefcontext_compile file_contexts
$ selabel_lookup -b file -k /lib -f file_contexts.bin
Before:
ERROR: selabel_open - Could not obtain handle.
After:
Default context: u:object_r:system_dir:s0
Reported-by: Jiyong Park jiyong@google.com
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","load_mmap and regex_load_mmap (in the !USE_PCRE2 case) were
incorrectly treating the absence of any fixed stems or study data
as an error, rejecting valid file_contexts.bin files.  Remove
the extraneous validation checks.
Test:
$ cat > file_contexts <<EOF
(/.*)?                u:object_r:system_file:s0
/lib                   u:object_r:system_dir:s0
EOF
$ sefcontext_compile file_contexts
$ selabel_lookup -b file -k /lib -f file_contexts.bin
Before:
ERROR: selabel_open - Could not obtain handle.
After:
Default context: u:object_r:system_dir:s0
Reported-by: Jiyong Park jiyong@google.com
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,111,2018-11-05T14:34:38Z,2018-12-03T20:58:13Z,2019-01-10T16:37:08Z,CLOSED,False,3,2,1,https://github.com/stephensmalley,libsepol: ibpkeys.c: fix printf format string specifiers for subnet_p…,1,[],https://github.com/SELinuxProject/selinux/pull/111,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/111,"…refix
Use PRIx64 to print the subnet_prefix (which is a uint64_t) instead
of lx.
Fixes #108
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","…refix
Use PRIx64 to print the subnet_prefix (which is a uint64_t) instead
of lx.
Fixes #108
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,112,2018-11-06T19:18:34Z,2018-12-03T20:58:30Z,2019-01-10T16:37:45Z,CLOSED,False,28,1,1,https://github.com/stephensmalley,libsemanage: set selinux policy root to match semanage root or storename,1,[],https://github.com/SELinuxProject/selinux/pull/112,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/112,"As reported in #109, semodule -p /path/to/policyroot -s minimum -n -B
tries to use /etc/selinux/targeted/booleans.subs_dist.  This is because
it invokes the libselinux selinux_boolean_sub() interface, which uses
the active/installed policy files rather than the libsemanage ones.
To fix, we need to set the selinux policy root when either the semanage
root or the semanage storename is set.  When setting the semanage root,
we need to prepend the semanage root to the selinux policy root.  When
setting the semanage storename, we need to replace the last component
of the selinux policy root with the new storename.
Test:
strace semodule -p ~/policy-root -s minimum -n -B
Before:
openat(AT_FDCWD, ""/etc/selinux/targeted/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
After:
openat(AT_FDCWD, ""/home/sds/policy-root/etc/selinux/minimum/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
Fixes #109
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","As reported in #109, semodule -p /path/to/policyroot -s minimum -n -B
tries to use /etc/selinux/targeted/booleans.subs_dist.  This is because
it invokes the libselinux selinux_boolean_sub() interface, which uses
the active/installed policy files rather than the libsemanage ones.
To fix, we need to set the selinux policy root when either the semanage
root or the semanage storename is set.  When setting the semanage root,
we need to prepend the semanage root to the selinux policy root.  When
setting the semanage storename, we need to replace the last component
of the selinux policy root with the new storename.
Test:
strace semodule -p ~/policy-root -s minimum -n -B
Before:
openat(AT_FDCWD, ""/etc/selinux/targeted/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
After:
openat(AT_FDCWD, ""/home/sds/policy-root/etc/selinux/minimum/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
Fixes #109
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,113,2018-11-07T16:04:27Z,2018-11-22T09:10:09Z,2018-12-19T19:37:23Z,CLOSED,False,1,5,1,https://github.com/teg,dbus: remove deprecated at_console statement,1,[],https://github.com/SELinuxProject/selinux/pull/113,https://github.com/teg,1,https://github.com/SELinuxProject/selinux/pull/113,"As described in 0, this likely did not have the intended effect, so
simply remove it. The change in behavior is that up until this patch
it would be possible for any non-system user to potentially gain access
to selinux' dbus interface. Now this is extended to also allow any
system user.
As the comment indicates, PolicyKit is used to enforce access, so this
should be perfectly harmless.
Signed-off-by: Tom Gundersen teg@jklm.no
CC: David Herrmann dh.herrmann@gmail.com","As described in 0, this likely did not have the intended effect, so
simply remove it. The change in behavior is that up until this patch
it would be possible for any non-system user to potentially gain access
to selinux' dbus interface. Now this is extended to also allow any
system user.
As the comment indicates, PolicyKit is used to enforce access, so this
should be perfectly harmless.
Signed-off-by: Tom Gundersen teg@jklm.no
CC: David Herrmann dh.herrmann@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,113,2018-11-07T16:04:27Z,2018-11-22T09:10:09Z,2018-12-19T19:37:23Z,CLOSED,False,1,5,1,https://github.com/teg,dbus: remove deprecated at_console statement,1,[],https://github.com/SELinuxProject/selinux/pull/113,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/113#issuecomment-439378685,"As described in 0, this likely did not have the intended effect, so
simply remove it. The change in behavior is that up until this patch
it would be possible for any non-system user to potentially gain access
to selinux' dbus interface. Now this is extended to also allow any
system user.
As the comment indicates, PolicyKit is used to enforce access, so this
should be perfectly harmless.
Signed-off-by: Tom Gundersen teg@jklm.no
CC: David Herrmann dh.herrmann@gmail.com","It makes sense. Same patch is used in Fedora for a long time.
I've resend your patch to selinux@vger.kernel.org where patches should be submitted, see README:

Please submit all bug reports and patches to selinux@vger.kernel.org.
Subscribe by sending ""subscribe selinux"" in the body of an email
to majordomo@vger.kernel.org.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,113,2018-11-07T16:04:27Z,2018-11-22T09:10:09Z,2018-12-19T19:37:23Z,CLOSED,False,1,5,1,https://github.com/teg,dbus: remove deprecated at_console statement,1,[],https://github.com/SELinuxProject/selinux/pull/113,https://github.com/teg,3,https://github.com/SELinuxProject/selinux/pull/113#issuecomment-439383700,"As described in 0, this likely did not have the intended effect, so
simply remove it. The change in behavior is that up until this patch
it would be possible for any non-system user to potentially gain access
to selinux' dbus interface. Now this is extended to also allow any
system user.
As the comment indicates, PolicyKit is used to enforce access, so this
should be perfectly harmless.
Signed-off-by: Tom Gundersen teg@jklm.no
CC: David Herrmann dh.herrmann@gmail.com",Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,113,2018-11-07T16:04:27Z,2018-11-22T09:10:09Z,2018-12-19T19:37:23Z,CLOSED,False,1,5,1,https://github.com/teg,dbus: remove deprecated at_console statement,1,[],https://github.com/SELinuxProject/selinux/pull/113,https://github.com/bachradsusi,4,https://github.com/SELinuxProject/selinux/pull/113#issuecomment-439388465,"As described in 0, this likely did not have the intended effect, so
simply remove it. The change in behavior is that up until this patch
it would be possible for any non-system user to potentially gain access
to selinux' dbus interface. Now this is extended to also allow any
system user.
As the comment indicates, PolicyKit is used to enforce access, so this
should be perfectly harmless.
Signed-off-by: Tom Gundersen teg@jklm.no
CC: David Herrmann dh.herrmann@gmail.com",I'm reopening this ticket so that CI results are available. It will be closed when the patch is merged.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,113,2018-11-07T16:04:27Z,2018-11-22T09:10:09Z,2018-12-19T19:37:23Z,CLOSED,False,1,5,1,https://github.com/teg,dbus: remove deprecated at_console statement,1,[],https://github.com/SELinuxProject/selinux/pull/113,https://github.com/bachradsusi,5,https://github.com/SELinuxProject/selinux/pull/113#issuecomment-440961602,"As described in 0, this likely did not have the intended effect, so
simply remove it. The change in behavior is that up until this patch
it would be possible for any non-system user to potentially gain access
to selinux' dbus interface. Now this is extended to also allow any
system user.
As the comment indicates, PolicyKit is used to enforce access, so this
should be perfectly harmless.
Signed-off-by: Tom Gundersen teg@jklm.no
CC: David Herrmann dh.herrmann@gmail.com",3a40d05,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,114,2018-11-22T07:48:09Z,2018-11-22T09:08:59Z,2018-11-22T09:26:01Z,CLOSED,False,0,176,2,https://github.com/bachradsusi,gui: remove html_util.py,1,[],https://github.com/SELinuxProject/selinux/pull/114,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/114,"This file is not used anywhere.
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org
https://lore.kernel.org/selinux/20181111205024.14386-1-nicolas.iooss@m4x.org/","This file is not used anywhere.
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org
https://lore.kernel.org/selinux/20181111205024.14386-1-nicolas.iooss@m4x.org/",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,114,2018-11-22T07:48:09Z,2018-11-22T09:08:59Z,2018-11-22T09:26:01Z,CLOSED,False,0,176,2,https://github.com/bachradsusi,gui: remove html_util.py,1,[],https://github.com/SELinuxProject/selinux/pull/114,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/114#issuecomment-440961308,"This file is not used anywhere.
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org
https://lore.kernel.org/selinux/20181111205024.14386-1-nicolas.iooss@m4x.org/",3b0dbed,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,115,2018-12-11T11:43:44Z,2018-12-12T09:37:00Z,2018-12-12T12:10:55Z,MERGED,True,46,49,1,https://github.com/bachradsusi,chcat fixes from Vit and Nicolas,3,[],https://github.com/SELinuxProject/selinux/pull/115,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/115,"https://lore.kernel.org/selinux/CAJfZ7=k+dNFE7AOO_FJhSMZP7WdvkJf3zbfqeY6kSkabOm+Uag@mail.gmail.com/T/#t
https://lore.kernel.org/selinux/pjdftv4e6b3.fsf@redhat.com/T/#m61b20f1ab53a4cae2cb3958df36320e036a5605f","https://lore.kernel.org/selinux/CAJfZ7=k+dNFE7AOO_FJhSMZP7WdvkJf3zbfqeY6kSkabOm+Uag@mail.gmail.com/T/#t
https://lore.kernel.org/selinux/pjdftv4e6b3.fsf@redhat.com/T/#m61b20f1ab53a4cae2cb3958df36320e036a5605f",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,115,2018-12-11T11:43:44Z,2018-12-12T09:37:00Z,2018-12-12T12:10:55Z,MERGED,True,46,49,1,https://github.com/bachradsusi,chcat fixes from Vit and Nicolas,3,[],https://github.com/SELinuxProject/selinux/pull/115,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/115#issuecomment-446522945,"https://lore.kernel.org/selinux/CAJfZ7=k+dNFE7AOO_FJhSMZP7WdvkJf3zbfqeY6kSkabOm+Uag@mail.gmail.com/T/#t
https://lore.kernel.org/selinux/pjdftv4e6b3.fsf@redhat.com/T/#m61b20f1ab53a4cae2cb3958df36320e036a5605f","I accidentally pushed my branch to this repo and it ran another travis CI build which failed when I removed the branch.
The other CI build based on the PR branch passed therefore I'm going to merge it.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,116,2018-12-20T15:21:26Z,2019-01-05T17:37:34Z,2019-01-10T08:43:52Z,CLOSED,False,66,26,3,https://github.com/bachradsusi,semanage without default policy; and with -S,5,[],https://github.com/SELinuxProject/selinux/pull/116,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/116,"The following set of patches tries to fix semanage in non-standard environments.
A backtrace when semanage was run on a system without installed policy, see
#81
https://bugzilla.redhat.com/show_bug.cgi?id=1558861
The fix is based on
fishilico@00eb0cc
by Nicolas Iooss nicolas.iooss@m4x.org
And when semanage was run -S , sepolicy module was initialized with the
default policy file (targeted) and also selinux module used the same default. It
meant that semanage either backtraced when the default policy was not installed
or used wrong store and therefore didn't behave correctly.
E.g. # semanage login -S minimum -d -s unconfined_u -r s0-s0:c0.c1023 default
libsemanage.dbase_llist_query: could not query record value
OSError: [Errno 0] Error","The following set of patches tries to fix semanage in non-standard environments.
A backtrace when semanage was run on a system without installed policy, see
#81
https://bugzilla.redhat.com/show_bug.cgi?id=1558861
The fix is based on
fishilico@00eb0cc
by Nicolas Iooss nicolas.iooss@m4x.org
And when semanage was run -S , sepolicy module was initialized with the
default policy file (targeted) and also selinux module used the same default. It
meant that semanage either backtraced when the default policy was not installed
or used wrong store and therefore didn't behave correctly.
E.g. # semanage login -S minimum -d -s unconfined_u -r s0-s0:c0.c1023 default
libsemanage.dbase_llist_query: could not query record value
OSError: [Errno 0] Error",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,116,2018-12-20T15:21:26Z,2019-01-05T17:37:34Z,2019-01-10T08:43:52Z,CLOSED,False,66,26,3,https://github.com/bachradsusi,semanage without default policy; and with -S,5,[],https://github.com/SELinuxProject/selinux/pull/116,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/116#issuecomment-451674800,"The following set of patches tries to fix semanage in non-standard environments.
A backtrace when semanage was run on a system without installed policy, see
#81
https://bugzilla.redhat.com/show_bug.cgi?id=1558861
The fix is based on
fishilico@00eb0cc
by Nicolas Iooss nicolas.iooss@m4x.org
And when semanage was run -S , sepolicy module was initialized with the
default policy file (targeted) and also selinux module used the same default. It
meant that semanage either backtraced when the default policy was not installed
or used wrong store and therefore didn't behave correctly.
E.g. # semanage login -S minimum -d -s unconfined_u -r s0-s0:c0.c1023 default
libsemanage.dbase_llist_query: could not query record value
OSError: [Errno 0] Error",These commits have been merged as https://github.com/SELinuxProject/selinux/commits/1015aef5cfa6a88399265385040ed584e00d363e . Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,117,2018-12-21T20:48:11Z,2019-01-05T13:43:35Z,2019-01-05T13:43:47Z,CLOSED,False,3872,2360,3,https://github.com/fishilico,python/sepolgen: upgrade ply to release 3.11,1,[],https://github.com/SELinuxProject/selinux/pull/117,https://github.com/fishilico,1,https://github.com/SELinuxProject/selinux/pull/117,"PLY (Python Lex-Yacc) 3.11 has been released in February 2018:

http://www.dabeaz.com/ply/index.html
https://github.com/dabeaz/ply/releases/tag/3.11

Copy lex.py and yacc.py from this new release.
This fixes the following warning from ""make test"":
python run-tests.py
../src/./sepolgen/lex.py:634: DeprecationWarning: Using or importing
the ABCs from 'collections' instead of from 'collections.abc' is
deprecated, and in 3.8 it will stop working
 if isinstance(t, collections.Callable):

(Python 3.3 moved collections.Callable to collections.abc.Callable)
I tried to send this patch by email but it seems to have been blocked somewhere, probably because of its large size.","PLY (Python Lex-Yacc) 3.11 has been released in February 2018:

http://www.dabeaz.com/ply/index.html
https://github.com/dabeaz/ply/releases/tag/3.11

Copy lex.py and yacc.py from this new release.
This fixes the following warning from ""make test"":
python run-tests.py
../src/./sepolgen/lex.py:634: DeprecationWarning: Using or importing
the ABCs from 'collections' instead of from 'collections.abc' is
deprecated, and in 3.8 it will stop working
 if isinstance(t, collections.Callable):

(Python 3.3 moved collections.Callable to collections.abc.Callable)
I tried to send this patch by email but it seems to have been blocked somewhere, probably because of its large size.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,117,2018-12-21T20:48:11Z,2019-01-05T13:43:35Z,2019-01-05T13:43:47Z,CLOSED,False,3872,2360,3,https://github.com/fishilico,python/sepolgen: upgrade ply to release 3.11,1,[],https://github.com/SELinuxProject/selinux/pull/117,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/117#issuecomment-451656331,"PLY (Python Lex-Yacc) 3.11 has been released in February 2018:

http://www.dabeaz.com/ply/index.html
https://github.com/dabeaz/ply/releases/tag/3.11

Copy lex.py and yacc.py from this new release.
This fixes the following warning from ""make test"":
python run-tests.py
../src/./sepolgen/lex.py:634: DeprecationWarning: Using or importing
the ABCs from 'collections' instead of from 'collections.abc' is
deprecated, and in 3.8 it will stop working
 if isinstance(t, collections.Callable):

(Python 3.3 moved collections.Callable to collections.abc.Callable)
I tried to send this patch by email but it seems to have been blocked somewhere, probably because of its large size.","This has been merged as 691231e
Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,https://github.com/darktemplarbasealt,1,https://github.com/SELinuxProject/selinux/pull/118,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,https://github.com/darktemplarbasealt,2,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-453503751,,Can someone take a look at this pull request please?,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,https://github.com/stephensmalley,3,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-453561604,,@bachradsusi @rhatdan Probably needs review by whomever at Red Hat handles translations?,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,https://github.com/bachradsusi,4,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-454055853,,"In Fedora we have https://src.fedoraproject.org/repo/pkgs/rpms/policycoreutils/policycoreutils_man_ru2.tar.bz2/sha512/7272801da169b8d7dd3f8b7e368a63a4fbb7ae94599f9384bc450d142e6b2a3805ab542d650cbe9c8978c2d8e5c56ef4c11f361abfefeaf184ec3a4b0d2afb4c/policycoreutils_man_ru2.tar.bz2 which wasn't updated since 2010 and it looks like nobody has complained about outdated translations so far. So I doubt it's worth to maintain this in upstream sources.
Anyway, both patches miss Signed-off-by: lines which could be important as the translations come from a different author.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,https://github.com/darktemplarbasealt,5,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-454397669,,"This pull request contains more translated pages than mentioned archive from Fedora. Why is it not worth it to maintain translations in the upstream sources? Everyone who uses selinux and needs translated documentation will be able to get it this way, and if translation gets outdated eventually - to update it.
As for ""Signed-off-by"" lines, is it enough if I sign it? I received translated pages in form of tarball and made a commit using contents of that tarball. If it's still necessary to get sign off from translator too, I'll work on it.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,https://github.com/darktemplarbasealt,6,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-454786829,,I've got sign-offs. Please let me know if anything else is needed.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,https://github.com/stephensmalley,7,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-454810323,,"My $0.02: I don't have a problem with including such translations upstream but we need an independent party from the submitter/author who can review their content, and unfortunately I am not able to do so.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,None,8,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-454815445,,"stephensmalley <notifications@github.com> writes:
 My $0.02: I don't have a problem with including such translations upstream but we need an independent party from the submitter/author who can
 review their content, and unfortunately I am not able to do so.
Is Google translate good enough? The parts I looked using it at looked
fine (I admit I only did a few tests so far)
…

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or mute the thread.


-- 
Key fingerprint = 5F4D 3CDB D3F8 3652 FBD8 02D5 3B6C 5F1D 2C7B 6B02
https://sks-keyservers.net/pks/lookup?op=get&search=0x3B6C5F1D2C7B6B02
Dominick Grift",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,None,9,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-454894677,,"I will try to work my way through them using google translate, hopefully a couple a day and use this comment to keep a tab. It will take time. The shear amount of man pages painfully reminds me of how much dead-weight the project carries... If anyone want to review some of the entries below just leave a reply with the entry you reviewed.
Reviewed:
✔️  checkpolicy/ru/checkmodule.8
✔️  checkpolicy/ru/checkpolicy.8
✔️  gui/ru/selinux-polgengui.8
✔️  gui/ru/system-config-selinux.8
✔️  libselinux/man/ru/man5/booleans.5
✔️ libselinux/man/ru/man5/customizable_types.5
✔️ libselinux/man/ru/man5/default_contexts.5
✔️ libselinux/man/ru/man5/default_type.5
✔️ libselinux/man/ru/man5/failsafe_context.5
✔️ libselinux/man/ru/man5/local.users.5
✔️ libselinux/man/ru/man5/removable_context.5
✔️ libselinux/man/ru/man5/secolor.conf.5
✔️ libselinux/man/ru/man5/securetty_types.5
✔️ libselinux/man/ru/man5/selabel_db.5
✔️ libselinux/man/ru/man5/selabel_file.5
✔️ libselinux/man/ru/man5/selabel_media.5
✔️ libselinux/man/ru/man5/selabel_x.5
✔️ libselinux/man/ru/man5/service_seusers.5
✔️ libselinux/man/ru/man5/seusers.5
✔️ libselinux/man/ru/man5/user_contexts.5
✔️ libselinux/man/ru/man5/virtual_domain_context.5
✔️ libselinux/man/ru/man5/virtual_image_context.5
✔️ libselinux/man/ru/man8/avcstat.8
✔️ libselinux/man/ru/man8/booleans.8
✔️ libselinux/man/ru/man8/getenforce.8
✔️ libselinux/man/ru/man8/getsebool.8
✔️ libselinux/man/ru/man8/matchpathcon.8
✔️ libselinux/man/ru/man8/sefcontext_compile.8
✔️ libselinux/man/ru/man8/selinux.8
✔️ libselinux/man/ru/man8/selinuxenabled.8
✔️ libselinux/man/ru/man8/selinuxexeccon.8
✔️ libselinux/man/ru/man8/setenforce.8
✔️ libselinux/man/ru/man8/togglesebool.8
✔️ libsemanage/man/ru/man5/semanage.conf.5
✔️ libsepol/man/ru/man8/chkcon.8
✔️  mcstrans/man/ru/man8/mcs.8
✔️  mcstrans/man/ru/man8/mcstransd.8
✔️  mcstrans/man/ru/man8/setrans.conf.8
✔️  policycoreutils/load_policy/ru/load_policy.8
✔️  policycoreutils/man/ru/man5/selinux_config.5
✔️  policycoreutils/newrole/ru/newrole.1
✔️  policycoreutils/run_init/ru/open_init_pty.8
✔️  policycoreutils/run_init/ru/run_init.8
✔️  policycoreutils/scripts/ru/fixfiles.8
✔️  policycoreutils/secon/ru/secon.1
✔️  policycoreutils/semodule/ru/genhomedircon.8
✔️  policycoreutils/semodule/ru/semodule.8
✔️  policycoreutils/sestatus/ru/sestatus.8
✔️  policycoreutils/sestatus/ru/sestatus.conf.5
✔️  policycoreutils/setfiles/ru/restorecon.8
✔️  policycoreutils/setfiles/ru/restorecon_xattr.8
✔️  policycoreutils/setfiles/ru/setfiles.8
✔️  policycoreutils/setsebool/ru/setsebool.8
✔️  python/audit2allow/ru/audit2allow.1
✔️  python/chcat/ru/chcat.8
✔️  python/semanage/ru/semanage-boolean.8
✔️  python/semanage/ru/semanage-dontaudit.8
✔️  python/semanage/ru/semanage-export.8
✔️  python/semanage/ru/semanage-fcontext.8
✔️  python/semanage/ru/semanage-ibendport.8
✔️  python/semanage/ru/semanage-ibpkey.8
✔️  python/semanage/ru/semanage-import.8
✔️  python/semanage/ru/semanage-interface.8
✔️  python/semanage/ru/semanage-login.8
✔️  python/semanage/ru/semanage-module.8
✔️  python/semanage/ru/semanage-node.8
✔️  python/semanage/ru/semanage-permissive.8
✔️  python/semanage/ru/semanage-port.8
✔️  python/semanage/ru/semanage-user.8
✔️  python/semanage/ru/semanage.8
✔️  python/sepolicy/ru/sepolicy-booleans.8
✔️  python/sepolicy/ru/sepolicy-communicate.8
✔️  python/sepolicy/ru/sepolicy-generate.8
✔️  python/sepolicy/ru/sepolicy-gui.8
✔️  python/sepolicy/ru/sepolicy-interface.8
✔️  python/sepolicy/ru/sepolicy-manpage.8
✔️  python/sepolicy/ru/sepolicy-network.8
✔️  python/sepolicy/ru/sepolicy-transition.8
✔️  python/sepolicy/ru/sepolicy.8
✔️  restorecond/ru/restorecond.8
✔️  sandbox/ru/sandbox.5
✔️  sandbox/ru/sandbox.8
✔️  sandbox/ru/seunshare.8
✔️  semodule-utils/semodule_expand/ru/semodule_expand.8
✔️  semodule-utils/semodule_link/ru/semodule_link.8
✔️  semodule-utils/semodule_package/ru/semodule_package.8
✔️  semodule-utils/semodule_package/ru/semodule_unpackage.8",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,None,10,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-455494126,,"All is reviewed. All is good.
Signed-off-by: Dominick Grift",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,118,2018-12-25T15:29:38Z,2019-01-28T11:03:59Z,2019-01-30T09:48:47Z,MERGED,True,6442,11,122,https://github.com/darktemplarbasealt,Add russian translations for man pages,2,[],https://github.com/SELinuxProject/selinux/pull/118,https://github.com/bachradsusi,11,https://github.com/SELinuxProject/selinux/pull/118#issuecomment-457157938,,"@doverride Thanks for the review!
I've resend this PR to the selinux@vger.kernel.org mailing list in order to follow the procedure. If there's no other objection it will be merged in 2 days.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,120,2018-12-31T15:06:24Z,2018-12-31T16:06:30Z,2018-12-31T16:06:30Z,MERGED,True,4,3,2,https://github.com/williamcroberts,Libselinux add strict overflow,3,[],https://github.com/SELinuxProject/selinux/pull/120,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/120,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,122,2019-01-02T13:49:09Z,2019-01-05T15:35:44Z,2019-01-05T15:35:44Z,CLOSED,False,10,3,1,https://github.com/bigon,libsemanage: Always set errno to 0 before calling getpwent(),1,[],https://github.com/SELinuxProject/selinux/pull/122,https://github.com/bigon,1,https://github.com/SELinuxProject/selinux/pull/122,"The manpage explicitly states that:
The  getpwent()  function  returns a pointer to a passwd structure, or
NULL if there are no more entries or an error occurred.  If an error
occurs, errno is set appropriately.  If one wants to check errno after
the call, it should be set to zero before the call.
Without this, genhomedircon can wrongly return the following:
libsemanage.get_home_dirs: Error while fetching users.  Returning list so far.
#121
Signed-off-by: Laurent Bigonville bigon@bigon.be","The manpage explicitly states that:
The  getpwent()  function  returns a pointer to a passwd structure, or
NULL if there are no more entries or an error occurred.  If an error
occurs, errno is set appropriately.  If one wants to check errno after
the call, it should be set to zero before the call.
Without this, genhomedircon can wrongly return the following:
libsemanage.get_home_dirs: Error while fetching users.  Returning list so far.
#121
Signed-off-by: Laurent Bigonville bigon@bigon.be",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,122,2019-01-02T13:49:09Z,2019-01-05T15:35:44Z,2019-01-05T15:35:44Z,CLOSED,False,10,3,1,https://github.com/bigon,libsemanage: Always set errno to 0 before calling getpwent(),1,[],https://github.com/SELinuxProject/selinux/pull/122,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/122#issuecomment-451665226,"The manpage explicitly states that:
The  getpwent()  function  returns a pointer to a passwd structure, or
NULL if there are no more entries or an error occurred.  If an error
occurs, errno is set appropriately.  If one wants to check errno after
the call, it should be set to zero before the call.
Without this, genhomedircon can wrongly return the following:
libsemanage.get_home_dirs: Error while fetching users.  Returning list so far.
#121
Signed-off-by: Laurent Bigonville bigon@bigon.be",Merged as 9ac345e. Thanks,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,124,2019-01-04T11:48:16Z,2019-01-04T12:27:47Z,2019-01-04T12:28:44Z,MERGED,True,227,220,1,https://github.com/bachradsusi,Semanage migrate store,3,[],https://github.com/SELinuxProject/selinux/pull/124,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/124,https://lore.kernel.org/selinux/20181219221320.8594-1-nicolas.iooss@m4x.org/T/#t,https://lore.kernel.org/selinux/20181219221320.8594-1-nicolas.iooss@m4x.org/T/#t,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,125,2019-01-04T15:54:34Z,2019-02-05T07:17:50Z,2019-02-05T07:17:50Z,CLOSED,False,6,1,1,https://github.com/vashirov,python/restorecon: add force option,1,[],https://github.com/SELinuxProject/selinux/pull/125,https://github.com/vashirov,1,https://github.com/SELinuxProject/selinux/pull/125,"This adds 'force' keyword argument to selinux.restorecon() function
using SELINUX_RESTORECON_SET_SPECFILE_CTX flag similar to -F option in restorecon util.","This adds 'force' keyword argument to selinux.restorecon() function
using SELINUX_RESTORECON_SET_SPECFILE_CTX flag similar to -F option in restorecon util.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,125,2019-01-04T15:54:34Z,2019-02-05T07:17:50Z,2019-02-05T07:17:50Z,CLOSED,False,6,1,1,https://github.com/vashirov,python/restorecon: add force option,1,[],https://github.com/SELinuxProject/selinux/pull/125,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/125#issuecomment-451581203,"This adds 'force' keyword argument to selinux.restorecon() function
using SELINUX_RESTORECON_SET_SPECFILE_CTX flag similar to -F option in restorecon util.","Please submit all bug reports and patches to selinux@vger.kernel.org.
Subscribe by sending ""subscribe selinux"" in the body of an email
to majordomo@vger.kernel.org - https://github.com/SELinuxProject/selinux/blob/master/README",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,125,2019-01-04T15:54:34Z,2019-02-05T07:17:50Z,2019-02-05T07:17:50Z,CLOSED,False,6,1,1,https://github.com/vashirov,python/restorecon: add force option,1,[],https://github.com/SELinuxProject/selinux/pull/125,https://github.com/bachradsusi,3,https://github.com/SELinuxProject/selinux/pull/125#issuecomment-452274179,"This adds 'force' keyword argument to selinux.restorecon() function
using SELINUX_RESTORECON_SET_SPECFILE_CTX flag similar to -F option in restorecon util.","Also please add Signed-off-by: line, git commit [-s, --signoff] ...",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,125,2019-01-04T15:54:34Z,2019-02-05T07:17:50Z,2019-02-05T07:17:50Z,CLOSED,False,6,1,1,https://github.com/vashirov,python/restorecon: add force option,1,[],https://github.com/SELinuxProject/selinux/pull/125,https://github.com/stephensmalley,4,https://github.com/SELinuxProject/selinux/pull/125#issuecomment-455174365,"This adds 'force' keyword argument to selinux.restorecon() function
using SELINUX_RESTORECON_SET_SPECFILE_CTX flag similar to -F option in restorecon util.","Are you having problems with subscribing to or posting to the selinux list?  If so, let us know. Otherwise, please submit your patch there with a Signed-off-by line and we'll review it.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,125,2019-01-04T15:54:34Z,2019-02-05T07:17:50Z,2019-02-05T07:17:50Z,CLOSED,False,6,1,1,https://github.com/vashirov,python/restorecon: add force option,1,[],https://github.com/SELinuxProject/selinux/pull/125,https://github.com/vashirov,5,https://github.com/SELinuxProject/selinux/pull/125#issuecomment-458945973,"This adds 'force' keyword argument to selinux.restorecon() function
using SELINUX_RESTORECON_SET_SPECFILE_CTX flag similar to -F option in restorecon util.","Sorry, I missed notifications.
I've sent email to the mailing list. I guess this PR can be closed.
Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,125,2019-01-04T15:54:34Z,2019-02-05T07:17:50Z,2019-02-05T07:17:50Z,CLOSED,False,6,1,1,https://github.com/vashirov,python/restorecon: add force option,1,[],https://github.com/SELinuxProject/selinux/pull/125,https://github.com/fishilico,6,https://github.com/SELinuxProject/selinux/pull/125#issuecomment-460536737,"This adds 'force' keyword argument to selinux.restorecon() function
using SELINUX_RESTORECON_SET_SPECFILE_CTX flag similar to -F option in restorecon util.",Merged as 474a092,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,126,2019-01-05T19:36:43Z,2019-01-08T11:48:11Z,2020-05-01T09:59:15Z,CLOSED,False,139,32,12,https://github.com/fishilico,"Run python tests with ""make test""",11,[],https://github.com/SELinuxProject/selinux/pull/126,https://github.com/fishilico,1,https://github.com/SELinuxProject/selinux/pull/126,"Currently, executing make test from the root directory of the project does not go into python/. This pull request fixes this, by making audit2allow testsuite executable by a non-privileged user.
I have already sent half of the patches on the mailing list (https://lore.kernel.org/selinux/20181221204333.27445-1-nicolas.iooss@m4x.org/T/) and will send the other half now.","Currently, executing make test from the root directory of the project does not go into python/. This pull request fixes this, by making audit2allow testsuite executable by a non-privileged user.
I have already sent half of the patches on the mailing list (https://lore.kernel.org/selinux/20181221204333.27445-1-nicolas.iooss@m4x.org/T/) and will send the other half now.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,126,2019-01-05T19:36:43Z,2019-01-08T11:48:11Z,2020-05-01T09:59:15Z,CLOSED,False,139,32,12,https://github.com/fishilico,"Run python tests with ""make test""",11,[],https://github.com/SELinuxProject/selinux/pull/126,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/126#issuecomment-452271177,"Currently, executing make test from the root directory of the project does not go into python/. This pull request fixes this, by making audit2allow testsuite executable by a non-privileged user.
I have already sent half of the patches on the mailing list (https://lore.kernel.org/selinux/20181221204333.27445-1-nicolas.iooss@m4x.org/T/) and will send the other half now.",Everything is merged  - aa3ddfe,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,127,2019-01-07T20:21:38Z,2019-01-12T18:58:24Z,2020-06-09T12:22:53Z,CLOSED,False,59,6,3,https://github.com/stephensmalley,libsemanage: set selinux policy root around calls to selinux_boolean_sub,1,[],https://github.com/SELinuxProject/selinux/pull/127,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/127,"As reported in #109, semodule -p /path/to/policyroot -s minimum -n -B
tries to use /etc/selinux/targeted/booleans.subs_dist.  This is because
it invokes the libselinux selinux_boolean_sub() interface, which uses
the active/installed policy files rather than the libsemanage ones.
Switch the selinux policy root around the selinux_boolean_sub() call
to incorporate the semanage root as a prefix and to use the specified
policy store as a suffix so that the correct booleans.subs_dist file
(if any) is used.
The underlying bug is that booleans.subs_dist is not itself managed
via libsemanage. If it was managed and therefore lived within the
policy store, then libsemanage could access the appropriate
booleans.subs_dist file without using the libselinux interface at all,
and thus would not need to modify the selinux policy root.  Moving
booleans.subs_dist to a managed file is deferred to a future change.
Test:
strace semodule -p ~/policy-root -s minimum -n -B
Before:
openat(AT_FDCWD, ""/etc/selinux/targeted/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
After:
openat(AT_FDCWD, ""/home/sds/policy-root/etc/selinux/minimum/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
Fixes #109
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","As reported in #109, semodule -p /path/to/policyroot -s minimum -n -B
tries to use /etc/selinux/targeted/booleans.subs_dist.  This is because
it invokes the libselinux selinux_boolean_sub() interface, which uses
the active/installed policy files rather than the libsemanage ones.
Switch the selinux policy root around the selinux_boolean_sub() call
to incorporate the semanage root as a prefix and to use the specified
policy store as a suffix so that the correct booleans.subs_dist file
(if any) is used.
The underlying bug is that booleans.subs_dist is not itself managed
via libsemanage. If it was managed and therefore lived within the
policy store, then libsemanage could access the appropriate
booleans.subs_dist file without using the libselinux interface at all,
and thus would not need to modify the selinux policy root.  Moving
booleans.subs_dist to a managed file is deferred to a future change.
Test:
strace semodule -p ~/policy-root -s minimum -n -B
Before:
openat(AT_FDCWD, ""/etc/selinux/targeted/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
After:
openat(AT_FDCWD, ""/home/sds/policy-root/etc/selinux/minimum/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
Fixes #109
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,127,2019-01-07T20:21:38Z,2019-01-12T18:58:24Z,2020-06-09T12:22:53Z,CLOSED,False,59,6,3,https://github.com/stephensmalley,libsemanage: set selinux policy root around calls to selinux_boolean_sub,1,[],https://github.com/SELinuxProject/selinux/pull/127,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/127#issuecomment-453772532,"As reported in #109, semodule -p /path/to/policyroot -s minimum -n -B
tries to use /etc/selinux/targeted/booleans.subs_dist.  This is because
it invokes the libselinux selinux_boolean_sub() interface, which uses
the active/installed policy files rather than the libsemanage ones.
Switch the selinux policy root around the selinux_boolean_sub() call
to incorporate the semanage root as a prefix and to use the specified
policy store as a suffix so that the correct booleans.subs_dist file
(if any) is used.
The underlying bug is that booleans.subs_dist is not itself managed
via libsemanage. If it was managed and therefore lived within the
policy store, then libsemanage could access the appropriate
booleans.subs_dist file without using the libselinux interface at all,
and thus would not need to modify the selinux policy root.  Moving
booleans.subs_dist to a managed file is deferred to a future change.
Test:
strace semodule -p ~/policy-root -s minimum -n -B
Before:
openat(AT_FDCWD, ""/etc/selinux/targeted/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
After:
openat(AT_FDCWD, ""/home/sds/policy-root/etc/selinux/minimum/booleans.subs_dist"", O_RDONLY|O_CLOEXEC) = 5
Fixes #109
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",Merged as dc3d9c6.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,128,2019-01-08T12:23:23Z,2019-01-09T12:17:13Z,2019-01-09T12:19:50Z,MERGED,True,5,0,1,https://github.com/bachradsusi,scripts/run-flake8: run on Python scripts not ending with .py,1,[],https://github.com/SELinuxProject/selinux/pull/128,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/128,"When running flake8 on a directory, it does not analyze files without an
extension, like semanage_migrate_store, mlscolor-test, etc. Use grep to
find files with a Python shebang and build a list which is then given to
flake8.
This commit is possible now that some clean-up patches have been
applied, such as commit 69c56bd (""python/chcat: improve the code
readability"") and b7227aa (""mcstrans: fix Python linter warnings on
test scripts"") and 3cb974d (""semanage_migrate_store: fix many
Python linter warnings"").
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org","When running flake8 on a directory, it does not analyze files without an
extension, like semanage_migrate_store, mlscolor-test, etc. Use grep to
find files with a Python shebang and build a list which is then given to
flake8.
This commit is possible now that some clean-up patches have been
applied, such as commit 69c56bd (""python/chcat: improve the code
readability"") and b7227aa (""mcstrans: fix Python linter warnings on
test scripts"") and 3cb974d (""semanage_migrate_store: fix many
Python linter warnings"").
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,129,2019-01-10T15:30:46Z,2019-01-17T18:56:07Z,2019-01-17T18:56:13Z,MERGED,True,6,9,1,https://github.com/stephensmalley,setsebool: support use of -P on SELinux-disabled hosts,1,[],https://github.com/SELinuxProject/selinux/pull/129,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/129,"As reported in #123, setsebool immediately exits with an error if
SELinux is disabled, preventing its use for setting boolean persistent
values.  In contrast, semanage boolean -m works on SELinux-disabled
hosts.  Change setsebool so that it can be used with the -P option
(persistent changes) even if SELinux is disabled.  In the SELinux-disabled
case, disable the policy reload and skip setting of active boolean
values, but set the persistent value in the policy store.
Fixes: #123
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","As reported in #123, setsebool immediately exits with an error if
SELinux is disabled, preventing its use for setting boolean persistent
values.  In contrast, semanage boolean -m works on SELinux-disabled
hosts.  Change setsebool so that it can be used with the -P option
(persistent changes) even if SELinux is disabled.  In the SELinux-disabled
case, disable the policy reload and skip setting of active boolean
values, but set the persistent value in the policy store.
Fixes: #123
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",True,"{'THUMBS_UP': ['https://github.com/wongma7', 'https://github.com/dustymabe'], 'HOORAY': ['https://github.com/dustymabe'], 'HEART': ['https://github.com/dustymabe']}"
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,129,2019-01-10T15:30:46Z,2019-01-17T18:56:07Z,2019-01-17T18:56:13Z,MERGED,True,6,9,1,https://github.com/stephensmalley,setsebool: support use of -P on SELinux-disabled hosts,1,[],https://github.com/SELinuxProject/selinux/pull/129,https://github.com/dustymabe,2,https://github.com/SELinuxProject/selinux/pull/129#issuecomment-453526315,"As reported in #123, setsebool immediately exits with an error if
SELinux is disabled, preventing its use for setting boolean persistent
values.  In contrast, semanage boolean -m works on SELinux-disabled
hosts.  Change setsebool so that it can be used with the -P option
(persistent changes) even if SELinux is disabled.  In the SELinux-disabled
case, disable the policy reload and skip setting of active boolean
values, but set the persistent value in the policy store.
Fixes: #123
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",thanks @stephensmalley !,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,130,2019-01-17T13:39:51Z,2019-01-24T11:11:04Z,2020-06-09T12:19:12Z,CLOSED,False,7,1,2,https://github.com/stephensmalley,libselinux/audit2why.so: Filter out non-python related symbols,1,[],https://github.com/SELinuxProject/selinux/pull/130,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/130,"audit2why.so used to export libsepol.a symbols. We only need Python related
symbols:

initaudit2why for python 2
PyInit_audit2why for python3

Signed-off-by: Petr Lautrbach plautrba@redhat.com","audit2why.so used to export libsepol.a symbols. We only need Python related
symbols:

initaudit2why for python 2
PyInit_audit2why for python3

Signed-off-by: Petr Lautrbach plautrba@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,130,2019-01-17T13:39:51Z,2019-01-24T11:11:04Z,2020-06-09T12:19:12Z,CLOSED,False,7,1,2,https://github.com/stephensmalley,libselinux/audit2why.so: Filter out non-python related symbols,1,[],https://github.com/SELinuxProject/selinux/pull/130,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/130#issuecomment-457159626,"audit2why.so used to export libsepol.a symbols. We only need Python related
symbols:

initaudit2why for python 2
PyInit_audit2why for python3

Signed-off-by: Petr Lautrbach plautrba@redhat.com","https://travis-ci.org/SELinuxProject/selinux/builds/483832670
de5d5ed",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,131,2019-01-17T13:41:11Z,2019-01-18T16:13:21Z,2019-01-18T16:14:11Z,MERGED,True,1,1,1,https://github.com/stephensmalley,libselinux: do not dereference symlink with statfs in selinux_restorecon,1,[],https://github.com/SELinuxProject/selinux/pull/131,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/131,"When selinux_restorecon() is used to relabel symlinks, it performs the
following syscalls (as seen by running strace on restorecond):
lstat(""/root/symlink"", {st_mode=S_IFLNK|0777, st_size=6, ...}) = 0
statfs(""/root/symlink"", 0x7ffd6bb4d090) = -1 ENOENT (No such file or directory)
lstat(""/root/symlink"", {st_mode=S_IFLNK|0777, st_size=6, ...}) = 0
lgetxattr(""/root/symlink"", ""security.selinux"", ""sysadm_u:object_r:user_home_t"", 255) = 30

The second one triggers a SELinux check for lnk_file:read, as statfs()
dereferences symbolic links. This call to statfs() is only used to find
out whether ""restoreconlast"" xattr can be ignored, which is always the
case for non-directory files (the first syscall, lstat(), is actually
used to perform this check).
Skip the call to statfs() when setrestoreconlast is already false.
This silences an AVC denial that would otherwise be reported to
audit.log (cf. SELinuxProject/refpolicy#22).
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org","When selinux_restorecon() is used to relabel symlinks, it performs the
following syscalls (as seen by running strace on restorecond):
lstat(""/root/symlink"", {st_mode=S_IFLNK|0777, st_size=6, ...}) = 0
statfs(""/root/symlink"", 0x7ffd6bb4d090) = -1 ENOENT (No such file or directory)
lstat(""/root/symlink"", {st_mode=S_IFLNK|0777, st_size=6, ...}) = 0
lgetxattr(""/root/symlink"", ""security.selinux"", ""sysadm_u:object_r:user_home_t"", 255) = 30

The second one triggers a SELinux check for lnk_file:read, as statfs()
dereferences symbolic links. This call to statfs() is only used to find
out whether ""restoreconlast"" xattr can be ignored, which is always the
case for non-directory files (the first syscall, lstat(), is actually
used to perform this check).
Skip the call to statfs() when setrestoreconlast is already false.
This silences an AVC denial that would otherwise be reported to
audit.log (cf. SELinuxProject/refpolicy#22).
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,132,2019-01-21T13:23:58Z,2019-01-24T10:47:48Z,2019-01-24T10:47:48Z,CLOSED,False,57,21,2,https://github.com/bachradsusi,Travis-CI updates,3,[],https://github.com/SELinuxProject/selinux/pull/132,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/132,"https://lore.kernel.org/selinux/20190120191933.21343-1-nicolas.iooss@m4x.org/T/#t
https://lore.kernel.org/selinux/20190120191933.21343-2-nicolas.iooss@m4x.org/T/#u
https://lore.kernel.org/selinux/20190120191933.21343-3-nicolas.iooss@m4x.org/T/#u","https://lore.kernel.org/selinux/20190120191933.21343-1-nicolas.iooss@m4x.org/T/#t
https://lore.kernel.org/selinux/20190120191933.21343-2-nicolas.iooss@m4x.org/T/#u
https://lore.kernel.org/selinux/20190120191933.21343-3-nicolas.iooss@m4x.org/T/#u",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,132,2019-01-21T13:23:58Z,2019-01-24T10:47:48Z,2019-01-24T10:47:48Z,CLOSED,False,57,21,2,https://github.com/bachradsusi,Travis-CI updates,3,[],https://github.com/SELinuxProject/selinux/pull/132,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/132#issuecomment-457153187,"https://lore.kernel.org/selinux/20190120191933.21343-1-nicolas.iooss@m4x.org/T/#t
https://lore.kernel.org/selinux/20190120191933.21343-2-nicolas.iooss@m4x.org/T/#u
https://lore.kernel.org/selinux/20190120191933.21343-3-nicolas.iooss@m4x.org/T/#u","111c541
dbcada0
9e0ed5c",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,133,2019-01-31T20:01:49Z,2019-02-04T19:21:36Z,2019-02-04T19:22:46Z,MERGED,True,179,179,8,https://github.com/fishilico,Fix Travis-CI build with flake8 3.7,3,[],https://github.com/SELinuxProject/selinux/pull/133,https://github.com/fishilico,1,https://github.com/SELinuxProject/selinux/pull/133,"Hello,
flake8 3.7.0 got released two days ago (http://flake8.pycqa.org/en/latest/release-notes/3.7.0.html). This version added more warnings, which make the current Travis-CI jobs fail.
I am opening this PR in order to tell other developers that I am working on fixing this. Here is my work-in-progress patches. I will send them to the mailing list once I have proof-read them and once Travis-CI tests have run.
Cheers","Hello,
flake8 3.7.0 got released two days ago (http://flake8.pycqa.org/en/latest/release-notes/3.7.0.html). This version added more warnings, which make the current Travis-CI jobs fail.
I am opening this PR in order to tell other developers that I am working on fixing this. Here is my work-in-progress patches. I will send them to the mailing list once I have proof-read them and once Travis-CI tests have run.
Cheers",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,135,2019-03-13T02:34:33Z,,2019-06-07T14:54:59Z,OPEN,False,3,2,1,https://github.com/kruton,More robust ausearch time input,1,['bug'],https://github.com/SELinuxProject/selinux/pull/135,https://github.com/kruton,1,https://github.com/SELinuxProject/selinux/pull/135,"Depending on what locale you were using, you may have time that would show AM or PM.
This would cause the time to be incorrect on noon and midnight rollovers. This change allows
all the output of strptime's %x and %X to be captured and provided to ausearch.","Depending on what locale you were using, you may have time that would show AM or PM.
This would cause the time to be incorrect on noon and midnight rollovers. This change allows
all the output of strptime's %x and %X to be captured and provided to ausearch.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,135,2019-03-13T02:34:33Z,,2019-06-07T14:54:59Z,OPEN,False,3,2,1,https://github.com/kruton,More robust ausearch time input,1,['bug'],https://github.com/SELinuxProject/selinux/pull/135,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/135#issuecomment-472428723,"Depending on what locale you were using, you may have time that would show AM or PM.
This would cause the time to be incorrect on noon and midnight rollovers. This change allows
all the output of strptime's %x and %X to be captured and provided to ausearch.","I don't know why my email response to the thread isn't showing. Did you post this to the selinux list, i didn't see it? If you didn't please send it to the list as well.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,135,2019-03-13T02:34:33Z,,2019-06-07T14:54:59Z,OPEN,False,3,2,1,https://github.com/kruton,More robust ausearch time input,1,['bug'],https://github.com/SELinuxProject/selinux/pull/135,https://github.com/williamcroberts,3,https://github.com/SELinuxProject/selinux/pull/135#issuecomment-472430475,"Depending on what locale you were using, you may have time that would show AM or PM.
This would cause the time to be incorrect on noon and midnight rollovers. This change allows
all the output of strptime's %x and %X to be captured and provided to ausearch.","Did you post this to the mailing list, I am not seeing it. I have no objections,
But we require the patch on the mailing list. However, issuing a PR makes
My life easier, thanks.
…
 -----Original Message-----
 From: Kenny Root ***@***.***
 Sent: Tuesday, March 12, 2019 7:35 PM
 To: SELinuxProject/selinux ***@***.***>
 Cc: Subscribed ***@***.***>
 Subject: [SELinuxProject/selinux] More robust ausearch time input (#135)

 Depending on what locale you were using, you may have time that would show
 AM or PM.
 This would cause the time to be incorrect on noon and midnight rollovers. This
 change allows all the output of strptime's %x and %X to be captured and provided
 to ausearch.

 ________________________________


 You can view, comment on, or merge this pull request online at:


   #135


 Commit Summary


 *	More robust ausearch time input


 File Changes


 *	M python/sepolicy/sepolicy/templates/script.py
 <https://github.com/SELinuxProject/selinux/pull/135/files#diff-0>  (5)


 Patch Links:


 *	https://github.com/SELinuxProject/selinux/pull/135.patch
 *	https://github.com/SELinuxProject/selinux/pull/135.diff

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#135> , or mute the thread
 <https://github.com/notifications/unsubscribe-
 auth/AQ7bB24OkQ8Hsoz5bHQK3BrqJpP3_dDzks5vWGO7gaJpZM4bsRGJ> .
 <https://github.com/notifications/beacon/AQ7bB8yuhNcg0XDX77wT-
 f6Wn5IZAfYlks5vWGO7gaJpZM4bsRGJ.gif>",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,135,2019-03-13T02:34:33Z,,2019-06-07T14:54:59Z,OPEN,False,3,2,1,https://github.com/kruton,More robust ausearch time input,1,['bug'],https://github.com/SELinuxProject/selinux/pull/135,https://github.com/kruton,4,https://github.com/SELinuxProject/selinux/pull/135#issuecomment-472431052,"Depending on what locale you were using, you may have time that would show AM or PM.
This would cause the time to be incorrect on noon and midnight rollovers. This change allows
all the output of strptime's %x and %X to be captured and provided to ausearch.","No, I was just annoyed when the time flipped from AM to PM.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,135,2019-03-13T02:34:33Z,,2019-06-07T14:54:59Z,OPEN,False,3,2,1,https://github.com/kruton,More robust ausearch time input,1,['bug'],https://github.com/SELinuxProject/selinux/pull/135,https://github.com/williamcroberts,5,https://github.com/SELinuxProject/selinux/pull/135#issuecomment-472979918,"Depending on what locale you were using, you may have time that would show AM or PM.
This would cause the time to be incorrect on noon and midnight rollovers. This change allows
all the output of strptime's %x and %X to be captured and provided to ausearch.",Can you send this patch out to the list?,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,135,2019-03-13T02:34:33Z,,2019-06-07T14:54:59Z,OPEN,False,3,2,1,https://github.com/kruton,More robust ausearch time input,1,['bug'],https://github.com/SELinuxProject/selinux/pull/135,https://github.com/bachradsusi,6,https://github.com/SELinuxProject/selinux/pull/135#issuecomment-499916803,"Depending on what locale you were using, you may have time that would show AM or PM.
This would cause the time to be incorrect on noon and midnight rollovers. This change allows
all the output of strptime's %x and %X to be captured and provided to ausearch.","@kruton The patch needs to be sent to selinux@vger.kernel.org for review. I can do it for you. But I'd like to ask you to add Signed-off-by: line (git commit -s ...) to the description, see
git log and https://developercertificate.org/",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,136,2019-03-13T17:29:52Z,2019-09-13T17:47:45Z,2020-06-09T12:22:13Z,CLOSED,False,106,20,4,https://github.com/stephensmalley,Restorecon: factor out a lookup helper for context matches,1,[],https://github.com/SELinuxProject/selinux/pull/136,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/136,"We used to hash the file_context and skip the restorecon on the top
level directory if the hash doesn't change. But the file_context might
change after an update; and some users experienced long restorecon
time as they have lots of files under directories like /data/media.
Therefore, we try to skip unnecessary restores if the file context
relates to the given directory doesn't change.
This CL is the first step that factors out a lookup helper function
and returns an array of matched pointers instead of a single one.
The old loopup_common function is then modified to take the first
element in the array.
This change has already been submitted in android selinux branch. And
porting it upstream will make these two branches more consistent and
save some work for the future merges.
Signed-off-by: Tianjie Xu xunchang@google.com","We used to hash the file_context and skip the restorecon on the top
level directory if the hash doesn't change. But the file_context might
change after an update; and some users experienced long restorecon
time as they have lots of files under directories like /data/media.
Therefore, we try to skip unnecessary restores if the file context
relates to the given directory doesn't change.
This CL is the first step that factors out a lookup helper function
and returns an array of matched pointers instead of a single one.
The old loopup_common function is then modified to take the first
element in the array.
This change has already been submitted in android selinux branch. And
porting it upstream will make these two branches more consistent and
save some work for the future merges.
Signed-off-by: Tianjie Xu xunchang@google.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,136,2019-03-13T17:29:52Z,2019-09-13T17:47:45Z,2020-06-09T12:22:13Z,CLOSED,False,106,20,4,https://github.com/stephensmalley,Restorecon: factor out a lookup helper for context matches,1,[],https://github.com/SELinuxProject/selinux/pull/136,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/136#issuecomment-472530591,"We used to hash the file_context and skip the restorecon on the top
level directory if the hash doesn't change. But the file_context might
change after an update; and some users experienced long restorecon
time as they have lots of files under directories like /data/media.
Therefore, we try to skip unnecessary restores if the file context
relates to the given directory doesn't change.
This CL is the first step that factors out a lookup helper function
and returns an array of matched pointers instead of a single one.
The old loopup_common function is then modified to take the first
element in the array.
This change has already been submitted in android selinux branch. And
porting it upstream will make these two branches more consistent and
save some work for the future merges.
Signed-off-by: Tianjie Xu xunchang@google.com",Possibly defer until after 2.9 release,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,139,2019-03-21T08:23:56Z,2019-03-26T22:53:26Z,2019-03-27T14:35:38Z,CLOSED,False,1,11,1,https://github.com/bigon,restorecond: Do not link against libpcre,1,[],https://github.com/SELinuxProject/selinux/pull/139,https://github.com/bigon,1,https://github.com/SELinuxProject/selinux/pull/139,"For some reasons, restorecond was explicitly linking against libpcre but
the code is not using any of its symbols
Closes: #137","For some reasons, restorecond was explicitly linking against libpcre but
the code is not using any of its symbols
Closes: #137",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,139,2019-03-21T08:23:56Z,2019-03-26T22:53:26Z,2019-03-27T14:35:38Z,CLOSED,False,1,11,1,https://github.com/bigon,restorecond: Do not link against libpcre,1,[],https://github.com/SELinuxProject/selinux/pull/139,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/139#issuecomment-475161971,"For some reasons, restorecond was explicitly linking against libpcre but
the code is not using any of its symbols
Closes: #137",Please send the patch for review to the SELinux mailing list at selinux@vger.kernel.org,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,139,2019-03-21T08:23:56Z,2019-03-26T22:53:26Z,2019-03-27T14:35:38Z,CLOSED,False,1,11,1,https://github.com/bigon,restorecond: Do not link against libpcre,1,[],https://github.com/SELinuxProject/selinux/pull/139,https://github.com/fishilico,3,https://github.com/SELinuxProject/selinux/pull/139#issuecomment-476884047,"For some reasons, restorecond was explicitly linking against libpcre but
the code is not using any of its symbols
Closes: #137","Merged as 42f73af.
Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,142,2019-04-05T19:03:57Z,2019-04-09T13:51:03Z,2019-04-09T13:51:03Z,MERGED,True,154,1,8,https://github.com/williamcroberts,Add security_validatetrans support,1,[],https://github.com/SELinuxProject/selinux/pull/142,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/142,"It seems validatetrans support was never added to libselinux, despite being added to
selinuxfs in kernel version 4.5
There is a utility to test, however the targeted policy has no validatetrans rules so some must be added:
$ cat validatetrans.cil
(mlsvalidatetrans db_table (and (or (or (or (eq l1 l2) (and (eq t3 unconfined_t) (domby l1 l2))) (and (eq t3 unconfined_t) (dom l1 l2))) (and (eq t3 unconfined_t) (incomp l1 l2))) (or (or (or (eq l1 h2) (and (eq t3 unconfined_t) (domby h1 h2))) (and (eq t3 unconfined_t) (dom h1 h2))) (and (eq t3 unconfined_t) (incomp h1 h2)))))
$ sudo semodule -i validatetrans.cil
$ ./validatetrans system_u:system_r:kernel_t:s0 system_u:system_r:init_t:s0:c0 db_table system_u:system_r: # invalid context here
opening /sys/fs/selinux/validatetrans
security_validatetrans returned -1 errno: Invalid argument
$ ./validatetrans system_u:system_r:kernel_t:s0 system_u:system_r:init_t:s0:c0 db_table system_u:system_r:init_t:s0
opening /sys/fs/selinux/validatetrans
security_validatetrans returned -1 errno: Operation not permitted
$ ./validatetrans system_u:system_r:kernel_t:s0 system_u:system_r:init_t:s0:c0 db_table system_u:system_r:unconfined_t:s0
opening /sys/fs/selinux/validatetrans
security_validatetrans returned 0 errno: Success
Signed-off-by: Joshua Brindle joshua.brindle@crunchydata.com","It seems validatetrans support was never added to libselinux, despite being added to
selinuxfs in kernel version 4.5
There is a utility to test, however the targeted policy has no validatetrans rules so some must be added:
$ cat validatetrans.cil
(mlsvalidatetrans db_table (and (or (or (or (eq l1 l2) (and (eq t3 unconfined_t) (domby l1 l2))) (and (eq t3 unconfined_t) (dom l1 l2))) (and (eq t3 unconfined_t) (incomp l1 l2))) (or (or (or (eq l1 h2) (and (eq t3 unconfined_t) (domby h1 h2))) (and (eq t3 unconfined_t) (dom h1 h2))) (and (eq t3 unconfined_t) (incomp h1 h2)))))
$ sudo semodule -i validatetrans.cil
$ ./validatetrans system_u:system_r:kernel_t:s0 system_u:system_r:init_t:s0:c0 db_table system_u:system_r: # invalid context here
opening /sys/fs/selinux/validatetrans
security_validatetrans returned -1 errno: Invalid argument
$ ./validatetrans system_u:system_r:kernel_t:s0 system_u:system_r:init_t:s0:c0 db_table system_u:system_r:init_t:s0
opening /sys/fs/selinux/validatetrans
security_validatetrans returned -1 errno: Operation not permitted
$ ./validatetrans system_u:system_r:kernel_t:s0 system_u:system_r:init_t:s0:c0 db_table system_u:system_r:unconfined_t:s0
opening /sys/fs/selinux/validatetrans
security_validatetrans returned 0 errno: Success
Signed-off-by: Joshua Brindle joshua.brindle@crunchydata.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,144,2019-04-16T22:36:22Z,2019-04-23T12:10:20Z,2019-04-23T12:10:27Z,CLOSED,False,33,5,3,https://github.com/garyttierney,checkmodule: allow specifying module policy version,2,[],https://github.com/SELinuxProject/selinux/pull/144,https://github.com/garyttierney,1,https://github.com/SELinuxProject/selinux/pull/144,"Currently checkpolicy can produce binary policies for earlier policy versions
to provide support for building policies on one machine and loading/analyzing
them on another machine with an earlier version of the kernel or libsepol,
respectively. However, checkmodule was lacking this capability.
This commit adds an identical -c flag that can be passed to checkmodule that
will build a modular policy file of the specified version.
Additionally, I updated dismod to display the policy version since there was no way to get at this information without debug logging in the userspace tools (that I know of).
> $ cat > test.te <<EOF
module test 1.0;

require {
    type domain;
    type file_type;
    class file { read write };
}

allow domain file_type : file { read write };
EOF
> $ obj/usr/bin/checkmodule -m -M -c 10 -o test.mod test.te
> $ checkpolicy/test/dismod test.mod
Reading policy...
... snip ...
Binary policy module file loaded.
Module name: test
Module version: 1.0
Policy version: 10

This patch relates to an issue that was reported by a user in the #selinux Freenode IRC channel who had a later version of libsepol on the machine that was building their policy modules.","Currently checkpolicy can produce binary policies for earlier policy versions
to provide support for building policies on one machine and loading/analyzing
them on another machine with an earlier version of the kernel or libsepol,
respectively. However, checkmodule was lacking this capability.
This commit adds an identical -c flag that can be passed to checkmodule that
will build a modular policy file of the specified version.
Additionally, I updated dismod to display the policy version since there was no way to get at this information without debug logging in the userspace tools (that I know of).
> $ cat > test.te <<EOF
module test 1.0;

require {
    type domain;
    type file_type;
    class file { read write };
}

allow domain file_type : file { read write };
EOF
> $ obj/usr/bin/checkmodule -m -M -c 10 -o test.mod test.te
> $ checkpolicy/test/dismod test.mod
Reading policy...
... snip ...
Binary policy module file loaded.
Module name: test
Module version: 1.0
Policy version: 10

This patch relates to an issue that was reported by a user in the #selinux Freenode IRC channel who had a later version of libsepol on the machine that was building their policy modules.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,144,2019-04-16T22:36:22Z,2019-04-23T12:10:20Z,2019-04-23T12:10:27Z,CLOSED,False,33,5,3,https://github.com/garyttierney,checkmodule: allow specifying module policy version,2,[],https://github.com/SELinuxProject/selinux/pull/144,https://github.com/garyttierney,2,https://github.com/SELinuxProject/selinux/pull/144#issuecomment-483870145,"Currently checkpolicy can produce binary policies for earlier policy versions
to provide support for building policies on one machine and loading/analyzing
them on another machine with an earlier version of the kernel or libsepol,
respectively. However, checkmodule was lacking this capability.
This commit adds an identical -c flag that can be passed to checkmodule that
will build a modular policy file of the specified version.
Additionally, I updated dismod to display the policy version since there was no way to get at this information without debug logging in the userspace tools (that I know of).
> $ cat > test.te <<EOF
module test 1.0;

require {
    type domain;
    type file_type;
    class file { read write };
}

allow domain file_type : file { read write };
EOF
> $ obj/usr/bin/checkmodule -m -M -c 10 -o test.mod test.te
> $ checkpolicy/test/dismod test.mod
Reading policy...
... snip ...
Binary policy module file loaded.
Module name: test
Module version: 1.0
Policy version: 10

This patch relates to an issue that was reported by a user in the #selinux Freenode IRC channel who had a later version of libsepol on the machine that was building their policy modules.",I've seen a bunch of PRs come in recently so I'm not sure what the current preferred method of receiving patches is; would it be better to send these changes to the list instead?,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,144,2019-04-16T22:36:22Z,2019-04-23T12:10:20Z,2019-04-23T12:10:27Z,CLOSED,False,33,5,3,https://github.com/garyttierney,checkmodule: allow specifying module policy version,2,[],https://github.com/SELinuxProject/selinux/pull/144,None,3,https://github.com/SELinuxProject/selinux/pull/144#issuecomment-484028791,"Currently checkpolicy can produce binary policies for earlier policy versions
to provide support for building policies on one machine and loading/analyzing
them on another machine with an earlier version of the kernel or libsepol,
respectively. However, checkmodule was lacking this capability.
This commit adds an identical -c flag that can be passed to checkmodule that
will build a modular policy file of the specified version.
Additionally, I updated dismod to display the policy version since there was no way to get at this information without debug logging in the userspace tools (that I know of).
> $ cat > test.te <<EOF
module test 1.0;

require {
    type domain;
    type file_type;
    class file { read write };
}

allow domain file_type : file { read write };
EOF
> $ obj/usr/bin/checkmodule -m -M -c 10 -o test.mod test.te
> $ checkpolicy/test/dismod test.mod
Reading policy...
... snip ...
Binary policy module file loaded.
Module name: test
Module version: 1.0
Policy version: 10

This patch relates to an issue that was reported by a user in the #selinux Freenode IRC channel who had a later version of libsepol on the machine that was building their policy modules.","nit: type domain; and type file_type; in description are wrong. should be attribute domain, file_type; , not sure why the compiler allows this.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,144,2019-04-16T22:36:22Z,2019-04-23T12:10:20Z,2019-04-23T12:10:27Z,CLOSED,False,33,5,3,https://github.com/garyttierney,checkmodule: allow specifying module policy version,2,[],https://github.com/SELinuxProject/selinux/pull/144,None,4,https://github.com/SELinuxProject/selinux/pull/144#issuecomment-484035069,"Currently checkpolicy can produce binary policies for earlier policy versions
to provide support for building policies on one machine and loading/analyzing
them on another machine with an earlier version of the kernel or libsepol,
respectively. However, checkmodule was lacking this capability.
This commit adds an identical -c flag that can be passed to checkmodule that
will build a modular policy file of the specified version.
Additionally, I updated dismod to display the policy version since there was no way to get at this information without debug logging in the userspace tools (that I know of).
> $ cat > test.te <<EOF
module test 1.0;

require {
    type domain;
    type file_type;
    class file { read write };
}

allow domain file_type : file { read write };
EOF
> $ obj/usr/bin/checkmodule -m -M -c 10 -o test.mod test.te
> $ checkpolicy/test/dismod test.mod
Reading policy...
... snip ...
Binary policy module file loaded.
Module name: test
Module version: 1.0
Policy version: 10

This patch relates to an issue that was reported by a user in the #selinux Freenode IRC channel who had a later version of libsepol on the machine that was building their policy modules.",I suppose the compiler does not care.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,144,2019-04-16T22:36:22Z,2019-04-23T12:10:20Z,2019-04-23T12:10:27Z,CLOSED,False,33,5,3,https://github.com/garyttierney,checkmodule: allow specifying module policy version,2,[],https://github.com/SELinuxProject/selinux/pull/144,https://github.com/garyttierney,5,https://github.com/SELinuxProject/selinux/pull/144#issuecomment-484052549,"Currently checkpolicy can produce binary policies for earlier policy versions
to provide support for building policies on one machine and loading/analyzing
them on another machine with an earlier version of the kernel or libsepol,
respectively. However, checkmodule was lacking this capability.
This commit adds an identical -c flag that can be passed to checkmodule that
will build a modular policy file of the specified version.
Additionally, I updated dismod to display the policy version since there was no way to get at this information without debug logging in the userspace tools (that I know of).
> $ cat > test.te <<EOF
module test 1.0;

require {
    type domain;
    type file_type;
    class file { read write };
}

allow domain file_type : file { read write };
EOF
> $ obj/usr/bin/checkmodule -m -M -c 10 -o test.mod test.te
> $ checkpolicy/test/dismod test.mod
Reading policy...
... snip ...
Binary policy module file loaded.
Module name: test
Module version: 1.0
Policy version: 10

This patch relates to an issue that was reported by a user in the #selinux Freenode IRC channel who had a later version of libsepol on the machine that was building their policy modules.","Oops, you're right -- we're not linking the module against anything, which is why it's allowed.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,144,2019-04-16T22:36:22Z,2019-04-23T12:10:20Z,2019-04-23T12:10:27Z,CLOSED,False,33,5,3,https://github.com/garyttierney,checkmodule: allow specifying module policy version,2,[],https://github.com/SELinuxProject/selinux/pull/144,https://github.com/garyttierney,6,https://github.com/SELinuxProject/selinux/pull/144#issuecomment-485775926,"Currently checkpolicy can produce binary policies for earlier policy versions
to provide support for building policies on one machine and loading/analyzing
them on another machine with an earlier version of the kernel or libsepol,
respectively. However, checkmodule was lacking this capability.
This commit adds an identical -c flag that can be passed to checkmodule that
will build a modular policy file of the specified version.
Additionally, I updated dismod to display the policy version since there was no way to get at this information without debug logging in the userspace tools (that I know of).
> $ cat > test.te <<EOF
module test 1.0;

require {
    type domain;
    type file_type;
    class file { read write };
}

allow domain file_type : file { read write };
EOF
> $ obj/usr/bin/checkmodule -m -M -c 10 -o test.mod test.te
> $ checkpolicy/test/dismod test.mod
Reading policy...
... snip ...
Binary policy module file loaded.
Module name: test
Module version: 1.0
Policy version: 10

This patch relates to an issue that was reported by a user in the #selinux Freenode IRC channel who had a later version of libsepol on the machine that was building their policy modules.",Closed by 4984a75 and ac2a3fb.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,145,2019-04-30T08:17:42Z,2019-05-28T11:50:35Z,2019-05-28T11:51:41Z,MERGED,True,12,9,2,https://github.com/darktemplarbasealt,Update man pages translation by Olesya Gerasimenko,1,[],https://github.com/SELinuxProject/selinux/pull/145,https://github.com/darktemplarbasealt,1,https://github.com/SELinuxProject/selinux/pull/145,"Signed-off-by: Olesya Gerasimenko gammaray@basealt.ru
Signed-off-by: Aleksei Nikiforov darktemplar@basealt.ru","Signed-off-by: Olesya Gerasimenko gammaray@basealt.ru
Signed-off-by: Aleksei Nikiforov darktemplar@basealt.ru",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,145,2019-04-30T08:17:42Z,2019-05-28T11:50:35Z,2019-05-28T11:51:41Z,MERGED,True,12,9,2,https://github.com/darktemplarbasealt,Update man pages translation by Olesya Gerasimenko,1,[],https://github.com/SELinuxProject/selinux/pull/145,https://github.com/darktemplarbasealt,2,https://github.com/SELinuxProject/selinux/pull/145#issuecomment-489999256,"Signed-off-by: Olesya Gerasimenko gammaray@basealt.ru
Signed-off-by: Aleksei Nikiforov darktemplar@basealt.ru",Can someone review and merge this request please?,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,145,2019-04-30T08:17:42Z,2019-05-28T11:50:35Z,2019-05-28T11:51:41Z,MERGED,True,12,9,2,https://github.com/darktemplarbasealt,Update man pages translation by Olesya Gerasimenko,1,[],https://github.com/SELinuxProject/selinux/pull/145,None,3,https://github.com/SELinuxProject/selinux/pull/145#issuecomment-490055562,"Signed-off-by: Olesya Gerasimenko gammaray@basealt.ru
Signed-off-by: Aleksei Nikiforov darktemplar@basealt.ru",I verified this with Google Translate: Looks good.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,145,2019-04-30T08:17:42Z,2019-05-28T11:50:35Z,2019-05-28T11:51:41Z,MERGED,True,12,9,2,https://github.com/darktemplarbasealt,Update man pages translation by Olesya Gerasimenko,1,[],https://github.com/SELinuxProject/selinux/pull/145,https://github.com/darktemplarbasealt,4,https://github.com/SELinuxProject/selinux/pull/145#issuecomment-496439657,"Signed-off-by: Olesya Gerasimenko gammaray@basealt.ru
Signed-off-by: Aleksei Nikiforov darktemplar@basealt.ru","I verified this with Google Translate: Looks good.

Could this change be merged in that case?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,145,2019-04-30T08:17:42Z,2019-05-28T11:50:35Z,2019-05-28T11:51:41Z,MERGED,True,12,9,2,https://github.com/darktemplarbasealt,Update man pages translation by Olesya Gerasimenko,1,[],https://github.com/SELinuxProject/selinux/pull/145,https://github.com/darktemplarbasealt,5,https://github.com/SELinuxProject/selinux/pull/145#issuecomment-496484264,"Signed-off-by: Olesya Gerasimenko gammaray@basealt.ru
Signed-off-by: Aleksei Nikiforov darktemplar@basealt.ru",Thank you,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,146,2019-05-09T16:47:51Z,2019-05-16T00:36:53Z,2019-05-16T00:36:53Z,CLOSED,False,60,125,1,https://github.com/williamcroberts,[TEST] libselinux: Eliminate use of security_compute_user(),1,[],https://github.com/SELinuxProject/selinux/pull/146,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/146,"get_ordered_context_list() code used to ask the kernel to compute the complete
set of reachable contexts using /sys/fs/selinux/user aka
security_compute_user(). This set can be so huge so that it doesn't fit into a
kernel page and security_compute_user() fails. Even if it doesn't fail,
get_ordered_context_list() throws away the vast majority of the returned
contexts because they don't match anything in
/etc/selinux/targeted/contexts/default_contexts or
/etc/selinux/targeted/contexts/users/
get_ordered_context_list() is rewritten to compute set of contexts based on
/etc/selinux/targeted/contexts/users/ and
/etc/selinux/targeted/contexts/default_contexts files and to return only valid
contexts, using security_check_context(), from this set.
Fixes: #28
Signed-off-by: Petr Lautrbach plautrba@redhat.com","get_ordered_context_list() code used to ask the kernel to compute the complete
set of reachable contexts using /sys/fs/selinux/user aka
security_compute_user(). This set can be so huge so that it doesn't fit into a
kernel page and security_compute_user() fails. Even if it doesn't fail,
get_ordered_context_list() throws away the vast majority of the returned
contexts because they don't match anything in
/etc/selinux/targeted/contexts/default_contexts or
/etc/selinux/targeted/contexts/users/
get_ordered_context_list() is rewritten to compute set of contexts based on
/etc/selinux/targeted/contexts/users/ and
/etc/selinux/targeted/contexts/default_contexts files and to return only valid
contexts, using security_check_context(), from this set.
Fixes: #28
Signed-off-by: Petr Lautrbach plautrba@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,147,2019-05-10T13:54:52Z,2019-05-16T00:35:45Z,2019-05-16T00:35:45Z,MERGED,True,34,34,10,https://github.com/UntoSten,Unify code style to preserve my sanity,2,[],https://github.com/SELinuxProject/selinux/pull/147,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/147,"Sorry, this patch contributes very little, but it is essential to preserve my sanity when reading the code.","Sorry, this patch contributes very little, but it is essential to preserve my sanity when reading the code.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,147,2019-05-10T13:54:52Z,2019-05-16T00:35:45Z,2019-05-16T00:35:45Z,MERGED,True,34,34,10,https://github.com/UntoSten,Unify code style to preserve my sanity,2,[],https://github.com/SELinuxProject/selinux/pull/147,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/147#issuecomment-491312928,"Sorry, this patch contributes very little, but it is essential to preserve my sanity when reading the code.","Please submit as a patch to selinux@vger.kernel.org.  If that poses a problem for you, then ask and perhaps someone else can submit it on your behalf.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,147,2019-05-10T13:54:52Z,2019-05-16T00:35:45Z,2019-05-16T00:35:45Z,MERGED,True,34,34,10,https://github.com/UntoSten,Unify code style to preserve my sanity,2,[],https://github.com/SELinuxProject/selinux/pull/147,https://github.com/UntoSten,3,https://github.com/SELinuxProject/selinux/pull/147#issuecomment-491378102,"Sorry, this patch contributes very little, but it is essential to preserve my sanity when reading the code.","Sorry Stephen, I was too hasty in creating these pull requests. I will do as you suggest. Thanks.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,148,2019-05-10T17:14:02Z,2019-05-16T00:34:44Z,2019-05-16T00:34:44Z,MERGED,True,13,13,11,https://github.com/UntoSten,Global replace exit(0) with more readable exit(EXIT_SUCCESS),1,[],https://github.com/SELinuxProject/selinux/pull/148,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/148,"Another trivial patch to improve code readability. I did not replace exit(1) with EXIT_FAILURE, because some of the code uses exit(2), exit(3) etc, so preferred to keep the raw integers there.","Another trivial patch to improve code readability. I did not replace exit(1) with EXIT_FAILURE, because some of the code uses exit(2), exit(3) etc, so preferred to keep the raw integers there.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,148,2019-05-10T17:14:02Z,2019-05-16T00:34:44Z,2019-05-16T00:34:44Z,MERGED,True,13,13,11,https://github.com/UntoSten,Global replace exit(0) with more readable exit(EXIT_SUCCESS),1,[],https://github.com/SELinuxProject/selinux/pull/148,https://github.com/UntoSten,2,https://github.com/SELinuxProject/selinux/pull/148#issuecomment-491385088,"Another trivial patch to improve code readability. I did not replace exit(1) with EXIT_FAILURE, because some of the code uses exit(2), exit(3) etc, so preferred to keep the raw integers there.",Sent this to the mailing list as well.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,149,2019-05-10T17:56:05Z,2019-05-16T00:36:19Z,2019-05-16T00:36:19Z,MERGED,True,5,0,1,https://github.com/UntoSten,Check strdup() failure,1,[],https://github.com/SELinuxProject/selinux/pull/149,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/149,Paranoia but should be done,Paranoia but should be done,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,149,2019-05-10T17:56:05Z,2019-05-16T00:36:19Z,2019-05-16T00:36:19Z,MERGED,True,5,0,1,https://github.com/UntoSten,Check strdup() failure,1,[],https://github.com/SELinuxProject/selinux/pull/149,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/149#issuecomment-491381872,Paranoia but should be done,"I didn't see this hit the mailing list, are you sending it that way or did I miss it?
http://vger.kernel.org/vger-lists.html#selinux",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,149,2019-05-10T17:56:05Z,2019-05-16T00:36:19Z,2019-05-16T00:36:19Z,MERGED,True,5,0,1,https://github.com/UntoSten,Check strdup() failure,1,[],https://github.com/SELinuxProject/selinux/pull/149,https://github.com/UntoSten,3,https://github.com/SELinuxProject/selinux/pull/149#issuecomment-491384849,Paranoia but should be done,"Sorry, I just sent this to the mailing list...",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,151,2019-05-18T16:26:10Z,2019-05-28T11:51:29Z,2019-05-28T11:51:29Z,MERGED,True,8,8,1,https://github.com/UntoSten,Trivial style improvements,1,[],https://github.com/SELinuxProject/selinux/pull/151,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/151,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,152,2019-05-18T16:28:53Z,2019-05-28T11:51:44Z,2019-05-28T11:51:44Z,MERGED,True,5,5,4,https://github.com/UntoSten,Trivial style fixes,1,[],https://github.com/SELinuxProject/selinux/pull/152,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/152,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,154,2019-06-12T14:24:48Z,2019-06-19T16:03:04Z,2019-06-19T16:03:04Z,MERGED,True,1,2,1,https://github.com/UntoSten,Remove unneeded int,2,[],https://github.com/SELinuxProject/selinux/pull/154,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/154,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,155,2019-06-12T14:26:30Z,2019-06-19T16:03:13Z,2019-06-19T16:03:14Z,MERGED,True,0,3,1,https://github.com/UntoSten,Remove redundant if,2,[],https://github.com/SELinuxProject/selinux/pull/155,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/155,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,156,2019-06-12T14:27:00Z,2019-06-19T16:03:21Z,2019-06-19T16:03:21Z,MERGED,True,4,4,1,https://github.com/UntoSten,More accurate error msgs,2,[],https://github.com/SELinuxProject/selinux/pull/156,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/156,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,157,2019-06-12T14:27:47Z,2019-09-30T13:09:10Z,2019-09-30T13:09:10Z,CLOSED,False,2,2,1,https://github.com/UntoSten,Fix incorrect indentation,2,[],https://github.com/SELinuxProject/selinux/pull/157,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/157,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,158,2019-06-12T14:28:12Z,2019-07-29T22:48:42Z,2019-07-29T22:48:42Z,CLOSED,False,1,1,1,https://github.com/UntoSten,Trivial typo fix,2,[],https://github.com/SELinuxProject/selinux/pull/158,https://github.com/UntoSten,1,https://github.com/SELinuxProject/selinux/pull/158,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,158,2019-06-12T14:28:12Z,2019-07-29T22:48:42Z,2019-07-29T22:48:42Z,CLOSED,False,1,1,1,https://github.com/UntoSten,Trivial typo fix,2,[],https://github.com/SELinuxProject/selinux/pull/158,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/158#issuecomment-516191120,,"Hello, after a discussion on SELinux mailing list, the comment with a typo got removed with the removal of the legacy local boolean and user code: c3f9492#diff-f4653cca6b3a0a8c8512640e4a8f68eeL13
This pull request is therefore no longer applicable.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,159,2019-06-12T18:48:22Z,2019-06-19T16:01:49Z,2019-06-19T16:01:49Z,MERGED,True,6831,10,32,https://github.com/williamcroberts,Test cases,11,[],https://github.com/SELinuxProject/selinux/pull/159,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/159,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,160,2019-06-14T20:15:51Z,2019-06-27T18:27:09Z,2020-06-09T12:22:26Z,CLOSED,False,699,202,16,https://github.com/stephensmalley,Sehash,4,[],https://github.com/SELinuxProject/selinux/pull/160,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/160,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,161,2019-06-14T20:20:15Z,2019-06-27T18:27:51Z,2020-06-09T12:21:10Z,CLOSED,False,46,1027,12,https://github.com/stephensmalley,selinux: Remove legacy local boolean and user code,1,[],https://github.com/SELinuxProject/selinux/pull/161,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/161,"Remove legacy local boolean and user code, and to preserve API/ABI
compatibility the following functions int values should be set to '0'
as they are no longer used:
selinux_mkload_policy(int preservebools)
security_set_boolean_list(.... int permanent)
and the following are now no-op:
security_load_booleans(char *path) - return '0'
selinux_booleans_path(void) - return NULL
selinux_users_path(void) - return NULL
Also ""SETLOCALDEFS"" removed from SELinux config file and code.
Signed-off-by: Richard Haines richard_c_haines@btinternet.com","Remove legacy local boolean and user code, and to preserve API/ABI
compatibility the following functions int values should be set to '0'
as they are no longer used:
selinux_mkload_policy(int preservebools)
security_set_boolean_list(.... int permanent)
and the following are now no-op:
security_load_booleans(char *path) - return '0'
selinux_booleans_path(void) - return NULL
selinux_users_path(void) - return NULL
Also ""SETLOCALDEFS"" removed from SELinux config file and code.
Signed-off-by: Richard Haines richard_c_haines@btinternet.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,161,2019-06-14T20:20:15Z,2019-06-27T18:27:51Z,2020-06-09T12:21:10Z,CLOSED,False,46,1027,12,https://github.com/stephensmalley,selinux: Remove legacy local boolean and user code,1,[],https://github.com/SELinuxProject/selinux/pull/161,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/161#issuecomment-506459141,"Remove legacy local boolean and user code, and to preserve API/ABI
compatibility the following functions int values should be set to '0'
as they are no longer used:
selinux_mkload_policy(int preservebools)
security_set_boolean_list(.... int permanent)
and the following are now no-op:
security_load_booleans(char *path) - return '0'
selinux_booleans_path(void) - return NULL
selinux_users_path(void) - return NULL
Also ""SETLOCALDEFS"" removed from SELinux config file and code.
Signed-off-by: Richard Haines richard_c_haines@btinternet.com",Obsoleted by new patch version,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,162,2019-06-14T20:20:40Z,2019-07-30T09:15:36Z,2020-06-09T12:20:09Z,CLOSED,False,33,30,3,https://github.com/stephensmalley,libselinux: Use Python distutils to install SELinux python bindings,1,[],https://github.com/SELinuxProject/selinux/pull/162,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/162,"Follow officially documented way how to build C extension modules using
distutils - https://docs.python.org/3.8/extending/building.html#building
Fixes:

https://bugzilla.redhat.com/show_bug.cgi?id=1715589 - selinux python module
fails to load when it's built using SWIG-4.0:




import selinux
Traceback (most recent call last):
File """", line 1, in 
File ""/usr/lib64/python3.7/site-packages/selinux/init.py"", line 13, in 
from . import _selinux
ImportError: cannot import name '_selinux' from 'selinux' (/usr/lib64/python3.7/site-packages/selinux/init.py)



SWIG-4.0 changed (again?) its behavior so that it uses: from . import _selinux
which looks for _selinux module in the same directory as where init.py is -
$(PYLIBDIR)/site-packages/selinux. But _selinux module is installed into
$(PYLIBDIR)/site-packages/ since a9604c3 (""libselinux: Change the location
of _selinux.so"").
On the other hand, the module can't be loaded when it's built using older SWIG.
I'd use a symlink from $(PYLIBDIR)/site-packages/selinux to
$(PYLIBDIR)/site-packages/ in order to fix that


https://bugzilla.redhat.com/show_bug.cgi?id=1715756 - audit2why python module
fails to build with Python 3.8


https://bugzilla.redhat.com/show_bug.cgi?id=1709576 - selinux python module
doesn't provide any Python metadata


Signed-off-by: Petr Lautrbach plautrba@redhat.com","Follow officially documented way how to build C extension modules using
distutils - https://docs.python.org/3.8/extending/building.html#building
Fixes:

https://bugzilla.redhat.com/show_bug.cgi?id=1715589 - selinux python module
fails to load when it's built using SWIG-4.0:




import selinux
Traceback (most recent call last):
File """", line 1, in 
File ""/usr/lib64/python3.7/site-packages/selinux/init.py"", line 13, in 
from . import _selinux
ImportError: cannot import name '_selinux' from 'selinux' (/usr/lib64/python3.7/site-packages/selinux/init.py)



SWIG-4.0 changed (again?) its behavior so that it uses: from . import _selinux
which looks for _selinux module in the same directory as where init.py is -
$(PYLIBDIR)/site-packages/selinux. But _selinux module is installed into
$(PYLIBDIR)/site-packages/ since a9604c3 (""libselinux: Change the location
of _selinux.so"").
On the other hand, the module can't be loaded when it's built using older SWIG.
I'd use a symlink from $(PYLIBDIR)/site-packages/selinux to
$(PYLIBDIR)/site-packages/ in order to fix that


https://bugzilla.redhat.com/show_bug.cgi?id=1715756 - audit2why python module
fails to build with Python 3.8


https://bugzilla.redhat.com/show_bug.cgi?id=1709576 - selinux python module
doesn't provide any Python metadata


Signed-off-by: Petr Lautrbach plautrba@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,162,2019-06-14T20:20:40Z,2019-07-30T09:15:36Z,2020-06-09T12:20:09Z,CLOSED,False,33,30,3,https://github.com/stephensmalley,libselinux: Use Python distutils to install SELinux python bindings,1,[],https://github.com/SELinuxProject/selinux/pull/162,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/162#issuecomment-516337001,"Follow officially documented way how to build C extension modules using
distutils - https://docs.python.org/3.8/extending/building.html#building
Fixes:

https://bugzilla.redhat.com/show_bug.cgi?id=1715589 - selinux python module
fails to load when it's built using SWIG-4.0:




import selinux
Traceback (most recent call last):
File """", line 1, in 
File ""/usr/lib64/python3.7/site-packages/selinux/init.py"", line 13, in 
from . import _selinux
ImportError: cannot import name '_selinux' from 'selinux' (/usr/lib64/python3.7/site-packages/selinux/init.py)



SWIG-4.0 changed (again?) its behavior so that it uses: from . import _selinux
which looks for _selinux module in the same directory as where init.py is -
$(PYLIBDIR)/site-packages/selinux. But _selinux module is installed into
$(PYLIBDIR)/site-packages/ since a9604c3 (""libselinux: Change the location
of _selinux.so"").
On the other hand, the module can't be loaded when it's built using older SWIG.
I'd use a symlink from $(PYLIBDIR)/site-packages/selinux to
$(PYLIBDIR)/site-packages/ in order to fix that


https://bugzilla.redhat.com/show_bug.cgi?id=1715756 - audit2why python module
fails to build with Python 3.8


https://bugzilla.redhat.com/show_bug.cgi?id=1709576 - selinux python module
doesn't provide any Python metadata


Signed-off-by: Petr Lautrbach plautrba@redhat.com",The patch was updated and merged - 2efa068 - https://lore.kernel.org/selinux/pjd4l3mezyk.fsf@redhat.com/T/#t,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,163,2019-06-17T17:53:06Z,2019-06-19T16:01:13Z,2019-06-19T16:01:13Z,MERGED,True,14,2,1,https://github.com/williamcroberts,libsepol fixes,2,[],https://github.com/SELinuxProject/selinux/pull/163,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/163,"8292fce  libsepol: Replace constant with sizeof()
bd396fb libsepol: Check strdup() failures","8292fce  libsepol: Replace constant with sizeof()
bd396fb libsepol: Check strdup() failures",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,163,2019-06-17T17:53:06Z,2019-06-19T16:01:13Z,2019-06-19T16:01:13Z,MERGED,True,14,2,1,https://github.com/williamcroberts,libsepol fixes,2,[],https://github.com/SELinuxProject/selinux/pull/163,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/163#issuecomment-502841684,"8292fce  libsepol: Replace constant with sizeof()
bd396fb libsepol: Check strdup() failures",whoops bad PR,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,164,2019-06-17T18:00:39Z,2019-06-19T16:01:25Z,2019-06-19T16:01:25Z,MERGED,True,3,0,1,https://github.com/williamcroberts,libsepol/cil: fix mlsconstrain segfault,1,[],https://github.com/SELinuxProject/selinux/pull/164,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/164,"Installing a cil module with invalid mlsconstrain syntax currently
results in a segfault. In the following module, the right-hand side of
the second operand of the OR is a list (mlstrustedobject):
$ cat test.cil
(class test (foo) )
(classorder (unordered test))
(mlsconstrain (test (foo))
(or
(dom h1 h2)
(eq t2 (mlstrustedobject))
)
)
$ sudo semodule -i test.cil
zsh: segmentation fault  sudo semodule -i test.cil
This syntax is invalid and should error accordingly, rather than
segfaulting. This patch provides this syntax error for the same module:
$ sudo semodule -i test.cil
t1, t2, r1, r2, u1, u2 cannot be used on the left side with a list on the right side
Bad expression tree for constraint
Bad constrain declaration at /var/lib/selinux/mls/tmp/modules/400/test/cil:4
semodule:  Failed!
Signed-off-by: Mike Palmiotto mike.palmiotto@crunchydata.com","Installing a cil module with invalid mlsconstrain syntax currently
results in a segfault. In the following module, the right-hand side of
the second operand of the OR is a list (mlstrustedobject):
$ cat test.cil
(class test (foo) )
(classorder (unordered test))
(mlsconstrain (test (foo))
(or
(dom h1 h2)
(eq t2 (mlstrustedobject))
)
)
$ sudo semodule -i test.cil
zsh: segmentation fault  sudo semodule -i test.cil
This syntax is invalid and should error accordingly, rather than
segfaulting. This patch provides this syntax error for the same module:
$ sudo semodule -i test.cil
t1, t2, r1, r2, u1, u2 cannot be used on the left side with a list on the right side
Bad expression tree for constraint
Bad constrain declaration at /var/lib/selinux/mls/tmp/modules/400/test/cil:4
semodule:  Failed!
Signed-off-by: Mike Palmiotto mike.palmiotto@crunchydata.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,168,2019-06-21T14:07:14Z,2019-06-25T14:11:02Z,2021-04-19T18:11:20Z,MERGED,True,460,4,14,https://github.com/jwcart2,Remove redundant rules when building policydb,4,[],https://github.com/SELinuxProject/selinux/pull/168,https://github.com/jwcart2,1,https://github.com/SELinuxProject/selinux/pull/168,"Changes in v4:

fix deallocation in error path in build_type_map()
fix leaked cond nodes
also update the man pages
use UINT32_C for 0xFFFFFFFF constant
squash in the RFC patches & drop the semodule patch
v3: https://lore.kernel.org/selinux/20190529073759.20548-1-omosnace@redhat.com/T/

Changes in v3:

fix bad patch squashing
rename secilc --optimize-policy option to --optimize (to be simpler
and consistent with checkpolicy and semodule)
v2: https://lore.kernel.org/selinux/20190528145912.13827-1-omosnace@redhat.com/T/

Changes in v2:

fix handling of dontaudit (AVTAB_DENY) rules
switch optimization from opt-out to opt-in everywhere
add a patch from jwcart2 that adds optimization support to
checkpolicy as well
add two RFC modifications (see log messages for details):

one improves the optimization to detect also rules covered by the
union of two or more other rules (on permission set level)
the other one drops libsemanage/semodule run-time enabling/
disabling of optimization in favor of a global config option
v1: https://lore.kernel.org/selinux/20190523102449.9621-1-omosnace@redhat.com/T/



This series implements an optional optimization step when building a
policydb via semodule or secilc, which identifies and removes rules that
are redundant -- i.e. they are already covered by a more general rule
based on the type attribute hierarchy.
Since the optimization might not always be useful (e.g. when care is
taken to not have redundant rules or when the attributes are
aggressively expanded) and might even drastically increase policy build
times under some cicumstances (for example with the DSSP standard policy
[1]), the optimization is applied only when requested explictly.
The optimization routine eliminates:

all allow/dontaudit/auditallow(/neverallow) rules (including xperm
variants) that are covered by another more general rule (or by a
union of other rules),
all conditional versions of the above rules that are covered by a
more general rule either in the unconditional table or in the same
branch of the same conditional.

The optimization doesn't process other rules, since they currently do
not support attributes. There is some room left for more precise
optimization of conditional rules, but it would likely bring only little
additional benefit.
Travis build passed: https://travis-ci.org/WOnder93/selinux/builds/545184071
Tested:

live on my Fedora 29 devel machine under normal use (no unusual AVCs
observed with the optimized policy loaded)
using: https://gitlab.com/omos/selinux-misc/blob/master/opt_test.sh

tests also xperm rules
doesn't test conditionals



[1] https://github.com/DefenSec/dssp2-standard
James Carter (1):
checkpolicy: add flag to enable policy optimization
Ondrej Mosnacek (3):
libsepol: add a function to optimize kernel policy
libsemanage: optionally optimize policy on rebuild
secilc: add flag to enable policy optimization","Changes in v4:

fix deallocation in error path in build_type_map()
fix leaked cond nodes
also update the man pages
use UINT32_C for 0xFFFFFFFF constant
squash in the RFC patches & drop the semodule patch
v3: https://lore.kernel.org/selinux/20190529073759.20548-1-omosnace@redhat.com/T/

Changes in v3:

fix bad patch squashing
rename secilc --optimize-policy option to --optimize (to be simpler
and consistent with checkpolicy and semodule)
v2: https://lore.kernel.org/selinux/20190528145912.13827-1-omosnace@redhat.com/T/

Changes in v2:

fix handling of dontaudit (AVTAB_DENY) rules
switch optimization from opt-out to opt-in everywhere
add a patch from jwcart2 that adds optimization support to
checkpolicy as well
add two RFC modifications (see log messages for details):

one improves the optimization to detect also rules covered by the
union of two or more other rules (on permission set level)
the other one drops libsemanage/semodule run-time enabling/
disabling of optimization in favor of a global config option
v1: https://lore.kernel.org/selinux/20190523102449.9621-1-omosnace@redhat.com/T/



This series implements an optional optimization step when building a
policydb via semodule or secilc, which identifies and removes rules that
are redundant -- i.e. they are already covered by a more general rule
based on the type attribute hierarchy.
Since the optimization might not always be useful (e.g. when care is
taken to not have redundant rules or when the attributes are
aggressively expanded) and might even drastically increase policy build
times under some cicumstances (for example with the DSSP standard policy
[1]), the optimization is applied only when requested explictly.
The optimization routine eliminates:

all allow/dontaudit/auditallow(/neverallow) rules (including xperm
variants) that are covered by another more general rule (or by a
union of other rules),
all conditional versions of the above rules that are covered by a
more general rule either in the unconditional table or in the same
branch of the same conditional.

The optimization doesn't process other rules, since they currently do
not support attributes. There is some room left for more precise
optimization of conditional rules, but it would likely bring only little
additional benefit.
Travis build passed: https://travis-ci.org/WOnder93/selinux/builds/545184071
Tested:

live on my Fedora 29 devel machine under normal use (no unusual AVCs
observed with the optimized policy loaded)
using: https://gitlab.com/omos/selinux-misc/blob/master/opt_test.sh

tests also xperm rules
doesn't test conditionals



[1] https://github.com/DefenSec/dssp2-standard
James Carter (1):
checkpolicy: add flag to enable policy optimization
Ondrej Mosnacek (3):
libsepol: add a function to optimize kernel policy
libsemanage: optionally optimize policy on rebuild
secilc: add flag to enable policy optimization",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,171,2019-07-16T16:27:01Z,2019-07-18T14:51:44Z,2019-07-18T14:51:45Z,MERGED,True,15,4,7,https://github.com/williamcroberts,Manpage updates,3,[],https://github.com/SELinuxProject/selinux/pull/171,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/171,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,172,2019-07-28T18:28:19Z,2019-07-29T21:35:20Z,2020-05-01T09:59:16Z,MERGED,True,699,202,16,https://github.com/fishilico,[v4] Update restorecon to support new digest scheme,4,[],https://github.com/SELinuxProject/selinux/pull/172,https://github.com/fishilico,1,https://github.com/SELinuxProject/selinux/pull/172,Here are the patches from https://lore.kernel.org/selinux/20190706152115.8490-1-richard_c_haines@btinternet.com/T/ with the required patches from https://lore.kernel.org/selinux/20190311222442.49824-1-xunchang@google.com/ and https://lore.kernel.org/selinux/20190417180955.136942-1-xunchang@google.com/,Here are the patches from https://lore.kernel.org/selinux/20190706152115.8490-1-richard_c_haines@btinternet.com/T/ with the required patches from https://lore.kernel.org/selinux/20190311222442.49824-1-xunchang@google.com/ and https://lore.kernel.org/selinux/20190417180955.136942-1-xunchang@google.com/,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,173,2019-08-05T20:15:44Z,2019-09-18T20:53:39Z,2019-09-18T20:53:43Z,CLOSED,False,712,712,208,https://github.com/fishilico,Fix many misspellings,1,[],https://github.com/SELinuxProject/selinux/pull/173,https://github.com/fishilico,1,https://github.com/SELinuxProject/selinux/pull/173,"Use codespell (https://github.com/codespell-project/codespell) in order to find many common misspellings that are present in English texts.
I am also sending this to the mailing list. I opened this Pull Request because I find it easier to review such changes with GitHub's syntax coloration than with patch's line-based diff format.","Use codespell (https://github.com/codespell-project/codespell) in order to find many common misspellings that are present in English texts.
I am also sending this to the mailing list. I opened this Pull Request because I find it easier to review such changes with GitHub's syntax coloration than with patch's line-based diff format.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,173,2019-08-05T20:15:44Z,2019-09-18T20:53:39Z,2019-09-18T20:53:43Z,CLOSED,False,712,712,208,https://github.com/fishilico,Fix many misspellings,1,[],https://github.com/SELinuxProject/selinux/pull/173,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/173#issuecomment-532862103,"Use codespell (https://github.com/codespell-project/codespell) in order to find many common misspellings that are present in English texts.
I am also sending this to the mailing list. I opened this Pull Request because I find it easier to review such changes with GitHub's syntax coloration than with patch's line-based diff format.",Merged as b550c0e,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,174,2019-08-12T18:31:37Z,2020-05-05T14:27:16Z,2020-05-05T14:27:16Z,CLOSED,False,4,3,2,https://github.com/anatol,Use quote include for files located in the local directory,1,[],https://github.com/SELinuxProject/selinux/pull/174,https://github.com/anatol,1,https://github.com/SELinuxProject/selinux/pull/174,"It fixes Android tool compilation error with the host toolchain:
selinux/libsepol/src/util.c:30:10: error: 'dso.h' file not found with  include; use ""quotes"" instead
#include <dso.h>
^~~~~~~
""dso.h""
Change-Id: I26b387cb1f1546003cf8fa156606008589ae5e40","It fixes Android tool compilation error with the host toolchain:
selinux/libsepol/src/util.c:30:10: error: 'dso.h' file not found with  include; use ""quotes"" instead
#include <dso.h>
^~~~~~~
""dso.h""
Change-Id: I26b387cb1f1546003cf8fa156606008589ae5e40",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,174,2019-08-12T18:31:37Z,2020-05-05T14:27:16Z,2020-05-05T14:27:16Z,CLOSED,False,4,3,2,https://github.com/anatol,Use quote include for files located in the local directory,1,[],https://github.com/SELinuxProject/selinux/pull/174,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/174#issuecomment-520979844,"It fixes Android tool compilation error with the host toolchain:
selinux/libsepol/src/util.c:30:10: error: 'dso.h' file not found with  include; use ""quotes"" instead
#include <dso.h>
^~~~~~~
""dso.h""
Change-Id: I26b387cb1f1546003cf8fa156606008589ae5e40","Hello, thank you for your bug report. In order for your patch to be merged, it needs to follow some rules that are written file CONTRIBUTING.md (https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md). More precisely:

Please send your patches to the mailing list selinux@vger.kernel.org (for example by using git format-patch and git send-email) in order for the developers to review and test it. If you have trouble doing this, I can forward your patch for you.
Please add a ""Signed-off-by:"" line to the commit message. This means your code meets the Developer's certificate of origin which is written in CONTRIBUTING.md.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,174,2019-08-12T18:31:37Z,2020-05-05T14:27:16Z,2020-05-05T14:27:16Z,CLOSED,False,4,3,2,https://github.com/anatol,Use quote include for files located in the local directory,1,[],https://github.com/SELinuxProject/selinux/pull/174,https://github.com/fishilico,3,https://github.com/SELinuxProject/selinux/pull/174#issuecomment-533812961,"It fixes Android tool compilation error with the host toolchain:
selinux/libsepol/src/util.c:30:10: error: 'dso.h' file not found with  include; use ""quotes"" instead
#include <dso.h>
^~~~~~~
""dso.h""
Change-Id: I26b387cb1f1546003cf8fa156606008589ae5e40","@anatol In order for your patch to be reviewed, it needs to be sent to the mailing list. As you appear to have trouble doing so, a member of the development team can take care of this. But in order for the patch to be accepted, it requires a Signed-off-by: line. Could you please add it to your commit description?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,174,2019-08-12T18:31:37Z,2020-05-05T14:27:16Z,2020-05-05T14:27:16Z,CLOSED,False,4,3,2,https://github.com/anatol,Use quote include for files located in the local directory,1,[],https://github.com/SELinuxProject/selinux/pull/174,https://github.com/bachradsusi,4,https://github.com/SELinuxProject/selinux/pull/174#issuecomment-624088574,"It fixes Android tool compilation error with the host toolchain:
selinux/libsepol/src/util.c:30:10: error: 'dso.h' file not found with  include; use ""quotes"" instead
#include <dso.h>
^~~~~~~
""dso.h""
Change-Id: I26b387cb1f1546003cf8fa156606008589ae5e40",Given that dso.h was removed in c018147 this PR is not valid any more.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,175,2019-09-13T17:47:00Z,2019-09-16T19:43:26Z,2020-06-09T12:21:50Z,MERGED,True,12,12,5,https://github.com/stephensmalley,Mcstrans,2,[],https://github.com/SELinuxProject/selinux/pull/175,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/175,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,177,2019-09-17T19:29:00Z,2019-09-18T12:20:31Z,2020-06-09T12:23:10Z,MERGED,True,8,16,1,https://github.com/stephensmalley,libselinux: fix string conversion of unknown perms,1,[],https://github.com/SELinuxProject/selinux/pull/177,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/177,"Commit c19395d fixed some handling of unknown
classes/permissions, but missed the case where an unknown permission is loaded
and then subsequently logged, either via denial or auditallow. If a permission
set has some valid values mixed with unknown values, say { read write foo },
a check on { read write foo } would fail to log the entire set.
To fix this, skip over the bad permissions/classes when expanding them to
strings. The unknowns should be logged during selinux_set_mapping, so
there is no need for further logging of the actual unknown permissions.
Signed-off-by: Mike Palmiotto mike.palmiotto@crunchydata.com","Commit c19395d fixed some handling of unknown
classes/permissions, but missed the case where an unknown permission is loaded
and then subsequently logged, either via denial or auditallow. If a permission
set has some valid values mixed with unknown values, say { read write foo },
a check on { read write foo } would fail to log the entire set.
To fix this, skip over the bad permissions/classes when expanding them to
strings. The unknowns should be logged during selinux_set_mapping, so
there is no need for further logging of the actual unknown permissions.
Signed-off-by: Mike Palmiotto mike.palmiotto@crunchydata.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,178,2019-09-17T19:37:32Z,2019-09-18T12:24:12Z,2020-06-09T12:21:13Z,MERGED,True,5,0,1,https://github.com/stephensmalley,Add configuration file for lgtm.com,1,[],https://github.com/SELinuxProject/selinux/pull/178,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/178,"Add a configuration file in order to parse the C code on
https://lgtm.com/projects/g/SELinuxProject/selinux/
The documentation about this file is on
https://help.semmle.com/lgtm-enterprise/user/help/lgtm.yml-configuration-file.html
and
https://help.semmle.com/lgtm-enterprise/user/help/cpp-extraction.html
Fixes: #98
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org","Add a configuration file in order to parse the C code on
https://lgtm.com/projects/g/SELinuxProject/selinux/
The documentation about this file is on
https://help.semmle.com/lgtm-enterprise/user/help/lgtm.yml-configuration-file.html
and
https://help.semmle.com/lgtm-enterprise/user/help/cpp-extraction.html
Fixes: #98
Signed-off-by: Nicolas Iooss nicolas.iooss@m4x.org",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,182,2019-10-21T05:49:35Z,2019-10-24T04:32:46Z,2019-10-24T04:33:27Z,CLOSED,False,4,1,1,https://github.com/perfinion,policycoreutils: semodule: Enable CIL logging,1,[],https://github.com/SELinuxProject/selinux/pull/182,https://github.com/perfinion,1,https://github.com/SELinuxProject/selinux/pull/182,"semodule -v will turn on semodule's own verbose logging but not logging
from CIL. This change makes the verbose flag also set cil's log level.
By default (ie no -v flag), this will enable CIL_ERR, and each -v will
increase the level from there.
Tested with a duplicated fcontext in the policy.
Before this change:
# semodule -v -B
Committing changes:
Problems processing filecon rules
Failed post db handling
semodule:  Failed!
After this change:
# semodule -v -B
[ ... snip ... ]
Found conflicting filecon rules
at /var/lib/selinux/mcs/tmp/modules/400/mycustom/cil:159
at /var/lib/selinux/mcs/tmp/modules/400/mycustom/cil:158
Problems processing filecon rules
Failed post db handling
semodule:  Failed!
Closes: #176
Signed-off-by: Jason Zaman jason@perfinion.com","semodule -v will turn on semodule's own verbose logging but not logging
from CIL. This change makes the verbose flag also set cil's log level.
By default (ie no -v flag), this will enable CIL_ERR, and each -v will
increase the level from there.
Tested with a duplicated fcontext in the policy.
Before this change:
# semodule -v -B
Committing changes:
Problems processing filecon rules
Failed post db handling
semodule:  Failed!
After this change:
# semodule -v -B
[ ... snip ... ]
Found conflicting filecon rules
at /var/lib/selinux/mcs/tmp/modules/400/mycustom/cil:159
at /var/lib/selinux/mcs/tmp/modules/400/mycustom/cil:158
Problems processing filecon rules
Failed post db handling
semodule:  Failed!
Closes: #176
Signed-off-by: Jason Zaman jason@perfinion.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,182,2019-10-21T05:49:35Z,2019-10-24T04:32:46Z,2019-10-24T04:33:27Z,CLOSED,False,4,1,1,https://github.com/perfinion,policycoreutils: semodule: Enable CIL logging,1,[],https://github.com/SELinuxProject/selinux/pull/182,https://github.com/perfinion,2,https://github.com/SELinuxProject/selinux/pull/182#issuecomment-545739583,"semodule -v will turn on semodule's own verbose logging but not logging
from CIL. This change makes the verbose flag also set cil's log level.
By default (ie no -v flag), this will enable CIL_ERR, and each -v will
increase the level from there.
Tested with a duplicated fcontext in the policy.
Before this change:
# semodule -v -B
Committing changes:
Problems processing filecon rules
Failed post db handling
semodule:  Failed!
After this change:
# semodule -v -B
[ ... snip ... ]
Found conflicting filecon rules
at /var/lib/selinux/mcs/tmp/modules/400/mycustom/cil:159
at /var/lib/selinux/mcs/tmp/modules/400/mycustom/cil:158
Problems processing filecon rules
Failed post db handling
semodule:  Failed!
Closes: #176
Signed-off-by: Jason Zaman jason@perfinion.com",Merged,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,183,2019-10-25T11:47:37Z,2019-11-03T09:38:35Z,2019-11-03T09:38:36Z,CLOSED,False,1,1,1,https://github.com/tpetazzoni,src/Makefile: don't pass bogus -I and -L to python setup.py build_ext,1,[],https://github.com/SELinuxProject/selinux/pull/183,https://github.com/tpetazzoni,1,https://github.com/SELinuxProject/selinux/pull/183,"Using $(DESTDIR) during the build does not follow the normal/standard
semantic of DESTDIR: it is normally only needed during the
installation. Therefore, a lot of build systems/environments don't
pass any DESTDIR at build time, which causes setup.py to be called
with -I /usr/include -L /usr/lib, which breaks cross-compilation.
Signed-off-by: Thomas Petazzoni thomas.petazzoni@bootlin.com","Using $(DESTDIR) during the build does not follow the normal/standard
semantic of DESTDIR: it is normally only needed during the
installation. Therefore, a lot of build systems/environments don't
pass any DESTDIR at build time, which causes setup.py to be called
with -I /usr/include -L /usr/lib, which breaks cross-compilation.
Signed-off-by: Thomas Petazzoni thomas.petazzoni@bootlin.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,183,2019-10-25T11:47:37Z,2019-11-03T09:38:35Z,2019-11-03T09:38:36Z,CLOSED,False,1,1,1,https://github.com/tpetazzoni,src/Makefile: don't pass bogus -I and -L to python setup.py build_ext,1,[],https://github.com/SELinuxProject/selinux/pull/183,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/183#issuecomment-549119825,"Using $(DESTDIR) during the build does not follow the normal/standard
semantic of DESTDIR: it is normally only needed during the
installation. Therefore, a lot of build systems/environments don't
pass any DESTDIR at build time, which causes setup.py to be called
with -I /usr/include -L /usr/lib, which breaks cross-compilation.
Signed-off-by: Thomas Petazzoni thomas.petazzoni@bootlin.com",Merged as 0271bf4. Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,184,2019-10-25T11:54:32Z,2019-10-25T12:44:21Z,2019-10-25T12:44:21Z,CLOSED,False,2,3,1,https://github.com/tpetazzoni,Build fixes,2,[],https://github.com/SELinuxProject/selinux/pull/184,https://github.com/tpetazzoni,1,https://github.com/SELinuxProject/selinux/pull/184,"This pull request contains two build fixes that were needed in the context of packaging SELinux in the Buildroot project. They are sent in a single pull request because even though they address different issues, the second commit modifies the same line of code as the first commit, even if for two completely different reasons.","This pull request contains two build fixes that were needed in the context of packaging SELinux in the Buildroot project. They are sent in a single pull request because even though they address different issues, the second commit modifies the same line of code as the first commit, even if for two completely different reasons.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,184,2019-10-25T11:54:32Z,2019-10-25T12:44:21Z,2019-10-25T12:44:21Z,CLOSED,False,2,3,1,https://github.com/tpetazzoni,Build fixes,2,[],https://github.com/SELinuxProject/selinux/pull/184,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/184#issuecomment-546331471,"This pull request contains two build fixes that were needed in the context of packaging SELinux in the Buildroot project. They are sent in a single pull request because even though they address different issues, the second commit modifies the same line of code as the first commit, even if for two completely different reasons.",Can you send these via git send-email or equivalent to selinux @ vger.kernel.org?  That's the preferred way for submitting selinux patches.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,184,2019-10-25T11:54:32Z,2019-10-25T12:44:21Z,2019-10-25T12:44:21Z,CLOSED,False,2,3,1,https://github.com/tpetazzoni,Build fixes,2,[],https://github.com/SELinuxProject/selinux/pull/184,https://github.com/tpetazzoni,3,https://github.com/SELinuxProject/selinux/pull/184#issuecomment-546338621,"This pull request contains two build fixes that were needed in the context of packaging SELinux in the Buildroot project. They are sent in a single pull request because even though they address different issues, the second commit modifies the same line of code as the first commit, even if for two completely different reasons.","Ah, yes, sure thing!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,185,2019-10-31T01:59:25Z,2019-11-15T15:05:11Z,2019-11-15T15:05:11Z,CLOSED,False,18,22,1,https://github.com/kongbc,restorecond: Fix redundant console log output error,1,[],https://github.com/SELinuxProject/selinux/pull/185,https://github.com/kongbc,1,https://github.com/SELinuxProject/selinux/pull/185,"When starting restorecond without any option the following redundant
console log is outputed:
/dev/log 100.0%
/var/volatile/run/syslogd.pid 100.0%
...
This is caused by two global variables of same name r_opts. When
executes r_opts = opts in restore_init(), it originally intends
to assign the address of struct r_opts in ""restorecond.c"" to the
pointer *r_opts in ""restore.c"".
However, the address is assigned to the struct r_opts and covers
the value of low eight bytes in it. That causes unexpected value
of member varibale 'nochange' and 'verbose' in struct r_opts, thus
affects value of 'restorecon_flags' and executes unexpected operations
when restorecon the files such as the redundant console log output or
file label nochange.
Signed-off-by: kong baichuan kongbaichuan@huawei.com","When starting restorecond without any option the following redundant
console log is outputed:
/dev/log 100.0%
/var/volatile/run/syslogd.pid 100.0%
...
This is caused by two global variables of same name r_opts. When
executes r_opts = opts in restore_init(), it originally intends
to assign the address of struct r_opts in ""restorecond.c"" to the
pointer *r_opts in ""restore.c"".
However, the address is assigned to the struct r_opts and covers
the value of low eight bytes in it. That causes unexpected value
of member varibale 'nochange' and 'verbose' in struct r_opts, thus
affects value of 'restorecon_flags' and executes unexpected operations
when restorecon the files such as the redundant console log output or
file label nochange.
Signed-off-by: kong baichuan kongbaichuan@huawei.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,185,2019-10-31T01:59:25Z,2019-11-15T15:05:11Z,2019-11-15T15:05:11Z,CLOSED,False,18,22,1,https://github.com/kongbc,restorecond: Fix redundant console log output error,1,[],https://github.com/SELinuxProject/selinux/pull/185,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/185#issuecomment-548356773,"When starting restorecond without any option the following redundant
console log is outputed:
/dev/log 100.0%
/var/volatile/run/syslogd.pid 100.0%
...
This is caused by two global variables of same name r_opts. When
executes r_opts = opts in restore_init(), it originally intends
to assign the address of struct r_opts in ""restorecond.c"" to the
pointer *r_opts in ""restore.c"".
However, the address is assigned to the struct r_opts and covers
the value of low eight bytes in it. That causes unexpected value
of member varibale 'nochange' and 'verbose' in struct r_opts, thus
affects value of 'restorecon_flags' and executes unexpected operations
when restorecon the files such as the redundant console log output or
file label nochange.
Signed-off-by: kong baichuan kongbaichuan@huawei.com",Please post via git-send-email or equivalent to selinux@vger.kernel.org.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,185,2019-10-31T01:59:25Z,2019-11-15T15:05:11Z,2019-11-15T15:05:11Z,CLOSED,False,18,22,1,https://github.com/kongbc,restorecond: Fix redundant console log output error,1,[],https://github.com/SELinuxProject/selinux/pull/185,https://github.com/kongbc,3,https://github.com/SELinuxProject/selinux/pull/185#issuecomment-549727994,"When starting restorecond without any option the following redundant
console log is outputed:
/dev/log 100.0%
/var/volatile/run/syslogd.pid 100.0%
...
This is caused by two global variables of same name r_opts. When
executes r_opts = opts in restore_init(), it originally intends
to assign the address of struct r_opts in ""restorecond.c"" to the
pointer *r_opts in ""restore.c"".
However, the address is assigned to the struct r_opts and covers
the value of low eight bytes in it. That causes unexpected value
of member varibale 'nochange' and 'verbose' in struct r_opts, thus
affects value of 'restorecon_flags' and executes unexpected operations
when restorecon the files such as the redundant console log output or
file label nochange.
Signed-off-by: kong baichuan kongbaichuan@huawei.com","OK, the patch  was sent to selinux@vger.kernel.org.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,185,2019-10-31T01:59:25Z,2019-11-15T15:05:11Z,2019-11-15T15:05:11Z,CLOSED,False,18,22,1,https://github.com/kongbc,restorecond: Fix redundant console log output error,1,[],https://github.com/SELinuxProject/selinux/pull/185,https://github.com/fishilico,4,https://github.com/SELinuxProject/selinux/pull/185#issuecomment-552589420,"When starting restorecond without any option the following redundant
console log is outputed:
/dev/log 100.0%
/var/volatile/run/syslogd.pid 100.0%
...
This is caused by two global variables of same name r_opts. When
executes r_opts = opts in restore_init(), it originally intends
to assign the address of struct r_opts in ""restorecond.c"" to the
pointer *r_opts in ""restore.c"".
However, the address is assigned to the struct r_opts and covers
the value of low eight bytes in it. That causes unexpected value
of member varibale 'nochange' and 'verbose' in struct r_opts, thus
affects value of 'restorecon_flags' and executes unexpected operations
when restorecon the files such as the redundant console log output or
file label nochange.
Signed-off-by: kong baichuan kongbaichuan@huawei.com","I have not received the patch, and it did not seem to appear on the mailing list archive (https://lore.kernel.org/selinux/). Did you receive a bounce after sending the patch? Are you subscribed to the mailing list (if not, a moderator might need to unblock your message)?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,185,2019-10-31T01:59:25Z,2019-11-15T15:05:11Z,2019-11-15T15:05:11Z,CLOSED,False,18,22,1,https://github.com/kongbc,restorecond: Fix redundant console log output error,1,[],https://github.com/SELinuxProject/selinux/pull/185,https://github.com/kongbc,5,https://github.com/SELinuxProject/selinux/pull/185#issuecomment-552692364,"When starting restorecond without any option the following redundant
console log is outputed:
/dev/log 100.0%
/var/volatile/run/syslogd.pid 100.0%
...
This is caused by two global variables of same name r_opts. When
executes r_opts = opts in restore_init(), it originally intends
to assign the address of struct r_opts in ""restorecond.c"" to the
pointer *r_opts in ""restore.c"".
However, the address is assigned to the struct r_opts and covers
the value of low eight bytes in it. That causes unexpected value
of member varibale 'nochange' and 'verbose' in struct r_opts, thus
affects value of 'restorecon_flags' and executes unexpected operations
when restorecon the files such as the redundant console log output or
file label nochange.
Signed-off-by: kong baichuan kongbaichuan@huawei.com","sorry, I do not subscribe to the mailing list and my message may be blocked. I resend the patch again and it has shown in the email list. please verify it. tks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,185,2019-10-31T01:59:25Z,2019-11-15T15:05:11Z,2019-11-15T15:05:11Z,CLOSED,False,18,22,1,https://github.com/kongbc,restorecond: Fix redundant console log output error,1,[],https://github.com/SELinuxProject/selinux/pull/185,https://github.com/stephensmalley,6,https://github.com/SELinuxProject/selinux/pull/185#issuecomment-554394030,"When starting restorecond without any option the following redundant
console log is outputed:
/dev/log 100.0%
/var/volatile/run/syslogd.pid 100.0%
...
This is caused by two global variables of same name r_opts. When
executes r_opts = opts in restore_init(), it originally intends
to assign the address of struct r_opts in ""restorecond.c"" to the
pointer *r_opts in ""restore.c"".
However, the address is assigned to the struct r_opts and covers
the value of low eight bytes in it. That causes unexpected value
of member varibale 'nochange' and 'verbose' in struct r_opts, thus
affects value of 'restorecon_flags' and executes unexpected operations
when restorecon the files such as the redundant console log output or
file label nochange.
Signed-off-by: kong baichuan kongbaichuan@huawei.com",Merged via ad2208e,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,186,2019-11-11T14:43:59Z,2019-11-11T15:15:12Z,2019-11-11T15:15:12Z,CLOSED,False,950,0,2,https://github.com/dhodovsk,Enable copr builds and add packit config,1,[],https://github.com/SELinuxProject/selinux/pull/186,https://github.com/dhodovsk,1,https://github.com/SELinuxProject/selinux/pull/186,"Let us introduce packit service to you - the automation to integrate upstream open source projects into Fedora operating system.
After merging this PR, you are just a few steps away from RPM builds being automatically triggered on your PR's.
It means, that you'll be able to try and play with your change, packaged as an RPM.
But there is more. By using packit, you can for example enable adding new releases into Fedora Rawhide.
What are the next steps?

Install Packit-as-a-Service github application in your repo
In case you are first user, wait for account approval
Enjoy the built RPMs!

For more info, please:

check out the documentation: https://packit.dev/docs/
contact @packit-service

The spec you see in this PR was fetched from your package's Fedora dist-git.","Let us introduce packit service to you - the automation to integrate upstream open source projects into Fedora operating system.
After merging this PR, you are just a few steps away from RPM builds being automatically triggered on your PR's.
It means, that you'll be able to try and play with your change, packaged as an RPM.
But there is more. By using packit, you can for example enable adding new releases into Fedora Rawhide.
What are the next steps?

Install Packit-as-a-Service github application in your repo
In case you are first user, wait for account approval
Enjoy the built RPMs!

For more info, please:

check out the documentation: https://packit.dev/docs/
contact @packit-service

The spec you see in this PR was fetched from your package's Fedora dist-git.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,186,2019-11-11T14:43:59Z,2019-11-11T15:15:12Z,2019-11-11T15:15:12Z,CLOSED,False,950,0,2,https://github.com/dhodovsk,Enable copr builds and add packit config,1,[],https://github.com/SELinuxProject/selinux/pull/186,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/186#issuecomment-552477111,"Let us introduce packit service to you - the automation to integrate upstream open source projects into Fedora operating system.
After merging this PR, you are just a few steps away from RPM builds being automatically triggered on your PR's.
It means, that you'll be able to try and play with your change, packaged as an RPM.
But there is more. By using packit, you can for example enable adding new releases into Fedora Rawhide.
What are the next steps?

Install Packit-as-a-Service github application in your repo
In case you are first user, wait for account approval
Enjoy the built RPMs!

For more info, please:

check out the documentation: https://packit.dev/docs/
contact @packit-service

The spec you see in this PR was fetched from your package's Fedora dist-git.","I'm afraid that packit is not ready for this project yet.
In Fedora, there are 7 different components - 7 different specfiles - libsepol, libselinux, libsemanage, policycoreutils, checkpolicy, secilc, mcstrans - built from this project and this project itself releases 13 different tar balls, see https://github.com/SELinuxProject/selinux/releases/tag/20191031
Anyway, if you think you can cover the whole project, please check https://github.com/SELinuxProject/selinux/wiki/Contributing and https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md and send the patch to SELinux mailing list at selinux@vger.kernel.org for review.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,189,2019-11-21T02:56:44Z,2019-12-13T13:50:03Z,2019-12-13T13:50:04Z,CLOSED,False,5,1,1,https://github.com/joshland,Fix: check variable type of port before trying to split,1,[],https://github.com/SELinuxProject/selinux/pull/189,https://github.com/joshland,1,https://github.com/SELinuxProject/selinux/pull/189,"I have been trying to use Ansible for SE Linux Port management, and it crashes if I used numbered ports.","I have been trying to use Ansible for SE Linux Port management, and it crashes if I used numbered ports.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,189,2019-11-21T02:56:44Z,2019-12-13T13:50:03Z,2019-12-13T13:50:04Z,CLOSED,False,5,1,1,https://github.com/joshland,Fix: check variable type of port before trying to split,1,[],https://github.com/SELinuxProject/selinux/pull/189,https://github.com/joshland,2,https://github.com/SELinuxProject/selinux/pull/189#issuecomment-556890960,"I have been trying to use Ansible for SE Linux Port management, and it crashes if I used numbered ports.","Here is the ansible output from when i ran into the bug:
{""changed"": false, ""module_stderr"": ""Shared connection to localhost closed.
"", ""module_stdout"": ""Traceback (most recent call last):
  File \""/home/eis/.ansible/tmp/ansible-tmp-1574300490.251246-265170046283270/AnsiballZ_seport.py\"", line 102, in <module>
    _ansiballz_main()
  File \""/home/eis/.ansible/tmp/ansible-tmp-1574300490.251246-265170046283270/AnsiballZ_seport.py\"", line 94, in _ansiballz_main
    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)
  File \""/home/eis/.ansible/tmp/ansible-tmp-1574300490.251246-265170046283270/AnsiballZ_seport.py\"", line 40, in invoke_module
    runpy.run_module(mod_name='ansible.modules.system.seport', init_globals=None, run_name='__main__', alter_sys=True)
  File \""/usr/lib64/python3.7/runpy.py\"", line 205, in run_module
    return _run_module_code(code, init_globals, run_name, mod_spec)
  File \""/usr/lib64/python3.7/runpy.py\"", line 96, in _run_module_code
    mod_name, mod_spec, pkg_name, script_name)
  File \""/usr/lib64/python3.7/runpy.py\"", line 85, in _run_code
    exec(code, run_globals)
  File \""/tmp/ansible_seport_payload_rsxr600w/ansible_seport_payload.zip/ansible/modules/system/seport.py\"", line 311, in <module>
  File \""/tmp/ansible_seport_payload_rsxr600w/ansible_seport_payload.zip/ansible/modules/system/seport.py\"", line 301, in main
  File \""/tmp/ansible_seport_payload_rsxr600w/ansible_seport_payload.zip/ansible/modules/system/seport.py\"", line 212, in semanage_port_add
  File \""/usr/lib/python3.7/site-packages/seobject.py\"", line 1149, in add
    self.__add(port, proto, serange, type)
  File \""/usr/lib/python3.7/site-packages/seobject.py\"", line 1098, in __add
    (k, proto_d, low, high) = self.__genkey(port, proto)
  File \""/usr/lib/python3.7/site-packages/seobject.py\"", line 1068, in __genkey
    ports = port.split(\""-\"")
AttributeError: 'int' object has no attribute 'split'n
"", ""msg"": ""MODULE FAILURE\nSee stdout/stderr for the exact error"", ""rc"": 1}",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,189,2019-11-21T02:56:44Z,2019-12-13T13:50:03Z,2019-12-13T13:50:04Z,CLOSED,False,5,1,1,https://github.com/joshland,Fix: check variable type of port before trying to split,1,[],https://github.com/SELinuxProject/selinux/pull/189,https://github.com/stephensmalley,3,https://github.com/SELinuxProject/selinux/pull/189#issuecomment-557082230,"I have been trying to use Ansible for SE Linux Port management, and it crashes if I used numbered ports.","Please submit patches to the selinux@vger.kernel.org mailing list via git send-email or equivalent, and be sure to add a Signed-off-by: line indicating that you are contributing the code under the terms of the upstream license and have the rights to do so (git will do this for you if you git commit --amend -s).",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,189,2019-11-21T02:56:44Z,2019-12-13T13:50:03Z,2019-12-13T13:50:04Z,CLOSED,False,5,1,1,https://github.com/joshland,Fix: check variable type of port before trying to split,1,[],https://github.com/SELinuxProject/selinux/pull/189,https://github.com/stephensmalley,4,https://github.com/SELinuxProject/selinux/pull/189#issuecomment-557135010,"I have been trying to use Ansible for SE Linux Port management, and it crashes if I used numbered ports.","Ok, squash the commits, add a signed-off-by, and then submit to selinux@vger.kernel.org via git send-email.  If the last part is problematic for you due to email setup, request that a maintainer do so on your behalf after squashing and adding your signed-off-by line to the commit.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,189,2019-11-21T02:56:44Z,2019-12-13T13:50:03Z,2019-12-13T13:50:04Z,CLOSED,False,5,1,1,https://github.com/joshland,Fix: check variable type of port before trying to split,1,[],https://github.com/SELinuxProject/selinux/pull/189,https://github.com/joshland,5,https://github.com/SELinuxProject/selinux/pull/189#issuecomment-557138926,"I have been trying to use Ansible for SE Linux Port management, and it crashes if I used numbered ports.","I hear you, 5x5.  I have a terrible headache, and I was whining internally about the process.  I will set this down, and I will pick it up in an hour when I have had a cup of coffee.  Thank you for examining my bug report, and for your instructions.
I will complete the requisite steps to offer a bug fix to the mailing list when I return.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,189,2019-11-21T02:56:44Z,2019-12-13T13:50:03Z,2019-12-13T13:50:04Z,CLOSED,False,5,1,1,https://github.com/joshland,Fix: check variable type of port before trying to split,1,[],https://github.com/SELinuxProject/selinux/pull/189,https://github.com/stephensmalley,6,https://github.com/SELinuxProject/selinux/pull/189#issuecomment-565447622,"I have been trying to use Ansible for SE Linux Port management, and it crashes if I used numbered ports.",Merged via 5bbe32a,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,193,2019-12-11T22:04:56Z,2020-04-07T20:49:45Z,2020-04-07T20:49:45Z,CLOSED,False,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,2,[],https://github.com/SELinuxProject/selinux/pull/193,https://github.com/aduskett,1,https://github.com/SELinuxProject/selinux/pull/193,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.","Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,193,2019-12-11T22:04:56Z,2020-04-07T20:49:45Z,2020-04-07T20:49:45Z,CLOSED,False,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,2,[],https://github.com/SELinuxProject/selinux/pull/193,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/193#issuecomment-564946733,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.","Hello, thank you for your bug report. In order for your patch to be merged, it needs to follow some rules that are written file CONTRIBUTING.md (https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md). More precisely:

Please send your patches to the mailing list selinux@vger.kernel.org (for example by using git format-patch and git send-email) in order for the developers to review and test it. If you have trouble doing this, I can forward your patch for you.
Please add a ""Signed-off-by:"" line to the commit message. This means your code meets the Developer's certificate of origin which is written in CONTRIBUTING.md.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,193,2019-12-11T22:04:56Z,2020-04-07T20:49:45Z,2020-04-07T20:49:45Z,CLOSED,False,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,2,[],https://github.com/SELinuxProject/selinux/pull/193,https://github.com/williamcroberts,3,https://github.com/SELinuxProject/selinux/pull/193#issuecomment-604551878,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.","@aduskett can you add a signed off line, we need that at a minimum? (git commit --amend -s && git push -f aduskett  fix-musl-and-uclibc-builds:fix-musl-and-uclibc-builds) Also, could you mail the patch to the mailing list?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,193,2019-12-11T22:04:56Z,2020-04-07T20:49:45Z,2020-04-07T20:49:45Z,CLOSED,False,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,2,[],https://github.com/SELinuxProject/selinux/pull/193,https://github.com/aduskett,4,https://github.com/SELinuxProject/selinux/pull/193#issuecomment-605211242,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.","@aduskett can you add a signed off line, we need that at a minimum? (git commit --amend -s && git push -f aduskett fix-musl-and-uclibc-builds:fix-musl-and-uclibc-builds) Also, could you mail the patch to the mailing list?

Yes of course!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,193,2019-12-11T22:04:56Z,2020-04-07T20:49:45Z,2020-04-07T20:49:45Z,CLOSED,False,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,2,[],https://github.com/SELinuxProject/selinux/pull/193,https://github.com/williamcroberts,5,https://github.com/SELinuxProject/selinux/pull/193#issuecomment-609858297,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.","@aduskett can you add a signed off line, we need that at a minimum? (git commit --amend -s && git push -f aduskett fix-musl-and-uclibc-builds:fix-musl-and-uclibc-builds) Also, could you mail the patch to the mailing list?

Yes of course!

Bump? Can you at least add the signed-off by?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,193,2019-12-11T22:04:56Z,2020-04-07T20:49:45Z,2020-04-07T20:49:45Z,CLOSED,False,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,2,[],https://github.com/SELinuxProject/selinux/pull/193,https://github.com/aduskett,6,https://github.com/SELinuxProject/selinux/pull/193#issuecomment-609912735,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.","Ugh, sorry! These last few weeks have been crazy with the whole COVID thing, I will create a proper patch and push to the mailing list right now :)",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,193,2019-12-11T22:04:56Z,2020-04-07T20:49:45Z,2020-04-07T20:49:45Z,CLOSED,False,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,2,[],https://github.com/SELinuxProject/selinux/pull/193,https://github.com/aduskett,7,https://github.com/SELinuxProject/selinux/pull/193#issuecomment-610491690,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.",So I * think * I sent the patch to the correct mailing list.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,193,2019-12-11T22:04:56Z,2020-04-07T20:49:45Z,2020-04-07T20:49:45Z,CLOSED,False,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,2,[],https://github.com/SELinuxProject/selinux/pull/193,https://github.com/WOnder93,8,https://github.com/SELinuxProject/selinux/pull/193#issuecomment-610536820,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.","@aduskett It still doesn't show up on https://lore.kernel.org/selinux/, nor in my mailbox (not counting the one you sent to selinux@lists.fedoraproject.org).",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,193,2019-12-11T22:04:56Z,2020-04-07T20:49:45Z,2020-04-07T20:49:45Z,CLOSED,False,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,2,[],https://github.com/SELinuxProject/selinux/pull/193,https://github.com/aduskett,9,https://github.com/SELinuxProject/selinux/pull/193#issuecomment-610555964,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.",Ah! There we go! It now properly shows up on https://lore.kernel.org/selinux/,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,199,2020-01-15T14:30:19Z,2020-02-10T20:04:38Z,2020-02-10T20:04:38Z,CLOSED,False,1,1,1,https://github.com/jsegitz,checkpolicy: mark te_assert_t as extern to prevent build failures,1,[],https://github.com/SELinuxProject/selinux/pull/199,https://github.com/jsegitz,1,https://github.com/SELinuxProject/selinux/pull/199,due to multiple definitions in gcc10,due to multiple definitions in gcc10,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,199,2020-01-15T14:30:19Z,2020-02-10T20:04:38Z,2020-02-10T20:04:38Z,CLOSED,False,1,1,1,https://github.com/jsegitz,checkpolicy: mark te_assert_t as extern to prevent build failures,1,[],https://github.com/SELinuxProject/selinux/pull/199,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/199#issuecomment-575070073,due to multiple definitions in gcc10,"Hello, thank you for your patch. In order for your patch to be merged, it needs to follow some rules that are written file CONTRIBUTING.md (https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md). More precisely:


Please send your patches to the mailing list selinux@vger.kernel.org (for example by using git format-patch and git send-email) in order for the developers to review and test it. If you have trouble doing this, I can forward your patch for you.


Please add a ""Signed-off-by:"" line to the commit message. This means your code meets the Developer's certificate of origin which is written in CONTRIBUTING.md.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,199,2020-01-15T14:30:19Z,2020-02-10T20:04:38Z,2020-02-10T20:04:38Z,CLOSED,False,1,1,1,https://github.com/jsegitz,checkpolicy: mark te_assert_t as extern to prevent build failures,1,[],https://github.com/SELinuxProject/selinux/pull/199,https://github.com/WOnder93,3,https://github.com/SELinuxProject/selinux/pull/199#issuecomment-584325917,due to multiple definitions in gcc10,"In the meantime, this has been fixed in 4d330d0.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,200,2020-01-23T15:56:17Z,2020-03-13T18:51:30Z,2020-06-09T12:21:47Z,CLOSED,False,210,172,18,https://github.com/stephensmalley,"libsepol,checkpolicy: remove use of hardcoded security class values",1,[],https://github.com/SELinuxProject/selinux/pull/200,https://github.com/stephensmalley,1,https://github.com/SELinuxProject/selinux/pull/200,"libsepol carried its own (outdated) copy of flask.h with the generated
security class and initial SID values for use by the policy
compiler and the forked copy of the security server code
leveraged by tools such as audit2why.  Convert libsepol and
checkpolicy entirely to looking up class values from the policy,
remove the SECCLASS_* definitions from its flask.h header, and move
the header with its remaining initial SID definitions private to
libsepol.  While we are here, fix the sepol_compute_sid() logic to
properly support features long since added to the policy and kernel,
although there are no users of it other than checkpolicy -d (debug)
and it is not exported to users of the shared library.  There
are still some residual differences between the kernel logic and
libsepol.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","libsepol carried its own (outdated) copy of flask.h with the generated
security class and initial SID values for use by the policy
compiler and the forked copy of the security server code
leveraged by tools such as audit2why.  Convert libsepol and
checkpolicy entirely to looking up class values from the policy,
remove the SECCLASS_* definitions from its flask.h header, and move
the header with its remaining initial SID definitions private to
libsepol.  While we are here, fix the sepol_compute_sid() logic to
properly support features long since added to the policy and kernel,
although there are no users of it other than checkpolicy -d (debug)
and it is not exported to users of the shared library.  There
are still some residual differences between the kernel logic and
libsepol.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,200,2020-01-23T15:56:17Z,2020-03-13T18:51:30Z,2020-06-09T12:21:47Z,CLOSED,False,210,172,18,https://github.com/stephensmalley,"libsepol,checkpolicy: remove use of hardcoded security class values",1,[],https://github.com/SELinuxProject/selinux/pull/200,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/200#issuecomment-577745225,"libsepol carried its own (outdated) copy of flask.h with the generated
security class and initial SID values for use by the policy
compiler and the forked copy of the security server code
leveraged by tools such as audit2why.  Convert libsepol and
checkpolicy entirely to looking up class values from the policy,
remove the SECCLASS_* definitions from its flask.h header, and move
the header with its remaining initial SID definitions private to
libsepol.  While we are here, fix the sepol_compute_sid() logic to
properly support features long since added to the policy and kernel,
although there are no users of it other than checkpolicy -d (debug)
and it is not exported to users of the shared library.  There
are still some residual differences between the kernel logic and
libsepol.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","@pebenito setools currently depends on sepol/policydb/flask.h for some of these SECCLASS_ definitions, see setools/policyrep/sepol.pxd and fscontext.pxi.  How hard would it be to fix it to look them up instead as in this patch?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,200,2020-01-23T15:56:17Z,2020-03-13T18:51:30Z,2020-06-09T12:21:47Z,CLOSED,False,210,172,18,https://github.com/stephensmalley,"libsepol,checkpolicy: remove use of hardcoded security class values",1,[],https://github.com/SELinuxProject/selinux/pull/200,https://github.com/pebenito,3,https://github.com/SELinuxProject/selinux/pull/200#issuecomment-579909957,"libsepol carried its own (outdated) copy of flask.h with the generated
security class and initial SID values for use by the policy
compiler and the forked copy of the security server code
leveraged by tools such as audit2why.  Convert libsepol and
checkpolicy entirely to looking up class values from the policy,
remove the SECCLASS_* definitions from its flask.h header, and move
the header with its remaining initial SID definitions private to
libsepol.  While we are here, fix the sepol_compute_sid() logic to
properly support features long since added to the policy and kernel,
although there are no users of it other than checkpolicy -d (debug)
and it is not exported to users of the shared library.  There
are still some residual differences between the kernel logic and
libsepol.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","It will take a small bit of reworking, but it should be fairly straightforward. It's only used to figure out the class for the genfscons. I guess I can use symbol.v.sclass (cython notation--it figures out what is actually a dereference) to look up the class struct with the policydb class_val_to_struct, right?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,200,2020-01-23T15:56:17Z,2020-03-13T18:51:30Z,2020-06-09T12:21:47Z,CLOSED,False,210,172,18,https://github.com/stephensmalley,"libsepol,checkpolicy: remove use of hardcoded security class values",1,[],https://github.com/SELinuxProject/selinux/pull/200,https://github.com/stephensmalley,4,https://github.com/SELinuxProject/selinux/pull/200#issuecomment-579918534,"libsepol carried its own (outdated) copy of flask.h with the generated
security class and initial SID values for use by the policy
compiler and the forked copy of the security server code
leveraged by tools such as audit2why.  Convert libsepol and
checkpolicy entirely to looking up class values from the policy,
remove the SECCLASS_* definitions from its flask.h header, and move
the header with its remaining initial SID definitions private to
libsepol.  While we are here, fix the sepol_compute_sid() logic to
properly support features long since added to the policy and kernel,
although there are no users of it other than checkpolicy -d (debug)
and it is not exported to users of the shared library.  There
are still some residual differences between the kernel logic and
libsepol.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","There is a similar change in the libsepol/checkpolicy patch to switch from using the #define'd classes to looking them up via hashtab_search(policydb->p_classes.table, ""file"") or whatever when compiling the genfscon statements. You need to map the string names to the class value in the policy not reverse map it.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,200,2020-01-23T15:56:17Z,2020-03-13T18:51:30Z,2020-06-09T12:21:47Z,CLOSED,False,210,172,18,https://github.com/stephensmalley,"libsepol,checkpolicy: remove use of hardcoded security class values",1,[],https://github.com/SELinuxProject/selinux/pull/200,https://github.com/stephensmalley,5,https://github.com/SELinuxProject/selinux/pull/200#issuecomment-584669919,"libsepol carried its own (outdated) copy of flask.h with the generated
security class and initial SID values for use by the policy
compiler and the forked copy of the security server code
leveraged by tools such as audit2why.  Convert libsepol and
checkpolicy entirely to looking up class values from the policy,
remove the SECCLASS_* definitions from its flask.h header, and move
the header with its remaining initial SID definitions private to
libsepol.  While we are here, fix the sepol_compute_sid() logic to
properly support features long since added to the policy and kernel,
although there are no users of it other than checkpolicy -d (debug)
and it is not exported to users of the shared library.  There
are still some residual differences between the kernel logic and
libsepol.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov","Aside from removing assumptions from libsepol/checkpolicy itself about hardcoded class values, I also wanted to get this merged because otherwise some people are likely to switch over to using libsepol's flask.h when they see that we have removed libselinux's flask.h instead of correctly migrating to string_to_security_class() and friends.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,200,2020-01-23T15:56:17Z,2020-03-13T18:51:30Z,2020-06-09T12:21:47Z,CLOSED,False,210,172,18,https://github.com/stephensmalley,"libsepol,checkpolicy: remove use of hardcoded security class values",1,[],https://github.com/SELinuxProject/selinux/pull/200,https://github.com/pebenito,6,https://github.com/SELinuxProject/selinux/pull/200#issuecomment-584914499,"libsepol carried its own (outdated) copy of flask.h with the generated
security class and initial SID values for use by the policy
compiler and the forked copy of the security server code
leveraged by tools such as audit2why.  Convert libsepol and
checkpolicy entirely to looking up class values from the policy,
remove the SECCLASS_* definitions from its flask.h header, and move
the header with its remaining initial SID definitions private to
libsepol.  While we are here, fix the sepol_compute_sid() logic to
properly support features long since added to the policy and kernel,
although there are no users of it other than checkpolicy -d (debug)
and it is not exported to users of the shared library.  There
are still some residual differences between the kernel logic and
libsepol.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",I have no objections. I have a fix for SETools in my local working tree. It should be up in the next day or two.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,200,2020-01-23T15:56:17Z,2020-03-13T18:51:30Z,2020-06-09T12:21:47Z,CLOSED,False,210,172,18,https://github.com/stephensmalley,"libsepol,checkpolicy: remove use of hardcoded security class values",1,[],https://github.com/SELinuxProject/selinux/pull/200,https://github.com/stephensmalley,7,https://github.com/SELinuxProject/selinux/pull/200#issuecomment-592009600,"libsepol carried its own (outdated) copy of flask.h with the generated
security class and initial SID values for use by the policy
compiler and the forked copy of the security server code
leveraged by tools such as audit2why.  Convert libsepol and
checkpolicy entirely to looking up class values from the policy,
remove the SECCLASS_* definitions from its flask.h header, and move
the header with its remaining initial SID definitions private to
libsepol.  While we are here, fix the sepol_compute_sid() logic to
properly support features long since added to the policy and kernel,
although there are no users of it other than checkpolicy -d (debug)
and it is not exported to users of the shared library.  There
are still some residual differences between the kernel logic and
libsepol.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",Ping,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,200,2020-01-23T15:56:17Z,2020-03-13T18:51:30Z,2020-06-09T12:21:47Z,CLOSED,False,210,172,18,https://github.com/stephensmalley,"libsepol,checkpolicy: remove use of hardcoded security class values",1,[],https://github.com/SELinuxProject/selinux/pull/200,https://github.com/stephensmalley,8,https://github.com/SELinuxProject/selinux/pull/200#issuecomment-598865747,"libsepol carried its own (outdated) copy of flask.h with the generated
security class and initial SID values for use by the policy
compiler and the forked copy of the security server code
leveraged by tools such as audit2why.  Convert libsepol and
checkpolicy entirely to looking up class values from the policy,
remove the SECCLASS_* definitions from its flask.h header, and move
the header with its remaining initial SID definitions private to
libsepol.  While we are here, fix the sepol_compute_sid() logic to
properly support features long since added to the policy and kernel,
although there are no users of it other than checkpolicy -d (debug)
and it is not exported to users of the shared library.  There
are still some residual differences between the kernel logic and
libsepol.
Signed-off-by: Stephen Smalley sds@tycho.nsa.gov",Merged via f8c110c,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,203,2020-02-12T21:16:01Z,2020-02-21T16:02:17Z,2020-02-21T16:02:17Z,CLOSED,False,2,2,1,https://github.com/mikhailnov,Fix Ru translation of failsafe context,1,[],https://github.com/SELinuxProject/selinux/pull/203,https://github.com/mikhailnov,1,https://github.com/SELinuxProject/selinux/pull/203,"From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)","From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,203,2020-02-12T21:16:01Z,2020-02-21T16:02:17Z,2020-02-21T16:02:17Z,CLOSED,False,2,2,1,https://github.com/mikhailnov,Fix Ru translation of failsafe context,1,[],https://github.com/SELinuxProject/selinux/pull/203,https://github.com/darktemplarbasealt,2,https://github.com/SELinuxProject/selinux/pull/203#issuecomment-585653935,"From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)","My personal current favorite translation for word ""failsafe"" is ""отказоустойчивый"", although it may vary a lot due to context. It might be a good idea to also consider ""отказобезопасный"" as translation due to context. While these 2 words look quite similar, the meaning is quite different, but it might be not be obvious from quick glance. ""Резервный"" looks good too. Precise translation can be tough.
Also, CC @OlesyaGerasimenko",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,203,2020-02-12T21:16:01Z,2020-02-21T16:02:17Z,2020-02-21T16:02:17Z,CLOSED,False,2,2,1,https://github.com/mikhailnov,Fix Ru translation of failsafe context,1,[],https://github.com/SELinuxProject/selinux/pull/203,https://github.com/mikhailnov,3,https://github.com/SELinuxProject/selinux/pull/203#issuecomment-585662811,"From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)","Here is a quote from https://github.com/SELinuxProject/selinux/blob/master/libselinux/src/get_context_list.c#L506
/* Unable to determine a reachable context list, try to fall back to
   the ""failsafe"" context to at least permit root login
   for emergency recovery if possible. */

""отказоустойчивый"" and ""отказобезопасный"" may make a wrong impression that it is a good idea to use failsafe context configs directly instead of normal ways of configuration. Those words do not show that it is used only if other options are not available, I think ""резервный"" does show that.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,203,2020-02-12T21:16:01Z,2020-02-21T16:02:17Z,2020-02-21T16:02:17Z,CLOSED,False,2,2,1,https://github.com/mikhailnov,Fix Ru translation of failsafe context,1,[],https://github.com/SELinuxProject/selinux/pull/203,https://github.com/darktemplarbasealt,4,https://github.com/SELinuxProject/selinux/pull/203#issuecomment-585757445,"From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)",Sounds reasonable to me.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,203,2020-02-12T21:16:01Z,2020-02-21T16:02:17Z,2020-02-21T16:02:17Z,CLOSED,False,2,2,1,https://github.com/mikhailnov,Fix Ru translation of failsafe context,1,[],https://github.com/SELinuxProject/selinux/pull/203,https://github.com/bachradsusi,5,https://github.com/SELinuxProject/selinux/pull/203#issuecomment-587020481,"From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)","Thank you for your contribution. In order for your patch to be merged, it needs to be sent to the mailing list selinux@vger.kernel.org (for example by using git format-patch and git send-email)so that  developers can review and test it. If you have trouble doing this, I can forward your patch for you.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,203,2020-02-12T21:16:01Z,2020-02-21T16:02:17Z,2020-02-21T16:02:17Z,CLOSED,False,2,2,1,https://github.com/mikhailnov,Fix Ru translation of failsafe context,1,[],https://github.com/SELinuxProject/selinux/pull/203,https://github.com/mikhailnov,6,https://github.com/SELinuxProject/selinux/pull/203#issuecomment-587165350,"From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)","Really, such a minor fix already approved by the only existing Russian localisator should be emailed for further discussion? Ok, done.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,203,2020-02-12T21:16:01Z,2020-02-21T16:02:17Z,2020-02-21T16:02:17Z,CLOSED,False,2,2,1,https://github.com/mikhailnov,Fix Ru translation of failsafe context,1,[],https://github.com/SELinuxProject/selinux/pull/203,None,7,https://github.com/SELinuxProject/selinux/pull/203#issuecomment-587677090,"From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)","On Mon, Feb 17, 2020 at 01:31:19PM -0800, mikhailnov wrote:
 Really, such a minor fix already approved by the only existing Russian localisator should be emailed for further discussion? Ok, done.
Github is not accessible for everyone and others might not want to use Github, but still want have a chance to review and/or comment on the patch. If you dont like the redundancy then probably better to use the maillist for these sorts of things and skip github.
…

 --
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly or view it on GitHub:
 #203 (comment)


-- 
Key fingerprint = FCD2 3660 5D6B 9D27 7FC6  E0FF DA7E 521F 10F6 4098
https://sks-keyservers.net/pks/lookup?op=get&search=0xDA7E521F10F64098
Dominick Grift",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,203,2020-02-12T21:16:01Z,2020-02-21T16:02:17Z,2020-02-21T16:02:17Z,CLOSED,False,2,2,1,https://github.com/mikhailnov,Fix Ru translation of failsafe context,1,[],https://github.com/SELinuxProject/selinux/pull/203,https://github.com/mikhailnov,8,https://github.com/SELinuxProject/selinux/pull/203#issuecomment-587695311,"From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)","Github is not accessible for everyone and others might not want to use Github, but still want have a chance to review and/or comment on the patch. If you dont like the redundancy then probably better to use the maillist for these sorts of things and skip github.

ok, sounds reasonable. Sorry.",True,{'HEART': ['https://github.com/garyttierney']}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,203,2020-02-12T21:16:01Z,2020-02-21T16:02:17Z,2020-02-21T16:02:17Z,CLOSED,False,2,2,1,https://github.com/mikhailnov,Fix Ru translation of failsafe context,1,[],https://github.com/SELinuxProject/selinux/pull/203,https://github.com/mikhailnov,9,https://github.com/SELinuxProject/selinux/pull/203#issuecomment-589717000,"From failsafe_context(5):
""The failsafe_context file allows SELinux-aware applications such as
PAM(8) to obtain a known valid login context for an administrator if
no valid default entries can be found elsewhere.""
""Надёжный"" means ""reliable"", ""резервный"" means ""reserve"",
the last variant is much closer to what ""failsafe"" really does.
CCing original translators: @darktemplarbasealt (I forgot Olesya's github account, I think I saw it somewhere)","As this has been merged manually, I am cloding this PR. Thanks.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,205,2020-03-05T16:11:26Z,2020-03-05T19:07:35Z,2020-03-05T19:07:35Z,MERGED,True,313,359,54,https://github.com/williamcroberts,Libselinux drop dso,4,[],https://github.com/SELinuxProject/selinux/pull/205,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/205,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,207,2020-03-12T21:39:41Z,2020-03-17T17:43:00Z,2020-03-17T17:43:00Z,MERGED,True,279,309,28,https://github.com/williamcroberts,Libsepol dso drop,3,[],https://github.com/SELinuxProject/selinux/pull/207,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/207,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,209,2020-03-19T10:29:06Z,2020-03-24T18:58:30Z,2020-03-24T18:58:30Z,CLOSED,False,63,54,12,https://github.com/cgzones,Security context t,3,[],https://github.com/SELinuxProject/selinux/pull/209,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/209,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,209,2020-03-19T10:29:06Z,2020-03-24T18:58:30Z,2020-03-24T18:58:30Z,CLOSED,False,63,54,12,https://github.com/cgzones,Security context t,3,[],https://github.com/SELinuxProject/selinux/pull/209,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/209#issuecomment-602736634,,"Please post to the mailing list, and the checkpolicy patch should be done separately; it isn't related to this.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,210,2020-03-20T19:00:28Z,2020-03-23T15:35:12Z,2020-03-23T15:35:12Z,MERGED,True,0,1,1,https://github.com/williamcroberts,cil: drop remaining dso.h include,1,[],https://github.com/SELinuxProject/selinux/pull/210,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/210,"Acked-by: Ondrej Mosnacek omosnace@redhat.com
Signed-off-by: William Roberts william.c.roberts@intel.com","Acked-by: Ondrej Mosnacek omosnace@redhat.com
Signed-off-by: William Roberts william.c.roberts@intel.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,211,2020-03-23T19:52:29Z,2020-03-24T15:41:22Z,2020-03-24T15:41:22Z,CLOSED,False,511,617,60,https://github.com/williamcroberts,[NO MERGE] Just testing against CI,6,[],https://github.com/SELinuxProject/selinux/pull/211,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/211,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,211,2020-03-23T19:52:29Z,2020-03-24T15:41:22Z,2020-03-24T15:41:22Z,CLOSED,False,511,617,60,https://github.com/williamcroberts,[NO MERGE] Just testing against CI,6,[],https://github.com/SELinuxProject/selinux/pull/211,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/211#issuecomment-602824063,,FYI you can run travis CI on your own repository as well. All you need is to login to https://travis-ci.com and enable your repo.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,211,2020-03-23T19:52:29Z,2020-03-24T15:41:22Z,2020-03-24T15:41:22Z,CLOSED,False,511,617,60,https://github.com/williamcroberts,[NO MERGE] Just testing against CI,6,[],https://github.com/SELinuxProject/selinux/pull/211,https://github.com/williamcroberts,3,https://github.com/SELinuxProject/selinux/pull/211#issuecomment-603312444,,"FYI you can run travis CI on your own repository as well. All you need is to login to https://travis-ci.com and enable your repo.

Yeah I know, but I had to stage these anyways... I just didn't want anyone to click merge",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,212,2020-03-24T15:42:16Z,2020-03-25T14:54:22Z,2020-03-25T14:54:22Z,MERGED,True,55,53,11,https://github.com/williamcroberts,replace last occurrences of security_context_t,2,[],https://github.com/SELinuxProject/selinux/pull/212,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/212,"tree-wide: replace last occurrences of security_context_t
checkpolicy: add missing forward declaration","tree-wide: replace last occurrences of security_context_t
checkpolicy: add missing forward declaration",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,213,2020-03-24T15:44:42Z,2020-03-25T14:53:41Z,2020-03-25T14:53:41Z,MERGED,True,456,564,49,https://github.com/williamcroberts,Libsemanage drop dso,4,[],https://github.com/SELinuxProject/selinux/pull/213,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/213,"This PR drops the DSO infrastructure in libsemanage and replaces it with compiler and linker script functionality.

libsemanage: cleanup linker map file
libsemanage: update linker script
libsemanage/Makefile: add -fno-semantic-interposition
libsemanage: drop hidden","This PR drops the DSO infrastructure in libsemanage and replaces it with compiler and linker script functionality.

libsemanage: cleanup linker map file
libsemanage: update linker script
libsemanage/Makefile: add -fno-semantic-interposition
libsemanage: drop hidden",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,213,2020-03-24T15:44:42Z,2020-03-25T14:53:41Z,2020-03-25T14:53:41Z,MERGED,True,456,564,49,https://github.com/williamcroberts,Libsemanage drop dso,4,[],https://github.com/SELinuxProject/selinux/pull/213,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/213#issuecomment-603885686,"This PR drops the DSO infrastructure in libsemanage and replaces it with compiler and linker script functionality.

libsemanage: cleanup linker map file
libsemanage: update linker script
libsemanage/Makefile: add -fno-semantic-interposition
libsemanage: drop hidden","All the builds passed, not sure why it didn't update the check status:
https://travis-ci.org/github/SELinuxProject/selinux/builds/666395814?utm_source=github_status&utm_medium=notification",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,214,2020-03-26T16:16:49Z,2020-03-27T14:27:05Z,2020-03-27T14:27:05Z,MERGED,True,4,27,2,https://github.com/williamcroberts,Cil fix dso bugs,2,[],https://github.com/SELinuxProject/selinux/pull/214,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/214,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,216,2020-03-28T21:27:15Z,2020-04-28T11:09:29Z,2020-04-28T11:09:35Z,CLOSED,False,1,1,1,https://github.com/topimiettinen,"libselinux: mount selinuxfs nodev,noexec,nosuid",1,[],https://github.com/SELinuxProject/selinux/pull/216,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/216,"Mount selinuxfs with mount flags nodev,noexec and nosuid. It's not
likely that this has any effect, but it's visually more pleasing.
Signed-off-by: Topi Miettinen toiwoton@gmail.com","Mount selinuxfs with mount flags nodev,noexec and nosuid. It's not
likely that this has any effect, but it's visually more pleasing.
Signed-off-by: Topi Miettinen toiwoton@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,218,2020-04-07T20:54:00Z,2020-04-10T21:44:09Z,2020-04-11T21:12:00Z,MERGED,True,1,1,1,https://github.com/aduskett,Fix building against musl and uClibc libc libraries.,1,[],https://github.com/SELinuxProject/selinux/pull/218,https://github.com/aduskett,1,https://github.com/SELinuxProject/selinux/pull/218,"Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.
Signed-off-by: Adam Duskett Aduskett@gmail.com","Currently, the src/Makefile provides the FTS_LDLIBS when building against musl
or uClibc. However, this is missing from utils/Makefile, which causes linking
to fail.
Add the FTS_LDLIBS variable to the LDLIBS variable in utils/Makefile to fix
compiling against uClibc and musl.
Signed-off-by: Adam Duskett Aduskett@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,219,2020-04-13T17:39:22Z,2020-04-15T15:28:59Z,2020-04-15T15:28:59Z,MERGED,True,0,29,1,https://github.com/williamcroberts,Libsemanage fix linker script,2,[],https://github.com/SELinuxProject/selinux/pull/219,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/219,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,221,2020-04-15T15:33:31Z,2020-04-17T20:49:38Z,2020-04-17T20:49:38Z,MERGED,True,417,5,4,https://github.com/williamcroberts,Libselinux py errno,3,[],https://github.com/SELinuxProject/selinux/pull/221,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/221,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,223,2020-04-20T16:42:32Z,2020-04-22T21:40:35Z,2020-04-22T21:40:35Z,MERGED,True,4,423,6,https://github.com/williamcroberts,Python and Makefile Cleanups,3,[],https://github.com/SELinuxProject/selinux/pull/223,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/223,"d49dd9b python/semanage: check rc after getting it
19b44a8 libselinux,libsemanage: remove double blank lines
9bacdba libselinux/utils: remove unneeded variable in Makefile","d49dd9b python/semanage: check rc after getting it
19b44a8 libselinux,libsemanage: remove double blank lines
9bacdba libselinux/utils: remove unneeded variable in Makefile",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,226,2020-04-26T14:09:23Z,2020-04-27T20:56:12Z,2020-04-28T06:54:13Z,MERGED,True,132,83,4,https://github.com/fishilico,restorecond: migrate to GDbus API,3,[],https://github.com/SELinuxProject/selinux/pull/226,https://github.com/fishilico,1,https://github.com/SELinuxProject/selinux/pull/226,"The first patch fixes #217 and the two others are improvement.
They have been send to the mailing list 2 weeks ago (https://lore.kernel.org/selinux/20200413162413.1161803-1-nicolas.iooss@m4x.org/T/) but have not yet been acked by another developer.","The first patch fixes #217 and the two others are improvement.
They have been send to the mailing list 2 weeks ago (https://lore.kernel.org/selinux/20200413162413.1161803-1-nicolas.iooss@m4x.org/T/) but have not yet been acked by another developer.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,227,2020-04-26T15:27:34Z,2020-04-28T07:26:27Z,2020-04-28T07:26:27Z,MERGED,True,3,1,1,https://github.com/topimiettinen,setsebool: report errors from commit phase,1,[],https://github.com/SELinuxProject/selinux/pull/227,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/227,"In case there are errors when committing changes to booleans, the
errors may not be reported to user except by nonzero exit status. With
""setsebool -V"" it's possible to see errors from commit phase, but
otherwise the unfixed command is silent:
# setsebool -V -P secure_mode_insmod=off
libsemanage.semanage_install_final_tmp: Could not copy /var/lib/selinux/final/default/contexts/files/file_contexts to /etc/selinux/default/contexts/files/file_contexts. (Read-only file system).
libsemanage.semanage_install_final_tmp: Could not copy /var/lib/selinux/final/default/contexts/files/file_contexts to /etc/selinux/default/contexts/files/file_contexts. (Read-only file system).

Fixed version alerts the user about problems even without -V:
 # setsebool -P secure_mode_insmod=off
Failed to commit changes to booleans: Read-only file system

Signed-off-by: Topi Miettinen toiwoton@gmail.com","In case there are errors when committing changes to booleans, the
errors may not be reported to user except by nonzero exit status. With
""setsebool -V"" it's possible to see errors from commit phase, but
otherwise the unfixed command is silent:
# setsebool -V -P secure_mode_insmod=off
libsemanage.semanage_install_final_tmp: Could not copy /var/lib/selinux/final/default/contexts/files/file_contexts to /etc/selinux/default/contexts/files/file_contexts. (Read-only file system).
libsemanage.semanage_install_final_tmp: Could not copy /var/lib/selinux/final/default/contexts/files/file_contexts to /etc/selinux/default/contexts/files/file_contexts. (Read-only file system).

Fixed version alerts the user about problems even without -V:
 # setsebool -P secure_mode_insmod=off
Failed to commit changes to booleans: Read-only file system

Signed-off-by: Topi Miettinen toiwoton@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,229,2020-04-28T11:09:21Z,2020-05-04T18:31:38Z,2020-05-04T18:31:38Z,CLOSED,False,2,1,1,https://github.com/topimiettinen,libselinux: mount selinuxfs noexec and nosuid,1,[],https://github.com/SELinuxProject/selinux/pull/229,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/229,"Mount selinuxfs with mount flags noexec and nosuid. It's not likely
that this has any effect, but it's visually more pleasing.
Option nodev can't be used because of /sys/fs/selinux/null device,
which is used by Android.
Signed-off-by: Topi Miettinen toiwoton@gmail.com","Mount selinuxfs with mount flags noexec and nosuid. It's not likely
that this has any effect, but it's visually more pleasing.
Option nodev can't be used because of /sys/fs/selinux/null device,
which is used by Android.
Signed-off-by: Topi Miettinen toiwoton@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,229,2020-04-28T11:09:21Z,2020-05-04T18:31:38Z,2020-05-04T18:31:38Z,CLOSED,False,2,1,1,https://github.com/topimiettinen,libselinux: mount selinuxfs noexec and nosuid,1,[],https://github.com/SELinuxProject/selinux/pull/229,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/229#issuecomment-623631295,"Mount selinuxfs with mount flags noexec and nosuid. It's not likely
that this has any effect, but it's visually more pleasing.
Option nodev can't be used because of /sys/fs/selinux/null device,
which is used by Android.
Signed-off-by: Topi Miettinen toiwoton@gmail.com","This has been merged as 7eaea21
Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,230,2020-04-29T11:52:06Z,2020-05-04T18:31:02Z,2020-05-04T18:31:03Z,CLOSED,False,6,6,3,https://github.com/topimiettinen,sepolicy: fix some typos and port definitions,1,[],https://github.com/SELinuxProject/selinux/pull/230,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/230,"The range of unreserved ports starts from 1024 and ends to
65535 (inclusive). (Secure) RPC ports can be between 512 and
1023 (inclusive).
Signed-off-by: Topi Miettinen toiwoton@gmail.com","The range of unreserved ports starts from 1024 and ends to
65535 (inclusive). (Secure) RPC ports can be between 512 and
1023 (inclusive).
Signed-off-by: Topi Miettinen toiwoton@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,230,2020-04-29T11:52:06Z,2020-05-04T18:31:02Z,2020-05-04T18:31:03Z,CLOSED,False,6,6,3,https://github.com/topimiettinen,sepolicy: fix some typos and port definitions,1,[],https://github.com/SELinuxProject/selinux/pull/230,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/230#issuecomment-623631012,"The range of unreserved ports starts from 1024 and ends to
65535 (inclusive). (Secure) RPC ports can be between 512 and
1023 (inclusive).
Signed-off-by: Topi Miettinen toiwoton@gmail.com","This has been merged as 6036658
Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,231,2020-04-29T14:52:32Z,2020-04-30T14:13:26Z,2020-04-30T14:13:26Z,MERGED,True,117,41,8,https://github.com/williamcroberts,Libselinux deprecated attr,18,[],https://github.com/SELinuxProject/selinux/pull/231,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/231,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,232,2020-04-29T17:18:25Z,2020-05-04T18:30:21Z,2020-05-04T18:30:21Z,CLOSED,False,1,11,1,https://github.com/topimiettinen,sepolicy-gui: fix columns in transitions view,1,[],https://github.com/SELinuxProject/selinux/pull/232,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/232,"Delete an unused column from view ""Application Transitions From"". The
second column displays names of the executable files instead of
booleans.
Signed-off-by: Topi Miettinen toiwoton@gmail.com","Delete an unused column from view ""Application Transitions From"". The
second column displays names of the executable files instead of
booleans.
Signed-off-by: Topi Miettinen toiwoton@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,232,2020-04-29T17:18:25Z,2020-05-04T18:30:21Z,2020-05-04T18:30:21Z,CLOSED,False,1,11,1,https://github.com/topimiettinen,sepolicy-gui: fix columns in transitions view,1,[],https://github.com/SELinuxProject/selinux/pull/232,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/232#issuecomment-623630651,"Delete an unused column from view ""Application Transitions From"". The
second column displays names of the executable files instead of
booleans.
Signed-off-by: Topi Miettinen toiwoton@gmail.com","This has been merged as db19687
Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,233,2020-04-30T15:32:16Z,2020-05-01T15:48:20Z,2020-05-01T15:48:21Z,MERGED,True,5,1,1,https://github.com/williamcroberts,libselinux: mark security_context_t typedef as deprecated,1,[],https://github.com/SELinuxProject/selinux/pull/233,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/233,"Follow-up of: 9eb9c93 (""Get rid of security_context_t and fix const declarations."")
Signed-off-by: Christian Göttsche cgzones@googlemail.com","Follow-up of: 9eb9c93 (""Get rid of security_context_t and fix const declarations."")
Signed-off-by: Christian Göttsche cgzones@googlemail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,234,2020-05-01T13:43:36Z,2020-05-10T17:38:12Z,2020-05-11T19:38:29Z,CLOSED,False,4,2,3,https://github.com/cgzones,tree-wide: introduce PYTHON_SETUP_ARGS to customize setup.py calls on …,1,[],https://github.com/SELinuxProject/selinux/pull/234,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/234,"…Debian
On Debian the distutils module is patched, so get_python_lib() returns by default /usr/lib/python3/dist-packages (no minor version).
But setuptools affecting setup.py is not patched to create the library directory at /usr/lib/python3/dist-packages by default, rather than a command line argument --install-layout deb is added.
Add PYTON_SETUP_ARGS as argument to affected setup.py calls and add a note in the global ReadMe.
See https://www.debian.org/doc/packaging-manuals/python-policy/packaging_tools.html section B.1.
Fixes: #187","…Debian
On Debian the distutils module is patched, so get_python_lib() returns by default /usr/lib/python3/dist-packages (no minor version).
But setuptools affecting setup.py is not patched to create the library directory at /usr/lib/python3/dist-packages by default, rather than a command line argument --install-layout deb is added.
Add PYTON_SETUP_ARGS as argument to affected setup.py calls and add a note in the global ReadMe.
See https://www.debian.org/doc/packaging-manuals/python-policy/packaging_tools.html section B.1.
Fixes: #187",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,234,2020-05-01T13:43:36Z,2020-05-10T17:38:12Z,2020-05-11T19:38:29Z,CLOSED,False,4,2,3,https://github.com/cgzones,tree-wide: introduce PYTHON_SETUP_ARGS to customize setup.py calls on …,1,[],https://github.com/SELinuxProject/selinux/pull/234,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/234#issuecomment-626362726,"…Debian
On Debian the distutils module is patched, so get_python_lib() returns by default /usr/lib/python3/dist-packages (no minor version).
But setuptools affecting setup.py is not patched to create the library directory at /usr/lib/python3/dist-packages by default, rather than a command line argument --install-layout deb is added.
Add PYTON_SETUP_ARGS as argument to affected setup.py calls and add a note in the global ReadMe.
See https://www.debian.org/doc/packaging-manuals/python-policy/packaging_tools.html section B.1.
Fixes: #187",Merged as 7c73601,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,238,2020-05-12T18:04:24Z,2020-05-13T15:52:28Z,2020-05-13T15:52:28Z,CLOSED,False,1,0,1,https://github.com/williamcroberts,mcstransd: fix memory leak in new_context_str,1,[],https://github.com/SELinuxProject/selinux/pull/238,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/238,"The return value of context_new needs to be free with context_free.
Acked-by: William Roberts william.c.roberts@intel.com
Signed-off-by: bauen1 j2468h@gmail.com","The return value of context_new needs to be free with context_free.
Acked-by: William Roberts william.c.roberts@intel.com
Signed-off-by: bauen1 j2468h@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,238,2020-05-12T18:04:24Z,2020-05-13T15:52:28Z,2020-05-13T15:52:28Z,CLOSED,False,1,0,1,https://github.com/williamcroberts,mcstransd: fix memory leak in new_context_str,1,[],https://github.com/SELinuxProject/selinux/pull/238,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/238#issuecomment-628081701,"The return value of context_new needs to be free with context_free.
Acked-by: William Roberts william.c.roberts@intel.com
Signed-off-by: bauen1 j2468h@gmail.com",Applied by Peter,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,240,2020-05-15T10:48:13Z,2020-06-08T06:57:27Z,2020-06-08T06:57:27Z,CLOSED,False,5,5,1,https://github.com/topimiettinen,secilc/docs: fix use of TMPDIR,1,[],https://github.com/SELinuxProject/selinux/pull/240,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/240,"Environment variable TMPDIR may be already set for the user building
and this could be equal to $XDG_RUNTIME_DIR or /tmp which are existing
directories. Then when running 'make clean', there are unintended side
effects:
rm -rf /run/user/1000
rm: cannot remove '/run/user/1000/dconf/user': Permission denied
rm: cannot remove '/run/user/1000/systemd': Permission denied
rm: cannot remove '/run/user/1000/gnupg': Permission denied
rm: cannot remove '/run/user/1000/dbus-1': Is a directory
rm: cannot remove '/run/user/1000/inaccessible': Permission denied
make[1]: *** [Makefile:68: clean] Error 1
Fix by using a different name.
Signed-off-by: Topi Miettinen toiwoton@gmail.com","Environment variable TMPDIR may be already set for the user building
and this could be equal to $XDG_RUNTIME_DIR or /tmp which are existing
directories. Then when running 'make clean', there are unintended side
effects:
rm -rf /run/user/1000
rm: cannot remove '/run/user/1000/dconf/user': Permission denied
rm: cannot remove '/run/user/1000/systemd': Permission denied
rm: cannot remove '/run/user/1000/gnupg': Permission denied
rm: cannot remove '/run/user/1000/dbus-1': Is a directory
rm: cannot remove '/run/user/1000/inaccessible': Permission denied
make[1]: *** [Makefile:68: clean] Error 1
Fix by using a different name.
Signed-off-by: Topi Miettinen toiwoton@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,240,2020-05-15T10:48:13Z,2020-06-08T06:57:27Z,2020-06-08T06:57:27Z,CLOSED,False,5,5,1,https://github.com/topimiettinen,secilc/docs: fix use of TMPDIR,1,[],https://github.com/SELinuxProject/selinux/pull/240,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/240#issuecomment-640407253,"Environment variable TMPDIR may be already set for the user building
and this could be equal to $XDG_RUNTIME_DIR or /tmp which are existing
directories. Then when running 'make clean', there are unintended side
effects:
rm -rf /run/user/1000
rm: cannot remove '/run/user/1000/dconf/user': Permission denied
rm: cannot remove '/run/user/1000/systemd': Permission denied
rm: cannot remove '/run/user/1000/gnupg': Permission denied
rm: cannot remove '/run/user/1000/dbus-1': Is a directory
rm: cannot remove '/run/user/1000/inaccessible': Permission denied
make[1]: *** [Makefile:68: clean] Error 1
Fix by using a different name.
Signed-off-by: Topi Miettinen toiwoton@gmail.com",4ad0abd,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,241,2020-05-15T17:05:55Z,2020-05-26T17:22:59Z,2020-05-26T17:23:03Z,CLOSED,False,9,2,1,https://github.com/PeterWhittaker,Add restorecon -x to not cross FS boundaries,1,[],https://github.com/SELinuxProject/selinux/pull/241,https://github.com/PeterWhittaker,1,https://github.com/SELinuxProject/selinux/pull/241,"As per #208, add the option -x to prevent restorecon from cross file system boundaries, by setting SELINUX_RESTORECON_XDEV iff iamrestorecon. If setfiles, call usage().","As per #208, add the option -x to prevent restorecon from cross file system boundaries, by setting SELINUX_RESTORECON_XDEV iff iamrestorecon. If setfiles, call usage().",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,242,2020-05-15T17:11:31Z,2020-05-26T17:21:42Z,2020-05-26T17:22:00Z,CLOSED,False,7,0,1,https://github.com/PeterWhittaker,Add restorecon -x opt to not cross FS boundaries,1,[],https://github.com/SELinuxProject/selinux/pull/242,https://github.com/PeterWhittaker,1,https://github.com/SELinuxProject/selinux/pull/242,"As per #208, add the option -x to prevent restorecon from cross file system boundaries.","As per #208, add the option -x to prevent restorecon from cross file system boundaries.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,246,2020-05-25T19:45:14Z,2020-06-09T19:59:12Z,2020-06-09T19:59:12Z,CLOSED,False,11,0,1,https://github.com/topimiettinen,semanage bash completion: handle semanage module,1,[],https://github.com/SELinuxProject/selinux/pull/246,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/246,"List modules for bash completion of semanage module.
Signed-off-by: Topi Miettinen toiwoton@gmail.com","List modules for bash completion of semanage module.
Signed-off-by: Topi Miettinen toiwoton@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,247,2020-05-28T12:39:21Z,2020-06-19T11:10:35Z,2020-06-19T12:53:01Z,CLOSED,False,54,30,4,https://github.com/cgzones,sepolgen-ifgen refpolicy update,3,[],https://github.com/SELinuxProject/selinux/pull/247,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/247,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,247,2020-05-28T12:39:21Z,2020-06-19T11:10:35Z,2020-06-19T12:53:01Z,CLOSED,False,54,30,4,https://github.com/cgzones,sepolgen-ifgen refpolicy update,3,[],https://github.com/SELinuxProject/selinux/pull/247,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/247#issuecomment-646578309,,5adc269 c40c4e4 4613038,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,250,2020-06-06T05:57:42Z,2020-06-19T11:09:06Z,2020-06-19T11:09:06Z,CLOSED,False,2,0,1,https://github.com/yanjinjq,fix NULL pointer use in selinux_restorecon_set_sehandle,2,[],https://github.com/SELinuxProject/selinux/pull/250,https://github.com/yanjinjq,1,https://github.com/SELinuxProject/selinux/pull/250,error occur when selinux_restorecon_default_handle return NULL in restorecon_init,error occur when selinux_restorecon_default_handle return NULL in restorecon_init,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,250,2020-06-06T05:57:42Z,2020-06-19T11:09:06Z,2020-06-19T11:09:06Z,CLOSED,False,2,0,1,https://github.com/yanjinjq,fix NULL pointer use in selinux_restorecon_set_sehandle,2,[],https://github.com/SELinuxProject/selinux/pull/250,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/250#issuecomment-640408269,error occur when selinux_restorecon_default_handle return NULL in restorecon_init,"Hello, thank you for your patch. In order for your patch to be merged, it needs to follow some rules that are written file CONTRIBUTING.md (https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md). More precisely:


Please send your patches to the mailing list selinux@vger.kernel.org (for example by using git format-patch and git send-email) in order for the developers to review and test it. If you have trouble doing this, I can forward your patch for you.


Please add a ""Signed-off-by:"" line to the commit message. This means your code meets the Developer's certificate of origin which is written in CONTRIBUTING.md.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,250,2020-06-06T05:57:42Z,2020-06-19T11:09:06Z,2020-06-19T11:09:06Z,CLOSED,False,2,0,1,https://github.com/yanjinjq,fix NULL pointer use in selinux_restorecon_set_sehandle,2,[],https://github.com/SELinuxProject/selinux/pull/250,https://github.com/bachradsusi,3,https://github.com/SELinuxProject/selinux/pull/250#issuecomment-646577749,error occur when selinux_restorecon_default_handle return NULL in restorecon_init,08f5e30,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,255,2020-07-12T19:04:12Z,2020-07-21T06:36:42Z,2020-07-21T06:36:43Z,CLOSED,False,1,0,1,https://github.com/flyn-org,Add #include <limits.h> from sepolgen-ifgen-attr-helper.c,1,[],https://github.com/SELinuxProject/selinux/pull/255,https://github.com/flyn-org,1,https://github.com/SELinuxProject/selinux/pull/255,"I found that building on OpenWrt/musl failed with:
sepolgen-ifgen-attr-helper.c:152:16: error: 'PATH_MAX' undeclared ...

Musl is less ""generous"" than glibc in recursively including header files,
and I suspect this is the reason for this error. Explicitly including
limits.h fixes the problem.
Signed-off-by: W. Michael Petullo mike@flyn.org","I found that building on OpenWrt/musl failed with:
sepolgen-ifgen-attr-helper.c:152:16: error: 'PATH_MAX' undeclared ...

Musl is less ""generous"" than glibc in recursively including header files,
and I suspect this is the reason for this error. Explicitly including
limits.h fixes the problem.
Signed-off-by: W. Michael Petullo mike@flyn.org",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,255,2020-07-12T19:04:12Z,2020-07-21T06:36:42Z,2020-07-21T06:36:43Z,CLOSED,False,1,0,1,https://github.com/flyn-org,Add #include <limits.h> from sepolgen-ifgen-attr-helper.c,1,[],https://github.com/SELinuxProject/selinux/pull/255,https://github.com/stephensmalley,2,https://github.com/SELinuxProject/selinux/pull/255#issuecomment-657535064,"I found that building on OpenWrt/musl failed with:
sepolgen-ifgen-attr-helper.c:152:16: error: 'PATH_MAX' undeclared ...

Musl is less ""generous"" than glibc in recursively including header files,
and I suspect this is the reason for this error. Explicitly including
limits.h fixes the problem.
Signed-off-by: W. Michael Petullo mike@flyn.org","Thanks, please send to selinux@vger.kernel.org preferably using git send-email.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,255,2020-07-12T19:04:12Z,2020-07-21T06:36:42Z,2020-07-21T06:36:43Z,CLOSED,False,1,0,1,https://github.com/flyn-org,Add #include <limits.h> from sepolgen-ifgen-attr-helper.c,1,[],https://github.com/SELinuxProject/selinux/pull/255,https://github.com/flyn-org,3,https://github.com/SELinuxProject/selinux/pull/255#issuecomment-660559219,"I found that building on OpenWrt/musl failed with:
sepolgen-ifgen-attr-helper.c:152:16: error: 'PATH_MAX' undeclared ...

Musl is less ""generous"" than glibc in recursively including header files,
and I suspect this is the reason for this error. Explicitly including
limits.h fixes the problem.
Signed-off-by: W. Michael Petullo mike@flyn.org",Please see https://lore.kernel.org/selinux/51d7bd5e067978ea5340ee408a7329e8b921b372.camel@flyn.org/.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,255,2020-07-12T19:04:12Z,2020-07-21T06:36:42Z,2020-07-21T06:36:43Z,CLOSED,False,1,0,1,https://github.com/flyn-org,Add #include <limits.h> from sepolgen-ifgen-attr-helper.c,1,[],https://github.com/SELinuxProject/selinux/pull/255,https://github.com/fishilico,4,https://github.com/SELinuxProject/selinux/pull/255#issuecomment-661665100,"I found that building on OpenWrt/musl failed with:
sepolgen-ifgen-attr-helper.c:152:16: error: 'PATH_MAX' undeclared ...

Musl is less ""generous"" than glibc in recursively including header files,
and I suspect this is the reason for this error. Explicitly including
limits.h fixes the problem.
Signed-off-by: W. Michael Petullo mike@flyn.org",Merged as ccd973f. Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,257,2020-07-15T07:35:49Z,2020-07-21T06:37:25Z,2020-07-21T06:37:26Z,CLOSED,False,1,0,1,https://github.com/bigon,restorecond: Set X-GNOME-HiddenUnderSystemd=true in restorecond.deskt…,1,[],https://github.com/SELinuxProject/selinux/pull/257,https://github.com/bigon,1,https://github.com/SELinuxProject/selinux/pull/257,"…op file
This completely inactivate the .desktop file incase the user session is
managed by systemd as restorecond also provide a service file","…op file
This completely inactivate the .desktop file incase the user session is
managed by systemd as restorecond also provide a service file",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,257,2020-07-15T07:35:49Z,2020-07-21T06:37:25Z,2020-07-21T06:37:26Z,CLOSED,False,1,0,1,https://github.com/bigon,restorecond: Set X-GNOME-HiddenUnderSystemd=true in restorecond.deskt…,1,[],https://github.com/SELinuxProject/selinux/pull/257,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/257#issuecomment-659260868,"…op file
This completely inactivate the .desktop file incase the user session is
managed by systemd as restorecond also provide a service file",Thanks! Please provide Signed-off-by and send it to selinux@vger.kernel.org for review - https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,257,2020-07-15T07:35:49Z,2020-07-21T06:37:25Z,2020-07-21T06:37:26Z,CLOSED,False,1,0,1,https://github.com/bigon,restorecond: Set X-GNOME-HiddenUnderSystemd=true in restorecond.deskt…,1,[],https://github.com/SELinuxProject/selinux/pull/257,https://github.com/fishilico,3,https://github.com/SELinuxProject/selinux/pull/257#issuecomment-661665342,"…op file
This completely inactivate the .desktop file incase the user session is
managed by systemd as restorecond also provide a service file",Merged as 9e2b8c6. Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,259,2020-08-11T19:51:37Z,2020-08-11T22:01:05Z,2020-08-11T22:01:05Z,MERGED,True,1,1,1,https://github.com/williamcroberts,ci: fix stall on git log -1,1,[],https://github.com/SELinuxProject/selinux/pull/259,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/259,"git log -1 may use a pager to output long messages, and when the pager
is invoked, leads to stalls on the ci system waiting for user input.
Use --oneline to print the short part of the commit message and
the digest. This information is for debug/informational purposes only,
so truncating the output is sufficient.
Reported-by: Stephen Smalley sds@tycho.nsa.gov
Signed-off-by: William Roberts william.c.roberts@intel.com","git log -1 may use a pager to output long messages, and when the pager
is invoked, leads to stalls on the ci system waiting for user input.
Use --oneline to print the short part of the commit message and
the digest. This information is for debug/informational purposes only,
so truncating the output is sufficient.
Reported-by: Stephen Smalley sds@tycho.nsa.gov
Signed-off-by: William Roberts william.c.roberts@intel.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,260,2020-08-18T21:58:45Z,2020-08-30T15:37:32Z,2020-08-30T17:17:01Z,CLOSED,False,16,16,4,https://github.com/cgzones,Improve xperm support,2,[],https://github.com/SELinuxProject/selinux/pull/260,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/260,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,260,2020-08-18T21:58:45Z,2020-08-30T15:37:32Z,2020-08-30T17:17:01Z,CLOSED,False,16,16,4,https://github.com/cgzones,Improve xperm support,2,[],https://github.com/SELinuxProject/selinux/pull/260,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/260#issuecomment-683435114,,The commits in this Pull Request were merged as 9e239e5 and 2a60de8. Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,261,2020-08-24T13:08:03Z,2020-09-06T17:22:58Z,2020-09-06T17:22:58Z,CLOSED,False,37,18,1,https://github.com/cgzones,SELinux status page improvements,2,[],https://github.com/SELinuxProject/selinux/pull/261,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/261,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,262,2020-08-25T12:28:12Z,,2021-11-16T13:24:16Z,OPEN,False,33,159,1,https://github.com/cgzones,[WIP] Scan with Coverity,1,[],https://github.com/SELinuxProject/selinux/pull/262,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/262,"This is an attempt to revive Coverity Scan.
Please do not merge but instead push to the branch coverity_scan and replace the secure token with a value from
https://scan.coverity.com/projects/selinuxproject-selinux/builds/new?tab=travis_ci -> Example","This is an attempt to revive Coverity Scan.
Please do not merge but instead push to the branch coverity_scan and replace the secure token with a value from
https://scan.coverity.com/projects/selinuxproject-selinux/builds/new?tab=travis_ci -> Example",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,262,2020-08-25T12:28:12Z,,2021-11-16T13:24:16Z,OPEN,False,33,159,1,https://github.com/cgzones,[WIP] Scan with Coverity,1,[],https://github.com/SELinuxProject/selinux/pull/262,https://github.com/evverx,2,https://github.com/SELinuxProject/selinux/pull/262#issuecomment-970087388,"This is an attempt to revive Coverity Scan.
Please do not merge but instead push to the branch coverity_scan and replace the secure token with a value from
https://scan.coverity.com/projects/selinuxproject-selinux/builds/new?tab=travis_ci -> Example",@fishilico could you add a secret named COVERITY_SCAN_TOKEN to the repository? I'll try to add an action sending data to Coverity daily by analogy with util-linux/util-linux#1491.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,262,2020-08-25T12:28:12Z,,2021-11-16T13:24:16Z,OPEN,False,33,159,1,https://github.com/cgzones,[WIP] Scan with Coverity,1,[],https://github.com/SELinuxProject/selinux/pull/262,https://github.com/evverx,3,https://github.com/SELinuxProject/selinux/pull/262#issuecomment-970267532,"This is an attempt to revive Coverity Scan.
Please do not merge but instead push to the branch coverity_scan and replace the secure token with a value from
https://scan.coverity.com/projects/selinuxproject-selinux/builds/new?tab=travis_ci -> Example","In the meantime, I think another option would be to set up codeql. I kind of integrated it into my fork in evverx#1 and it seems to be working

I'll try to polish it a bit and open a PR here
The downside is that all the alerts are hidden in the security tab of repositories, which makes it hard to keep track of reports in one place for external contributors. On the other hand, once codeql ends up in forks they are visible there too. PRs also get analyzed",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,264,2020-10-12T14:55:46Z,2020-10-23T14:50:03Z,2020-10-23T14:50:03Z,MERGED,True,8,1,2,https://github.com/Thaodan,libselinux: Add build option to disable X11 backend,1,[],https://github.com/SELinuxProject/selinux/pull/264,https://github.com/Thaodan,1,https://github.com/SELinuxProject/selinux/pull/264,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,264,2020-10-12T14:55:46Z,2020-10-23T14:50:03Z,2020-10-23T14:50:03Z,MERGED,True,8,1,2,https://github.com/Thaodan,libselinux: Add build option to disable X11 backend,1,[],https://github.com/SELinuxProject/selinux/pull/264,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/264#issuecomment-707569672,,"Thanks for the patch. Please send it for review to SELinux mailing list at selinux@vger.kernel.org see https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md
If you can't for some reason, I can do it for you.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,265,2020-10-13T07:46:59Z,2020-11-02T02:47:16Z,2020-11-03T20:09:00Z,MERGED,True,7,2,2,https://github.com/Thaodan,libselinux: LABEL_BACKEND_ANDROID add option to enable it,1,[],https://github.com/SELinuxProject/selinux/pull/265,https://github.com/Thaodan,1,https://github.com/SELinuxProject/selinux/pull/265,Add option to just enable the android label backend without disabling anything else.,Add option to just enable the android label backend without disabling anything else.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,265,2020-10-13T07:46:59Z,2020-11-02T02:47:16Z,2020-11-03T20:09:00Z,MERGED,True,7,2,2,https://github.com/Thaodan,libselinux: LABEL_BACKEND_ANDROID add option to enable it,1,[],https://github.com/SELinuxProject/selinux/pull/265,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/265#issuecomment-707569228,Add option to just enable the android label backend without disabling anything else.,"Thanks for the patch. Please send it for review to SELinux mailing list at selinux@vger.kernel.org see https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md
If you can't for some reason, I can do it for you.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,265,2020-10-13T07:46:59Z,2020-11-02T02:47:16Z,2020-11-03T20:09:00Z,MERGED,True,7,2,2,https://github.com/Thaodan,libselinux: LABEL_BACKEND_ANDROID add option to enable it,1,[],https://github.com/SELinuxProject/selinux/pull/265,https://github.com/Thaodan,3,https://github.com/SELinuxProject/selinux/pull/265#issuecomment-719858556,Add option to just enable the android label backend without disabling anything else.,"Rebased, use better wording.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,267,2020-10-23T14:48:57Z,2020-10-23T14:49:53Z,2020-10-23T14:49:53Z,CLOSED,False,8,1,2,https://github.com/williamcroberts,libselinux: Add build option to disable X11 backend,1,[],https://github.com/SELinuxProject/selinux/pull/267,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/267,"Add build option to libselinux to disable the X11 backend without using
ANDROID_HOST.
Signed-off-by: Björn Bidar bjorn.bidar@jolla.com","Add build option to libselinux to disable the X11 backend without using
ANDROID_HOST.
Signed-off-by: Björn Bidar bjorn.bidar@jolla.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,267,2020-10-23T14:48:57Z,2020-10-23T14:49:53Z,2020-10-23T14:49:53Z,CLOSED,False,8,1,2,https://github.com/williamcroberts,libselinux: Add build option to disable X11 backend,1,[],https://github.com/SELinuxProject/selinux/pull/267,https://github.com/williamcroberts,2,https://github.com/SELinuxProject/selinux/pull/267#issuecomment-715389517,"Add build option to libselinux to disable the X11 backend without using
ANDROID_HOST.
Signed-off-by: Björn Bidar bjorn.bidar@jolla.com",Duplicate of #264,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,268,2020-10-26T07:56:41Z,2020-11-13T12:16:32Z,2020-11-17T13:42:51Z,CLOSED,False,4,2,1,https://github.com/bmwiedemann,python/sepolicy: allow to override manpage date,1,[],https://github.com/SELinuxProject/selinux/pull/268,https://github.com/bmwiedemann,1,https://github.com/SELinuxProject/selinux/pull/268,"allow to override manpage date
in order to make builds reproducible.
See https://reproducible-builds.org/ for why this is good
and https://reproducible-builds.org/specs/source-date-epoch/
for the definition of this variable.
This PR was done while working on reproducible builds for openSUSE","allow to override manpage date
in order to make builds reproducible.
See https://reproducible-builds.org/ for why this is good
and https://reproducible-builds.org/specs/source-date-epoch/
for the definition of this variable.
This PR was done while working on reproducible builds for openSUSE",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,268,2020-10-26T07:56:41Z,2020-11-13T12:16:32Z,2020-11-17T13:42:51Z,CLOSED,False,4,2,1,https://github.com/bmwiedemann,python/sepolicy: allow to override manpage date,1,[],https://github.com/SELinuxProject/selinux/pull/268,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/268#issuecomment-719448428,"allow to override manpage date
in order to make builds reproducible.
See https://reproducible-builds.org/ for why this is good
and https://reproducible-builds.org/specs/source-date-epoch/
for the definition of this variable.
This PR was done while working on reproducible builds for openSUSE","Thanks for the patch. Please send it for review to SELinux mailing list at selinux@vger.kernel.org see https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md
If you can't for some reason, I can do it for you.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,268,2020-10-26T07:56:41Z,2020-11-13T12:16:32Z,2020-11-17T13:42:51Z,CLOSED,False,4,2,1,https://github.com/bmwiedemann,python/sepolicy: allow to override manpage date,1,[],https://github.com/SELinuxProject/selinux/pull/268,https://github.com/bmwiedemann,3,https://github.com/SELinuxProject/selinux/pull/268#issuecomment-719817848,"allow to override manpage date
in order to make builds reproducible.
See https://reproducible-builds.org/ for why this is good
and https://reproducible-builds.org/specs/source-date-epoch/
for the definition of this variable.
This PR was done while working on reproducible builds for openSUSE",https://lore.kernel.org/selinux/20201030215309.23606-1-bwiedemann@suse.de/T/,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,268,2020-10-26T07:56:41Z,2020-11-13T12:16:32Z,2020-11-17T13:42:51Z,CLOSED,False,4,2,1,https://github.com/bmwiedemann,python/sepolicy: allow to override manpage date,1,[],https://github.com/SELinuxProject/selinux/pull/268,https://github.com/bachradsusi,4,https://github.com/SELinuxProject/selinux/pull/268#issuecomment-726733123,"allow to override manpage date
in order to make builds reproducible.
See https://reproducible-builds.org/ for why this is good
and https://reproducible-builds.org/specs/source-date-epoch/
for the definition of this variable.
This PR was done while working on reproducible builds for openSUSE",fadcc83,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,271,2020-11-26T12:06:46Z,2020-12-04T06:46:52Z,2020-12-04T06:48:55Z,CLOSED,False,5,4,2,https://github.com/HuKeping,Consider a version format of X.Y for selinux,3,[],https://github.com/SELinuxProject/selinux/pull/271,https://github.com/HuKeping,1,https://github.com/SELinuxProject/selinux/pull/271,"As per discussed at #270 and mailing list, we consider a version format of X.Y starting at 3.2.
This patch set contains 3 commits:

[Patch 1/3] Introduce VERSION file for selinux
[Patch 2/3] Use X.Y instead of date for release tag
[Patch 3/3] Simplify the tarball generating scripts","As per discussed at #270 and mailing list, we consider a version format of X.Y starting at 3.2.
This patch set contains 3 commits:

[Patch 1/3] Introduce VERSION file for selinux
[Patch 2/3] Use X.Y instead of date for release tag
[Patch 3/3] Simplify the tarball generating scripts",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,271,2020-11-26T12:06:46Z,2020-12-04T06:46:52Z,2020-12-04T06:48:55Z,CLOSED,False,5,4,2,https://github.com/HuKeping,Consider a version format of X.Y for selinux,3,[],https://github.com/SELinuxProject/selinux/pull/271,https://github.com/HuKeping,2,https://github.com/SELinuxProject/selinux/pull/271#issuecomment-734261552,"As per discussed at #270 and mailing list, we consider a version format of X.Y starting at 3.2.
This patch set contains 3 commits:

[Patch 1/3] Introduce VERSION file for selinux
[Patch 2/3] Use X.Y instead of date for release tag
[Patch 3/3] Simplify the tarball generating scripts","Have tested on my host, here's the output:
$ scripts/release 
Add the following to the ../selinux.wiki/Releases.md wiki page:

## Release 3.10

[Release Notes](https://github.com/SELinuxProject/selinux/releases/download/3.10/RELEASE-3.10.txt)

[full log](https://github.com/SELinuxProject/selinux/releases/download/3.10/log-3.10.txt)

[short log](https://github.com/SELinuxProject/selinux/releases/download/3.10/shortlog-3.10.txt)

[checkpolicy-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/checkpolicy-3.1.tar.gz) dfc7707070520c93b14fbbdfdbe081364d806bf28e3e79e10318c2594c77bbb2

[libselinux-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/libselinux-3.1.tar.gz) ea5dcbb4d859e3f999c26a13c630da2f16dff9462e3cc8cb7b458ac157d112e7

[libsemanage-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/libsemanage-3.1.tar.gz) 22d6c75526e40d1781c30bcf29abf97171bdfe6780923f11c8e1c76a75a21ff8

[libsepol-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/libsepol-3.1.tar.gz) ae6778d01443fdd38cd30eeee846494e19f4d407b09872580372f4aa4bf8a3cc

[mcstrans-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/mcstrans-3.1.tar.gz) cc918576c17340fc944849d785e2a7400b269ef079a36b871c140504164d6a45

[policycoreutils-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/policycoreutils-3.1.tar.gz) c889f62ee80f8b6a369469a9b8af51f5b797975aeaa291f5c5960cc12eed1934

[restorecond-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/restorecond-3.1.tar.gz) 82ca45099685a45d718f11f8859963c1ba83d98e510312cbf0b7dc5664c60ad0

[secilc-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/secilc-3.1.tar.gz) 86117246fec3017af710a9ff7c1dae3ed1cd571e232a86cff3e2a3de2d6aa65c

[selinux-dbus-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/selinux-dbus-3.1.tar.gz) 61f936d200ff8302c513883c67bb7c4c496513e78122954cbd33db62086a06f2

[selinux-gui-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/selinux-gui-3.1.tar.gz) 40775eaef965259ca2f8ad49c23b03ff2c8f70808a9e0587b1075970b2509c3d

[selinux-python-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/selinux-python-3.1.tar.gz) f4d0a1a030bc291a6af498b26e0676b745075dd289a8ba16cdec86c3ea8f2f02

[selinux-sandbox-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/selinux-sandbox-3.1.tar.gz) c79b958e2f64570a59e60638fd13c15fd77c7c2bbac31c7ad4afb03718432b84

[semodule-utils-3.1.tar.gz](https://github.com/SELinuxProject/selinux/releases/download/3.10/semodule-utils-3.1.tar.gz) 0cc37f9cec751d9c2abb5f2b228b060567e973cb47c19b53b8a4a7378baaa853

And then run:
  cd ../selinux.wiki
  git commit  -m ""Release 3.10"" -a -s
  git push

Push the release and its tags to git via:
  git push
  git push --tags

Create a new release from the latest tag on https://github.com/SELinuxProject/selinux/tags

Add files from releases/3.10 as assets to the new github release
hukeping@workwork:~/opensource/selinux$ echo $?
0
hukeping@workwork:~/opensource/selinux$ git status .
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use ""git push"" to publish your local commits)

nothing to commit, working tree clean


$ ls releases/
3.10


$ ls releases/3.10/
checkpolicy-3.1.tar.gz  libsepol-3.1.tar.gz         restorecond-3.1.tar.gz   selinux-gui-3.1.tar.gz      semodule-utils-3.1.tar.gz
libselinux-3.1.tar.gz   mcstrans-3.1.tar.gz         secilc-3.1.tar.gz        selinux-python-3.1.tar.gz
libsemanage-3.1.tar.gz  policycoreutils-3.1.tar.gz  selinux-dbus-3.1.tar.gz  selinux-sandbox-3.1.tar.gz",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,271,2020-11-26T12:06:46Z,2020-12-04T06:46:52Z,2020-12-04T06:48:55Z,CLOSED,False,5,4,2,https://github.com/HuKeping,Consider a version format of X.Y for selinux,3,[],https://github.com/SELinuxProject/selinux/pull/271,https://github.com/HuKeping,3,https://github.com/SELinuxProject/selinux/pull/271#issuecomment-734575442,"As per discussed at #270 and mailing list, we consider a version format of X.Y starting at 3.2.
This patch set contains 3 commits:

[Patch 1/3] Introduce VERSION file for selinux
[Patch 2/3] Use X.Y instead of date for release tag
[Patch 3/3] Simplify the tarball generating scripts",Ping @bachradsusi  PTAL,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,271,2020-11-26T12:06:46Z,2020-12-04T06:46:52Z,2020-12-04T06:48:55Z,CLOSED,False,5,4,2,https://github.com/HuKeping,Consider a version format of X.Y for selinux,3,[],https://github.com/SELinuxProject/selinux/pull/271,https://github.com/bachradsusi,4,https://github.com/SELinuxProject/selinux/pull/271#issuecomment-734721968,"As per discussed at #270 and mailing list, we consider a version format of X.Y starting at 3.2.
This patch set contains 3 commits:

[Patch 1/3] Introduce VERSION file for selinux
[Patch 2/3] Use X.Y instead of date for release tag
[Patch 3/3] Simplify the tarball generating scripts","Sorry, I've been busy. I've resent it to the mailing list. Looks good to me so I'll provide ack and if there's no other objection it would be merged during next 3 working days.
Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,271,2020-11-26T12:06:46Z,2020-12-04T06:46:52Z,2020-12-04T06:48:55Z,CLOSED,False,5,4,2,https://github.com/HuKeping,Consider a version format of X.Y for selinux,3,[],https://github.com/SELinuxProject/selinux/pull/271,https://github.com/HuKeping,5,https://github.com/SELinuxProject/selinux/pull/271#issuecomment-738601406,"As per discussed at #270 and mailing list, we consider a version format of X.Y starting at 3.2.
This patch set contains 3 commits:

[Patch 1/3] Introduce VERSION file for selinux
[Patch 2/3] Use X.Y instead of date for release tag
[Patch 3/3] Simplify the tarball generating scripts","Commit f5f6303  f63ac24 0c51cdd upstream.
Closing.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,272,2020-11-27T14:53:53Z,2020-11-29T18:10:48Z,2020-11-29T18:10:48Z,MERGED,True,191,160,3,https://github.com/WOnder93,Migrate to GH Actions (partially),2,[],https://github.com/SELinuxProject/selinux/pull/272,https://github.com/WOnder93,1,https://github.com/SELinuxProject/selinux/pull/272,"https://lore.kernel.org/selinux/20201124075022.37033-1-nicolas.iooss@m4x.org/
https://lore.kernel.org/selinux/20201127141745.1579498-1-omosnace@redhat.com/","https://lore.kernel.org/selinux/20201124075022.37033-1-nicolas.iooss@m4x.org/
https://lore.kernel.org/selinux/20201127141745.1579498-1-omosnace@redhat.com/",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,273,2020-11-30T11:15:19Z,,2020-11-30T11:44:37Z,OPEN,False,85,36,2,https://github.com/deleriux,Fix bug in Checkmodule when downwriting to Module version 12 or lower.,3,[],https://github.com/SELinuxProject/selinux/pull/273,https://github.com/deleriux,1,https://github.com/SELinuxProject/selinux/pull/273,"Stumbled upon this issue attempting to port a module from Fedora 33 to EL6.
Steps to reproduce:
Try to build the following module then make a module from an older release:
module test 1.0.0;

require {
  type default_t;
}
attribute_role new_atrole;

Build
$ checkmodule -M -m -c 12 -o test.mod test.te
$ semodule_package -o test.pp -m test.mod
$ semodule_package:  Error while reading policy module from test.mod

With fix:
$ checkmodule -o test.mod -M -m -c12 test.te 
libsepol.policydb_write: Discarding role attribute rules
$ semodule_package -o test.pp -m test.mod

Failure occurs when the current module gets written out as the scope declaration remains intact.
semodule_package files correctly at policydb.c:3913 doing a hash table search on a scope key that is not
in the symbol table.
This patch fixes the problem by removing the hashtable entries and scope declarations properly prior to module write and emits a warning to the user of the unsupported statements.
Also altered hashtap_map slightly to allow it to be used for hashtab_remove calls in order to support the patch.","Stumbled upon this issue attempting to port a module from Fedora 33 to EL6.
Steps to reproduce:
Try to build the following module then make a module from an older release:
module test 1.0.0;

require {
  type default_t;
}
attribute_role new_atrole;

Build
$ checkmodule -M -m -c 12 -o test.mod test.te
$ semodule_package -o test.pp -m test.mod
$ semodule_package:  Error while reading policy module from test.mod

With fix:
$ checkmodule -o test.mod -M -m -c12 test.te 
libsepol.policydb_write: Discarding role attribute rules
$ semodule_package -o test.pp -m test.mod

Failure occurs when the current module gets written out as the scope declaration remains intact.
semodule_package files correctly at policydb.c:3913 doing a hash table search on a scope key that is not
in the symbol table.
This patch fixes the problem by removing the hashtable entries and scope declarations properly prior to module write and emits a warning to the user of the unsupported statements.
Also altered hashtap_map slightly to allow it to be used for hashtab_remove calls in order to support the patch.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,274,2020-12-06T21:12:20Z,2020-12-08T17:35:11Z,2020-12-08T17:36:41Z,CLOSED,False,1,0,1,https://github.com/evverx,libsepol/cil: always destroy the lexer state,1,[],https://github.com/SELinuxProject/selinux/pull/274,https://github.com/evverx,1,https://github.com/SELinuxProject/selinux/pull/274,"It was found in google/oss-fuzz#4790:
Invalid token '' at line 2 of fuzz
	NEW_FUNC[1/2]: 0x67fff0 in yy_get_previous_state /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1143
	NEW_FUNC[2/2]: 0x6803e0 in yy_try_NUL_trans /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1176
=================================================================
==12==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000007992 at pc 0x000000681800 bp 0x7ffccddee530 sp 0x7ffccddee528
WRITE of size 1 at 0x602000007992 thread T0
SCARINESS: 41 (1-byte-write-heap-use-after-free)
    #0 0x6817ff in cil_yy_switch_to_buffer /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1315:17
    #1 0x6820cc in cil_yy_scan_buffer /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1571:2
    #2 0x682662 in cil_lexer_setup /src/selinux/libsepol/src/../cil/src/cil_lexer.l:73:6
    #3 0x5cf2ae in cil_parser /src/selinux/libsepol/src/../cil/src/cil_parser.c:220:2
    #4 0x56d5e2 in cil_add_file /src/selinux/libsepol/src/../cil/src/cil.c:514:7
    #5 0x556e91 in LLVMFuzzerTestOneInput /src/secilc-fuzzer.c:434:7
    #6 0x459ab1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #7 0x45a755 in fuzzer::Fuzzer::TryDetectingAMemoryLeak(unsigned char const*, unsigned long, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:675:3
    #8 0x45acd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:747:5
    #9 0x45b875 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:883:5
    #10 0x4499fb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:906:6
    #11 0x473a32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7f982296d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x41e758 in _start (/out/secilc-fuzzer+0x41e758)

DEDUP_TOKEN: cil_yy_switch_to_buffer--cil_yy_scan_buffer--cil_lexer_setup
0x602000007992 is located 2 bytes inside of 4-byte region [0x602000007990,0x602000007994)
freed by thread T0 here:
    #0 0x521ef2 in free /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:127:3
    #1 0x56d630 in cil_add_file /src/selinux/libsepol/src/../cil/src/cil.c:526:2
    #2 0x556e91 in LLVMFuzzerTestOneInput /src/secilc-fuzzer.c:434:7
    #3 0x459ab1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #4 0x458fba in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:505:3
    #5 0x45acc7 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:745:19
    #6 0x45b875 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:883:5
    #7 0x4499fb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:906:6
    #8 0x473a32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7f982296d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: free--cil_add_file--LLVMFuzzerTestOneInput
previously allocated by thread T0 here:
    #0 0x52215d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x5cecb8 in cil_malloc /src/selinux/libsepol/src/../cil/src/cil_mem.c:39:14
    #2 0x56d584 in cil_add_file /src/selinux/libsepol/src/../cil/src/cil.c:510:11
    #3 0x556e91 in LLVMFuzzerTestOneInput /src/secilc-fuzzer.c:434:7
    #4 0x459ab1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #5 0x458fba in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:505:3
    #6 0x45acc7 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:745:19
    #7 0x45b875 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:883:5
    #8 0x4499fb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:906:6
    #9 0x473a32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7f982296d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--cil_malloc--cil_add_file
SUMMARY: AddressSanitizer: heap-use-after-free /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1315:17 in cil_yy_switch_to_buffer
Shadow bytes around the buggy address:
  0x0c047fff8ee0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff8ef0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff8f00: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd
  0x0c047fff8f10: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff8f20: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa
=>0x0c047fff8f30: fa fa[fd]fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8f40: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8f50: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa
  0x0c047fff8f60: fa fa fd fd fa fa fd fa fa fa fd fd fa fa fd fa
  0x0c047fff8f70: fa fa 00 00 fa fa 02 fa fa fa 02 fa fa fa 00 fa
  0x0c047fff8f80: fa fa 03 fa fa fa 00 fa fa fa 03 fa fa fa 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12==ABORTING

Signed-off-by: Evgeny Vereshchagin evvers@ya.ru","It was found in google/oss-fuzz#4790:
Invalid token '' at line 2 of fuzz
	NEW_FUNC[1/2]: 0x67fff0 in yy_get_previous_state /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1143
	NEW_FUNC[2/2]: 0x6803e0 in yy_try_NUL_trans /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1176
=================================================================
==12==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000007992 at pc 0x000000681800 bp 0x7ffccddee530 sp 0x7ffccddee528
WRITE of size 1 at 0x602000007992 thread T0
SCARINESS: 41 (1-byte-write-heap-use-after-free)
    #0 0x6817ff in cil_yy_switch_to_buffer /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1315:17
    #1 0x6820cc in cil_yy_scan_buffer /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1571:2
    #2 0x682662 in cil_lexer_setup /src/selinux/libsepol/src/../cil/src/cil_lexer.l:73:6
    #3 0x5cf2ae in cil_parser /src/selinux/libsepol/src/../cil/src/cil_parser.c:220:2
    #4 0x56d5e2 in cil_add_file /src/selinux/libsepol/src/../cil/src/cil.c:514:7
    #5 0x556e91 in LLVMFuzzerTestOneInput /src/secilc-fuzzer.c:434:7
    #6 0x459ab1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #7 0x45a755 in fuzzer::Fuzzer::TryDetectingAMemoryLeak(unsigned char const*, unsigned long, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:675:3
    #8 0x45acd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:747:5
    #9 0x45b875 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:883:5
    #10 0x4499fb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:906:6
    #11 0x473a32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7f982296d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x41e758 in _start (/out/secilc-fuzzer+0x41e758)

DEDUP_TOKEN: cil_yy_switch_to_buffer--cil_yy_scan_buffer--cil_lexer_setup
0x602000007992 is located 2 bytes inside of 4-byte region [0x602000007990,0x602000007994)
freed by thread T0 here:
    #0 0x521ef2 in free /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:127:3
    #1 0x56d630 in cil_add_file /src/selinux/libsepol/src/../cil/src/cil.c:526:2
    #2 0x556e91 in LLVMFuzzerTestOneInput /src/secilc-fuzzer.c:434:7
    #3 0x459ab1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #4 0x458fba in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:505:3
    #5 0x45acc7 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:745:19
    #6 0x45b875 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:883:5
    #7 0x4499fb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:906:6
    #8 0x473a32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7f982296d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: free--cil_add_file--LLVMFuzzerTestOneInput
previously allocated by thread T0 here:
    #0 0x52215d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x5cecb8 in cil_malloc /src/selinux/libsepol/src/../cil/src/cil_mem.c:39:14
    #2 0x56d584 in cil_add_file /src/selinux/libsepol/src/../cil/src/cil.c:510:11
    #3 0x556e91 in LLVMFuzzerTestOneInput /src/secilc-fuzzer.c:434:7
    #4 0x459ab1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #5 0x458fba in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:505:3
    #6 0x45acc7 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:745:19
    #7 0x45b875 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:883:5
    #8 0x4499fb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:906:6
    #9 0x473a32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7f982296d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--cil_malloc--cil_add_file
SUMMARY: AddressSanitizer: heap-use-after-free /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1315:17 in cil_yy_switch_to_buffer
Shadow bytes around the buggy address:
  0x0c047fff8ee0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff8ef0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff8f00: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd
  0x0c047fff8f10: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff8f20: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa
=>0x0c047fff8f30: fa fa[fd]fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8f40: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8f50: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa
  0x0c047fff8f60: fa fa fd fd fa fa fd fa fa fa fd fd fa fa fd fa
  0x0c047fff8f70: fa fa 00 00 fa fa 02 fa fa fa 02 fa fa fa 00 fa
  0x0c047fff8f80: fa fa 03 fa fa fa 00 fa fa fa 03 fa fa fa 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12==ABORTING

Signed-off-by: Evgeny Vereshchagin evvers@ya.ru",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,274,2020-12-06T21:12:20Z,2020-12-08T17:35:11Z,2020-12-08T17:36:41Z,CLOSED,False,1,0,1,https://github.com/evverx,libsepol/cil: always destroy the lexer state,1,[],https://github.com/SELinuxProject/selinux/pull/274,https://github.com/evverx,2,https://github.com/SELinuxProject/selinux/pull/274#issuecomment-740786696,"It was found in google/oss-fuzz#4790:
Invalid token '' at line 2 of fuzz
	NEW_FUNC[1/2]: 0x67fff0 in yy_get_previous_state /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1143
	NEW_FUNC[2/2]: 0x6803e0 in yy_try_NUL_trans /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1176
=================================================================
==12==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000007992 at pc 0x000000681800 bp 0x7ffccddee530 sp 0x7ffccddee528
WRITE of size 1 at 0x602000007992 thread T0
SCARINESS: 41 (1-byte-write-heap-use-after-free)
    #0 0x6817ff in cil_yy_switch_to_buffer /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1315:17
    #1 0x6820cc in cil_yy_scan_buffer /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1571:2
    #2 0x682662 in cil_lexer_setup /src/selinux/libsepol/src/../cil/src/cil_lexer.l:73:6
    #3 0x5cf2ae in cil_parser /src/selinux/libsepol/src/../cil/src/cil_parser.c:220:2
    #4 0x56d5e2 in cil_add_file /src/selinux/libsepol/src/../cil/src/cil.c:514:7
    #5 0x556e91 in LLVMFuzzerTestOneInput /src/secilc-fuzzer.c:434:7
    #6 0x459ab1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #7 0x45a755 in fuzzer::Fuzzer::TryDetectingAMemoryLeak(unsigned char const*, unsigned long, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:675:3
    #8 0x45acd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:747:5
    #9 0x45b875 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:883:5
    #10 0x4499fb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:906:6
    #11 0x473a32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7f982296d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x41e758 in _start (/out/secilc-fuzzer+0x41e758)

DEDUP_TOKEN: cil_yy_switch_to_buffer--cil_yy_scan_buffer--cil_lexer_setup
0x602000007992 is located 2 bytes inside of 4-byte region [0x602000007990,0x602000007994)
freed by thread T0 here:
    #0 0x521ef2 in free /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:127:3
    #1 0x56d630 in cil_add_file /src/selinux/libsepol/src/../cil/src/cil.c:526:2
    #2 0x556e91 in LLVMFuzzerTestOneInput /src/secilc-fuzzer.c:434:7
    #3 0x459ab1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #4 0x458fba in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:505:3
    #5 0x45acc7 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:745:19
    #6 0x45b875 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:883:5
    #7 0x4499fb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:906:6
    #8 0x473a32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7f982296d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: free--cil_add_file--LLVMFuzzerTestOneInput
previously allocated by thread T0 here:
    #0 0x52215d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x5cecb8 in cil_malloc /src/selinux/libsepol/src/../cil/src/cil_mem.c:39:14
    #2 0x56d584 in cil_add_file /src/selinux/libsepol/src/../cil/src/cil.c:510:11
    #3 0x556e91 in LLVMFuzzerTestOneInput /src/secilc-fuzzer.c:434:7
    #4 0x459ab1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #5 0x458fba in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:505:3
    #6 0x45acc7 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:745:19
    #7 0x45b875 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:883:5
    #8 0x4499fb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:906:6
    #9 0x473a32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7f982296d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--cil_malloc--cil_add_file
SUMMARY: AddressSanitizer: heap-use-after-free /src/selinux/libsepol/src/../cil/src/cil_lexer.c:1315:17 in cil_yy_switch_to_buffer
Shadow bytes around the buggy address:
  0x0c047fff8ee0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff8ef0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff8f00: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd
  0x0c047fff8f10: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff8f20: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa
=>0x0c047fff8f30: fa fa[fd]fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8f40: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8f50: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa
  0x0c047fff8f60: fa fa fd fd fa fa fd fa fa fa fd fd fa fa fd fa
  0x0c047fff8f70: fa fa 00 00 fa fa 02 fa fa fa 02 fa fa fa 00 fa
  0x0c047fff8f80: fa fa 03 fa fa fa 00 fa fa fa 03 fa fa fa 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12==ABORTING

Signed-off-by: Evgeny Vereshchagin evvers@ya.ru",Looks like it was merged: 9080967. I think the PR can be closed.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,275,2020-12-17T13:37:19Z,2020-12-30T09:33:11Z,2020-12-30T09:33:11Z,CLOSED,False,1,0,1,https://github.com/jhrozek,libsemanage: Free contents of modkey in semanage_direct_remove,1,[],https://github.com/SELinuxProject/selinux/pull/275,https://github.com/jhrozek,1,https://github.com/SELinuxProject/selinux/pull/275,"semanage_direct_remove allocates struct semanage_module_key_t on
stack, then calls semanage_module_key_set_name which allocates
modkey->name on heap, but modkey->name wasn't free()-d anywhere,
creating a small leak.","semanage_direct_remove allocates struct semanage_module_key_t on
stack, then calls semanage_module_key_set_name which allocates
modkey->name on heap, but modkey->name wasn't free()-d anywhere,
creating a small leak.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,275,2020-12-17T13:37:19Z,2020-12-30T09:33:11Z,2020-12-30T09:33:11Z,CLOSED,False,1,0,1,https://github.com/jhrozek,libsemanage: Free contents of modkey in semanage_direct_remove,1,[],https://github.com/SELinuxProject/selinux/pull/275,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/275#issuecomment-747480829,"semanage_direct_remove allocates struct semanage_module_key_t on
stack, then calls semanage_module_key_set_name which allocates
modkey->name on heap, but modkey->name wasn't free()-d anywhere,
creating a small leak.","Thanks for the patch. Please send it for review to SELinux mailing list at selinux@vger.kernel.org see https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md
If you can't for some reason, I can do it for you.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,275,2020-12-17T13:37:19Z,2020-12-30T09:33:11Z,2020-12-30T09:33:11Z,CLOSED,False,1,0,1,https://github.com/jhrozek,libsemanage: Free contents of modkey in semanage_direct_remove,1,[],https://github.com/SELinuxProject/selinux/pull/275,https://github.com/jhrozek,3,https://github.com/SELinuxProject/selinux/pull/275#issuecomment-747933961,"semanage_direct_remove allocates struct semanage_module_key_t on
stack, then calls semanage_module_key_set_name which allocates
modkey->name on heap, but modkey->name wasn't free()-d anywhere,
creating a small leak.","Thanks for the patch. Please send it for review to SELinux mailing list at selinux@vger.kernel.org see https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md
If you can't for some reason, I can do it for you.

Done, thanks for pointing me there. If this PR is no longer useful except the CI runs, feel free to close it.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,275,2020-12-17T13:37:19Z,2020-12-30T09:33:11Z,2020-12-30T09:33:11Z,CLOSED,False,1,0,1,https://github.com/jhrozek,libsemanage: Free contents of modkey in semanage_direct_remove,1,[],https://github.com/SELinuxProject/selinux/pull/275,https://github.com/fishilico,4,https://github.com/SELinuxProject/selinux/pull/275#issuecomment-752390885,"semanage_direct_remove allocates struct semanage_module_key_t on
stack, then calls semanage_module_key_set_name which allocates
modkey->name on heap, but modkey->name wasn't free()-d anywhere,
creating a small leak.",Merged as edae927.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,276,2021-01-06T13:38:16Z,2021-01-31T16:24:37Z,2021-01-31T20:42:52Z,CLOSED,False,15,5,1,https://github.com/cgzones,newrole: preserve environment variable XDG_RUNTIME_DIR,1,[],https://github.com/SELinuxProject/selinux/pull/276,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/276,"XDG_RUNTIME_DIR is required for systemctl --user to work.
See systemd/systemd#15231
Signed-off-by: Christian Göttsche cgzones@googlemail.com","XDG_RUNTIME_DIR is required for systemctl --user to work.
See systemd/systemd#15231
Signed-off-by: Christian Göttsche cgzones@googlemail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,276,2021-01-06T13:38:16Z,2021-01-31T16:24:37Z,2021-01-31T20:42:52Z,CLOSED,False,15,5,1,https://github.com/cgzones,newrole: preserve environment variable XDG_RUNTIME_DIR,1,[],https://github.com/SELinuxProject/selinux/pull/276,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/276#issuecomment-768252935,"XDG_RUNTIME_DIR is required for systemctl --user to work.
See systemd/systemd#15231
Signed-off-by: Christian Göttsche cgzones@googlemail.com",There is a discussion about this patch occurring on the mailing list: https://lore.kernel.org/selinux/87ft2o166n.fsf@redhat.com/T/#m8491e562395bbe03748031e23842c25afaf09edb,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,276,2021-01-06T13:38:16Z,2021-01-31T16:24:37Z,2021-01-31T20:42:52Z,CLOSED,False,15,5,1,https://github.com/cgzones,newrole: preserve environment variable XDG_RUNTIME_DIR,1,[],https://github.com/SELinuxProject/selinux/pull/276,https://github.com/fishilico,3,https://github.com/SELinuxProject/selinux/pull/276#issuecomment-770408016,"XDG_RUNTIME_DIR is required for systemctl --user to work.
See systemd/systemd#15231
Signed-off-by: Christian Göttsche cgzones@googlemail.com",This patch was disregarded: https://lore.kernel.org/selinux/CAJ2a_DcLzegmEqSO8jfAjPx-Axjt1jKh15Qvc0jjZb8U5SaVUg@mail.gmail.com/,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,277,2021-01-07T20:44:56Z,2021-01-27T12:26:13Z,2021-01-27T14:17:43Z,CLOSED,False,69,51,4,https://github.com/cgzones,libselinux: accept const fromcon in get_context API ,2,[],https://github.com/SELinuxProject/selinux/pull/277,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/277,"Rework the APIs in <selinux/get_context_list.h> to take a constant
string as from context.
The passed string is not modified currently but not declared const,
which restricting callers (who care about const-correctness).","Rework the APIs in <selinux/get_context_list.h> to take a constant
string as from context.
The passed string is not modified currently but not declared const,
which restricting callers (who care about const-correctness).",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,277,2021-01-07T20:44:56Z,2021-01-27T12:26:13Z,2021-01-27T14:17:43Z,CLOSED,False,69,51,4,https://github.com/cgzones,libselinux: accept const fromcon in get_context API ,2,[],https://github.com/SELinuxProject/selinux/pull/277,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/277#issuecomment-768252081,"Rework the APIs in <selinux/get_context_list.h> to take a constant
string as from context.
The passed string is not modified currently but not declared const,
which restricting callers (who care about const-correctness).",This was merged as e2dca5d and 156dd0d. Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,279,2021-01-14T16:49:34Z,2021-01-18T13:37:30Z,2021-01-18T13:38:05Z,MERGED,True,1,6,1,https://github.com/williamcroberts,libselinux: Always close status page fd,1,[],https://github.com/SELinuxProject/selinux/pull/279,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/279,"According to mmap(2) after the mmap() call has returned, the file
descriptor, fd, can be closed immediately without invalidating the
mapping.
Signed-off-by: Petr Lautrbach plautrba@redhat.com","According to mmap(2) after the mmap() call has returned, the file
descriptor, fd, can be closed immediately without invalidating the
mapping.
Signed-off-by: Petr Lautrbach plautrba@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,285,2021-03-19T08:03:39Z,2021-07-10T12:14:42Z,2021-07-10T12:14:42Z,CLOSED,False,41,0,2,https://github.com/evverx,ci: turn on CIFuzz,2,[],https://github.com/SELinuxProject/selinux/pull/285,https://github.com/evverx,1,https://github.com/SELinuxProject/selinux/pull/285,"Now that roughly half the bugs reported by OSS-Fuzz have been
fixed libsepol/cil should be stable enough to get CIFuzz working
more or less reliably. It should help to catch regressions/new bugs
faster.
https://google.github.io/oss-fuzz/getting-started/continuous-integration/
@fishilico could you take a look?","Now that roughly half the bugs reported by OSS-Fuzz have been
fixed libsepol/cil should be stable enough to get CIFuzz working
more or less reliably. It should help to catch regressions/new bugs
faster.
https://google.github.io/oss-fuzz/getting-started/continuous-integration/
@fishilico could you take a look?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,285,2021-03-19T08:03:39Z,2021-07-10T12:14:42Z,2021-07-10T12:14:42Z,CLOSED,False,41,0,2,https://github.com/evverx,ci: turn on CIFuzz,2,[],https://github.com/SELinuxProject/selinux/pull/285,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/285#issuecomment-805957663,"Now that roughly half the bugs reported by OSS-Fuzz have been
fixed libsepol/cil should be stable enough to get CIFuzz working
more or less reliably. It should help to catch regressions/new bugs
faster.
https://google.github.io/oss-fuzz/getting-started/continuous-integration/
@fishilico could you take a look?",Please submit all bug reports and patches to selinux@vger.kernel.org.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,285,2021-03-19T08:03:39Z,2021-07-10T12:14:42Z,2021-07-10T12:14:42Z,CLOSED,False,41,0,2,https://github.com/evverx,ci: turn on CIFuzz,2,[],https://github.com/SELinuxProject/selinux/pull/285,https://github.com/evverx,3,https://github.com/SELinuxProject/selinux/pull/285#issuecomment-805962837,"Now that roughly half the bugs reported by OSS-Fuzz have been
fixed libsepol/cil should be stable enough to get CIFuzz working
more or less reliably. It should help to catch regressions/new bugs
faster.
https://google.github.io/oss-fuzz/getting-started/continuous-integration/
@fishilico could you take a look?",@bachradsusi given that this PR is supposed to trigger GitHub actions on GitHub I think it's easier for @fishilico to review it here on GitHub (unless there is a script of some kind that can be used to somehow automatically move patches from the mailing list to GitHub),True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,285,2021-03-19T08:03:39Z,2021-07-10T12:14:42Z,2021-07-10T12:14:42Z,CLOSED,False,41,0,2,https://github.com/evverx,ci: turn on CIFuzz,2,[],https://github.com/SELinuxProject/selinux/pull/285,https://github.com/evverx,4,https://github.com/SELinuxProject/selinux/pull/285#issuecomment-805970738,"Now that roughly half the bugs reported by OSS-Fuzz have been
fixed libsepol/cil should be stable enough to get CIFuzz working
more or less reliably. It should help to catch regressions/new bugs
faster.
https://google.github.io/oss-fuzz/getting-started/continuous-integration/
@fishilico could you take a look?","Speaking of bug reports, OSS-Fuzz has found 76 bugs so far (40 of which were fixed). I wonder if it would make sense to send those bug reports to the mailing list as well? I could add selinux@vger.kernel.org to https://github.com/google/oss-fuzz/blob/master/projects/selinux/project.yaml.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,285,2021-03-19T08:03:39Z,2021-07-10T12:14:42Z,2021-07-10T12:14:42Z,CLOSED,False,41,0,2,https://github.com/evverx,ci: turn on CIFuzz,2,[],https://github.com/SELinuxProject/selinux/pull/285,https://github.com/bachradsusi,5,https://github.com/SELinuxProject/selinux/pull/285#issuecomment-806002206,"Now that roughly half the bugs reported by OSS-Fuzz have been
fixed libsepol/cil should be stable enough to get CIFuzz working
more or less reliably. It should help to catch regressions/new bugs
faster.
https://google.github.io/oss-fuzz/getting-started/continuous-integration/
@fishilico could you take a look?","It's great to see it works here, but patches need to sent to the mailing list for the review. So when you consider this patch set complete, please send it selinux@vger.kernel.org.
Also your proposal to send reports directly to the mailing list should be also discussed on there.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,285,2021-03-19T08:03:39Z,2021-07-10T12:14:42Z,2021-07-10T12:14:42Z,CLOSED,False,41,0,2,https://github.com/evverx,ci: turn on CIFuzz,2,[],https://github.com/SELinuxProject/selinux/pull/285,https://github.com/fishilico,6,https://github.com/SELinuxProject/selinux/pull/285#issuecomment-808046517,"Now that roughly half the bugs reported by OSS-Fuzz have been
fixed libsepol/cil should be stable enough to get CIFuzz working
more or less reliably. It should help to catch regressions/new bugs
faster.
https://google.github.io/oss-fuzz/getting-started/continuous-integration/
@fishilico could you take a look?","Hello,
Thanks for your PR. Unfortunately I have been quite busy with other topics this week and I will not have much time to review this properly before 1-2 weeks.
Anyway I am not the only maintainer of SELinux and the other ones still mainly prefer mailing lists (like what is commonly done for Linux kernel development). This is why Petr Lautrbach asked you to send patches to the ML.

Speaking of bug reports, OSS-Fuzz has found 76 bugs so far (40 of which were fixed). I wonder if it would make sense to send those bug reports to the mailing list as well? I could add selinux@vger.kernel.org to https://github.com/google/oss-fuzz/blob/master/projects/selinux/project.yaml.

As the bug reports are not open (they require authentication with Google accounts), but selinux@ is an open mailing list, I do not thing it makes much sense to directly cc selinux@. Moreover the main developer of the CIL compiler, James Carter, is already in the list of people who receive bug reports and have access to OSS-Fuzz reproducers.",True,{'THUMBS_UP': ['https://github.com/williamcroberts']}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,285,2021-03-19T08:03:39Z,2021-07-10T12:14:42Z,2021-07-10T12:14:42Z,CLOSED,False,41,0,2,https://github.com/evverx,ci: turn on CIFuzz,2,[],https://github.com/SELinuxProject/selinux/pull/285,https://github.com/evverx,7,https://github.com/SELinuxProject/selinux/pull/285#issuecomment-877628519,"Now that roughly half the bugs reported by OSS-Fuzz have been
fixed libsepol/cil should be stable enough to get CIFuzz working
more or less reliably. It should help to catch regressions/new bugs
faster.
https://google.github.io/oss-fuzz/getting-started/continuous-integration/
@fishilico could you take a look?",I've just sent the patch to the mailing list: https://lore.kernel.org/selinux/20210710120302.74862-1-evvers@ya.ru/T/#t. Closing the PR here.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,286,2021-05-03T15:26:40Z,2021-05-21T11:30:33Z,2021-05-21T11:30:34Z,CLOSED,False,76,57,22,https://github.com/cgzones,libselinux,25,[],https://github.com/SELinuxProject/selinux/pull/286,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/286,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,288,2021-06-01T17:21:15Z,2021-07-13T20:06:14Z,2021-07-14T12:59:54Z,CLOSED,False,27,10,9,https://github.com/cgzones,Libsepol,3,[],https://github.com/SELinuxProject/selinux/pull/288,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/288,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,288,2021-06-01T17:21:15Z,2021-07-13T20:06:14Z,2021-07-14T12:59:54Z,CLOSED,False,27,10,9,https://github.com/cgzones,Libsepol,3,[],https://github.com/SELinuxProject/selinux/pull/288,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/288#issuecomment-879366176,,"Merged: https://github.com/SELinuxProject/selinux/commits/07d6f1cea5a8ec0251606636189bc519d80b0729
Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,289,2021-06-10T05:44:47Z,2021-07-03T14:18:25Z,2021-07-03T14:18:25Z,CLOSED,False,2,2,1,https://github.com/ffontaine,libselinux/utils/getseuser.c: fix build with gcc 4.8,1,[],https://github.com/SELinuxProject/selinux/pull/289,https://github.com/ffontaine,1,https://github.com/SELinuxProject/selinux/pull/289,"Fix the following build failure with gcc 4.8 which is raised since version 3.2 and 156dd0d
getseuser.c:53:2: error: 'for' loop initial declarations are only allowed in C99 mode
  for (int i = 0; i < n; i++)
  ^

Fixes:

http://autobuild.buildroot.org/results/37eb0952a763256fbf6ef3c668f6c95fbdf2dd35

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Fix the following build failure with gcc 4.8 which is raised since version 3.2 and 156dd0d
getseuser.c:53:2: error: 'for' loop initial declarations are only allowed in C99 mode
  for (int i = 0; i < n; i++)
  ^

Fixes:

http://autobuild.buildroot.org/results/37eb0952a763256fbf6ef3c668f6c95fbdf2dd35

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,289,2021-06-10T05:44:47Z,2021-07-03T14:18:25Z,2021-07-03T14:18:25Z,CLOSED,False,2,2,1,https://github.com/ffontaine,libselinux/utils/getseuser.c: fix build with gcc 4.8,1,[],https://github.com/SELinuxProject/selinux/pull/289,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/289#issuecomment-871681439,"Fix the following build failure with gcc 4.8 which is raised since version 3.2 and 156dd0d
getseuser.c:53:2: error: 'for' loop initial declarations are only allowed in C99 mode
  for (int i = 0; i < n; i++)
  ^

Fixes:

http://autobuild.buildroot.org/results/37eb0952a763256fbf6ef3c668f6c95fbdf2dd35

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com","Thanks for the patch. Nevertheless to contribute to this project, patches are required to be sent for review to SELinux mailing list at selinux@vger.kernel.org (see https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md)
If you can't do this for some reason, I can do it for you.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,289,2021-06-10T05:44:47Z,2021-07-03T14:18:25Z,2021-07-03T14:18:25Z,CLOSED,False,2,2,1,https://github.com/ffontaine,libselinux/utils/getseuser.c: fix build with gcc 4.8,1,[],https://github.com/SELinuxProject/selinux/pull/289,https://github.com/ffontaine,3,https://github.com/SELinuxProject/selinux/pull/289#issuecomment-872412178,"Fix the following build failure with gcc 4.8 which is raised since version 3.2 and 156dd0d
getseuser.c:53:2: error: 'for' loop initial declarations are only allowed in C99 mode
  for (int i = 0; i < n; i++)
  ^

Fixes:

http://autobuild.buildroot.org/results/37eb0952a763256fbf6ef3c668f6c95fbdf2dd35

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",Done,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,289,2021-06-10T05:44:47Z,2021-07-03T14:18:25Z,2021-07-03T14:18:25Z,CLOSED,False,2,2,1,https://github.com/ffontaine,libselinux/utils/getseuser.c: fix build with gcc 4.8,1,[],https://github.com/SELinuxProject/selinux/pull/289,https://github.com/fishilico,4,https://github.com/SELinuxProject/selinux/pull/289#issuecomment-873414344,"Fix the following build failure with gcc 4.8 which is raised since version 3.2 and 156dd0d
getseuser.c:53:2: error: 'for' loop initial declarations are only allowed in C99 mode
  for (int i = 0; i < n; i++)
  ^

Fixes:

http://autobuild.buildroot.org/results/37eb0952a763256fbf6ef3c668f6c95fbdf2dd35

Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com",Merged as 4859b73 (from mailing list message https://lore.kernel.org/selinux/20210701170619.96954-1-fontaine.fabrice@gmail.com/). Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,292,2021-06-12T09:14:45Z,2021-06-18T18:12:48Z,2021-06-18T18:12:48Z,CLOSED,False,7,0,1,https://github.com/topimiettinen,selinux.8: document how mount flag nosuid affects SELinux,1,[],https://github.com/SELinuxProject/selinux/pull/292,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/292,"Using mount flag nosuid also affects SELinux domain transitions but
this has not been documented well.
Signed-off-by: Topi Miettinen toiwoton@gmail.com","Using mount flag nosuid also affects SELinux domain transitions but
this has not been documented well.
Signed-off-by: Topi Miettinen toiwoton@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,295,2021-07-06T18:07:13Z,2021-07-13T20:06:57Z,2021-07-14T12:59:38Z,CLOSED,False,69,66,8,https://github.com/cgzones,Checkpolicy,13,[],https://github.com/SELinuxProject/selinux/pull/295,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/295,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,295,2021-07-06T18:07:13Z,2021-07-13T20:06:57Z,2021-07-14T12:59:38Z,CLOSED,False,69,66,8,https://github.com/cgzones,Checkpolicy,13,[],https://github.com/SELinuxProject/selinux/pull/295,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/295#issuecomment-879366650,,"Merged: https://github.com/SELinuxProject/selinux/commits/1711757378d1ff1e7437fd7d5ddf263272284641
Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,297,2021-07-14T07:12:57Z,2021-07-16T06:09:41Z,2021-07-16T06:09:41Z,CLOSED,False,128,0,2,https://github.com/evverx,Move the fuzz target from OSS-Fuzz to the selinux repository,7,[],https://github.com/SELinuxProject/selinux/pull/297,https://github.com/evverx,1,https://github.com/SELinuxProject/selinux/pull/297,"@fishilico All your comments should be addressed. Could you take a look? I'll send the branch to the mailing list later but since I'm working on it here on GitHub to be able to run various GHActions to make sure it works I thought I'd leave it here for review to somewhat speed up the review process. Thanks!
The patch was sent to the mailing list: https://lore.kernel.org/selinux/20210715061135.2756-1-evvers@ya.ru/","@fishilico All your comments should be addressed. Could you take a look? I'll send the branch to the mailing list later but since I'm working on it here on GitHub to be able to run various GHActions to make sure it works I thought I'd leave it here for review to somewhat speed up the review process. Thanks!
The patch was sent to the mailing list: https://lore.kernel.org/selinux/20210715061135.2756-1-evvers@ya.ru/",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,298,2021-07-14T17:54:28Z,2021-07-22T20:08:29Z,2021-07-22T20:08:29Z,CLOSED,False,28,4,6,https://github.com/cgzones,scan-build,6,[],https://github.com/SELinuxProject/selinux/pull/298,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/298,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,300,2021-08-03T00:59:28Z,2021-08-23T14:55:30Z,2021-08-23T14:55:30Z,CLOSED,False,3,0,1,https://github.com/zhangxp1998,Improve error message for label file validation,1,[],https://github.com/SELinuxProject/selinux/pull/300,https://github.com/zhangxp1998,1,https://github.com/SELinuxProject/selinux/pull/300,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,300,2021-08-03T00:59:28Z,2021-08-23T14:55:30Z,2021-08-23T14:55:30Z,CLOSED,False,3,0,1,https://github.com/zhangxp1998,Improve error message for label file validation,1,[],https://github.com/SELinuxProject/selinux/pull/300,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/300#issuecomment-899101022,,"Thanks for the patch. Nevertheless to contribute to this project, patches are required to be sent for review to SELinux mailing list at selinux@vger.kernel.org with a proper Signed-off-by tag (see https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md). Could you please do this?
By the way, your current patch introduces a use-after-free issue: COMPAT_LOG(..., str_buf) needs to be called before free(str_buf);.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,300,2021-08-03T00:59:28Z,2021-08-23T14:55:30Z,2021-08-23T14:55:30Z,CLOSED,False,3,0,1,https://github.com/zhangxp1998,Improve error message for label file validation,1,[],https://github.com/SELinuxProject/selinux/pull/300,https://github.com/zhangxp1998,3,https://github.com/SELinuxProject/selinux/pull/300#issuecomment-899666764,,"Thanks, I have corrected the user-after-free bug and sent the patch over email.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,300,2021-08-03T00:59:28Z,2021-08-23T14:55:30Z,2021-08-23T14:55:30Z,CLOSED,False,3,0,1,https://github.com/zhangxp1998,Improve error message for label file validation,1,[],https://github.com/SELinuxProject/selinux/pull/300,https://github.com/zhangxp1998,4,https://github.com/SELinuxProject/selinux/pull/300#issuecomment-902180489,,"I got an Acked-by from the mailing list, what do I do next to merge this change?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,300,2021-08-03T00:59:28Z,2021-08-23T14:55:30Z,2021-08-23T14:55:30Z,CLOSED,False,3,0,1,https://github.com/zhangxp1998,Improve error message for label file validation,1,[],https://github.com/SELinuxProject/selinux/pull/300,https://github.com/williamcroberts,5,https://github.com/SELinuxProject/selinux/pull/300#issuecomment-902240973,,"@jwcart2 or @jwcarter  (whats the difference) approved it, so we usually let the person who ack's em merge them. Sometimes they have to generate a PR, but in this case one is open. Assuming it passes CI checks, If for some reason it doesn't get merged in the next couple of days by James ill merge it.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,300,2021-08-03T00:59:28Z,2021-08-23T14:55:30Z,2021-08-23T14:55:30Z,CLOSED,False,3,0,1,https://github.com/zhangxp1998,Improve error message for label file validation,1,[],https://github.com/SELinuxProject/selinux/pull/300,https://github.com/zhangxp1998,6,https://github.com/SELinuxProject/selinux/pull/300#issuecomment-903848070,,"Looks like this got merged, we can close this!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,302,2021-08-09T10:53:10Z,2021-08-21T18:53:38Z,2021-08-21T18:53:40Z,CLOSED,False,108,96,15,https://github.com/cgzones,RFC: replace strerror by %m,2,[],https://github.com/SELinuxProject/selinux/pull/302,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/302,"The standard function strerror(3) is not thread safe.  This does not
only affect the concurrent usage of libselinux itself but also with
other strerror(3) linked libraries.
Use the thread safe GNU extension format specifier %m1.
libselinux already uses the GNU extension format specifier %ms.","The standard function strerror(3) is not thread safe.  This does not
only affect the concurrent usage of libselinux itself but also with
other strerror(3) linked libraries.
Use the thread safe GNU extension format specifier %m1.
libselinux already uses the GNU extension format specifier %ms.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,303,2021-08-28T17:48:57Z,2021-09-10T12:13:21Z,2021-09-10T12:13:21Z,CLOSED,False,1,1,1,https://github.com/topimiettinen,libsepol: fix typo,1,[],https://github.com/SELinuxProject/selinux/pull/303,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/303,auditdenty -> auditdeny,auditdenty -> auditdeny,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,303,2021-08-28T17:48:57Z,2021-09-10T12:13:21Z,2021-09-10T12:13:21Z,CLOSED,False,1,1,1,https://github.com/topimiettinen,libsepol: fix typo,1,[],https://github.com/SELinuxProject/selinux/pull/303,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/303#issuecomment-910335351,auditdenty -> auditdeny,"Thanks for the patch, but according to https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md this needs to be sent for review to SELinux mailing list at selinux@vger.kernel.org with a proper Signed-off-by tag. Could you please do this?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,304,2021-09-08T07:57:08Z,2021-09-08T08:25:29Z,2021-09-08T08:25:30Z,MERGED,True,33,21,22,https://github.com/bachradsusi,Release 3.3 rc1,4,[],https://github.com/SELinuxProject/selinux/pull/304,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/304,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,305,2021-09-08T14:50:25Z,2021-09-17T13:07:17Z,2021-09-17T13:07:20Z,CLOSED,False,134,94,10,https://github.com/cgzones,Checkpolicy,13,[],https://github.com/SELinuxProject/selinux/pull/305,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/305,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,305,2021-09-08T14:50:25Z,2021-09-17T13:07:17Z,2021-09-17T13:07:20Z,CLOSED,False,134,94,10,https://github.com/cgzones,Checkpolicy,13,[],https://github.com/SELinuxProject/selinux/pull/305,https://github.com/evverx,2,https://github.com/SELinuxProject/selinux/pull/305#issuecomment-919859402,,CIFuzz is failing due to google/oss-fuzz#6438. I think it can be ignored for now.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,305,2021-09-08T14:50:25Z,2021-09-17T13:07:17Z,2021-09-17T13:07:20Z,CLOSED,False,134,94,10,https://github.com/cgzones,Checkpolicy,13,[],https://github.com/SELinuxProject/selinux/pull/305,https://github.com/cgzones,3,https://github.com/SELinuxProject/selinux/pull/305#issuecomment-921782344,,Merged by 12e9846 to a0a342c.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,306,2021-09-15T10:46:05Z,2021-09-15T10:55:05Z,2021-09-15T10:55:38Z,CLOSED,False,1,0,1,https://github.com/evverx,[DO NOT MERGE] make sure CIFuzz no loger fails to decode binary data,1,[],https://github.com/SELinuxProject/selinux/pull/306,https://github.com/evverx,1,https://github.com/SELinuxProject/selinux/pull/306,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,310,2021-09-22T13:27:35Z,2021-10-04T21:06:08Z,2021-10-04T21:06:09Z,CLOSED,False,51,45,19,https://github.com/cgzones,Checkpolicy,10,[],https://github.com/SELinuxProject/selinux/pull/310,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/310,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,312,2021-09-22T17:45:50Z,2022-03-05T19:29:05Z,2022-03-05T19:29:05Z,CLOSED,False,223,9,6,https://github.com/cgzones,Checkpolicy test,2,[],https://github.com/SELinuxProject/selinux/pull/312,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/312,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/313,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.","Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.",True,{'THUMBS_UP': ['https://github.com/evverx']}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/evverx,2,https://github.com/SELinuxProject/selinux/pull/313#issuecomment-931484697,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.","@cgzones thanks a lot for working on this! I'll take a look tomorrow.
I'm not sure why CIFuzz didn't report a memory leak it found though:
2021-09-30T16:25:19.7597616Z =================================================================
2021-09-30T16:25:19.7598142Z ==21==ERROR: LeakSanitizer: detected memory leaks
2021-09-30T16:25:19.7598585Z 
2021-09-30T16:25:19.7599025Z Direct leak of 48 byte(s) in 1 object(s) allocated from:
2021-09-30T16:25:19.7600239Z     #0 0x52515d in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:129:3
2021-09-30T16:25:19.7601187Z     #1 0x57d50f in define_cexpr /src/selinux/checkpolicy/policy_define.c:3751:14
2021-09-30T16:25:19.7601985Z     #2 0x587f2c in yyparse /src/selinux/checkpolicy/policy_parse.y:573:44
2021-09-30T16:25:19.7603088Z     #3 0x55e2c7 in read_source_policy /src/selinux/checkpolicy/fuzz/checkpolicy-fuzzer.c:81:6
2021-09-30T16:25:19.7604424Z     #4 0x55e2c7 in LLVMFuzzerTestOneInput /src/selinux/checkpolicy/fuzz/checkpolicy-fuzzer.c:122:6
2021-09-30T16:25:19.7605595Z     #5 0x456b73 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
2021-09-30T16:25:19.7607020Z     #6 0x45636a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) cxa_noexception.cpp
2021-09-30T16:25:19.7608077Z     #7 0x457bdb in fuzzer::Fuzzer::MutateAndTestOne() cxa_noexception.cpp
2021-09-30T16:25:19.7609160Z     #8 0x458695 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) cxa_noexception.cpp
2021-09-30T16:25:19.7610309Z     #9 0x447e30 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
2021-09-30T16:25:19.7611517Z     #10 0x470ec2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
2021-09-30T16:25:19.7612606Z     #11 0x7fbdab3c10b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
2021-09-30T16:25:19.7613120Z 
2021-09-30T16:25:19.7613809Z DEDUP_TOKEN: __interceptor_malloc--define_cexpr--yyparse
2021-09-30T16:25:19.7614561Z Direct leak of 34 byte(s) in 4 object(s) allocated from:
2021-09-30T16:25:19.7615604Z     #0 0x52515d in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:129:3
2021-09-30T16:25:19.7616496Z     #1 0x56d648 in insert_id /src/selinux/checkpolicy/policy_define.c:126:18
2021-09-30T16:25:19.7617280Z     #2 0x5886a1 in yyparse /src/selinux/checkpolicy/policy_parse.y:877:31
2021-09-30T16:25:19.7618366Z     #3 0x55e2c7 in read_source_policy /src/selinux/checkpolicy/fuzz/checkpolicy-fuzzer.c:81:6
2021-09-30T16:25:19.7619677Z     #4 0x55e2c7 in LLVMFuzzerTestOneInput /src/selinux/checkpolicy/fuzz/checkpolicy-fuzzer.c:122:6
2021-09-30T16:25:19.7620847Z     #5 0x456b73 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
2021-09-30T16:25:19.7622062Z     #6 0x45636a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) cxa_noexception.cpp
2021-09-30T16:25:19.7623087Z     #7 0x457bdb in fuzzer::Fuzzer::MutateAndTestOne() cxa_noexception.cpp
2021-09-30T16:25:19.7624174Z     #8 0x458695 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) cxa_noexception.cpp
2021-09-30T16:25:19.7625322Z     #9 0x447e30 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
2021-09-30T16:25:19.7626493Z     #10 0x470ec2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
2021-09-30T16:25:19.7627575Z     #11 0x7fbdab3c10b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
2021-09-30T16:25:19.7628094Z 
2021-09-30T16:25:19.7628762Z DEDUP_TOKEN: __interceptor_malloc--insert_id--yyparse
2021-09-30T16:25:19.7629490Z Indirect leak of 40 byte(s) in 1 object(s) allocated from:
2021-09-30T16:25:19.7630722Z     #0 0x52515d in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:129:3
2021-09-30T16:25:19.7631673Z     #1 0x59177e in constraint_expr_init /src/selinux/libsepol/src/constraint.c:32:26
2021-09-30T16:25:19.7632510Z     #2 0x57d52b in define_cexpr /src/selinux/checkpolicy/policy_define.c:3752:6
2021-09-30T16:25:19.7633311Z     #3 0x587f2c in yyparse /src/selinux/checkpolicy/policy_parse.y:573:44
2021-09-30T16:25:19.7634420Z     #4 0x55e2c7 in read_source_policy /src/selinux/checkpolicy/fuzz/checkpolicy-fuzzer.c:81:6
2021-09-30T16:25:19.7635742Z     #5 0x55e2c7 in LLVMFuzzerTestOneInput /src/selinux/checkpolicy/fuzz/checkpolicy-fuzzer.c:122:6
2021-09-30T16:25:19.7636870Z     #6 0x456b73 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
2021-09-30T16:25:19.7652310Z     #7 0x45636a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) cxa_noexception.cpp
2021-09-30T16:25:19.7653305Z     #8 0x457bdb in fuzzer::Fuzzer::MutateAndTestOne() cxa_noexception.cpp
2021-09-30T16:25:19.7654316Z     #9 0x458695 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) cxa_noexception.cpp
2021-09-30T16:25:19.7655682Z     #10 0x447e30 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
2021-09-30T16:25:19.7657015Z     #11 0x470ec2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
2021-09-30T16:25:19.7658012Z     #12 0x7fbdab3c10b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)
2021-09-30T16:25:19.7658456Z 
2021-09-30T16:25:19.7659178Z DEDUP_TOKEN: __interceptor_malloc--constraint_expr_init--define_cexpr
2021-09-30T16:25:19.7659981Z SUMMARY: AddressSanitizer: 122 byte(s) leaked in 6 allocation(s).
2021-09-30T16:25:19.7661659Z MS: 5 CrossOver-CMP-ChangeASCIIInt-ChangeByte-ChangeByte- DE: ""netd""-; base unit: 1a5f664451a502a9bfd88b7bb74d570e3eabf548

It says
2021-09-30T16:25:20.0134894Z 2021-09-30 16:25:20,012 - root - INFO - Reproduce command returned: 0. Not reproducible on /github/workspace/build-out/checkpolicy-fuzzer.
2021-09-30T16:25:20.0144377Z 2021-09-30 16:25:20,013 - root - INFO - Crash is not reproducible.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/cgzones,3,https://github.com/SELinuxProject/selinux/pull/313#issuecomment-932117676,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.","I took a look at the build script and apart from min_pol.conf not being put into the seed corpus it looks good to me on the whole.

The fuzzer has the hardcoded setting to always expect a MLS policy (similar to checkpolicy -M), as the type of policy needs to be known a priory with the current parser implementation. I initially wrote also the non-MLS policy for testing, but it is intentionally  not used currently (but I included it for reference and potential future use).",True,{'THUMBS_UP': ['https://github.com/evverx']}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/cgzones,4,https://github.com/SELinuxProject/selinux/pull/313#issuecomment-932119035,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.","I'm not sure why CIFuzz didn't report a memory leak it found though:

Does oss-fuzz use some custom allocator, that fails unreproducible (to test error branches), cause there are probably a couple dozens memory leaks in error branches in the parser?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/evverx,5,https://github.com/SELinuxProject/selinux/pull/313#issuecomment-932137987,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.","Does oss-fuzz use some custom allocator, that fails unreproducible (to test error branches), cause there are probably a couple dozens memory leaks in error branches in the parser?

No, it doesn't. I think that particular memory leak isn't reproducible because it can't be triggered by a single file (according to CIFuzz at least), which probably means that some kind of state accumulates between runs.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/evverx,6,https://github.com/SELinuxProject/selinux/pull/313#issuecomment-932142821,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.","@cgzones could you temporarily apply the following patch:
diff --git a/.github/workflows/cifuzz.yml b/.github/workflows/cifuzz.yml
index 5c2233a2..b28eb71a 100644
--- a/.github/workflows/cifuzz.yml
+++ b/.github/workflows/cifuzz.yml
@@ -30,6 +30,7 @@ jobs:
           oss-fuzz-project-name: 'selinux'
           fuzz-seconds: 180
           dry-run: false
+          report-unreproducible-crashes: true
           sanitizer: ${{ matrix.sanitizer }}
       - name: Upload Crash
         uses: actions/upload-artifact@v1
so that CIFuzz could upload the file triggering that memory leak to hopefully make it easier to reproduce it locally.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/evverx,7,https://github.com/SELinuxProject/selinux/pull/313#issuecomment-932181108,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.","could you temporarily apply the following patch

Done in #314",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/cgzones,8,https://github.com/SELinuxProject/selinux/pull/313#issuecomment-932211002,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.","..., which probably means that some kind of state accumulates between runs.

True, the crash was an empty input, and after I added cleanup to some global variables it seems to be fixed.",True,{'THUMBS_UP': ['https://github.com/evverx']}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/evverx,9,https://github.com/SELinuxProject/selinux/pull/313#issuecomment-932218809,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.","FWIW I'm not sure why unreproducible crashes aren't reported by default by CIFuzz but I think I'd keep it on. OSS-Fuzz would just keep opening and closing ""flaky"" issues making it hard to to figure out what that was.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,313,2021-09-30T16:17:03Z,,2022-04-20T19:57:06Z,OPEN,False,796,249,14,https://github.com/cgzones,checkpolicy/oss-fuzz: add libfuzz based fuzzer,11,[],https://github.com/SELinuxProject/selinux/pull/313,https://github.com/evverx,10,https://github.com/SELinuxProject/selinux/pull/313#issuecomment-938041604,"Introduce a libfuzz1 based fuzzer testing the parsing and policy
generation code used within checkpolicy(8) and checkmodule(8), similar
to the fuzzer for secilc(8).
The fuzzer will work on generated source policy input and try to parse,
link, expand, optimize, sort and output it.
Build the fuzzer in the oss-fuzz script.
/cc @fishilico @evverx
I am not familiar how the actual integration into oss-fuzz works and if it needs any update.",CIFuzz failed due to a bug in libClusterFuzz. It should be fixed in google/clusterfuzz#2471,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,314,2021-10-01T12:20:12Z,2021-10-01T12:41:07Z,2021-10-01T12:41:16Z,CLOSED,False,453,2,8,https://github.com/evverx,cifuzz: report unreproducible crashes,2,[],https://github.com/SELinuxProject/selinux/pull/314,https://github.com/evverx,1,https://github.com/SELinuxProject/selinux/pull/314,it should make it easier to reproduce the memory leak locally,it should make it easier to reproduce the memory leak locally,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,315,2021-10-02T11:43:14Z,2021-10-04T21:29:01Z,2021-10-04T21:29:01Z,CLOSED,False,1,1,1,https://github.com/KlausStortebeker,Travis CI,2,[],https://github.com/SELinuxProject/selinux/pull/315,https://github.com/KlausStortebeker,1,https://github.com/SELinuxProject/selinux/pull/315,"Since June 15th, 2021, the building on travis-ci.org is ceased. Please use travis-ci.com from now on.","Since June 15th, 2021, the building on travis-ci.org is ceased. Please use travis-ci.com from now on.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,315,2021-10-02T11:43:14Z,2021-10-04T21:29:01Z,2021-10-04T21:29:01Z,CLOSED,False,1,1,1,https://github.com/KlausStortebeker,Travis CI,2,[],https://github.com/SELinuxProject/selinux/pull/315,https://github.com/evverx,2,https://github.com/SELinuxProject/selinux/pull/315#issuecomment-932745788,"Since June 15th, 2021, the building on travis-ci.org is ceased. Please use travis-ci.com from now on.","To judge from #299, I don't think Travis CI is used here anymore.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,315,2021-10-02T11:43:14Z,2021-10-04T21:29:01Z,2021-10-04T21:29:01Z,CLOSED,False,1,1,1,https://github.com/KlausStortebeker,Travis CI,2,[],https://github.com/SELinuxProject/selinux/pull/315,https://github.com/fishilico,3,https://github.com/SELinuxProject/selinux/pull/315#issuecomment-933870446,"Since June 15th, 2021, the building on travis-ci.org is ceased. Please use travis-ci.com from now on.","I confirm that Travis CI is no longer used, as it no longer provides enough free credit for open-source projects. This project moved to GitHub Actions (and I personally also continue using Circle CI in case GitHub Actions conditions change).
Commit 60bde94 removed references to Travis-CI in README.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/316,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico",True,{'THUMBS_UP': ['https://github.com/evverx']}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/evverx,2,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-938107960,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico",CIFuzz failed due to google/clusterfuzz#2471 as far as I can tell. The next push should trigger CIFuzz without that bug I think,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/evverx,3,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-938988641,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","The next push should trigger CIFuzz without that bug I think

Unfortunately, it seems the latest version of libClusterFuzz hasn't been released yet. Until it's updated on OSS-Fuzz/CIFuzz that issue can be ""fixed"" temporarily by reverting the commit where report-unreproducible-crashes is set to true.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/evverx,4,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-939014453,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","On a somewhat related note, I think your gmail address should be added to https://github.com/google/oss-fuzz/blob/master/projects/selinux/project.yaml so that you could have access to bug reports. If you don't want to sign their CLA I can open a PR there. Just let me know what you think. Thanks!",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/evverx,5,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-939063081,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","that issue can be ""fixed"" temporarily by reverting the commit where report-unreproducible-crashes is set to true

To judge from #318, with that commit reverted and secilc-fuzzer_seed_corpus.zip copied to binpolicy-fuzzer_seed_corpus.zip, CIFuzz got past secilc-fuzzer and managed to trigger three new issues as far as I can see.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/evverx,6,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-940087740,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico",Now that google/oss-fuzz#6574 is merged I think it should be safe to bring that commit back.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/cgzones,7,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-941011066,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","@evverx I noticed the step Build Fuzzers is taking more than 3 minutes due to the command apt-get install -y bison flex gawk gettext make libaudit-dev libbz2-dev libcap-dev libcap-ng-dev libglib2.0-dev libpcre3-dev xmlto (https://github.com/google/oss-fuzz/blob/fd15c6d57aa13667af2521daf6167a2d8cd2ecb7/projects/selinux/Dockerfile#L19).
Is there a more suitable base image pre-containing more of the required packages or would adding the apt-get option --no-install-recommends reduce the amount of installed packages?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/evverx,8,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-941033698,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","@cgzones OSS-Fuzz provides the ""base-builder"" image on top of which all the projects are built. I think --no-install-recommends would be the only way to speed up that step.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,None,9,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-941047449,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","cgzones ***@***.***> writes:
…
 @evverx I noticed the step Build Fuzzers is taking more than 3 minutes due to the command
 apt-get install -y bison flex gawk gettext make libaudit-dev libbz2-dev libcap-dev
 libcap-ng-dev libglib2.0-dev libpcre3-dev xmlto
 (https://github.com/google/oss-fuzz/blob/fd15c6d57aa13667af2521daf6167a2d8cd2ecb7/projects/selinux/Dockerfile#L19).

 Is there a more suitable base image pre-containing more of the required packages or would
 adding the apt-get option --no-install-recommends reduce the amount of installed packages?

-yy implies --no-install-recommends

xmlto probably pulls in a lot of stuff and afaik you only need that for
building secilc man pages unfortunately that is implied with make
install (but a `make secilc` does not require xmlto). If this is just
about libsepol then I suspect one might be able to exclude a bunch of
those build deps.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or unsubscribe.
 Triage notifications on the go with GitHub Mobile for iOS or Android.


-- 
gpg --locate-keys ***@***.***
Key fingerprint = FCD2 3660 5D6B 9D27 7FC6  E0FF DA7E 521F 10F6 4098
Dominick Grift",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/cgzones,10,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-941061837,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","-yy implies --no-install-recommends xmlto probably pulls in a lot of stuff and afaik you only need that for building secilc man pages unfortunately that is implied with make install (but a make secilc does not require xmlto). If this is just about libsepol then I suspect one might be able to exclude a bunch of those build deps.

Then we can probably get rid of some dependencies and also convert
make -C libsepol V=1 LD_SONAME_FLAGS='-soname,$(LIBSO),--version-script=$(LIBMAP)' -j""$(nproc)"" install

into
make -C libsepol V=1 LD_SONAME_FLAGS='-soname,$(LIBSO),--version-script=$(LIBMAP)' -j""$(nproc)"" libsepol.a

since we link statically anyway.
edit: seems without the install target it gets quite complicated to compile the fuzzers with the development headers instead of the system ones (thus the current approach is simpler).",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,None,11,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-941064734,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","cgzones ***@***.***> writes:
  -yy implies --no-install-recommends xmlto probably pulls in a lot of stuff and afaik
  you only need that for building secilc man pages unfortunately that is implied with
  make install (but a make secilc does not require xmlto). If this is just about libsepol
  then I suspect one might be able to exclude a bunch of those build deps.

 Then we can probably get rid of some dependencies and also convert

 make -C libsepol V=1 LD_SONAME_FLAGS='-soname,$(LIBSO),--version-script=$(LIBMAP)' -j""$(nproc)"" install

 into

 make -C libsepol V=1 LD_SONAME_FLAGS='-soname,$(LIBSO),--version-script=$(LIBMAP)' -j""$(nproc)"" libsepol.a

 since we link statically anyway.
i meant -qq instead of -yy by the way. --no-install-recommends alone
should already speed things up considerably. but yes no point in installing
build deps you do not need.
…

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub, or unsubscribe.
 Triage notifications on the go with GitHub Mobile for iOS or Android.


-- 
gpg --locate-keys ***@***.***
Key fingerprint = FCD2 3660 5D6B 9D27 7FC6  E0FF DA7E 521F 10F6 4098
Dominick Grift",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/evverx,12,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-941076377,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico",I opened google/oss-fuzz#6586 where --no-install-recommends is passed to apt-get and xmlto is no longer installed. By the looks of it it seems to be working.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/evverx,13,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-941189909,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico",@cgzones while I'm at it I can add your email address to https://github.com/google/oss-fuzz/blob/master/projects/selinux/project.yaml if it's fine by you.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/cgzones,14,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-944274937,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","while I'm at it I can add your email address to https://github.com/google/oss-fuzz/blob/master/projects/selinux/project.yaml if it's fine by you.

I'll ask the maintainers if it's ok for them once this patch-set is about to be merged.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,316,2021-10-07T13:32:27Z,2021-12-17T16:22:08Z,2021-12-20T17:02:04Z,CLOSED,False,718,165,32,https://github.com/cgzones,Binary policy read fuzzer,38,[],https://github.com/SELinuxProject/selinux/pull/316,https://github.com/evverx,15,https://github.com/SELinuxProject/selinux/pull/316#issuecomment-998108326,"Introduce a libfuzz1 based fuzzer testing the parsing of a binary
policy.
Build the fuzzer in the oss-fuzz script.
Additionally fix several reported issues.
@evverx @fishilico","@cgzones it seems OSS-Fuzz started reporting bugs found by the fuzzer:
https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=42697
==462==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x00000050a2f0 bp 0x7fff482b9050 sp 0x7fff482b8f40 T0)
--
  | ==462==The signal is caused by a READ memory access.
  | ==462==Hint: address points to the zero page.
  | SCARINESS: 10 (null-deref)
  | #0 0x50a2f0 in build_type_map selinux/libsepol/src/optimize.c:107:33
  | #1 0x50a2f0 in policydb_optimize selinux/libsepol/src/optimize.c:441:13
  | #2 0x4e12f3 in LLVMFuzzerTestOneInput selinux/libsepol/fuzz/binpolicy-fuzzer.c:42:10
  | #3 0x4d725b in main
  | #4 0x7f69776920b2 in __libc_start_main /build/glibc-eX1tMB/glibc-2.31/csu/libc-start.c:308:16
  | #5 0x41d4ed in _start",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,318,2021-10-08T18:59:43Z,2021-10-08T19:19:38Z,2021-10-08T19:19:47Z,CLOSED,False,271,86,25,https://github.com/evverx,Test,17,[],https://github.com/SELinuxProject/selinux/pull/318,https://github.com/evverx,1,https://github.com/SELinuxProject/selinux/pull/318,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,320,2021-10-12T11:28:30Z,2021-11-16T12:13:21Z,2021-11-16T12:13:22Z,CLOSED,False,34,18,2,https://github.com/evverx,ci: an attempt to run the tests under ASan/UBsan on GHActions,1,[],https://github.com/SELinuxProject/selinux/pull/320,https://github.com/evverx,1,https://github.com/SELinuxProject/selinux/pull/320,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,320,2021-10-12T11:28:30Z,2021-11-16T12:13:21Z,2021-11-16T12:13:22Z,CLOSED,False,34,18,2,https://github.com/evverx,ci: an attempt to run the tests under ASan/UBsan on GHActions,1,[],https://github.com/SELinuxProject/selinux/pull/320,https://github.com/evverx,2,https://github.com/SELinuxProject/selinux/pull/320#issuecomment-941284842,,Closing in favor of #321,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,320,2021-10-12T11:28:30Z,2021-11-16T12:13:21Z,2021-11-16T12:13:22Z,CLOSED,False,34,18,2,https://github.com/evverx,ci: an attempt to run the tests under ASan/UBsan on GHActions,1,[],https://github.com/SELinuxProject/selinux/pull/320,https://github.com/evverx,3,https://github.com/SELinuxProject/selinux/pull/320#issuecomment-970212136,,It was sent to the mailing list: https://lore.kernel.org/selinux/20211115185829.85614-1-evvers@ya.ru/T/#u . Closing,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,321,2021-10-12T14:18:26Z,,2022-04-20T19:57:50Z,OPEN,False,41,5,8,https://github.com/cgzones,Sanitizer test,3,[],https://github.com/SELinuxProject/selinux/pull/321,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/321,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,321,2021-10-12T14:18:26Z,,2022-04-20T19:57:50Z,OPEN,False,41,5,8,https://github.com/cgzones,Sanitizer test,3,[],https://github.com/SELinuxProject/selinux/pull/321,https://github.com/cgzones,2,https://github.com/SELinuxProject/selinux/pull/321#issuecomment-941064467,,/cc @evverx,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,321,2021-10-12T14:18:26Z,,2022-04-20T19:57:50Z,OPEN,False,41,5,8,https://github.com/cgzones,Sanitizer test,3,[],https://github.com/SELinuxProject/selinux/pull/321,https://github.com/evverx,3,https://github.com/SELinuxProject/selinux/pull/321#issuecomment-941100534,,"@cgzones Looks like UBSan no longer complains about those null pointers. Thanks!
Regarding memory leaks, unfortunately there're a lot of them in the tests themselves so I think until they're fixed they probably shouldn't be reported so as not to clutter the output of the tests.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,321,2021-10-12T14:18:26Z,,2022-04-20T19:57:50Z,OPEN,False,41,5,8,https://github.com/cgzones,Sanitizer test,3,[],https://github.com/SELinuxProject/selinux/pull/321,https://github.com/evverx,4,https://github.com/SELinuxProject/selinux/pull/321#issuecomment-941129797,,"I think until they're fixed they probably shouldn't be reported so as not to clutter the output of the tests.

Having said that, looking at the ""raw"" logs of the action I think it's more or less manageable so I'm going to have to take that back.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,321,2021-10-12T14:18:26Z,,2022-04-20T19:57:50Z,OPEN,False,41,5,8,https://github.com/cgzones,Sanitizer test,3,[],https://github.com/SELinuxProject/selinux/pull/321,https://github.com/evverx,5,https://github.com/SELinuxProject/selinux/pull/321#issuecomment-943437921,,@cgzones I noticed that you sent the patches where all the issues found by ASan/UBsan were fixed to the mailing list. Are you planning to send the other commits later or should I just cherry-pick the two commits you added related to GHActions on top of my PR and send it myself?,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,321,2021-10-12T14:18:26Z,,2022-04-20T19:57:50Z,OPEN,False,41,5,8,https://github.com/cgzones,Sanitizer test,3,[],https://github.com/SELinuxProject/selinux/pull/321,https://github.com/cgzones,6,https://github.com/SELinuxProject/selinux/pull/321#issuecomment-944274237,,"Are you planning to send the other commits later or should I just cherry-pick the two commits you added related to GHActions on top of my PR and send it myself?

I'd appreciate if you could send them yourself.
(Probably there is no need to cherry-pick my patches: ci: enable leak sanitizer is just a partial revert of ci: ignore memory leaks for now and ci: build all subdirectories in sanitizer job except python and sandbox is void, since all of those sub directories have no tests.)",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,321,2021-10-12T14:18:26Z,,2022-04-20T19:57:50Z,OPEN,False,41,5,8,https://github.com/cgzones,Sanitizer test,3,[],https://github.com/SELinuxProject/selinux/pull/321,https://github.com/evverx,7,https://github.com/SELinuxProject/selinux/pull/321#issuecomment-944355433,,I'll squash the commits into one and send it to the mailing list once https://lore.kernel.org/selinux/20211013125358.15534-1-cgzones@googlemail.com/T/#t is merged to keep the GHActions workflow green. Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,321,2021-10-12T14:18:26Z,,2022-04-20T19:57:50Z,OPEN,False,41,5,8,https://github.com/cgzones,Sanitizer test,3,[],https://github.com/SELinuxProject/selinux/pull/321,https://github.com/cgzones,8,https://github.com/SELinuxProject/selinux/pull/321#issuecomment-970115671,,"@evverx fyi, the sanitizer patches have been applied via b98d3c4, ea53901, fe01a91 and f95dbf2",True,{'THUMBS_UP': ['https://github.com/evverx']}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,321,2021-10-12T14:18:26Z,,2022-04-20T19:57:50Z,OPEN,False,41,5,8,https://github.com/cgzones,Sanitizer test,3,[],https://github.com/SELinuxProject/selinux/pull/321,https://github.com/evverx,9,https://github.com/SELinuxProject/selinux/pull/321#issuecomment-970121812,,"@cgzones thanks! I'll try to rebase #320 on top of the master branch to make sure it works, squash the commits into one and send it to the mailing list.",True,{'THUMBS_UP': ['https://github.com/cgzones']}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,323,2021-10-15T12:30:21Z,2021-11-11T22:00:16Z,2021-11-12T13:21:07Z,CLOSED,False,3,3,3,https://github.com/cgzones,libselinux: use dummy variable to silence glibc 2.34 warnings,1,[],https://github.com/SELinuxProject/selinux/pull/323,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/323,"Glibc 2.34 added an access function attribute to pthread_setspecific(3).
This leads to the following GCC warnings:
In file included from matchpathcon.c:5:
matchpathcon.c: In function ‘matchpathcon_init_prefix’:
selinux_internal.h:38:25: error: ‘pthread_setspecific’ expecting 1 byte in a region of size 0 [-Werror=stringop-overread]
   38 |                         pthread_setspecific(KEY, VALUE);        \
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
matchpathcon.c:359:9: note: in expansion of macro ‘__selinux_setspecific’
  359 |         __selinux_setspecific(destructor_key, (void *)1);
      |         ^~~~~~~~~~~~~~~~~~~~~
In file included from selinux_internal.h:2,
                 from matchpathcon.c:5:
/usr/include/pthread.h:1167:12: note: in a call to function ‘pthread_setspecific’ declared with attribute ‘access (none, 2)’
 1167 | extern int pthread_setspecific (pthread_key_t __key,
      |            ^~~~~~~~~~~~~~~~~~~

The actual value and the validity of the passed pointer is irrelevant,
since it does not gets accessed internally by glibc and
pthread_getspecific(3) is not used.
Use a pointer to a (temporary) valid object to please GCC.
Closes: #311
Signed-off-by: Christian Göttsche cgzones@googlemail.com","Glibc 2.34 added an access function attribute to pthread_setspecific(3).
This leads to the following GCC warnings:
In file included from matchpathcon.c:5:
matchpathcon.c: In function ‘matchpathcon_init_prefix’:
selinux_internal.h:38:25: error: ‘pthread_setspecific’ expecting 1 byte in a region of size 0 [-Werror=stringop-overread]
   38 |                         pthread_setspecific(KEY, VALUE);        \
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
matchpathcon.c:359:9: note: in expansion of macro ‘__selinux_setspecific’
  359 |         __selinux_setspecific(destructor_key, (void *)1);
      |         ^~~~~~~~~~~~~~~~~~~~~
In file included from selinux_internal.h:2,
                 from matchpathcon.c:5:
/usr/include/pthread.h:1167:12: note: in a call to function ‘pthread_setspecific’ declared with attribute ‘access (none, 2)’
 1167 | extern int pthread_setspecific (pthread_key_t __key,
      |            ^~~~~~~~~~~~~~~~~~~

The actual value and the validity of the passed pointer is irrelevant,
since it does not gets accessed internally by glibc and
pthread_getspecific(3) is not used.
Use a pointer to a (temporary) valid object to please GCC.
Closes: #311
Signed-off-by: Christian Göttsche cgzones@googlemail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,323,2021-10-15T12:30:21Z,2021-11-11T22:00:16Z,2021-11-12T13:21:07Z,CLOSED,False,3,3,3,https://github.com/cgzones,libselinux: use dummy variable to silence glibc 2.34 warnings,1,[],https://github.com/SELinuxProject/selinux/pull/323,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/323#issuecomment-966655757,"Glibc 2.34 added an access function attribute to pthread_setspecific(3).
This leads to the following GCC warnings:
In file included from matchpathcon.c:5:
matchpathcon.c: In function ‘matchpathcon_init_prefix’:
selinux_internal.h:38:25: error: ‘pthread_setspecific’ expecting 1 byte in a region of size 0 [-Werror=stringop-overread]
   38 |                         pthread_setspecific(KEY, VALUE);        \
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
matchpathcon.c:359:9: note: in expansion of macro ‘__selinux_setspecific’
  359 |         __selinux_setspecific(destructor_key, (void *)1);
      |         ^~~~~~~~~~~~~~~~~~~~~
In file included from selinux_internal.h:2,
                 from matchpathcon.c:5:
/usr/include/pthread.h:1167:12: note: in a call to function ‘pthread_setspecific’ declared with attribute ‘access (none, 2)’
 1167 | extern int pthread_setspecific (pthread_key_t __key,
      |            ^~~~~~~~~~~~~~~~~~~

The actual value and the validity of the passed pointer is irrelevant,
since it does not gets accessed internally by glibc and
pthread_getspecific(3) is not used.
Use a pointer to a (temporary) valid object to please GCC.
Closes: #311
Signed-off-by: Christian Göttsche cgzones@googlemail.com",Merged in 85982d8 . Thanks!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,326,2021-11-12T13:46:51Z,2021-11-19T15:54:03Z,2021-11-19T15:54:21Z,CLOSED,False,112,107,19,https://github.com/cgzones,misc warnings,12,[],https://github.com/SELinuxProject/selinux/pull/326,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/326,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,328,2021-11-22T12:01:04Z,2021-12-16T15:51:52Z,2021-12-16T15:51:59Z,CLOSED,False,111,52,12,https://github.com/cgzones,Pcre2,3,[],https://github.com/SELinuxProject/selinux/pull/328,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/328,Closes #194,Closes #194,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,329,2021-11-23T03:55:44Z,2022-04-07T14:21:08Z,2022-04-07T14:21:09Z,CLOSED,False,2,2,2,https://github.com/cutrightjm,Fixed selinux_config man page typos,1,[],https://github.com/SELinuxProject/selinux/pull/329,https://github.com/cutrightjm,1,https://github.com/SELinuxProject/selinux/pull/329,Signed-off-by: Jacob M Cutright < cutrightjm@stl.sh >,Signed-off-by: Jacob M Cutright < cutrightjm@stl.sh >,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,329,2021-11-23T03:55:44Z,2022-04-07T14:21:08Z,2022-04-07T14:21:09Z,CLOSED,False,2,2,2,https://github.com/cutrightjm,Fixed selinux_config man page typos,1,[],https://github.com/SELinuxProject/selinux/pull/329,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/329#issuecomment-1091803782,Signed-off-by: Jacob M Cutright < cutrightjm@stl.sh >,1cbce56,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,330,2021-11-23T19:04:41Z,2022-04-07T19:16:55Z,2022-04-07T19:16:56Z,CLOSED,False,107,11,6,https://github.com/cgzones,Add support for not self neverallow rules,5,[],https://github.com/SELinuxProject/selinux/pull/330,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/330,,,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,331,2021-11-29T19:38:18Z,2021-12-17T16:09:14Z,2021-12-17T16:09:17Z,CLOSED,False,54,4,2,https://github.com/cgzones,libsepol/cil: support IPv4/IPv6 address embedding,2,[],https://github.com/SELinuxProject/selinux/pull/331,https://github.com/cgzones,1,https://github.com/SELinuxProject/selinux/pull/331,"Accept IPv6 addresses, like ::ffff:127.0.0.1.
This allows using those in nodecon statements leading to fine grained
access control:
type=AVC msg=audit(11/29/21 20:27:44.437:419) : avc:  granted  { node_bind } for  pid=27500 comm=intercept saddr=::ffff:127.0.0.1 src=46293 scontext=xuser_u:xuser_r:xuser_t:s0 tcontext=system_u:object_r:lo_node_t:s0 tclass=tcp_socket

Also print on conversion failures the address in question.
Signed-off-by: Christian Göttsche cgzones@googlemail.com","Accept IPv6 addresses, like ::ffff:127.0.0.1.
This allows using those in nodecon statements leading to fine grained
access control:
type=AVC msg=audit(11/29/21 20:27:44.437:419) : avc:  granted  { node_bind } for  pid=27500 comm=intercept saddr=::ffff:127.0.0.1 src=46293 scontext=xuser_u:xuser_r:xuser_t:s0 tcontext=system_u:object_r:lo_node_t:s0 tclass=tcp_socket

Also print on conversion failures the address in question.
Signed-off-by: Christian Göttsche cgzones@googlemail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,336,2021-12-17T11:55:41Z,,2022-01-25T15:32:14Z,OPEN,False,10,1,1,https://github.com/purushottamc,libselinux: make threadsafe for discover_class_cache,1,[],https://github.com/SELinuxProject/selinux/pull/336,https://github.com/purushottamc,1,https://github.com/SELinuxProject/selinux/pull/336,"Crash is observed in process dbus-daemon while accessing name
from discover_class_cache structure variable,
discover_class_cache->name variable found NULL
during backtrace analysis.
Add mutex lock for the discover_class_cache to handle multiple
threads for the function which uses discover_class_cache
This avoids variable corruption during parallel access
in the multiple thread environment.","Crash is observed in process dbus-daemon while accessing name
from discover_class_cache structure variable,
discover_class_cache->name variable found NULL
during backtrace analysis.
Add mutex lock for the discover_class_cache to handle multiple
threads for the function which uses discover_class_cache
This avoids variable corruption during parallel access
in the multiple thread environment.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,336,2021-12-17T11:55:41Z,,2022-01-25T15:32:14Z,OPEN,False,10,1,1,https://github.com/purushottamc,libselinux: make threadsafe for discover_class_cache,1,[],https://github.com/SELinuxProject/selinux/pull/336,https://github.com/cgzones,2,https://github.com/SELinuxProject/selinux/pull/336#issuecomment-996754336,"Crash is observed in process dbus-daemon while accessing name
from discover_class_cache structure variable,
discover_class_cache->name variable found NULL
during backtrace analysis.
Add mutex lock for the discover_class_cache to handle multiple
threads for the function which uses discover_class_cache
This avoids variable corruption during parallel access
in the multiple thread environment.","I think there might still be an issue left:
Consider thread A calling string_to_security_class() calling get_class_cache_entry_name(), acquiring the mutex, getting the static discover_class_cache pointer, searching the required node, releasing the mutex and returning the node pointer back to string_to_security_class().
Now while operating in string_to_security_class() on the returned node pointer thread B calls selinux_flush_class_cache(), which invalidates all node pointers behind the static discover_class_cache and thus thread A will access free'd memory.
Also as by https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md#contributing-code all patches require a Signed-off-by and needs to be send to selinux@vger.kernel.org.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,336,2021-12-17T11:55:41Z,,2022-01-25T15:32:14Z,OPEN,False,10,1,1,https://github.com/purushottamc,libselinux: make threadsafe for discover_class_cache,1,[],https://github.com/SELinuxProject/selinux/pull/336,https://github.com/purushottamc,3,https://github.com/SELinuxProject/selinux/pull/336#issuecomment-1021076916,"Crash is observed in process dbus-daemon while accessing name
from discover_class_cache structure variable,
discover_class_cache->name variable found NULL
during backtrace analysis.
Add mutex lock for the discover_class_cache to handle multiple
threads for the function which uses discover_class_cache
This avoids variable corruption during parallel access
in the multiple thread environment.","Hi @cgzones,
Sent patch to selinux@vger.kernel.org
Did changes as per above review comments but changes are not working as expected with our build system:
https://lore.kernel.org/selinux/20220120073329.15234-1-purushottamchoudhary29@gmail.com/
Could you please have a look into it?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,336,2021-12-17T11:55:41Z,,2022-01-25T15:32:14Z,OPEN,False,10,1,1,https://github.com/purushottamc,libselinux: make threadsafe for discover_class_cache,1,[],https://github.com/SELinuxProject/selinux/pull/336,https://github.com/cgzones,4,https://github.com/SELinuxProject/selinux/pull/336#issuecomment-1021310953,"Crash is observed in process dbus-daemon while accessing name
from discover_class_cache structure variable,
discover_class_cache->name variable found NULL
during backtrace analysis.
Add mutex lock for the discover_class_cache to handle multiple
threads for the function which uses discover_class_cache
This avoids variable corruption during parallel access
in the multiple thread environment.","but changes are not working as expected with our build system

Does it not build, are there issues in single thread mode, are there issues with multiple threads?
For the multiple threads case:
security_av_perm_to_string() might still return an invalidated pointer and calls to (un)?map_(class|perm) might still be racy due to the process global variable current_mapping in mapping.c.
Another note on the sent patch: returning a copy from security_class_to_string() should probably communicated to all (also third-party, fortunately there seem to be not much (https://codesearch.debian.net/search?q=security_class_to_string&literal=1)) callers to avoid memory leaks and the type should by changed to char* to allow free'ing the memory without a dangerous const-cast.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,338,2022-01-11T14:23:28Z,2022-01-14T14:55:13Z,2022-01-14T14:56:07Z,MERGED,True,1,1,1,https://github.com/williamcroberts,policycoreutils: Improve error message when selabel_open fails,1,[],https://github.com/SELinuxProject/selinux/pull/338,https://github.com/williamcroberts,1,https://github.com/SELinuxProject/selinux/pull/338,"When selabel_open fails to locate file_context files and
selabel_opt_path is not specified (e.g. when the policy type is
missconfigured in /etc/selinux/config), perror only prints
""No such file or directory"".
This can be confusing in case of ""restorecon"" since it's
not apparent that the issue is in policy store.
Before:
# restorecon -v /tmp/foo.txt
No such file or directory
After:
# restorecon -v /tmp/foo.txt
/etc/selinux/yolo/contexts/files/file_contexts: No such file or directory
Signed-off-by: Vit Mojzis vmojzis@redhat.com","When selabel_open fails to locate file_context files and
selabel_opt_path is not specified (e.g. when the policy type is
missconfigured in /etc/selinux/config), perror only prints
""No such file or directory"".
This can be confusing in case of ""restorecon"" since it's
not apparent that the issue is in policy store.
Before:
# restorecon -v /tmp/foo.txt
No such file or directory
After:
# restorecon -v /tmp/foo.txt
/etc/selinux/yolo/contexts/files/file_contexts: No such file or directory
Signed-off-by: Vit Mojzis vmojzis@redhat.com",True,{'HEART': ['https://github.com/ktdreyer']}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/jmarrero,1,https://github.com/SELinuxProject/selinux/pull/342,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/cgzones,2,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1062070962,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,"This should probably implemented in C instead of spawning a new shell.
Untested draft:
static int write_full(int fd, const void *data, size_t count)
{
        const unsigned char *p = (const unsigned char *)data;

        while (count > 0) {
                ssize_t n_rw;
                do {
                        n_rw = write(fd, p, count);
                } while (n_rw < 0 && errno == EINTR);
                if (n_rw < 0)
                        return -1;
                if (n_rw == 0)
                        break;
                p += n_rw;
                count -= (size_t)n_rw;
        }

        return 0;
}

static int mv(const char *src, const char *dest)
{
        struct stat oldst;
        char buffer[8192];
        int old = -1, new = -1, r;

        r = rename(src, dest);
        if (r == 0)
                return 0;
        if (errno != EXDEV)
                return -1;

        old = open(src, O_RDONLY | O_CLOEXEC);
        if (old < 0)
                return -1;

        r = fstat(old, &oldst);
        if (r < 0)
                goto err;

        r = unlink(dest);
        if (r < 0 && errno != ENOENT)
                goto err;

        new = open(dest, O_WRONLY | O_CLOEXEC | O_CREAT | O_EXCL, ACCESSPERMS & oldst.st_mode);
        if (new < 0)
                goto err;

        for (;;) {
                ssize_t n;

                n = read(old, buffer, sizeof(buffer));
                if (n == 0)
                        break;
                if (n > 0) {
                        r = write_full(new, buffer, (size_t)n);
                        if (r < 0)
                                goto err;
                        continue;
                }

                if (errno == EINTR)
                        continue;

                goto err;
        }

        close(old);
        r = close(new);
        if (r < 0)
                return -1;

        r = unlink(src);
        if (r < 0)
                return -1;

        return 0;
err:
        if (new >= 0)
                close(new);
        if (old >= 0)
                close(old);
        return -1;
}",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/jmarrero,3,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1062094702,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,Thanks @cgzones I will give this a try and report back.,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/bachradsusi,4,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1063898200,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,"Before you send it to the review on selinux@vger.kernel.org could you please add provide more information in the commit message about the problem this tries to fix?
Especially about the filesystem layout and why /etc/selinux/targeted/active is on a different filesystem than /etc/selinux/targeted/previous. What would be the impact on the filesystem layout when /etc/selinux/targeted/active is copied into  /etc/selinux/targeted/previous and /etc/selinux/targeted/tmp, unlink()'ed and then created again with a copy of  /etc/selinux/targeted/tmp?",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/WOnder93,5,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1063979895,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,"@bachradsusi They are not on different filesystems - the problem is that overlayfs doesn't support rename(2) even on the same mount in some circumstances:
https://docs.docker.com/storage/storagedriver/overlayfs-driver/#modifying-files-or-directories
Anyway, I don't think @cgzones's solution will work in this case, since we are renaming a directory, not a single file. Also, I believe we expect the rename here to be atomic, so we need to ensure that whatever fallback we use for EXDEV is still atomic (at least to the same extent as rename(2) is).",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/bachradsusi,6,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1063992894,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,"thanks @WOnder93 this was the information I was missing.
Btw libsemanage already implements copying directories see https://github.com/SELinuxProject/selinux/blob/master/libsemanage/src/semanage_store.c#L773",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/jmarrero,7,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1069998281,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,"Sorry for the week delay, went on PTO just after my update here.
@cgzones using your draft I get:
libsemanage.semanage_commit_sandbox: Error while renaming /etc/selinux/targeted/active to /etc/selinux/targeted/previous. (Is a directory).

Which is what @WOnder93 suggested.
As for using @bachradsusi suggestion, I get:
Installing: usbguard-selinux-1.1.0-1.fc35.noarch (updates)
libsemanage.semanage_commit_sandbox: Error while renaming /etc/selinux/targeted/tmp to /etc/selinux/targeted/active. (File exists).
libsemanage.semanage_commit_sandbox: Error while renaming /etc/selinux/targeted/previous back to /etc/selinux/targeted/active. (File exists).
/usr/sbin/semodule:  Failed!

Also I tried a combination of both suggestions by replacing the rename on: https://github.com/SELinuxProject/selinux/blob/master/libsemanage/src/semanage_store.c#L763 with cgzones's mv implementation and using semanage_copy_dir for the other rename calls. But ended in the same error as above.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/bachradsusi,8,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1076285773,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,"@jmarrero Please try the bachradsusi@03db464
It implements fallback to semanage_copy_dir() and semanage_remove_dir() if rename() failed on EXDEV.
Even though it's not an atomic operation, it should happen just once (based on my observation).
If it works for you, we should move this to selinux@vger.kernel.org",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/jmarrero,9,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1076429366,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,It works on my end. Thank you!,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/bachradsusi,10,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1091801618,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,c7a3b93,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,342,2022-03-08T13:57:01Z,2022-04-07T14:18:49Z,2022-05-04T21:50:06Z,CLOSED,False,16,6,1,https://github.com/jmarrero,libsemanage: use mv instead of rename for container compat,1,[],https://github.com/SELinuxProject/selinux/pull/342,https://github.com/cgwalters,11,https://github.com/SELinuxProject/selinux/pull/342#issuecomment-1117968516,Initial good path for: #343 but I am sure it needs input validation and/or error handling.,cc coreos/coreos-layering-examples#16,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,345,2022-03-11T12:32:05Z,2022-04-15T08:43:26Z,2022-04-15T08:43:26Z,CLOSED,False,18,7,1,https://github.com/mikhailnov,gui: do not recreate /etc/selinux/config,1,[],https://github.com/SELinuxProject/selinux/pull/345,https://github.com/mikhailnov,1,https://github.com/SELinuxProject/selinux/pull/345,"/etc/selinux/config.bck was created and then replaced /etc/selinux/config.
/etc/selinux/config is often read by libselinux from non-root,
it must have mode 0644, but, when umask is 077, it became not world-readable
after running system-config-gui.
Overwrite the existing file instead of creating a new one.
Unfortunately, we may get a corrupted file if the GUI is closed when writing it,
but writing takes only a bit of time, plus we save a backup for manual restoring in such case.
Signed-off-by: Mikhail Novosyolov m.novosyolov@rosalinux.ru","/etc/selinux/config.bck was created and then replaced /etc/selinux/config.
/etc/selinux/config is often read by libselinux from non-root,
it must have mode 0644, but, when umask is 077, it became not world-readable
after running system-config-gui.
Overwrite the existing file instead of creating a new one.
Unfortunately, we may get a corrupted file if the GUI is closed when writing it,
but writing takes only a bit of time, plus we save a backup for manual restoring in such case.
Signed-off-by: Mikhail Novosyolov m.novosyolov@rosalinux.ru",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,347,2022-03-14T20:52:54Z,2022-04-02T12:56:35Z,2022-04-02T12:56:36Z,CLOSED,False,1,1,1,https://github.com/topimiettinen,secilc: kernel policy language is infix,1,[],https://github.com/SELinuxProject/selinux/pull/347,https://github.com/topimiettinen,1,https://github.com/SELinuxProject/selinux/pull/347,"Prefix / Polish (CIL): and a b
Infix (KPL): a and b
Postfix / Reverse Polish: a b and
Signed-off-by: Topi Miettinen toiwoton@gmail.com","Prefix / Polish (CIL): and a b
Infix (KPL): a and b
Postfix / Reverse Polish: a b and
Signed-off-by: Topi Miettinen toiwoton@gmail.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,347,2022-03-14T20:52:54Z,2022-04-02T12:56:35Z,2022-04-02T12:56:36Z,CLOSED,False,1,1,1,https://github.com/topimiettinen,secilc: kernel policy language is infix,1,[],https://github.com/SELinuxProject/selinux/pull/347,https://github.com/topimiettinen,2,https://github.com/SELinuxProject/selinux/pull/347#issuecomment-1086634538,"Prefix / Polish (CIL): and a b
Infix (KPL): a and b
Postfix / Reverse Polish: a b and
Signed-off-by: Topi Miettinen toiwoton@gmail.com",Closed by 8243b3e,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,348,2022-03-30T07:51:16Z,,2022-05-10T10:31:09Z,OPEN,False,113,1,2,https://github.com/ColMelvin,"Adjust sepolgen grammar to support allowxperm, et. al.",2,[],https://github.com/SELinuxProject/selinux/pull/348,https://github.com/ColMelvin,1,https://github.com/SELinuxProject/selinux/pull/348,"Provide basic support for allowxperm, auditallowxperm, dontauditxperm and neverallowxperm so /usr/bin/sepolgen-ifgen stops spewing errors on my policy every time selinux-policy-targeted gets updated.
While I would prefer additional changes to address magic numbers (e.g. a new macro, much like interface, but for defining xperm numbers), this PR is sufficient for my and - hopefully - the majority of the community's needs.","Provide basic support for allowxperm, auditallowxperm, dontauditxperm and neverallowxperm so /usr/bin/sepolgen-ifgen stops spewing errors on my policy every time selinux-policy-targeted gets updated.
While I would prefer additional changes to address magic numbers (e.g. a new macro, much like interface, but for defining xperm numbers), this PR is sufficient for my and - hopefully - the majority of the community's needs.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,348,2022-03-30T07:51:16Z,,2022-05-10T10:31:09Z,OPEN,False,113,1,2,https://github.com/ColMelvin,"Adjust sepolgen grammar to support allowxperm, et. al.",2,[],https://github.com/SELinuxProject/selinux/pull/348,https://github.com/bachradsusi,2,https://github.com/SELinuxProject/selinux/pull/348#issuecomment-1091800066,"Provide basic support for allowxperm, auditallowxperm, dontauditxperm and neverallowxperm so /usr/bin/sepolgen-ifgen stops spewing errors on my policy every time selinux-policy-targeted gets updated.
While I would prefer additional changes to address magic numbers (e.g. a new macro, much like interface, but for defining xperm numbers), this PR is sufficient for my and - hopefully - the majority of the community's needs.","Thanks for the patches. Please send them to selinux@vger.selinux.org for review when you are ready, see https://github.com/SELinuxProject/selinux/blob/master/CONTRIBUTING.md  If you, for any reason, can't send it I could do it for you.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,349,2022-04-01T14:20:01Z,,2022-04-01T14:29:12Z,OPEN,False,2261,964,1,https://github.com/bachradsusi,sepolgen: Update permission map,1,[],https://github.com/SELinuxProject/selinux/pull/349,https://github.com/bachradsusi,1,https://github.com/SELinuxProject/selinux/pull/349,"Use perm_map from SETools project
https://github.com/SELinuxProject/setools/blob/f0ca4667978ec85fe7e9a55c5470d54d88455f96/setools/perm_map
Signed-off-by: Petr Lautrbach plautrba@redhat.com","Use perm_map from SETools project
https://github.com/SELinuxProject/setools/blob/f0ca4667978ec85fe7e9a55c5470d54d88455f96/setools/perm_map
Signed-off-by: Petr Lautrbach plautrba@redhat.com",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,355,2022-05-25T11:23:08Z,,2022-06-01T14:02:18Z,OPEN,False,1,2,1,https://github.com/likunyur,newrole: free_hashtab_entry function does not use the return value an…,1,[],https://github.com/SELinuxProject/selinux/pull/355,https://github.com/likunyur,1,https://github.com/SELinuxProject/selinux/pull/355,Omit the eax register step,Omit the eax register step,True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,355,2022-05-25T11:23:08Z,,2022-06-01T14:02:18Z,OPEN,False,1,2,1,https://github.com/likunyur,newrole: free_hashtab_entry function does not use the return value an…,1,[],https://github.com/SELinuxProject/selinux/pull/355,https://github.com/fishilico,2,https://github.com/SELinuxProject/selinux/pull/355#issuecomment-1140511211,Omit the eax register step,"Hello,
Even though your patch works on your machine, it is actually introducing a bug which could be triggered on other systems/CPU. free_hashtab_entry is used in a call to function hashtab_map, which actually checks the return value of the function: 
  
    
      selinux/libsepol/src/hashtab.c
    
    
        Lines 234 to 236
      in
      0a8c177
    
  
  
    

        
          
           ret = apply(cur->key, cur->datum, args); 
        

        
          
           if (ret) 
        

        
          
           	return ret; 
        
    
  


Your patch makes this return value undefined, which is an issue.",True,{}
SELinuxProject/selinux,https://github.com/SELinuxProject/selinux,355,2022-05-25T11:23:08Z,,2022-06-01T14:02:18Z,OPEN,False,1,2,1,https://github.com/likunyur,newrole: free_hashtab_entry function does not use the return value an…,1,[],https://github.com/SELinuxProject/selinux/pull/355,https://github.com/cgzones,3,https://github.com/SELinuxProject/selinux/pull/355#issuecomment-1143653093,Omit the eax register step,"cc -O2 -Werror -Wall -Wextra -Wfloat-equal -Wformat=2 -Winit-self -Wmissing-format-attribute -Wmissing-noreturn -Wmissing-prototypes -Wnull-dereference -Wpointer-arith -Wshadow -Wstrict-prototypes -Wundef -Wunused -Wwrite-strings -fno-common -I/home/christian/destdir/usr/include -DVERSION=\""3.4\"" -DUSE_NLS -DLOCALEDIR=""\""/home/christian/destdir/usr/share/locale\"""" -DPACKAGE=""\""policycoreutils\"""" -DUSE_PAM -DUSE_AUDIT   -c -o newrole.o newrole.c
newrole.c: In function ‘main’:
newrole.c:1248:48: error: passing argument 2 of ‘hashtab_map’ from incompatible pointer type [-Werror=incompatible-pointer-types]
 1248 |                 hashtab_map(app_service_names, free_hashtab_entry, NULL);
      |                                                ^~~~~~~~~~~~~~~~~~
      |                                                |
      |                                                void (*)(char *, void *, void *)
In file included from newrole.c:220:
hashtab.h:109:30: note: expected ‘int (*)(char *, void *, void *)’ but argument is of type ‘void (*)(char *, void *, void *)’
  109 |                        int (*apply) (hashtab_key_t k,
      |                        ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  110 |                                      hashtab_datum_t d,
      |                                      ~~~~~~~~~~~~~~~~~~
  111 |                                      void *args), void *args);
      |                                      ~~~~~~~~~~~
newrole.c:1376:48: error: passing argument 2 of ‘hashtab_map’ from incompatible pointer type [-Werror=incompatible-pointer-types]
 1376 |                 hashtab_map(app_service_names, free_hashtab_entry, NULL);
      |                                                ^~~~~~~~~~~~~~~~~~
      |                                                |
      |                                                void (*)(char *, void *, void *)
In file included from newrole.c:220:
hashtab.h:109:30: note: expected ‘int (*)(char *, void *, void *)’ but argument is of type ‘void (*)(char *, void *, void *)’
  109 |                        int (*apply) (hashtab_key_t k,
      |                        ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  110 |                                      hashtab_datum_t d,
      |                                      ~~~~~~~~~~~~~~~~~~
  111 |                                      void *args), void *args);
      |                                      ~~~~~~~~~~~",True,{}
