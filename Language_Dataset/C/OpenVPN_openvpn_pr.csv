OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,42,2016-01-30T17:06:34Z,2016-02-05T05:12:45Z,2016-02-05T05:12:45Z,CLOSED,False,4,2,1,https://github.com/mmcco,Fix signed integer shift overflow,1,[],https://github.com/OpenVPN/openvpn/pull/42,https://github.com/mmcco,1,https://github.com/OpenVPN/openvpn/pull/42,"OpenVPN uses two loops of this form:
for (i = 1; i; i <<= 1)
where i is an int. This depends on shifting into and out of the sign
bit, both of which are undefined.
This code block has been copied around from original BSD code. I've
already fixed the instances present in OpenBSD:
https://marc.info/?l=openbsd-tech&m=145377854103866&w=2
My analysis there applies here as well.","OpenVPN uses two loops of this form:
for (i = 1; i; i <<= 1)
where i is an int. This depends on shifting into and out of the sign
bit, both of which are undefined.
This code block has been copied around from original BSD code. I've
already fixed the instances present in OpenBSD:
https://marc.info/?l=openbsd-tech&m=145377854103866&w=2
My analysis there applies here as well.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,42,2016-01-30T17:06:34Z,2016-02-05T05:12:45Z,2016-02-05T05:12:45Z,CLOSED,False,4,2,1,https://github.com/mmcco,Fix signed integer shift overflow,1,[],https://github.com/OpenVPN/openvpn/pull/42,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/42#issuecomment-177265784,"OpenVPN uses two loops of this form:
for (i = 1; i; i <<= 1)
where i is an int. This depends on shifting into and out of the sign
bit, both of which are undefined.
This code block has been copied around from original BSD code. I've
already fixed the instances present in OpenBSD:
https://marc.info/?l=openbsd-tech&m=145377854103866&w=2
My analysis there applies here as well.","Hi,
On Sat, Jan 30, 2016 at 09:06:37AM -0800, Michael McConville wrote:

OpenVPN uses two loops of this form:
for (i = 1; i; i <<= 1)
where i is an int. This depends on shifting into and out of the sign
bit, both of which are undefined.

It seems to be well-behaved enough, but I agree that changing this to
an unsigned bit type is better.

My analysis there applies here as well.
You can view, comment on, or merge this pull request online at:
#42

As we don't do pull requests, please send a patch to
openvpn-devel@lists.sourceforge.net (see ""CONTRIBUTING.rst"").
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,43,2016-04-27T18:49:37Z,2016-04-29T08:29:19Z,2016-04-29T08:30:59Z,CLOSED,False,442,91,22,https://github.com/neuhalje,add unit test support with cmocka,3,[],https://github.com/OpenVPN/openvpn/pull/43,https://github.com/neuhalje,1,https://github.com/OpenVPN/openvpn/pull/43,"** Replaced by PR #44 **
This set of patches adds unit test support to openvpn. The test framework used is cmocka

cmocka source is added as submodule in vendor because a package depenency is not feasible  (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example

Tested on MacOS & Ubuntu Trusty
CAVE:

cmocka needs cmake to be installed","** Replaced by PR #44 **
This set of patches adds unit test support to openvpn. The test framework used is cmocka

cmocka source is added as submodule in vendor because a package depenency is not feasible  (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example

Tested on MacOS & Ubuntu Trusty
CAVE:

cmocka needs cmake to be installed",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,43,2016-04-27T18:49:37Z,2016-04-29T08:29:19Z,2016-04-29T08:30:59Z,CLOSED,False,442,91,22,https://github.com/neuhalje,add unit test support with cmocka,3,[],https://github.com/OpenVPN/openvpn/pull/43,https://github.com/neuhalje,2,https://github.com/OpenVPN/openvpn/pull/43#issuecomment-215657814,"** Replaced by PR #44 **
This set of patches adds unit test support to openvpn. The test framework used is cmocka

cmocka source is added as submodule in vendor because a package depenency is not feasible  (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example

Tested on MacOS & Ubuntu Trusty
CAVE:

cmocka needs cmake to be installed",I put the PR into a new branch (and did some polishing). The new PR can be found as #44,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/neuhalje,1,https://github.com/OpenVPN/openvpn/pull/44,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/chipitsine,2,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-215658684,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","openvpn somehow does not close PR on github, so people usually open PR ... wait for some time ... someone respondes ""we do not use PR here, please do so and so""
have a look at other PR
it is really strange, I've no idea why PR are not closed for this project",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/neuhalje,3,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-215661663,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","@chipitsine This is really strange.  But thanks for the pointer: I  know that patches are managed via the list, I already send the patches.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/mattock,4,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220258338,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","Some time back we decided to allow use PRs for code review. The reviewed patch / set of patches will be sent to openvpn-devel mailing list and merged from there. Sending the patch can be handled by a core team member (e.g. me), if the author does not want to do that.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/mattock,5,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220259806,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","Regarding the patch... I noticed that the Git submodule is inside a subdirectory. If I recall correctly, older Git versions only allow submodules at the root of the Git repository. I wonder if this is going to cause issues in practice?
I'll test this patch and see how it works out on Fedora 23 and what caveats there are in practice, then get back to this.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/neuhalje,6,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220351018,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed",@mattock git submodule with folder works on Ubuntu Precise with git version 1.7.9.5  (released march 2012),True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/neuhalje,7,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220352800,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed",FYI: PR #45  can be used to test unit testing for different platforms; just make sure to install cmake (not included in #45),True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/syzzer,8,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220823960,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","Thanks.  This look promising, but I noticed that out-of-source builds fail.
I.e. the following should work, but currently doesn't:
(git clone --recursive https://github.com/neuhalje/openvpn.git --branch add_unit_tests && cd openvpn && autoreconf -vi)
mkdir openvpn-test-build
cd openvpn-test-build
../openvpn/configure
make check",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/neuhalje,9,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220832656,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","@syzzer  Good catch! Pushed a fix, mind to re-test to double check?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/syzzer,10,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220838773,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","Yes, works as expected now.
I'm going slightly pedantic with the review, but since this will be acting as an example that everyone will be copy-pasting around, it's extra important to get it fully right.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/neuhalje,11,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220840143,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","@syzzer  Bad examples are the worst, so I totally agree with a nitty gritty review :-)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/neuhalje,12,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220855461,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","Just give me a heads up when you are through, and I'll send in the patches to the list",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/neuhalje,13,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-220902938,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","Testing on Solaris 11.3:  works
(The error previously described in this comment was something else)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/syzzer,14,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-221384471,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","Two final nits, but after handling those this should be ready for the list :)  Not sure if you were planning to, but I think it's best to sqaush the fixes back into the two original commits.
Thanks for bearing with me.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/cron2,15,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-224915131,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","has this been merged fully, so we can close the PR?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,44,2016-04-29T08:28:41Z,2016-06-09T15:02:51Z,2016-06-09T17:54:58Z,CLOSED,False,453,92,22,https://github.com/neuhalje,Add unit tests (replaces PR#43),2,[],https://github.com/OpenVPN/openvpn/pull/44,https://github.com/syzzer,16,https://github.com/OpenVPN/openvpn/pull/44#issuecomment-224923481,"This set of patches adds unit test support to openvpn. The test framework used is cmocka
# after first checkout
git submodule init && git submodule update

# run tests, compile cmocka if needed
make check

cmocka source is added as submodule in vendor because a package depenency is not feasible (e.g. not available on all platforms)
cmocka is automatically build during make check.
the patchset contains tests for searchandreplace as an example
Tested on MacOS & Ubuntu Trusty

CAVE:

cmocka needs cmake to be installed","Yes, merged!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/neuhalje,1,https://github.com/OpenVPN/openvpn/pull/45,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/mattock,2,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-220252811,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","I've used Vagrant quite a bit in the past, so I'll take care of reviewing this. Right now I don't have VirtualBox installed, so the review will take a bit of time.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/mattock,3,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-222719271,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","I tested this a bit with latest Vagrant+Virtualbox and most of it seemed to work fine out of the box - excellent work!
I'm just wondering what kind of test setup we want exactly... right now, the ""real"" test server runs several OpenVPN server instances configured differently and listening on different ports. Each of the clients (buildslaves) connect to each of the server instances in turn. This is something we might (or might not) want to replicate here.
Another option would be to focus on building and running the server-side code on different VM instances, each running a different OS, and run the tests to ensure that the virtual host can connect to each of them. There could be several differently configured OpenVPN server instances on each of the VMs. Is this what you're trying achieve here?
In any case, I think we should strive for maximum automation, so that any developer is able to recreate the t_client.sh test environment with minimal tinkering and knowledge about t_client.sh. Which brings me to a couple of issues I noticed:

It seems that the line RUN_SUDO=sudo in t_client.rc needs to be enabled: at least on Fedora doing a ""sudo -s"" changes $HOME to /root, which means that $HOME/.vagrant can no longer be found.
The EXCEPT*_ values in t_client.rc-sample are not correct for the Vagrant VMs, which causes t_client.sh fail, even though OpenVPN connection is established correctly

What about having a tailored t_client.rc-vagrant file that fixes the two issues above? Making the VPN IP addresses predictable probably takes some effort, but would be worth it imho.
This is probably unrelated to this patch, but I noticed that the ""stopping OpenVPN"" part in t_client.sh hangs (indefinitely?) on Fedora 23.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/neuhalje,4,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-222760175,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","Hi

I tested this a bit with latest Vagrant+Virtualbox and most of it seemed to work fine out of the box - excellent work!
Thanks! And thank you for testing!
I'm just wondering what kind of test setup we want exactly... right now, the ""real"" test server runs several OpenVPN server instances configured differently and listening on different ports. Each of the clients (buildslaves) connect to each of the server instances in turn. This is something we might (or might not) want to replicate here.
basically “n Client Systems x n Server Systems”? This is what I see as a good case for a “is this ready for a patch submit” test.
Another option would be to focus on building and running the server-side code on different VM instances, each running a different OS, and run the tests to ensure that the virtual host can connect to each of them. There could be several differently configured OpenVPN server instances on each of the VMs. Is this what you're trying achieve here?
basically “1 Client System x n Server Systems”?

Both are viable routes that might not be exclusive (e.g. maybe they are more or less the same with a slightly different configuration)
IMHO the use cases are:


Iterative development (“1 x 1”): One VM as server or client endpoint. The other side on the development machine.


Feature test (“1 x n”): Multiple VMs as server or client endpoint. The other side on the development machine.


Final test (“n x n”):  Multiple VMs as server AND client endpoint.


Use case #1 is a MUST. Use case #2 is a SHOULD, and #3 its a COULD
My high level goals:


Make it easy for developers to set up different test & build machines to test new features against. (hypothesis: done with this PR, except for maybe some bugs)


Make integration with existing test tooling as easy as possible (still not quite there with this PR).


Make it easy to separate”Test Definition” from “Execution Environment” (still not quite started with this PR).
I.e. a test should consist of a client configuration, a server configuration, and (a maybe fixed) test function.
This is basically what t_client.sh does right now with the addition of automatic address configuration, and automatic server launches.



In any case, I think we should strive for maximum automation, so that any developer is able to recreate the t_client.sh test environment with minimal tinkering and knowledge about t_client.sh. Which brings me to a couple of issues I noticed:
Yes!
It seems that the line RUN_SUDO=sudo in t_client.rc needs to be enabled: at least on Fedora doing a ""sudo -s"" changes $HOME to /root, which means that $HOME/.vagrant can no longer be found.
—> Bug
The EXCEPT*_ values in t_client.rc-sample are not correct for the Vagrant VMs, which causes t_client.sh fail, even though OpenVPN connection is established correctly
—> Bug
What about having a tailored t_client.rc-vagrant file that fixes the two issues above? Making the VPN IP addresses predictable probably takes some effort, but would be worth it imho
Sounds good. I’ll try to improve the scripts next weekend!
This is probably unrelated to this patch, but I noticed that the ""stopping OpenVPN"" part in t_client.sh hangs (indefinitely?) on Fedora 23.
—> Bug

Next iteration :-)
Cheers
Jens

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #45 (comment), or mute the thread https://github.com/notifications/unsubscribe/ADqgEtaQGQc9CwYPmRJDPzAGVy0_-GoCks5qHE9egaJpZM4ISoWt.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/mattock,5,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-223215269,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","basically “n Client Systems x n Server Systems”? This is what I see as a good case for a “is this ready for a patch submit” test.

Right now we do this after the patch is in Git ""master"", because buildbot polls the ""master"" branch. We could and intend to add more testing branches that allow us to trigger builds before pushing anything to master.

IMHO the use cases are:

Iterative development (“1 x 1”): One VM as server or client endpoint. The other side on the development machine.


This is a good start and a reasonable sanity test. We can implement 2) and 3) as needed.

Use case #1 is a MUST. Use case #2 is a SHOULD, and #3 its a COULD

I agree, as we're probably targeting individual developers with Vagrant. The project as a whole can afford more complex testing systems, as those are built only once and the maintenance cost is thus low.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/mattock,6,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-240056984,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","@neuhalje : any progress on fixing the issues that I identified?
One further issue I noticed is the use of #!/bin/bash in some of the scripts. The scripts might include some bashisms, which need to be removed also. While most developers probably run Linux, Vagrant and Virtualbox also run on FreeBSD, which does not have Bash installed by default. So it would be preferable If the scripts were converted to POSIX shell format to avoid complaints later on.
As the last step the commits could probably be squashed to a few larger ones with no ill effects.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/mattock,7,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-251598400,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.",I'll look into the bashisms to get this moving forward. This PR might benefit from the new t_client.rc EXPECT_IFCONFIG* auto-detection and caching patch that just got merged.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/neuhalje,8,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-272794692,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","Ok, back again. I'm going to try to get the scripts ksh compatible.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/neuhalje,9,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-272795273,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","@mattock : Samuli, I have been absent from OpenVPN development for a few, aehm, days. Mayber you could help me out:
I already removed the EXPECT_IFCONFIG* statements from t_client.rc-sample. Is that enough to implement df0b00c?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/mattock,10,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-272814325,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","@neuhalje : it's been a while since I implemented the IP caching, but two things need to be done:

Remove EXCEPT_IFCONFIG entries from t_client.rc
Include t_client_ips.rc in t_client.rc (see t_client.rc-sample): otherwise t_client.sh will add duplicate EXCEPT_IFCONFIG lines to t_client_ips.rc on every run.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/cron2,11,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-273308832,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","Independent from the rest of this, the ""run tests needing 'ld --wrap' only where supported"" sounds like something we want to have right away...  can you send that one as standalone patch relative to master to the -devel list?  thanks
(Actually, I want the functionality, but we should check whether ld --wrap works, instead of just declaring ""only on Linux"" - FreeBSD has clang with the GNU ld, so it works perfectly fine there, for example.  So the first hunk needs to be ""configure runs a ld --wrap test"" not ""on Linux"")",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/neuhalje,12,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-273316439,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","I pushed the 'ld --wrap' fix as PR #79
It still needs some test though",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/neuhalje,13,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-273331562,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","@cron2 Gert, any clue on how to run a ld --wrap-works test? My autotools skills are sub-zero",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/cron2,14,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-273406132,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","Hi,
On Tue, Jan 17, 2017 at 03:13:37PM -0800, Jens Neuhalfen wrote:
 Gert, any clue on how to run a `ld --wrap`-works test? My autotools are sub-zero
My autotools knowledge is at 0.03 or so, so ""more than zero because I
had to"", but not really.  Selva is the wonderman, though :-)

But we'll get this done together!

gert
…
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/chipitsine,15,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-273414038,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","[ilia@localhost ~]$ ld --help | grep wrap
  --wrap SYMBOL               Use wrapper functions for SYMBOL
[ilia@localhost ~]$",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/neuhalje,16,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-273414388,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","on macos:
 ld --help
ld64: For information on command line options please use 'man ld'.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/chipitsine,17,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-273414520,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.",try 'ld --help 2>/dev/null',True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/neuhalje,18,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-273415187,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.",Let's continue the '--wrap' topic on PR#79,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/chipitsine,19,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-273416120,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","sorry, I did not notice ""vagrant"" in the topic",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/neuhalje,20,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-643403856,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.",probably dead by now .. cleaning up,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,45,2016-04-29T08:45:16Z,2020-06-12T17:44:45Z,2020-06-16T07:36:41Z,CLOSED,False,502,5,15,https://github.com/neuhalje,testing: Add vagrant based integration tests,7,[],https://github.com/OpenVPN/openvpn/pull/45,https://github.com/mattock,21,https://github.com/OpenVPN/openvpn/pull/45#issuecomment-644589966,"This patch will add test servers to use with t_client.sh. This will make testing on different systems much easier. Bonus: testing on a laptop is a breeze by ""one command integration tests"".
Example
./run_integration.sh ubuntu_precise64
# does the following
# - start an Ubuntu Precise VM
# - Copy your current source code to the VM
# - configure & make on the VM
# - Run the server on the VM
# - Run t_client.sh *with the REMOTE_HOST pointing to the VM*
# - The outputs of client & server are colorized AND interleaved for better diagnosis
# - Tear down the server
Virtual machines are defined by Vagrant scripts. Virtualbox is used for virtualisation.
Each of the virtual machines is configured to compile openvpn and run a server.
Inside the vm a openvpn server can be launched to run t_client.sh tests against it. Sample launcher scripts are provided.","This PR was a good idea and I intended to get this merged. But I had never time to do it, nor does it look likely that I ever will  😞.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,46,2016-05-17T19:13:00Z,,2016-08-17T17:29:06Z,OPEN,False,4,1,1,https://github.com/amatveyev-gh,management interface: Reverted management_io to its original state to prevent the following problem:,1,[],https://github.com/OpenVPN/openvpn/pull/46,https://github.com/amatveyev-gh,1,https://github.com/OpenVPN/openvpn/pull/46,"man_read -> ... -> man_output_list_push_finalize -> management_io ->
man_read
After some digging I found this commit made by James Yonan in 2010:
https://sourceforge.net/p/openvpn/openvpn-testing/ci/3cf6c9328250061600b78c8a7deb0edc850e739b
In this commit he put both writing to and reading from the socket into the
same ""if"" branch, which leads to the problem I've mentioned above.
man_read after having been called recursively goes totally nuts and screws its input
buffer, as result, openvpn can processes the same command several times
and then fail to read the rest of them correctly.
I'm not sure that what I did here is the best way to solve this problem,
but it seems to work for me.","man_read -> ... -> man_output_list_push_finalize -> management_io ->
man_read
After some digging I found this commit made by James Yonan in 2010:
https://sourceforge.net/p/openvpn/openvpn-testing/ci/3cf6c9328250061600b78c8a7deb0edc850e739b
In this commit he put both writing to and reading from the socket into the
same ""if"" branch, which leads to the problem I've mentioned above.
man_read after having been called recursively goes totally nuts and screws its input
buffer, as result, openvpn can processes the same command several times
and then fail to read the rest of them correctly.
I'm not sure that what I did here is the best way to solve this problem,
but it seems to work for me.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,46,2016-05-17T19:13:00Z,,2016-08-17T17:29:06Z,OPEN,False,4,1,1,https://github.com/amatveyev-gh,management interface: Reverted management_io to its original state to prevent the following problem:,1,[],https://github.com/OpenVPN/openvpn/pull/46,https://github.com/amatveyev-gh,2,https://github.com/OpenVPN/openvpn/pull/46#issuecomment-219951596,"man_read -> ... -> man_output_list_push_finalize -> management_io ->
man_read
After some digging I found this commit made by James Yonan in 2010:
https://sourceforge.net/p/openvpn/openvpn-testing/ci/3cf6c9328250061600b78c8a7deb0edc850e739b
In this commit he put both writing to and reading from the socket into the
same ""if"" branch, which leads to the problem I've mentioned above.
man_read after having been called recursively goes totally nuts and screws its input
buffer, as result, openvpn can processes the same command several times
and then fail to read the rest of them correctly.
I'm not sure that what I did here is the best way to solve this problem,
but it seems to work for me.","Here is a small testcase I used to reproduce and debug the problem:

run openvpn.exe, obviously. I ran it with --management-hold to make it wait for input, but I don't think it matters
Use this little program to send a bunch of commands quickly. In my case it's just a series of alternating ""state on"" and ""state of"".

#include <stdio.h>
#include <stdlib.h>
#include <winsock2.h>

#pragma comment(lib,""ws2_32.lib"") //Winsock

int main(int argc , char *argv[])
{
    WSADATA wsa;
    SOCKET s;
    struct sockaddr_in server;
    char buf[256] = { 0 };
    int received;
    int counter;

    WSAStartup(MAKEWORD(2,2), &wsa);

    s = socket(AF_INET, SOCK_STREAM, 0 );

    server.sin_addr.s_addr = inet_addr(""127.0.0.1"");
    server.sin_family = AF_INET;
    server.sin_port = htons(12345);

    connect(s, (struct sockaddr *)&server, sizeof(server));

    recv(s, buf, sizeof(buf), 0);
    // For some reason, without this line the bug doesn't reproduce on my machine
    printf(""Received %s\n"", buf); 

    for (counter = 0; counter < 10; ++counter)
    {
        const char* on = ""state on\n"";
        const char* off = ""state off\n"";
        const char* ptr;
        int result;
        if (counter % 2)
            ptr = on;
        else
            ptr = off;
        result = send(s, ptr, strlen(ptr), 0);
        printf(""%d bytes were sent\n"", result);
    }

    Sleep(1000*1000); // need this for debugging

    shutdown(s, SD_BOTH);
    closesocket(s);
    WSACleanup();

    return 0;
}


See something like this:


Of course, as with any race condition, your ability to reproduce this bug might depend on your particular machine and/or luck.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,46,2016-05-17T19:13:00Z,,2016-08-17T17:29:06Z,OPEN,False,4,1,1,https://github.com/amatveyev-gh,management interface: Reverted management_io to its original state to prevent the following problem:,1,[],https://github.com/OpenVPN/openvpn/pull/46,https://github.com/amatveyev-gh,3,https://github.com/OpenVPN/openvpn/pull/46#issuecomment-219956152,"man_read -> ... -> man_output_list_push_finalize -> management_io ->
man_read
After some digging I found this commit made by James Yonan in 2010:
https://sourceforge.net/p/openvpn/openvpn-testing/ci/3cf6c9328250061600b78c8a7deb0edc850e739b
In this commit he put both writing to and reading from the socket into the
same ""if"" branch, which leads to the problem I've mentioned above.
man_read after having been called recursively goes totally nuts and screws its input
buffer, as result, openvpn can processes the same command several times
and then fail to read the rest of them correctly.
I'm not sure that what I did here is the best way to solve this problem,
but it seems to work for me.","And in terms of code the problem looks like this:
002fefd0 0126d7a9 openvpn!man_read+0x27
002fefe8 01271ef8 openvpn!management_io+0xc9
002feff4 0126b194 openvpn!man_output_standalone+0x28
002ff010 0126af4b openvpn!man_output_list_push_finalize+0x54
002ff054 0125201c openvpn!virtual_output_callback_func+0x17b
002ff06c 01251db3 openvpn!virtual_output_print+0x1c
002ff0c8 01251b62 openvpn!x_msg_va+0x233
002ff0e0 01270621 openvpn!x_msg+0x22
002ff124 0127086a openvpn!man_history+0xe1
002ff144 0126ea1b openvpn!man_state+0x2a
002ff17c 0126e06a openvpn!man_dispatch_command+0x7ab
002ff1fc 0126dabc openvpn!man_process_command+0x18a
002ff32c 0126d7a9 openvpn!man_read+0x16c
002ff344 01272358 openvpn!management_io+0xc9
It goes like this:

openvpn receives the first ""state off"" and starts processing it. During processing it modifies the input buffer (man->connection.in): '\n' is removed and '\0' is added at the end of the command. But the man->connection.in->buf.offset is still 0, it points to the beginning of the buffer.
While processing the command, openvpn wants to write something and goes to management_io
management_io says: 'Ok, I see you want to write, but you know what, why don't you also read something and try to process it, so go to man_read'
We get to man_read again, and read a few more commands that came in while we were processing the first one. But here is the thing: the input buffer is in inconsistent state, and after we add new commands to it it looks like this: ""state off\0state on\n"" and the offset is still 0. How many commands do we have here? I guess you can get the rest of the story from here.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,46,2016-05-17T19:13:00Z,,2016-08-17T17:29:06Z,OPEN,False,4,1,1,https://github.com/amatveyev-gh,management interface: Reverted management_io to its original state to prevent the following problem:,1,[],https://github.com/OpenVPN/openvpn/pull/46,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/46#issuecomment-219970638,"man_read -> ... -> man_output_list_push_finalize -> management_io ->
man_read
After some digging I found this commit made by James Yonan in 2010:
https://sourceforge.net/p/openvpn/openvpn-testing/ci/3cf6c9328250061600b78c8a7deb0edc850e739b
In this commit he put both writing to and reading from the socket into the
same ""if"" branch, which leads to the problem I've mentioned above.
man_read after having been called recursively goes totally nuts and screws its input
buffer, as result, openvpn can processes the same command several times
and then fail to read the rest of them correctly.
I'm not sure that what I did here is the best way to solve this problem,
but it seems to work for me.","Hi,
On Tue, May 17, 2016 at 12:13:04PM -0700, Alexander Matveyev wrote:

I'm not sure that what I did here is the best way to solve this problem,
but it seems to work for me.

Thanks for the patch and the detailed description.  I've asked James and
Arne to review the issue because they know the management code best
(and James is the author of the original offending commit).
gert

USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,46,2016-05-17T19:13:00Z,,2016-08-17T17:29:06Z,OPEN,False,4,1,1,https://github.com/amatveyev-gh,management interface: Reverted management_io to its original state to prevent the following problem:,1,[],https://github.com/OpenVPN/openvpn/pull/46,https://github.com/mattock,5,https://github.com/OpenVPN/openvpn/pull/46#issuecomment-220252481,"man_read -> ... -> man_output_list_push_finalize -> management_io ->
man_read
After some digging I found this commit made by James Yonan in 2010:
https://sourceforge.net/p/openvpn/openvpn-testing/ci/3cf6c9328250061600b78c8a7deb0edc850e739b
In this commit he put both writing to and reading from the socket into the
same ""if"" branch, which leads to the problem I've mentioned above.
man_read after having been called recursively goes totally nuts and screws its input
buffer, as result, openvpn can processes the same command several times
and then fail to read the rest of them correctly.
I'm not sure that what I did here is the best way to solve this problem,
but it seems to work for me.",Notifying @jamesyonan,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,46,2016-05-17T19:13:00Z,,2016-08-17T17:29:06Z,OPEN,False,4,1,1,https://github.com/amatveyev-gh,management interface: Reverted management_io to its original state to prevent the following problem:,1,[],https://github.com/OpenVPN/openvpn/pull/46,https://github.com/amatveyev-gh,6,https://github.com/OpenVPN/openvpn/pull/46#issuecomment-220969001,"man_read -> ... -> man_output_list_push_finalize -> management_io ->
man_read
After some digging I found this commit made by James Yonan in 2010:
https://sourceforge.net/p/openvpn/openvpn-testing/ci/3cf6c9328250061600b78c8a7deb0edc850e739b
In this commit he put both writing to and reading from the socket into the
same ""if"" branch, which leads to the problem I've mentioned above.
man_read after having been called recursively goes totally nuts and screws its input
buffer, as result, openvpn can processes the same command several times
and then fail to read the rest of them correctly.
I'm not sure that what I did here is the best way to solve this problem,
but it seems to work for me.","Aaand, of course I made a stupid mistake when fixing the bug in my local fork. One closing '}' brace is in the wrong place. I debugged and worked on one source tree and sent you changes from another, typical me :) It doesn't change anything about the bug description, just disregard my patch, the fix is trivial anyway, you can easily do it from scratch or even decide to fix the problem in a totally different place.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,47,2016-05-18T07:32:39Z,2016-05-20T17:27:11Z,2016-05-20T17:27:11Z,CLOSED,False,9,12,2,https://github.com/chipitsine,fix cppcheck findings,1,[],https://github.com/OpenVPN/openvpn/pull/47,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/47,"(both master and release/2.3)
[src/openvpn/error.c:736]: (error) Possible null pointer dereference: null
[src/openvpn/error.c:736]: (error) Null pointer dereference
function ""crash"" is not used anywhere. so, it's better to remove it.
(only master)
[src/openvpnserv/interactive.c:601]: (error) Memory pointed to by 'addr_row' is freed twice.
[src/openvpnserv/interactive.c:700]: (error) Memory pointed to by 'fwd_row' is freed twice.
[src/openvpnserv/interactive.c:1329]: (error) Common realloc mistake: 'handles' nulled but not freed upon failure
RemoveListItem free addr_row and fwd_row, so there's no need to free them once again after ""goto"". It is dirty fix, I'd say interactive.c is overcomplicated here (lots of ""if""s and ""goto""s), so it is better to rewrite it in some straightforward way.
as for realloc, it is common not to handle failures, it is not very dangerous, it is rather some sugar to stop cppcheck from noising.","(both master and release/2.3)
[src/openvpn/error.c:736]: (error) Possible null pointer dereference: null
[src/openvpn/error.c:736]: (error) Null pointer dereference
function ""crash"" is not used anywhere. so, it's better to remove it.
(only master)
[src/openvpnserv/interactive.c:601]: (error) Memory pointed to by 'addr_row' is freed twice.
[src/openvpnserv/interactive.c:700]: (error) Memory pointed to by 'fwd_row' is freed twice.
[src/openvpnserv/interactive.c:1329]: (error) Common realloc mistake: 'handles' nulled but not freed upon failure
RemoveListItem free addr_row and fwd_row, so there's no need to free them once again after ""goto"". It is dirty fix, I'd say interactive.c is overcomplicated here (lots of ""if""s and ""goto""s), so it is better to rewrite it in some straightforward way.
as for realloc, it is common not to handle failures, it is not very dangerous, it is rather some sugar to stop cppcheck from noising.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,47,2016-05-18T07:32:39Z,2016-05-20T17:27:11Z,2016-05-20T17:27:11Z,CLOSED,False,9,12,2,https://github.com/chipitsine,fix cppcheck findings,1,[],https://github.com/OpenVPN/openvpn/pull/47,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/47#issuecomment-220067123,"(both master and release/2.3)
[src/openvpn/error.c:736]: (error) Possible null pointer dereference: null
[src/openvpn/error.c:736]: (error) Null pointer dereference
function ""crash"" is not used anywhere. so, it's better to remove it.
(only master)
[src/openvpnserv/interactive.c:601]: (error) Memory pointed to by 'addr_row' is freed twice.
[src/openvpnserv/interactive.c:700]: (error) Memory pointed to by 'fwd_row' is freed twice.
[src/openvpnserv/interactive.c:1329]: (error) Common realloc mistake: 'handles' nulled but not freed upon failure
RemoveListItem free addr_row and fwd_row, so there's no need to free them once again after ""goto"". It is dirty fix, I'd say interactive.c is overcomplicated here (lots of ""if""s and ""goto""s), so it is better to rewrite it in some straightforward way.
as for realloc, it is common not to handle failures, it is not very dangerous, it is rather some sugar to stop cppcheck from noising.","Hi,
On Wed, May 18, 2016 at 12:32:42AM -0700, Ilya Shipitsin wrote:

(both master and release/2.3)
[src/openvpn/error.c:736]: (error) Possible null pointer dereference: null
[src/openvpn/error.c:736]: (error) Null pointer dereference
function ""crash"" is not used anywhere. so, it's better to remove it.

The whole point of crash() is to crash, and it's only there if ENABLE_DEBUG
is defined - so that null pointer dereference is fully intentional.
Currently it indeed has no caller.

(only master)
[src/openvpnserv/interactive.c:601]: (error) Memory pointed to by 'addr_row' is freed twice.

I'm not sure I agree with that assessment.  RemoveListItem() returns
item->data, which is not pointer-compared to ""addr_row"", but memory-compared
(""it points to something that contains the same information as addr_row"")
by CmpAddress:
static BOOL
CmpAddress (LPVOID item, LPVOID address)
{
return memcmp (item, address, sizeof (MIB_UNICASTIPADDRESS_ROW)) == 0 ? TRUE :
FALSE;
}
so having addr_row point at memory location x and item->data point at
memory location y, but both having the same content(!) would match here

and then ""item->data"" would be free()ed (->y), not ""addr_row"".


[src/openvpnserv/interactive.c:700]: (error) Memory pointed to by 'fwd_row' is freed twice.

Same thing.
I agree that this code is not really easy to read - so rewriting it
in a way that makes it easier to parse for humans and static analyzers
might be the way forward.  But that doesn't make the existing code
incorrect.

RemoveListItem free addr_row and fwd_row,

It does not.  It frees the memory region data->item, which has the same
content as the memory region pointed to by addr_row and fwd_row, but
is not the same pointer.
(Technically, it frees only ""data"", which is the list node that happens
to have data->item pointing to the memory location identical to addr_row /
fwd_row, and the caller free()'s data->item - but in any case, nobody
free()s what is ""ctx"" in RemoveListItem().

[src/openvpnserv/interactive.c:1329]: (error) Common realloc mistake: 'handles' nulled but not freed upon failure

You're working on an older tree - git master line 1329 has no realloc()
anywhere near.  I do think I know which realloc() you are talking about

Selva has sent a patch for that (now in line 1477) a few days ago, but
withdrawn.  I think he's still looking at this.

gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,47,2016-05-18T07:32:39Z,2016-05-20T17:27:11Z,2016-05-20T17:27:11Z,CLOSED,False,9,12,2,https://github.com/chipitsine,fix cppcheck findings,1,[],https://github.com/OpenVPN/openvpn/pull/47,https://github.com/selvanair,3,https://github.com/OpenVPN/openvpn/pull/47#issuecomment-220667142,"(both master and release/2.3)
[src/openvpn/error.c:736]: (error) Possible null pointer dereference: null
[src/openvpn/error.c:736]: (error) Null pointer dereference
function ""crash"" is not used anywhere. so, it's better to remove it.
(only master)
[src/openvpnserv/interactive.c:601]: (error) Memory pointed to by 'addr_row' is freed twice.
[src/openvpnserv/interactive.c:700]: (error) Memory pointed to by 'fwd_row' is freed twice.
[src/openvpnserv/interactive.c:1329]: (error) Common realloc mistake: 'handles' nulled but not freed upon failure
RemoveListItem free addr_row and fwd_row, so there's no need to free them once again after ""goto"". It is dirty fix, I'd say interactive.c is overcomplicated here (lots of ""if""s and ""goto""s), so it is better to rewrite it in some straightforward way.
as for realloc, it is common not to handle failures, it is not very dangerous, it is rather some sugar to stop cppcheck from noising.","@chipitsine

[src/openvpnserv/interactive.c:601]: (error) Memory pointed to by 'addr_row' is freed twice.
[src/openvpnserv/interactive.c:700]: (error) Memory pointed to by 'fwd_row' is freed twice.

I too don't see any double free here. cppcheck is likely barking up a wrong tree.


[src/openvpnserv/interactive.c:1329]: (error) Common realloc mistake: 'handles' nulled but not freed upon failure


@cron2

You're working on an older tree - git master line 1329 has no realloc()
anywhere near.  I do think I know which realloc() you are talking about

Selva has sent a patch for that (now in line 1477) a few days ago, but
withdrawn.  I think he's still looking at this.


The patch was missing a chunk. I did not resend it as it was somewhat cosmetic: viz., ""use realloc the right way"" even though the original code is fine for some convoluted reasons. Note that memory is allocated in chunks of 10 handles but the required size increases only by 1 per call  (or by 2 for the first call) . So realloc will be called only once at most in the loop, and if it fails, ServiceStartInteractive() has a copy of the original handles pointer. Still, I may resubmit the patch after another look.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,47,2016-05-18T07:32:39Z,2016-05-20T17:27:11Z,2016-05-20T17:27:11Z,CLOSED,False,9,12,2,https://github.com/chipitsine,fix cppcheck findings,1,[],https://github.com/OpenVPN/openvpn/pull/47,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/47#issuecomment-220667867,"(both master and release/2.3)
[src/openvpn/error.c:736]: (error) Possible null pointer dereference: null
[src/openvpn/error.c:736]: (error) Null pointer dereference
function ""crash"" is not used anywhere. so, it's better to remove it.
(only master)
[src/openvpnserv/interactive.c:601]: (error) Memory pointed to by 'addr_row' is freed twice.
[src/openvpnserv/interactive.c:700]: (error) Memory pointed to by 'fwd_row' is freed twice.
[src/openvpnserv/interactive.c:1329]: (error) Common realloc mistake: 'handles' nulled but not freed upon failure
RemoveListItem free addr_row and fwd_row, so there's no need to free them once again after ""goto"". It is dirty fix, I'd say interactive.c is overcomplicated here (lots of ""if""s and ""goto""s), so it is better to rewrite it in some straightforward way.
as for realloc, it is common not to handle failures, it is not very dangerous, it is rather some sugar to stop cppcheck from noising.","Hi,
On Fri, May 20, 2016 at 10:24:17AM -0700, Selva Nair wrote:

@cron2

You're working on an older tree - git master line 1329 has no realloc()
anywhere near.  I do think I know which realloc() you are talking about

Selva has sent a patch for that (now in line 1477) a few days ago, but
withdrawn.  I think he's still looking at this.


The patch was missing a chunk. I did not resend it as it was somewhat cosmetic: viz., ""use realloc the right way"" even though the original code is fine for some convoluted reasons. Note that memory is allocated in chunks of 10 handles but the required size increases only by 1 per call  (or by 2 for the first call) . So realloc will be called only once at most in the loop, and if it fails, ServiceStartInteractive() has a copy of the original handles pointer. Still, I may resubmit the patch after another look.

Thanks for the clarification.  I did look at the code for a few minutes
but couldn't really figure out what all possible error exits are, and
what should happen in that case.
If the current code is ""complicated but correct"", we can close this PR,
and if you find time, I'll happily stare at a new patch :-)
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,48,2016-05-18T07:33:25Z,2016-05-18T15:42:46Z,2016-05-18T15:42:46Z,CLOSED,False,0,9,1,https://github.com/chipitsine, fix cppcheck findings,1,[],https://github.com/OpenVPN/openvpn/pull/48,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/48,"[src/openvpn/error.c:736]: (error) Possible null pointer dereference: null
[src/openvpn/error.c:736]: (error) Null pointer dereference
function ""crash"" is not used anywhere. so, it's better to remove it.","[src/openvpn/error.c:736]: (error) Possible null pointer dereference: null
[src/openvpn/error.c:736]: (error) Null pointer dereference
function ""crash"" is not used anywhere. so, it's better to remove it.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,48,2016-05-18T07:33:25Z,2016-05-18T15:42:46Z,2016-05-18T15:42:46Z,CLOSED,False,0,9,1,https://github.com/chipitsine, fix cppcheck findings,1,[],https://github.com/OpenVPN/openvpn/pull/48,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/48#issuecomment-220068217,"[src/openvpn/error.c:736]: (error) Possible null pointer dereference: null
[src/openvpn/error.c:736]: (error) Null pointer dereference
function ""crash"" is not used anywhere. so, it's better to remove it.","crash() is already covered in pull request 47, and as commented there, the null pointer derefernce is fully intentional - it does what the name says: crash.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/neuhalje,1,https://github.com/OpenVPN/openvpn/pull/49,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).","Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/neuhalje,2,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-220848986,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).","TODO: make sure that it works on

Ubuntu Precise Pangolin
Mac OS
Solaris 11",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/neuhalje,3,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-221016531,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).",Solaris 11.3 works if I manually change the shell in the shebang to #!/bin/bash,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-221019090,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).","Hi,
On Mon, May 23, 2016 at 08:54:27AM -0700, Jens Neuhalfen wrote:

Solaris 11.3 works if I manually change the shell in the shebang to #bin/bash

If we do that from autoconf, fine with me - /bin/bash seems to be
installed ""out of the factory"" on Solaris.
It will not be there on the BSDs by default, so we can't change it
by default (and if installed, it will be /usr/local/bin/bash).
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/neuhalje,5,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-221021416,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).",@cron2 What are the 'modern'  shells on BSDs? It honestly feels a bit strange to restrict ourselves to a DEV environment older than 20 years.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/cron2,6,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-221021995,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).","Hi,
On Mon, May 23, 2016 at 09:17:56AM -0700, Jens Neuhalfen wrote:

@cron2 What are the 'modern'  shells on BSDs? It honestly feels a bit strange to restrict ourselves to a DEV environment older than 20 years.

BSD is ""POSIX shell"" (or perl since autoconf pulls that in anyway).
gert

USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/chipitsine,7,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-224247240,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).","Jens, please, have a look at this https://travis-ci.org/OpenVPN/openvpn/jobs/135835676",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/mattock,8,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-224248317,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).","Another quoting issue? It seems the tests tried to run ""openvpn --genkey"" and failed.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/chipitsine,9,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-224250761,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).","openvpn was configured --disable-crypto, it is legitimate configuration, we should not fail ""make check"" on that",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/syzzer,10,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-224255989,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).","@chipitsine: that needs to fixed indeed, but is not related to this pull request.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/chipitsine,11,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-224258046,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).",ok,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/mattock,12,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-240053295,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).","The ""Fix formatting of code"" part makes the GitHub diff mostly useless. That can be solved by downloading a patch for this PR:
cd openvpn
wget https://github.com/OpenVPN/openvpn/pull/49.patch
git am 49.patch
git show -b -2

The -b flag ignores whitespace changes and makes the changes much more readable.
I skimmed through the changes, but without testing it's difficult to see if they're correct or not. Cron2: have you tested this PR already?
I agree with cron2 that t_client.sh needs to be kept free of bashisms. Are there any in the new code, and if yes, can't they be solved with in a POSIX-compliant fashion?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/neuhalje,13,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-643403294,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).",4 years ... this is probably dead by now,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,49,2016-05-21T09:04:43Z,2020-06-12T17:43:27Z,2020-06-16T07:34:11Z,CLOSED,False,267,180,1,https://github.com/neuhalje,testing: Refactor t client.sh,2,[],https://github.com/OpenVPN/openvpn/pull/49,https://github.com/mattock,14,https://github.com/OpenVPN/openvpn/pull/49#issuecomment-644588864,"Move global code into separate functions. Fixup formatting of code. Also add table output formatting to t_client.sh:
| ID | TEST                                | RESULT               |
| -- | ----------------------------------- | -------------------- |
|  1 | testing tun/udp/ipv4                | [SUCCESS]            |
|  2 | testing tun/udp/ipv4 with pam       | [FAIL: 5 fails]      |
| -- | ----------------------------------- | -------------------- |
Test sets succeded: 1.
Test sets failed: 2.

For easier review these patches have also been provided via GitHub pull request:
#49
Due to moving code around and intention changes this patch looks rather large:
1 file changed, 267 insertions(+), 180 deletions(-).",@neuhalje I think so - it is unlikely this would get merged now if it was not merged four years ago.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,50,2016-05-25T01:57:54Z,2016-06-07T21:17:03Z,2016-06-07T21:17:03Z,CLOSED,False,124,0,4,https://github.com/selvanair,Add an option to filter options received from server,1,[],https://github.com/OpenVPN/openvpn/pull/50,https://github.com/selvanair,1,https://github.com/OpenVPN/openvpn/pull/50,"Usage: --pull-filter accept|reject ""option string""
Permit a client to selectively accept or reject options pushed
by the server. May be used multiple times. The filters are
applied in the order specified to each pushed option received. The
filtering stops as soon as a match is found. Full regex support is
not available but partial matching provides some flexibility. Thus
pull-filter accept ""ifconfig 10.9.0.""
pull-filter reject ""ifconfig ""
pull-filter accept ""route 10.""
pull-filter reject ""route ""
will reject assigned ip unless its in the ""10.9.0.0/24"" range and
all pushed routes except those starting with ""10."". Note the space
at the end of ""route "" to not reject ""route-gateway"", for example.
There is an implicit 'pull-filter accept """"' at the end so that all
options not rejected by any filter are accepted.
Acknowledges shameless imitation of --push-remove.
Inspired by Trac #682.
Signed-off-by: Selva Nair selva.nair@gmail.com","Usage: --pull-filter accept|reject ""option string""
Permit a client to selectively accept or reject options pushed
by the server. May be used multiple times. The filters are
applied in the order specified to each pushed option received. The
filtering stops as soon as a match is found. Full regex support is
not available but partial matching provides some flexibility. Thus
pull-filter accept ""ifconfig 10.9.0.""
pull-filter reject ""ifconfig ""
pull-filter accept ""route 10.""
pull-filter reject ""route ""
will reject assigned ip unless its in the ""10.9.0.0/24"" range and
all pushed routes except those starting with ""10."". Note the space
at the end of ""route "" to not reject ""route-gateway"", for example.
There is an implicit 'pull-filter accept """"' at the end so that all
options not rejected by any filter are accepted.
Acknowledges shameless imitation of --push-remove.
Inspired by Trac #682.
Signed-off-by: Selva Nair selva.nair@gmail.com",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,50,2016-05-25T01:57:54Z,2016-06-07T21:17:03Z,2016-06-07T21:17:03Z,CLOSED,False,124,0,4,https://github.com/selvanair,Add an option to filter options received from server,1,[],https://github.com/OpenVPN/openvpn/pull/50,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/50#issuecomment-221566555,"Usage: --pull-filter accept|reject ""option string""
Permit a client to selectively accept or reject options pushed
by the server. May be used multiple times. The filters are
applied in the order specified to each pushed option received. The
filtering stops as soon as a match is found. Full regex support is
not available but partial matching provides some flexibility. Thus
pull-filter accept ""ifconfig 10.9.0.""
pull-filter reject ""ifconfig ""
pull-filter accept ""route 10.""
pull-filter reject ""route ""
will reject assigned ip unless its in the ""10.9.0.0/24"" range and
all pushed routes except those starting with ""10."". Note the space
at the end of ""route "" to not reject ""route-gateway"", for example.
There is an implicit 'pull-filter accept """"' at the end so that all
options not rejected by any filter are accepted.
Acknowledges shameless imitation of --push-remove.
Inspired by Trac #682.
Signed-off-by: Selva Nair selva.nair@gmail.com","Hi,
On Tue, May 24, 2016 at 06:58:01PM -0700, Selva Nair wrote:

Usage: --pull-filter allow|reject ""option string""

Interesting :-) - you totally beat me to it, especially as I was still
thinking whether I wanted to do it internally (pull-filter) or just
pass options line-by-line to an external script and leave the logic
to that...
But definitely worth a look.

Permit a client to selectively accept or reject options pushed
by the server. May be used multiple times. The filters are
applied in the order specified to each pushed option received. The
filtering stops as soon as a match is found. Full regex support is
not available but partial matching is used. Thus
push-filter accept ""ifconfig 10.9.0.""
push-filter reject ""ifconfig ""
push-filter accept ""route 10.""
push-filter reject ""route ""

Now what, push-filter or pull-filter? ;-)
Will look at the actual code when I'm back home next week.
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,50,2016-05-25T01:57:54Z,2016-06-07T21:17:03Z,2016-06-07T21:17:03Z,CLOSED,False,124,0,4,https://github.com/selvanair,Add an option to filter options received from server,1,[],https://github.com/OpenVPN/openvpn/pull/50,https://github.com/selvanair,3,https://github.com/OpenVPN/openvpn/pull/50#issuecomment-221586255,"Usage: --pull-filter accept|reject ""option string""
Permit a client to selectively accept or reject options pushed
by the server. May be used multiple times. The filters are
applied in the order specified to each pushed option received. The
filtering stops as soon as a match is found. Full regex support is
not available but partial matching provides some flexibility. Thus
pull-filter accept ""ifconfig 10.9.0.""
pull-filter reject ""ifconfig ""
pull-filter accept ""route 10.""
pull-filter reject ""route ""
will reject assigned ip unless its in the ""10.9.0.0/24"" range and
all pushed routes except those starting with ""10."". Note the space
at the end of ""route "" to not reject ""route-gateway"", for example.
There is an implicit 'pull-filter accept """"' at the end so that all
options not rejected by any filter are accepted.
Acknowledges shameless imitation of --push-remove.
Inspired by Trac #682.
Signed-off-by: Selva Nair selva.nair@gmail.com","On Tue, May 24, 2016 at 06:58:01PM -0700, Selva Nair wrote:
Usage: --pull-filter allow|reject ""option string""

Interesting :-) - you totally beat me to it, especially as I was still
thinking whether I wanted to do it internally (pull-filter) or just
pass options line-by-line to an external script and leave the logic
to that...

Yeah, external script could be more flexible but passing back the filtered results may be a pain. But it does open up possibilities of filtering through the management interface  -- thinking aloud.


push-filter accept ""ifconfig 10.9.0.""
push-filter reject ""ifconfig ""
push-filter accept ""route 10.""
push-filter reject ""route ""

Now what, push-filter or pull-filter? ;-)

Yikes... Late night hacking woes... It should be pull-filter, of course.. Will fix the commit message and push a new version. 
Thanks,
Selva",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,50,2016-05-25T01:57:54Z,2016-06-07T21:17:03Z,2016-06-07T21:17:03Z,CLOSED,False,124,0,4,https://github.com/selvanair,Add an option to filter options received from server,1,[],https://github.com/OpenVPN/openvpn/pull/50,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/50#issuecomment-222541985,"Usage: --pull-filter accept|reject ""option string""
Permit a client to selectively accept or reject options pushed
by the server. May be used multiple times. The filters are
applied in the order specified to each pushed option received. The
filtering stops as soon as a match is found. Full regex support is
not available but partial matching provides some flexibility. Thus
pull-filter accept ""ifconfig 10.9.0.""
pull-filter reject ""ifconfig ""
pull-filter accept ""route 10.""
pull-filter reject ""route ""
will reject assigned ip unless its in the ""10.9.0.0/24"" range and
all pushed routes except those starting with ""10."". Note the space
at the end of ""route "" to not reject ""route-gateway"", for example.
There is an implicit 'pull-filter accept """"' at the end so that all
options not rejected by any filter are accepted.
Acknowledges shameless imitation of --push-remove.
Inspired by Trac #682.
Signed-off-by: Selva Nair selva.nair@gmail.com","discussed this in the IRC meeting, and everybody agreed that your approach is fine and my initial idea using a script is ""too complicated"" - so, this is a feature-ACK, and we're happy to look at the new patch with fixed commit message, manpage (if not yet there), etc. :-)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,50,2016-05-25T01:57:54Z,2016-06-07T21:17:03Z,2016-06-07T21:17:03Z,CLOSED,False,124,0,4,https://github.com/selvanair,Add an option to filter options received from server,1,[],https://github.com/OpenVPN/openvpn/pull/50,https://github.com/selvanair,5,https://github.com/OpenVPN/openvpn/pull/50#issuecomment-222543735,"Usage: --pull-filter accept|reject ""option string""
Permit a client to selectively accept or reject options pushed
by the server. May be used multiple times. The filters are
applied in the order specified to each pushed option received. The
filtering stops as soon as a match is found. Full regex support is
not available but partial matching provides some flexibility. Thus
pull-filter accept ""ifconfig 10.9.0.""
pull-filter reject ""ifconfig ""
pull-filter accept ""route 10.""
pull-filter reject ""route ""
will reject assigned ip unless its in the ""10.9.0.0/24"" range and
all pushed routes except those starting with ""10."". Note the space
at the end of ""route "" to not reject ""route-gateway"", for example.
There is an implicit 'pull-filter accept """"' at the end so that all
options not rejected by any filter are accepted.
Acknowledges shameless imitation of --push-remove.
Inspired by Trac #682.
Signed-off-by: Selva Nair selva.nair@gmail.com",Thanks for the comment. Sorry couldn't make to the IRC -- Monday afternoon (local) is hard to get away from work:-) The commit msg is already fixed and manpage entry is in the patch. Should I submit it to the list for review?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,50,2016-05-25T01:57:54Z,2016-06-07T21:17:03Z,2016-06-07T21:17:03Z,CLOSED,False,124,0,4,https://github.com/selvanair,Add an option to filter options received from server,1,[],https://github.com/OpenVPN/openvpn/pull/50,https://github.com/cron2,6,https://github.com/OpenVPN/openvpn/pull/50#issuecomment-222543965,"Usage: --pull-filter accept|reject ""option string""
Permit a client to selectively accept or reject options pushed
by the server. May be used multiple times. The filters are
applied in the order specified to each pushed option received. The
filtering stops as soon as a match is found. Full regex support is
not available but partial matching provides some flexibility. Thus
pull-filter accept ""ifconfig 10.9.0.""
pull-filter reject ""ifconfig ""
pull-filter accept ""route 10.""
pull-filter reject ""route ""
will reject assigned ip unless its in the ""10.9.0.0/24"" range and
all pushed routes except those starting with ""10."". Note the space
at the end of ""route "" to not reject ""route-gateway"", for example.
There is an implicit 'pull-filter accept """"' at the end so that all
options not rejected by any filter are accepted.
Acknowledges shameless imitation of --push-remove.
Inspired by Trac #682.
Signed-off-by: Selva Nair selva.nair@gmail.com","Hi,
On Mon, May 30, 2016 at 12:21:13PM -0700, Selva Nair wrote:

Thanks for the comment. Sorry couldn't make to the IRC -- Monday afternoon (local) is hard to get away from work:-) The commit msg is already fixed and manpage entry is in the patch. Should I submit it to the list for review?

Syzzer had a quick look and found things reasonable, so yes - please send
to the list, for formal review and merge :-)
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,50,2016-05-25T01:57:54Z,2016-06-07T21:17:03Z,2016-06-07T21:17:03Z,CLOSED,False,124,0,4,https://github.com/selvanair,Add an option to filter options received from server,1,[],https://github.com/OpenVPN/openvpn/pull/50,https://github.com/selvanair,7,https://github.com/OpenVPN/openvpn/pull/50#issuecomment-224417223,"Usage: --pull-filter accept|reject ""option string""
Permit a client to selectively accept or reject options pushed
by the server. May be used multiple times. The filters are
applied in the order specified to each pushed option received. The
filtering stops as soon as a match is found. Full regex support is
not available but partial matching provides some flexibility. Thus
pull-filter accept ""ifconfig 10.9.0.""
pull-filter reject ""ifconfig ""
pull-filter accept ""route 10.""
pull-filter reject ""route ""
will reject assigned ip unless its in the ""10.9.0.0/24"" range and
all pushed routes except those starting with ""10."". Note the space
at the end of ""route "" to not reject ""route-gateway"", for example.
There is an implicit 'pull-filter accept """"' at the end so that all
options not rejected by any filter are accepted.
Acknowledges shameless imitation of --push-remove.
Inspired by Trac #682.
Signed-off-by: Selva Nair selva.nair@gmail.com",Version 2 is sent to the list. Closing this one.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/ITJesse,1,https://github.com/OpenVPN/openvpn/pull/51,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/mattock,2,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-222431682,,"Hi,
The original build instruction are in fact correct when building from release tarballs. When building from Git you do need autoreconf, but you can use this slightly simplified process:
autoreconf -vi
./configure
make
make install

We can definitely take the patch if the above changes/concerns are addressed.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/selvanair,3,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-222507632,,"To add to @mattock comment, it may be more useful to add a line on how to download and unpack the source tarball. Then ./configure ; make ; make install is all that is needed. Requiring developer tools such as autoconf for a ""quick build"" does not look right..",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/mattock,4,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-222536656,,"@selvanair: 👍 for mentioning how to download the source tarball. Perhaps doing that would enough to fix this patch. We can document the ""building OpenVPN from Git sources"" process later.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/mattock,5,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-222545199,,"I suggest this minor modification:
To get the latest release of OpenVPN, go to:

    http://openvpn.net/

To Build and Install,

    tar -zxf openvpn-<version>.tar.gz
    ./configure
    make
    make install

or see the file INSTALL for more info.

This makes it clear the instructions are for the tarball, not Git sources.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/cron2,6,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-222545352,,"Hi,
On Mon, May 30, 2016 at 12:35:34PM -0700, Samuli Seppänen wrote:

I suggest this minor modification:

Sounds good.
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/mattock,7,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-222545769,,Patch sent to the list.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/selvanair,8,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-222547480,,"cd openvpn-
after tar -zxf ...
is missing..",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/mattock,9,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-222548224,,"Indeed, and this is why using GitHub for review is so much easier than the mailing list :). V3 of this seemingly trivial patch is now on the list.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/cron2,10,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-224914864,,"seems as if this has been merged, right?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,51,2016-05-30T06:30:33Z,2016-06-09T14:37:20Z,2016-06-10T06:14:27Z,CLOSED,False,4,0,2,https://github.com/ITJesse,Change unix build instruction,1,[],https://github.com/OpenVPN/openvpn/pull/51,https://github.com/mattock,11,https://github.com/OpenVPN/openvpn/pull/51#issuecomment-225102026,,"@cron2: yes, this has been merged.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/52,,,True,{'THUMBS_UP': ['https://github.com/neuhalje']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/syzzer,2,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-223806778,,Just to be clear - I'm happy you're putting effort into this.  The remarks are just to make sure we get this right before merging.  I for one would really like decent travis support for OpenVPN.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,3,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-223810055,,"I can add something like ""if $CONFIG does contain 'openssl' then build openssl"", but I'm afraid build script will not be readable after that.
also, I could not manage openssl as static lib, it is linked dynamically (while mbedtls is linked statically).
not sure what is better.
patches welcome here :)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/mattock,4,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224194039,,"This PR seems to be a very reasonable starting point, so I'm inclined to ACK it. Any further comments from anyone?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/syzzer,5,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224195738,,"Yes, this is a very reasonable starting point.  I'd be fine with merging this into master and improving it on the way.  Though in that case I'd recommend to just remove the failing XCode 6.4 builds for the time being.  (I contacted the mbedtls guys btw, they told me that they do not serve expired certs, so this must be some bug in the travis XCode 6.4 image).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,6,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224202594,,"I'm not sure we which configurations are most interesting. I'm waiting for a feedback from you like
""let us start with ""gcc+openssl+configure-options, clang+openssl+configure-options, .....""
current matrix is just an example, I picked random lines for configure, without any idea",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/syzzer,7,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224212410,,"Thanks for the updates.
I propose to start with the following build matrix:
linux + gcc + ./configure --with-crypto-library=openssl
linux + clang + ./configure --with-crypto-library=openssl
linux + gcc + ./configure --with-crypto-library=mbedtls
linux + clang + ./configure --with-crypto-library=mbedtls
osx + xcode 7 + ./configure --with-crypto-library=openssl
osx + xcode 7 + ./configure --with-crypto-library=mbedtls
linux + clang + ./configure --disable-crypto
linux + clang + ./configure --disable-lzo
linux + clang + ./configure --enable-small
That should cover a lot of common build problems.  We can always expand the matrix when we want more combinations tested.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,8,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224225276,,"--with-crypto-library=openssl --disable-crypto  -->  https://travis-ci.org/chipitsine/openvpn/jobs/135816437
should I mark it as an ""allowed failure"" ?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/syzzer,9,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224227329,,"Hm, good point.  We should actually skip the failing tests.  I don't like 'allowed failure', because that way we'll probably won't notice real build failures.
More and more that votes for moving the scripts to e.g. .travis/install.sh and .travis/build.sh with more intelligent logic.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,10,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224227940,,"I agree to move openssl/mbedtls build scripts to .travis
but I think we should not fail on ""make check"" with configure options, no matter we run it from travis or not
so, it makes sense to fix ""make check"" magic here
as for ""allowed failures"" I meant is a temporary thing until ""make check"" will work as expected there",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/syzzer,11,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224230025,,"Yes, makes sense.  I agree.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,12,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224245920,,"there's difference in openssl under mac os and linux, I beleive it is more simple to maintain separate scripts for each of them instead of polluting universal script with lots of ""if""s",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,13,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224257870,,"we run similar script for months https://github.com/OpenVPN/openvpn-gui/blob/master/.travis.yml#L30 without any issue yet.
also, I considered openssl as a git submodule here
thoughts ?
also, does that mean it is ok to download mbedtls that way ?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/syzzer,14,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224262242,,"Ah, https://www.openssl.org/source/ apparently doesn't mimic ftp://ftp.openssl.org/source/, and does leave old links intact.  That's good, let's just download the tarbal then, that's more lightweight.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/syzzer,15,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224262824,,"Wrt to the scripts: I think a couple of ifs is better than the code duplication we have now.  I have other things I must do now, but I can send a patch with a suggestion later.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,16,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-224264779,,"right now scripts are ""almost duplicate"", however, after some time spent, I will not wonder if each of them will differ a lot.
and I think it is more safe to change ""just linux"" script without being afraid to break something on mac os x.
ok, send your patch",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,17,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-237159199,,is it ok now ?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,18,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-238027938,,knock-knock ?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/syzzer,19,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-238069860,,As far as I'm concerned it is ready for review on the mailing list.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,20,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-239257625,,"@mattock , Samuli, can you please take care of mailing list, etc ?I'm not familiar with git-mail
and, as far as I see, I provided all the required patches here",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/cron2,21,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-239258755,,"Hi,
On Thu, Aug 11, 2016 at 11:59:19AM -0700, Ilya Shipitsin wrote:

@mattock , Samuli, can you please take care of mailing list, etc ?I'm not familiar with git-mail
and, as far as I see, I provided all the required patches here

""all the required patches"" sounds like ""many"" to me - and commits that
result from incrementally improving a patchset should not show up in the
resulting commits.
So, please merge to ""as few patches as make sense"" - and after that,
sending to the mailing list is really easy
git send-email --to=openvpn-devel@lists.sourceforge.net -5
(to send ""the last 5 patches as one patch set"")
gert

USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/mattock,22,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-240019193,,"18 commits to create two files is definitely too much - one commit should be enough. One way to clean up the mess is to do something like this:
git reset --soft <first-commit-id-before-the-patches>
git status
git add <modified files>
git commit -s -m ""travis-ci support""

Then you can force push your branch to GitHub:
git push -f origin master

I did not test the commands, but I believe they should work. As for git-send-email: it is not too difficult to use, once you set it up correctly. Here are the basic instructions:

https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project#_project_over_email

The section that starts with ""You can also send the patches through an SMTP server"" is the most relevant one. Basically you just add a [sendemail] section to ~/.gitconfig and you're done. You can test sending patches to yourself (--to=), so that you don't accidentally send useless stuff to the list.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,23,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-240021846,,I will make less commits soon.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,24,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-241198125,,"I squashed commits into 2 (mine and Steffan).
I added ""Signed-Off-By"" (and --author ... ) to reflect second commit ownership
as for the rest, I currently do not have a time to learn how to send git-email via GMail.
@mattock , can you please take care of the rest ? I remember, you promised me to do such kind of things.
Also, I'm not prepared to ask many times ""what is going on"" (because everyone is busy, remember, how long it took to review vlan patchset). It would be nice, if you would have take care of that as well.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/mattock,25,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-241330706,,"Now it looks good. The split into two patches makes sense, as the refactoring was done with syzzer. Configuring git-send-email for Gmail is not difficult:

https://burzalodowa.wordpress.com/2013/10/05/how-to-send-patches-with-git-send-email/

Quoting the article:
$ git config --global sendemail.smtpuser <your mail>
$ git config --global sendemail.smtpserver smtp.googlemail.com
$ git config --global sendemail.smtpencryption tls
$ git config --global sendemail.smtpserverport 587
$ git config --global sendemail.smtppass <your passwd>

Actual use of git-send-email has been covered above.
As said elsewhere, I can take care of sending patches for one-time contributors. Acting as a ""patch proxy"" for regular contributors such as you eats up my time, which I could use for genuine useful stuff instead. So please send the patches to the list yourself. The patches have already been reviewed, so it will almost certainly just get an ACK and get merged with minimal fuzz.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,26,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-242772091,,"@mattock , I'm not sure it will be merged. Remember how long did it take to merge VLAN patchset ? I think something is wrong in contribution process. So, can you take care of if it will take longer than a week ?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/cron2,27,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-242837239,,"Hi,
On Fri, Aug 26, 2016 at 08:44:50AM -0700, Ilya Shipitsin wrote:

@mattock , I'm not sure it will be merged. Remember how long did it take to merge VLAN patchset ? I think something is wrong in contribution process. So, can you take care of if it will take longer than a week ?

Could you please stop complaining, and learn to use git send-email?
The VLAN patchset is LARGE and VERY intrusive, so it needs much focus to
review and merge - and it's a niche application, which only few people
have been asked about ever, and the trade-off in ""who benefits"" vs. ""
who has to do the work"" has not been in favour of that patchset so far
(it's still on my radar, but instead I waste my time argueing with people
that want to contribute but can't be bothered to contribute in a way
that is not creating more work for the core developers)
gert

USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/mattock,28,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-243054405,,"@chipitsine : this PR has already been reviewed and ACKed, so once you git-send-email your changes will get merged shortly. Unlike you probably think, the use of git-send-email is not mandated just to annoy would-be contributors who would prefer to use GitHub. More on that below.
Each patch to OpenVPN requires a proper review: there are many examples from past years where patches break things even when reviewed carefully. Without a review things would break more or less constantly, and the quality of the codebase would detoriate. For a very recent example, see commits e9d64bc and 8cba9ff. Fortunately that particular problem was found in automated testing before shipping it in OpenVPN 2.3.12.
OpenVPN has dozens of esoteric options and use-cases, and it is extremely difficult to visualize all the corner-cases a change might affect. Our codebase is, as jamesyonan might put it, ""entangled"", which is why a lot of work has gone into refactoring it and making it easier to work with. This is one of the reasons we mandate the use of git-send-email - so that all active developers and power-users will at least know about a patch, and react to it if it touches their particular use-case and the reviewer has managed to overlook something.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,52,2016-06-04T22:15:40Z,2016-09-17T09:28:25Z,2016-09-17T09:28:25Z,CLOSED,False,217,0,6,https://github.com/chipitsine,testing: travis-ci support (for smoke testing),2,[],https://github.com/OpenVPN/openvpn/pull/52,https://github.com/chipitsine,29,https://github.com/OpenVPN/openvpn/pull/52#issuecomment-247300805,,"ok, I sent 2 commits to mailing list",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,53,2016-06-07T19:15:13Z,2016-06-07T19:17:39Z,2016-06-07T19:18:05Z,CLOSED,False,126,0,5,https://github.com/chipitsine,fix cppcheck issue,13,[],https://github.com/OpenVPN/openvpn/pull/53,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/53,"[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.","[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,53,2016-06-07T19:15:13Z,2016-06-07T19:17:39Z,2016-06-07T19:18:05Z,CLOSED,False,126,0,5,https://github.com/chipitsine,fix cppcheck issue,13,[],https://github.com/OpenVPN/openvpn/pull/53,https://github.com/chipitsine,2,https://github.com/OpenVPN/openvpn/pull/53#issuecomment-224385363,"[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.","sorry, pushed too many commits here",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,53,2016-06-07T19:15:13Z,2016-06-07T19:17:39Z,2016-06-07T19:18:05Z,CLOSED,False,126,0,5,https://github.com/chipitsine,fix cppcheck issue,13,[],https://github.com/OpenVPN/openvpn/pull/53,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/53#issuecomment-224385418,"[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.","Hi,
On Tue, Jun 07, 2016 at 12:15:17PM -0700, Ilya Shipitsin wrote:

-- File Changes --
A .travis.yml (84)
A .travis/build-mbedtls-linux.sh (10)
A .travis/build-mbedtls-osx.sh (9)
A .travis/build-openssl-linux.sh (12)
A .travis/build-openssl-osx.sh (11)
M src/openvpn/buffer.c (1)


This is not the way to do things.  The buffer.c change is independent
from the travis changes, and must not be lumped together into one big
PR that is about travis.
Please send the buffer.c change to openvpn-devel for review and merging.
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,54,2016-06-07T19:23:25Z,2019-03-24T15:07:50Z,2019-03-24T15:07:50Z,CLOSED,False,4,2,1,https://github.com/chipitsine,fix cppcheck finding,1,[],https://github.com/OpenVPN/openvpn/pull/54,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/54,"[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.","[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,54,2016-06-07T19:23:25Z,2019-03-24T15:07:50Z,2019-03-24T15:07:50Z,CLOSED,False,4,2,1,https://github.com/chipitsine,fix cppcheck finding,1,[],https://github.com/OpenVPN/openvpn/pull/54,https://github.com/chipitsine,2,https://github.com/OpenVPN/openvpn/pull/54#issuecomment-224395384,"[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.","oops, I meant to put ASSERT before strlen()
my eyes stopped at ""int i;"", so I thought ""ok, let variable declaration be at the top of function""
and I added a line right after ""int i;""",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,54,2016-06-07T19:23:25Z,2019-03-24T15:07:50Z,2019-03-24T15:07:50Z,CLOSED,False,4,2,1,https://github.com/chipitsine,fix cppcheck finding,1,[],https://github.com/OpenVPN/openvpn/pull/54,https://github.com/chipitsine,3,https://github.com/OpenVPN/openvpn/pull/54#issuecomment-225340252,"[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.","cppcheck is still barking however;
[src/openvpn/buffer.c:445] -> [src/openvpn/buffer.c:449]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:446] -> [src/openvpn/buffer.c:449]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
if there's two cases (one with maxoutput==0, another with separator=NULL), maybe implement 2 functions instead of this one ?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,54,2016-06-07T19:23:25Z,2019-03-24T15:07:50Z,2019-03-24T15:07:50Z,CLOSED,False,4,2,1,https://github.com/chipitsine,fix cppcheck finding,1,[],https://github.com/OpenVPN/openvpn/pull/54,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/54#issuecomment-225343062,"[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.","Hi,
On Fri, Jun 10, 2016 at 11:33:39PM -0700, Ilya Shipitsin wrote:

cppcheck is still barking however;

let it bark.
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,54,2016-06-07T19:23:25Z,2019-03-24T15:07:50Z,2019-03-24T15:07:50Z,CLOSED,False,4,2,1,https://github.com/chipitsine,fix cppcheck finding,1,[],https://github.com/OpenVPN/openvpn/pull/54,https://github.com/mattock,5,https://github.com/OpenVPN/openvpn/pull/54#issuecomment-240048995,"[src/openvpn/buffer.c:442] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.
[src/openvpn/buffer.c:443] -> [src/openvpn/buffer.c:447]: (warning) Either the condition 'if(separator&&i&&!(i%(space_break_flags&255)))' is redundant or there is possible null pointer dereference: separator.",Squashing the commits (e.g. bd0bd68) would probably make sense. Then just send the patches to the list with git-send-email.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,55,2016-06-22T19:29:37Z,2016-09-17T10:21:17Z,2016-09-18T07:02:24Z,CLOSED,False,5,1,2,https://github.com/chipitsine,testing: skip t_lpback.sh and t_cltsrv.sh if openvpn configured --disable-crypto,1,[],https://github.com/OpenVPN/openvpn/pull/55,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/55,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,55,2016-06-22T19:29:37Z,2016-09-17T10:21:17Z,2016-09-18T07:02:24Z,CLOSED,False,5,1,2,https://github.com/chipitsine,testing: skip t_lpback.sh and t_cltsrv.sh if openvpn configured --disable-crypto,1,[],https://github.com/OpenVPN/openvpn/pull/55,https://github.com/syzzer,2,https://github.com/OpenVPN/openvpn/pull/55#issuecomment-231838906,,"This fixes the problem, in a more elegant way than I proposed, so I'm good with this.  But I do agree with Gert's remark on the mailing list: it would be even better if it printed something like 'skipping test'.  For consistency, the neatest way would be to somehow have the test framework report that, like it does now for t_client if no config is present.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,55,2016-06-22T19:29:37Z,2016-09-17T10:21:17Z,2016-09-18T07:02:24Z,CLOSED,False,5,1,2,https://github.com/chipitsine,testing: skip t_lpback.sh and t_cltsrv.sh if openvpn configured --disable-crypto,1,[],https://github.com/OpenVPN/openvpn/pull/55,https://github.com/chipitsine,3,https://github.com/OpenVPN/openvpn/pull/55#issuecomment-238027336,,"@mattock , can you please send the patch to list and take care of merge process ?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,55,2016-06-22T19:29:37Z,2016-09-17T10:21:17Z,2016-09-18T07:02:24Z,CLOSED,False,5,1,2,https://github.com/chipitsine,testing: skip t_lpback.sh and t_cltsrv.sh if openvpn configured --disable-crypto,1,[],https://github.com/OpenVPN/openvpn/pull/55,https://github.com/chipitsine,4,https://github.com/OpenVPN/openvpn/pull/55#issuecomment-241197046,,up,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,55,2016-06-22T19:29:37Z,2016-09-17T10:21:17Z,2016-09-18T07:02:24Z,CLOSED,False,5,1,2,https://github.com/chipitsine,testing: skip t_lpback.sh and t_cltsrv.sh if openvpn configured --disable-crypto,1,[],https://github.com/OpenVPN/openvpn/pull/55,https://github.com/mattock,5,https://github.com/OpenVPN/openvpn/pull/55#issuecomment-241328607,,"@chipitsine : please send the patch to the mailing list yourself. Helping out one-time contributors is useful, as they might just drop the ball if they would have to join the mailing list, learn git-send-email, etc. However, you're a regular contributor, and I don't want to proxy all of your current and future patches - it would be a lot of work for me, too.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,56,2016-06-28T08:30:19Z,,2016-08-17T17:12:09Z,OPEN,False,124,14,9,https://github.com/lkundrak,crypto: Add the --ca-pkcs11-id option,1,[],https://github.com/OpenVPN/openvpn/pull/56,https://github.com/lkundrak,1,https://github.com/OpenVPN/openvpn/pull/56,"Hi,
We're working on integrating NetworkManager with p11-kit's PKCS#11 remoting to allow using PKCS#11 with user initiated VPN (and Wi-Fi) connections: https://bugzilla.gnome.org/show_bug.cgi?id=767872
Currently OpenVPN seems to do pretty well with PKCS#11. That is, with an exception of CA handling. Users tend to need to supply their CA certificate and place it in their home directory. We'd like to use PKCS#11 instead because then we could avoid letting the VPN daemon being able to access files user's home directly (SELinux is already really unhappy about this) and would be able to use a nice certificate picker. Integration with smart cards would then be easier too.
I'm wondering if this and the patch makes sense to you, before I post it to the list.
Thank you,
Lubo","Hi,
We're working on integrating NetworkManager with p11-kit's PKCS#11 remoting to allow using PKCS#11 with user initiated VPN (and Wi-Fi) connections: https://bugzilla.gnome.org/show_bug.cgi?id=767872
Currently OpenVPN seems to do pretty well with PKCS#11. That is, with an exception of CA handling. Users tend to need to supply their CA certificate and place it in their home directory. We'd like to use PKCS#11 instead because then we could avoid letting the VPN daemon being able to access files user's home directly (SELinux is already really unhappy about this) and would be able to use a nice certificate picker. Integration with smart cards would then be easier too.
I'm wondering if this and the patch makes sense to you, before I post it to the list.
Thank you,
Lubo",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,56,2016-06-28T08:30:19Z,,2016-08-17T17:12:09Z,OPEN,False,124,14,9,https://github.com/lkundrak,crypto: Add the --ca-pkcs11-id option,1,[],https://github.com/OpenVPN/openvpn/pull/56,https://github.com/syzzer,2,https://github.com/OpenVPN/openvpn/pull/56#issuecomment-229184544,"Hi,
We're working on integrating NetworkManager with p11-kit's PKCS#11 remoting to allow using PKCS#11 with user initiated VPN (and Wi-Fi) connections: https://bugzilla.gnome.org/show_bug.cgi?id=767872
Currently OpenVPN seems to do pretty well with PKCS#11. That is, with an exception of CA handling. Users tend to need to supply their CA certificate and place it in their home directory. We'd like to use PKCS#11 instead because then we could avoid letting the VPN daemon being able to access files user's home directly (SELinux is already really unhappy about this) and would be able to use a nice certificate picker. Integration with smart cards would then be easier too.
I'm wondering if this and the patch makes sense to you, before I post it to the list.
Thank you,
Lubo","At first sight, the option and the patch make sense (no time nor brains to do a proper review now, sorry).  One first nitpick/bike shed though, I'd prefer to have all pkcs11 options start with --pkcs11, so would suggest to rename it to --pkcs11-ca-id.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,56,2016-06-28T08:30:19Z,,2016-08-17T17:12:09Z,OPEN,False,124,14,9,https://github.com/lkundrak,crypto: Add the --ca-pkcs11-id option,1,[],https://github.com/OpenVPN/openvpn/pull/56,https://github.com/syzzer,3,https://github.com/OpenVPN/openvpn/pull/56#issuecomment-229186492,"Hi,
We're working on integrating NetworkManager with p11-kit's PKCS#11 remoting to allow using PKCS#11 with user initiated VPN (and Wi-Fi) connections: https://bugzilla.gnome.org/show_bug.cgi?id=767872
Currently OpenVPN seems to do pretty well with PKCS#11. That is, with an exception of CA handling. Users tend to need to supply their CA certificate and place it in their home directory. We'd like to use PKCS#11 instead because then we could avoid letting the VPN daemon being able to access files user's home directly (SELinux is already really unhappy about this) and would be able to use a nice certificate picker. Integration with smart cards would then be easier too.
I'm wondering if this and the patch makes sense to you, before I post it to the list.
Thank you,
Lubo","One related thing: won't a lot of other options also fail when openvpn can't access the homedir?  Shouldn't a user be able to run openvpn with config files in the homedir, or use something like --tls-auth (which people should really use!) or --log with files in their homedir?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,56,2016-06-28T08:30:19Z,,2016-08-17T17:12:09Z,OPEN,False,124,14,9,https://github.com/lkundrak,crypto: Add the --ca-pkcs11-id option,1,[],https://github.com/OpenVPN/openvpn/pull/56,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/56#issuecomment-229274593,"Hi,
We're working on integrating NetworkManager with p11-kit's PKCS#11 remoting to allow using PKCS#11 with user initiated VPN (and Wi-Fi) connections: https://bugzilla.gnome.org/show_bug.cgi?id=767872
Currently OpenVPN seems to do pretty well with PKCS#11. That is, with an exception of CA handling. Users tend to need to supply their CA certificate and place it in their home directory. We'd like to use PKCS#11 instead because then we could avoid letting the VPN daemon being able to access files user's home directly (SELinux is already really unhappy about this) and would be able to use a nice certificate picker. Integration with smart cards would then be easier too.
I'm wondering if this and the patch makes sense to you, before I post it to the list.
Thank you,
Lubo","Hi,
On Tue, Jun 28, 2016 at 02:17:04PM -0700, syzzer wrote:

One related thing: won't a lot of other options also fail when openvpn can't access the homedir?  Shouldn't a user be able to run openvpn with config files in the homedir, or use something like --tls-auth (which people should really use!) or --log with files in their homedir?

Well, you could always have the TLS stuff inline, and log to syslog...
All my openvpn configs do not read anything from the home dir, except
the initial .ovpn conf file...
gert

USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,56,2016-06-28T08:30:19Z,,2016-08-17T17:12:09Z,OPEN,False,124,14,9,https://github.com/lkundrak,crypto: Add the --ca-pkcs11-id option,1,[],https://github.com/OpenVPN/openvpn/pull/56,https://github.com/syzzer,5,https://github.com/OpenVPN/openvpn/pull/56#issuecomment-236948778,"Hi,
We're working on integrating NetworkManager with p11-kit's PKCS#11 remoting to allow using PKCS#11 with user initiated VPN (and Wi-Fi) connections: https://bugzilla.gnome.org/show_bug.cgi?id=767872
Currently OpenVPN seems to do pretty well with PKCS#11. That is, with an exception of CA handling. Users tend to need to supply their CA certificate and place it in their home directory. We'd like to use PKCS#11 instead because then we could avoid letting the VPN daemon being able to access files user's home directly (SELinux is already really unhappy about this) and would be able to use a nice certificate picker. Integration with smart cards would then be easier too.
I'm wondering if this and the patch makes sense to you, before I post it to the list.
Thank you,
Lubo","... which is an excellent point:  you could also just inline the CA cert in the config, instead of specifying a path.  That should work fine right now.  (And if you decide to do so, please also support inlining of --tls-auth).
Still, something like --pkcs11-ca-id might make sense.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,57,2016-06-30T14:40:40Z,2016-08-16T09:07:01Z,2016-08-16T09:07:01Z,CLOSED,False,2,2,1,https://github.com/mattock,Deprecate the automatic part of openvpnserv.exe,1,[],https://github.com/OpenVPN/openvpn/pull/57,https://github.com/mattock,1,https://github.com/OpenVPN/openvpn/pull/57,"The automatic part will be replaced by openvpnserv.exe, a significantly improved
service wrapper written in C#.
Signed-off-by: Samuli Seppänen samuli@openvpn.net","The automatic part will be replaced by openvpnserv.exe, a significantly improved
service wrapper written in C#.
Signed-off-by: Samuli Seppänen samuli@openvpn.net",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,57,2016-06-30T14:40:40Z,2016-08-16T09:07:01Z,2016-08-16T09:07:01Z,CLOSED,False,2,2,1,https://github.com/mattock,Deprecate the automatic part of openvpnserv.exe,1,[],https://github.com/OpenVPN/openvpn/pull/57,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/57#issuecomment-229680115,"The automatic part will be replaced by openvpnserv.exe, a significantly improved
service wrapper written in C#.
Signed-off-by: Samuli Seppänen samuli@openvpn.net","Hi,
On Thu, Jun 30, 2016 at 07:40:44AM -0700, Samuli Seppänen wrote:

The automatic part will be replaced by openvpnserv.exe, a significantly improved
service wrapper written in C#.
Signed-off-by: Samuli Seppänen samuli@openvpn.net
You can view, comment on, or merge this pull request online at:
#57

Please send to the list for review.  Really.
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,57,2016-06-30T14:40:40Z,2016-08-16T09:07:01Z,2016-08-16T09:07:01Z,CLOSED,False,2,2,1,https://github.com/mattock,Deprecate the automatic part of openvpnserv.exe,1,[],https://github.com/OpenVPN/openvpn/pull/57,https://github.com/mattock,3,https://github.com/OpenVPN/openvpn/pull/57#issuecomment-240046768,"The automatic part will be replaced by openvpnserv.exe, a significantly improved
service wrapper written in C#.
Signed-off-by: Samuli Seppänen samuli@openvpn.net","This has been merged as commit 6dd307c, closing.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,58,2016-07-14T17:46:55Z,,2016-08-17T17:30:31Z,OPEN,False,10,7,1,https://github.com/Low-power,netconfig: Fixed tun_open can only use tun0/tap0 if --dev is in dynamic device mode on Solaris,2,[],https://github.com/OpenVPN/openvpn/pull/58,https://github.com/Low-power,1,https://github.com/OpenVPN/openvpn/pull/58,"So if a tun0 is already there, the program will fails.","So if a tun0 is already there, the program will fails.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,58,2016-07-14T17:46:55Z,,2016-08-17T17:30:31Z,OPEN,False,10,7,1,https://github.com/Low-power,netconfig: Fixed tun_open can only use tun0/tap0 if --dev is in dynamic device mode on Solaris,2,[],https://github.com/OpenVPN/openvpn/pull/58,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/58#issuecomment-232743462,"So if a tun0 is already there, the program will fails.","Hi,
On Thu, Jul 14, 2016 at 10:46:58AM -0700, Low-power wrote:

So if a tun0 is already there, the program will fails.
You can view, comment on, or merge this pull request online at:
#58
-- Commit Summary --

Function open_tun changed: fixed always create tun0/tap0 on Solaris

-- File Changes --
M src/openvpn/tun.c (15)

-- Patch Links --
https://github.com/OpenVPN/openvpn/pull/58.patch
https://github.com/OpenVPN/openvpn/pull/58.diff

Sorry, I cannot see why your patch would change anything for the
case that you call ""openvpn --dev tun0"".  In both cases, you end up
with ""ptr"" pointing to the ""0"" in ""tun0"", and ppa being ""0"".
Your patch only makes a difference if someone uses a --dev name that
is not starting with tun or tap, and for them, you are breaking
functionality (""--dev foo3 --dev-type tun"" is no longer working
after your change).
So please explain in more detail what you are trying to achieve,
and show logs that demonstrate what is not working before and how
it is working with the patch.
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,58,2016-07-14T17:46:55Z,,2016-08-17T17:30:31Z,OPEN,False,10,7,1,https://github.com/Low-power,netconfig: Fixed tun_open can only use tun0/tap0 if --dev is in dynamic device mode on Solaris,2,[],https://github.com/OpenVPN/openvpn/pull/58,https://github.com/Low-power,3,https://github.com/OpenVPN/openvpn/pull/58#issuecomment-232943084,"So if a tun0 is already there, the program will fails.","I see the dynamic search for tun/tap device number is done by commit 21ae2ec, but there are 2 small problems.
The tun/tap driver itself is able to find out the first free number as well by setting ic_dp to -1; and more important is the code ""if ( *ptr == '\0' )"" may dereferencing an uninitialized pointer that may result the program crash; according to the code, the only possible way to toggle this is using --dev """" but a segmentation fault shouldn't be caused by this.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,58,2016-07-14T17:46:55Z,,2016-08-17T17:30:31Z,OPEN,False,10,7,1,https://github.com/Low-power,netconfig: Fixed tun_open can only use tun0/tap0 if --dev is in dynamic device mode on Solaris,2,[],https://github.com/OpenVPN/openvpn/pull/58,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/58#issuecomment-232943554,"So if a tun0 is already there, the program will fails.","Hi,
On Fri, Jul 15, 2016 at 05:51:25AM -0700, Low-power wrote:

I see the dynamic search for tun/tap device number is done by commit 21ae2ec, but there are 2 small problems.
The tun/tap driver itself is able to find out the first free number as well by setting ic_dp to -1; and more important is the code ""if ( *ptr == '\0' )"" may dereferencing an uninitialized pointer that may result the program crash; according to the code, the only possible way to toggle this is using --dev """" but a segmentation fault shouldn't be caused by this.

So just move the initialization ""ptr = dev;"" before the if(*dev) part, and
all is well.
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,58,2016-07-14T17:46:55Z,,2016-08-17T17:30:31Z,OPEN,False,10,7,1,https://github.com/Low-power,netconfig: Fixed tun_open can only use tun0/tap0 if --dev is in dynamic device mode on Solaris,2,[],https://github.com/OpenVPN/openvpn/pull/58,https://github.com/Low-power,5,https://github.com/OpenVPN/openvpn/pull/58#issuecomment-232950151,"So if a tun0 is already there, the program will fails.","The Segmentation fault

./openvpn --config /etc/openvpn/bridge-client.cfg --dev-type tap --dev """"
Fri Jul 15 20:23:13 2016 OpenVPN 2.3_git i386-pc-solaris2.10 [SSL (OpenSSL)] [LZO] [IPv6] built on Jul 15 2016
Fri Jul 15 20:23:13 2016 library versions: OpenSSL 0.9.8o 01 Jun 2010, LZO 2.03
Fri Jul 15 20:23:13 2016 NOTE: the current --script-security setting may allow this configuration to call user-defined scripts
Fri Jul 15 20:23:13 2016 TCP/UDP: Preserving recently used remote address: [AF_INET]115.28.87.127:1194
Fri Jul 15 20:23:13 2016 Socket Buffers: R=[57344->57344] S=[57344->57344]
Fri Jul 15 20:23:13 2016 UDP link local: (not bound)
Fri Jul 15 20:23:13 2016 UDP link remote: [AF_INET]115.28.87.127:1194
Fri Jul 15 20:23:13 2016 TLS: Initial packet from [AF_INET]115.28.87.127:1194, sid=1dc58f2a 98ee88dc
Fri Jul 15 20:23:13 2016 VERIFY OK: ******
Fri Jul 15 20:23:13 2016 VERIFY OK: ******
Fri Jul 15 20:23:13 2016 VERIFY OK: ******
Fri Jul 15 20:23:13 2016 Control Channel: TLSv1, cipher TLSv1/SSLv3 DHE-RSA-AES256-SHA, 2048 bit RSA
Fri Jul 15 20:23:13 2016 [server] Peer Connection Initiated with [AF_INET]115.28.87.127:1194
Fri Jul 15 20:23:15 2016 SENT CONTROL [server]: 'PUSH_REQUEST' (status=1)
Fri Jul 15 20:23:15 2016 PUSH: Received control message: 'PUSH_REPLY,route-gateway 10.2.101.1,ping 10,ping-restart 120,ifconfig 10.2.101.22 255.255.255.0'
Fri Jul 15 20:23:15 2016 OPTIONS IMPORT: timers and/or timeouts modified
Fri Jul 15 20:23:15 2016 OPTIONS IMPORT: --ifconfig/up options modified
Fri Jul 15 20:23:15 2016 OPTIONS IMPORT: route-related options modified
Fri Jul 15 20:23:15 2016 Data Channel Encrypt: Cipher 'BF-CBC' initialized with 128 bit key
Fri Jul 15 20:23:15 2016 Data Channel Encrypt: Using 160 bit message hash 'SHA1' for HMAC authentication
Fri Jul 15 20:23:15 2016 Data Channel Decrypt: Cipher 'BF-CBC' initialized with 128 bit key
Fri Jul 15 20:23:15 2016 Data Channel Decrypt: Using 160 bit message hash 'SHA1' for HMAC authentication
段错误(吐核)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,59,2016-07-22T18:16:09Z,2019-04-04T15:59:04Z,2019-04-04T15:59:05Z,CLOSED,False,18,11,1,https://github.com/emerlinsky,distro: Update openvpn.init.d.rhel,2,[],https://github.com/OpenVPN/openvpn/pull/59,https://github.com/emerlinsky,1,https://github.com/OpenVPN/openvpn/pull/59,"Without this change service openvpn status command  exits with status 0 in situation when lock file and pid file exist but service is dead, which besides not complying with specs (http://refspecs.linuxbase.org/LSB_3.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html) prevents systems such as puppet from starting it back.","Without this change service openvpn status command  exits with status 0 in situation when lock file and pid file exist but service is dead, which besides not complying with specs (http://refspecs.linuxbase.org/LSB_3.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html) prevents systems such as puppet from starting it back.",True,{'THUMBS_UP': ['https://github.com/bwithem']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,59,2016-07-22T18:16:09Z,2019-04-04T15:59:04Z,2019-04-04T15:59:05Z,CLOSED,False,18,11,1,https://github.com/emerlinsky,distro: Update openvpn.init.d.rhel,2,[],https://github.com/OpenVPN/openvpn/pull/59,https://github.com/mattock,2,https://github.com/OpenVPN/openvpn/pull/59#issuecomment-479958291,"Without this change service openvpn status command  exits with status 0 in situation when lock file and pid file exist but service is dead, which besides not complying with specs (http://refspecs.linuxbase.org/LSB_3.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html) prevents systems such as puppet from starting it back.","We don't have this file anymore, so we can't patch it. Closing this PR.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,60,2016-08-09T12:48:13Z,,2021-01-24T09:23:43Z,OPEN,False,108,21,8,https://github.com/orivej,netconfig: Add support for configuring tun/tap interface in a Linux network namespace (netns),1,[],https://github.com/OpenVPN/openvpn/pull/60,https://github.com/orivej,1,https://github.com/OpenVPN/openvpn/pull/60,"This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

I would like a Linux system using OpenVPN client to support:

Running applications that have network access via OpenVPN tun/tap interface, but no network access via the underlying interface (when OpenVPN interface goes down for any reason and brings down its routes).
Running applications that have network access only via the underlying interface, even when OpenVPN tun/tap interface is up.
Chaining OpenVPN clients (tunnel in tunnel).

All this is easily achievable with the help of Linux network namespaces: one just needs to run OpenVPN in the namespace with the underlying interface, but configure tun/tap in another namespace.  Then applications in the first namespace will not see OpenVPN at all, and applications in the second namespace will not see the underlying interface; and to chain OpenVPN clients, one just runs the second client in the second namespace with its tun/tap in the third one, and so on.
Here is an almost complete implementation of this idea.  The only thing missing is that redirect_default_route_to_vpn() fails because it ""Cannot read current default gateway from system"" and I am not sure about the proper fix.  (It should just set the new gateway as the default.)
To use OpenVPN with namespaces, just add some, and specify --dev-netns option. Assuming VPN server provides internet access:
ip netns add abc
openvpn --config CONFIF --dev-netns /run/netns/abc
# List routes.
ip -n abc route
# Add default, as long as redirect_default_route_to_vpn() cannot do it.
ip -n abc route add default via XXX
ip netns exec abc ping 8.8.8.8

I am aware of http://www.naju.se/articles/openvpn-netns and http://www.naju.se/articles/openvpn-netns, but these scripts are very ad-hoc and fragile, e.g. they do not support buth tun and tap devices, and their only purpose is to reimplement what do_open_tun() does after the kernel wipes all its work when the interface is moved into another namespace.","This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

I would like a Linux system using OpenVPN client to support:

Running applications that have network access via OpenVPN tun/tap interface, but no network access via the underlying interface (when OpenVPN interface goes down for any reason and brings down its routes).
Running applications that have network access only via the underlying interface, even when OpenVPN tun/tap interface is up.
Chaining OpenVPN clients (tunnel in tunnel).

All this is easily achievable with the help of Linux network namespaces: one just needs to run OpenVPN in the namespace with the underlying interface, but configure tun/tap in another namespace.  Then applications in the first namespace will not see OpenVPN at all, and applications in the second namespace will not see the underlying interface; and to chain OpenVPN clients, one just runs the second client in the second namespace with its tun/tap in the third one, and so on.
Here is an almost complete implementation of this idea.  The only thing missing is that redirect_default_route_to_vpn() fails because it ""Cannot read current default gateway from system"" and I am not sure about the proper fix.  (It should just set the new gateway as the default.)
To use OpenVPN with namespaces, just add some, and specify --dev-netns option. Assuming VPN server provides internet access:
ip netns add abc
openvpn --config CONFIF --dev-netns /run/netns/abc
# List routes.
ip -n abc route
# Add default, as long as redirect_default_route_to_vpn() cannot do it.
ip -n abc route add default via XXX
ip netns exec abc ping 8.8.8.8

I am aware of http://www.naju.se/articles/openvpn-netns and http://www.naju.se/articles/openvpn-netns, but these scripts are very ad-hoc and fragile, e.g. they do not support buth tun and tap devices, and their only purpose is to reimplement what do_open_tun() does after the kernel wipes all its work when the interface is moved into another namespace.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,60,2016-08-09T12:48:13Z,,2021-01-24T09:23:43Z,OPEN,False,108,21,8,https://github.com/orivej,netconfig: Add support for configuring tun/tap interface in a Linux network namespace (netns),1,[],https://github.com/OpenVPN/openvpn/pull/60,https://github.com/orivej,2,https://github.com/OpenVPN/openvpn/pull/60#issuecomment-238542993,"This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

I would like a Linux system using OpenVPN client to support:

Running applications that have network access via OpenVPN tun/tap interface, but no network access via the underlying interface (when OpenVPN interface goes down for any reason and brings down its routes).
Running applications that have network access only via the underlying interface, even when OpenVPN tun/tap interface is up.
Chaining OpenVPN clients (tunnel in tunnel).

All this is easily achievable with the help of Linux network namespaces: one just needs to run OpenVPN in the namespace with the underlying interface, but configure tun/tap in another namespace.  Then applications in the first namespace will not see OpenVPN at all, and applications in the second namespace will not see the underlying interface; and to chain OpenVPN clients, one just runs the second client in the second namespace with its tun/tap in the third one, and so on.
Here is an almost complete implementation of this idea.  The only thing missing is that redirect_default_route_to_vpn() fails because it ""Cannot read current default gateway from system"" and I am not sure about the proper fix.  (It should just set the new gateway as the default.)
To use OpenVPN with namespaces, just add some, and specify --dev-netns option. Assuming VPN server provides internet access:
ip netns add abc
openvpn --config CONFIF --dev-netns /run/netns/abc
# List routes.
ip -n abc route
# Add default, as long as redirect_default_route_to_vpn() cannot do it.
ip -n abc route add default via XXX
ip netns exec abc ping 8.8.8.8

I am aware of http://www.naju.se/articles/openvpn-netns and http://www.naju.se/articles/openvpn-netns, but these scripts are very ad-hoc and fragile, e.g. they do not support buth tun and tap devices, and their only purpose is to reimplement what do_open_tun() does after the kernel wipes all its work when the interface is moved into another namespace.",This can be regarded as the continuation of #13,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,60,2016-08-09T12:48:13Z,,2021-01-24T09:23:43Z,OPEN,False,108,21,8,https://github.com/orivej,netconfig: Add support for configuring tun/tap interface in a Linux network namespace (netns),1,[],https://github.com/OpenVPN/openvpn/pull/60,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/60#issuecomment-238590917,"This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

I would like a Linux system using OpenVPN client to support:

Running applications that have network access via OpenVPN tun/tap interface, but no network access via the underlying interface (when OpenVPN interface goes down for any reason and brings down its routes).
Running applications that have network access only via the underlying interface, even when OpenVPN tun/tap interface is up.
Chaining OpenVPN clients (tunnel in tunnel).

All this is easily achievable with the help of Linux network namespaces: one just needs to run OpenVPN in the namespace with the underlying interface, but configure tun/tap in another namespace.  Then applications in the first namespace will not see OpenVPN at all, and applications in the second namespace will not see the underlying interface; and to chain OpenVPN clients, one just runs the second client in the second namespace with its tun/tap in the third one, and so on.
Here is an almost complete implementation of this idea.  The only thing missing is that redirect_default_route_to_vpn() fails because it ""Cannot read current default gateway from system"" and I am not sure about the proper fix.  (It should just set the new gateway as the default.)
To use OpenVPN with namespaces, just add some, and specify --dev-netns option. Assuming VPN server provides internet access:
ip netns add abc
openvpn --config CONFIF --dev-netns /run/netns/abc
# List routes.
ip -n abc route
# Add default, as long as redirect_default_route_to_vpn() cannot do it.
ip -n abc route add default via XXX
ip netns exec abc ping 8.8.8.8

I am aware of http://www.naju.se/articles/openvpn-netns and http://www.naju.se/articles/openvpn-netns, but these scripts are very ad-hoc and fragile, e.g. they do not support buth tun and tap devices, and their only purpose is to reimplement what do_open_tun() does after the kernel wipes all its work when the interface is moved into another namespace.","Hi,
On Tue, Aug 09, 2016 at 05:48:16AM -0700, Orivej Desh wrote:

This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

Because it does not belong to the users list.
If you want feedback from developers, please use
openvpn-devel@lists.sourceforge.net
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,60,2016-08-09T12:48:13Z,,2021-01-24T09:23:43Z,OPEN,False,108,21,8,https://github.com/orivej,netconfig: Add support for configuring tun/tap interface in a Linux network namespace (netns),1,[],https://github.com/OpenVPN/openvpn/pull/60,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/60#issuecomment-238592474,"This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

I would like a Linux system using OpenVPN client to support:

Running applications that have network access via OpenVPN tun/tap interface, but no network access via the underlying interface (when OpenVPN interface goes down for any reason and brings down its routes).
Running applications that have network access only via the underlying interface, even when OpenVPN tun/tap interface is up.
Chaining OpenVPN clients (tunnel in tunnel).

All this is easily achievable with the help of Linux network namespaces: one just needs to run OpenVPN in the namespace with the underlying interface, but configure tun/tap in another namespace.  Then applications in the first namespace will not see OpenVPN at all, and applications in the second namespace will not see the underlying interface; and to chain OpenVPN clients, one just runs the second client in the second namespace with its tun/tap in the third one, and so on.
Here is an almost complete implementation of this idea.  The only thing missing is that redirect_default_route_to_vpn() fails because it ""Cannot read current default gateway from system"" and I am not sure about the proper fix.  (It should just set the new gateway as the default.)
To use OpenVPN with namespaces, just add some, and specify --dev-netns option. Assuming VPN server provides internet access:
ip netns add abc
openvpn --config CONFIF --dev-netns /run/netns/abc
# List routes.
ip -n abc route
# Add default, as long as redirect_default_route_to_vpn() cannot do it.
ip -n abc route add default via XXX
ip netns exec abc ping 8.8.8.8

I am aware of http://www.naju.se/articles/openvpn-netns and http://www.naju.se/articles/openvpn-netns, but these scripts are very ad-hoc and fragile, e.g. they do not support buth tun and tap devices, and their only purpose is to reimplement what do_open_tun() does after the kernel wipes all its work when the interface is moved into another namespace.","On the technical merits: I can see that it would be nice to have something like that, but the implementation needs to be flexible enough to handle other platforms and/or other approaches on Linux as well (like, routing tables as in #13, or the equivalent on OpenBSD and FreeBSD, etc.).
This is basically why nothing much has happened in that area yet - proposed patch sets where much too narrow minded (""it works for MY use case""), and none of the core developers had enough spare time to pick it up and make generic enough that it's worth supporting in the future.
New code of such complexity will need to be maintained and tested(!!) for the future lifetime of the project, so it needs to serve more than a single use case/single platform.
(In the end it would be me or @schwabe who gets to maintain this)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,60,2016-08-09T12:48:13Z,,2021-01-24T09:23:43Z,OPEN,False,108,21,8,https://github.com/orivej,netconfig: Add support for configuring tun/tap interface in a Linux network namespace (netns),1,[],https://github.com/OpenVPN/openvpn/pull/60,https://github.com/orivej,5,https://github.com/OpenVPN/openvpn/pull/60#issuecomment-238794651,"This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

I would like a Linux system using OpenVPN client to support:

Running applications that have network access via OpenVPN tun/tap interface, but no network access via the underlying interface (when OpenVPN interface goes down for any reason and brings down its routes).
Running applications that have network access only via the underlying interface, even when OpenVPN tun/tap interface is up.
Chaining OpenVPN clients (tunnel in tunnel).

All this is easily achievable with the help of Linux network namespaces: one just needs to run OpenVPN in the namespace with the underlying interface, but configure tun/tap in another namespace.  Then applications in the first namespace will not see OpenVPN at all, and applications in the second namespace will not see the underlying interface; and to chain OpenVPN clients, one just runs the second client in the second namespace with its tun/tap in the third one, and so on.
Here is an almost complete implementation of this idea.  The only thing missing is that redirect_default_route_to_vpn() fails because it ""Cannot read current default gateway from system"" and I am not sure about the proper fix.  (It should just set the new gateway as the default.)
To use OpenVPN with namespaces, just add some, and specify --dev-netns option. Assuming VPN server provides internet access:
ip netns add abc
openvpn --config CONFIF --dev-netns /run/netns/abc
# List routes.
ip -n abc route
# Add default, as long as redirect_default_route_to_vpn() cannot do it.
ip -n abc route add default via XXX
ip netns exec abc ping 8.8.8.8

I am aware of http://www.naju.se/articles/openvpn-netns and http://www.naju.se/articles/openvpn-netns, but these scripts are very ad-hoc and fragile, e.g. they do not support buth tun and tap devices, and their only purpose is to reimplement what do_open_tun() does after the kernel wipes all its work when the interface is moved into another namespace.","When you say that the implementation needs to be flexible enough for other platforms and approaches, I am not sure implementation of what are we talking about, since this patch implements network interface configuration in a separate Linux network namespace, and AFAIK there are none of them on other platforms. If OpenVPN would support setfib on FreeBSD that (on the first glance) is used much like setns on Linux, it would be integrated into the same two places of the do_open_tun and do_close_tun functions, but the configuration option would be named differently from dev-netns. If OpenVPN would support distinct routing tables on Linux, that option could be named the same as on FreeBSD, but the implementation would have nothing in common with that of setns and setfib. (Except that the changes for redirect_default_route_to_vpn() to support empty routing tables would be useful in that case too.) So, is there a path forward with this patch?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,60,2016-08-09T12:48:13Z,,2021-01-24T09:23:43Z,OPEN,False,108,21,8,https://github.com/orivej,netconfig: Add support for configuring tun/tap interface in a Linux network namespace (netns),1,[],https://github.com/OpenVPN/openvpn/pull/60,https://github.com/cron2,6,https://github.com/OpenVPN/openvpn/pull/60#issuecomment-238795705,"This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

I would like a Linux system using OpenVPN client to support:

Running applications that have network access via OpenVPN tun/tap interface, but no network access via the underlying interface (when OpenVPN interface goes down for any reason and brings down its routes).
Running applications that have network access only via the underlying interface, even when OpenVPN tun/tap interface is up.
Chaining OpenVPN clients (tunnel in tunnel).

All this is easily achievable with the help of Linux network namespaces: one just needs to run OpenVPN in the namespace with the underlying interface, but configure tun/tap in another namespace.  Then applications in the first namespace will not see OpenVPN at all, and applications in the second namespace will not see the underlying interface; and to chain OpenVPN clients, one just runs the second client in the second namespace with its tun/tap in the third one, and so on.
Here is an almost complete implementation of this idea.  The only thing missing is that redirect_default_route_to_vpn() fails because it ""Cannot read current default gateway from system"" and I am not sure about the proper fix.  (It should just set the new gateway as the default.)
To use OpenVPN with namespaces, just add some, and specify --dev-netns option. Assuming VPN server provides internet access:
ip netns add abc
openvpn --config CONFIF --dev-netns /run/netns/abc
# List routes.
ip -n abc route
# Add default, as long as redirect_default_route_to_vpn() cannot do it.
ip -n abc route add default via XXX
ip netns exec abc ping 8.8.8.8

I am aware of http://www.naju.se/articles/openvpn-netns and http://www.naju.se/articles/openvpn-netns, but these scripts are very ad-hoc and fragile, e.g. they do not support buth tun and tap devices, and their only purpose is to reimplement what do_open_tun() does after the kernel wipes all its work when the interface is moved into another namespace.","Hi,
On Wed, Aug 10, 2016 at 01:05:09AM -0700, Orivej Desh wrote:

When you say that the implementation needs to be flexible enough for other platforms and approaches, I am not sure implementation of what are we talking about, since this patch implements network interface configuration in a separate Linux network namespace, and AFAIK there are none of them on other platforms.

This squares the issue nicely: it's quite a bit of code to solve the
problem (""put applications into a separate routing 'thing'"") in a very
specific way (""linux name spaces"").
We should see that this can be implemented in a way that linux routing
table instances, FreeBSD fib setting, etc, are all covered (or ""can be
added"") so it would solve the ""problem"" on a wider range of platforms.
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,60,2016-08-09T12:48:13Z,,2021-01-24T09:23:43Z,OPEN,False,108,21,8,https://github.com/orivej,netconfig: Add support for configuring tun/tap interface in a Linux network namespace (netns),1,[],https://github.com/OpenVPN/openvpn/pull/60,https://github.com/dsommers,7,https://github.com/OpenVPN/openvpn/pull/60#issuecomment-240476877,"This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

I would like a Linux system using OpenVPN client to support:

Running applications that have network access via OpenVPN tun/tap interface, but no network access via the underlying interface (when OpenVPN interface goes down for any reason and brings down its routes).
Running applications that have network access only via the underlying interface, even when OpenVPN tun/tap interface is up.
Chaining OpenVPN clients (tunnel in tunnel).

All this is easily achievable with the help of Linux network namespaces: one just needs to run OpenVPN in the namespace with the underlying interface, but configure tun/tap in another namespace.  Then applications in the first namespace will not see OpenVPN at all, and applications in the second namespace will not see the underlying interface; and to chain OpenVPN clients, one just runs the second client in the second namespace with its tun/tap in the third one, and so on.
Here is an almost complete implementation of this idea.  The only thing missing is that redirect_default_route_to_vpn() fails because it ""Cannot read current default gateway from system"" and I am not sure about the proper fix.  (It should just set the new gateway as the default.)
To use OpenVPN with namespaces, just add some, and specify --dev-netns option. Assuming VPN server provides internet access:
ip netns add abc
openvpn --config CONFIF --dev-netns /run/netns/abc
# List routes.
ip -n abc route
# Add default, as long as redirect_default_route_to_vpn() cannot do it.
ip -n abc route add default via XXX
ip netns exec abc ping 8.8.8.8

I am aware of http://www.naju.se/articles/openvpn-netns and http://www.naju.se/articles/openvpn-netns, but these scripts are very ad-hoc and fragile, e.g. they do not support buth tun and tap devices, and their only purpose is to reimplement what do_open_tun() does after the kernel wipes all its work when the interface is moved into another namespace.","I agree that we should aim for generic cross-platform approaches, but Linux and *BSD are not developed along the same goals.  And considering the adoption of Linux containers (and in particular Docker), we should consider better support for netns - which is what Linux containers do use to provide separate network stacks in each container.  Having a possibility to manage VPN tunnels for containers outside the container is something which allows transparent cross-data-centre links for hosting providers.
I have not had enough time to dig into these patches in this PR yet, so I can't say much more. But we do need to have a more thorough discussion of features future OpenVPN releases should include.  That is something we can start looking into after 2.4 is out the door, though.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,60,2016-08-09T12:48:13Z,,2021-01-24T09:23:43Z,OPEN,False,108,21,8,https://github.com/orivej,netconfig: Add support for configuring tun/tap interface in a Linux network namespace (netns),1,[],https://github.com/OpenVPN/openvpn/pull/60,https://github.com/cron2,8,https://github.com/OpenVPN/openvpn/pull/60#issuecomment-240518567,"This was submitted to openvpn-users@lists.sourceforge.net, but was not discussed.

I would like a Linux system using OpenVPN client to support:

Running applications that have network access via OpenVPN tun/tap interface, but no network access via the underlying interface (when OpenVPN interface goes down for any reason and brings down its routes).
Running applications that have network access only via the underlying interface, even when OpenVPN tun/tap interface is up.
Chaining OpenVPN clients (tunnel in tunnel).

All this is easily achievable with the help of Linux network namespaces: one just needs to run OpenVPN in the namespace with the underlying interface, but configure tun/tap in another namespace.  Then applications in the first namespace will not see OpenVPN at all, and applications in the second namespace will not see the underlying interface; and to chain OpenVPN clients, one just runs the second client in the second namespace with its tun/tap in the third one, and so on.
Here is an almost complete implementation of this idea.  The only thing missing is that redirect_default_route_to_vpn() fails because it ""Cannot read current default gateway from system"" and I am not sure about the proper fix.  (It should just set the new gateway as the default.)
To use OpenVPN with namespaces, just add some, and specify --dev-netns option. Assuming VPN server provides internet access:
ip netns add abc
openvpn --config CONFIF --dev-netns /run/netns/abc
# List routes.
ip -n abc route
# Add default, as long as redirect_default_route_to_vpn() cannot do it.
ip -n abc route add default via XXX
ip netns exec abc ping 8.8.8.8

I am aware of http://www.naju.se/articles/openvpn-netns and http://www.naju.se/articles/openvpn-netns, but these scripts are very ad-hoc and fragile, e.g. they do not support buth tun and tap devices, and their only purpose is to reimplement what do_open_tun() does after the kernel wipes all its work when the interface is moved into another namespace.","hi,
On Wed, Aug 17, 2016 at 09:59:57AM -0700, David Sommerseth wrote:

I agree that we should aim for generic cross-platform approaches, but Linux and *BSD are not developed along the same goals.  And considering the adoption of Linux containers (and in particular Docker), we should consider better support for netns - which is what Linux containers do use to provide separate network stacks in each container.  Having a possibility to manage VPN tunnels for containers outside the container is something which allows transparent cross-data-centre links for hosting providers.

I'm not saying we should not support netns - but we must do it in a sane
way, so that other platforms with different approaches to network
isolation/virtualization (like BSD) can be implemented without making
the code more of a mess than it already is.
In #13, work is already going on, anyway :-)
gert

USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,61,2016-08-21T11:48:04Z,,2016-12-20T16:48:23Z,OPEN,False,4,4,1,https://github.com/yarmash,Treat the 'DOMAIN-SEARCH' option the same as 'DOMAIN',1,[],https://github.com/OpenVPN/openvpn/pull/61,https://github.com/yarmash,1,https://github.com/OpenVPN/openvpn/pull/61,Some servers push dhcp-option DOMAIN-SEARCH as well as dhcp-option DOMAIN. This change enables the script to understand DOMAIN-SEARCH and treat it the same as DOMAIN.,Some servers push dhcp-option DOMAIN-SEARCH as well as dhcp-option DOMAIN. This change enables the script to understand DOMAIN-SEARCH and treat it the same as DOMAIN.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,62,2016-09-17T10:34:07Z,2016-09-27T18:22:01Z,2016-09-27T18:22:01Z,CLOSED,False,0,4,1,https://github.com/chipitsine,"travis-ci: enable ""--disable-crypto"" build configuration",1,[],https://github.com/OpenVPN/openvpn/pull/62,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/62,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,63,2016-09-21T07:35:31Z,2021-11-15T18:41:55Z,2021-11-15T18:41:55Z,CLOSED,False,1,1,1,https://github.com/CodingFree,Typo when negate a range.,1,[],https://github.com/OpenVPN/openvpn/pull/63,https://github.com/CodingFree,1,https://github.com/OpenVPN/openvpn/pull/63,"The man page says:
[!] -d, --destination address[/mask][,...]
I guessed that it was the same for the source to fix it.","The man page says:
[!] -d, --destination address[/mask][,...]
I guessed that it was the same for the source to fix it.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,63,2016-09-21T07:35:31Z,2021-11-15T18:41:55Z,2021-11-15T18:41:55Z,CLOSED,False,1,1,1,https://github.com/CodingFree,Typo when negate a range.,1,[],https://github.com/OpenVPN/openvpn/pull/63,https://github.com/flichtenheld,2,https://github.com/OpenVPN/openvpn/pull/63#issuecomment-962643236,"The man page says:
[!] -d, --destination address[/mask][,...]
I guessed that it was the same for the source to fix it.","As part of an initiative to clean up old Github PR submissions, I will submit this patch to the mailing list for inclusion.",True,{'THUMBS_UP': ['https://github.com/CodingFree']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,63,2016-09-21T07:35:31Z,2021-11-15T18:41:55Z,2021-11-15T18:41:55Z,CLOSED,False,1,1,1,https://github.com/CodingFree,Typo when negate a range.,1,[],https://github.com/OpenVPN/openvpn/pull/63,https://github.com/CodingFree,3,https://github.com/OpenVPN/openvpn/pull/63#issuecomment-962645061,"The man page says:
[!] -d, --destination address[/mask][,...]
I guessed that it was the same for the source to fix it.",Thank you!,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,63,2016-09-21T07:35:31Z,2021-11-15T18:41:55Z,2021-11-15T18:41:55Z,CLOSED,False,1,1,1,https://github.com/CodingFree,Typo when negate a range.,1,[],https://github.com/OpenVPN/openvpn/pull/63,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/63#issuecomment-969206220,"The man page says:
[!] -d, --destination address[/mask][,...]
I guessed that it was the same for the source to fix it.","This has been merged via the mailing list process.
commit d720c5f
Author: Adrian adrian.crespo@protonmail.com
Date:   Sun Nov 7 18:40:00 2021 +0100
Fix error in example firewall.sh script

The man page says:
[!] -s, --source address[/mask][,...]",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,64,2016-10-21T15:38:05Z,2016-10-21T16:56:13Z,2016-10-21T16:56:13Z,CLOSED,False,25,3,5,https://github.com/BarbarossaTM,Add --outer-vrf option.,1,[],https://github.com/OpenVPN/openvpn/pull/64,https://github.com/BarbarossaTM,1,https://github.com/OpenVPN/openvpn/pull/64,"This options allows the user to specify the Linux VRF[0] the OpenVPN process
should use when making a connection or binding to an address.
This allows making connections using the non-default VRF and having the tun/
tap interface in the default VRF.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","This options allows the user to specify the Linux VRF[0] the OpenVPN process
should use when making a connection or binding to an address.
This allows making connections using the non-default VRF and having the tun/
tap interface in the default VRF.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,64,2016-10-21T15:38:05Z,2016-10-21T16:56:13Z,2016-10-21T16:56:13Z,CLOSED,False,25,3,5,https://github.com/BarbarossaTM,Add --outer-vrf option.,1,[],https://github.com/OpenVPN/openvpn/pull/64,https://github.com/BarbarossaTM,2,https://github.com/OpenVPN/openvpn/pull/64#issuecomment-255424902,"This options allows the user to specify the Linux VRF[0] the OpenVPN process
should use when making a connection or binding to an address.
This allows making connections using the non-default VRF and having the tun/
tap interface in the default VRF.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Thanks for your feedback!
I just learned that it's easy to make this more generic and did a new patch (which basicly is a rename of this one + code for FreeBSD) and opened PR #65
So I close this one in favour of #65
Best
Max",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/BarbarossaTM,1,https://github.com/OpenVPN/openvpn/pull/65,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/BarbarossaTM,2,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-255427064,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org",This is an update to #64,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/spagu,3,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-255590308,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org",can this patch can be connected with this issue? https://forums.freebsd.org/threads/58019/,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-256137744,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Hi,
On Sun, Oct 23, 2016 at 07:00:56AM -0700, spagu wrote:

can this patch can be connected with this issue? https://forums.freebsd.org/threads/58019/

Totally unrelated.
gert
USENET is not the non-clickable part of WWW!
//www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/BarbarossaTM,5,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-330715591,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Hi @cron2
I rebased the PR on v2.4.3, reordered some function paramters as requested on the mailing list, and remove the untested code for FreeBSD.
Please review and merge :-)
Best
Max",True,"{'THUMBS_UP': ['https://github.com/northalpha', 'https://github.com/Zaunei', 'https://github.com/j0ju']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/BarbarossaTM,6,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-331239819,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Hi again,
Just got feedback, that --bind-dev should only be shown on Linux as it's only evaluated on Linux, so I move the help text next to --mark which is already only shown on Linux systems and does something similar.
Please review and merge :-)
Best
Max",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/cron2,7,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-331243234,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Hi,
On Thu, Sep 21, 2017 at 11:19:30AM -0700, Maximilian Wilhelm wrote:
 Just got feedback, that `--bind-dev` should only be shown on Linux as it's only evaluated on Linux, so I move the help text next to `--mark` which is already only shown on Linux systems and does something similar.

 Please review and merge :-)
I thought you have BSD code as well?

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/BarbarossaTM,8,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-331245199,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","I thought you have BSD code as well?

I had some in the earlier pull request which I found by googing. As I don' have any FreeBSD and zero experience with it, I can't test it. Any Arne suggested, that the code I googled doesn't work / the options don't exist. As there was no other feedback on *BSD, I dropped it.
Best
Max",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/cron2,9,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-331245794,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Hi,
On Thu, Sep 21, 2017 at 11:39:52AM -0700, Maximilian Wilhelm wrote:
 > I thought you have BSD code as well?

 I had some in the earlier pull request which I found by googing. As I don' have any FreeBSD and zero experience with it, I can't test it. Any Arne suggested, that the code I googled doesn't work / the options don't exist. As there was no other feedback on *BSD, I dropped it.
Well, my initial requirement was ""keep the things open so platform specific
stuff can be added later if we figure out how to do it on platform <x>"",
and as such, moving inside #ifdef TARGET_LINUX is not a good approach.

gert
…
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/BarbarossaTM,10,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-331248722,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Well, my initial requirement was ""keep the things open so platform specific stuff can be added later if we figure out how to do it on platform "", and as such, moving inside #ifdef TARGET_LINUX is not a good approach.

To the best of my knowledge the code can easily be extended when someone figures out how to do so on different platforms.
The rationale behind the use of the current ifdef is, that the option now only is shown on Linux, as now it's only supported on Linux. But that ifdef can easily be changed later.
What I initially referred to was https://lists.freebsd.org/pipermail/freebsd-net/2012-April/032064.html  which talks about IP_SENDIF, which according to https://wiki.freebsd.org/Networking seems to still exist. But as I said I have no FreeBSD (experience) and would rely on soeone who does, here.
As the initial code shows it should be rather easy to add a branch for FreeBSD here.
Max",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/lukastribus,11,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-342687351,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","td;lr SO_BINDTODEVICE is not equivalent to ""VRF selection"", let's not imply that one way or the other; also VRF support and its APIs may never be portable.
SO_BINDTODEVICE is a linux-specific socket option supported since decades.
The VRF concept in linux was introduced in linux 4.3 - barely 2 years ago.
I want to emphasize that the SO_BINDTODEVICE option's primary use-case is NOT to assign sockets to VRF's. That works in 4.3 now too, but the primary use-case is to force an application to a specific interface (for DHCP for example).
So when BSD folks talk about implementing the SO_BINDTODEVICE option, we cannot assume they also mean VRF selection, just because that's the shortcut used in Linux. In fact, I don't even know if FreeBSD supports VRF's. It supports multiple FIBs and jails, just like Linux supported multiple FIBs and network namespaces long before VRF support. But whether FreeBSD supports VRF's just like Linux, I do not know.
What we know for sure is how to use VRF's in Linux, but another OS may implement a completely different API (based on a VRF name or id, instead of a interface name).
OpenBSD's ntpd.conf for example looks like this: listen on address [rtable table-id] [1].
How are we going to abstract that in openvpn? We can't, in my opinion.
So my suggestion is to not make this looks like a portable VRF selection feature. Let's call it what it is: an option to bind to a specific interface (currently supported on Linux).
If required for a commit, we can move all the logic out of the #ifdef TARGET_LINUX, and guard only the actual socket call with #ifdef TARGET_LINUX or SO_BINDTODEVICE, but we have to at least mention the fact that this currently only works in Linux (in the help text).
lukas
[1] https://man.openbsd.org/ntpd.conf",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/bao7uo,12,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-361234792,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org",Really hope this feature can be merged :),True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/dfawcus,13,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-362419955,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org",Yes it would be useful addition.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/dsommers,14,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-380520432,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","@bao7uo, @dfawcus Which feature do you expect SO_BINDTODEVICE or VRF binding?  As I understand the quite well written comment from @lukastribus, using SO_BINDTODEVICE for VRF binding is the wrong approach - it works now, but there is no guarantee for the future.  If the VRF binding is the expected outcome, then we need a different patch.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/dfawcus,15,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-380548804,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","On Wed, Apr 11, 2018 at 04:48:40PM +0000, David Sommerseth wrote:
 @bao7uo, @dfawcus Which feature do you expect SO_BINDTODEVICE or VRF binding?  As I understand the quite well written comment from @lukastribus, using SO_BINDTODEVICE for VRF binding is the wrong approach - it works now, but there is no guarantee for the future.  If the VRF binding is the expected outcome, then we need a different patch.
Well, both actually; but for different purposes.

At the moment I am running a collection of three sites, which each have multiple Internet links. Of these, between any two sites, I run at least 2 tunnels each using a different outgoing ISP.

Due to uRPF filtering by the ISPs, I have to ensure the correct source address is used on the correct uplink.  I currently achieve that by using PBR, and some weird routing games.  This does not involve VRFs.

It would be simpler to just bind the tunnel process such that the encapsulated packets exit the correct ISP link, and the SO_BINDTODEVICE patch would achieve this.


Separate form that, I'd like to be able to have tunnels where the outer header belongs to one VRF, and the carried packet belong to a different one.  The fact that OpenVPN can not currently support this limits what I can do, to the extent that I've not yet implemented VRFs on these border routers unless and until I find an alternate tunneling mechanism which will support VRFs.

So because of how the Linux VRF implementation works, the SO_BINDTODEVICE would provide a partial VRF mechanism; i.e. underlay in a VRF, tunnel in default VRF.  To have the tunnels themselves in a VRF would probably require an additional option to allow the tunnel interface to be bound to a VRF master device.  Granted this VRF approach is Linux specific, not a general solution, and so you may not wish to do anything claiming to be VRF related until you have a general approach.",True,"{'THUMBS_UP': ['https://github.com/dsommers', 'https://github.com/RamXX']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/craig,16,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-453464449,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Please merge, we can add this feature for BSD when it becomes available there.",True,"{'THUMBS_UP': ['https://github.com/BarbarossaTM', 'https://github.com/topranks']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/lukastribus,17,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-453473003,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","@bao7uo, @dfawcus Which feature do you expect SO_BINDTODEVICE or VRF binding? As I understand the quite well written comment from @lukastribus, using SO_BINDTODEVICE for VRF binding is the wrong approach - it works now, but there is no guarantee for the future.

I'm suggesting: just implement SO_BINDTODEVICE in openvpn, by advertising it exactly what the API is for: binding to a device (not binding to a VRF).
It's perfectly fine for people to then use it under Linux to select it for VRFs. It's not like the Linux behavior is going to change. However it is not and may never be portable across different OS.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/schwabe,18,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-453479277,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org",So this also went up on the mailing list. The strlen+1 is off by one that needs to be fixed. And I am unsure how to test this feature or it does not work. Binding openvpn to eth0 and not having redirect-gateway enabled should make a working VPN connection but it doesn't.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/dfawcus,19,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-455623095,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","As to testing, on Linux one can set up an ECMP route to a target such that it will point to two interfaces.
Packets sent to that destination will experience some behaviour (possibly round-robin?)
Using a socket which has been bound to the specific interface will then ensure that packets to that destination from the socket are sent out of the desired interface, rather than experiencing the default kernel behaviour.
$ ip -d r sh
unicast 8.8.8.8 proto 11 scope global
        nexthop via 10.1.2.2 dev eth0 weight 1
        nexthop via 10.2.0.2 dev eth1 weight 2",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/Starbicycle,20,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-483230652,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org",This patch might solve a lot of my networking problems. Please add this feature to openvpn.,True,{'THUMBS_UP': ['https://github.com/RamXX']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/halvors,21,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-560015213,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Yes please, then i could avoid my hacky routing table move scripts on up/down 💃",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/eimann,22,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-614170410,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","So after years of merging this finally and repackaging OpenVPN, when will this finally be merged?
Now with wg merged into Linux, I could stop wasting my time on this and move to iproute2/wg with netns which should achieve the same with a less hassle.",True,"{'THUMBS_UP': ['https://github.com/topranks', 'https://github.com/aaronjg']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/schwabe,23,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-614266059,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org",The current version of this patch was never send to the mailing list and only updated here if I remember correctly.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/cron2,24,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-650135586,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","So, this has taken WAY too long, and I apologize.  I wanted to really think long and hard about this, and how we could use this as building block on the way to a more generic VRF handling infrastructure - but that turned out to be ""no time for it right now, think about it next week"", and then it never happened.
Thanks to @lukastribus for clearly stating what is in here and what is not (""bind to device, which happens to allow some outer-VRF selection by implicit 'if the interface is in the VRF and we bind to it, the socket ends up in the VRF'"").
I am not exactly happy with the way this is sprinkling code bits and structure bits all over the place, but I have to acknowledge that there might no ""nicer"" way to get the required information to the function where it is needed, at least not without rewriting all of socket.c... (and it makes sense to have these changes not all in a #ifdef LINUX conditional, because that would mess up readability even more).
So...

good enough (ACK)
please check Arne's comment wrt ""strlen()+1"" - what is the correct argument here, strlen() (not including 0-byte) or strlen()+1?  I don't know.
and then send to the openvpn-devel list, please, so I can pick it up from there.
if possible, add some notes how to test this most easily (what exactly does ""bind to device"" do on linux?  just force source IP address - and possibly VRF - or also routing?  Or do you need ip rule tables for that?)",True,"{'HEART': ['https://github.com/BarbarossaTM', 'https://github.com/colrack']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/BarbarossaTM,25,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-650140680,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Yay :-)
Aboue the ""strlen()+1"": This is the way to do it according to kernel documentation, so I'm keeping this. See https://github.com/torvalds/linux/blob/master/Documentation/networking/vrf.rst
Patch on the list coming up :-)",True,{'HOORAY': ['https://github.com/colrack']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/yanky83,26,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-650489987,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","Yes, finally, thanks for getting this going! Been waiting for this for a while!
Let's make it happen please.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/cron2,27,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-651058867,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","code is in!
commit 19d3c60 (HEAD -> master, stable/master, mattock/master, gitlab/master, github/master)
Author: Maximilian Wilhelm max@sdn.clinic
Date:   Mon Jun 29 12:49:07 2020 +0200
Add --bind-dev option.

documentation needs to be merged with the great RST rewriting of the manpage, but will not be forgotten.
Thanks for your patience and insistence!",True,"{'HEART': ['https://github.com/BarbarossaTM', 'https://github.com/colrack', 'https://github.com/bao7uo', 'https://github.com/youam']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,65,2016-10-21T16:54:22Z,2020-06-29T11:44:30Z,2020-06-29T11:44:31Z,CLOSED,False,103,0,6,https://github.com/BarbarossaTM,Add --bind-dev option.,2,[],https://github.com/OpenVPN/openvpn/pull/65,https://github.com/BarbarossaTM,28,https://github.com/OpenVPN/openvpn/pull/65#issuecomment-651061840,"This options allows the user to specify a network device the OpenVPN process
should use when making a connection or binding to an address. This translates
in setting the SO_BINDTODEVICE option to the corresponding socket (on Linux).
When for example using VRFs on Linux [0] this allows making connections using
the non-default VRF and having the tun/tap interface in the default VRF.
It seems FreeBSD does not support the SO_BINDTODEVICE socket option, but has
a similar one called IP_SENDIF. As I don't have any BSD running, this part is
untested.
Thanks to David Ahern (Cumulus Networks) for insights on this.
[0] https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/networking/vrf.txt
Signed-off-by: Maximilian Wilhelm max@rfc2324.org","I guess that's eventual consistency then :-)
Thanks for merging!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,66,2016-11-06T18:04:58Z,2017-01-06T08:13:28Z,2017-01-06T08:13:28Z,CLOSED,False,0,0,0,https://github.com/chipitsine, several travis-ci improvements,0,[],https://github.com/OpenVPN/openvpn/pull/66,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/66,"(*) mingw build only configurations (no ""make test"")
(*) upgraded mbedtls to 2.4.0
(*) upgraded openssl to 1.0.1u","(*) mingw build only configurations (no ""make test"")
(*) upgraded mbedtls to 2.4.0
(*) upgraded openssl to 1.0.1u",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,67,2016-11-24T09:09:25Z,2017-02-14T21:56:01Z,2017-02-14T21:56:01Z,CLOSED,False,1,1,1,https://github.com/ozeric,Update build-deps.sh,1,[],https://github.com/OpenVPN/openvpn/pull/67,https://github.com/ozeric,1,https://github.com/OpenVPN/openvpn/pull/67,fix OPENSSL_VERSION typo,fix OPENSSL_VERSION typo,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,67,2016-11-24T09:09:25Z,2017-02-14T21:56:01Z,2017-02-14T21:56:01Z,CLOSED,False,1,1,1,https://github.com/ozeric,Update build-deps.sh,1,[],https://github.com/OpenVPN/openvpn/pull/67,https://github.com/chipitsine,2,https://github.com/OpenVPN/openvpn/pull/67#issuecomment-279704072,fix OPENSSL_VERSION typo,"I guess, we can close this PR after 208c03e",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,67,2016-11-24T09:09:25Z,2017-02-14T21:56:01Z,2017-02-14T21:56:01Z,CLOSED,False,1,1,1,https://github.com/ozeric,Update build-deps.sh,1,[],https://github.com/OpenVPN/openvpn/pull/67,https://github.com/syzzer,3,https://github.com/OpenVPN/openvpn/pull/67#issuecomment-279848690,fix OPENSSL_VERSION typo,Indeed.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,68,2016-11-25T19:54:13Z,2016-11-30T14:25:41Z,2016-11-30T14:25:42Z,CLOSED,False,13,1,2,https://github.com/eworm-de,allow to enable plugin lookup with configure argument,2,[],https://github.com/OpenVPN/openvpn/pull/68,https://github.com/eworm-de,1,https://github.com/OpenVPN/openvpn/pull/68,"For plugin lookup (give relative path to plugin directory in configuration) we had to configure with something like this:
CFLAGS=""$CFLAGS -DPLUGIN_LIBDIR=\\\""/usr/lib/openvpn/plugins\\\"""" ./configure

This allows to pass --enable-plugin-lookup to configure to achieve the same. As a bonus we can be sure that install path and lookup path in openvpn binary are the same.","For plugin lookup (give relative path to plugin directory in configuration) we had to configure with something like this:
CFLAGS=""$CFLAGS -DPLUGIN_LIBDIR=\\\""/usr/lib/openvpn/plugins\\\"""" ./configure

This allows to pass --enable-plugin-lookup to configure to achieve the same. As a bonus we can be sure that install path and lookup path in openvpn binary are the same.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,68,2016-11-25T19:54:13Z,2016-11-30T14:25:41Z,2016-11-30T14:25:42Z,CLOSED,False,13,1,2,https://github.com/eworm-de,allow to enable plugin lookup with configure argument,2,[],https://github.com/OpenVPN/openvpn/pull/68,https://github.com/eworm-de,2,https://github.com/OpenVPN/openvpn/pull/68#issuecomment-263885941,"For plugin lookup (give relative path to plugin directory in configuration) we had to configure with something like this:
CFLAGS=""$CFLAGS -DPLUGIN_LIBDIR=\\\""/usr/lib/openvpn/plugins\\\"""" ./configure

This allows to pass --enable-plugin-lookup to configure to achieve the same. As a bonus we can be sure that install path and lookup path in openvpn binary are the same.",Discussing on the mailing list... So closing here.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,69,2016-11-28T16:51:12Z,,2016-11-29T10:07:44Z,OPEN,False,28,0,1,https://github.com/AndersBlomdell,Add redirect-gateway/redirect-private to script environment,1,[],https://github.com/OpenVPN/openvpn/pull/69,https://github.com/AndersBlomdell,1,https://github.com/OpenVPN/openvpn/pull/69,"While trying to get NetworkManager to obey the ""push redirect-gateway/redirect-private"" in the ""--up""-script, I found that this was impossible since these commands were not visible in the environment. This is a first iteration trying to fix this.
Since ""redirect_gateway="" was already part of the environment, the new environment variables are named ""redirect_gateway_cmd/redirect_private_cmd""","While trying to get NetworkManager to obey the ""push redirect-gateway/redirect-private"" in the ""--up""-script, I found that this was impossible since these commands were not visible in the environment. This is a first iteration trying to fix this.
Since ""redirect_gateway="" was already part of the environment, the new environment variables are named ""redirect_gateway_cmd/redirect_private_cmd""",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,69,2016-11-28T16:51:12Z,,2016-11-29T10:07:44Z,OPEN,False,28,0,1,https://github.com/AndersBlomdell,Add redirect-gateway/redirect-private to script environment,1,[],https://github.com/OpenVPN/openvpn/pull/69,https://github.com/AndersBlomdell,2,https://github.com/OpenVPN/openvpn/pull/69#issuecomment-263511473,"While trying to get NetworkManager to obey the ""push redirect-gateway/redirect-private"" in the ""--up""-script, I found that this was impossible since these commands were not visible in the environment. This is a first iteration trying to fix this.
Since ""redirect_gateway="" was already part of the environment, the new environment variables are named ""redirect_gateway_cmd/redirect_private_cmd""","It might also make sense to change the code in options.c to validate that flags are compatible, e.g it's not clear from the documentation that the following directives are equivalent:
""redirect-private ipv6"" == ""redirect-gateway !ipv4 ipv6""
""redirect-private"" == ""redirect-gateway !ipv4""",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,70,2016-12-04T03:03:03Z,2016-12-07T03:20:26Z,2016-12-07T03:20:26Z,CLOSED,False,1,1,1,https://github.com/doughdemon,Fix --disable-async-push configure option,1,[],https://github.com/OpenVPN/openvpn/pull/70,https://github.com/doughdemon,1,https://github.com/OpenVPN/openvpn/pull/70,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,70,2016-12-04T03:03:03Z,2016-12-07T03:20:26Z,2016-12-07T03:20:26Z,CLOSED,False,1,1,1,https://github.com/doughdemon,Fix --disable-async-push configure option,1,[],https://github.com/OpenVPN/openvpn/pull/70,https://github.com/dsommers,2,https://github.com/OpenVPN/openvpn/pull/70#issuecomment-265344725,,"This should be fixed by now.  I already had a patch ready when noticing this PR.  This PR was not being seen earlier as we primarily use the openvpn-devel@lists.sourceforge.net mailing list for patch review and tracking.  But I ensured the commit would mention this PR.  For more detals, see commit e62eccf",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/wardragon,1,https://github.com/OpenVPN/openvpn/pull/71,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/jimbocoder,2,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-325567613,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","After tons of troubleshooting and experimentation I've come to the exact same conclusion as this PR.  LGTM! 👍
@wardragon as we are (were) both apparently solving basically the same problem, I'd like to ask here if this approach is what you ended up with, or did you find an alternative that might be better until this PR is included in an official release?  Thanks.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/wardragon,3,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-325964664,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","This is the simplest way to do. Also i think this is the only way, using what pam already have, so why don't use it?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/wardragon,4,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-438198102,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog",Rebased on Current Master,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/wardragon,5,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-505832021,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog",Any news for this pull request?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/Jnchi,6,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-505848039,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","@wardragon, did you post your patch to the mailing list?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/wardragon,7,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-505874860,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","no, how can i reach the mailist?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/Jnchi,8,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-505905991,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","Taken from the PR template,
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/wardragon,9,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-506349293,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog",rebased on current master,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/wardragon,10,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-537006276,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","I have posted this patch on mailing list, now i have send the mail with git-send-email, i hope now that this simple patch can be merged, thanks",True,"{'HOORAY': ['https://github.com/jimbocoder'], 'THUMBS_UP': ['https://github.com/Jnchi']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/pulecp,11,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-1135886474,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","I see that #132 is still open. This feature would still be very welcomed because it allows to use a grace_period parameter in Google Authenticator PAM module.
Is there any plan for that?
I also noticed a few other attempts to get PAM_RHOST into PAM modules.

https://www.mail-archive.com/openvpn-devel@lists.sourceforge.net/msg18897.html
https://ins3cure.com/enabling-2fa-on-rhel8/
https://sourceforge.net/p/openvpn/mailman/message/36208301/",True,{'THUMBS_UP': ['https://github.com/komatom']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/cron2,12,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-1135901644,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","Hi,
On Tue, May 24, 2022 at 05:55:17AM -0700, Pavel Pulec wrote:
 I see that #132 is still open. This feature would still be very welcomed because it allows to use a `grace_period` parameter in [Google Authenticator PAM module](https://github.com/google/google-authenticator-libpam).

 Is there any plan for that?
PRs is not something we'll act on - they might lead to some discussion,
but we never merge patches from PRs (as documented).

So, if you want that code in, it needs to go to the openvpn-devel list.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/komatom,13,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-1137341640,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","@pulecp I also agree this feature needs to be in the code, for the same reason to to have grace_period in google authenticator work.
it seems this is delayed on purpose for 3+ years now, it seems there are several posts with code on openvpn-devel list.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/cron2,14,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-1137365538,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","Hi,
On Wed, May 25, 2022 at 07:35:11AM -0700, komatom wrote:
 @pulecp I also agree this feature needs to be in the code, for the same reason to to have grace_period in google authenticator work.

 it seems this is delayed on purpose for 3+ years now, it seems there are several posts with code on openvpn-devel list.
If you read all of the conversation, you can see that none of the
""several posts"" actually form *one* usable patch.

There is ""patch plus updates to it"", which is not suitable, and
""patch v5 included in mail, totally garbled by sending program"",
which is also not suitable to applying.

If people want that code in, it's their responsibility to provide it
in a form that does not cause extra effort for the maintainers - and
that has been stated, in a clear and factual way.

Nothing about ""delayed on purpose"" - not sure what you think such a
statement is going to achieve.  ""Make me go to the list archives, and
spend my time on puzzling the incomplete pieces together""?  No.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/wardragon,15,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-1139482933,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","Hi,
i have been too busy, i qill remake the right path on the new openvpn and i will submit it as the wants. Things could be better and simple if they use pull request from github to import path into codes.....",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/cron2,16,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-1139485188,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","Hi,
On Fri, May 27, 2022 at 03:18:17AM -0700, Paolo wrote:
 i have been too busy, i qill remake the right path on the new openvpn and i will submit it as the wants. Things could be better and simple if they use pull request from github to import path into codes.....
Our main repo is not github, and our contribution process requires
public review in an archived place - which github cannot guarantee
either.

What we have right now gives us maximum transparency and robustness,
even in case github (or sourceforge or gitlab) goes away or gets
corrupted.  This is a necessary feature.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/wardragon,17,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-1139512541,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","Ok, now i want to review the patch and make it correct as you want. Where i find the right instruction to do this and publish it without problems? Thanks.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,71,2016-12-06T15:32:15Z,2019-10-25T10:20:46Z,2022-05-27T11:24:43Z,CLOSED,False,16,3,1,https://github.com/wardragon,Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/71,https://github.com/cron2,18,https://github.com/OpenVPN/openvpn/pull/71#issuecomment-1139529012,"This patch add support to set remote client data into PAM environment, in turn correctly allow PAM logging the client address to syslog","Hi,
On Fri, May 27, 2022 at 04:00:27AM -0700, Paolo wrote:
 Ok, now i want to review the patch and make it correct as you want. Where i find the right instruction to do this and publish it without problems? Thanks.
The last patch you sent was mostly right, I think, but it was included
in the mail text, so your mail client massacred it beyond repair.

Usually sending as an attachment (git format-patch -1, and then attach
that to the mail) works okayish.  If that does not help, ""git send-email""
always works.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,72,2016-12-08T13:37:14Z,2021-11-08T10:21:36Z,2021-11-12T22:02:07Z,CLOSED,False,5,5,1,https://github.com/oittaa,Fixed typos in Changes.rst,1,[],https://github.com/OpenVPN/openvpn/pull/72,https://github.com/oittaa,1,https://github.com/OpenVPN/openvpn/pull/72,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,72,2016-12-08T13:37:14Z,2021-11-08T10:21:36Z,2021-11-12T22:02:07Z,CLOSED,False,5,5,1,https://github.com/oittaa,Fixed typos in Changes.rst,1,[],https://github.com/OpenVPN/openvpn/pull/72,https://github.com/schwabe,2,https://github.com/OpenVPN/openvpn/pull/72#issuecomment-265742197,,behaviour is just British english :P,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,72,2016-12-08T13:37:14Z,2021-11-08T10:21:36Z,2021-11-12T22:02:07Z,CLOSED,False,5,5,1,https://github.com/oittaa,Fixed typos in Changes.rst,1,[],https://github.com/OpenVPN/openvpn/pull/72,https://github.com/mattock,3,https://github.com/OpenVPN/openvpn/pull/72#issuecomment-265743007,,"@schwabe : indeed. That said, there is one actual typo there. And we should probably try to conform to either british or american english, not mix the two randomly. Although, to be honest, most of our files probably have a mix of both.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,72,2016-12-08T13:37:14Z,2021-11-08T10:21:36Z,2021-11-12T22:02:07Z,CLOSED,False,5,5,1,https://github.com/oittaa,Fixed typos in Changes.rst,1,[],https://github.com/OpenVPN/openvpn/pull/72,https://github.com/oittaa,4,https://github.com/OpenVPN/openvpn/pull/72#issuecomment-265743074,,"@schwabe Yeah, but it was inconsistently used in the file.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,72,2016-12-08T13:37:14Z,2021-11-08T10:21:36Z,2021-11-12T22:02:07Z,CLOSED,False,5,5,1,https://github.com/oittaa,Fixed typos in Changes.rst,1,[],https://github.com/OpenVPN/openvpn/pull/72,https://github.com/selvanair,5,https://github.com/OpenVPN/openvpn/pull/72#issuecomment-265754540,,"Yes, inconsistent with two 'behaviour's and one 'behavior' :) I tend to write behaviour, but don't mind either.  Let's strive for correctness not consistency. As @mattock pointed out there are a couple of glaringly obvious typos fixed here, so the patch is good.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,72,2016-12-08T13:37:14Z,2021-11-08T10:21:36Z,2021-11-12T22:02:07Z,CLOSED,False,5,5,1,https://github.com/oittaa,Fixed typos in Changes.rst,1,[],https://github.com/OpenVPN/openvpn/pull/72,https://github.com/flichtenheld,6,https://github.com/OpenVPN/openvpn/pull/72#issuecomment-962653101,,"The actual typo has been fixed outside of this PR. Two remaining instances of ""behaviour"" but I don't think that is worth the PR. I would suggest just to close it...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,73,2016-12-11T11:44:17Z,2020-09-14T13:50:35Z,2020-09-14T15:22:44Z,CLOSED,False,0,6,1,https://github.com/VittGam,options: Remove IPv6 netmask limitation.,1,[],https://github.com/OpenVPN/openvpn/pull/73,https://github.com/VittGam,1,https://github.com/OpenVPN/openvpn/pull/73,"Hello,
I found that OpenVPN is refusing to configure an IPv6 netmask of less than 64 bits, or more than 124 bits.
This occurred to me in two different specific cases, one with a /128 netmask and another with a /56 netmask, when integrating OpenVPN into an already existing layer 3 network, where creating new subnets was not an option at all.
I had to workaround this apparently artificial limitation with --iroute on the servers, and a custom --up script on the clients. Then things started working as expected.
Maybe this check makes sense on Windows due to the many limitations of its network stack? But I think it definitely does not make sense on Linux.
So I'm proposing to remove this check.
What do you think?
Cheers,
Vittorio","Hello,
I found that OpenVPN is refusing to configure an IPv6 netmask of less than 64 bits, or more than 124 bits.
This occurred to me in two different specific cases, one with a /128 netmask and another with a /56 netmask, when integrating OpenVPN into an already existing layer 3 network, where creating new subnets was not an option at all.
I had to workaround this apparently artificial limitation with --iroute on the servers, and a custom --up script on the clients. Then things started working as expected.
Maybe this check makes sense on Windows due to the many limitations of its network stack? But I think it definitely does not make sense on Linux.
So I'm proposing to remove this check.
What do you think?
Cheers,
Vittorio",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,73,2016-12-11T11:44:17Z,2020-09-14T13:50:35Z,2020-09-14T15:22:44Z,CLOSED,False,0,6,1,https://github.com/VittGam,options: Remove IPv6 netmask limitation.,1,[],https://github.com/OpenVPN/openvpn/pull/73,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/73#issuecomment-692065987,"Hello,
I found that OpenVPN is refusing to configure an IPv6 netmask of less than 64 bits, or more than 124 bits.
This occurred to me in two different specific cases, one with a /128 netmask and another with a /56 netmask, when integrating OpenVPN into an already existing layer 3 network, where creating new subnets was not an option at all.
I had to workaround this apparently artificial limitation with --iroute on the servers, and a custom --up script on the clients. Then things started working as expected.
Maybe this check makes sense on Windows due to the many limitations of its network stack? But I think it definitely does not make sense on Linux.
So I'm proposing to remove this check.
What do you think?
Cheers,
Vittorio","Hi.
We don't do pull requests, AND we keep what we have now - the code assumes subnets everywhere, and adding point-to-point configs would require extra code on some platforms, and lots of additional testing.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,73,2016-12-11T11:44:17Z,2020-09-14T13:50:35Z,2020-09-14T15:22:44Z,CLOSED,False,0,6,1,https://github.com/VittGam,options: Remove IPv6 netmask limitation.,1,[],https://github.com/OpenVPN/openvpn/pull/73,https://github.com/schwabe,3,https://github.com/OpenVPN/openvpn/pull/73#issuecomment-692129907,"Hello,
I found that OpenVPN is refusing to configure an IPv6 netmask of less than 64 bits, or more than 124 bits.
This occurred to me in two different specific cases, one with a /128 netmask and another with a /56 netmask, when integrating OpenVPN into an already existing layer 3 network, where creating new subnets was not an option at all.
I had to workaround this apparently artificial limitation with --iroute on the servers, and a custom --up script on the clients. Then things started working as expected.
Maybe this check makes sense on Windows due to the many limitations of its network stack? But I think it definitely does not make sense on Linux.
So I'm proposing to remove this check.
What do you think?
Cheers,
Vittorio",and yes if you have a want a point to point connection a real point to point with peer at both ends and explicit ifconfig-ipv6 should also work. but for the normal server to client mode we don't want to support this.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,74,2016-12-15T11:25:00Z,,2016-12-15T14:20:08Z,OPEN,False,42,13,7,https://github.com/VittGam,Implement the passtos option for IPv6 packets and sockets.,1,[],https://github.com/OpenVPN/openvpn/pull/74,https://github.com/VittGam,1,https://github.com/OpenVPN/openvpn/pull/74,"Hello,
This pull request implements the passtos option for both IPv6 packets (parsing the ToS of IPv6 packets received inside the tunnel) and sockets (setting the ToS of IPv6 encrypted packets sent to the OpenVPN server).
Cheers,
Vittorio","Hello,
This pull request implements the passtos option for both IPv6 packets (parsing the ToS of IPv6 packets received inside the tunnel) and sockets (setting the ToS of IPv6 encrypted packets sent to the OpenVPN server).
Cheers,
Vittorio",True,{'THUMBS_UP': ['https://github.com/nihilus']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,74,2016-12-15T11:25:00Z,,2016-12-15T14:20:08Z,OPEN,False,42,13,7,https://github.com/VittGam,Implement the passtos option for IPv6 packets and sockets.,1,[],https://github.com/OpenVPN/openvpn/pull/74,https://github.com/schwabe,2,https://github.com/OpenVPN/openvpn/pull/74#issuecomment-267307044,"Hello,
This pull request implements the passtos option for both IPv6 packets (parsing the ToS of IPv6 packets received inside the tunnel) and sockets (setting the ToS of IPv6 encrypted packets sent to the OpenVPN server).
Cheers,
Vittorio",Overall the change looks good. We would like to have all patches sent to the mailing list. See the Contributing file for more details.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,74,2016-12-15T11:25:00Z,,2016-12-15T14:20:08Z,OPEN,False,42,13,7,https://github.com/VittGam,Implement the passtos option for IPv6 packets and sockets.,1,[],https://github.com/OpenVPN/openvpn/pull/74,https://github.com/VittGam,3,https://github.com/OpenVPN/openvpn/pull/74#issuecomment-267331987,"Hello,
This pull request implements the passtos option for both IPv6 packets (parsing the ToS of IPv6 packets received inside the tunnel) and sockets (setting the ToS of IPv6 encrypted packets sent to the OpenVPN server).
Cheers,
Vittorio","Ok, I will.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,74,2016-12-15T11:25:00Z,,2016-12-15T14:20:08Z,OPEN,False,42,13,7,https://github.com/VittGam,Implement the passtos option for IPv6 packets and sockets.,1,[],https://github.com/OpenVPN/openvpn/pull/74,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/74#issuecomment-267335129,"Hello,
This pull request implements the passtos option for both IPv6 packets (parsing the ToS of IPv6 packets received inside the tunnel) and sockets (setting the ToS of IPv6 encrypted packets sent to the OpenVPN server).
Cheers,
Vittorio","Hi,
On Thu, Dec 15, 2016 at 05:51:50AM -0800, Vittorio G (VittGam) wrote:
 +link_socket_extract_tos_v6 (struct link_socket *ls, const struct buffer *ipbuf)
 +{
 +  if (ls && ipbuf)
 +    {
 +      struct openvpn_ipv6hdr *ip6h = (struct openvpn_ipv6hdr *) BPTR (ipbuf);
 +      ls->ptos = ((ip6h->version_prio & 0x0f) << 4) | (ip6h->flow_lbl[0] >> 4);

 It's handling a single byte, so it should be... Anyway I'm going to test this on an OpenWrt/LEDE big-endian router too.
I'm not sure if relevant: at this point, does the code know that the buffer
is indeed big enough, that is, ""larger than sizeof(openvpn_ipv6hdr)""?

gert
…
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,74,2016-12-15T11:25:00Z,,2016-12-15T14:20:08Z,OPEN,False,42,13,7,https://github.com/VittGam,Implement the passtos option for IPv6 packets and sockets.,1,[],https://github.com/OpenVPN/openvpn/pull/74,https://github.com/VittGam,5,https://github.com/OpenVPN/openvpn/pull/74#issuecomment-267338348,"Hello,
This pull request implements the passtos option for both IPv6 packets (parsing the ToS of IPv6 packets received inside the tunnel) and sockets (setting the ToS of IPv6 encrypted packets sent to the OpenVPN server).
Cheers,
Vittorio","Yes and no: yes, because the is_ipv_X in proto.c checks that the packet is at least sizeof(struct openvpn_iphdr) (20 bytes) large, and so in this particular case it's kind of okay because the ToS is in the first two bytes of the IPv6 packet; no, because the is_ipv_X function should check against sizeof(struct openvpn_ipv6hdr) (40 bytes) for an IPv6 packet. So I guess that's going to be another patch! :)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,75,2016-12-28T06:23:33Z,2018-04-11T16:23:42Z,2018-04-11T16:23:42Z,CLOSED,False,1,1,1,https://github.com/grawity,systemd: do not enforce possibly conflicting options,1,[],https://github.com/OpenVPN/openvpn/pull/75,https://github.com/grawity,1,https://github.com/OpenVPN/openvpn/pull/75,Some of my tunnel configs use lport and now OpenVPN refuses to start them.,Some of my tunnel configs use lport and now OpenVPN refuses to start them.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,75,2016-12-28T06:23:33Z,2018-04-11T16:23:42Z,2018-04-11T16:23:42Z,CLOSED,False,1,1,1,https://github.com/grawity,systemd: do not enforce possibly conflicting options,1,[],https://github.com/OpenVPN/openvpn/pull/75,https://github.com/dsommers,2,https://github.com/OpenVPN/openvpn/pull/75#issuecomment-380512655,Some of my tunnel configs use lport and now OpenVPN refuses to start them.,"This is the wrong fix. This changes the behaviour to use the same local port as remote port by default for all configuration, regardless of --lport is used or not.  I believe a better solution is that --no-bind gets ignored if --lport is present in the configuration - which means, adopting this change in options.c instead.
And we don't do pull requests via GitHub.  We only discuss patches here.  Final patch must always be sent to the mailing list.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,1,https://github.com/OpenVPN/openvpn/pull/76,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/",True,"{'THUMBS_UP': ['https://github.com/Scapal', 'https://github.com/war59312', 'https://github.com/KhaledFahoum', 'https://github.com/chebyrash', 'https://github.com/h1z1', 'https://github.com/NotAFile', 'https://github.com/trochdewei'], 'HEART': ['https://github.com/Scapal', 'https://github.com/war59312', 'https://github.com/chebyrash', 'https://github.com/JohnKiller', 'https://github.com/h1z1', 'https://github.com/NotAFile']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,2,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-269843163,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","The current Travis error appears to be an unrecognized command-line option under clang on MacOS X only and previous builds of the 2.4_beta2 release also failed [1] in the same way, so please don't use that as reason not to review the above patches...
[1] https://travis-ci.org/OpenVPN/openvpn/builds/178609111",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/fknittel,3,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-271149024,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi ikelos, thanks for pushing this forward! I'll have a look at your updated patch-set in the following days and compare them with my independent ""christmas-rebase"". Maybe together we can get some traction...",True,"{'THUMBS_UP': ['https://github.com/Scapal', 'https://github.com/noahwilliamsson']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,4,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-271150388,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","YES!  That'd be awesome!  5:)
I managed to get it brought up in the community meeting and actually discussed this time!  It appears that everyone thinks it's a good idea, but the project is extremely short staffed on people who can review low level networking code (there might only be one).  You can read the minutes to see what was said.  I don't know if there's any way to help with that, or whether that's an OpenVPN project problem.  I'm not even sure what's required to become a reviewer suitable to accept the patches?
The best I think we can do at the moment is keep this up to date and make sure it doesn't fall off the radar like usual...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/Scapal,5,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-274821212,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/",I'm successfully using this VLAN feature since April 2012 in a business center with about 100 different VLANs. I can't wait to see this feature merged!,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,6,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-274897966,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Thanks!  One of the difficulties we've faced trying to get this patch accepted is that there hasn't been a great perceived demand, so we need everyone who has a use for these patches to speak up.  In particular success stories, such as yours, of these patches (or @fknittel 's originals) having been deployed over large sites without issue, adds to the maturity of these patches.  So thanks the comment!  5:)",True,{'THUMBS_UP': ['https://github.com/sim0nx']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/nategraf,7,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-305984253,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","I am developing a network sandbox for training purposes, and this patch allows multiple tenants to be bridged through a single instance of OpenVPN, bound to a particular sandbox based on the VLAN tag which is applied.
Without this patch, any alternate that I has seen or come up with will break. The breaking point comes on the return journey for a packet, as the only information the host-side tap interface will have for routing the packet back to the correct client is the destination MAC address. With the learn-address functionality, this can work until a client spoofs their MAC address to be the same as another client, or a machine from within a host-side VLAN generates a packet with a destination MAC address for a client which should not has access to the source machine's own VLAN. When that packet hits the host-side tap interface there is simply not enough information to make sure it is routed to the correct client. Duplicate MAC addresses are unlikely to happen in an organic network, but is certainly possible if someone is attempting to maliciously exploit the system, or specific MAC addresses are desired for a training scenario, both of which occur in my case.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,8,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-305984776,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Thanks @nategraf, I'm afraid there's still no news on when this patchset will get reviewed by the OpenVPN team for acceptance, but the last time it was brought up, it was suggested as a good feature for inclusion in the next big release.  Hopefully if we keep getting descriptions, such as yours, of people using this patchset, and the benefits it provides that they can't achieve in another way, it might help convince the developers to dedicate more time to reviewing it...  5:)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,9,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-316838046,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Has any further progress been made in reviewing these patches?  If someone from the OpenVPN development team could respond to indicate that this patch has not been forgotten again, it would be much appreciated...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,10,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329045192,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi @ikelos I have personal interest in these patches and I'd like to give them a look. However I see that they have not been rebased on top of master, but rather that master has been merged several times.
Before reviewing them, I'd really need you to rebase them on top of maser. Could you please do that?
Thanks!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,11,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329085946,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","master in the openvpn repo points to 5fd8e94, but your branch is not based on top of that. Are you sure you have done that properly?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,12,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329091808,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","No, I'm afraid I really don't know how to go about rebasing this.  I keep trying to run through the rebase process, then it tells me I'm behind my other branch, so I try to git pull it, which turns it into a merge and then I have to rebase again and I keep going round in circles...  5:(  I'm sorry, I really don't know git well enough to sort this out.  Do you have a quick set of instructions that could guide me through the process please?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,13,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329099401,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Ok, at this point it will be much easier for me to take the patches from February, manually update them against master and then push that somehow, but I've no idea how to do that against github.  I can produce a set of patches that will apply cleanly to master this evening, but I'm just going to screw something up trying to rebase it (I may have already screwed something up in the rushed merges I made earlier this morning).  5:(",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,14,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329099721,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/",2b547f is the last known good commit on this branch.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/mattock,15,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329101039,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/",@ikelos you can push your rebased work to a different branch and issue a new PR. Or you can rewrite history using git reset in this branch (vlan-patches-v2) and force-push your changes using git push -f origin vlan-patches-v2. The PR will get automatically updated if you force-push.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,16,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329102360,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Thanks @mattock.  So to check, if I git reset this branch (vlan-patches-v2) back to where it first diverged from master, then git pull to get it up to the same place as current master (5fd8e94), and then apply all the patches onto it from that point, and finally force push it, that should leave this pull request and comments in a functioning state?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/mattock,17,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329112358,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Some (code) comments might get hidden, but otherwise I think everything should be fine.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,18,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329163196,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/",@ikelos did you push the branch after the rework? I don't see it :(,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,19,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329286783,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ordex No, not yet, I'm working on it now (I had work earlier I'm afraid).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,20,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329317572,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@mattock that seems to have worked, thanks!  5:)  @ordex I think I've managed to rebase it properly, please let me know if it's still not correct.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,21,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329349934,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos that looks good now! thanks.
As a suggestion, next time you could do something like this:
git rebase -i <openvpn-repo>/master
where <openvpn-repo> is your reference to the OpenVPN repo on GitHub. This will prompt you with an editor listing all the patches that can be applied on top of that. Due to fuzz in your branch there might be more patches than what you expect. You can just remove them from the list and they will be thrown away.
Save and exit from the editor and git will try to apply the patches one by one (like if you were manually doing git-am or git-cherrypick).
Final result should be the same as what you have now :)
I'll try to allocate some time to have a look at the patches soon.
Thanks!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,22,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-329410846,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Not a problem, there were code style changes and a few other bits I managed to neaten up in the process.  Hopefully now it'll be easier to keep it rebased as well...  5:)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,23,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-335263404,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ordex  I meant to bring this up at the community meeting that just passed, but I didn't remember so I thought I'd check in with you and find out how you were getting on with it?  I understand it may not go into 2.4 (given the discussion around major patches) so I'm keen to figure out whatever is preventing it from getting into 2.5.  Previously it appeared to be disinterest in reviewing the feature for inclusion, but since you've shown interest I'm hoping that will change?  Just let us know whatever needs to happen to get this landed mainstream...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,24,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-335322241,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos Hi there! sorry for the lack of feedback so far, the problem is that the change is quite big and it has been challenging to go through it all. (unfortunately my time to allocate on this is limited)
This won't definitely go in 2.4 as that is closed for new features (except very small and worth-while ones), therefore the goal is to merge it for 2.5. I'll try to boost this as much as I can. I really want to see this integrated as well!",True,{'THUMBS_UP': ['https://github.com/nategraf']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,25,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340199386,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ordex, thanks very much for the extensive review!  5:)  I'll need a fair bit of help from @fknittel to make any of the code-shifting changes (as I've mentioned previously my C skills are fine for reading, but not great for writing), but I can make all the stylistic code changes and some of the minor variable placement fixes you suggested.
I've got a couple of questions, firstly where is the current style guide document, so that I can ensure I catch all instances of the improper style, and secondly, could you please advise me on how best I should go about updating this pull-request with my partial fixes (so that @fknittel can work on the rest) without affecting the above comments?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,26,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340231957,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos you can find the codestyle here.
If you want to leave this PR intact with all its comments you have to either add commits to the same branch, without touching old ones, or (maybe better) just create a new branch and work in there. The latter should be safer and will allow you to do whatever you want in the new branch.
Once you are done, you can then push the new branch onto the old one and the PR will be updated (and comments reset)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,27,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340232037,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Ok, great, I'll start a new branch and work on the code style tomorrow.  Thanks again for doing the review, it's much appreciated to see some progress from OpenVPN's side...  5:)",True,{'HOORAY': ['https://github.com/ordex']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,28,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340271003,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Sun, Oct 29, 2017 at 03:27:23PM +0000, ikelos wrote:
 +#define D_VLAN_DEBUG         LOGLEV(7, 72, M_DEBUG)  /* show VLAN tagging/untagging debug info */
I had to look up what the second number is...

/*
 * log_level:  verbosity level n (--verb n) must be >= log_level to print.
 * mute_level: don't print more than n (--mute n) consecutive messages at
 *             a given mute level, or if 0 disable muting and print everything.
 *
 * Mask map:
 * Bits 0-3:   log level
 * Bits 4-23:  M_x flags
 * Bits 24-31: mute level
 */
#define LOGLEV(log_level, mute_level, other) ((log_level) | ENCODE_MUTE_LEVEL(mute_level) | other)

... so, if D_VLAN_DEBUG is likely to create copious output, it makes
sense to pick a unique value here.  If it's just a single line per packet
intermixed with lots of other --verb 7 stuff, maybe ""70"" is more reasonable,
to mute the whole ""level 7"" stuff.

But this logging stuff needs strong review.

For the time being, I'd tend to go for 7/74 or 7/70.

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,29,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340407184,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Ok, I've tried to take in account as many of the suggested changes as I feel I'm able.  Most of the things I haven't changed will need someone with greater C skills to help ( @ordex @fknittel ?).  The branch with the new changes can be found at https://github.com/ikelos/openvpn/tree/vlan-patches-v3.  The vlan.c and vlan.h files require review, since whilst they compile, I've no idea if I've done the right thing with them or not.  The following is a brief description of the comments I haven't (and have) addressed to hopefully make it easier to see what's changed:
Not Changed (need help)

Defining a new struct in mroute_addr
Changing the buf_printf after the new struct change in mroute_addr
Further help in moving things into vlan.c/.h
Do the vlanhdr->tpid check at the beginning of the function
Print some debug message with a high loglevel for dropped packets
Is 0 a valid return?
Use memmove to simplify code
What happens if we both VAF_ONLY_UNTAGGED_OR_PRIORITY and pvid are set?
Drop --vlan-tagging in favour of 'automatic' enablement
Use of an external variable to store ethernet protocol
Figure out/fix whether more tests are necessary?

Changed

AS_HELP_STRING
enclosing string in []
ENABLE_VLAN_TAGGING patch moved to end of patchset
D_VLAN_DEBUG list sorted (changed to mute level 74)
Order of vid parameter changed
No empty line
Erroring out on too short buf
Moving many of the chunks of VLAN code out into a vlan.c
Changed the buf_filter_incoming_8021q_vlan_tag name
Swap ntohs to htons to allow for constant optimization
sizeof eth should read sizeof(eth)
Not declaring one function inside another
Using && !p[1] to prevent additional arguments
Codestyle changes (complete uncrustify run, but without line length which fails often on existing codebase)
Change from VAF to VLAN
Don't remove empty lines without reason
Move a constant last

I'm not sure what the next move is from here, but just let me know and if I can get it done, I will...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,30,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340413655,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos thanks a lot! you were embarrassingly fast to get back with the first set of changes :)
@fknittel do you have any free cycle to help @ikelos here? Otherwise I can try to allocate some time myself, but I am not sure if I'll be able to work on this any time soon.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,31,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340420075,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos , can you please enable builds for your repo on https://travis-ci.org ?
(I merged your branch, some builds fail: https://travis-ci.org/chipitsine/openvpn/builds/294808214 )",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,32,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340427844,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi @chipitsine , I've enabled travis-ci.org for the repository, and I tried resolving what I thought the issue was (by making sure multi.h was included in vlan.h) but as I've mentioned earlier in this bug report my C skills are rudimentary at best, and the same test failed again.  If you'd be able to suggest how to fix the issue, or provide a patch, I'd be more than happy to reconstruct the patchset to include it...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,33,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340435655,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos , conglaturation, you are on the right way :)
since you know, which configuration is failing, you can reproduce it locally (and save some travis-ci computing time)
I'll have a look as well",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,34,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340437915,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Thanks, I haven't got clang configured on my local system, but as best I can see from the lines reported in the travis logs, clang jobs that succeed have -I/home/travis/opt/include in the command line, but that's not present in the line that's failing.  Is there a way to force a build of the current master of that repo, to make sure that it's not present in the unpatched version (and therefore, not something I can/should fix)?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,35,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340439060,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","there're a lot of noise from clang, do not pay attention to it
(openvpn mixes CFLAGS with CPPFLAGS and LDFLAGS, which is not good from clang' point of view)
I'd pay attention to https://travis-ci.org/ikelos/openvpn/jobs/294820394#L1834 first
""use of undeclared....""
are those things defined with --disable-crypto ?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,36,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340439949,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","https://travis-ci.org/ikelos/openvpn/jobs/294820394#L1883-L1887 - this is just a noise
(if I will ever have a time and will, I'll fix that)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,37,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340441216,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","as for current master, it is green https://travis-ci.org/OpenVPN/openvpn
(however, you can push fake commit to your fork and force a build that way)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,38,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340483403,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Right, after a lot of messing around and letting Travis recompile things with different headers for me, I've managed to squash those errors (they're defined in ""options.h"" which I wasn't explicitly including).  I'm still hitting the other errors, so at this point I'm going to need someone who actually knows C to help me figure out what's causing these failures (because I'm not getting very far with just my own knowledge to rely on).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,39,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340513361,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ordex , as an owner of this repo ... what do you think ... if we add ""help wanted"" tag to this PR ?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/selvanair,40,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340523941,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Right, after a lot of messing around and letting Travis recompile things with different headers for me, I've managed to squash those errors (they're defined in ""options.h"" which I wasn't explicitly including). I'm still hitting the other errors, so at this point I'm going to need someone who actually knows C to help me figure out what's causing these failures (because I'm not getting very far with just my own knowledge to rely on).

The build is failing only when --disable-crypto is used. When crypto is disabled there is no point-to-multipoint support and failure is kind of expected as vlan.c depends on multi_context. Probably you want code in vlan.c conditional on P2MP_SERVER is defined or some such.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,41,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340532507,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Awesome, thanks!  I'll try adding that as soon as I get a chance.  5:)
…
On Mon, 30 Oct 2017, 17:36 Selva Nair, ***@***.***> wrote:
 Right, after a lot of messing around and letting Travis recompile things
 with different headers for me, I've managed to squash those errors (they're
 defined in ""options.h"" which I wasn't explicitly including). I'm still
 hitting the other errors, so at this point I'm going to need someone who
 actually knows C to help me figure out what's causing these failures
 (because I'm not getting very far with just my own knowledge to rely on).

 The build is failing only when --disable-crypto is used. When crypto is
 disabled there is no point-to-multipoint support and failure is kind of
 expected as vlan.c depends on multi_context. Probably you want code in
 vlan.c conditional on P2MP_SERVER is defined or some such.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#76 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ABaM1TFCoY3d09GbhIaWdRDdjfE7TSlwks5sxgk4gaJpZM4LYdvG>
 .",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,42,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340581204,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos, can you please also check ""--disable-crypto --disable-vlan-tagging"" ?
https://travis-ci.org/chipitsine/openvpn/jobs/294994413",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,43,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340637446,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@selvanair Thanks very much, that worked and Travis now builds it successfully!  5:)
@chipitsine I tested this manually and it succeeded.  Is there a way I should be checking this through Travis?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,44,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340639185,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ordex , as an owner of this repo ... what do you think ... if we add ""help wanted"" tag to this PR ?

sure we can!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,45,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340815828,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos - as this PR adds ""--disable-vlan-tagging"" to configure, it would be really nice to add such an option to travis-ci matrix (what would be your suggestion regarding that ?)
also, there's buildbot CI
https://community.openvpn.net/openvpn/wiki/SettingUpBuildslave
probably, ""--disable-vlan-tagging"" should go there as well",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,46,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-340830131,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@chipitsine There are a number of flags that aren't included in the Travis-ci matrix (async-push, lz4, pkcs11, plugins, iproute2, systemd, etc.) so I'm not sure what would warrant inclusion.  I'm happy for it to happen if the openvpn guys want it, but I'd sooner leave it to them (since they set up the integration), than try and figure out how to add it, get it wrong, and then be told it shouldn't have been added in the first place.  5;P",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,47,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-341052931,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos , not including (async-push, lz4, .. ) to build matrix is a bad reason for not including --disable-vlan-tagging
I agree, that we need to merge this PR first, let it settle a bit, and after that think about extending build matrix",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,48,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-341053497,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Wed, Nov 01, 2017 at 09:34:53AM +0000, Ilya Shipitsin wrote:
 @ikelos , not including (async-push, lz4, .. ) to build matrix is a bad reason for not including --disable-vlan-tagging

 I agree, that we need to merge this PR first, let it settle a bit, and after that think about extending build matrix
And then there is the question on whether it should be --enable-vlan-tagging,
defaulting to ""unmodified code paths"", or maybe no configure switch at
all, ensuring all code gets actually build and tested without yet another
duplication of test setups.

gert
…
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,49,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-341054399,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","as far as I remember, there's idea of @ordex to ""add a posibility to disable extra overhead dfor WRT devices"", but to ""include vlan tagging in other builds""
maybe, we should move it to --enable-small ?
I agree that ""the less configure options, the better""",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,50,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-341054728,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Wed, Nov 01, 2017 at 02:41:42AM -0700, Ilya Shipitsin wrote:
 as far as I remember, there's idea of @ordex to ""add a posibility to disable extra overhead dfor WRT devices"", but to ""include vlan tagging in other builds""

 maybe, we should move it to --enable-small ?

 I agree that ""the less configure options, the better""
How much extra code+data are we talking about?

That is, running

  size openvpn

with and without vlan tagging enabled, how does the output look like?

gert
…
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,51,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-341055211,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@cron2 , I agree that we should compare ""size"", but there's runtime memory overhead as well. all those vlan in memory structures waist more memory on every connection (but I did not yet estimated)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,52,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-341060638,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Wed, Nov 01, 2017 at 09:45:11AM +0000, Ilya Shipitsin wrote:
 @cron2 , I agree that we should compare ""size"", but there's runtime memory overhead as well. all those vlan in memory structures waist more memory on every connection (but I did not yet estimated)
This needs to be evaluated as well, but I would be surprised if it's more
than a few bytes per connection.

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,53,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-345389745,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/",I really don't want my lack of knowledge of a particular language to be the element blocking this from moving forward.  Could anyone else donate a little time to make the suggested changes from the review?  I've summarized them and would be happy to help any way I can.  It feels like this may be one of the last hurdles to getting this feature (now nearly 8 years old) in to 2.5.  Please can anyone with the necessary skills help get it over the finish line?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,54,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-345413640,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos as you can read here, during the last hackathon the VLAN patches have been mentioned as something to get in the next release (2.5). I expect this to take some time, but eventually it will hopefully be pulled onto somebody's plate (I am willing to do that at some point this year).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,55,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-345435700,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","That's great news, thanks.  5:)  I didn't see that go past on the mailing list, and I was very worried that it'd lose any momentum it had picked up after I hit the limits of what I could fix.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,56,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-362239872,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","So happy New Year and so on to everybody.  Hopefully people had a good break?  It's time for me to post a reminder that this bug needs help.  @ordex, given the 2.4.5 release, what is your schedule looking like for helping out with making the remaining changes you requested in your review?  I'm concerned that the longer between the review and the changes, the more people will feel less like working on it and decide that another review is necessary.  Given this first review took a very long time to achieve, I'd really prefer not to have to jump the same hurdle again.  @fknittel we're only about 4 months away from your original trac request/patches turning 8 years old!  Do you have time to help get it past this review and hopefully committed?
As a reminder the (freshly rebased) branch to be looking at is:
https://github.com/ikelos/openvpn/tree/vlan-patches-v3
And the changes I wasn't able to make on my own are listed below (this branch/PR has been left as is so the review comments can be seen/checked without disruption).
Not Changed (need help)
Defining a new struct in mroute_addr
Changing the buf_printf after the new struct change in mroute_addr
Further help in moving things into vlan.c/.h
Do the vlanhdr->tpid check at the beginning of the function
Print some debug message with a high loglevel for dropped packets
Is 0 a valid return?
Use memmove to simplify code
What happens if we both VAF_ONLY_UNTAGGED_OR_PRIORITY and pvid are set?
Drop --vlan-tagging in favour of 'automatic' enablement
Use of an external variable to store ethernet protocol
Figure out/fix whether more tests are necessary?

If anyone else knows C well and wants to help a massively useful capability get added to OpenVPN (which has been successfully run at a large University for 5+ years and a medium-sized multinational for 1 year) then please dive in.  I'll happily take submissions, patches, pull requests, anything to help get this supported in the main branch...  5:)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,57,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-362891042,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos thanks for resuming the discussion.
I expressed several times my intention in moving this forward, but the amount of work in this period + the amount of other projects requiring attention is preventing me from doing anything concrete....can't make any promise right now, but this PR is still in my todo list.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,58,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-380791138,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi everybody, I thought today would be an auspicious day to remind everyone that this issue is still open, hasn't been forgotten and is now officially 8 years old on this very day [1]!!!!
I can keep rebasing these patches so that they apply cleanly, but the reviewed changes that require significant refactoring of the C code are beyond my abilities.  The longer the patches don't get sorted, the more likely we'll need another review before they can go in, and even getting this review in the first place took over a year.  So please, anyone that can look at the few remaining changes, please, please, please consider contributing some of your time and skill help to ensure that this feature gets into the mainline.  Thanks!
[1] http://thread.gmane.org/gmane.network.openvpn.devel/3489",True,{'THUMBS_UP': ['https://github.com/mawist']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,59,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-395992488,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","This isn't dead.  Anyone that can help, please do.  Don't forget this exists, all the code necessary to get this upstreamed is at [1], it's been reviewed twice over the years and it just needs a little love and expertise to make it part of the main software.  @ordex Any update you can give us on your availability would be much appreciated.  Thanks...
[1] vlan patches v3",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,60,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-402082277,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","I am pulling this code into my repo and merging it with my experimental branch. I can't estimate when it will be merged (we have other big patchsets undergoing review right now and the process is already slow because maintainers are overloaded), however, it's just a way to say that it's in my TODO list and will eventually get there....
Unfortunately it seems that there is no interest on this feature other than from few community users :(",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,61,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-402082519,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Note: I have moved all my projects to GitLab, therefore you can find my code there (username: ordex986)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,62,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-402085783,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi @ordex, thanks for letting us know that there is at least still some interest from the openvpn maintainers for this 8 year old feature!  Until they remove the layer 2 support from OpenVPN it's one of the easiest ways to get full VLAN support across a VPN (after this patchset has been applied).  Whilst there may only be a small number of users showing interest in this feature at the moment, it's evidently stood the test of time since, despite hurdle after hurdle being put in front of those trying to get this feature into openvpn, there is still interest in upstreaming them for others to use.  I hope your inclusion into your experimental branch is one of the few remaining steps in that process...  5:)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,63,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-402086613,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/",Please make sure you used the latest code (vlan-patch-v3) since this contains the bulk of the changes you requested from the code review from last October.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,64,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-424257490,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ordex, could you please give us an update on the progress made in the last 3 months?  I know you said there were other large patchsets being worked on, but hopefully they haven't completely taken away attention from this 8+ year old issue?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,65,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-424264538,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Tue, Sep 25, 2018 at 01:46:17AM -0700, ikelos wrote:
 @ordex, could you please give us an update on the progress made in the last 3 months?  I know you said there were other large patchsets being worked on, but hopefully they haven't completely taken away attention from this 8+ year old issue?
Antonio, Arne and I will work on the VLAN patchset over the next weeks.

We'll meet in Lviv at the Hackathon and discuss details.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,66,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-424266370,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Awesome, that's great to hear, thanks!  5:D",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,67,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-427647253,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi Fabian,
On Sun, Jan 08, 2017 at 04:48:44AM -0800, Fabian Knittel wrote:
 Hi ikelos, thanks for pushing this forward! I'll have a look at your updated patch-set in the following days and compare them with my independent ""christmas-rebase"". Maybe together we can get some traction...
We're now working on this in earnest, and find the situation a bit
confusing, to be honest.  Our fault for not doing this in a more timely
fashion, but still, a few different patch sets floating around.

So, what would your recommendation (based on the comment above) be how
to start?  Start with this PR?  Or with your christmas-rebase?

The original git URL git://fsmi-dev.fsmi.uni-karlsruhe.de/openvpn.git
seems to be ""private"" (or went away), at least I cannot get at it - I
get connection refused errors.  So we wouldn't know where the christmas-
rebase is, anyway... :)

thanks in advance,

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,68,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-427647879,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hiya Gert,

I'm not sure Fabian's been keeping up with the progress.  As best I'm
aware, most of the changes from the review that I could address are stored
in the following branch:

https://github.com/ikelos/openvpn/tree/vlan-patches-v3?files=1

Please let me know if there's any questions I may be able to answer about
it.  I may have to defer to Fabian on some of them though.  Hope that
helps, really glad to see this getting your attention, thanks!  5:)

Mike 5:)
…
On Sun, 7 Oct 2018, 12:51 Gert Doering, ***@***.***> wrote:
 Hi Fabian,

 On Sun, Jan 08, 2017 at 04:48:44AM -0800, Fabian Knittel wrote:
 > Hi ikelos, thanks for pushing this forward! I'll have a look at your
 updated patch-set in the following days and compare them with my
 independent ""christmas-rebase"". Maybe together we can get some traction...

 We're now working on this in earnest, and find the situation a bit
 confusing, to be honest. Our fault for not doing this in a more timely
 fashion, but still, a few different patch sets floating around.

 So, what would your recommendation (based on the comment above) be how
 to start? Start with this PR? Or with your christmas-rebase?

 The original git URL git://fsmi-dev.fsmi.uni-karlsruhe.de/openvpn.git
 seems to be ""private"" (or went away), at least I cannot get at it - I
 get connection refused errors. So we wouldn't know where the christmas-
 rebase is, anyway... :)

 thanks in advance,

 gert


 --
 ""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never
 doubted
 it myself till I met a computer with a sense of humor.""
 Robert A. Heinlein, The Moon is a Harsh Mistress

 Gert Doering - Munich, Germany ***@***.***

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#76 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ABaM1aOhbmmlXc2JCK_VOS6mCqpkp0vbks5uieq5gaJpZM4LYdvG>
 .",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,69,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-427676404,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi Gert,

Am So., 7. Okt. 2018 um 13:51 Uhr schrieb Gert Doering <gert@greenie.muc.de
:
 On Sun, Jan 08, 2017 at 04:48:44AM -0800, Fabian Knittel wrote:
 > Hi ikelos, thanks for pushing this forward! I'll have a look at your
updated patch-set in the following days and compare them with my
independent ""christmas-rebase"". Maybe together we can get some traction...

 We're now working on this in earnest,
That's great news :-)
 and find the situation a bit
 confusing, to be honest.  Our fault for not doing this in a more timely
 fashion, but still, a few different patch sets floating around.
A short overview of my relevant patchsets:

Apparently I never pushed my christmas rebase, as I never managed to do
more than compile testing. I did find the rebase though and pushed it to <
https://github.com/fknittel/openvpn/tree/feat_vlan_compiletested>. It
mostly contains the changes needed to comply with the new code style. It
also includes a hopefully more robust approach to how the vid is added to
mroute_addr (less manual size calculations, more compiler support).

If you instead want to base your work on patches that are used in
production (i.e. not only compile-tested), have a look at <
https://github.com/fknittel/openvpn/tree/feat_vlan_2.3.4> or (to avoid the
slight rebase bit-rot that might have been introduced) check out the first
release <https://github.com/fknittel/openvpn/releases/tag/feat_vlan%2Fr15>.
(The stuff under the original fsmi-dev git URL is still available under a
slightly different hostname, but my github fork is a full superset.)
 So, what would your recommendation (based on the comment above) be how
 to start?  Start with this PR?  Or with your christmas-rebase?
I'm not entirely sure. Maybe Mike can clarify what kind of testing his
branch has undergone. I know that he worked on a bunch of additional
improvements, but I never got around to doing any kind of proper review. I
apparently started to refactor my christmas branch towards a similar
approach to make a direct diff easier, but that work remained unfinished.
(Memory is very hazy on the details and the workspace doesn't quite compile
...)

I hope that was helpful in some way - if you have any further questions,
please don't hesitate. If you need a more direct line of communication, I'd
be up for that too.

Cheers, Fabian

PS: I lost my test setup a few years ago, so I currently can't do more than
compile testing. I assume that my friend at university - who is using the
patches in production - would be happy to test stuff though.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/fknittel,70,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-427676579,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","(Erm sorry, that reply somehow shows up as originating from gert, while it was obviously mine. Possibly responded to the wrong mail address?!)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,71,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-427678128,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hiya,

The branch I pointed to is in production use for a company of about 300
users, and it does have many of the changes from the review mentioned, but
I'm happy to defer to Fabian given he's the original author and understands
the code better.  I believe mine has been rebased on 2.4.6 (I think I got
it back in sync in September).  I'm happy for you to work on whichever is
best for you though... 5:)

Mike  5:)
…
On Sun, 7 Oct 2018, 19:43 Fabian Knittel, ***@***.***> wrote:
 (Erm sorry, that reply somehow shows up as originating from gert, while it
 was obviously mine. Possibly responded to the wrong mail address?!)

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#76 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ABaM1dAz0qTiPeZ7PCy7selmV-0fGRWSks5uiktYgaJpZM4LYdvG>
 .",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,72,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-430532754,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","I see that the Hackathon is over, but I couldn't find any mention in the summary about this pull request, which it sounded from your comments like you were going to work on.  @cron2 Could you let us know where you and the team got to and which branch you eventually decided to proceed with please?  5:)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,73,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-430544014,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ikelos we're starting from your latest branch. In https://community.openvpn.net/openvpn/wiki/StatusOfOpenvpn25 , https://community.openvpn.net/openvpn/wiki/LvivHackathon2018#featuresin2.5thatwewant and https://community.openvpn.net/openvpn/ticket/6 you can see that it is a must have of OpenVPN 2.5, which we are targeting to freeze (hence have the first beta) by the end of the year (if everything goes well, of course).
Therefore keep your engine warm because we'll need testing ;)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,74,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-430547937,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Certainly, that sounds awesome. Thanks!  5:)
…
On Wed, 17 Oct 2018, 09:49 Antonio Quartulli, ***@***.***> wrote:
 @ikelos <https://github.com/ikelos> we're starting from your latest
 branch. In https://community.openvpn.net/openvpn/wiki/StatusOfOpenvpn25 ,
 https://community.openvpn.net/openvpn/wiki/LvivHackathon2018#featuresin2.5thatwewant
 and https://community.openvpn.net/openvpn/ticket/6 you can see that it is
 a must have of OpenVPN 2.5, which we are targeting to freeze (hence have
 the first beta) by the end of the year (if everything goes well, of course).
 Therefore keep your engine warm because we'll need testing ;)

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#76 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/ABaM1cXLk1IL9_4HBrfNcbIedHCCGV5Fks5ulu8JgaJpZM4LYdvG>
 .",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,75,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-431102400,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi @fknittel , could you please clarify where I should look to find what you refer to with ""It also includes a hopefully more robust approach to how the vid is added to mroute_addr (less manual size calculations, more compiler support).""?
Thanks!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/fknittel,76,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-431679480,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ordex It's only a minor change.
Have a look at commit fknittel@38c6ad7
Instead of accessing maddr->raw_addr and using address calculations (+6) to set/get the mac vs vid, the maddr->eth_addr is now a proper struct.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,77,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-432567247,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@fknittel oh ok - yeah I have seen that, good change. I thought you were referring to something else and I wanted to be sure I wasn't missing it ;)
Thanks!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,78,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-444707855,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/",Since it feels like we're getting closer to the point of 2.5_beta1 coming out (according to the StatusOfOpenvpn25 wiki page) do you need any help with this feature?  Is there anything else people can do to help ensure this feature is solid and stable when it lands?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,79,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-444772517,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Wed, Dec 05, 2018 at 04:53:48PM -0800, ikelos wrote:
 Since it feels like we're getting closer to the point of 2.5_beta1
 coming out (according to the StatusOfOpenvpn25 wiki page) do you
 need any help with this feature?  Is there anything else people can
 do to help ensure this feature is solid and stable when it lands?
We'll call for testing as soon as it is in master :-) - right now we're
still trying to organize ourselves around ""vlan"", ""async client connect""
and ""all the rest in patchwork"".  Working on it...

As far as our planned 2.5_beta1 / 2.5.0 release schedule is concerned,
we're very unlikely to make it - we thought we could do it, but other
projects interfered and all of a sudden it's Christmas time again
(surprise).  Apologies for that.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,80,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-444813587,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","No problem, just didn't want to leave you guys on your own.  5:)  Thanks for the update!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,81,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493683371,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@ordex @cron2 @mattock
I wanted to check how progress was going?  Given the initial expectation was for some form of release containing the patches upstream to come in December 2018, and it's now been 5 months without sight of 2.5 or even a downloadable beta, it somewhat begs the question whether the target was wildly unrealistic, whether the work's being done in private or whether effort just fell off?  The git repos don't make any mention of 2.5 that I can find and I'm concerned that 2.5 is becoming a unicorn that will be all things to all people, if only it existed.
I'm trying to draw a very fine line between annoying you by asking questions too often, and getting frustrated that a patch that's been in trac for 9 years is being forgotten.  The VLAN patch is classed on the 2.5 status page as both ""must have"" and planning, whilst every other ""must have"" feature is pending review.  I'm not sure I understand why a patchset that's been: available for review for 9 years, undergone review 2 times, been updated as requested by the core developers (as much as possible), been left too long by the same developers that it now requires another review all whilst being used in production in at least 2 large institutions; is now classed as planning?  The last update nearly half a year ago was that it's been taken into the hidden codebase for 2.5, where it hasn't been heard from since.  The fact that I have to keep asking about updates rather than them being posted here does not inspire confidence that the team is working on it.
The lack of updates, instead, suggests that the ""community"" nature of openvpn is failing (as was identified over a two years ago when I first tried to get this patch added).  If openvpn-2.5 isn't being developed in the open, but has been flagged as a future endeavour, then providing actual updates needs to happen, as much to motivate you guys to keep the code being developed, as to keep contributors who are waiting, such as myself, feeling as though our efforts haven't been discarded...  5:\",True,{'THUMBS_UP': ['https://github.com/NotAFile']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,82,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493687810,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Sat, May 18, 2019 at 07:58:37AM -0700, ikelos wrote:
 @ordex @cron2 @mattock

 I wanted to check how progress was going?  Given the initial
 expectation was for some form of release containing the patches
 upstream to come in December 2018, and it's now been 5 months without
 sight of 2.5 or even a downloadable beta, it somewhat begs the
 question whether the target was wildly unrealistic, whether the
 work's being done in private or whether effort just fell off?  The
 git repos don't make any mention of 2.5 that I can find and I'm
 concerned that 2.5 is becoming a unicorn that will be all things
 to all people, if only it existed.
The target was wildly unrealistic and people got sucked into other
projects (""management priorities"") :-( - we've been picking up slack
in the last weeks and at least gotten one of the larger patchsets for
2.5 (sitnl) ACKed and halfway merged.

There's a wiki page about 2.5, but it's also not very explicit about
the ""when and what""

  https://community.openvpn.net/openvpn/wiki/StatusOfOpenvpn25

... but it still lists the VLAN patch set as ""must have"" :-)
 I'm trying to draw a very fine line between annoying you
Oh, you're in good company here... I'm very much annoyed myself with
our lack of progress.  Our processes work by having teams work on
things (""one programs, one reviews and ACKs"") and if people never have
time *at the same time* this is abysmally slow.

[..]
 The lack of updates, instead, suggests that the ""community"" nature of
 openvpn is failing (as was identified over a two years ago when I first
 tried to get this patch added).
I haven't given up on this (the ""community can make it work""), but we've
had some fairly heated discussions in private.

I'm not going into details on why or what is not working as it should,
but you're certainly welcome to join us for one of our meetings,
nowadays alternating between Wednesday 11:30 (MEDT) and Thursday 20:00
(MEDT).

  https://community.openvpn.net/openvpn/wiki/IrcMeetings

... one of the regular topics is ""2.5"", and ""why is there no progress"".

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/h1z1,83,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493687837,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","What is it these patches offer that the OS doesn't?  Relying on user software to potentially dictate network access control is quite a risk.  There's nothing from what I can tell that affords half the features from a traditional deployment, like offloading.   The same argument could be made for bonding.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,84,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493688410,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Sat, May 18, 2019 at 09:04:04AM -0700, h1z1 wrote:
 What is it these patches offer that the OS doesn't?
Put a given user's packets into the right VLAN.

If you want to do that on the OS level you need MAC-address based VLANs,
which (as far as I am aware) no host OS supports - and then you are on
the mercy of the client to actually be honest about its MAC address
(which is currently neither configured nor enforced by OpenVPN)
 Relying on user software to potentially dictate network access control is quite a risk.  There's nothing from what I can tell that affords half the features from a traditional deployment, like offloading.   The same argument could be made for bonding.
No idea why offloading or bonding plays a role in this...?

The point here is that it's not ""user software"" but ""the server side""
which enforces the VLAN mapping for the user.  And this is what this
feature is about: put client A into vlan 1, client B into vlan 2,
and talk ""tagged VLAN"" on the tap interface towards the host, where
a vlan-aware bridge can do the right thing with the packets.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,85,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493688677,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@cron2, Thanks for the response, I did check out the status page, but without dates and no visibility of how recently things changed, it's very difficult to use it to determine progress.  A log at the bottom, updated each community meeting, might help people see how quickly things are moving (particularly given the repo isn't publicly available) behind the scenes.  I have asked for status updates on this patch in particular at some of the community meetings, but that was commonly delayed to another meeting and quickly dismissed, so I've given up trying.  I wouldn't want to inflict myself upon your meetings directly, I think this bug proves that I can be quite verbose given the opportunity and I'm not sure it would lead to any useful change.  5;)  I'll let you guys carry on, but hopefully we'll hear something more on this somewhere before the end of the year...  5:S
@h1z1, The user authentication is currently handled by OpenVPN, and essentially it would be nice to have a way of differentiating users based on their authentication.  The easiest way to achieve this (and add a feature standard to layer 2 switches for nearly a decade) would be to add support for 802.1q (or VLANs), which is what this patch tries to achieve.  It's not clear how it would be possible to offload tying the authentication to the packets in a secure manner otherwise?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/h1z1,86,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493690586,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","On Sat, May 18, 2019 at 09:04:04AM -0700, h1z1 wrote: What is it these patches offer that the OS doesn't?

Put a given user's packets into the right VLAN. If you want to do that on the OS level you need MAC-address based VLANs, which (as far as I am aware) no host OS supports - and then you are on the mercy of the client to actually be honest about its MAC address (which is currently neither configured nor enforced by OpenVPN)

That should be part of your admission requirements.  You shouldn't care what MAC the client uses but you certainly can enforce it.

Relying on user software to potentially dictate network access control is quite a risk. There's nothing from what I can tell that affords half the features from a traditional deployment, like offloading. The same argument could be made for bonding.
No idea why offloading or bonding plays a role in this...?

They are two comon deployment cases.  Off the top of my head there are a few scenerios where you would not necessarily trust the host to add vlan information rather resort to hardware upstream.  Point was bonding is not part of openvpn either yet would be a benefit to support natively.  The roaming mobile user for example.

The point here is that it's not ""user software"" but ""the server side"" which enforces the VLAN mapping for the user. And this is what this feature is about: put client A into vlan 1, client B into vlan 2, and talk ""tagged VLAN"" on the tap interface towards the host, where a vlan-aware bridge can do the right thing with the packets. gert

Which you can do already with pre/post scripting.  You get the added benefit of leveraging hardware support where it exists since you're using the OS.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/chipitsine,87,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493695171,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","@mattock, can you provide current status of vlan patchset ?
it was promised to be discussed on last hathakon, was it discussed and what was the result ?
also, can we add vlan patchset to the next community meeting and tell @ikelos  there what is going on, what is already done, so on, so on ...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,88,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493698784,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Sat, May 18, 2019 at 09:45:19AM -0700, h1z1 wrote:
 That should be part of your admission requirements.  You shouldn't care what MAC the client uses but you certainly can enforce it.
This is not what OpenVPN can do today - so while certainly feasible, it
would be another patch set, for another day.
 > Relying on user software to potentially dictate network access control is quite a risk. There's nothing from what I can tell that affords half the features from a traditional deployment, like offloading. The same argument could be made for bonding.
 > No idea why offloading or bonding plays a role in this...?

 They are two comon deployment cases.  Off the top of my head there are a few scenerios where you would not necessarily trust the host to add vlan information rather resort to hardware upstream.  Point was bonding is not part of openvpn either yet would be a benefit to support natively.  The roaming mobile user for example.
There are lots of features in OpenVPN that are there because someone
found them useful enough to implement them :-) - just that something is
not there today doesn't mean ""we have looked at it and dismissed it
as not useful"" - more like ""nobody brought forward a compelling use
case and working code"".

Fabian did, so we're committed to have this in 2.5, whenever that
is going to happen.
 >The point here is that it's not ""user software"" but ""the server side"" which enforces the VLAN mapping for the user. And this is what this feature is about: put client A into vlan 1, client B into vlan 2, and talk ""tagged VLAN"" on the tap interface towards the host, where a vlan-aware bridge can do the right thing with the packets. gert

 Which you can do already with pre/post scripting.  You get the added benefit of leveraging hardware support where it exists since you're using the OS.
You can't do that today with an OpenVPN server instance, no matter how
you script.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,89,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493698910,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Sat, May 18, 2019 at 10:54:19AM -0700, Ilya Shipitsin wrote:
 @mattock, can you provide current status of vlan patchset ?

 it was promised to be discussed on last hathakon, was it discussed and what was the result ?

 also, can we add vlan patchset to the next community meeting and tell @ikelos  there what is going on, what is already done, so on, so on ...
Ilya, please just read what I wrote about an hour ago.  I already gave
a current status.

""Put it on the agenda"" is not magically going to get the patches
into the right for acceptance nor going to get them reviewed.  Arne
and Antonio are on it, but other committments are stealing time.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/h1z1,90,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493705437,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","You can't do that today with an OpenVPN server instance, no matter how you script.

Funny thing is I do.
cheers",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,91,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-493706235,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Sat, May 18, 2019 at 01:35:32PM -0700, h1z1 wrote:
 > You can't do that today with an OpenVPN server instance, no matter how you script.

 Funny thing is I do.
How so?

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,92,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-530118226,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi all, good news!
The code has been massaged and we finally have a new patchset ready for testing and further review.
More details are available at: https://community.openvpn.net/openvpn/ticket/6#comment:5
Since my code is hosted on GitLab (I moved away from GH a bit ago), I would really like to continue this discussion on our community tracker at the link provided above.
Please go there and read the update!
Thanks :-)",True,{'THUMBS_UP': ['https://github.com/ikelos']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,93,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-530172416,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","That's great news, thanks @ordex!  I was wondering where development was happening these days, but I hadn't realized it had moved to Gitlab!
I don't know that I can push a complete build to our test systems, but I'll see if I can backport the patches to 2.4.7 which will be much easier to put on one of existing boxes for testing...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,94,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-530240707,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Tue, Sep 10, 2019 at 05:40:59PM -0700, ikelos wrote:
 I don't know that I can push a complete build to our test systems, but I'll see if I can backport the patches to 2.4.7 which will be much easier to put on one of existing boxes for testing...
If you have a working 2.4.7 config, using git master with the same config
""should just work"" - we've taken great care to not introduce incompatibilities
or change behaviour.

Backporting network related patches from git master to 2.4 can be somewhat
problematic if they touch routing code, which has changed quite a bit with
the SITNL patchset.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ordex,95,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-530246045,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","I agree with Gert: backporting may be tedious and, on top of that, you'd end up testing code that is not really the one in my branch, thus voiding the test itself.
About development: it just happens ""everywhere"". On GitLab I just have my own personal repo.
Cheers",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,96,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-552093593,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,

it has been done!   The reworked VLAN patchset has now been reviewed
twice (by Arne and me), fairly thoroughly tested with a heap of VMs
talking to each other tagged/untagged etc., merged and pushed.

We have decided to leave out the part about making it conditional, as
it only changes about 4k in code size, which does not make the additional
maintenance worth it.

So git master has everything now.

Please test and let us know if anything is not working right...

gert

PS: we will not do a backport to 2.4, but ""in theory"" it should be
mostly straightforward.  Context will be different in places (options.c,
Makefile.ac) but the forwarding code is mostly unchanged 2.4 -> master.
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,"{'HEART': ['https://github.com/ikelos', 'https://github.com/NotAFile']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/ikelos,97,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-552094378,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Awesome, thanks!  I'm afraid I still haven't found time to build/test the beta on a quiet part of our systems, but I'll try and get to it before the end of the year, pending free time.
Thanks for reviewing and merging it, I'm so glad it's finally a standard feature of openvpn!  5:D",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,98,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-552100856,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/","Hi,
On Sat, Nov 09, 2019 at 04:17:39AM -0800, ikelos wrote:
 Awesome, thanks!  I'm afraid I still haven't found time to build/test the beta on a quiet part of our systems, but I'll try and get to it before the end of the year, pending free time.
That would certainly be welcome :-)
 Thanks for reviewing and merging it, I'm so glad it's finally a standard feature of openvpn!  5:D
Thanks for your patience & for regularily pushing us forward...!

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,76,2016-12-31T01:40:10Z,2019-11-09T13:57:17Z,2019-11-09T13:57:17Z,CLOSED,False,661,27,11,https://github.com/ikelos,Vlan patches v2,8,"['enhancement', 'help wanted']",https://github.com/OpenVPN/openvpn/pull/76,https://github.com/cron2,99,https://github.com/OpenVPN/openvpn/pull/76#issuecomment-552102802,"After numerous attempts on the mailing list and suggestions from some members of the openvpn team, I've created a pull request for the vlan patches that @fknittel originally made in 2010 [1], and which I updated and attempted to get reviewed most of last year [2,3].  I waited patiently for review for 9 months, and had it mentioned in several of the monthly community meetings, but unfortunately it appears to have fallen off people's radars.  Since 2.4 was released, this seemed the ideal time to update the patches to ensure they still applied and submit them as a pull request.  This way, they can be publicly reviewed and hopefully will not get lost again.
As requested I've tried to improve the commit style (spacing, brackets around if statements, etc) from the version I submitted to the mailing list.  I've also squashed the configure and documentation commits, as recommended, and provided the requested success story [3].  Please let me know of any further changes required in order to get this properly reviewed.  Thanks!  5:)
[1] https://community.openvpn.net/openvpn/ticket/6
[2] https://sourceforge.net/p/openvpn/mailman/message/34989657/
[3] https://sourceforge.net/p/openvpn/mailman/message/35274578/
[3] https://sourceforge.net/p/openvpn/mailman/message/34991937/",I am closing this PR now - the patches have been merged (though not the original patches from this branch).,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,77,2017-01-06T08:16:16Z,2017-01-13T08:42:37Z,2017-01-13T08:42:37Z,CLOSED,False,0,0,0,https://github.com/chipitsine,new issue and new pull request stub,0,[],https://github.com/OpenVPN/openvpn/pull/77,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/77,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,78,2017-01-14T21:05:01Z,2017-02-20T16:42:37Z,2020-02-18T16:14:25Z,CLOSED,False,130,45,3,https://github.com/selvanair,Fix user's group membership check in interactive service to work with domains,1,[],https://github.com/OpenVPN/openvpn/pull/78,https://github.com/selvanair,1,https://github.com/OpenVPN/openvpn/pull/78,"The patch will be is sent to the list  -- copying here for those who prefer to review PRs
Currently the username unqualified by the domain is used to validate
a user which fails for domain users. Instead authorize the user
(i) if the built-in admin group or ovpn_admin group is in the process token
(ii) else if the user's SID is in the built-in admin or ovpn_admin groups
The second check is needed to recognize dynamic updates to group membership
on the local machine that will not be reflected in the token.
These checks do not require connection to a domain controller and will
work even when user is logged in with cached credentials.
Resolves Trac: #810
v2: include the token check as described above
Signed-off-by: Selva Nair selva.nair@gmail.com","The patch will be is sent to the list  -- copying here for those who prefer to review PRs
Currently the username unqualified by the domain is used to validate
a user which fails for domain users. Instead authorize the user
(i) if the built-in admin group or ovpn_admin group is in the process token
(ii) else if the user's SID is in the built-in admin or ovpn_admin groups
The second check is needed to recognize dynamic updates to group membership
on the local machine that will not be reflected in the token.
These checks do not require connection to a domain controller and will
work even when user is logged in with cached credentials.
Resolves Trac: #810
v2: include the token check as described above
Signed-off-by: Selva Nair selva.nair@gmail.com",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,78,2017-01-14T21:05:01Z,2017-02-20T16:42:37Z,2020-02-18T16:14:25Z,CLOSED,False,130,45,3,https://github.com/selvanair,Fix user's group membership check in interactive service to work with domains,1,[],https://github.com/OpenVPN/openvpn/pull/78,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/78#issuecomment-281125875,"The patch will be is sent to the list  -- copying here for those who prefer to review PRs
Currently the username unqualified by the domain is used to validate
a user which fails for domain users. Instead authorize the user
(i) if the built-in admin group or ovpn_admin group is in the process token
(ii) else if the user's SID is in the built-in admin or ovpn_admin groups
The second check is needed to recognize dynamic updates to group membership
on the local machine that will not be reflected in the token.
These checks do not require connection to a domain controller and will
work even when user is logged in with cached credentials.
Resolves Trac: #810
v2: include the token check as described above
Signed-off-by: Selva Nair selva.nair@gmail.com","this can be closed now, right?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,78,2017-01-14T21:05:01Z,2017-02-20T16:42:37Z,2020-02-18T16:14:25Z,CLOSED,False,130,45,3,https://github.com/selvanair,Fix user's group membership check in interactive service to work with domains,1,[],https://github.com/OpenVPN/openvpn/pull/78,https://github.com/selvanair,3,https://github.com/OpenVPN/openvpn/pull/78#issuecomment-281127267,"The patch will be is sent to the list  -- copying here for those who prefer to review PRs
Currently the username unqualified by the domain is used to validate
a user which fails for domain users. Instead authorize the user
(i) if the built-in admin group or ovpn_admin group is in the process token
(ii) else if the user's SID is in the built-in admin or ovpn_admin groups
The second check is needed to recognize dynamic updates to group membership
on the local machine that will not be reflected in the token.
These checks do not require connection to a domain controller and will
work even when user is logged in with cached credentials.
Resolves Trac: #810
v2: include the token check as described above
Signed-off-by: Selva Nair selva.nair@gmail.com","Yes, closing..",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,79,2017-01-17T22:06:06Z,2017-01-20T20:04:34Z,2017-01-20T20:04:35Z,CLOSED,False,11,1,2,https://github.com/neuhalje,Run tests needing 'ld --wrap' only where supported,1,[],https://github.com/OpenVPN/openvpn/pull/79,https://github.com/neuhalje,1,https://github.com/OpenVPN/openvpn/pull/79,"Run tests needing 'ld --wrap' only where supported

--wrap is a feature of ld that is only available on Linux systems.
http://www.mockator.com/projects/mockator/wiki/Wrap_Functions

""Alas, this feature is *only available with the GNU tool chain on Linux*.
GCC for Mac OS X does not offer the linker flag --wrap. ""

The implementation is still not optimal. Improvement would be an actual
check against running with '--wrap'.

Tested on Ubuntu precise (--wrap tests run) && Macos (--wrap tests not run).","Run tests needing 'ld --wrap' only where supported

--wrap is a feature of ld that is only available on Linux systems.
http://www.mockator.com/projects/mockator/wiki/Wrap_Functions

""Alas, this feature is *only available with the GNU tool chain on Linux*.
GCC for Mac OS X does not offer the linker flag --wrap. ""

The implementation is still not optimal. Improvement would be an actual
check against running with '--wrap'.

Tested on Ubuntu precise (--wrap tests run) && Macos (--wrap tests not run).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,79,2017-01-17T22:06:06Z,2017-01-20T20:04:34Z,2017-01-20T20:04:35Z,CLOSED,False,11,1,2,https://github.com/neuhalje,Run tests needing 'ld --wrap' only where supported,1,[],https://github.com/OpenVPN/openvpn/pull/79,https://github.com/neuhalje,2,https://github.com/OpenVPN/openvpn/pull/79#issuecomment-273315461,"Run tests needing 'ld --wrap' only where supported

--wrap is a feature of ld that is only available on Linux systems.
http://www.mockator.com/projects/mockator/wiki/Wrap_Functions

""Alas, this feature is *only available with the GNU tool chain on Linux*.
GCC for Mac OS X does not offer the linker flag --wrap. ""

The implementation is still not optimal. Improvement would be an actual
check against running with '--wrap'.

Tested on Ubuntu precise (--wrap tests run) && Macos (--wrap tests not run).",Please would someone review && test this on their development machine?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,79,2017-01-17T22:06:06Z,2017-01-20T20:04:34Z,2017-01-20T20:04:35Z,CLOSED,False,11,1,2,https://github.com/neuhalje,Run tests needing 'ld --wrap' only where supported,1,[],https://github.com/OpenVPN/openvpn/pull/79,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/79#issuecomment-273405335,"Run tests needing 'ld --wrap' only where supported

--wrap is a feature of ld that is only available on Linux systems.
http://www.mockator.com/projects/mockator/wiki/Wrap_Functions

""Alas, this feature is *only available with the GNU tool chain on Linux*.
GCC for Mac OS X does not offer the linker flag --wrap. ""

The implementation is still not optimal. Improvement would be an actual
check against running with '--wrap'.

Tested on Ubuntu precise (--wrap tests run) && Macos (--wrap tests not run).","Hi,
On Tue, Jan 17, 2017 at 04:58:35PM -0800, Selva Nair wrote:

 >  AC_DEFINE_UNQUOTED([TARGET_ALIAS], [""${host}""], [A string representing our host])
  case ""$host"" in
  	*-*-linux*)
  		AC_DEFINE([TARGET_LINUX], [1], [Are we running on Linux?])
  		AC_DEFINE_UNQUOTED([TARGET_PREFIX], [""L""], [Target prefix])
 +                # It might be better to actually run ld with --wrap
 +                AM_CONDITIONAL([SUPPORT_LD_WRAP], [ true ])

 Why not do an AC_RUN_IFELSE test to determine whether wrapping works or not -- that way we could handle for all platforms except cross-compiling which is anyway easy to handle as we cross-compile only for windows.
As Selva says.  It might not be straightforward, but the whole point of
having this autoconf madness is ""test the system's capabilities"" - otherwise
we could just get rid of it and do ""#ifdef linux"" in the code...

As far as I know, all our build environments *except* MacOS and mingw
(due to cross-building cmocka won't work, I think) have GNU ld (*today*),
so making this ""linux only"" is not the right way forward - and even
there, one distribution might decide to go with clang + llvm-ld,
breaking --wrap...


I do understand that this is not trivially implemented :-) - what you
I'd do is go for AC_TRY_LINK, modifing LDFLAGS beforehand (add --wrap)
and restoring it afterwards, and then trying to link something like
""real_printf()"" or so.  We have two examples of AC_TRY_LINK in configure.ac
today that could serve as a starting point.

(res_init() is one of the funky functions that are really macros on some
platforms, so ""does it compile?"" is not a suitable test there - thus,
AC_TRY_LINK)

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,79,2017-01-17T22:06:06Z,2017-01-20T20:04:34Z,2017-01-20T20:04:35Z,CLOSED,False,11,1,2,https://github.com/neuhalje,Run tests needing 'ld --wrap' only where supported,1,[],https://github.com/OpenVPN/openvpn/pull/79,https://github.com/selvanair,4,https://github.com/OpenVPN/openvpn/pull/79#issuecomment-273473739,"Run tests needing 'ld --wrap' only where supported

--wrap is a feature of ld that is only available on Linux systems.
http://www.mockator.com/projects/mockator/wiki/Wrap_Functions

""Alas, this feature is *only available with the GNU tool chain on Linux*.
GCC for Mac OS X does not offer the linker flag --wrap. ""

The implementation is still not optimal. Improvement would be an actual
check against running with '--wrap'.

Tested on Ubuntu precise (--wrap tests run) && Macos (--wrap tests not run).","On Wed, Jan 18, 2017 at 2:42 AM, Gert Doering ***@***.***> wrote:
 I do understand that this is not trivially implemented :-) - what you
 I'd do is go for AC_TRY_LINK, modifing LDFLAGS beforehand (add --wrap)
 and restoring it afterwards, and then trying to link something like
 ""real_printf()"" or so. We have two examples of AC_TRY_LINK in configure.ac
 today that could serve as a starting point.

I opened a PR. Please take a look.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,79,2017-01-17T22:06:06Z,2017-01-20T20:04:34Z,2017-01-20T20:04:35Z,CLOSED,False,11,1,2,https://github.com/neuhalje,Run tests needing 'ld --wrap' only where supported,1,[],https://github.com/OpenVPN/openvpn/pull/79,https://github.com/neuhalje,5,https://github.com/OpenVPN/openvpn/pull/79#issuecomment-274166753,"Run tests needing 'ld --wrap' only where supported

--wrap is a feature of ld that is only available on Linux systems.
http://www.mockator.com/projects/mockator/wiki/Wrap_Functions

""Alas, this feature is *only available with the GNU tool chain on Linux*.
GCC for Mac OS X does not offer the linker flag --wrap. ""

The implementation is still not optimal. Improvement would be an actual
check against running with '--wrap'.

Tested on Ubuntu precise (--wrap tests run) && Macos (--wrap tests not run).",Closed bc/ Selva send a way better patch,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/selvanair,1,https://github.com/OpenVPN/openvpn/pull/80,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/selvanair,2,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-273517255,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,"Would this be better for the AC_LINK_IFELSE test?
void exit(int);
void __wrap_exit(int i) {
    __real_exit(i);
}

Then in main just call exit(0)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-273561569,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,"Hi,
On Wed, Jan 18, 2017 at 08:03:58AM -0800, Selva Nair wrote:
 Would this be better for the AC_LINK_IFELSE test?
 ```
 void exit(int);
 void __wrap_exit(int i) {
     __real_exit(i);
 }
 ```
 Then in main just call `exit(0)`
Should work.

In case of a hypothetical linker that accepts --wrap but does ""something
totally different"", the code above would trigger an unresolved symbol
trying to link __real_exit() - and that would tell us ""wrapping not
available"".

Those that do not support it at all will fail on command line parsing
already.

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/selvanair,4,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-273573664,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,"Yes precisely that is the reasoning. Use of exit() instead of a randomly named dummy looks cleaner. Updated the PR as above.
If it looks good, will send to the list.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/cron2,5,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-273574959,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,"Hi,
On Wed, Jan 18, 2017 at 05:21:21AM -0800, Selva Nair wrote:
 I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?
 You can view, comment on, or merge this pull request online at:
Generally speaking, I think we're getting close.

The actual configure.ac code confuses me - but maybe this is just my
lack of configure wisdom speaking.

But anyway: why set ""have_ld_wrap_support=yes/no"" first, then use that
to set AC_DEFINE([HAVE_LD_WRAP_SUPPORT]...) in an ""if test"" clause,
and *then* do AM_CONDITIONAL([HAVE_LD_WRAP_SUPPORT], ...)?  Are these
different things, even if called the same?

(ISTR that AC_DEFINE(...) goes to config.h?  Do we need that?)

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/selvanair,6,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-273575923,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,"AC_DEFINE is for config.h, AM_CONDITIONAL for using in makefiles. Currently we do not need the define in config.h but I can think of checking it in the source to provide an alternative to __wrap_xxx  -- I added it for ""just in case"". If its not needed we could directly set the AM_CONDITIONAL inside the test.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/cron2,7,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-273578891,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,"Hi,
On Wed, Jan 18, 2017 at 11:30:17AM -0800, Selva Nair wrote:
 AC_DEFINE is for config.h, AM_CONDITIONAL for using in makefiles. Currently we do not need the define in config.h but I can think of checking it in the source to provide an alternative to __wrap_xxx  -- I added it for ""just in case"". If its not needed we could directly set the AM_CONDITIONAL inside the test.
Thanks for the explanation.  It might be useful (though the corresponding
makefile rule is going to be interesting, not calling ""-Wl,--wrap="" if not
available so the code itself can work around it...).

I do see the beauty of having all AM_CONDITIONAL() calls nicely grouped
together, so if we still have all these other variables as ""set a lowercase
thing first and later use that for AM_CONDITIONAL() an uppercase thing"",
let's stick to it.

I think this is good for review on the -devel list - definitely a feature-ACK
from me, and the code looks like it should ""do the right thing"".  David
and Mathias Andree might have comments on ""how to do/not do"" configure.ac, so
I'd defer to their review before code-ACKing.

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/selvanair,8,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-273843346,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,"replying to cron2:

In case of a hypothetical linker that accepts --wrap but does ""something
totally different"", the code above would trigger an unresolved symbol
trying to link __real_exit() - and that would tell us ""wrapping not
available"".

In fact I found a system (omnios) where gnu ld is not the default but wrap is supported. Yet, just checking the linker option ""-Wl,--wrap=exit"" with an empty main() fails. Possibly same on other derivatives of opensolaris and solaris.
gcc -Wl,--wrap=exit on an empty main() program fails with __wrap_exit undefined! It seems this platform links exit() with every program and on wrapping exit it can't find it anymore. Our approach here does work correctly as we define __wrap_exit().",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/cron2,9,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-273875242,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,"Hi,
On Thu, Jan 19, 2017 at 09:34:38AM -0800, Selva Nair wrote:
 gcc -Wl,--wrap=exit on an empty main() program fails with __wrap_exit undefined! It seems this platform links exit() with every program and on wrapping exit it can't find it anymore. Our approach here does work correctly as we define __wrap_exit().
So we could just wrap something else, like ""printf()""?  exit() might
be a bit too special.

As in, call the linker with --wrap=printf and the code would then
just call real_printf(""hello, world\n""); - and if that succeeds in
linking, at least real_f()->f() wrapping works (and we bluntly assume
that this implies that f()->wrap_f() also works).

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/selvanair,10,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-273880089,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,"Hi,

On Thu, Jan 19, 2017 at 2:34 PM, Gert Doering <notifications@github.com>
wrote:
 On Thu, Jan 19, 2017 at 09:34:38AM -0800, Selva Nair wrote:
 > gcc -Wl,--wrap=exit on an empty main() program fails with __wrap_exit
 undefined! It seems this platform links exit() with every program and on
 wrapping exit it can't find it anymore. Our approach here does work
 correctly as we define __wrap_exit().

 So we could just wrap something else, like ""printf()""? exit() might
 be a bit too special.

 As in, call the linker with --wrap=printf and the code would then
 just call real_printf(""hello, world\n""); - and if that succeeds in
 linking, at least real_f()->f() wrapping works (and we bluntly assume
 that this implies that f()->wrap_f() also works).

It seems I was not being clear enough.. The current approach in the PR does
work, so no change required.

What I meant was naively checking that ld supports --wrap would have given
a false negative in opensolaris. We do define __wrap_exit() in the test
program so this approach does detect availability of wrap in solaris ld.

So all good.

Selva

P.S. This behaviour by solaris ld looked queer so thought of documenting it
in the PR conversation...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,80,2017-01-18T13:21:19Z,2017-01-20T18:17:21Z,2017-01-20T18:17:21Z,CLOSED,False,31,1,2,https://github.com/selvanair,"Add a check for -Wl,--wrap support in linker",2,[],https://github.com/OpenVPN/openvpn/pull/80,https://github.com/selvanair,11,https://github.com/OpenVPN/openvpn/pull/80#issuecomment-274141304,I used a dummy function but it may be better to use some thing like exit and __wrap_exit/__real_exit ? Any comments?,Patch committed. Closing.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,81,2017-01-20T18:32:20Z,2017-03-19T16:32:42Z,2017-03-19T16:32:42Z,CLOSED,False,6,4,1,https://github.com/RomeroMalaquias,Avoiding conditional directives that break statements,2,[],https://github.com/OpenVPN/openvpn/pull/81,https://github.com/RomeroMalaquias,1,https://github.com/OpenVPN/openvpn/pull/81,"Hello, this change is only aesthetic, it's a suggestion to avoid the use of conditional directives that break statements i think that kind of concern improve the code maintainability do you agree?","Hello, this change is only aesthetic, it's a suggestion to avoid the use of conditional directives that break statements i think that kind of concern improve the code maintainability do you agree?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,81,2017-01-20T18:32:20Z,2017-03-19T16:32:42Z,2017-03-19T16:32:42Z,CLOSED,False,6,4,1,https://github.com/RomeroMalaquias,Avoiding conditional directives that break statements,2,[],https://github.com/OpenVPN/openvpn/pull/81,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/81#issuecomment-274187764,"Hello, this change is only aesthetic, it's a suggestion to avoid the use of conditional directives that break statements i think that kind of concern improve the code maintainability do you agree?","Hi,
On Fri, Jan 20, 2017 at 10:32:22AM -0800, Romero B. de S. Malaquias wrote:
 Hello, this change is only aesthetic, it's a suggestion to avoid the use of conditional directives that break statements i think that kind of concern improve the code maintainability do you agree?
NAK.  Introducing extra #define is not the way to go.

While the current style might be a bit confusing, understanding
which system uses what setsockopt() define is hard enough without
introducing an extra level of indirection.

gert
…
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,81,2017-01-20T18:32:20Z,2017-03-19T16:32:42Z,2017-03-19T16:32:42Z,CLOSED,False,6,4,1,https://github.com/RomeroMalaquias,Avoiding conditional directives that break statements,2,[],https://github.com/OpenVPN/openvpn/pull/81,https://github.com/RomeroMalaquias,3,https://github.com/OpenVPN/openvpn/pull/81#issuecomment-274234016,"Hello, this change is only aesthetic, it's a suggestion to avoid the use of conditional directives that break statements i think that kind of concern improve the code maintainability do you agree?","Hello @cron2 , thanks for your time, i see your point.
And what u think about this approach?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,81,2017-01-20T18:32:20Z,2017-03-19T16:32:42Z,2017-03-19T16:32:42Z,CLOSED,False,6,4,1,https://github.com/RomeroMalaquias,Avoiding conditional directives that break statements,2,[],https://github.com/OpenVPN/openvpn/pull/81,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/81#issuecomment-287628622,"Hello, this change is only aesthetic, it's a suggestion to avoid the use of conditional directives that break statements i think that kind of concern improve the code maintainability do you agree?","I would just not touch the existing code.  With your most recent change, there's a new variable, more lines of code, and the reader still needs to understand what the sockopt actually does to make sense out of the code fragment.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,82,2017-02-05T22:45:14Z,2017-02-17T12:35:57Z,2017-02-17T12:35:57Z,CLOSED,False,11,3,1,https://github.com/O2Graphics,Fix building with LibreSSL 2.5.1 by cleaning a hack.,1,[],https://github.com/OpenVPN/openvpn/pull/82,https://github.com/O2Graphics,1,https://github.com/OpenVPN/openvpn/pull/82,"Should be compatible with all versions of OpenSSL and LibreSSL.
Error while compiling was:
""ssl_openssl.c:512:30: error: no member named 'cert' in 'struct ssl_ctx_st'
ssl.cert = ctx->ctx->cert;
~~~~~~~~  ^
1 error generated.
*** Error code 1""","Should be compatible with all versions of OpenSSL and LibreSSL.
Error while compiling was:
""ssl_openssl.c:512:30: error: no member named 'cert' in 'struct ssl_ctx_st'
ssl.cert = ctx->ctx->cert;
~~~~~~~~  ^
1 error generated.
*** Error code 1""",True,{'THUMBS_UP': ['https://github.com/leonklingele']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,82,2017-02-05T22:45:14Z,2017-02-17T12:35:57Z,2017-02-17T12:35:57Z,CLOSED,False,11,3,1,https://github.com/O2Graphics,Fix building with LibreSSL 2.5.1 by cleaning a hack.,1,[],https://github.com/OpenVPN/openvpn/pull/82,https://github.com/O2Graphics,2,https://github.com/OpenVPN/openvpn/pull/82#issuecomment-277561402,"Should be compatible with all versions of OpenSSL and LibreSSL.
Error while compiling was:
""ssl_openssl.c:512:30: error: no member named 'cert' in 'struct ssl_ctx_st'
ssl.cert = ctx->ctx->cert;
~~~~~~~~  ^
1 error generated.
*** Error code 1""","So, I've been able to compile and run OpenSSL with LibreSSL 2.5.1, but I don't know how to trigger this code path.
Can anyone review my patch and test it?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,82,2017-02-05T22:45:14Z,2017-02-17T12:35:57Z,2017-02-17T12:35:57Z,CLOSED,False,11,3,1,https://github.com/O2Graphics,Fix building with LibreSSL 2.5.1 by cleaning a hack.,1,[],https://github.com/OpenVPN/openvpn/pull/82,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/82#issuecomment-277605499,"Should be compatible with all versions of OpenSSL and LibreSSL.
Error while compiling was:
""ssl_openssl.c:512:30: error: no member named 'cert' in 'struct ssl_ctx_st'
ssl.cert = ctx->ctx->cert;
~~~~~~~~  ^
1 error generated.
*** Error code 1""","Hi,
On Sun, Feb 05, 2017 at 04:05:22PM -0800, O2 Graphics wrote:
 So, I've been able to compile and run OpenSSL with LibreSSL 2.5.1, but I don't know how to trigger this code path.

 Can anyone review my patch and test it?
Not being our SSL expert, I can only commit on style - please do not
include references to other projects in our *code*.  The commit message
would be a fine place to store the reference, but references in the
code should (if at all) only point to the original library documentation.

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{'THUMBS_UP': ['https://github.com/O2Graphics']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,82,2017-02-05T22:45:14Z,2017-02-17T12:35:57Z,2017-02-17T12:35:57Z,CLOSED,False,11,3,1,https://github.com/O2Graphics,Fix building with LibreSSL 2.5.1 by cleaning a hack.,1,[],https://github.com/OpenVPN/openvpn/pull/82,https://github.com/chipitsine,4,https://github.com/OpenVPN/openvpn/pull/82#issuecomment-277611931,"Should be compatible with all versions of OpenSSL and LibreSSL.
Error while compiling was:
""ssl_openssl.c:512:30: error: no member named 'cert' in 'struct ssl_ctx_st'
ssl.cert = ctx->ctx->cert;
~~~~~~~~  ^
1 error generated.
*** Error code 1""","your patch did not break Travis-CI, it is good.
what do you think, should we expand Travis-CI test matrix and add LibreSSL as well ?
as for contributing in general, PR are used for test/review purpose, contribution goes through mailing list as described https://community.openvpn.net/openvpn/wiki/Contributing",True,{'THUMBS_UP': ['https://github.com/O2Graphics']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,82,2017-02-05T22:45:14Z,2017-02-17T12:35:57Z,2017-02-17T12:35:57Z,CLOSED,False,11,3,1,https://github.com/O2Graphics,Fix building with LibreSSL 2.5.1 by cleaning a hack.,1,[],https://github.com/OpenVPN/openvpn/pull/82,https://github.com/O2Graphics,5,https://github.com/OpenVPN/openvpn/pull/82#issuecomment-277652679,"Should be compatible with all versions of OpenSSL and LibreSSL.
Error while compiling was:
""ssl_openssl.c:512:30: error: no member named 'cert' in 'struct ssl_ctx_st'
ssl.cert = ctx->ctx->cert;
~~~~~~~~  ^
1 error generated.
*** Error code 1""","Hello, and thanks @cron2 and @chipitsine for your comments!
I'm sorry I didn't follow the normal way to contribute to OpenVPN :-/ I'll update my patch ASAP and post in the mailing list.
I agree adding LibreSSL to Travis-CI could be nice, it can help improve the code in both OpenVPN and LibreSSL: this build error is a good example.
Please note there is LibreSSL 2.4.5 (stable) and LibreSSL 2.5.1 (development, the one I used here).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,82,2017-02-05T22:45:14Z,2017-02-17T12:35:57Z,2017-02-17T12:35:57Z,CLOSED,False,11,3,1,https://github.com/O2Graphics,Fix building with LibreSSL 2.5.1 by cleaning a hack.,1,[],https://github.com/OpenVPN/openvpn/pull/82,https://github.com/syzzer,6,https://github.com/OpenVPN/openvpn/pull/82#issuecomment-277746556,"Should be compatible with all versions of OpenSSL and LibreSSL.
Error while compiling was:
""ssl_openssl.c:512:30: error: no member named 'cert' in 'struct ssl_ctx_st'
ssl.cert = ctx->ctx->cert;
~~~~~~~~  ^
1 error generated.
*** Error code 1""","Just to be perfectly clear: we don't officially support LibreSSL.  That said, we do accept simple patches to keep OpenVPN working with LibreSSL. At first sight, this patch looks very reasonable, so I'll do a proper review once it's posted to the openvpn-devel list.",True,{'THUMBS_UP': ['https://github.com/O2Graphics']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,82,2017-02-05T22:45:14Z,2017-02-17T12:35:57Z,2017-02-17T12:35:57Z,CLOSED,False,11,3,1,https://github.com/O2Graphics,Fix building with LibreSSL 2.5.1 by cleaning a hack.,1,[],https://github.com/OpenVPN/openvpn/pull/82,https://github.com/O2Graphics,7,https://github.com/OpenVPN/openvpn/pull/82#issuecomment-277785602,"Should be compatible with all versions of OpenSSL and LibreSSL.
Error while compiling was:
""ssl_openssl.c:512:30: error: no member named 'cert' in 'struct ssl_ctx_st'
ssl.cert = ctx->ctx->cert;
~~~~~~~~  ^
1 error generated.
*** Error code 1""","I've just submitted the patch to openvpn-devel.
@syzzer: sure, I understand you don't want to include specific patch for LibreSSL, it could be too much work if their code become incompatible with OpenSSL.
It seems most of the time, only some conditional directives with ""LIBRESSL_VERSION_NUMBER"" are necessary.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,82,2017-02-05T22:45:14Z,2017-02-17T12:35:57Z,2017-02-17T12:35:57Z,CLOSED,False,11,3,1,https://github.com/O2Graphics,Fix building with LibreSSL 2.5.1 by cleaning a hack.,1,[],https://github.com/OpenVPN/openvpn/pull/82,https://github.com/O2Graphics,8,https://github.com/OpenVPN/openvpn/pull/82#issuecomment-280638035,"Should be compatible with all versions of OpenSSL and LibreSSL.
Error while compiling was:
""ssl_openssl.c:512:30: error: no member named 'cert' in 'struct ssl_ctx_st'
ssl.cert = ctx->ctx->cert;
~~~~~~~~  ^
1 error generated.
*** Error code 1""",Closing because patch has been commited: dcfd3b6,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,83,2017-02-15T10:05:30Z,2017-03-26T06:18:15Z,2017-03-26T06:18:15Z,CLOSED,False,0,0,0,https://github.com/chipitsine,"travis-ci: add 2 ""build only"" mingw configurations, cleanup unused files",0,[],https://github.com/OpenVPN/openvpn/pull/83,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/83,"it is ""discussion only"" PR, for those who prefer github workflow","it is ""discussion only"" PR, for those who prefer github workflow",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,84,2017-03-03T09:44:10Z,,2019-06-23T19:19:37Z,OPEN,False,15,0,1,https://github.com/gollub,Close stdout/stderr/stdin fds in auth-plugin fork,1,[],https://github.com/OpenVPN/openvpn/pull/84,https://github.com/gollub,1,https://github.com/OpenVPN/openvpn/pull/84,"The auth-pam plugin gets forked to run in background and kept
stdin/stdout/stderr open. This might block the callee of the OpenVPN
which expect that it nicely turns into a daemon.","The auth-pam plugin gets forked to run in background and kept
stdin/stdout/stderr open. This might block the callee of the OpenVPN
which expect that it nicely turns into a daemon.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,84,2017-03-03T09:44:10Z,,2019-06-23T19:19:37Z,OPEN,False,15,0,1,https://github.com/gollub,Close stdout/stderr/stdin fds in auth-plugin fork,1,[],https://github.com/OpenVPN/openvpn/pull/84,https://github.com/Jnchi,2,https://github.com/OpenVPN/openvpn/pull/84#issuecomment-499883525,"The auth-pam plugin gets forked to run in background and kept
stdin/stdout/stderr open. This might block the callee of the OpenVPN
which expect that it nicely turns into a daemon.",Any progress on this?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,84,2017-03-03T09:44:10Z,,2019-06-23T19:19:37Z,OPEN,False,15,0,1,https://github.com/gollub,Close stdout/stderr/stdin fds in auth-plugin fork,1,[],https://github.com/OpenVPN/openvpn/pull/84,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/84#issuecomment-504779221,"The auth-pam plugin gets forked to run in background and kept
stdin/stdout/stderr open. This might block the callee of the OpenVPN
which expect that it nicely turns into a daemon.","Hi,
On Fri, Jun 07, 2019 at 06:25:22AM -0700, kawakami wrote:
 Any progress on this?
Please send patches to the openvpn-devel@lists.sourceforge.net mailing
list.  Our current process requires the patch to be in the list archives
and ACKed on the list.

PRs are - as the intro document says - not something we work with
(but you cannot turn them off on github).

The patch description itself sounds like something we want to fix :-)

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,85,2017-03-28T06:50:06Z,2017-04-15T12:02:12Z,2017-06-22T17:41:14Z,CLOSED,False,73,12,2,https://github.com/chipitsine,"travis-ci: add 2 mingw ""build only configurations""",1,[],https://github.com/OpenVPN/openvpn/pull/85,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/85,"this is ""discuss only"" PR","this is ""discuss only"" PR",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,86,2017-04-07T14:13:54Z,,2017-04-08T18:28:03Z,OPEN,False,12,10,1,https://github.com/lordrasmus,Alignment Problem on ARM,1,[],https://github.com/OpenVPN/openvpn/pull/86,https://github.com/lordrasmus,1,https://github.com/OpenVPN/openvpn/pull/86,"if the address in addr_ptr is not aligned correctly, the wrong bytes are written on arm
replacing * operator with memcpy fixes the issue
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","if the address in addr_ptr is not aligned correctly, the wrong bytes are written on arm
replacing * operator with memcpy fixes the issue
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,86,2017-04-07T14:13:54Z,,2017-04-08T18:28:03Z,OPEN,False,12,10,1,https://github.com/lordrasmus,Alignment Problem on ARM,1,[],https://github.com/OpenVPN/openvpn/pull/86,https://github.com/schwabe,2,https://github.com/OpenVPN/openvpn/pull/86#issuecomment-292549404,"if the address in addr_ptr is not aligned correctly, the wrong bytes are written on arm
replacing * operator with memcpy fixes the issue
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hm, the pointers point to uint32 in non-packed struct as far as I can see. How should the alignment get screwed here?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,86,2017-04-07T14:13:54Z,,2017-04-08T18:28:03Z,OPEN,False,12,10,1,https://github.com/lordrasmus,Alignment Problem on ARM,1,[],https://github.com/OpenVPN/openvpn/pull/86,https://github.com/lordrasmus,3,https://github.com/OpenVPN/openvpn/pull/86#issuecomment-292716202,"if the address in addr_ptr is not aligned correctly, the wrong bytes are written on arm
replacing * operator with memcpy fixes the issue
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","i didn't checked why the alignment is screwed
i'm using openvpn as a client with client-nat on an arm platform
openvpn 2.3.11 was working fine, the problem started after upgrading to 2.4.0
i'm in holiday this week but i remember what happened
i can investigate further why it happens when i'm back in my company
a ping with tcpdump and 2.3.11 looks like this
IP 1.2.3.4 > 5.6.7.8: ICMP echo request
was correctly translated to this
IP 1.2.3.4 > 192.168.100.5: ICMP echo request
after upgrade to 2.4.0 it was translated to this
IP 1.2.3.192 > 168.100.5.8: ICMP echo request
i loaded openvpn in gdb and checked the address of addr_ptr in client_nat_transform
the address was something like 0x...5
so maybe the fix has to be made somewhere else
i guess between 2.3.11 and 2.4.0 the alignment of the parameter ipbuf was changed
if it helps i can have a look at the generated assembler code and check how the address in addr_ptr ist used
but i guess i will find a instruction which needs a 4 or 8 byte alignment",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,86,2017-04-07T14:13:54Z,,2017-04-08T18:28:03Z,OPEN,False,12,10,1,https://github.com/lordrasmus,Alignment Problem on ARM,1,[],https://github.com/OpenVPN/openvpn/pull/86,https://github.com/TinCanTech,4,https://github.com/OpenVPN/openvpn/pull/86#issuecomment-292735242,"if the address in addr_ptr is not aligned correctly, the wrong bytes are written on arm
replacing * operator with memcpy fixes the issue
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","The syntax of --client-nat has changed , possibly this is related.
Where alias had two parameters before, it now only supports one.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,86,2017-04-07T14:13:54Z,,2017-04-08T18:28:03Z,OPEN,False,12,10,1,https://github.com/lordrasmus,Alignment Problem on ARM,1,[],https://github.com/OpenVPN/openvpn/pull/86,https://github.com/lordrasmus,5,https://github.com/OpenVPN/openvpn/pull/86#issuecomment-292736655,"if the address in addr_ptr is not aligned correctly, the wrong bytes are written on arm
replacing * operator with memcpy fixes the issue
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","the config is pushed from the server like this
PUSH: Received control message: 'PUSH_REPLY,route 172.16.0.1,topology net30,ping 50,ping-restart 110,client-nat snat 10.100.101.0 255.255.255.0 10.10.0.0,route 172.16.0.0 255.255.192.0,ifconfig 172.16.0.50 172.16.0.49'",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,87,2017-05-05T11:38:02Z,2021-06-16T10:19:22Z,2021-06-16T10:19:24Z,CLOSED,False,16,7,2,https://github.com/dbussink,Don't resize the MTU windows on a reused connection,1,[],https://github.com/OpenVPN/openvpn/pull/87,https://github.com/dbussink,1,https://github.com/OpenVPN/openvpn/pull/87,"When testing upgrading OpenVPN from 2.3 to 2.4, we ran into an issue where every time the same client reconnects the MTU for the tunnel used shrinks, eventually leading to packets being dropped by OpenVPN.
Reproduced the problem with a 2 node setup, one as the server and the other one as a client. Each time the client is restarted the packet sizes shrink until it breaks.
Configuration for the server
/etc/openvpn/server.conf

port 1194
proto udp
dev tun

ca /etc/openvpn/easy-rsa/keys/ca.crt
cert /etc/openvpn/easy-rsa/keys/server.crt
key /etc/openvpn/easy-rsa/keys/server.key
dh none

server 192.168.1.0 255.255.255.0
topology subnet
client-config-dir /etc/openvpn/ccd

client-to-client
keepalive 10 120

user nobody
group nogroup
persist-key
persist-tun
status /var/run/openvpn-status.log
log    /var/log/openvpn/openvpn.log
verb 5

Configuration for the client:
/etc/openvpn/client.conf

client
dev tun
proto udp
float
remote 172.28.128.4 1194
user nobody
group nogroup

persist-key
persist-tun

ca /etc/openvpn/easy-rsa/keys/172.28.128.5-ca.crt
cert /etc/openvpn/easy-rsa/keys/172.28.128.5.crt
key /etc/openvpn/easy-rsa/keys/172.28.128.5.key
log /var/log/openvpn/openvpn.log

ns-cert-type server
verb 5

What happens during the first time the client connects from the perspective of the logs is the following (server log):
May 05 10:50:59 test-primary systemd[1]: Started OpenVPN connection to server.
May 05 10:50:59 test-primary ovpn-server[17464]: Failed to extract curve from certificate (UNDEF), using secp384r1 instead.
May 05 10:50:59 test-primary ovpn-server[17464]: ECDH curve secp384r1 added
May 05 10:50:59 test-primary ovpn-server[17464]: TLS-Auth MTU parms [ L:1621 D:1212 EF:38 EB:0 ET:0 EL:3 ]
May 05 10:50:59 test-primary ovpn-server[17464]: TUN/TAP device tun0 opened
May 05 10:50:59 test-primary ovpn-server[17464]: TUN/TAP TX queue length set to 100
May 05 10:50:59 test-primary ovpn-server[17464]: do_ifconfig, tt->did_ifconfig_ipv6_setup=0
May 05 10:50:59 test-primary ovpn-server[17464]: /sbin/ip link set dev tun0 up mtu 1500
May 05 10:50:59 test-primary ovpn-server[17464]: /sbin/ip addr add dev tun0 192.168.1.1/24 broadcast 192.168.1.255
May 05 10:50:59 test-primary ovpn-server[17464]: Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ]
May 05 10:50:59 test-primary ovpn-server[17464]: Could not determine IPv4/IPv6 protocol. Using AF_INET
May 05 10:50:59 test-primary ovpn-server[17464]: Socket Buffers: R=[212992->212992] S=[212992->212992]
May 05 10:50:59 test-primary ovpn-server[17464]: UDPv4 link local (bound): [AF_INET][undef]:1194
May 05 10:50:59 test-primary ovpn-server[17464]: UDPv4 link remote: [AF_UNSPEC]
May 05 10:50:59 test-primary ovpn-server[17464]: GID set to nogroup
May 05 10:50:59 test-primary ovpn-server[17464]: UID set to nobody
May 05 10:50:59 test-primary ovpn-server[17464]: MULTI: multi_init called, r=256 v=256
May 05 10:50:59 test-primary ovpn-server[17464]: IFCONFIG POOL: base=192.168.1.2 size=252, ipv6=0
May 05 10:50:59 test-primary ovpn-server[17464]: Initialization Sequence Completed
May 05 10:52:27 test-primary ovpn-server[17464]: MULTI: multi_create_instance called
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Re-using SSL/TLS context
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Control Channel MTU parms [ L:1621 D:1212 EF:38 EB:0 ET:0 EL:3 ]
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ]
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Local Options String (VER=V4): 'V4,dev-type tun,link-mtu 1541,tun-mtu 1500,proto UDPv4,cipher BF-CBC,auth SHA1,keysize 128,key-method 2,tls-server'
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Expected Remote Options String (VER=V4): 'V4,dev-type tun,link-mtu 1541,tun-mtu 1500,proto UDPv4,cipher BF-CBC,auth SHA1,keysize 128,key-method 2,tls-client'
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 TLS: Initial packet from [AF_INET]172.28.128.5:1194, sid=59ea927a 09799019
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 VERIFY OK: depth=1, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=GitHub Enterprise VPN, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 VERIFY OK: depth=0, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=172.28.128.5, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_VER=2.4.0
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_PLAT=linux
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_PROTO=2
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_NCP=2
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZ4=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZ4v2=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZO=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_COMP_STUB=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_COMP_STUBv2=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_TCPNL=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Control Channel: TLSv1.2, cipher TLSv1/SSLv3 ECDHE-RSA-AES256-GCM-SHA384, 2048 bit RSA
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 [172.28.128.5] Peer Connection Initiated with [AF_INET]172.28.128.5:1194
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 OPTIONS IMPORT: reading client specific options from: /etc/openvpn/ccd/172.28.128.5
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: Learn: 192.168.1.2 -> 172.28.128.5/172.28.128.5:1194
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: primary virtual IP for 172.28.128.5/172.28.128.5:1194: 192.168.1.2
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 PUSH: Received control message: 'PUSH_REQUEST'
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 SENT CONTROL [172.28.128.5]: 'PUSH_REPLY,route-gateway 192.168.1.1,topology subnet,ping 10,ping-restart 120,ifconfig 192.168.1.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1549 D:1450 EF:49 EB:406 ET:0 EL:3 ]
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Encrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Decrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:52:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: bad source address from client [172.28.128.5], packet dropped

What can be seen here is that the client initially connects and sets up the TLS control channel. The interesting MTU related bits are the first occurrence of Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ] from the initial setup which comes from

  
    
      openvpn/src/openvpn/init.c
    
    
         Line 4055
      in
      7a1b6a0
    
  
  
    

        
          
           do_print_data_channel_mtu_parms(c); 
        
    
  

.
There's another entry for it with Data Channel MTU parms [ L:1549 D:1450 EF:49 EB:406 ET:0 EL:3 ] that comes from 
  
    
      openvpn/src/openvpn/ssl.c
    
    
         Line 1986
      in
      f3705dd
    
  
  
    

        
          
           frame_print(frame, D_MTU_INFO, ""Data Channel MTU parms""); 
        
    
  

. So there's an adjustment that happens twice, once for for the client initialization and once for the TLS connection setup.
When a client reconnects, the following is shown in the logs:
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: new session incoming connection from [AF_INET]172.28.128.5:1194
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 VERIFY OK: depth=1, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=GitHub Enterprise VPN, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 VERIFY OK: depth=0, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=172.28.128.5, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_VER=2.4.0
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_PLAT=linux
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_PROTO=2
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_NCP=2
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZ4=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZ4v2=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZO=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_COMP_STUB=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_COMP_STUBv2=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_TCPNL=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: move_session: dest=TM_ACTIVE src=TM_UNTRUSTED reinit_src=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: tls_multi_process: untrusted session promoted to semi-trusted
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Control Channel: TLSv1.2, cipher TLSv1/SSLv3 ECDHE-RSA-AES256-GCM-SHA384, 2048 bit RSA
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 PUSH: Received control message: 'PUSH_REQUEST'
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 SENT CONTROL [172.28.128.5]: 'PUSH_REPLY,route-gateway 192.168.1.1,topology subnet,ping 10,ping-restart 120,ifconfig 192.168.1.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1477 D:1450 EF:-23 EB:406 ET:0 EL:3 ]
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Encrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Decrypt: Cipher 'AES-256-GCM' initialized with 256 bit key

What can be seen here is that there's no client initialization since the connection setup is reused. This can also be seen from the TLS: tls_multi_process: untrusted session promoted to semi-trusted bit in the logs. This shows that we're reusing the TLS connection. What still happens though is another MTU data channel change in Data Channel MTU parms [ L:1477 D:1450 EF:-23 EB:406 ET:0 EL:3 ] happens. This means the channel is shrinking. This happens on each restart of a client:
May 05 11:00:06 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1405 D:1405 EF:-95 EB:406 ET:0 EL:3 ]

And after another restart:
May 05 11:00:39 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1333 D:1333 EF:-167 EB:406 ET:0 EL:3 ]

After a few restarts, OpenVPN packets start getting dropped with the following error message:
May 05 11:00:41 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TCP/UDP packet too large on write to [AF_INET]172.28.128.5:1194 (tried=1419,max=1333)

This means not all traffic through the tunnel works anymore. This then leads to strange hard to debug issues where only bigger packets get dropped but smaller ones work. This issue is also reported in https://community.openvpn.net/openvpn/ticket/879.
I'm also sending this as a patch to the mailing list. I have no idea if this is the right approach or if there's another way to know if the connection is reused or not and if the frame calculation should be skipped or not.","When testing upgrading OpenVPN from 2.3 to 2.4, we ran into an issue where every time the same client reconnects the MTU for the tunnel used shrinks, eventually leading to packets being dropped by OpenVPN.
Reproduced the problem with a 2 node setup, one as the server and the other one as a client. Each time the client is restarted the packet sizes shrink until it breaks.
Configuration for the server
/etc/openvpn/server.conf

port 1194
proto udp
dev tun

ca /etc/openvpn/easy-rsa/keys/ca.crt
cert /etc/openvpn/easy-rsa/keys/server.crt
key /etc/openvpn/easy-rsa/keys/server.key
dh none

server 192.168.1.0 255.255.255.0
topology subnet
client-config-dir /etc/openvpn/ccd

client-to-client
keepalive 10 120

user nobody
group nogroup
persist-key
persist-tun
status /var/run/openvpn-status.log
log    /var/log/openvpn/openvpn.log
verb 5

Configuration for the client:
/etc/openvpn/client.conf

client
dev tun
proto udp
float
remote 172.28.128.4 1194
user nobody
group nogroup

persist-key
persist-tun

ca /etc/openvpn/easy-rsa/keys/172.28.128.5-ca.crt
cert /etc/openvpn/easy-rsa/keys/172.28.128.5.crt
key /etc/openvpn/easy-rsa/keys/172.28.128.5.key
log /var/log/openvpn/openvpn.log

ns-cert-type server
verb 5

What happens during the first time the client connects from the perspective of the logs is the following (server log):
May 05 10:50:59 test-primary systemd[1]: Started OpenVPN connection to server.
May 05 10:50:59 test-primary ovpn-server[17464]: Failed to extract curve from certificate (UNDEF), using secp384r1 instead.
May 05 10:50:59 test-primary ovpn-server[17464]: ECDH curve secp384r1 added
May 05 10:50:59 test-primary ovpn-server[17464]: TLS-Auth MTU parms [ L:1621 D:1212 EF:38 EB:0 ET:0 EL:3 ]
May 05 10:50:59 test-primary ovpn-server[17464]: TUN/TAP device tun0 opened
May 05 10:50:59 test-primary ovpn-server[17464]: TUN/TAP TX queue length set to 100
May 05 10:50:59 test-primary ovpn-server[17464]: do_ifconfig, tt->did_ifconfig_ipv6_setup=0
May 05 10:50:59 test-primary ovpn-server[17464]: /sbin/ip link set dev tun0 up mtu 1500
May 05 10:50:59 test-primary ovpn-server[17464]: /sbin/ip addr add dev tun0 192.168.1.1/24 broadcast 192.168.1.255
May 05 10:50:59 test-primary ovpn-server[17464]: Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ]
May 05 10:50:59 test-primary ovpn-server[17464]: Could not determine IPv4/IPv6 protocol. Using AF_INET
May 05 10:50:59 test-primary ovpn-server[17464]: Socket Buffers: R=[212992->212992] S=[212992->212992]
May 05 10:50:59 test-primary ovpn-server[17464]: UDPv4 link local (bound): [AF_INET][undef]:1194
May 05 10:50:59 test-primary ovpn-server[17464]: UDPv4 link remote: [AF_UNSPEC]
May 05 10:50:59 test-primary ovpn-server[17464]: GID set to nogroup
May 05 10:50:59 test-primary ovpn-server[17464]: UID set to nobody
May 05 10:50:59 test-primary ovpn-server[17464]: MULTI: multi_init called, r=256 v=256
May 05 10:50:59 test-primary ovpn-server[17464]: IFCONFIG POOL: base=192.168.1.2 size=252, ipv6=0
May 05 10:50:59 test-primary ovpn-server[17464]: Initialization Sequence Completed
May 05 10:52:27 test-primary ovpn-server[17464]: MULTI: multi_create_instance called
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Re-using SSL/TLS context
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Control Channel MTU parms [ L:1621 D:1212 EF:38 EB:0 ET:0 EL:3 ]
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ]
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Local Options String (VER=V4): 'V4,dev-type tun,link-mtu 1541,tun-mtu 1500,proto UDPv4,cipher BF-CBC,auth SHA1,keysize 128,key-method 2,tls-server'
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Expected Remote Options String (VER=V4): 'V4,dev-type tun,link-mtu 1541,tun-mtu 1500,proto UDPv4,cipher BF-CBC,auth SHA1,keysize 128,key-method 2,tls-client'
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 TLS: Initial packet from [AF_INET]172.28.128.5:1194, sid=59ea927a 09799019
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 VERIFY OK: depth=1, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=GitHub Enterprise VPN, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 VERIFY OK: depth=0, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=172.28.128.5, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_VER=2.4.0
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_PLAT=linux
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_PROTO=2
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_NCP=2
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZ4=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZ4v2=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZO=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_COMP_STUB=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_COMP_STUBv2=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_TCPNL=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Control Channel: TLSv1.2, cipher TLSv1/SSLv3 ECDHE-RSA-AES256-GCM-SHA384, 2048 bit RSA
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 [172.28.128.5] Peer Connection Initiated with [AF_INET]172.28.128.5:1194
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 OPTIONS IMPORT: reading client specific options from: /etc/openvpn/ccd/172.28.128.5
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: Learn: 192.168.1.2 -> 172.28.128.5/172.28.128.5:1194
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: primary virtual IP for 172.28.128.5/172.28.128.5:1194: 192.168.1.2
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 PUSH: Received control message: 'PUSH_REQUEST'
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 SENT CONTROL [172.28.128.5]: 'PUSH_REPLY,route-gateway 192.168.1.1,topology subnet,ping 10,ping-restart 120,ifconfig 192.168.1.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1549 D:1450 EF:49 EB:406 ET:0 EL:3 ]
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Encrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Decrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:52:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: bad source address from client [172.28.128.5], packet dropped

What can be seen here is that the client initially connects and sets up the TLS control channel. The interesting MTU related bits are the first occurrence of Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ] from the initial setup which comes from

  
    
      openvpn/src/openvpn/init.c
    
    
         Line 4055
      in
      7a1b6a0
    
  
  
    

        
          
           do_print_data_channel_mtu_parms(c); 
        
    
  

.
There's another entry for it with Data Channel MTU parms [ L:1549 D:1450 EF:49 EB:406 ET:0 EL:3 ] that comes from 
  
    
      openvpn/src/openvpn/ssl.c
    
    
         Line 1986
      in
      f3705dd
    
  
  
    

        
          
           frame_print(frame, D_MTU_INFO, ""Data Channel MTU parms""); 
        
    
  

. So there's an adjustment that happens twice, once for for the client initialization and once for the TLS connection setup.
When a client reconnects, the following is shown in the logs:
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: new session incoming connection from [AF_INET]172.28.128.5:1194
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 VERIFY OK: depth=1, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=GitHub Enterprise VPN, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 VERIFY OK: depth=0, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=172.28.128.5, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_VER=2.4.0
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_PLAT=linux
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_PROTO=2
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_NCP=2
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZ4=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZ4v2=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZO=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_COMP_STUB=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_COMP_STUBv2=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_TCPNL=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: move_session: dest=TM_ACTIVE src=TM_UNTRUSTED reinit_src=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: tls_multi_process: untrusted session promoted to semi-trusted
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Control Channel: TLSv1.2, cipher TLSv1/SSLv3 ECDHE-RSA-AES256-GCM-SHA384, 2048 bit RSA
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 PUSH: Received control message: 'PUSH_REQUEST'
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 SENT CONTROL [172.28.128.5]: 'PUSH_REPLY,route-gateway 192.168.1.1,topology subnet,ping 10,ping-restart 120,ifconfig 192.168.1.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1477 D:1450 EF:-23 EB:406 ET:0 EL:3 ]
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Encrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Decrypt: Cipher 'AES-256-GCM' initialized with 256 bit key

What can be seen here is that there's no client initialization since the connection setup is reused. This can also be seen from the TLS: tls_multi_process: untrusted session promoted to semi-trusted bit in the logs. This shows that we're reusing the TLS connection. What still happens though is another MTU data channel change in Data Channel MTU parms [ L:1477 D:1450 EF:-23 EB:406 ET:0 EL:3 ] happens. This means the channel is shrinking. This happens on each restart of a client:
May 05 11:00:06 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1405 D:1405 EF:-95 EB:406 ET:0 EL:3 ]

And after another restart:
May 05 11:00:39 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1333 D:1333 EF:-167 EB:406 ET:0 EL:3 ]

After a few restarts, OpenVPN packets start getting dropped with the following error message:
May 05 11:00:41 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TCP/UDP packet too large on write to [AF_INET]172.28.128.5:1194 (tried=1419,max=1333)

This means not all traffic through the tunnel works anymore. This then leads to strange hard to debug issues where only bigger packets get dropped but smaller ones work. This issue is also reported in https://community.openvpn.net/openvpn/ticket/879.
I'm also sending this as a patch to the mailing list. I have no idea if this is the right approach or if there's another way to know if the connection is reused or not and if the frame calculation should be skipped or not.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,87,2017-05-05T11:38:02Z,2021-06-16T10:19:22Z,2021-06-16T10:19:24Z,CLOSED,False,16,7,2,https://github.com/dbussink,Don't resize the MTU windows on a reused connection,1,[],https://github.com/OpenVPN/openvpn/pull/87,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/87#issuecomment-299512568,"When testing upgrading OpenVPN from 2.3 to 2.4, we ran into an issue where every time the same client reconnects the MTU for the tunnel used shrinks, eventually leading to packets being dropped by OpenVPN.
Reproduced the problem with a 2 node setup, one as the server and the other one as a client. Each time the client is restarted the packet sizes shrink until it breaks.
Configuration for the server
/etc/openvpn/server.conf

port 1194
proto udp
dev tun

ca /etc/openvpn/easy-rsa/keys/ca.crt
cert /etc/openvpn/easy-rsa/keys/server.crt
key /etc/openvpn/easy-rsa/keys/server.key
dh none

server 192.168.1.0 255.255.255.0
topology subnet
client-config-dir /etc/openvpn/ccd

client-to-client
keepalive 10 120

user nobody
group nogroup
persist-key
persist-tun
status /var/run/openvpn-status.log
log    /var/log/openvpn/openvpn.log
verb 5

Configuration for the client:
/etc/openvpn/client.conf

client
dev tun
proto udp
float
remote 172.28.128.4 1194
user nobody
group nogroup

persist-key
persist-tun

ca /etc/openvpn/easy-rsa/keys/172.28.128.5-ca.crt
cert /etc/openvpn/easy-rsa/keys/172.28.128.5.crt
key /etc/openvpn/easy-rsa/keys/172.28.128.5.key
log /var/log/openvpn/openvpn.log

ns-cert-type server
verb 5

What happens during the first time the client connects from the perspective of the logs is the following (server log):
May 05 10:50:59 test-primary systemd[1]: Started OpenVPN connection to server.
May 05 10:50:59 test-primary ovpn-server[17464]: Failed to extract curve from certificate (UNDEF), using secp384r1 instead.
May 05 10:50:59 test-primary ovpn-server[17464]: ECDH curve secp384r1 added
May 05 10:50:59 test-primary ovpn-server[17464]: TLS-Auth MTU parms [ L:1621 D:1212 EF:38 EB:0 ET:0 EL:3 ]
May 05 10:50:59 test-primary ovpn-server[17464]: TUN/TAP device tun0 opened
May 05 10:50:59 test-primary ovpn-server[17464]: TUN/TAP TX queue length set to 100
May 05 10:50:59 test-primary ovpn-server[17464]: do_ifconfig, tt->did_ifconfig_ipv6_setup=0
May 05 10:50:59 test-primary ovpn-server[17464]: /sbin/ip link set dev tun0 up mtu 1500
May 05 10:50:59 test-primary ovpn-server[17464]: /sbin/ip addr add dev tun0 192.168.1.1/24 broadcast 192.168.1.255
May 05 10:50:59 test-primary ovpn-server[17464]: Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ]
May 05 10:50:59 test-primary ovpn-server[17464]: Could not determine IPv4/IPv6 protocol. Using AF_INET
May 05 10:50:59 test-primary ovpn-server[17464]: Socket Buffers: R=[212992->212992] S=[212992->212992]
May 05 10:50:59 test-primary ovpn-server[17464]: UDPv4 link local (bound): [AF_INET][undef]:1194
May 05 10:50:59 test-primary ovpn-server[17464]: UDPv4 link remote: [AF_UNSPEC]
May 05 10:50:59 test-primary ovpn-server[17464]: GID set to nogroup
May 05 10:50:59 test-primary ovpn-server[17464]: UID set to nobody
May 05 10:50:59 test-primary ovpn-server[17464]: MULTI: multi_init called, r=256 v=256
May 05 10:50:59 test-primary ovpn-server[17464]: IFCONFIG POOL: base=192.168.1.2 size=252, ipv6=0
May 05 10:50:59 test-primary ovpn-server[17464]: Initialization Sequence Completed
May 05 10:52:27 test-primary ovpn-server[17464]: MULTI: multi_create_instance called
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Re-using SSL/TLS context
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Control Channel MTU parms [ L:1621 D:1212 EF:38 EB:0 ET:0 EL:3 ]
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ]
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Local Options String (VER=V4): 'V4,dev-type tun,link-mtu 1541,tun-mtu 1500,proto UDPv4,cipher BF-CBC,auth SHA1,keysize 128,key-method 2,tls-server'
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Expected Remote Options String (VER=V4): 'V4,dev-type tun,link-mtu 1541,tun-mtu 1500,proto UDPv4,cipher BF-CBC,auth SHA1,keysize 128,key-method 2,tls-client'
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 TLS: Initial packet from [AF_INET]172.28.128.5:1194, sid=59ea927a 09799019
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 VERIFY OK: depth=1, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=GitHub Enterprise VPN, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 VERIFY OK: depth=0, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=172.28.128.5, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_VER=2.4.0
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_PLAT=linux
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_PROTO=2
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_NCP=2
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZ4=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZ4v2=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZO=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_COMP_STUB=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_COMP_STUBv2=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_TCPNL=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Control Channel: TLSv1.2, cipher TLSv1/SSLv3 ECDHE-RSA-AES256-GCM-SHA384, 2048 bit RSA
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 [172.28.128.5] Peer Connection Initiated with [AF_INET]172.28.128.5:1194
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 OPTIONS IMPORT: reading client specific options from: /etc/openvpn/ccd/172.28.128.5
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: Learn: 192.168.1.2 -> 172.28.128.5/172.28.128.5:1194
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: primary virtual IP for 172.28.128.5/172.28.128.5:1194: 192.168.1.2
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 PUSH: Received control message: 'PUSH_REQUEST'
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 SENT CONTROL [172.28.128.5]: 'PUSH_REPLY,route-gateway 192.168.1.1,topology subnet,ping 10,ping-restart 120,ifconfig 192.168.1.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1549 D:1450 EF:49 EB:406 ET:0 EL:3 ]
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Encrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Decrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:52:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: bad source address from client [172.28.128.5], packet dropped

What can be seen here is that the client initially connects and sets up the TLS control channel. The interesting MTU related bits are the first occurrence of Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ] from the initial setup which comes from

  
    
      openvpn/src/openvpn/init.c
    
    
         Line 4055
      in
      7a1b6a0
    
  
  
    

        
          
           do_print_data_channel_mtu_parms(c); 
        
    
  

.
There's another entry for it with Data Channel MTU parms [ L:1549 D:1450 EF:49 EB:406 ET:0 EL:3 ] that comes from 
  
    
      openvpn/src/openvpn/ssl.c
    
    
         Line 1986
      in
      f3705dd
    
  
  
    

        
          
           frame_print(frame, D_MTU_INFO, ""Data Channel MTU parms""); 
        
    
  

. So there's an adjustment that happens twice, once for for the client initialization and once for the TLS connection setup.
When a client reconnects, the following is shown in the logs:
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: new session incoming connection from [AF_INET]172.28.128.5:1194
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 VERIFY OK: depth=1, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=GitHub Enterprise VPN, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 VERIFY OK: depth=0, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=172.28.128.5, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_VER=2.4.0
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_PLAT=linux
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_PROTO=2
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_NCP=2
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZ4=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZ4v2=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZO=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_COMP_STUB=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_COMP_STUBv2=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_TCPNL=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: move_session: dest=TM_ACTIVE src=TM_UNTRUSTED reinit_src=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: tls_multi_process: untrusted session promoted to semi-trusted
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Control Channel: TLSv1.2, cipher TLSv1/SSLv3 ECDHE-RSA-AES256-GCM-SHA384, 2048 bit RSA
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 PUSH: Received control message: 'PUSH_REQUEST'
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 SENT CONTROL [172.28.128.5]: 'PUSH_REPLY,route-gateway 192.168.1.1,topology subnet,ping 10,ping-restart 120,ifconfig 192.168.1.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1477 D:1450 EF:-23 EB:406 ET:0 EL:3 ]
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Encrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Decrypt: Cipher 'AES-256-GCM' initialized with 256 bit key

What can be seen here is that there's no client initialization since the connection setup is reused. This can also be seen from the TLS: tls_multi_process: untrusted session promoted to semi-trusted bit in the logs. This shows that we're reusing the TLS connection. What still happens though is another MTU data channel change in Data Channel MTU parms [ L:1477 D:1450 EF:-23 EB:406 ET:0 EL:3 ] happens. This means the channel is shrinking. This happens on each restart of a client:
May 05 11:00:06 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1405 D:1405 EF:-95 EB:406 ET:0 EL:3 ]

And after another restart:
May 05 11:00:39 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1333 D:1333 EF:-167 EB:406 ET:0 EL:3 ]

After a few restarts, OpenVPN packets start getting dropped with the following error message:
May 05 11:00:41 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TCP/UDP packet too large on write to [AF_INET]172.28.128.5:1194 (tried=1419,max=1333)

This means not all traffic through the tunnel works anymore. This then leads to strange hard to debug issues where only bigger packets get dropped but smaller ones work. This issue is also reported in https://community.openvpn.net/openvpn/ticket/879.
I'm also sending this as a patch to the mailing list. I have no idea if this is the right approach or if there's another way to know if the connection is reused or not and if the frame calculation should be skipped or not.","Hi,
On Fri, May 05, 2017 at 04:38:05AM -0700, Dirkjan Bussink wrote:
 When testing upgrading OpenVPN from 2.3 to 2.4, we ran into an issue where every time the same client reconnects the MTU for the tunnel used shrinks, eventually leading to packets being dropped by OpenVPN.
Thanks for the patch.  This looks good on a first glance.

Steffan as the author of the original code has promised to look into
this over the weekend - I'm not sure if I'm overlooking intricacies
here (like, new PUSH_REQUEST with new options on reconnect? - this
might need a new frame init due to a changed cipher...)

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,87,2017-05-05T11:38:02Z,2021-06-16T10:19:22Z,2021-06-16T10:19:24Z,CLOSED,False,16,7,2,https://github.com/dbussink,Don't resize the MTU windows on a reused connection,1,[],https://github.com/OpenVPN/openvpn/pull/87,https://github.com/dbussink,3,https://github.com/OpenVPN/openvpn/pull/87#issuecomment-862237366,"When testing upgrading OpenVPN from 2.3 to 2.4, we ran into an issue where every time the same client reconnects the MTU for the tunnel used shrinks, eventually leading to packets being dropped by OpenVPN.
Reproduced the problem with a 2 node setup, one as the server and the other one as a client. Each time the client is restarted the packet sizes shrink until it breaks.
Configuration for the server
/etc/openvpn/server.conf

port 1194
proto udp
dev tun

ca /etc/openvpn/easy-rsa/keys/ca.crt
cert /etc/openvpn/easy-rsa/keys/server.crt
key /etc/openvpn/easy-rsa/keys/server.key
dh none

server 192.168.1.0 255.255.255.0
topology subnet
client-config-dir /etc/openvpn/ccd

client-to-client
keepalive 10 120

user nobody
group nogroup
persist-key
persist-tun
status /var/run/openvpn-status.log
log    /var/log/openvpn/openvpn.log
verb 5

Configuration for the client:
/etc/openvpn/client.conf

client
dev tun
proto udp
float
remote 172.28.128.4 1194
user nobody
group nogroup

persist-key
persist-tun

ca /etc/openvpn/easy-rsa/keys/172.28.128.5-ca.crt
cert /etc/openvpn/easy-rsa/keys/172.28.128.5.crt
key /etc/openvpn/easy-rsa/keys/172.28.128.5.key
log /var/log/openvpn/openvpn.log

ns-cert-type server
verb 5

What happens during the first time the client connects from the perspective of the logs is the following (server log):
May 05 10:50:59 test-primary systemd[1]: Started OpenVPN connection to server.
May 05 10:50:59 test-primary ovpn-server[17464]: Failed to extract curve from certificate (UNDEF), using secp384r1 instead.
May 05 10:50:59 test-primary ovpn-server[17464]: ECDH curve secp384r1 added
May 05 10:50:59 test-primary ovpn-server[17464]: TLS-Auth MTU parms [ L:1621 D:1212 EF:38 EB:0 ET:0 EL:3 ]
May 05 10:50:59 test-primary ovpn-server[17464]: TUN/TAP device tun0 opened
May 05 10:50:59 test-primary ovpn-server[17464]: TUN/TAP TX queue length set to 100
May 05 10:50:59 test-primary ovpn-server[17464]: do_ifconfig, tt->did_ifconfig_ipv6_setup=0
May 05 10:50:59 test-primary ovpn-server[17464]: /sbin/ip link set dev tun0 up mtu 1500
May 05 10:50:59 test-primary ovpn-server[17464]: /sbin/ip addr add dev tun0 192.168.1.1/24 broadcast 192.168.1.255
May 05 10:50:59 test-primary ovpn-server[17464]: Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ]
May 05 10:50:59 test-primary ovpn-server[17464]: Could not determine IPv4/IPv6 protocol. Using AF_INET
May 05 10:50:59 test-primary ovpn-server[17464]: Socket Buffers: R=[212992->212992] S=[212992->212992]
May 05 10:50:59 test-primary ovpn-server[17464]: UDPv4 link local (bound): [AF_INET][undef]:1194
May 05 10:50:59 test-primary ovpn-server[17464]: UDPv4 link remote: [AF_UNSPEC]
May 05 10:50:59 test-primary ovpn-server[17464]: GID set to nogroup
May 05 10:50:59 test-primary ovpn-server[17464]: UID set to nobody
May 05 10:50:59 test-primary ovpn-server[17464]: MULTI: multi_init called, r=256 v=256
May 05 10:50:59 test-primary ovpn-server[17464]: IFCONFIG POOL: base=192.168.1.2 size=252, ipv6=0
May 05 10:50:59 test-primary ovpn-server[17464]: Initialization Sequence Completed
May 05 10:52:27 test-primary ovpn-server[17464]: MULTI: multi_create_instance called
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Re-using SSL/TLS context
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Control Channel MTU parms [ L:1621 D:1212 EF:38 EB:0 ET:0 EL:3 ]
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ]
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Local Options String (VER=V4): 'V4,dev-type tun,link-mtu 1541,tun-mtu 1500,proto UDPv4,cipher BF-CBC,auth SHA1,keysize 128,key-method 2,tls-server'
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Expected Remote Options String (VER=V4): 'V4,dev-type tun,link-mtu 1541,tun-mtu 1500,proto UDPv4,cipher BF-CBC,auth SHA1,keysize 128,key-method 2,tls-client'
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 TLS: Initial packet from [AF_INET]172.28.128.5:1194, sid=59ea927a 09799019
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 VERIFY OK: depth=1, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=GitHub Enterprise VPN, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 VERIFY OK: depth=0, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=172.28.128.5, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_VER=2.4.0
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_PLAT=linux
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_PROTO=2
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_NCP=2
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZ4=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZ4v2=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_LZO=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_COMP_STUB=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_COMP_STUBv2=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 peer info: IV_TCPNL=1
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 Control Channel: TLSv1.2, cipher TLSv1/SSLv3 ECDHE-RSA-AES256-GCM-SHA384, 2048 bit RSA
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5:1194 [172.28.128.5] Peer Connection Initiated with [AF_INET]172.28.128.5:1194
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 OPTIONS IMPORT: reading client specific options from: /etc/openvpn/ccd/172.28.128.5
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: Learn: 192.168.1.2 -> 172.28.128.5/172.28.128.5:1194
May 05 10:52:27 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: primary virtual IP for 172.28.128.5/172.28.128.5:1194: 192.168.1.2
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 PUSH: Received control message: 'PUSH_REQUEST'
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 SENT CONTROL [172.28.128.5]: 'PUSH_REPLY,route-gateway 192.168.1.1,topology subnet,ping 10,ping-restart 120,ifconfig 192.168.1.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1549 D:1450 EF:49 EB:406 ET:0 EL:3 ]
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Encrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:52:28 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Decrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:52:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 MULTI: bad source address from client [172.28.128.5], packet dropped

What can be seen here is that the client initially connects and sets up the TLS control channel. The interesting MTU related bits are the first occurrence of Data Channel MTU parms [ L:1621 D:1450 EF:121 EB:406 ET:0 EL:3 ] from the initial setup which comes from

  
    
      openvpn/src/openvpn/init.c
    
    
         Line 4055
      in
      7a1b6a0
    
  
  
    

        
          
           do_print_data_channel_mtu_parms(c); 
        
    
  

.
There's another entry for it with Data Channel MTU parms [ L:1549 D:1450 EF:49 EB:406 ET:0 EL:3 ] that comes from 
  
    
      openvpn/src/openvpn/ssl.c
    
    
         Line 1986
      in
      f3705dd
    
  
  
    

        
          
           frame_print(frame, D_MTU_INFO, ""Data Channel MTU parms""); 
        
    
  

. So there's an adjustment that happens twice, once for for the client initialization and once for the TLS connection setup.
When a client reconnects, the following is shown in the logs:
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: new session incoming connection from [AF_INET]172.28.128.5:1194
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 VERIFY OK: depth=1, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=GitHub Enterprise VPN, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 VERIFY OK: depth=0, C=US, ST=CA, L=San Francisco, O=GitHub, OU=Enterprise, CN=172.28.128.5, name=GitHub Enterprise VPN, emailAddress=enterprise@github.com
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_VER=2.4.0
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_PLAT=linux
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_PROTO=2
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_NCP=2
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZ4=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZ4v2=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_LZO=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_COMP_STUB=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_COMP_STUBv2=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 peer info: IV_TCPNL=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: move_session: dest=TM_ACTIVE src=TM_UNTRUSTED reinit_src=1
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TLS: tls_multi_process: untrusted session promoted to semi-trusted
May 05 10:57:29 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Control Channel: TLSv1.2, cipher TLSv1/SSLv3 ECDHE-RSA-AES256-GCM-SHA384, 2048 bit RSA
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 PUSH: Received control message: 'PUSH_REQUEST'
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 SENT CONTROL [172.28.128.5]: 'PUSH_REPLY,route-gateway 192.168.1.1,topology subnet,ping 10,ping-restart 120,ifconfig 192.168.1.2 255.255.255.0,peer-id 0,cipher AES-256-GCM' (status=1)
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1477 D:1450 EF:-23 EB:406 ET:0 EL:3 ]
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Encrypt: Cipher 'AES-256-GCM' initialized with 256 bit key
May 05 10:57:30 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel Decrypt: Cipher 'AES-256-GCM' initialized with 256 bit key

What can be seen here is that there's no client initialization since the connection setup is reused. This can also be seen from the TLS: tls_multi_process: untrusted session promoted to semi-trusted bit in the logs. This shows that we're reusing the TLS connection. What still happens though is another MTU data channel change in Data Channel MTU parms [ L:1477 D:1450 EF:-23 EB:406 ET:0 EL:3 ] happens. This means the channel is shrinking. This happens on each restart of a client:
May 05 11:00:06 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1405 D:1405 EF:-95 EB:406 ET:0 EL:3 ]

And after another restart:
May 05 11:00:39 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 Data Channel MTU parms [ L:1333 D:1333 EF:-167 EB:406 ET:0 EL:3 ]

After a few restarts, OpenVPN packets start getting dropped with the following error message:
May 05 11:00:41 test-primary ovpn-server[17464]: 172.28.128.5/172.28.128.5:1194 TCP/UDP packet too large on write to [AF_INET]172.28.128.5:1194 (tried=1419,max=1333)

This means not all traffic through the tunnel works anymore. This then leads to strange hard to debug issues where only bigger packets get dropped but smaller ones work. This issue is also reported in https://community.openvpn.net/openvpn/ticket/879.
I'm also sending this as a patch to the mailing list. I have no idea if this is the right approach or if there's another way to know if the connection is reused or not and if the frame calculation should be skipped or not.",This has been since fixed.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,88,2017-05-12T12:56:03Z,2017-08-23T19:40:24Z,2017-08-23T19:40:27Z,CLOSED,False,9,1,1,https://github.com/xen0l,Add option to enable iproute2 support,1,[],https://github.com/OpenVPN/openvpn/pull/88,https://github.com/xen0l,1,https://github.com/OpenVPN/openvpn/pull/88,This PR adds option to build openvpn RPMs with iproute2 support.,This PR adds option to build openvpn RPMs with iproute2 support.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,89,2017-07-16T08:23:19Z,,2017-07-19T18:05:40Z,OPEN,False,31,3,4,https://github.com/c0r0n3r,Support server cipher preference,1,[],https://github.com/OpenVPN/openvpn/pull/89,https://github.com/c0r0n3r,1,https://github.com/OpenVPN/openvpn/pull/89,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,89,2017-07-16T08:23:19Z,,2017-07-19T18:05:40Z,OPEN,False,31,3,4,https://github.com/c0r0n3r,Support server cipher preference,1,[],https://github.com/OpenVPN/openvpn/pull/89,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/89#issuecomment-315616020,,"Hi,
On Sun, Jul 16, 2017 at 01:23:21AM -0700, Szilárd Pfeiffer wrote:
 -- Commit Summary --

   * Support server cipher preference
Is there a good reason why one wouldn't want to enable this at all
times?

While the code is simple enough, adding yet another tls option is not
necessarily the best way forward - it will confuse people, cause extra
questions to be asked, and will eventually break things because the
testing requirement for ""test with and without that option"" just doubles.

gert
…
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,89,2017-07-16T08:23:19Z,,2017-07-19T18:05:40Z,OPEN,False,31,3,4,https://github.com/c0r0n3r,Support server cipher preference,1,[],https://github.com/OpenVPN/openvpn/pull/89,https://github.com/c0r0n3r,3,https://github.com/OpenVPN/openvpn/pull/89#issuecomment-316469522,,"On 2017-07-16 17:17, Gert Doering wrote:
 Hi,

 On Sun, Jul 16, 2017 at 01:23:21AM -0700, Szilárd Pfeiffer wrote:
 > -- Commit Summary --
 >
 > * Support server cipher preference

 Is there a good reason why one wouldn't want to enable this at all
 times?

 While the code is simple enough, adding yet another tls option is not
 necessarily the best way forward - it will confuse people, cause extra
 questions to be asked, and will eventually break things because the
 testing requirement for ""test with and without that option"" just doubles.
First of all, I've just followed the method used by NGINX/Apache/... so
added an option.

Anyway, if there is a server configuration where tls-cipher is set
explicitly (by list of cipher suites), but in a bad order (for instance
RSA authentication is preferred over DHE), after the upgrade to a new
OpenVPN version, which forces the server's cipher preference order to
the clients, weaker cipher suite will be used than it had been used
before the upgrade.

Szilárd",True,{'THUMBS_UP': ['https://github.com/pieterlange']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,90,2017-07-17T03:17:10Z,2017-07-17T07:14:13Z,2017-07-17T07:14:13Z,CLOSED,False,1,1,1,https://github.com/king6cong,Fix typo in configure.ac,1,[],https://github.com/OpenVPN/openvpn/pull/90,https://github.com/king6cong,1,https://github.com/OpenVPN/openvpn/pull/90,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,90,2017-07-17T03:17:10Z,2017-07-17T07:14:13Z,2017-07-17T07:14:13Z,CLOSED,False,1,1,1,https://github.com/king6cong,Fix typo in configure.ac,1,[],https://github.com/OpenVPN/openvpn/pull/90,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/90#issuecomment-315675089,,"Hi,
On Mon, Jul 17, 2017 at 03:17:13AM +0000, wangcong wrote:
   * Fix typo in configure.ac
Looks reasonable.  Please send to openvpn-devel@lists.sourceforge.net
(we do not take patches from pull requests)

gert
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,90,2017-07-17T03:17:10Z,2017-07-17T07:14:13Z,2017-07-17T07:14:13Z,CLOSED,False,1,1,1,https://github.com/king6cong,Fix typo in configure.ac,1,[],https://github.com/OpenVPN/openvpn/pull/90,https://github.com/king6cong,3,https://github.com/OpenVPN/openvpn/pull/90#issuecomment-315682146,,Done. Thanks,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/AntAgna,1,https://github.com/OpenVPN/openvpn/pull/91,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.",True,{'THUMBS_UP': ['https://github.com/Zrin']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/AntAgna,2,https://github.com/OpenVPN/openvpn/pull/91#issuecomment-325806236,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","The idea behind this is to be able to limit access to a subgroup of certificate holders.
Imagine this scenario :
Multiple VPN servers serve various purposes within an organization.
The same CA and client certificate files are used for the different VPN servers.
For one server, we want to limit access to a subset of the clients.
Here are the possible solutions I found :
Use ccd files and the --ccd-exclusive option to limit access.
Use ""--verify-x509-name specific-org name"" and ""--x509-username-field OU"" to accept only clients that have the proper OU.
The ccd method would work but it gets complex to manage for a large number of clients and it means configuring the VPN server every time a new user is added.
The verify-x509-name method works but x509-username-field causes a major problem. The x509-username-field option makes OpenVPN use that field as client identifier in the logs files, which makes all clients indistinguishable.
What I suggest is to add the match type ""subject-prefix"" to the --verify-x509-name option.
This would allow using this : --verify-x509-name 'C=..., ST=..., O=..., OU=specific-org' subject-prefix
To limit access to the clients that have the proper OU in their certificate without the need for the --x509-username-field option.",True,{'THUMBS_UP': ['https://github.com/Zrin']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/syzzer,3,https://github.com/OpenVPN/openvpn/pull/91#issuecomment-326417348,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","Hi,
The code looks nice and clean, but I don't think the use case is worth adding an option. Is there a reason why you don't use the a --tls-verify script for this?  That gives you a lot of flexibility and e.g. allows you to do stuff like prefix matching or much more fancy matching such as regex matching.
-Steffan",True,{'THUMBS_DOWN': ['https://github.com/Zrin']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/AntAgna,4,https://github.com/OpenVPN/openvpn/pull/91#issuecomment-332358619,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","I hadn't thought about using a --tls-verify script, I will try it.
But I think it would be better if it would be built in.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/cron2,5,https://github.com/OpenVPN/openvpn/pull/91#issuecomment-332428727,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","Hi,
On Tue, Sep 26, 2017 at 03:50:34PM -0700, Antoine W. Campagna wrote:
 I hadn't thought about using a --tls-verify script, I will try it.
 But I think it would be better if it would be built in.
Too many special-case variants led us to what we have now - way over
100 special options, and a hard to maintain code base.

We aim for less options, not for more :-) - and special-case needs that
can be done easily using one of the script hooks are usually better done
there.

gert
…
-- 
USENET is *not* the non-clickable part of WWW!
                                                           //www.muc.de/~gert/
Gert Doering - Munich, Germany                             gert@greenie.muc.de
fax: +49-89-35655025                        gert@net.informatik.tu-muenchen.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/chipitsine,6,https://github.com/OpenVPN/openvpn/pull/91#issuecomment-332434781,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","there's ""contrib"" folder for such examples.
@AntAgna , what do you think about better documentation (with examples) ?
I agree with Gert, tls-verify looks better and more flexible",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/AntAgna,7,https://github.com/OpenVPN/openvpn/pull/91#issuecomment-332863332,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","I have made it work using --tls-verify
verify-client.py
Thank you",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/AntAgna,8,https://github.com/OpenVPN/openvpn/pull/91#issuecomment-332864961,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","But I have to say though that the documentation about --tls-verify is not clear.
The documentation mentions that the script receives the ""X509 common name (cn)"".
But in fact, it receives the full subject.
And the formatting of the subject is not mentioned.
Is it using commas , or slashes / ?
Fortunately, my method works with both.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/syzzer,9,https://github.com/OpenVPN/openvpn/pull/91#issuecomment-332869035,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","Yeah, the --tls-verify docs could use some improvement. It's on my list of things to update some time, but so are 1001 other things :(  But documentation patches are welcome ofc ;-)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,91,2017-08-28T20:42:50Z,2017-09-28T14:56:59Z,2018-10-09T08:57:17Z,CLOSED,False,25,7,3,https://github.com/AntAgna,Add match type subject-prefix to --verify-x509-name option,2,[],https://github.com/OpenVPN/openvpn/pull/91,https://github.com/Zrin,10,https://github.com/OpenVPN/openvpn/pull/91#issuecomment-428111483,"Allows matching the beginning of the X509 subject in a similar manner as existing match type name-prefix.
Is useful to block access to all but a group of clients.","There are several reasons for introduction of this option and against use of --tls-verify:


readability: this option clearly states what it does in the server configuration - gives better maintainability


simplicity: prevent introduction of points of failure


performance: invoking a script (process) for every TLS negotiation is a significant performance hit; consider also DoS attacks


it's logical: to create a sub-CA for networking / VPN and restrict VPN clients in that way. It's logical to be able to match a part of the DN, this is actually the reason why DN is structured as it is - to be able to match parts of it.


Please reconsider adding match type 'subject-prefix' to --verify-x509-name.
Thank you!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,92,2017-10-07T17:37:30Z,2017-10-07T17:45:03Z,2017-11-10T10:37:05Z,CLOSED,False,4661,2244,266,https://github.com/Ph0enix777,Coverity scan,139,[],https://github.com/OpenVPN/openvpn/pull/92,https://github.com/Ph0enix777,1,https://github.com/OpenVPN/openvpn/pull/92,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,92,2017-10-07T17:37:30Z,2017-10-07T17:45:03Z,2017-11-10T10:37:05Z,CLOSED,False,4661,2244,266,https://github.com/Ph0enix777,Coverity scan,139,[],https://github.com/OpenVPN/openvpn/pull/92,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/92#issuecomment-334953454,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","this looks a bit... totally broken.  Whatever happened here is not a new patch but an old diff, long included.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,93,2017-10-25T18:10:48Z,2018-08-18T11:00:25Z,2018-08-18T11:00:25Z,CLOSED,False,1,1,1,https://github.com/g1tman,Fixed Grammar in Readme,1,[],https://github.com/OpenVPN/openvpn/pull/93,https://github.com/g1tman,1,https://github.com/OpenVPN/openvpn/pull/93,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,93,2017-10-25T18:10:48Z,2018-08-18T11:00:25Z,2018-08-18T11:00:25Z,CLOSED,False,1,1,1,https://github.com/g1tman,Fixed Grammar in Readme,1,[],https://github.com/OpenVPN/openvpn/pull/93,https://github.com/syzzer,2,https://github.com/OpenVPN/openvpn/pull/93#issuecomment-414049935,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","This is not a grammar fix, but introduces a grammar bug.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,94,2017-11-02T22:11:31Z,,2017-11-03T14:55:03Z,OPEN,False,57,10,10,https://github.com/rtkypoeluev,Added support for TPM 1.2 OpenSSL crypto engine (based on patch https…,2,[],https://github.com/OpenVPN/openvpn/pull/94,https://github.com/rtkypoeluev,1,https://github.com/OpenVPN/openvpn/pull/94,"Added support for TPM 1.2 OpenSSL crypto engine (based on patch https://github.com/ThomasHabets/openvpn, but updated for newer OpenVPN 2.4.4 and OpenSSL 1.0.2g)
In order to use TPM 1.2, please follow these steps

Install OpenSSL TPM engine (tested with v0.4.2), https://sourceforge.net/projects/trousers/files/OpenSSL%20TPM%20Engine/0.4.2/
Create OpenSSL configuration file, as an example /etc/ssl/openssl.cnf

#
# OpenSSL example configuration file. This file will load the TPM engine
# for all operations that the TPM engine implements for all apps that
# have OpenSSL config support compiled into them.
#
# Adding OpenSSL config support is as simple as adding the following line to
# the app:
#
# #define OPENSSL_LOAD_CONF 1
#
openssl_conf = openssl_def
 
[openssl_def]
engines = engine_section
 
[engine_section]
 
foo = tpm_section
 
[tpm_section]
dynamic_path = /usr/local/lib/engines/libtpm.so
engine_id = tpm
default_algorithms = ALL
#default_algorithms = RAND,RSA
init = 1
...
<rest of the config file>


Create a TPM key

$ create_tpm_key client.key.pem


Create a certificate request with the TPM key (and obtain client certificate and CA certificate)

openssl req -keyform engine -engine tpm <...other params...>


Specify TPM key/certificate in OpenVPN configuration file, client.conf

...
# SSL/TLS parms.
# See the server config file for more
# description.  It's best to use
# a separate .crt/.key file pair
# for each client.  A single ca
# file can be used for all clients.
ca ca.cert.pem
cert client.cert.pem
key client.key.pem
key-engine tpm
engine tpm
...
<rest of the config file>


Start OpenVPN client to connect

$ openvpn client.conf

Signed-off-by: Yuri Poeluev yuri.poeluev@arcticwolf.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Added support for TPM 1.2 OpenSSL crypto engine (based on patch https://github.com/ThomasHabets/openvpn, but updated for newer OpenVPN 2.4.4 and OpenSSL 1.0.2g)
In order to use TPM 1.2, please follow these steps

Install OpenSSL TPM engine (tested with v0.4.2), https://sourceforge.net/projects/trousers/files/OpenSSL%20TPM%20Engine/0.4.2/
Create OpenSSL configuration file, as an example /etc/ssl/openssl.cnf

#
# OpenSSL example configuration file. This file will load the TPM engine
# for all operations that the TPM engine implements for all apps that
# have OpenSSL config support compiled into them.
#
# Adding OpenSSL config support is as simple as adding the following line to
# the app:
#
# #define OPENSSL_LOAD_CONF 1
#
openssl_conf = openssl_def
 
[openssl_def]
engines = engine_section
 
[engine_section]
 
foo = tpm_section
 
[tpm_section]
dynamic_path = /usr/local/lib/engines/libtpm.so
engine_id = tpm
default_algorithms = ALL
#default_algorithms = RAND,RSA
init = 1
...
<rest of the config file>


Create a TPM key

$ create_tpm_key client.key.pem


Create a certificate request with the TPM key (and obtain client certificate and CA certificate)

openssl req -keyform engine -engine tpm <...other params...>


Specify TPM key/certificate in OpenVPN configuration file, client.conf

...
# SSL/TLS parms.
# See the server config file for more
# description.  It's best to use
# a separate .crt/.key file pair
# for each client.  A single ca
# file can be used for all clients.
ca ca.cert.pem
cert client.cert.pem
key client.key.pem
key-engine tpm
engine tpm
...
<rest of the config file>


Start OpenVPN client to connect

$ openvpn client.conf

Signed-off-by: Yuri Poeluev yuri.poeluev@arcticwolf.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,95,2017-11-22T01:27:35Z,2017-11-22T01:29:25Z,2017-11-22T01:29:25Z,CLOSED,False,11140,4309,270,https://github.com/raineexodus,Release/2.3,432,[],https://github.com/OpenVPN/openvpn/pull/95,https://github.com/raineexodus,1,https://github.com/OpenVPN/openvpn/pull/95,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,96,2017-12-03T00:47:53Z,,2017-12-03T00:47:53Z,OPEN,False,8,1,1,https://github.com/mkarvan,Add common_name to the conv method,1,[],https://github.com/OpenVPN/openvpn/pull/96,https://github.com/mkarvan,1,https://github.com/OpenVPN/openvpn/pull/96,"Add common_name to the conv method.
This allows the common_name to be accessible in PAM.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Add common_name to the conv method.
This allows the common_name to be accessible in PAM.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,97,2017-12-05T12:22:44Z,,2021-02-01T08:11:44Z,OPEN,False,47,0,1,https://github.com/engycz,Add a warning for disabled DHCP media sense on Window,1,[],https://github.com/OpenVPN/openvpn/pull/97,https://github.com/engycz,1,https://github.com/OpenVPN/openvpn/pull/97,"When DHCP media sense configuration is disabled, network applications
including DHCP client will not receive information about link status
changes and the link seems to be always connected. This lead to the
non-renewal DHCP address on OpenVPN connect.
DHCP media sense status can by shown with command
""netsh interface ipv4 show global""
There are several reports of problems with DHCP address renewal.
https://community.openvpn.net/openvpn/ticket/665
https://community.openvpn.net/openvpn/ticket/807
Added checking of disabled DHCP media sense and print a warning with
forced dhcp-renew option and suggestion to enable DHCP media sense.
Signed-off-by: Jiří Engelthaler EngyCZ@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","When DHCP media sense configuration is disabled, network applications
including DHCP client will not receive information about link status
changes and the link seems to be always connected. This lead to the
non-renewal DHCP address on OpenVPN connect.
DHCP media sense status can by shown with command
""netsh interface ipv4 show global""
There are several reports of problems with DHCP address renewal.
https://community.openvpn.net/openvpn/ticket/665
https://community.openvpn.net/openvpn/ticket/807
Added checking of disabled DHCP media sense and print a warning with
forced dhcp-renew option and suggestion to enable DHCP media sense.
Signed-off-by: Jiří Engelthaler EngyCZ@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,"{'THUMBS_UP': ['https://github.com/Spacefish', 'https://github.com/lbopp42']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,97,2017-12-05T12:22:44Z,,2021-02-01T08:11:44Z,OPEN,False,47,0,1,https://github.com/engycz,Add a warning for disabled DHCP media sense on Window,1,[],https://github.com/OpenVPN/openvpn/pull/97,https://github.com/basezen,2,https://github.com/OpenVPN/openvpn/pull/97#issuecomment-372530059,"When DHCP media sense configuration is disabled, network applications
including DHCP client will not receive information about link status
changes and the link seems to be always connected. This lead to the
non-renewal DHCP address on OpenVPN connect.
DHCP media sense status can by shown with command
""netsh interface ipv4 show global""
There are several reports of problems with DHCP address renewal.
https://community.openvpn.net/openvpn/ticket/665
https://community.openvpn.net/openvpn/ticket/807
Added checking of disabled DHCP media sense and print a warning with
forced dhcp-renew option and suggestion to enable DHCP media sense.
Signed-off-by: Jiří Engelthaler EngyCZ@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","This report helped me perfectly.
Oh I see, this is not yet in the release. Anyway, thanks and I welcome it but am not an openvpn-devel member so this comment probably doesn't influence much.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,97,2017-12-05T12:22:44Z,,2021-02-01T08:11:44Z,OPEN,False,47,0,1,https://github.com/engycz,Add a warning for disabled DHCP media sense on Window,1,[],https://github.com/OpenVPN/openvpn/pull/97,https://github.com/Spacefish,3,https://github.com/OpenVPN/openvpn/pull/97#issuecomment-509038728,"When DHCP media sense configuration is disabled, network applications
including DHCP client will not receive information about link status
changes and the link seems to be always connected. This lead to the
non-renewal DHCP address on OpenVPN connect.
DHCP media sense status can by shown with command
""netsh interface ipv4 show global""
There are several reports of problems with DHCP address renewal.
https://community.openvpn.net/openvpn/ticket/665
https://community.openvpn.net/openvpn/ticket/807
Added checking of disabled DHCP media sense and print a warning with
forced dhcp-renew option and suggestion to enable DHCP media sense.
Signed-off-by: Jiří Engelthaler EngyCZ@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",Would be nice to have this merged.. Windows Server 2019 seems to have DhcpMediaSense disabled by default and we run into this problem!,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,97,2017-12-05T12:22:44Z,,2021-02-01T08:11:44Z,OPEN,False,47,0,1,https://github.com/engycz,Add a warning for disabled DHCP media sense on Window,1,[],https://github.com/OpenVPN/openvpn/pull/97,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/97#issuecomment-770660601,"When DHCP media sense configuration is disabled, network applications
including DHCP client will not receive information about link status
changes and the link seems to be always connected. This lead to the
non-renewal DHCP address on OpenVPN connect.
DHCP media sense status can by shown with command
""netsh interface ipv4 show global""
There are several reports of problems with DHCP address renewal.
https://community.openvpn.net/openvpn/ticket/665
https://community.openvpn.net/openvpn/ticket/807
Added checking of disabled DHCP media sense and print a warning with
forced dhcp-renew option and suggestion to enable DHCP media sense.
Signed-off-by: Jiří Engelthaler EngyCZ@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi,
On Sun, Jul 07, 2019 at 04:22:50PM -0700, Spacefish wrote:
 Would be nice to have this merged.. Windows Server 2019 seems to have DhcpMediaSense disabled by default and we run into this problem!
The place to get this done is on the openvpn-devel mailing list.

A v2 patch with the suggested changes, rebased to master, needs to be
sent to the list for this to proceed.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,98,2017-12-17T10:55:34Z,2021-11-09T14:29:37Z,2021-11-09T14:29:37Z,CLOSED,False,2,2,1,https://github.com/scop,README.down-root: Fix plugin module name,1,[],https://github.com/OpenVPN/openvpn/pull/98,https://github.com/scop,1,https://github.com/OpenVPN/openvpn/pull/98,"The module name is openvpn-plugin-down-root.so, not openvpn-down-root.so.","The module name is openvpn-plugin-down-root.so, not openvpn-down-root.so.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,98,2017-12-17T10:55:34Z,2021-11-09T14:29:37Z,2021-11-09T14:29:37Z,CLOSED,False,2,2,1,https://github.com/scop,README.down-root: Fix plugin module name,1,[],https://github.com/OpenVPN/openvpn/pull/98,https://github.com/flichtenheld,2,https://github.com/OpenVPN/openvpn/pull/98#issuecomment-962660413,"The module name is openvpn-plugin-down-root.so, not openvpn-down-root.so.","As part of an initiative to clean up the GitHub PR submissions, sending this PR to the mailinglist for inclusion.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,98,2017-12-17T10:55:34Z,2021-11-09T14:29:37Z,2021-11-09T14:29:37Z,CLOSED,False,2,2,1,https://github.com/scop,README.down-root: Fix plugin module name,1,[],https://github.com/OpenVPN/openvpn/pull/98,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/98#issuecomment-964203764,"The module name is openvpn-plugin-down-root.so, not openvpn-down-root.so.",merged,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,99,2018-01-01T23:48:52Z,2018-08-18T10:58:46Z,2018-08-25T04:30:27Z,CLOSED,False,2,2,1,https://github.com/sbrudenell,Support naked CN subjects like 'CN=example.com',1,[],https://github.com/OpenVPN/openvpn/pull/99,https://github.com/sbrudenell,1,https://github.com/OpenVPN/openvpn/pull/99,"I've been using LetsEncrypt for my certificates, with a whitelist of CNs using the verify-cn sample script.
LetsEncrypt issues certificates with subjects which include only a CN, like CN=www.brudenell.name. The script's current regex misses these.
Unfortunately I don't intend to subscribe to openvpn-devel@lists.sourceforge.net as seems to be necessary to contribute. Sourceforge has a history of exploiting users, and per their signup page where I must opt out of ""newsletters"" and ""exclusive offers"", I don't trust they've changed.
Please close this PR and/or incorporate the change, as you will.","I've been using LetsEncrypt for my certificates, with a whitelist of CNs using the verify-cn sample script.
LetsEncrypt issues certificates with subjects which include only a CN, like CN=www.brudenell.name. The script's current regex misses these.
Unfortunately I don't intend to subscribe to openvpn-devel@lists.sourceforge.net as seems to be necessary to contribute. Sourceforge has a history of exploiting users, and per their signup page where I must opt out of ""newsletters"" and ""exclusive offers"", I don't trust they've changed.
Please close this PR and/or incorporate the change, as you will.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,99,2018-01-01T23:48:52Z,2018-08-18T10:58:46Z,2018-08-25T04:30:27Z,CLOSED,False,2,2,1,https://github.com/sbrudenell,Support naked CN subjects like 'CN=example.com',1,[],https://github.com/OpenVPN/openvpn/pull/99,https://github.com/syzzer,2,https://github.com/OpenVPN/openvpn/pull/99#issuecomment-354857536,"I've been using LetsEncrypt for my certificates, with a whitelist of CNs using the verify-cn sample script.
LetsEncrypt issues certificates with subjects which include only a CN, like CN=www.brudenell.name. The script's current regex misses these.
Unfortunately I don't intend to subscribe to openvpn-devel@lists.sourceforge.net as seems to be necessary to contribute. Sourceforge has a history of exploiting users, and per their signup page where I must opt out of ""newsletters"" and ""exclusive offers"", I don't trust they've changed.
Please close this PR and/or incorporate the change, as you will.","Patch looks good, but why trust an external party to man-in-the-middle your VPN? You're probably much better off creating your own CA for openvpn.  See e.g. easy-rsa for simple tooling to do that.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,99,2018-01-01T23:48:52Z,2018-08-18T10:58:46Z,2018-08-25T04:30:27Z,CLOSED,False,2,2,1,https://github.com/sbrudenell,Support naked CN subjects like 'CN=example.com',1,[],https://github.com/OpenVPN/openvpn/pull/99,https://github.com/sbrudenell,3,https://github.com/OpenVPN/openvpn/pull/99#issuecomment-354909580,"I've been using LetsEncrypt for my certificates, with a whitelist of CNs using the verify-cn sample script.
LetsEncrypt issues certificates with subjects which include only a CN, like CN=www.brudenell.name. The script's current regex misses these.
Unfortunately I don't intend to subscribe to openvpn-devel@lists.sourceforge.net as seems to be necessary to contribute. Sourceforge has a history of exploiting users, and per their signup page where I must opt out of ""newsletters"" and ""exclusive offers"", I don't trust they've changed.
Please close this PR and/or incorporate the change, as you will.","I suppose one could debate whether LetsEncrypt (or any third party CA) is trustworthy for any purpose.
Ultimately, my answer is that I trust LetsEncrypt not to screw me, before I trust myself. Even easy-rsa is tedious for personal / homelab use. I've had trouble keeping OpenVPN consistently configured because of this, and fallen back to bad habits like exposing ssh to the Internet to work around it. My strategy is to make OpenVPN low-maintenance for myself, so it becomes a given rather than an ideal. I know this is my personal failing as a sysadmin, but 10+ years of (poorly) using OpenVPN has shown I'm not going to change.
You do make a good point though. Perhaps the ideal for my case is a self-hosted ACME responder, to make certificate management more automatic but not rely on third parties.",True,"{'THUMBS_UP': ['https://github.com/dellelce', 'https://github.com/chebyrash']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,99,2018-01-01T23:48:52Z,2018-08-18T10:58:46Z,2018-08-25T04:30:27Z,CLOSED,False,2,2,1,https://github.com/sbrudenell,Support naked CN subjects like 'CN=example.com',1,[],https://github.com/OpenVPN/openvpn/pull/99,https://github.com/sbrudenell,4,https://github.com/OpenVPN/openvpn/pull/99#issuecomment-410095537,"I've been using LetsEncrypt for my certificates, with a whitelist of CNs using the verify-cn sample script.
LetsEncrypt issues certificates with subjects which include only a CN, like CN=www.brudenell.name. The script's current regex misses these.
Unfortunately I don't intend to subscribe to openvpn-devel@lists.sourceforge.net as seems to be necessary to contribute. Sourceforge has a history of exploiting users, and per their signup page where I must opt out of ""newsletters"" and ""exclusive offers"", I don't trust they've changed.
Please close this PR and/or incorporate the change, as you will.",Thoughts?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,99,2018-01-01T23:48:52Z,2018-08-18T10:58:46Z,2018-08-25T04:30:27Z,CLOSED,False,2,2,1,https://github.com/sbrudenell,Support naked CN subjects like 'CN=example.com',1,[],https://github.com/OpenVPN/openvpn/pull/99,https://github.com/syzzer,5,https://github.com/OpenVPN/openvpn/pull/99#issuecomment-414049825,"I've been using LetsEncrypt for my certificates, with a whitelist of CNs using the verify-cn sample script.
LetsEncrypt issues certificates with subjects which include only a CN, like CN=www.brudenell.name. The script's current regex misses these.
Unfortunately I don't intend to subscribe to openvpn-devel@lists.sourceforge.net as seems to be necessary to contribute. Sourceforge has a history of exploiting users, and per their signup page where I must opt out of ""newsletters"" and ""exclusive offers"", I don't trust they've changed.
Please close this PR and/or incorporate the change, as you will.","I think the patch is fine.  If you submit it to openvpn-devel@lists.sourceforge.net using git send-email, it will likely be applied.  I'm closing the merge request just to be clear we don't accept patches through github.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,100,2018-01-05T03:47:02Z,2018-01-05T05:59:09Z,2018-01-05T05:59:09Z,CLOSED,False,7076,5580,278,https://github.com/tanaduus,Release/2.4,213,[],https://github.com/OpenVPN/openvpn/pull/100,https://github.com/tanaduus,1,https://github.com/OpenVPN/openvpn/pull/100,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,100,2018-01-05T03:47:02Z,2018-01-05T05:59:09Z,2018-01-05T05:59:09Z,CLOSED,False,7076,5580,278,https://github.com/tanaduus,Release/2.4,213,[],https://github.com/OpenVPN/openvpn/pull/100,https://github.com/mattock,2,https://github.com/OpenVPN/openvpn/pull/100#issuecomment-355479249,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",This PR is wrong on so many levels 😄. Please try again.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,101,2018-01-19T03:05:24Z,2018-01-19T08:05:09Z,2018-01-19T08:05:09Z,CLOSED,False,7159,5659,278,https://github.com/nuxrg,Add Tor Pluggable Transports,226,[],https://github.com/OpenVPN/openvpn/pull/101,https://github.com/nuxrg,1,https://github.com/OpenVPN/openvpn/pull/101,"China GFW early stage
https://vpnreviewer.com/internet-vpn-china


China GFW Identifying traffic


identify Traffic treatise


The Random Forest Based Detection of Shadowsock's Traffic
http://ieeexplore.ieee.org/document/8048116/


Identifying Tor Anonymous Traffic Based on Gravitational Clustering Analysis
http://ieeexplore.ieee.org/document/8048117/


More details for: shadowsocks/shadowsocks-org#81


China ISP Enable Port Whitelist




China disrupts global companies’ web access
https://www.ft.com/content/80e50a6c-fa8a-11e7-9b32-d7d59aace167
https://www.ft.com/video/553e829e-ffc3-4982-95e5-be5f64a23b26


China Tells Carriers to Block Access to Personal VPNs by February
https://www.bloomberg.com/news/articles/2017-07-10/china-is-said-to-order-carriers-to-bar-personal-vpns-by-february


China to block SD-WAN and VPN traffic by Jan. 11
https://www.networkworld.com/article/3245795/sd-wan/china-to-block-sd-wan-and-vpn-traffic-by-jan-11.html


As China GFW has capability of detecting Traffic and Protocol, so it is able block OpenVPN,
I wish following could be add Pluggable Transports to OpenVPN protocol.
Pluggable Transports more details on https://www.torproject.org/docs/pluggable-transports.html
Thank.","China GFW early stage
https://vpnreviewer.com/internet-vpn-china


China GFW Identifying traffic


identify Traffic treatise


The Random Forest Based Detection of Shadowsock's Traffic
http://ieeexplore.ieee.org/document/8048116/


Identifying Tor Anonymous Traffic Based on Gravitational Clustering Analysis
http://ieeexplore.ieee.org/document/8048117/


More details for: shadowsocks/shadowsocks-org#81


China ISP Enable Port Whitelist




China disrupts global companies’ web access
https://www.ft.com/content/80e50a6c-fa8a-11e7-9b32-d7d59aace167
https://www.ft.com/video/553e829e-ffc3-4982-95e5-be5f64a23b26


China Tells Carriers to Block Access to Personal VPNs by February
https://www.bloomberg.com/news/articles/2017-07-10/china-is-said-to-order-carriers-to-bar-personal-vpns-by-february


China to block SD-WAN and VPN traffic by Jan. 11
https://www.networkworld.com/article/3245795/sd-wan/china-to-block-sd-wan-and-vpn-traffic-by-jan-11.html


As China GFW has capability of detecting Traffic and Protocol, so it is able block OpenVPN,
I wish following could be add Pluggable Transports to OpenVPN protocol.
Pluggable Transports more details on https://www.torproject.org/docs/pluggable-transports.html
Thank.",True,"{'THUMBS_UP': ['https://github.com/dnutiu', 'https://github.com/gaozhidf', 'https://github.com/zhixiangjoy']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,101,2018-01-19T03:05:24Z,2018-01-19T08:05:09Z,2018-01-19T08:05:09Z,CLOSED,False,7159,5659,278,https://github.com/nuxrg,Add Tor Pluggable Transports,226,[],https://github.com/OpenVPN/openvpn/pull/101,https://github.com/nuxrg,2,https://github.com/OpenVPN/openvpn/pull/101#issuecomment-358877332,"China GFW early stage
https://vpnreviewer.com/internet-vpn-china


China GFW Identifying traffic


identify Traffic treatise


The Random Forest Based Detection of Shadowsock's Traffic
http://ieeexplore.ieee.org/document/8048116/


Identifying Tor Anonymous Traffic Based on Gravitational Clustering Analysis
http://ieeexplore.ieee.org/document/8048117/


More details for: shadowsocks/shadowsocks-org#81


China ISP Enable Port Whitelist




China disrupts global companies’ web access
https://www.ft.com/content/80e50a6c-fa8a-11e7-9b32-d7d59aace167
https://www.ft.com/video/553e829e-ffc3-4982-95e5-be5f64a23b26


China Tells Carriers to Block Access to Personal VPNs by February
https://www.bloomberg.com/news/articles/2017-07-10/china-is-said-to-order-carriers-to-bar-personal-vpns-by-february


China to block SD-WAN and VPN traffic by Jan. 11
https://www.networkworld.com/article/3245795/sd-wan/china-to-block-sd-wan-and-vpn-traffic-by-jan-11.html


As China GFW has capability of detecting Traffic and Protocol, so it is able block OpenVPN,
I wish following could be add Pluggable Transports to OpenVPN protocol.
Pluggable Transports more details on https://www.torproject.org/docs/pluggable-transports.html
Thank.","Freedom of information is a fundamental human right.
in authoritarian regimes as:
Ideology the output of  is very powerful and need  world people  pay attention!!
one-party state is Devil.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,101,2018-01-19T03:05:24Z,2018-01-19T08:05:09Z,2018-01-19T08:05:09Z,CLOSED,False,7159,5659,278,https://github.com/nuxrg,Add Tor Pluggable Transports,226,[],https://github.com/OpenVPN/openvpn/pull/101,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/101#issuecomment-358893835,"China GFW early stage
https://vpnreviewer.com/internet-vpn-china


China GFW Identifying traffic


identify Traffic treatise


The Random Forest Based Detection of Shadowsock's Traffic
http://ieeexplore.ieee.org/document/8048116/


Identifying Tor Anonymous Traffic Based on Gravitational Clustering Analysis
http://ieeexplore.ieee.org/document/8048117/


More details for: shadowsocks/shadowsocks-org#81


China ISP Enable Port Whitelist




China disrupts global companies’ web access
https://www.ft.com/content/80e50a6c-fa8a-11e7-9b32-d7d59aace167
https://www.ft.com/video/553e829e-ffc3-4982-95e5-be5f64a23b26


China Tells Carriers to Block Access to Personal VPNs by February
https://www.bloomberg.com/news/articles/2017-07-10/china-is-said-to-order-carriers-to-bar-personal-vpns-by-february


China to block SD-WAN and VPN traffic by Jan. 11
https://www.networkworld.com/article/3245795/sd-wan/china-to-block-sd-wan-and-vpn-traffic-by-jan-11.html


As China GFW has capability of detecting Traffic and Protocol, so it is able block OpenVPN,
I wish following could be add Pluggable Transports to OpenVPN protocol.
Pluggable Transports more details on https://www.torproject.org/docs/pluggable-transports.html
Thank.","Hi,
On Fri, Jan 19, 2018 at 03:05:31AM +0000, nuxrg wrote:
 Thank.
 You can view, comment on, or merge this pull request online at:

   #101

 -- Commit Summary --

   * dev-tools: Added script for updating copyright years in files
   * Update copyrights
   * docs: Further enhance the documentation related to SWEET32
   * Document that RSA_SIGN can also request TLS 1.2 signatures
   * man: encourage user to read on about --tls-crypt
[..]

This commit looks totally broken - like you merged the wrong branch
or something.

If you have a working patch set for TOR, please submit via the documented
ways: openvpn-devel@lists.sourceforge.net

gert
-- 
now what should I write here...

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,102,2018-03-04T06:46:31Z,2018-03-04T09:00:55Z,2018-03-04T09:00:55Z,CLOSED,False,4,0,1,https://github.com/minabarret,Bug: Build with LibreSSL fails,1,[],https://github.com/OpenVPN/openvpn/pull/102,https://github.com/minabarret,1,https://github.com/OpenVPN/openvpn/pull/102,"This codepath mimics some openssl-1.1 specific API and is enabled only
for openssl 1.1 and higher versions. But, due to incompatible
version numbering in libressl, it gets wrongly enabled with libressl
versions that do not support the reqired API. As an easy workaround
disable the feature when LIBRESSL_VERSION_NUMBER is defined.

Introduced With
0e8a30c
The issue occurs when using libressl 2.6.4 with openvpn 2.4.5 using a modified openvpn-build environment
libressl:
CPPFLAGS= ./configure --prefix=/var/tmp/bin/openvpn-build/generic/image/openvpn
openvpn:
./configure --prefix=/ --libdir=//lib --host= --target= --build= --program-prefix='' --enable-iproute2 --enable-pkcs11 --enable-lzo
error:
In file included from crypto_openssl.c:44:0:
openssl_compat.h:717:1: error: conflicting types for 'SSL_CTX_set_min_proto_version'
SSL_CTX_set_min_proto_version(SSL_CTX *ctx, long tls_ver_min)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from openssl_compat.h:45:0,
from crypto_openssl.c:44:
/var/tmp/bin/openvpn-build/generic/image/openvpn/include/openssl/ssl.h:1175:5: note: previous declaration of 'SSL_CTX_set_min_proto_version' was here
int SSL_CTX_set_min_proto_version(SSL_CTX *ctx, uint16_t version);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from crypto_openssl.c:44:0:
openssl_compat.h:746:1: error: conflicting types for 'SSL_CTX_set_max_proto_version'
SSL_CTX_set_max_proto_version(SSL_CTX *ctx, long tls_ver_max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from openssl_compat.h:45:0,
from crypto_openssl.c:44:
/var/tmp/bin/openvpn-build/generic/image/openvpn/include/openssl/ssl.h:1176:5: note: previous declaration of 'SSL_CTX_set_max_proto_version' was here
int SSL_CTX_set_max_proto_version(SSL_CTX *ctx, uint16_t version);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Makefile:674: recipe for target 'crypto_openssl.o' failed
make[4]: *** [crypto_openssl.o] Error 1
Mina Barret does not use sourceforge or emails, but would be happy to use a unpatched openvpn with LibreSSL with the next release.
Thank you for your time.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","This codepath mimics some openssl-1.1 specific API and is enabled only
for openssl 1.1 and higher versions. But, due to incompatible
version numbering in libressl, it gets wrongly enabled with libressl
versions that do not support the reqired API. As an easy workaround
disable the feature when LIBRESSL_VERSION_NUMBER is defined.

Introduced With
0e8a30c
The issue occurs when using libressl 2.6.4 with openvpn 2.4.5 using a modified openvpn-build environment
libressl:
CPPFLAGS= ./configure --prefix=/var/tmp/bin/openvpn-build/generic/image/openvpn
openvpn:
./configure --prefix=/ --libdir=//lib --host= --target= --build= --program-prefix='' --enable-iproute2 --enable-pkcs11 --enable-lzo
error:
In file included from crypto_openssl.c:44:0:
openssl_compat.h:717:1: error: conflicting types for 'SSL_CTX_set_min_proto_version'
SSL_CTX_set_min_proto_version(SSL_CTX *ctx, long tls_ver_min)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from openssl_compat.h:45:0,
from crypto_openssl.c:44:
/var/tmp/bin/openvpn-build/generic/image/openvpn/include/openssl/ssl.h:1175:5: note: previous declaration of 'SSL_CTX_set_min_proto_version' was here
int SSL_CTX_set_min_proto_version(SSL_CTX *ctx, uint16_t version);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from crypto_openssl.c:44:0:
openssl_compat.h:746:1: error: conflicting types for 'SSL_CTX_set_max_proto_version'
SSL_CTX_set_max_proto_version(SSL_CTX *ctx, long tls_ver_max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from openssl_compat.h:45:0,
from crypto_openssl.c:44:
/var/tmp/bin/openvpn-build/generic/image/openvpn/include/openssl/ssl.h:1176:5: note: previous declaration of 'SSL_CTX_set_max_proto_version' was here
int SSL_CTX_set_max_proto_version(SSL_CTX *ctx, uint16_t version);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Makefile:674: recipe for target 'crypto_openssl.o' failed
make[4]: *** [crypto_openssl.o] Error 1
Mina Barret does not use sourceforge or emails, but would be happy to use a unpatched openvpn with LibreSSL with the next release.
Thank you for your time.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,102,2018-03-04T06:46:31Z,2018-03-04T09:00:55Z,2018-03-04T09:00:55Z,CLOSED,False,4,0,1,https://github.com/minabarret,Bug: Build with LibreSSL fails,1,[],https://github.com/OpenVPN/openvpn/pull/102,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/102#issuecomment-370213009,"This codepath mimics some openssl-1.1 specific API and is enabled only
for openssl 1.1 and higher versions. But, due to incompatible
version numbering in libressl, it gets wrongly enabled with libressl
versions that do not support the reqired API. As an easy workaround
disable the feature when LIBRESSL_VERSION_NUMBER is defined.

Introduced With
0e8a30c
The issue occurs when using libressl 2.6.4 with openvpn 2.4.5 using a modified openvpn-build environment
libressl:
CPPFLAGS= ./configure --prefix=/var/tmp/bin/openvpn-build/generic/image/openvpn
openvpn:
./configure --prefix=/ --libdir=//lib --host= --target= --build= --program-prefix='' --enable-iproute2 --enable-pkcs11 --enable-lzo
error:
In file included from crypto_openssl.c:44:0:
openssl_compat.h:717:1: error: conflicting types for 'SSL_CTX_set_min_proto_version'
SSL_CTX_set_min_proto_version(SSL_CTX *ctx, long tls_ver_min)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from openssl_compat.h:45:0,
from crypto_openssl.c:44:
/var/tmp/bin/openvpn-build/generic/image/openvpn/include/openssl/ssl.h:1175:5: note: previous declaration of 'SSL_CTX_set_min_proto_version' was here
int SSL_CTX_set_min_proto_version(SSL_CTX *ctx, uint16_t version);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from crypto_openssl.c:44:0:
openssl_compat.h:746:1: error: conflicting types for 'SSL_CTX_set_max_proto_version'
SSL_CTX_set_max_proto_version(SSL_CTX *ctx, long tls_ver_max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from openssl_compat.h:45:0,
from crypto_openssl.c:44:
/var/tmp/bin/openvpn-build/generic/image/openvpn/include/openssl/ssl.h:1176:5: note: previous declaration of 'SSL_CTX_set_max_proto_version' was here
int SSL_CTX_set_max_proto_version(SSL_CTX *ctx, uint16_t version);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Makefile:674: recipe for target 'crypto_openssl.o' failed
make[4]: *** [crypto_openssl.o] Error 1
Mina Barret does not use sourceforge or emails, but would be happy to use a unpatched openvpn with LibreSSL with the next release.
Thank you for your time.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi,
On Sun, Mar 04, 2018 at 06:46:36AM +0000, minabarret wrote:
 - This codepath mimics some openssl-1.1 specific API and is enabled only
   for openssl 1.1 and higher versions. But, due to incompatible
   version numbering in libressl, it gets wrongly enabled with libressl
   versions that do not support the reqired API. As an easy workaround
   disable the feature when LIBRESSL_VERSION_NUMBER is defined.
See the release notes for 2.4.5.

If someone sends a patch, and feels responsible for maintaining LibreSSL
compatibility, we might consider it.

LibreSSL is not a supported crypto backend, and we are *not* going to test
every new LibreSSL version for ""has it broken the API again?"" - 2.4.5
has been tested on OpenBSD 6.0 with the LibreSSL version that comes with
that OS version and things work, so if LibreSSL is then breaking the API
again, the active developers very much do not care.

In other words: their approach to OpenSSL compatibility is wasting our
(precious and little) time.


Since you stated that you are not interested in following our normal
communication paths (mail) I am now closing the PR.

gert
…
-- 
now what should I write here...

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,103,2018-03-09T10:38:58Z,2018-04-11T16:17:36Z,2018-04-11T16:17:36Z,CLOSED,False,7878,5860,279,https://github.com/tongkuanmeimei,Release/2.4,263,[],https://github.com/OpenVPN/openvpn/pull/103,https://github.com/tongkuanmeimei,1,https://github.com/OpenVPN/openvpn/pull/103,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,103,2018-03-09T10:38:58Z,2018-04-11T16:17:36Z,2018-04-11T16:17:36Z,CLOSED,False,7878,5860,279,https://github.com/tongkuanmeimei,Release/2.4,263,[],https://github.com/OpenVPN/openvpn/pull/103,https://github.com/dsommers,2,https://github.com/OpenVPN/openvpn/pull/103#issuecomment-380510866,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",This makes no sense.  Master will never be rebased into release/2.4.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,104,2018-03-11T04:51:20Z,2018-04-11T15:55:45Z,2018-04-25T12:00:06Z,CLOSED,False,2,0,1,https://github.com/d1b,systemd: Enable systemd's auto-restart feature for client profiles.,1,[],https://github.com/OpenVPN/openvpn/pull/104,https://github.com/d1b,1,https://github.com/OpenVPN/openvpn/pull/104,"Signed-off-by: David db@d1b.org
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Signed-off-by: David db@d1b.org
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,104,2018-03-11T04:51:20Z,2018-04-11T15:55:45Z,2018-04-25T12:00:06Z,CLOSED,False,2,0,1,https://github.com/d1b,systemd: Enable systemd's auto-restart feature for client profiles.,1,[],https://github.com/OpenVPN/openvpn/pull/104,https://github.com/d1b,2,https://github.com/OpenVPN/openvpn/pull/104#issuecomment-372089495,"Signed-off-by: David db@d1b.org
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","This change is related to a4686e9 . I'd like to get feedback on this change as I find it useful and others may as well.
(cc @dsommers  )",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,104,2018-03-11T04:51:20Z,2018-04-11T15:55:45Z,2018-04-25T12:00:06Z,CLOSED,False,2,0,1,https://github.com/d1b,systemd: Enable systemd's auto-restart feature for client profiles.,1,[],https://github.com/OpenVPN/openvpn/pull/104,https://github.com/dsommers,3,https://github.com/OpenVPN/openvpn/pull/104#issuecomment-380503864,"Signed-off-by: David db@d1b.org
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Currently we are not quite decided if we want to enable this by default on clients for all configurations.  We recognise this is quite useful for many setups, but all of them?  That decision was easier on the server side, the vast majority of sys-admins we've heard from liked the idea on the server side - a server is of little use if the services it wants to provide is unavailable.
A client (host) might have multiple client configurations, with different expectations.  So it is harder to have a default policy in this context.  And especially when it is fairly easy to add this manually, even on a per-configuration scenario:
# systemctl edit openvpn-client@CONFIGNAME

And then add the RestartSec= and Restart= settings inside a [Service] section.
We currently believe this approach is better for the vast majority of users.",True,{'THUMBS_UP': ['https://github.com/bradsk88']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,104,2018-03-11T04:51:20Z,2018-04-11T15:55:45Z,2018-04-25T12:00:06Z,CLOSED,False,2,0,1,https://github.com/d1b,systemd: Enable systemd's auto-restart feature for client profiles.,1,[],https://github.com/OpenVPN/openvpn/pull/104,https://github.com/d1b,4,https://github.com/OpenVPN/openvpn/pull/104#issuecomment-384259416,"Signed-off-by: David db@d1b.org
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Currently we are not quite decided if we want to enable this by default on clients for all configurations. We recognise this is quite useful for many setups, but all of them
...
A client (host) might have multiple client configurations, with different expectations. So it is harder to have a default policy in this context. And especially when it is fairly easy to add this manually, even on a per-configuration scenario:

Sure but the condition being changed / modified here is on failure. I do understand the difficulty with having the client reconnect though. One example I was thinking about is if an organisation doesn't want
their users accidentally connecting to the vpn while in the office, then preventing the systemd service from retrying could/would be useful. (However, I would expect a fair mount of those users to be using a graphical client such as network-manager on linux to connect to the vpn).

We currently believe this approach is better for the vast majority of users.

@dsommers sure. Perhaps the answer here is to document the default behavior and how to change it.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,104,2018-03-11T04:51:20Z,2018-04-11T15:55:45Z,2018-04-25T12:00:06Z,CLOSED,False,2,0,1,https://github.com/d1b,systemd: Enable systemd's auto-restart feature for client profiles.,1,[],https://github.com/OpenVPN/openvpn/pull/104,https://github.com/dsommers,5,https://github.com/OpenVPN/openvpn/pull/104#issuecomment-384261730,"Signed-off-by: David db@d1b.org
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Yeah, improving the documentation is definitely a good way forward regardless.  So I'm willing to review and accept patches for this topic, and we can see where this discussion goes further.
But please remember: patches needs to end up in the public mailing list in the end.  We can discuss things here via pull-requests resulting in a final patch, but the final result needs to end up on the mailing list.",True,{'THUMBS_UP': ['https://github.com/d1b']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,105,2018-04-17T16:50:41Z,2021-03-22T11:01:45Z,2021-03-22T11:01:45Z,CLOSED,False,15,5,8,https://github.com/zx2c4,Support fingerprint authentication,1,[],https://github.com/OpenVPN/openvpn/pull/105,https://github.com/zx2c4,1,https://github.com/OpenVPN/openvpn/pull/105,"OpenVPN traditionally works around CAs. However many TLS-based protocols also
allow an alternative simpler mode in which rather than verify certificates
against CAs, the certificate itself is hashed and compared against a
pre-known set of acceptable hashes. This is usually referred to as
""fingerprint verification"". It's popular across SMTP servers, IRC servers,
XMPP servers, and even in the context of HTTP with pinning.
So, I'd like to propose an extremely simple and non-invasive way of
supporting this in OpenVPN, by re-using several features that already
basically support it. Namely, what I propose is:


Allow specifying 'none' to the --ca parameter, to specify that
certificates should not be checked against a CA. Note that 'none'
is already used in other similar options as a special placeholder.


When '--ca none' is in use, --verify-hash checks all depths instead
of just level 1.


With these very simple changes, fingerprint authentication is easily achieved
via the --tls-verify script on the server and via --verify-hash on the client.
I've included some instructions on how to use all of this.
Server side:
Make self-signed cert:
$ openssl req -x509 -newkey ec:<(openssl ecparam -name secp384r1) -keyout key.pem -out cert.pem -nodes -sha256 -days 3650 -subj '/CN=server'

Record our fingerprint in an environment variable for the client to use later:
$ server_fingerprint=""$(openssl x509 -in cert.pem -noout -sha256 -fingerprint | sed 's/.*=//;s/\(.*\)/\L\1/')""

Start openvpn with tls verify script:
$ sudo openvpn --server 10.66.0.0 255.255.255.0 --dev tun --dh none --ca none --cert cert.pem --key key.pem --tls-verify $(readlink -f tls-verify.sh) --script-security 2

TLS Verify Script:
#!/bin/sh
[ -n ""$tls_digest_sha256_0"" -a -e ""/tmp/allowed-openvpn-fingerprints/$tls_digest_sha256_0"" ]
Client side:
Make self-signed cert:
$ openssl req -x509 -newkey ec:<(openssl ecparam -name secp384r1) -keyout key.pem -out cert.pem -nodes -sha256 -days 3650 -subj '/CN=client'

""Tell"" the server about our fingerprint:
$ mkdir -p /tmp/allowed-openvpn-fingerprints; touch ""/tmp/allowed-openvpn-fingerprints/$(openssl x509 -in cert.pem -noout -sha256 -fingerprint | sed 's/.*=//;s/\(.*\)/\L\1/')""

Start openvpn with server fingerprint verification:
$ sudo openvpn --client --remote 127.0.0.1 --dev tun --ca none --cert cert.pem --key key.pem --verify-hash ""$server_fingerprint"" SHA256 --nobind","OpenVPN traditionally works around CAs. However many TLS-based protocols also
allow an alternative simpler mode in which rather than verify certificates
against CAs, the certificate itself is hashed and compared against a
pre-known set of acceptable hashes. This is usually referred to as
""fingerprint verification"". It's popular across SMTP servers, IRC servers,
XMPP servers, and even in the context of HTTP with pinning.
So, I'd like to propose an extremely simple and non-invasive way of
supporting this in OpenVPN, by re-using several features that already
basically support it. Namely, what I propose is:


Allow specifying 'none' to the --ca parameter, to specify that
certificates should not be checked against a CA. Note that 'none'
is already used in other similar options as a special placeholder.


When '--ca none' is in use, --verify-hash checks all depths instead
of just level 1.


With these very simple changes, fingerprint authentication is easily achieved
via the --tls-verify script on the server and via --verify-hash on the client.
I've included some instructions on how to use all of this.
Server side:
Make self-signed cert:
$ openssl req -x509 -newkey ec:<(openssl ecparam -name secp384r1) -keyout key.pem -out cert.pem -nodes -sha256 -days 3650 -subj '/CN=server'

Record our fingerprint in an environment variable for the client to use later:
$ server_fingerprint=""$(openssl x509 -in cert.pem -noout -sha256 -fingerprint | sed 's/.*=//;s/\(.*\)/\L\1/')""

Start openvpn with tls verify script:
$ sudo openvpn --server 10.66.0.0 255.255.255.0 --dev tun --dh none --ca none --cert cert.pem --key key.pem --tls-verify $(readlink -f tls-verify.sh) --script-security 2

TLS Verify Script:
#!/bin/sh
[ -n ""$tls_digest_sha256_0"" -a -e ""/tmp/allowed-openvpn-fingerprints/$tls_digest_sha256_0"" ]
Client side:
Make self-signed cert:
$ openssl req -x509 -newkey ec:<(openssl ecparam -name secp384r1) -keyout key.pem -out cert.pem -nodes -sha256 -days 3650 -subj '/CN=client'

""Tell"" the server about our fingerprint:
$ mkdir -p /tmp/allowed-openvpn-fingerprints; touch ""/tmp/allowed-openvpn-fingerprints/$(openssl x509 -in cert.pem -noout -sha256 -fingerprint | sed 's/.*=//;s/\(.*\)/\L\1/')""

Start openvpn with server fingerprint verification:
$ sudo openvpn --client --remote 127.0.0.1 --dev tun --ca none --cert cert.pem --key key.pem --verify-hash ""$server_fingerprint"" SHA256 --nobind",True,"{'THUMBS_UP': ['https://github.com/fkooman', 'https://github.com/FedericoPonzi', 'https://github.com/sowelisuwi', 'https://github.com/nadavatar']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,105,2018-04-17T16:50:41Z,2021-03-22T11:01:45Z,2021-03-22T11:01:45Z,CLOSED,False,15,5,8,https://github.com/zx2c4,Support fingerprint authentication,1,[],https://github.com/OpenVPN/openvpn/pull/105,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/105#issuecomment-803974151,"OpenVPN traditionally works around CAs. However many TLS-based protocols also
allow an alternative simpler mode in which rather than verify certificates
against CAs, the certificate itself is hashed and compared against a
pre-known set of acceptable hashes. This is usually referred to as
""fingerprint verification"". It's popular across SMTP servers, IRC servers,
XMPP servers, and even in the context of HTTP with pinning.
So, I'd like to propose an extremely simple and non-invasive way of
supporting this in OpenVPN, by re-using several features that already
basically support it. Namely, what I propose is:


Allow specifying 'none' to the --ca parameter, to specify that
certificates should not be checked against a CA. Note that 'none'
is already used in other similar options as a special placeholder.


When '--ca none' is in use, --verify-hash checks all depths instead
of just level 1.


With these very simple changes, fingerprint authentication is easily achieved
via the --tls-verify script on the server and via --verify-hash on the client.
I've included some instructions on how to use all of this.
Server side:
Make self-signed cert:
$ openssl req -x509 -newkey ec:<(openssl ecparam -name secp384r1) -keyout key.pem -out cert.pem -nodes -sha256 -days 3650 -subj '/CN=server'

Record our fingerprint in an environment variable for the client to use later:
$ server_fingerprint=""$(openssl x509 -in cert.pem -noout -sha256 -fingerprint | sed 's/.*=//;s/\(.*\)/\L\1/')""

Start openvpn with tls verify script:
$ sudo openvpn --server 10.66.0.0 255.255.255.0 --dev tun --dh none --ca none --cert cert.pem --key key.pem --tls-verify $(readlink -f tls-verify.sh) --script-security 2

TLS Verify Script:
#!/bin/sh
[ -n ""$tls_digest_sha256_0"" -a -e ""/tmp/allowed-openvpn-fingerprints/$tls_digest_sha256_0"" ]
Client side:
Make self-signed cert:
$ openssl req -x509 -newkey ec:<(openssl ecparam -name secp384r1) -keyout key.pem -out cert.pem -nodes -sha256 -days 3650 -subj '/CN=client'

""Tell"" the server about our fingerprint:
$ mkdir -p /tmp/allowed-openvpn-fingerprints; touch ""/tmp/allowed-openvpn-fingerprints/$(openssl x509 -in cert.pem -noout -sha256 -fingerprint | sed 's/.*=//;s/\(.*\)/\L\1/')""

Start openvpn with server fingerprint verification:
$ sudo openvpn --client --remote 127.0.0.1 --dev tun --ca none --cert cert.pem --key key.pem --verify-hash ""$server_fingerprint"" SHA256 --nobind","This has been merged via the openvpn-devel list based process
commit 423ced9
Author: Jason A. Donenfeld Jason@zx2c4.com
Date:   Mon Mar 22 10:14:14 2021 +0100
Support fingerprint authentication without CA certificate

(slightly amended)
thanks!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,106,2018-06-29T22:32:35Z,2020-09-20T17:07:15Z,2020-09-20T17:44:13Z,CLOSED,False,15,10,5,https://github.com/gcoxmoz,Remove deprecated plugin functions from code samples,1,[],https://github.com/OpenVPN/openvpn/pull/106,https://github.com/gcoxmoz,1,https://github.com/OpenVPN/openvpn/pull/106,"openvpn/include/openvpn-plugin.h.in
    
    
        Lines 823 to 833
      in
      1987498
    
  
  
    

        
          
           /* 
        

        
          
            * Deprecated functions which are still supported for backward compatibility. 
        

        
          
            */ 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF openvpn_plugin_handle_t OPENVPN_PLUGIN_FUNC(openvpn_plugin_open_v1) 
        

        
          
               (unsigned int *type_mask, 
        

        
          
               const char *argv[], 
        

        
          
               const char *envp[]); 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF int OPENVPN_PLUGIN_FUNC(openvpn_plugin_func_v1) 
        

        
          
               (openvpn_plugin_handle_t handle, const int type, const char *argv[], const char *envp[]); 
        
    
  


openvpn-plugin.h lists two deprecated plugin functions.  However, the code samples still use them.  This patch is isolated to the sample directory, not user-facing code, in the hope that future plugins will not clone deprecated functions.","openvpn/include/openvpn-plugin.h.in
    
    
        Lines 823 to 833
      in
      1987498
    
  
  
    

        
          
           /* 
        

        
          
            * Deprecated functions which are still supported for backward compatibility. 
        

        
          
            */ 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF openvpn_plugin_handle_t OPENVPN_PLUGIN_FUNC(openvpn_plugin_open_v1) 
        

        
          
               (unsigned int *type_mask, 
        

        
          
               const char *argv[], 
        

        
          
               const char *envp[]); 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF int OPENVPN_PLUGIN_FUNC(openvpn_plugin_func_v1) 
        

        
          
               (openvpn_plugin_handle_t handle, const int type, const char *argv[], const char *envp[]); 
        
    
  


openvpn-plugin.h lists two deprecated plugin functions.  However, the code samples still use them.  This patch is isolated to the sample directory, not user-facing code, in the hope that future plugins will not clone deprecated functions.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,106,2018-06-29T22:32:35Z,2020-09-20T17:07:15Z,2020-09-20T17:44:13Z,CLOSED,False,15,10,5,https://github.com/gcoxmoz,Remove deprecated plugin functions from code samples,1,[],https://github.com/OpenVPN/openvpn/pull/106,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/106#issuecomment-401539431,"openvpn/include/openvpn-plugin.h.in
    
    
        Lines 823 to 833
      in
      1987498
    
  
  
    

        
          
           /* 
        

        
          
            * Deprecated functions which are still supported for backward compatibility. 
        

        
          
            */ 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF openvpn_plugin_handle_t OPENVPN_PLUGIN_FUNC(openvpn_plugin_open_v1) 
        

        
          
               (unsigned int *type_mask, 
        

        
          
               const char *argv[], 
        

        
          
               const char *envp[]); 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF int OPENVPN_PLUGIN_FUNC(openvpn_plugin_func_v1) 
        

        
          
               (openvpn_plugin_handle_t handle, const int type, const char *argv[], const char *envp[]); 
        
    
  


openvpn-plugin.h lists two deprecated plugin functions.  However, the code samples still use them.  This patch is isolated to the sample directory, not user-facing code, in the hope that future plugins will not clone deprecated functions.","Hi,
On Fri, Jun 29, 2018 at 03:32:38PM -0700, gcoxmoz wrote:
 openvpn-plugin.h lists two deprecated plugin functions.  However, the code samples still use them.  This patch is isolated to the sample directory, not user-facing code, in the hope that future plugins will not clone deprecated functions.
This sounds like a useful change.  Can you please send the patch
to the openvpn-devel@lists.sourceforge.net list?

We do not do PRs for openvpn.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,106,2018-06-29T22:32:35Z,2020-09-20T17:07:15Z,2020-09-20T17:44:13Z,CLOSED,False,15,10,5,https://github.com/gcoxmoz,Remove deprecated plugin functions from code samples,1,[],https://github.com/OpenVPN/openvpn/pull/106,https://github.com/gcoxmoz,3,https://github.com/OpenVPN/openvpn/pull/106#issuecomment-401552132,"openvpn/include/openvpn-plugin.h.in
    
    
        Lines 823 to 833
      in
      1987498
    
  
  
    

        
          
           /* 
        

        
          
            * Deprecated functions which are still supported for backward compatibility. 
        

        
          
            */ 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF openvpn_plugin_handle_t OPENVPN_PLUGIN_FUNC(openvpn_plugin_open_v1) 
        

        
          
               (unsigned int *type_mask, 
        

        
          
               const char *argv[], 
        

        
          
               const char *envp[]); 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF int OPENVPN_PLUGIN_FUNC(openvpn_plugin_func_v1) 
        

        
          
               (openvpn_plugin_handle_t handle, const int type, const char *argv[], const char *envp[]); 
        
    
  


openvpn-plugin.h lists two deprecated plugin functions.  However, the code samples still use them.  This patch is isolated to the sample directory, not user-facing code, in the hope that future plugins will not clone deprecated functions.","Sure can.  Just wanted to get it in a reviewable form and see if anyone from IRC wanted to pre-review it/tell me I'm awful, before going to the list.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,106,2018-06-29T22:32:35Z,2020-09-20T17:07:15Z,2020-09-20T17:44:13Z,CLOSED,False,15,10,5,https://github.com/gcoxmoz,Remove deprecated plugin functions from code samples,1,[],https://github.com/OpenVPN/openvpn/pull/106,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/106#issuecomment-695793044,"openvpn/include/openvpn-plugin.h.in
    
    
        Lines 823 to 833
      in
      1987498
    
  
  
    

        
          
           /* 
        

        
          
            * Deprecated functions which are still supported for backward compatibility. 
        

        
          
            */ 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF openvpn_plugin_handle_t OPENVPN_PLUGIN_FUNC(openvpn_plugin_open_v1) 
        

        
          
               (unsigned int *type_mask, 
        

        
          
               const char *argv[], 
        

        
          
               const char *envp[]); 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF int OPENVPN_PLUGIN_FUNC(openvpn_plugin_func_v1) 
        

        
          
               (openvpn_plugin_handle_t handle, const int type, const char *argv[], const char *envp[]); 
        
    
  


openvpn-plugin.h lists two deprecated plugin functions.  However, the code samples still use them.  This patch is isolated to the sample directory, not user-facing code, in the hope that future plugins will not clone deprecated functions.","OK, I bite.  I'm going through my ""something is unresolved here...?"" queue, and find that this has never been applied...
Could you re-send with
$ git send-email --to=openvpn-devel@lists.sourceforge.net $patch.txt
which usually does a very good job in getting the mail not-mangled...?
Contentwise the patch is OK, I'd say, but ""if we do not have a complete and applicable patch"" it won't go ahed...",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,106,2018-06-29T22:32:35Z,2020-09-20T17:07:15Z,2020-09-20T17:44:13Z,CLOSED,False,15,10,5,https://github.com/gcoxmoz,Remove deprecated plugin functions from code samples,1,[],https://github.com/OpenVPN/openvpn/pull/106,https://github.com/gcoxmoz,5,https://github.com/OpenVPN/openvpn/pull/106#issuecomment-695810988,"openvpn/include/openvpn-plugin.h.in
    
    
        Lines 823 to 833
      in
      1987498
    
  
  
    

        
          
           /* 
        

        
          
            * Deprecated functions which are still supported for backward compatibility. 
        

        
          
            */ 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF openvpn_plugin_handle_t OPENVPN_PLUGIN_FUNC(openvpn_plugin_open_v1) 
        

        
          
               (unsigned int *type_mask, 
        

        
          
               const char *argv[], 
        

        
          
               const char *envp[]); 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF int OPENVPN_PLUGIN_FUNC(openvpn_plugin_func_v1) 
        

        
          
               (openvpn_plugin_handle_t handle, const int type, const char *argv[], const char *envp[]); 
        
    
  


openvpn-plugin.h lists two deprecated plugin functions.  However, the code samples still use them.  This patch is isolated to the sample directory, not user-facing code, in the hope that future plugins will not clone deprecated functions.","I appreciate the note, but I've given up on this.
I submitted through https://patchwork.openvpn.net/patch/390/, but it wasn't working even with the instructions you gave.  I lost steam: the combination of ""I'm not sure I'm writing good code"" and ""I'm not sure they're coming across correctly"" is discouraging.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,106,2018-06-29T22:32:35Z,2020-09-20T17:07:15Z,2020-09-20T17:44:13Z,CLOSED,False,15,10,5,https://github.com/gcoxmoz,Remove deprecated plugin functions from code samples,1,[],https://github.com/OpenVPN/openvpn/pull/106,https://github.com/cron2,6,https://github.com/OpenVPN/openvpn/pull/106#issuecomment-695814980,"openvpn/include/openvpn-plugin.h.in
    
    
        Lines 823 to 833
      in
      1987498
    
  
  
    

        
          
           /* 
        

        
          
            * Deprecated functions which are still supported for backward compatibility. 
        

        
          
            */ 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF openvpn_plugin_handle_t OPENVPN_PLUGIN_FUNC(openvpn_plugin_open_v1) 
        

        
          
               (unsigned int *type_mask, 
        

        
          
               const char *argv[], 
        

        
          
               const char *envp[]); 
        

        
          
            
        

        
          
           OPENVPN_PLUGIN_DEF int OPENVPN_PLUGIN_FUNC(openvpn_plugin_func_v1) 
        

        
          
               (openvpn_plugin_handle_t handle, const int type, const char *argv[], const char *envp[]); 
        
    
  


openvpn-plugin.h lists two deprecated plugin functions.  However, the code samples still use them.  This patch is isolated to the sample directory, not user-facing code, in the hope that future plugins will not clone deprecated functions.","Hi,
On Sun, Sep 20, 2020 at 10:07:27AM -0700, gcoxmoz wrote:
 I appreciate the note, but I've given up on this.
Sorry to hear that.
 I submitted through [https://patchwork.openvpn.net/patch/390/](Patchwork), but it wasn't working even with the instructions you gave.  I lost steam: the combination of ""I'm not sure I'm writing good code"" and ""I'm not sure they're coming across correctly"" is discouraging.
Well, the point is ""most mail clients are too broken to handle patches
well"".  This is why ""git send-email"" exists - it will make sure that
patches arrive here in a way that ""git am"" can nicely apply them
after saving the mail.

The actual code change looked reasonable, and as I said, the commit
message is something I can always fix on merge time...

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,107,2018-07-20T22:57:21Z,2018-07-22T21:34:28Z,2018-07-22T21:34:28Z,CLOSED,False,1,1,1,https://github.com/TimRots,list.c - fix for use of sizeof() on a pointer type in hash_func,1,[],https://github.com/OpenVPN/openvpn/pull/107,https://github.com/TimRots,1,https://github.com/OpenVPN/openvpn/pull/107,"fix will ensure sizeof() returns the size of the data structure itself, and not the size of the pointer to the data structure. (CWE-467).","fix will ensure sizeof() returns the size of the data structure itself, and not the size of the pointer to the data structure. (CWE-467).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,107,2018-07-20T22:57:21Z,2018-07-22T21:34:28Z,2018-07-22T21:34:28Z,CLOSED,False,1,1,1,https://github.com/TimRots,list.c - fix for use of sizeof() on a pointer type in hash_func,1,[],https://github.com/OpenVPN/openvpn/pull/107,https://github.com/selvanair,2,https://github.com/OpenVPN/openvpn/pull/107#issuecomment-406767051,"fix will ensure sizeof() returns the size of the data structure itself, and not the size of the pointer to the data structure. (CWE-467).","Only thing one can say about this is that the intent of the original code is unclear especially since it appears to be unused. But how do you know the intention was not to take size of the pointer?
In any case dereferencing a void pointer is almost always a bug -- don't do that. Its undefined in C although gcc will happily evaluate it to 1 byte (unless -pedantic is used). The pointer is void, so unless you cast it back to what it really is, you can't find the size of what it points to.
That said, just deleting this function may not be a bad idea -- it looks unused, contains a superfluous cast and looks useless.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,107,2018-07-20T22:57:21Z,2018-07-22T21:34:28Z,2018-07-22T21:34:28Z,CLOSED,False,1,1,1,https://github.com/TimRots,list.c - fix for use of sizeof() on a pointer type in hash_func,1,[],https://github.com/OpenVPN/openvpn/pull/107,https://github.com/TimRots,3,https://github.com/OpenVPN/openvpn/pull/107#issuecomment-406800362,"fix will ensure sizeof() returns the size of the data structure itself, and not the size of the pointer to the data structure. (CWE-467).","Thank you for caring and taking time to give your thoughts on this PR.
I agree and see now that removing the function entirely would be the best solution for the issue on-hand, and will propose a patch for this to the mailing-list after some more thorough review of this code base.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,107,2018-07-20T22:57:21Z,2018-07-22T21:34:28Z,2018-07-22T21:34:28Z,CLOSED,False,1,1,1,https://github.com/TimRots,list.c - fix for use of sizeof() on a pointer type in hash_func,1,[],https://github.com/OpenVPN/openvpn/pull/107,https://github.com/selvanair,4,https://github.com/OpenVPN/openvpn/pull/107#issuecomment-406808200,"fix will ensure sizeof() returns the size of the data structure itself, and not the size of the pointer to the data structure. (CWE-467).","I agree and see now that removing the function entirely would be the best solution for the issue on-hand,

To nit-pick, there is no ""issue"" in the present code. You are just imagining that there is a bug. But, yes, it looks like an unused function with a questionable intent.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,107,2018-07-20T22:57:21Z,2018-07-22T21:34:28Z,2018-07-22T21:34:28Z,CLOSED,False,1,1,1,https://github.com/TimRots,list.c - fix for use of sizeof() on a pointer type in hash_func,1,[],https://github.com/OpenVPN/openvpn/pull/107,https://github.com/cron2,5,https://github.com/OpenVPN/openvpn/pull/107#issuecomment-406812650,"fix will ensure sizeof() returns the size of the data structure itself, and not the size of the pointer to the data structure. (CWE-467).","Hi,
On Fri, Jul 20, 2018 at 03:57:24PM -0700, Tim Rots wrote:
 fix will ensure sizeof() returns the size of the data structure itself, and not the size of the pointer to the data structure. (CWE-467).
 You can view, comment on, or merge this pull request online at:

   #107

 -- Commit Summary --

   * list.c - fix for use of sizeof() on a pointer type in hash_func
That fix is actually *wrong*.

What the code does is ""get the address of the pointer"" and ""the size
of the pointer"", and use that as input into the hash function.

Whether or that is a useful thing to do is indeed questionable (as
getting the address for a local variable will be ""something on the
stack"", and I wonder why you'd want to hash that) - but technically it
is *correct*.  It even says so, ""void_ptr_hash_function""...

Changing the sizeof part to ""what the pointer points to"" is changing
the function semantics - effectively reducing the hashed data space
from 4 (or 8) to ""1"".  Not fixing anything.


Arguably we could get rid of it in git master, as it's not used
(as is void_ptr_compare_function()), but then, it doesn't do harm
and there are more interesting areas to clean up...  so I wouldn't put
this on high priority.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,108,2018-08-09T05:28:13Z,2018-08-09T13:17:18Z,2018-08-09T13:17:18Z,CLOSED,False,8715,5956,281,https://github.com/ayumi787,Release/2.4,277,[],https://github.com/OpenVPN/openvpn/pull/108,https://github.com/ayumi787,1,https://github.com/OpenVPN/openvpn/pull/108,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,108,2018-08-09T05:28:13Z,2018-08-09T13:17:18Z,2018-08-09T13:17:18Z,CLOSED,False,8715,5956,281,https://github.com/ayumi787,Release/2.4,277,[],https://github.com/OpenVPN/openvpn/pull/108,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/108#issuecomment-411753858,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Whatever it is that you tried to do, this was not the result you wanted to achieve.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,109,2018-10-07T22:22:36Z,2021-11-08T10:22:50Z,2021-11-08T10:22:50Z,CLOSED,False,1,1,1,https://github.com/samy-mahmoudi,man: correct a --redirection-gateway option flag,1,[],https://github.com/OpenVPN/openvpn/pull/109,https://github.com/samy-mahmoudi,1,https://github.com/OpenVPN/openvpn/pull/109,"Replace ""servers"" with ""peers"" in the description
of the --redirection-gateway option flag local.
Patch submitted to openvpn-devel.","Replace ""servers"" with ""peers"" in the description
of the --redirection-gateway option flag local.
Patch submitted to openvpn-devel.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,109,2018-10-07T22:22:36Z,2021-11-08T10:22:50Z,2021-11-08T10:22:50Z,CLOSED,False,1,1,1,https://github.com/samy-mahmoudi,man: correct a --redirection-gateway option flag,1,[],https://github.com/OpenVPN/openvpn/pull/109,https://github.com/flichtenheld,2,https://github.com/OpenVPN/openvpn/pull/109#issuecomment-962653981,"Replace ""servers"" with ""peers"" in the description
of the --redirection-gateway option flag local.
Patch submitted to openvpn-devel.",This PR has been already been applied in Git (commit f6bac11) and can be closed,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,110,2018-10-15T07:01:34Z,2019-03-27T10:59:50Z,2019-03-27T12:49:06Z,CLOSED,False,1,1,1,https://github.com/gowthambalusamy,Update INSTALL,1,[],https://github.com/OpenVPN/openvpn/pull/110,https://github.com/gowthambalusamy,1,https://github.com/OpenVPN/openvpn/pull/110,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,110,2018-10-15T07:01:34Z,2019-03-27T10:59:50Z,2019-03-27T12:49:06Z,CLOSED,False,1,1,1,https://github.com/gowthambalusamy,Update INSTALL,1,[],https://github.com/OpenVPN/openvpn/pull/110,https://github.com/mattock,2,https://github.com/OpenVPN/openvpn/pull/110#issuecomment-477097228,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thanks for the PR. We will close this one as one of our developers, @dsommers, will take a stab at fixing this as well as a number of other issues in the INSTALL file. If you have future fixes please send them to openvpn-devel@lists.sourceforge.net with git-send-email - our policy is not to merge any PRs.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,110,2018-10-15T07:01:34Z,2019-03-27T10:59:50Z,2019-03-27T12:49:06Z,CLOSED,False,1,1,1,https://github.com/gowthambalusamy,Update INSTALL,1,[],https://github.com/OpenVPN/openvpn/pull/110,https://github.com/dsommers,3,https://github.com/OpenVPN/openvpn/pull/110#issuecomment-477131703,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",Patch updating INSTALL is sent to the mailing list: https://www.mail-archive.com/openvpn-devel@lists.sourceforge.net/msg18307.html,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,114,2018-11-20T17:42:40Z,,2021-11-07T18:08:06Z,OPEN,False,6,6,1,https://github.com/Peppernrino,Updated URLs in README,1,[],https://github.com/OpenVPN/openvpn/pull/114,https://github.com/Peppernrino,1,https://github.com/OpenVPN/openvpn/pull/114,"Updated to current links, and added SSL to all.
Changed tap-windows to reflect NDIS 6 repository shift.
Read contributing guidelines. Will submit properly in a bit. :)","Updated to current links, and added SSL to all.
Changed tap-windows to reflect NDIS 6 repository shift.
Read contributing guidelines. Will submit properly in a bit. :)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,114,2018-11-20T17:42:40Z,,2021-11-07T18:08:06Z,OPEN,False,6,6,1,https://github.com/Peppernrino,Updated URLs in README,1,[],https://github.com/OpenVPN/openvpn/pull/114,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/114#issuecomment-440408202,"Updated to current links, and added SSL to all.
Changed tap-windows to reflect NDIS 6 repository shift.
Read contributing guidelines. Will submit properly in a bit. :)","Generally speaking, the changes make sense.  We shouldn't link to ""manual for version 2.0"", though, but that's more a bug of the openvpn.net web site.
@mattock can you get that fixed?  Than we can get the URL redirect updated (2.4! or better), and change the URL in here accordingly.
Or we just keep the /man URL here, just changing to https.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,114,2018-11-20T17:42:40Z,,2021-11-07T18:08:06Z,OPEN,False,6,6,1,https://github.com/Peppernrino,Updated URLs in README,1,[],https://github.com/OpenVPN/openvpn/pull/114,https://github.com/mattock,3,https://github.com/OpenVPN/openvpn/pull/114#issuecomment-440561139,"Updated to current links, and added SSL to all.
Changed tap-windows to reflect NDIS 6 repository shift.
Read contributing guidelines. Will submit properly in a bit. :)","I created a bunch of internal JIRA tickets, including one about this. I proposed keeping the /man URL and just pointing it to OpenVPN 2.4 man page. We should always keep it pointed to the latest version.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,114,2018-11-20T17:42:40Z,,2021-11-07T18:08:06Z,OPEN,False,6,6,1,https://github.com/Peppernrino,Updated URLs in README,1,[],https://github.com/OpenVPN/openvpn/pull/114,https://github.com/bernhardreiter,4,https://github.com/OpenVPN/openvpn/pull/114#issuecomment-530431926,"Updated to current links, and added SSL to all.
Changed tap-windows to reflect NDIS 6 repository shift.
Read contributing guidelines. Will submit properly in a bit. :)",Seems these updates are ready to me made with the improvement of the link to the manual page. Any idea when it can be merged?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,114,2018-11-20T17:42:40Z,,2021-11-07T18:08:06Z,OPEN,False,6,6,1,https://github.com/Peppernrino,Updated URLs in README,1,[],https://github.com/OpenVPN/openvpn/pull/114,https://github.com/cron2,5,https://github.com/OpenVPN/openvpn/pull/114#issuecomment-530441596,"Updated to current links, and added SSL to all.
Changed tap-windows to reflect NDIS 6 repository shift.
Read contributing guidelines. Will submit properly in a bit. :)","hi,
On Wed, Sep 11, 2019 at 08:25:15AM -0700, Bernhard E. Reiter wrote:
 Seems these updates are ready to me made with the improvement of the link to the manual page. Any idea when it can be merged?
Do we have patches on the list?

Github PRs are not merged.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,114,2018-11-20T17:42:40Z,,2021-11-07T18:08:06Z,OPEN,False,6,6,1,https://github.com/Peppernrino,Updated URLs in README,1,[],https://github.com/OpenVPN/openvpn/pull/114,https://github.com/flichtenheld,6,https://github.com/OpenVPN/openvpn/pull/114#issuecomment-962656087,"Updated to current links, and added SSL to all.
Changed tap-windows to reflect NDIS 6 repository shift.
Read contributing guidelines. Will submit properly in a bit. :)",Since some of the links are just wrong I plan to submit this patch to the mailing list as part of an initiative to clean up the Github PR submissions.,True,{'HEART': ['https://github.com/Peppernrino']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,115,2018-11-27T13:49:56Z,2018-12-05T18:58:53Z,2018-12-05T18:58:53Z,CLOSED,False,11140,4309,270,https://github.com/bravey3,Release/2.3,432,[],https://github.com/OpenVPN/openvpn/pull/115,https://github.com/bravey3,1,https://github.com/OpenVPN/openvpn/pull/115,"root@iZ2zebynirznl73400ylkpZ:~# ethtool tun0
Settings for tun0:
Supported ports: [ ]
Supported link modes:   Not reported
Supported pause frame use: No
Supports auto-negotiation: No
Advertised link modes:  Not reported
Advertised pause frame use: No
Advertised auto-negotiation: No
Speed: 10Mb/s
Duplex: Full
Port: Twisted Pair
PHYAD: 0
Transceiver: internal
Auto-negotiation: off
MDI-X: Unknown
Current message level: 0xffffffa1 (-95)
drv ifup tx_err tx_queued intr tx_done rx_status pktdata hw wol 0xffff8000
Link detected: yes
issue：
The tun0 rate is 10M，why？How to adjust tun0 rate。For example, 100M, 1000M。
Because 10M, it is not enough for me to use it
Thank you","root@iZ2zebynirznl73400ylkpZ:~# ethtool tun0
Settings for tun0:
Supported ports: [ ]
Supported link modes:   Not reported
Supported pause frame use: No
Supports auto-negotiation: No
Advertised link modes:  Not reported
Advertised pause frame use: No
Advertised auto-negotiation: No
Speed: 10Mb/s
Duplex: Full
Port: Twisted Pair
PHYAD: 0
Transceiver: internal
Auto-negotiation: off
MDI-X: Unknown
Current message level: 0xffffffa1 (-95)
drv ifup tx_err tx_queued intr tx_done rx_status pktdata hw wol 0xffff8000
Link detected: yes
issue：
The tun0 rate is 10M，why？How to adjust tun0 rate。For example, 100M, 1000M。
Because 10M, it is not enough for me to use it
Thank you",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,115,2018-11-27T13:49:56Z,2018-12-05T18:58:53Z,2018-12-05T18:58:53Z,CLOSED,False,11140,4309,270,https://github.com/bravey3,Release/2.3,432,[],https://github.com/OpenVPN/openvpn/pull/115,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/115#issuecomment-444601342,"root@iZ2zebynirznl73400ylkpZ:~# ethtool tun0
Settings for tun0:
Supported ports: [ ]
Supported link modes:   Not reported
Supported pause frame use: No
Supports auto-negotiation: No
Advertised link modes:  Not reported
Advertised pause frame use: No
Advertised auto-negotiation: No
Speed: 10Mb/s
Duplex: Full
Port: Twisted Pair
PHYAD: 0
Transceiver: internal
Auto-negotiation: off
MDI-X: Unknown
Current message level: 0xffffffa1 (-95)
drv ifup tx_err tx_queued intr tx_done rx_status pktdata hw wol 0xffff8000
Link detected: yes
issue：
The tun0 rate is 10M，why？How to adjust tun0 rate。For example, 100M, 1000M。
Because 10M, it is not enough for me to use it
Thank you","Hi,
On Tue, Nov 27, 2018 at 01:50:07PM +0000, xiaofei wrote:
 ***@***.***:~# ethtool tun0
[..]
 issue???
 The tun0 rate is 10M???why???How to adjust tun0 rate???For example, 100M, 1000M???
 Because 10M, it is not enough for me to use it
This is a virtual interface, so the bandwidth displayed by ethtool
(which only understands ""real"" ethernet interfaces) has no relevance
for actual throughput.

Also, do not use pull requests to ask questions - this is very impolite
as it causes extra work for the developers.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,116,2018-12-20T11:03:35Z,2019-04-04T15:52:42Z,2019-04-04T15:52:42Z,CLOSED,False,1,1,1,https://github.com/RichieB2B,distro: Fix error message when using RHEL init script,1,[],https://github.com/OpenVPN/openvpn/pull/116,https://github.com/RichieB2B,1,https://github.com/OpenVPN/openvpn/pull/116,"In RHEL 7 /etc/sysconfig/network is no longer used (still there but empty). This results in the following error when openvpn starts:
Dec 20 09:01:25 localhost openvpn: /etc/rc.d/init.d/openvpn: line 94: [: =: unary operator expected

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","In RHEL 7 /etc/sysconfig/network is no longer used (still there but empty). This results in the following error when openvpn starts:
Dec 20 09:01:25 localhost openvpn: /etc/rc.d/init.d/openvpn: line 94: [: =: unary operator expected

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,116,2018-12-20T11:03:35Z,2019-04-04T15:52:42Z,2019-04-04T15:52:42Z,CLOSED,False,1,1,1,https://github.com/RichieB2B,distro: Fix error message when using RHEL init script,1,[],https://github.com/OpenVPN/openvpn/pull/116,https://github.com/mattock,2,https://github.com/OpenVPN/openvpn/pull/116#issuecomment-479955624,"In RHEL 7 /etc/sysconfig/network is no longer used (still there but empty). This results in the following error when openvpn starts:
Dec 20 09:01:25 localhost openvpn: /etc/rc.d/init.d/openvpn: line 94: [: =: unary operator expected

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","We don't have this file anymore, so it's not possible to patch it. Closing this PR.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,117,2019-01-03T12:53:58Z,2019-01-03T15:46:53Z,2019-01-03T15:46:53Z,CLOSED,False,9494,6162,282,https://github.com/HuErr,"hello ，Executing tapinstall, this error is why",305,[],https://github.com/OpenVPN/openvpn/pull/117,https://github.com/HuErr,1,https://github.com/OpenVPN/openvpn/pull/117,"UpdateDriverForPlugAndPlayDevices failed, GetLastError=13","UpdateDriverForPlugAndPlayDevices failed, GetLastError=13",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,117,2019-01-03T12:53:58Z,2019-01-03T15:46:53Z,2019-01-03T15:46:53Z,CLOSED,False,9494,6162,282,https://github.com/HuErr,"hello ，Executing tapinstall, this error is why",305,[],https://github.com/OpenVPN/openvpn/pull/117,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/117#issuecomment-451183202,"UpdateDriverForPlugAndPlayDevices failed, GetLastError=13","Please do not open a pull request to report problems.  Pull requests are for code changes.
In other words: you are wasting precious developer time.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,118,2019-01-23T00:33:48Z,2019-01-23T19:55:46Z,2019-01-23T19:55:46Z,CLOSED,False,148,148,37,https://github.com/JDTX,Fix various spelling mistakes,2,[],https://github.com/OpenVPN/openvpn/pull/118,https://github.com/JDTX,1,https://github.com/OpenVPN/openvpn/pull/118,"Fix spelling mistakes in coder/headers/manpages/etc.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Fix spelling mistakes in coder/headers/manpages/etc.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,120,2019-01-23T22:32:02Z,2019-02-07T23:43:48Z,2019-02-07T23:43:48Z,CLOSED,False,75,75,35,https://github.com/JDTX,Fix various spelling mistakes,1,[],https://github.com/OpenVPN/openvpn/pull/120,https://github.com/JDTX,1,https://github.com/OpenVPN/openvpn/pull/120,"New patch, omitted changes to copyrights/licenses & changelog.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","New patch, omitted changes to copyrights/licenses & changelog.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,120,2019-01-23T22:32:02Z,2019-02-07T23:43:48Z,2019-02-07T23:43:48Z,CLOSED,False,75,75,35,https://github.com/JDTX,Fix various spelling mistakes,1,[],https://github.com/OpenVPN/openvpn/pull/120,https://github.com/JDTX,2,https://github.com/OpenVPN/openvpn/pull/120#issuecomment-456992767,"New patch, omitted changes to copyrights/licenses & changelog.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",Latest commit sent to mailing list using git send-email.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,120,2019-01-23T22:32:02Z,2019-02-07T23:43:48Z,2019-02-07T23:43:48Z,CLOSED,False,75,75,35,https://github.com/JDTX,Fix various spelling mistakes,1,[],https://github.com/OpenVPN/openvpn/pull/120,https://github.com/JDTX,3,https://github.com/OpenVPN/openvpn/pull/120#issuecomment-461638009,"New patch, omitted changes to copyrights/licenses & changelog.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Applied to master, closing.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,121,2019-02-18T14:19:14Z,2019-07-22T18:56:11Z,2019-07-22T18:56:42Z,CLOSED,False,1,1,1,https://github.com/hillu,"Do not set pkcs11-helper ""safe fork mode""",1,[],https://github.com/OpenVPN/openvpn/pull/121,https://github.com/hillu,1,https://github.com/OpenVPN/openvpn/pull/121,"From the pkcs11-helper API documentation about pkcs11h_setForkMode():

This funciton is releavant if PKCS11H_FEATURE_MASK_THREADING is
set. If safe mode is on, the child process can use the loaded
PKCS#11 providers but it cannot use fork(), while it is in one of
the hooks functions, since locked mutexes cannot be released.

As far as I can tell, pkcs11-helper functionality is not used in a
child process that is created after initialization. Even if OpenVPN is
turned into a daemon, the pkcs11-helper library is only initialized
after calling possibly_become_daemon(), i.e. in the child process. All
other uses of fork() are immediately followed by an exec()
This simple change fixes the symptoms described in both
https://community.openvpn.net/openvpn/ticket/538 (hang on password
prompt when systemd support is enabled) and
https://community.openvpn.net/openvpn/ticket/1157 (hang on
initialization with newer versions of pkcs11-helper).
I have successfully tested that this makes the described symptoms go
away. For this, I used a YubiKey NEO on Debian/stable, a rebuild of
OpenVPN 2.4.6 and two versions of libpkcs11-helper:

libpkcs11-helper 1.21-1 from Debian/stretch
a backport of libpkcs11-helper 1.25-1 from Debian/buster

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","From the pkcs11-helper API documentation about pkcs11h_setForkMode():

This funciton is releavant if PKCS11H_FEATURE_MASK_THREADING is
set. If safe mode is on, the child process can use the loaded
PKCS#11 providers but it cannot use fork(), while it is in one of
the hooks functions, since locked mutexes cannot be released.

As far as I can tell, pkcs11-helper functionality is not used in a
child process that is created after initialization. Even if OpenVPN is
turned into a daemon, the pkcs11-helper library is only initialized
after calling possibly_become_daemon(), i.e. in the child process. All
other uses of fork() are immediately followed by an exec()
This simple change fixes the symptoms described in both
https://community.openvpn.net/openvpn/ticket/538 (hang on password
prompt when systemd support is enabled) and
https://community.openvpn.net/openvpn/ticket/1157 (hang on
initialization with newer versions of pkcs11-helper).
I have successfully tested that this makes the described symptoms go
away. For this, I used a YubiKey NEO on Debian/stable, a rebuild of
OpenVPN 2.4.6 and two versions of libpkcs11-helper:

libpkcs11-helper 1.21-1 from Debian/stretch
a backport of libpkcs11-helper 1.25-1 from Debian/buster

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{'THUMBS_UP': ['https://github.com/saeedkaregar']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,121,2019-02-18T14:19:14Z,2019-07-22T18:56:11Z,2019-07-22T18:56:42Z,CLOSED,False,1,1,1,https://github.com/hillu,"Do not set pkcs11-helper ""safe fork mode""",1,[],https://github.com/OpenVPN/openvpn/pull/121,https://github.com/alonbl,2,https://github.com/OpenVPN/openvpn/pull/121#issuecomment-488717236,"From the pkcs11-helper API documentation about pkcs11h_setForkMode():

This funciton is releavant if PKCS11H_FEATURE_MASK_THREADING is
set. If safe mode is on, the child process can use the loaded
PKCS#11 providers but it cannot use fork(), while it is in one of
the hooks functions, since locked mutexes cannot be released.

As far as I can tell, pkcs11-helper functionality is not used in a
child process that is created after initialization. Even if OpenVPN is
turned into a daemon, the pkcs11-helper library is only initialized
after calling possibly_become_daemon(), i.e. in the child process. All
other uses of fork() are immediately followed by an exec()
This simple change fixes the symptoms described in both
https://community.openvpn.net/openvpn/ticket/538 (hang on password
prompt when systemd support is enabled) and
https://community.openvpn.net/openvpn/ticket/1157 (hang on
initialization with newer versions of pkcs11-helper).
I have successfully tested that this makes the described symptoms go
away. For this, I used a YubiKey NEO on Debian/stable, a rebuild of
OpenVPN 2.4.6 and two versions of libpkcs11-helper:

libpkcs11-helper 1.21-1 from Debian/stretch
a backport of libpkcs11-helper 1.25-1 from Debian/buster

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","On Thu, May 2, 2019 at 6:19 PM Hilko Bengen ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In src/openvpn/pkcs11.c
 <#121 (comment)>:

 > @@ -312,7 +312,7 @@ pkcs11_initialize(

      pkcs11h_setLogLevel(_pkcs11_msg_openvpn2pkcs11(get_debug_level()));

 -    if ((rv = pkcs11h_setForkMode(TRUE)) != CKR_OK)
 +    if ((rv = pkcs11h_setForkMode(FALSE)) != CKR_OK)

 Even if possibly_become_daemon() was called after initializing the
 /pkcs11-helper/ library, I believe that setting ""safe fork mode"" would not
 be needed because its functionality is never used from multiple
 processes/threads.

Please verify if slotevents are in used or not, if they are, must use safe
fork if fork is being used post initialization.

And as far as I remember, openvpn has a late fork mechanism so that PIN is
queried before going daemon, please look closely on the code, it is not
trivial.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,121,2019-02-18T14:19:14Z,2019-07-22T18:56:11Z,2019-07-22T18:56:42Z,CLOSED,False,1,1,1,https://github.com/hillu,"Do not set pkcs11-helper ""safe fork mode""",1,[],https://github.com/OpenVPN/openvpn/pull/121,https://github.com/hillu,3,https://github.com/OpenVPN/openvpn/pull/121#issuecomment-489040651,"From the pkcs11-helper API documentation about pkcs11h_setForkMode():

This funciton is releavant if PKCS11H_FEATURE_MASK_THREADING is
set. If safe mode is on, the child process can use the loaded
PKCS#11 providers but it cannot use fork(), while it is in one of
the hooks functions, since locked mutexes cannot be released.

As far as I can tell, pkcs11-helper functionality is not used in a
child process that is created after initialization. Even if OpenVPN is
turned into a daemon, the pkcs11-helper library is only initialized
after calling possibly_become_daemon(), i.e. in the child process. All
other uses of fork() are immediately followed by an exec()
This simple change fixes the symptoms described in both
https://community.openvpn.net/openvpn/ticket/538 (hang on password
prompt when systemd support is enabled) and
https://community.openvpn.net/openvpn/ticket/1157 (hang on
initialization with newer versions of pkcs11-helper).
I have successfully tested that this makes the described symptoms go
away. For this, I used a YubiKey NEO on Debian/stable, a rebuild of
OpenVPN 2.4.6 and two versions of libpkcs11-helper:

libpkcs11-helper 1.21-1 from Debian/stretch
a backport of libpkcs11-helper 1.25-1 from Debian/buster

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","@alonbl To me it looks as if there's no use of slotevent APIs. The only thing I am not sure about is the use of the PKCS11H_SLOTEVENT_METHOD_AUTO constant around 
  
    
      openvpn/src/openvpn/pkcs11.c
    
    
         Line 400
      in
      4ded2de
    
  
  
    

        
          
           (rv = pkcs11h_addProvider(",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,121,2019-02-18T14:19:14Z,2019-07-22T18:56:11Z,2019-07-22T18:56:42Z,CLOSED,False,1,1,1,https://github.com/hillu,"Do not set pkcs11-helper ""safe fork mode""",1,[],https://github.com/OpenVPN/openvpn/pull/121,https://github.com/syzzer,4,https://github.com/OpenVPN/openvpn/pull/121#issuecomment-513454761,"From the pkcs11-helper API documentation about pkcs11h_setForkMode():

This funciton is releavant if PKCS11H_FEATURE_MASK_THREADING is
set. If safe mode is on, the child process can use the loaded
PKCS#11 providers but it cannot use fork(), while it is in one of
the hooks functions, since locked mutexes cannot be released.

As far as I can tell, pkcs11-helper functionality is not used in a
child process that is created after initialization. Even if OpenVPN is
turned into a daemon, the pkcs11-helper library is only initialized
after calling possibly_become_daemon(), i.e. in the child process. All
other uses of fork() are immediately followed by an exec()
This simple change fixes the symptoms described in both
https://community.openvpn.net/openvpn/ticket/538 (hang on password
prompt when systemd support is enabled) and
https://community.openvpn.net/openvpn/ticket/1157 (hang on
initialization with newer versions of pkcs11-helper).
I have successfully tested that this makes the described symptoms go
away. For this, I used a YubiKey NEO on Debian/stable, a rebuild of
OpenVPN 2.4.6 and two versions of libpkcs11-helper:

libpkcs11-helper 1.21-1 from Debian/stretch
a backport of libpkcs11-helper 1.25-1 from Debian/buster

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","So, coming back to this change again.
Thanks @alonbl for providing useful pointers.
The initialization order has been changed around 2015. Since then, OpenVPN initializes the crypto - including pkcs11 - always after daemonizing. Any PIN / password is always queried before that point. Since this patch will only be applied to release/2.4 and master, we're good in that aspect.
With respect to slot events, I believe we're good too. If I understand the code correctly (@alonbl, please correct me if I'm wrong), slot events are only used if someone calls pkcs11h_setSlotEventHook(), which OpenVPN doesn't do.
Summarizing, unless @alonbl tells me I'm wrong I think this patch is good and should be merged.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,121,2019-02-18T14:19:14Z,2019-07-22T18:56:11Z,2019-07-22T18:56:42Z,CLOSED,False,1,1,1,https://github.com/hillu,"Do not set pkcs11-helper ""safe fork mode""",1,[],https://github.com/OpenVPN/openvpn/pull/121,https://github.com/alonbl,5,https://github.com/OpenVPN/openvpn/pull/121#issuecomment-513495897,"From the pkcs11-helper API documentation about pkcs11h_setForkMode():

This funciton is releavant if PKCS11H_FEATURE_MASK_THREADING is
set. If safe mode is on, the child process can use the loaded
PKCS#11 providers but it cannot use fork(), while it is in one of
the hooks functions, since locked mutexes cannot be released.

As far as I can tell, pkcs11-helper functionality is not used in a
child process that is created after initialization. Even if OpenVPN is
turned into a daemon, the pkcs11-helper library is only initialized
after calling possibly_become_daemon(), i.e. in the child process. All
other uses of fork() are immediately followed by an exec()
This simple change fixes the symptoms described in both
https://community.openvpn.net/openvpn/ticket/538 (hang on password
prompt when systemd support is enabled) and
https://community.openvpn.net/openvpn/ticket/1157 (hang on
initialization with newer versions of pkcs11-helper).
I have successfully tested that this makes the described symptoms go
away. For this, I used a YubiKey NEO on Debian/stable, a rebuild of
OpenVPN 2.4.6 and two versions of libpkcs11-helper:

libpkcs11-helper 1.21-1 from Debian/stretch
a backport of libpkcs11-helper 1.25-1 from Debian/buster

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","On Sat, Jul 20, 2019 at 1:07 PM syzzer ***@***.***> wrote:
 Summarizing, unless @alonbl <https://github.com/alonbl> tells me I'm
 wrong I think this patch is good and should be merged.
You are good to go, although you may have a leak of handles from `PKCS#11`
provider into child processes. Per PKCS#11 spec after each fork if
`PKCS#11` is not used, the C_Finalize must be called. This can be done by
terminating the pkcs11-helper after any fork, however, this will also
attempt to lock, I should probably add a new method that terminates
pkcs11-helper without locking to be called in these cases.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,121,2019-02-18T14:19:14Z,2019-07-22T18:56:11Z,2019-07-22T18:56:42Z,CLOSED,False,1,1,1,https://github.com/hillu,"Do not set pkcs11-helper ""safe fork mode""",1,[],https://github.com/OpenVPN/openvpn/pull/121,https://github.com/cron2,6,https://github.com/OpenVPN/openvpn/pull/121#issuecomment-513910179,"From the pkcs11-helper API documentation about pkcs11h_setForkMode():

This funciton is releavant if PKCS11H_FEATURE_MASK_THREADING is
set. If safe mode is on, the child process can use the loaded
PKCS#11 providers but it cannot use fork(), while it is in one of
the hooks functions, since locked mutexes cannot be released.

As far as I can tell, pkcs11-helper functionality is not used in a
child process that is created after initialization. Even if OpenVPN is
turned into a daemon, the pkcs11-helper library is only initialized
after calling possibly_become_daemon(), i.e. in the child process. All
other uses of fork() are immediately followed by an exec()
This simple change fixes the symptoms described in both
https://community.openvpn.net/openvpn/ticket/538 (hang on password
prompt when systemd support is enabled) and
https://community.openvpn.net/openvpn/ticket/1157 (hang on
initialization with newer versions of pkcs11-helper).
I have successfully tested that this makes the described symptoms go
away. For this, I used a YubiKey NEO on Debian/stable, a rebuild of
OpenVPN 2.4.6 and two versions of libpkcs11-helper:

libpkcs11-helper 1.21-1 from Debian/stretch
a backport of libpkcs11-helper 1.25-1 from Debian/buster

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","commit 59e45a8 (master)
commit 5fd3d1d (release/2.4)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,122,2019-02-20T11:46:42Z,2019-02-20T12:03:42Z,2019-02-20T13:40:54Z,CLOSED,False,9633,6163,282,https://github.com/dominik96,openvpn 2.4.7 is not buildable on fedora systems,308,[],https://github.com/OpenVPN/openvpn/pull/122,https://github.com/dominik96,1,https://github.com/OpenVPN/openvpn/pull/122,"i have try build openvpn-2.4.7 build on my fedora 28 system, but it not works
export CFLAGS=""%{optflags} -fPIC -fuse-ld=gold -fuse-linker-plugin""
export CXXFLAGS=""$CFLAGS""
export FFLAGS=""$CFLAGS""
export CPPFLAGS=""$CFLAGS""
export CC=""gcc $CFLAGS""
export SH_LDFLAGS=""-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack %{optflags} -fuse-ld=gold -fuse-linker-plugin""
export LDFLAGS=""$SH_LDFLAGS -pie -fPIE""
aclocal
autoconf
automake --add-missing
[dsoft@dk-desktop:~/rpmbuild/SPECS]$ rpmbuild -bb openvpn.spec
Ausführung(%prep): /bin/sh -e /var/tmp/rpm-tmp.JOkgUe

umask 022
cd /home/dsoft/rpmbuild/BUILD
cd /home/dsoft/rpmbuild/BUILD
rm -rf openvpn-2.4.7
/usr/bin/gzip -dc /home/dsoft/rpmbuild/SOURCES/openvpn-2.4.7.tar.gz
/usr/bin/tar -xof -
STATUS=0
'[' 0 -ne 0 ']'
cd openvpn-2.4.7
/usr/bin/chmod -Rf a+rX,u+w,g-w,o-w .
sed -i -e s,/usr/share/openvpn/plugin,/usr/lib64/openvpn/plugin, doc/openvpn.8
find contrib sample -type f -exec chmod a-x '{}' ';'
exit 0
Ausführung(%build): /bin/sh -e /var/tmp/rpm-tmp.7Eq4y2
umask 022
cd /home/dsoft/rpmbuild/BUILD
cd openvpn-2.4.7
export LANG=C
LANG=C
export 'CFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CXXFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CXXFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'FFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
FFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CPPFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CPPFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CC=gcc -m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CC='gcc -m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'SH_LDFLAGS=-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin'
SH_LDFLAGS='-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin'
export 'LDFLAGS=-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin -pie -fPIE'
LDFLAGS='-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin -pie -fPIE'
aclocal
autoconf
automake --add-missing
configure.ac:59: installing './compile'
configure.ac:58: installing './config.guess'
configure.ac:58: installing './config.sub'
configure.ac:57: installing './install-sh'
configure.ac:395: error: required file './ltmain.sh' not found
configure.ac:57: installing './missing'
configure.ac:40: error: required file 'config.h.in' not found
src/compat/Makefile.am: installing './depcomp'
src/openvpnserv/Makefile.am:32: warning: source file '$(top_srcdir)/src/openvpn/block_dns.c' is in a subdirectory,
src/openvpnserv/Makefile.am:32: but option 'subdir-objects' is disabled
automake: warning: possible forward-incompatibility.
automake: At least a source file is in a subdirectory, but the 'subdir-objects'
automake: automake option hasn't been enabled.  For now, the corresponding output
automake: object file(s) will be placed in the top-level directory.  However,
automake: this behaviour will change in future Automake versions: they will
automake: unconditionally cause object files to be placed in the same subdirectory
automake: of the corresponding sources.
automake: You are advised to start using 'subdir-objects' option throughout your
automake: project, to avoid future incompatibilities.
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/argv.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:30: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:30: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:30: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:30: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/otime.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/packet_id.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto_mbedtls.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto_openssl.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/otime.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/packet_id.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/plugins/auth-pam/Makefile.am:10: warning: source file '$(sut_sourcedir)/utils.c' is in a subdirectory,
tests/unit_tests/plugins/auth-pam/Makefile.am:10: but option 'subdir-objects' is disabled
Fehler: Fehler-Status beim Beenden von /var/tmp/rpm-tmp.7Eq4y2 (%build)","i have try build openvpn-2.4.7 build on my fedora 28 system, but it not works
export CFLAGS=""%{optflags} -fPIC -fuse-ld=gold -fuse-linker-plugin""
export CXXFLAGS=""$CFLAGS""
export FFLAGS=""$CFLAGS""
export CPPFLAGS=""$CFLAGS""
export CC=""gcc $CFLAGS""
export SH_LDFLAGS=""-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack %{optflags} -fuse-ld=gold -fuse-linker-plugin""
export LDFLAGS=""$SH_LDFLAGS -pie -fPIE""
aclocal
autoconf
automake --add-missing
[dsoft@dk-desktop:~/rpmbuild/SPECS]$ rpmbuild -bb openvpn.spec
Ausführung(%prep): /bin/sh -e /var/tmp/rpm-tmp.JOkgUe

umask 022
cd /home/dsoft/rpmbuild/BUILD
cd /home/dsoft/rpmbuild/BUILD
rm -rf openvpn-2.4.7
/usr/bin/gzip -dc /home/dsoft/rpmbuild/SOURCES/openvpn-2.4.7.tar.gz
/usr/bin/tar -xof -
STATUS=0
'[' 0 -ne 0 ']'
cd openvpn-2.4.7
/usr/bin/chmod -Rf a+rX,u+w,g-w,o-w .
sed -i -e s,/usr/share/openvpn/plugin,/usr/lib64/openvpn/plugin, doc/openvpn.8
find contrib sample -type f -exec chmod a-x '{}' ';'
exit 0
Ausführung(%build): /bin/sh -e /var/tmp/rpm-tmp.7Eq4y2
umask 022
cd /home/dsoft/rpmbuild/BUILD
cd openvpn-2.4.7
export LANG=C
LANG=C
export 'CFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CXXFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CXXFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'FFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
FFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CPPFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CPPFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CC=gcc -m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CC='gcc -m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'SH_LDFLAGS=-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin'
SH_LDFLAGS='-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin'
export 'LDFLAGS=-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin -pie -fPIE'
LDFLAGS='-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin -pie -fPIE'
aclocal
autoconf
automake --add-missing
configure.ac:59: installing './compile'
configure.ac:58: installing './config.guess'
configure.ac:58: installing './config.sub'
configure.ac:57: installing './install-sh'
configure.ac:395: error: required file './ltmain.sh' not found
configure.ac:57: installing './missing'
configure.ac:40: error: required file 'config.h.in' not found
src/compat/Makefile.am: installing './depcomp'
src/openvpnserv/Makefile.am:32: warning: source file '$(top_srcdir)/src/openvpn/block_dns.c' is in a subdirectory,
src/openvpnserv/Makefile.am:32: but option 'subdir-objects' is disabled
automake: warning: possible forward-incompatibility.
automake: At least a source file is in a subdirectory, but the 'subdir-objects'
automake: automake option hasn't been enabled.  For now, the corresponding output
automake: object file(s) will be placed in the top-level directory.  However,
automake: this behaviour will change in future Automake versions: they will
automake: unconditionally cause object files to be placed in the same subdirectory
automake: of the corresponding sources.
automake: You are advised to start using 'subdir-objects' option throughout your
automake: project, to avoid future incompatibilities.
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/argv.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:30: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:30: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:30: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:30: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/otime.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/packet_id.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto_mbedtls.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto_openssl.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/otime.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/packet_id.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/plugins/auth-pam/Makefile.am:10: warning: source file '$(sut_sourcedir)/utils.c' is in a subdirectory,
tests/unit_tests/plugins/auth-pam/Makefile.am:10: but option 'subdir-objects' is disabled
Fehler: Fehler-Status beim Beenden von /var/tmp/rpm-tmp.7Eq4y2 (%build)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,122,2019-02-20T11:46:42Z,2019-02-20T12:03:42Z,2019-02-20T13:40:54Z,CLOSED,False,9633,6163,282,https://github.com/dominik96,openvpn 2.4.7 is not buildable on fedora systems,308,[],https://github.com/OpenVPN/openvpn/pull/122,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/122#issuecomment-465546841,"i have try build openvpn-2.4.7 build on my fedora 28 system, but it not works
export CFLAGS=""%{optflags} -fPIC -fuse-ld=gold -fuse-linker-plugin""
export CXXFLAGS=""$CFLAGS""
export FFLAGS=""$CFLAGS""
export CPPFLAGS=""$CFLAGS""
export CC=""gcc $CFLAGS""
export SH_LDFLAGS=""-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack %{optflags} -fuse-ld=gold -fuse-linker-plugin""
export LDFLAGS=""$SH_LDFLAGS -pie -fPIE""
aclocal
autoconf
automake --add-missing
[dsoft@dk-desktop:~/rpmbuild/SPECS]$ rpmbuild -bb openvpn.spec
Ausführung(%prep): /bin/sh -e /var/tmp/rpm-tmp.JOkgUe

umask 022
cd /home/dsoft/rpmbuild/BUILD
cd /home/dsoft/rpmbuild/BUILD
rm -rf openvpn-2.4.7
/usr/bin/gzip -dc /home/dsoft/rpmbuild/SOURCES/openvpn-2.4.7.tar.gz
/usr/bin/tar -xof -
STATUS=0
'[' 0 -ne 0 ']'
cd openvpn-2.4.7
/usr/bin/chmod -Rf a+rX,u+w,g-w,o-w .
sed -i -e s,/usr/share/openvpn/plugin,/usr/lib64/openvpn/plugin, doc/openvpn.8
find contrib sample -type f -exec chmod a-x '{}' ';'
exit 0
Ausführung(%build): /bin/sh -e /var/tmp/rpm-tmp.7Eq4y2
umask 022
cd /home/dsoft/rpmbuild/BUILD
cd openvpn-2.4.7
export LANG=C
LANG=C
export 'CFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CXXFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CXXFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'FFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
FFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CPPFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CPPFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CC=gcc -m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CC='gcc -m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'SH_LDFLAGS=-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin'
SH_LDFLAGS='-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin'
export 'LDFLAGS=-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin -pie -fPIE'
LDFLAGS='-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin -pie -fPIE'
aclocal
autoconf
automake --add-missing
configure.ac:59: installing './compile'
configure.ac:58: installing './config.guess'
configure.ac:58: installing './config.sub'
configure.ac:57: installing './install-sh'
configure.ac:395: error: required file './ltmain.sh' not found
configure.ac:57: installing './missing'
configure.ac:40: error: required file 'config.h.in' not found
src/compat/Makefile.am: installing './depcomp'
src/openvpnserv/Makefile.am:32: warning: source file '$(top_srcdir)/src/openvpn/block_dns.c' is in a subdirectory,
src/openvpnserv/Makefile.am:32: but option 'subdir-objects' is disabled
automake: warning: possible forward-incompatibility.
automake: At least a source file is in a subdirectory, but the 'subdir-objects'
automake: automake option hasn't been enabled.  For now, the corresponding output
automake: object file(s) will be placed in the top-level directory.  However,
automake: this behaviour will change in future Automake versions: they will
automake: unconditionally cause object files to be placed in the same subdirectory
automake: of the corresponding sources.
automake: You are advised to start using 'subdir-objects' option throughout your
automake: project, to avoid future incompatibilities.
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/argv.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:30: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:30: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:30: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:30: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/otime.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/packet_id.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto_mbedtls.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto_openssl.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/otime.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/packet_id.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/plugins/auth-pam/Makefile.am:10: warning: source file '$(sut_sourcedir)/utils.c' is in a subdirectory,
tests/unit_tests/plugins/auth-pam/Makefile.am:10: but option 'subdir-objects' is disabled
Fehler: Fehler-Status beim Beenden von /var/tmp/rpm-tmp.7Eq4y2 (%build)",a pull request is not a bug tracker,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,122,2019-02-20T11:46:42Z,2019-02-20T12:03:42Z,2019-02-20T13:40:54Z,CLOSED,False,9633,6163,282,https://github.com/dominik96,openvpn 2.4.7 is not buildable on fedora systems,308,[],https://github.com/OpenVPN/openvpn/pull/122,https://github.com/dsommers,3,https://github.com/OpenVPN/openvpn/pull/122#issuecomment-465577746,"i have try build openvpn-2.4.7 build on my fedora 28 system, but it not works
export CFLAGS=""%{optflags} -fPIC -fuse-ld=gold -fuse-linker-plugin""
export CXXFLAGS=""$CFLAGS""
export FFLAGS=""$CFLAGS""
export CPPFLAGS=""$CFLAGS""
export CC=""gcc $CFLAGS""
export SH_LDFLAGS=""-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack %{optflags} -fuse-ld=gold -fuse-linker-plugin""
export LDFLAGS=""$SH_LDFLAGS -pie -fPIE""
aclocal
autoconf
automake --add-missing
[dsoft@dk-desktop:~/rpmbuild/SPECS]$ rpmbuild -bb openvpn.spec
Ausführung(%prep): /bin/sh -e /var/tmp/rpm-tmp.JOkgUe

umask 022
cd /home/dsoft/rpmbuild/BUILD
cd /home/dsoft/rpmbuild/BUILD
rm -rf openvpn-2.4.7
/usr/bin/gzip -dc /home/dsoft/rpmbuild/SOURCES/openvpn-2.4.7.tar.gz
/usr/bin/tar -xof -
STATUS=0
'[' 0 -ne 0 ']'
cd openvpn-2.4.7
/usr/bin/chmod -Rf a+rX,u+w,g-w,o-w .
sed -i -e s,/usr/share/openvpn/plugin,/usr/lib64/openvpn/plugin, doc/openvpn.8
find contrib sample -type f -exec chmod a-x '{}' ';'
exit 0
Ausführung(%build): /bin/sh -e /var/tmp/rpm-tmp.7Eq4y2
umask 022
cd /home/dsoft/rpmbuild/BUILD
cd openvpn-2.4.7
export LANG=C
LANG=C
export 'CFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CXXFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CXXFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'FFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
FFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CPPFLAGS=-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CPPFLAGS='-m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'CC=gcc -m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
CC='gcc -m64 -march=core2 -mtune=core2 -fPIC -fuse-ld=gold -fuse-linker-plugin'
export 'SH_LDFLAGS=-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin'
SH_LDFLAGS='-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin'
export 'LDFLAGS=-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin -pie -fPIE'
LDFLAGS='-Wl,-z,now -Wl,-z,relro -Wl,-z,noexecstack -m64 -march=core2 -mtune=core2 -fuse-ld=gold -fuse-linker-plugin -pie -fPIE'
aclocal
autoconf
automake --add-missing
configure.ac:59: installing './compile'
configure.ac:58: installing './config.guess'
configure.ac:58: installing './config.sub'
configure.ac:57: installing './install-sh'
configure.ac:395: error: required file './ltmain.sh' not found
configure.ac:57: installing './missing'
configure.ac:40: error: required file 'config.h.in' not found
src/compat/Makefile.am: installing './depcomp'
src/openvpnserv/Makefile.am:32: warning: source file '$(top_srcdir)/src/openvpn/block_dns.c' is in a subdirectory,
src/openvpnserv/Makefile.am:32: but option 'subdir-objects' is disabled
automake: warning: possible forward-incompatibility.
automake: At least a source file is in a subdirectory, but the 'subdir-objects'
automake: automake option hasn't been enabled.  For now, the corresponding output
automake: object file(s) will be placed in the top-level directory.  However,
automake: this behaviour will change in future Automake versions: they will
automake: unconditionally cause object files to be placed in the same subdirectory
automake: of the corresponding sources.
automake: You are advised to start using 'subdir-objects' option throughout your
automake: project, to avoid future incompatibilities.
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:23: warning: source file '$(openvpn_srcdir)/argv.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:23: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:30: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:30: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:30: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:30: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/otime.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/packet_id.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:39: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:39: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/buffer.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto_mbedtls.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/crypto_openssl.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/otime.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/packet_id.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/openvpn/Makefile.am:50: warning: source file '$(openvpn_srcdir)/platform.c' is in a subdirectory,
tests/unit_tests/openvpn/Makefile.am:50: but option 'subdir-objects' is disabled
tests/unit_tests/plugins/auth-pam/Makefile.am:10: warning: source file '$(sut_sourcedir)/utils.c' is in a subdirectory,
tests/unit_tests/plugins/auth-pam/Makefile.am:10: but option 'subdir-objects' is disabled
Fehler: Fehler-Status beim Beenden von /var/tmp/rpm-tmp.7Eq4y2 (%build)","Just for reference, I rather propose to kick out the RPM build spec from the upstream OpenVPN repository.  Much better to go directly to the distribution, which will more likely provide functional build processes.
For more details: https://www.mail-archive.com/openvpn-devel@lists.sourceforge.net/msg18222.html",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,123,2019-02-23T18:01:56Z,2019-03-04T19:55:43Z,2019-03-04T19:55:43Z,CLOSED,False,21,12,1,https://github.com/steils,Use correct ifdefs for LibreSSL support,1,[],https://github.com/OpenVPN/openvpn/pull/123,https://github.com/steils,1,https://github.com/OpenVPN/openvpn/pull/123,"TLS 1.3 is not ready yet in LibreSSL. Also there is a theoretical
possibility of OpenSSL >=1.1.1 built without TLS 1.3 support.
EC_KEY_METHOD API and SSL_get1_supported_ciphers are added into LibreSSL
master (not yet released in 2.9.0).
Some methods that are available since LibreSSL 2.7.0 were thrown away
in ssl_openssl.c regardless of LibreSSL version. Use them with newer LibreSSL.

Signed-off-by: Stefan Strogin stefan.strogin@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","TLS 1.3 is not ready yet in LibreSSL. Also there is a theoretical
possibility of OpenSSL >=1.1.1 built without TLS 1.3 support.
EC_KEY_METHOD API and SSL_get1_supported_ciphers are added into LibreSSL
master (not yet released in 2.9.0).
Some methods that are available since LibreSSL 2.7.0 were thrown away
in ssl_openssl.c regardless of LibreSSL version. Use them with newer LibreSSL.

Signed-off-by: Stefan Strogin stefan.strogin@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{'THUMBS_UP': ['https://github.com/fichtner']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,123,2019-02-23T18:01:56Z,2019-03-04T19:55:43Z,2019-03-04T19:55:43Z,CLOSED,False,21,12,1,https://github.com/steils,Use correct ifdefs for LibreSSL support,1,[],https://github.com/OpenVPN/openvpn/pull/123,https://github.com/steils,2,https://github.com/OpenVPN/openvpn/pull/123#issuecomment-466674322,"TLS 1.3 is not ready yet in LibreSSL. Also there is a theoretical
possibility of OpenSSL >=1.1.1 built without TLS 1.3 support.
EC_KEY_METHOD API and SSL_get1_supported_ciphers are added into LibreSSL
master (not yet released in 2.9.0).
Some methods that are available since LibreSSL 2.7.0 were thrown away
in ssl_openssl.c regardless of LibreSSL version. Use them with newer LibreSSL.

Signed-off-by: Stefan Strogin stefan.strogin@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Sent to openvpn-devel mailing list: https://sourceforge.net/p/openvpn/mailman/message/36595245/
See also: https://bugs.gentoo.org/678604",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,123,2019-02-23T18:01:56Z,2019-03-04T19:55:43Z,2019-03-04T19:55:43Z,CLOSED,False,21,12,1,https://github.com/steils,Use correct ifdefs for LibreSSL support,1,[],https://github.com/OpenVPN/openvpn/pull/123,https://github.com/steils,3,https://github.com/OpenVPN/openvpn/pull/123#issuecomment-467130528,"TLS 1.3 is not ready yet in LibreSSL. Also there is a theoretical
possibility of OpenSSL >=1.1.1 built without TLS 1.3 support.
EC_KEY_METHOD API and SSL_get1_supported_ciphers are added into LibreSSL
master (not yet released in 2.9.0).
Some methods that are available since LibreSSL 2.7.0 were thrown away
in ssl_openssl.c regardless of LibreSSL version. Use them with newer LibreSSL.

Signed-off-by: Stefan Strogin stefan.strogin@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",Sent v2 to openvpn-devel: https://sourceforge.net/p/openvpn/mailman/message/36596893/,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,123,2019-02-23T18:01:56Z,2019-03-04T19:55:43Z,2019-03-04T19:55:43Z,CLOSED,False,21,12,1,https://github.com/steils,Use correct ifdefs for LibreSSL support,1,[],https://github.com/OpenVPN/openvpn/pull/123,https://github.com/steils,4,https://github.com/OpenVPN/openvpn/pull/123#issuecomment-469398087,"TLS 1.3 is not ready yet in LibreSSL. Also there is a theoretical
possibility of OpenSSL >=1.1.1 built without TLS 1.3 support.
EC_KEY_METHOD API and SSL_get1_supported_ciphers are added into LibreSSL
master (not yet released in 2.9.0).
Some methods that are available since LibreSSL 2.7.0 were thrown away
in ssl_openssl.c regardless of LibreSSL version. Use them with newer LibreSSL.

Signed-off-by: Stefan Strogin stefan.strogin@gmail.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",Closed in a475086,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,124,2019-03-28T12:33:34Z,2020-06-23T18:44:14Z,2020-06-23T18:44:14Z,CLOSED,False,161,1,3,https://github.com/chschenk,Setting adapter mtu on windows systems,2,[],https://github.com/OpenVPN/openvpn/pull/124,https://github.com/chschenk,1,https://github.com/OpenVPN/openvpn/pull/124,We have noticed that openvpn does not set the mtu on windows systems. Therefor i have implemented two functions which do exactly that via the netsh commandline tool also used by other functions from openvpn like netsh_set_dns6_servers.,We have noticed that openvpn does not set the mtu on windows systems. Therefor i have implemented two functions which do exactly that via the netsh commandline tool also used by other functions from openvpn like netsh_set_dns6_servers.,True,"{'THUMBS_UP': ['https://github.com/WSLUser', 'https://github.com/despair86']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,125,2019-04-10T18:37:04Z,2019-04-11T20:58:25Z,2019-04-11T20:58:25Z,CLOSED,False,26,2,2,https://github.com/chipitsine,"(review) freebsd compile fix, cirrus-ci implementation",2,[],https://github.com/OpenVPN/openvpn/pull/125,https://github.com/chipitsine,1,https://github.com/OpenVPN/openvpn/pull/125,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,125,2019-04-10T18:37:04Z,2019-04-11T20:58:25Z,2019-04-11T20:58:25Z,CLOSED,False,26,2,2,https://github.com/chipitsine,"(review) freebsd compile fix, cirrus-ci implementation",2,[],https://github.com/OpenVPN/openvpn/pull/125,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/125#issuecomment-481987474,,"Hi,
On Wed, Apr 10, 2019 at 11:37:07AM -0700, Ilya Shipitsin wrote:
 You can view, comment on, or merge this pull request online at:

   #125

 -- Commit Summary --

   * configure.ac: fix compile-time error in argv_testdriver
   * initial cirrus-ci support
The configure.ac change looks good.  If I can have that as a ""git send-email""
mail to openvpn-devel, I can ACK and merge it right away.

The cirrus-ci change needs to go into a separate commit, because it's
an independent change.

thanks,

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,125,2019-04-10T18:37:04Z,2019-04-11T20:58:25Z,2019-04-11T20:58:25Z,CLOSED,False,26,2,2,https://github.com/chipitsine,"(review) freebsd compile fix, cirrus-ci implementation",2,[],https://github.com/OpenVPN/openvpn/pull/125,https://github.com/chipitsine,3,https://github.com/OpenVPN/openvpn/pull/125#issuecomment-482006087,,"I sent first patch to the list.
also, there are couple of things

cirrus-ci
failing tests (base64 not found) and mbedtls-2.16.0 - both tests display ""ERROR"", but build is green, this need to be fixed as well",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,126,2019-04-26T09:59:58Z,2019-04-26T11:16:14Z,2019-04-26T11:16:14Z,CLOSED,False,9802,7067,285,https://github.com/guozhongzhou,Release/2.4,314,[],https://github.com/OpenVPN/openvpn/pull/126,https://github.com/guozhongzhou,1,https://github.com/OpenVPN/openvpn/pull/126,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,126,2019-04-26T09:59:58Z,2019-04-26T11:16:14Z,2019-04-26T11:16:14Z,CLOSED,False,9802,7067,285,https://github.com/guozhongzhou,Release/2.4,314,[],https://github.com/OpenVPN/openvpn/pull/126,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/126#issuecomment-487021744,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","I can not determine what the intended message of this PR is, except ""zillions of commit from one branch applied to another"" - and since we do not accept PRs anyway, close.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,127,2019-06-11T17:33:40Z,,2019-06-12T17:31:58Z,OPEN,False,48,0,2,https://github.com/oxr463,Add Dockerfiles for various Linux distributions,1,[],https://github.com/OpenVPN/openvpn/pull/127,https://github.com/oxr463,1,https://github.com/OpenVPN/openvpn/pull/127,"To build, run the following command:
docker build . -t ""openvpn:${distro}"" -f tests/docker/${distro}/Dockerfile

Note: Currently, only Debian Stretch, and Ubuntu Bionic have been added.
URL: #127
Signed-off-by: Lucas Ramage ramage.lucas@protonmail.com
See also: https://github.com/OpenVPN/openvpn-vagrant
TODO:

 centos-7
 debian-9
 freebsd-11*
 netbsd-7 not supported
 openbsd-6 not supported
 solaris-113 not supported
 ubuntu-1604
 ubuntu-1804

*experimental, (See: https://wiki.freebsd.org/Docker).
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","To build, run the following command:
docker build . -t ""openvpn:${distro}"" -f tests/docker/${distro}/Dockerfile

Note: Currently, only Debian Stretch, and Ubuntu Bionic have been added.
URL: #127
Signed-off-by: Lucas Ramage ramage.lucas@protonmail.com
See also: https://github.com/OpenVPN/openvpn-vagrant
TODO:

 centos-7
 debian-9
 freebsd-11*
 netbsd-7 not supported
 openbsd-6 not supported
 solaris-113 not supported
 ubuntu-1604
 ubuntu-1804

*experimental, (See: https://wiki.freebsd.org/Docker).
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,128,2019-08-15T16:50:13Z,,2021-10-07T19:07:19Z,OPEN,False,2,2,1,https://github.com/Kutashov,Changes open vpn exit code defines,1,[],https://github.com/OpenVPN/openvpn/pull/128,https://github.com/Kutashov,1,https://github.com/OpenVPN/openvpn/pull/128,It's better to have distinct enums for more straightforward debug of exit function.,It's better to have distinct enums for more straightforward debug of exit function.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,128,2019-08-15T16:50:13Z,,2021-10-07T19:07:19Z,OPEN,False,2,2,1,https://github.com/Kutashov,Changes open vpn exit code defines,1,[],https://github.com/OpenVPN/openvpn/pull/128,https://github.com/Andrey26007,2,https://github.com/OpenVPN/openvpn/pull/128#issuecomment-938076342,It's better to have distinct enums for more straightforward debug of exit function.,"Yes, I totally agree about the open vpn exit code changes. But I think it is important to choose the right VPN service for this. If you need it, you might want to look here. There are so many cool vpn services out there that are great for any purpose. I think a resource like this will be useful for a lot of people. So pay attention to my advice.",True,"{'THUMBS_DOWN': ['https://github.com/TinCanTech', 'https://github.com/adilerchouk']}"
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,129,2019-08-16T07:31:03Z,,2019-08-17T15:49:51Z,OPEN,False,94,1,4,None,Export NotBefore and NotAfter items to the environment.,3,[],https://github.com/OpenVPN/openvpn/pull/129,None,1,https://github.com/OpenVPN/openvpn/pull/129,Export NotBefore and NotAfter items to the environment. This is usefull when anticipating potential user certificate expiry and acting upon it.,Export NotBefore and NotAfter items to the environment. This is usefull when anticipating potential user certificate expiry and acting upon it.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,130,2019-09-18T06:35:24Z,,2022-05-13T00:41:51Z,OPEN,False,51,1,5,https://github.com/miska,Add --askpin option,1,[],https://github.com/OpenVPN/openvpn/pull/130,https://github.com/miska,1,https://github.com/OpenVPN/openvpn/pull/130,"Adding --askpin option modeled after --askpass, letting people enter pin early
int he startup or more importantly allow them to keep a password in separate
file to simplify unattended setup.
Signed-off-by: Michal Hrusecky Michal@Hrusecky.net
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Adding --askpin option modeled after --askpass, letting people enter pin early
int he startup or more importantly allow them to keep a password in separate
file to simplify unattended setup.
Signed-off-by: Michal Hrusecky Michal@Hrusecky.net
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,131,2019-10-18T18:39:23Z,2021-08-12T22:05:07Z,2021-08-12T22:05:07Z,CLOSED,False,108,3,13,https://github.com/dgarske,Support for wolfSSL with OpenVPN v2.4.,1,[],https://github.com/OpenVPN/openvpn/pull/131,https://github.com/dgarske,1,https://github.com/OpenVPN/openvpn/pull/131,"wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install
OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install
FYI: Also submitted patch via git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1","wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install
OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install
FYI: Also submitted patch via git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,131,2019-10-18T18:39:23Z,2021-08-12T22:05:07Z,2021-08-12T22:05:07Z,CLOSED,False,108,3,13,https://github.com/dgarske,Support for wolfSSL with OpenVPN v2.4.,1,[],https://github.com/OpenVPN/openvpn/pull/131,https://github.com/dgarske,2,https://github.com/OpenVPN/openvpn/pull/131#issuecomment-552565384,"wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install
OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install
FYI: Also submitted patch via git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1","Hi @schwabe , thanks for the note! The wolfSSL engineer @julek-wolfssl is going to work on this plus the other feedback previously sent. Thank you for taking the time to review.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,131,2019-10-18T18:39:23Z,2021-08-12T22:05:07Z,2021-08-12T22:05:07Z,CLOSED,False,108,3,13,https://github.com/dgarske,Support for wolfSSL with OpenVPN v2.4.,1,[],https://github.com/OpenVPN/openvpn/pull/131,https://github.com/julek-wolfssl,3,https://github.com/OpenVPN/openvpn/pull/131#issuecomment-553795687,"wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install
OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install
FYI: Also submitted patch via git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1","The minimum configure options for wolfSSL (to make all OpenVPN tests pass) are:
./configure --enable-opensslall --enable-des3 --enable-crl --enable-certgen --enable-certext --enable-aesctr --enable-sessioncerts CFLAGS=""-DWOLFSSL_DES_ECB -DHAVE_EX_DATA""",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,131,2019-10-18T18:39:23Z,2021-08-12T22:05:07Z,2021-08-12T22:05:07Z,CLOSED,False,108,3,13,https://github.com/dgarske,Support for wolfSSL with OpenVPN v2.4.,1,[],https://github.com/OpenVPN/openvpn/pull/131,https://github.com/dgarske,4,https://github.com/OpenVPN/openvpn/pull/131#issuecomment-897998091,"wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install
OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install
FYI: Also submitted patch via git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1","Closing PR, since support has been upstreamed with #134",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,132,2019-10-25T10:20:07Z,,2022-05-24T12:56:50Z,OPEN,False,33,6,1,https://github.com/wardragon,[PATCH v2] Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/132,https://github.com/wardragon,1,https://github.com/OpenVPN/openvpn/pull/132,"Without this patch, the PAM enviornment lacks any information about the remote client address.
syslog output for auth and authpriv facilities changes
from:
Oct 25 11:52:02 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=
Oct 25 11:52:33 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=  user=****
to:
Oct 25 10:56:11 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=198.51.100.10
Oct 25 10:57:02 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=198.51.100.10 user=****
Furthermore, the presence of the remote client address in PAM
environment, enables usage of pam modules like pam_recent
[https://github.com/az143/pam_recent].
Replaces #71","Without this patch, the PAM enviornment lacks any information about the remote client address.
syslog output for auth and authpriv facilities changes
from:
Oct 25 11:52:02 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=
Oct 25 11:52:33 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=  user=****
to:
Oct 25 10:56:11 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=198.51.100.10
Oct 25 10:57:02 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=198.51.100.10 user=****
Furthermore, the presence of the remote client address in PAM
environment, enables usage of pam modules like pam_recent
[https://github.com/az143/pam_recent].
Replaces #71",True,{'THUMBS_UP': ['https://github.com/fabien-duolingo']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,132,2019-10-25T10:20:07Z,,2022-05-24T12:56:50Z,OPEN,False,33,6,1,https://github.com/wardragon,[PATCH v2] Insert client connection data into PAM environment,1,[],https://github.com/OpenVPN/openvpn/pull/132,https://github.com/pulecp,2,https://github.com/OpenVPN/openvpn/pull/132#issuecomment-1135888706,"Without this patch, the PAM enviornment lacks any information about the remote client address.
syslog output for auth and authpriv facilities changes
from:
Oct 25 11:52:02 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=
Oct 25 11:52:33 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=  user=****
to:
Oct 25 10:56:11 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=198.51.100.10
Oct 25 10:57:02 openvpndev openvpn: pam_unix(openvpn:auth): authentication failure;
logname=root uid=0 euid=0 tty= ruser= rhost=198.51.100.10 user=****
Furthermore, the presence of the remote client address in PAM
environment, enables usage of pam modules like pam_recent
[https://github.com/az143/pam_recent].
Replaces #71",What's the status of this? I also woke up the thread in #71. See link.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,133,2019-10-25T22:08:08Z,,2019-10-25T22:08:08Z,OPEN,False,10,0,1,https://github.com/1848,Add cid to env when calling client-connect and client-disconnect script,1,[],https://github.com/OpenVPN/openvpn/pull/133,https://github.com/1848,1,https://github.com/OpenVPN/openvpn/pull/133,"Small patch to include the client id to the environment when calling client-connect or client-disconnect scripts.
Could be useful as ""unique"" client id.
I dont know if this is useful enough for a real PR, so this is more like an RFC currently.","Small patch to include the client id to the environment when calling client-connect or client-disconnect scripts.
Could be useful as ""unique"" client id.
I dont know if this is useful enough for a real PR, so this is more like an RFC currently.",True,{'THUMBS_UP': ['https://github.com/NotAFile']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,134,2019-11-12T15:33:25Z,2019-11-14T08:48:45Z,2019-11-14T09:12:41Z,CLOSED,False,108,3,13,https://github.com/julek-wolfssl,Support for wolfSSL with OpenVPN v2.4.8,4,[],https://github.com/OpenVPN/openvpn/pull/134,https://github.com/julek-wolfssl,1,https://github.com/OpenVPN/openvpn/pull/134,"This is a continuation of #131. I moved the selection of cipher from src/openvpn/options.c to the appropriate test configuration files. This way previous functionality is preserved and all the tests in the build pass.
wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp  --enable-aesctr \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install

OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install","This is a continuation of #131. I moved the selection of cipher from src/openvpn/options.c to the appropriate test configuration files. This way previous functionality is preserved and all the tests in the build pass.
wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp  --enable-aesctr \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install

OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,134,2019-11-12T15:33:25Z,2019-11-14T08:48:45Z,2019-11-14T09:12:41Z,CLOSED,False,108,3,13,https://github.com/julek-wolfssl,Support for wolfSSL with OpenVPN v2.4.8,4,[],https://github.com/OpenVPN/openvpn/pull/134,https://github.com/schwabe,2,https://github.com/OpenVPN/openvpn/pull/134#issuecomment-552949205,"This is a continuation of #131. I moved the selection of cipher from src/openvpn/options.c to the appropriate test configuration files. This way previous functionality is preserved and all the tests in the build pass.
wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp  --enable-aesctr \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install

OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install","Two things that are not about the patch but general guidelines
a) better use force push to update a PR instead of creating a new one
b) all patches need to be send to the mailing list for them to be included.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,134,2019-11-12T15:33:25Z,2019-11-14T08:48:45Z,2019-11-14T09:12:41Z,CLOSED,False,108,3,13,https://github.com/julek-wolfssl,Support for wolfSSL with OpenVPN v2.4.8,4,[],https://github.com/OpenVPN/openvpn/pull/134,https://github.com/schwabe,3,https://github.com/OpenVPN/openvpn/pull/134#issuecomment-552951394,"This is a continuation of #131. I moved the selection of cipher from src/openvpn/options.c to the appropriate test configuration files. This way previous functionality is preserved and all the tests in the build pass.
wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp  --enable-aesctr \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install

OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install",Hm what does exactly this wolfssl/options.h do and why do we need to include it in every header even with the compability layer of WolfSSL?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,134,2019-11-12T15:33:25Z,2019-11-14T08:48:45Z,2019-11-14T09:12:41Z,CLOSED,False,108,3,13,https://github.com/julek-wolfssl,Support for wolfSSL with OpenVPN v2.4.8,4,[],https://github.com/OpenVPN/openvpn/pull/134,https://github.com/julek-wolfssl,4,https://github.com/OpenVPN/openvpn/pull/134#issuecomment-552970765,"This is a continuation of #131. I moved the selection of cipher from src/openvpn/options.c to the appropriate test configuration files. This way previous functionality is preserved and all the tests in the build pass.
wolfSSL:
Support added in: wolfSSL/wolfssl#2503
git clone https://github.com/wolfSSL/wolfssl.git
cd wolfssl
./autogen.sh
./configure --enable-opensslall --enable-keygen --enable-rsapss --enable-des3 \
--enable-dtls --enable-certgen --enable-certreq --enable-certext \
--enable-sessioncerts --enable-crl --enable-ocsp  --enable-aesctr \
CFLAGS=""-DWOLFSSL_DES_ECB -DWOLFSSL_LOG_PRINTF -DWOLFSSL_PUBLIC_MP -DHAVE_EX_DATA""
make
sudo make install

OpenVPN:
autoreconf -i -v -f
./configure --with-crypto-library=wolfssl
make
make check
sudo make install",The wolfssl/options.h header includes options set in the configuration stage while building wolfssl. It is needed so that all requested functionality is available to the including file.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,135,2019-11-13T08:56:24Z,2020-01-14T12:03:53Z,2020-01-14T12:03:53Z,CLOSED,False,38,53,1,https://github.com/tomty89,Fix server directive for /31 subnet,4,[],https://github.com/OpenVPN/openvpn/pull/135,https://github.com/tomty89,1,https://github.com/OpenVPN/openvpn/pull/135,"As /31 subnet now works (as we stop setting broadcast address), the server directives can be fixed for it as well. Also stop repeating code for tap and tun + subnet.","As /31 subnet now works (as we stop setting broadcast address), the server directives can be fixed for it as well. Also stop repeating code for tap and tun + subnet.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,135,2019-11-13T08:56:24Z,2020-01-14T12:03:53Z,2020-01-14T12:03:53Z,CLOSED,False,38,53,1,https://github.com/tomty89,Fix server directive for /31 subnet,4,[],https://github.com/OpenVPN/openvpn/pull/135,https://github.com/tomty89,2,https://github.com/OpenVPN/openvpn/pull/135#issuecomment-553306331,"As /31 subnet now works (as we stop setting broadcast address), the server directives can be fixed for it as well. Also stop repeating code for tap and tun + subnet.","By the way, why does o->ifconfig_pool_netmask need to be set even when nopool is set?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,136,2020-01-19T22:12:32Z,,2020-02-10T17:03:32Z,OPEN,False,80,3,6,https://github.com/mateusz-markowicz,Support subject alternative names for --verify-x509-name CN checks,2,[],https://github.com/OpenVPN/openvpn/pull/136,https://github.com/mateusz-markowicz,1,https://github.com/OpenVPN/openvpn/pull/136,"When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).","When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,136,2020-01-19T22:12:32Z,,2020-02-10T17:03:32Z,OPEN,False,80,3,6,https://github.com/mateusz-markowicz,Support subject alternative names for --verify-x509-name CN checks,2,[],https://github.com/OpenVPN/openvpn/pull/136,https://github.com/schwabe,2,https://github.com/OpenVPN/openvpn/pull/136#issuecomment-576057329,"When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).",This would introduce different behaviour than OpenVPN 2.x  and to previous version. I am not sure that is a good thing.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,136,2020-01-19T22:12:32Z,,2020-02-10T17:03:32Z,OPEN,False,80,3,6,https://github.com/mateusz-markowicz,Support subject alternative names for --verify-x509-name CN checks,2,[],https://github.com/OpenVPN/openvpn/pull/136,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/136#issuecomment-576142705,"When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).","Hi,
On Sun, Jan 19, 2020 at 03:00:22PM -0800, Arne Schwabe wrote:
 This would introduce different behaviour than OpenVPN 2.x  and to previous version. I am not sure that is a good thing.
We could have a different ""type"" for ""CN and SAN match""
…
--verify-x509-name myserver.com subject-alt-name

which would just add functionality, not change existing checks.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,136,2020-01-19T22:12:32Z,,2020-02-10T17:03:32Z,OPEN,False,80,3,6,https://github.com/mateusz-markowicz,Support subject alternative names for --verify-x509-name CN checks,2,[],https://github.com/OpenVPN/openvpn/pull/136,https://github.com/mateusz-markowicz,4,https://github.com/OpenVPN/openvpn/pull/136#issuecomment-576192156,"When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).","@schwabe : how different behavior here is a bad thing though? Please note that this is not a breaking change, all currently accepted certificates will continue to be accepted, it simply enables new class of certificates of being accepted as well.
This change brings identity verification closer to how browsers are currently doing it and more in line with rfc2818.
From https://tools.ietf.org/html/rfc2818#section-3.1:

If a subjectAltName extension of type dNSName is present, that MUST
be used as the identity. Otherwise, the (most specific) Common Name
field in the Subject field of the certificate MUST be used. Although
the use of the Common Name is existing practice, it is deprecated and
Certification Authorities are encouraged to use the dNSName instead.
In some cases, the URI is specified as an IP address rather than a
hostname. In this case, the iPAddress subjectAltName must be present
in the certificate and must exactly match the IP in the URI.

Browsers actually have moved away from using CN at all for identity verification (see https://www.chromestatus.com/feature/4981025180483584) but this would indeed be a potentially breaking change when introduced here.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,136,2020-01-19T22:12:32Z,,2020-02-10T17:03:32Z,OPEN,False,80,3,6,https://github.com/mateusz-markowicz,Support subject alternative names for --verify-x509-name CN checks,2,[],https://github.com/OpenVPN/openvpn/pull/136,https://github.com/schwabe,5,https://github.com/OpenVPN/openvpn/pull/136#issuecomment-576239845,"When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).","It is not a breaking change but in the past we were very careful not the change the behaviour of options so that one config either works in all version of openvpn that support those options or none.
@mateusz-markowicz we are not verifying domain names, we are verifying CNs. Also a lot of certificates have domain names, I have seen a lot of certificates that have different.
If we really implement RFC2818 that would also mean that we IGNORE the CN if subjAltNames are present.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,136,2020-01-19T22:12:32Z,,2020-02-10T17:03:32Z,OPEN,False,80,3,6,https://github.com/mateusz-markowicz,Support subject alternative names for --verify-x509-name CN checks,2,[],https://github.com/OpenVPN/openvpn/pull/136,https://github.com/mateusz-markowicz,6,https://github.com/OpenVPN/openvpn/pull/136#issuecomment-576282867,"When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).","@schwabe : Sure, I'll prepare the change as a separate option.
I wasn't fully following RFC2818 to avoid this potentially breaking change when CN is ignored. And yes, the fact that CN we verify can actually be anything makes it a bit difficult to make this into a really clean solution (this seems why CN was actually deprecated for browsers). I guess in practice this new option will (and should) be used with domain names, but in fact nothing prevents it being used with other types of identifiers (basically it's a string that'd be checked against CN and SAN DNS/IPs).
I'd go with rfc2818-like solution allowing CN to be checked only if SAN extension is not present in the cert (as browsers did previously). I wouldn't go the current browser's way of completely ignoring CN, as it might make sense for some clients to support 2 types of certificates (those having SAN and those with only CN) in single configuration. What do you think?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,136,2020-01-19T22:12:32Z,,2020-02-10T17:03:32Z,OPEN,False,80,3,6,https://github.com/mateusz-markowicz,Support subject alternative names for --verify-x509-name CN checks,2,[],https://github.com/OpenVPN/openvpn/pull/136,https://github.com/mateusz-markowicz,7,https://github.com/OpenVPN/openvpn/pull/136#issuecomment-577116892,"When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).","Change is now prepared as a separate option, can you guys take a look?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,136,2020-01-19T22:12:32Z,,2020-02-10T17:03:32Z,OPEN,False,80,3,6,https://github.com/mateusz-markowicz,Support subject alternative names for --verify-x509-name CN checks,2,[],https://github.com/OpenVPN/openvpn/pull/136,https://github.com/kaplun,8,https://github.com/OpenVPN/openvpn/pull/136#issuecomment-584218125,"When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).",Hi! What is the next step to have this merged officially?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,136,2020-01-19T22:12:32Z,,2020-02-10T17:03:32Z,OPEN,False,80,3,6,https://github.com/mateusz-markowicz,Support subject alternative names for --verify-x509-name CN checks,2,[],https://github.com/OpenVPN/openvpn/pull/136,https://github.com/cron2,9,https://github.com/OpenVPN/openvpn/pull/136#issuecomment-584225803,"When using ""--verify-x509-name [hostname] name"" hostname will now be accepted also when matched against one of the X509v3 Subject Alternative Name IP or DNS entries (instead of just Subject's CN).","Hi,
On Mon, Feb 10, 2020 at 08:48:18AM -0800, Samuele Kaplun wrote:
 Hi! What is the next step to have this merged officially?
Send to list.  PRs are only for initial discussion, but patches will
only ever merged if sent to the openvpn-devel list for public review
and ACK.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,137,2020-02-28T17:20:11Z,2020-03-24T17:33:42Z,2020-03-24T17:33:42Z,CLOSED,False,1,1,1,https://github.com/zhr1996,Update README,1,[],https://github.com/OpenVPN/openvpn/pull/137,https://github.com/zhr1996,1,https://github.com/OpenVPN/openvpn/pull/137,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,137,2020-02-28T17:20:11Z,2020-03-24T17:33:42Z,2020-03-24T17:33:42Z,CLOSED,False,1,1,1,https://github.com/zhr1996,Update README,1,[],https://github.com/OpenVPN/openvpn/pull/137,https://github.com/schwabe,2,https://github.com/OpenVPN/openvpn/pull/137#issuecomment-592651774,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","No, man page is correct. If anything we might change it manual page instead instead.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,138,2020-03-04T10:27:59Z,2020-05-30T12:10:21Z,2020-05-30T12:10:21Z,CLOSED,False,10787,7278,289,https://github.com/okudayukiko,"Release/2.4 OpenVPN connection slow and unstable unless add ""sndbuf 0"" and ""rcvbuf 0"" to client ovpn file",359,[],https://github.com/OpenVPN/openvpn/pull/138,https://github.com/okudayukiko,1,https://github.com/OpenVPN/openvpn/pull/138,"Client: Windows 10, OpenVPN 2.4, Japan
Server: Debian Linux,OpenVPN 2.4, HK
Protocol: UDP
OpenVPN connection slow and unstable unless add these line to client ovpn file:
sndbuf 0
rcvbuf 0
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Client: Windows 10, OpenVPN 2.4, Japan
Server: Debian Linux,OpenVPN 2.4, HK
Protocol: UDP
OpenVPN connection slow and unstable unless add these line to client ovpn file:
sndbuf 0
rcvbuf 0
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,138,2020-03-04T10:27:59Z,2020-05-30T12:10:21Z,2020-05-30T12:10:21Z,CLOSED,False,10787,7278,289,https://github.com/okudayukiko,"Release/2.4 OpenVPN connection slow and unstable unless add ""sndbuf 0"" and ""rcvbuf 0"" to client ovpn file",359,[],https://github.com/OpenVPN/openvpn/pull/138,https://github.com/mattock,2,https://github.com/OpenVPN/openvpn/pull/138#issuecomment-594449271,"Client: Windows 10, OpenVPN 2.4, Japan
Server: Debian Linux,OpenVPN 2.4, HK
Protocol: UDP
OpenVPN connection slow and unstable unless add these line to client ovpn file:
sndbuf 0
rcvbuf 0
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","This should not be a PR, should it? If yes, please make your changes on top of Git ""master"" and force-push.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,138,2020-03-04T10:27:59Z,2020-05-30T12:10:21Z,2020-05-30T12:10:21Z,CLOSED,False,10787,7278,289,https://github.com/okudayukiko,"Release/2.4 OpenVPN connection slow and unstable unless add ""sndbuf 0"" and ""rcvbuf 0"" to client ovpn file",359,[],https://github.com/OpenVPN/openvpn/pull/138,https://github.com/okudayukiko,3,https://github.com/OpenVPN/openvpn/pull/138#issuecomment-636320254,"Client: Windows 10, OpenVPN 2.4, Japan
Server: Debian Linux,OpenVPN 2.4, HK
Protocol: UDP
OpenVPN connection slow and unstable unless add these line to client ovpn file:
sndbuf 0
rcvbuf 0
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","OpenVPN Android/iOS Client doesn't call ARM AES-NI? Without AES-NI, AES encryption is slow and consume more battery power.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,138,2020-03-04T10:27:59Z,2020-05-30T12:10:21Z,2020-05-30T12:10:21Z,CLOSED,False,10787,7278,289,https://github.com/okudayukiko,"Release/2.4 OpenVPN connection slow and unstable unless add ""sndbuf 0"" and ""rcvbuf 0"" to client ovpn file",359,[],https://github.com/OpenVPN/openvpn/pull/138,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/138#issuecomment-636322282,"Client: Windows 10, OpenVPN 2.4, Japan
Server: Debian Linux,OpenVPN 2.4, HK
Protocol: UDP
OpenVPN connection slow and unstable unless add these line to client ovpn file:
sndbuf 0
rcvbuf 0
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","This PR does not make sense - you are trying to merge different branches into each other (and we're not taking PRs anyway, please send the patch to the list).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,139,2020-04-08T09:02:47Z,2020-04-08T09:05:36Z,2020-04-08T09:05:36Z,CLOSED,False,89,0,2,https://github.com/kamran1988,Release/2.2,2,[],https://github.com/OpenVPN/openvpn/pull/139,https://github.com/kamran1988,1,https://github.com/OpenVPN/openvpn/pull/139,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,139,2020-04-08T09:02:47Z,2020-04-08T09:05:36Z,2020-04-08T09:05:36Z,CLOSED,False,89,0,2,https://github.com/kamran1988,Release/2.2,2,[],https://github.com/OpenVPN/openvpn/pull/139,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/139#issuecomment-610843000,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","uh, what?  Don't create PRs with arbitrary binary files that we most certainly do not want in the main repo.",True,{'LAUGH': ['https://github.com/kamran1988']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,140,2020-04-12T04:37:45Z,,2020-08-19T08:39:54Z,OPEN,False,325,10,17,https://github.com/pengtianabc,feature: add tun2tap support for tun client with tap server,20,[],https://github.com/OpenVPN/openvpn/pull/140,https://github.com/pengtianabc,1,https://github.com/OpenVPN/openvpn/pull/140,Add a optinal param for tun2tap: tun client can connect with tap server.,Add a optinal param for tun2tap: tun client can connect with tap server.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,140,2020-04-12T04:37:45Z,,2020-08-19T08:39:54Z,OPEN,False,325,10,17,https://github.com/pengtianabc,feature: add tun2tap support for tun client with tap server,20,[],https://github.com/OpenVPN/openvpn/pull/140,https://github.com/pengtianabc,2,https://github.com/OpenVPN/openvpn/pull/140#issuecomment-612718478,Add a optinal param for tun2tap: tun client can connect with tap server.,"Some device like android and ios can not use tap mode,  i added one --tun2tap option of handle arp on tun on client side, so we can use tun client with tap server.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,140,2020-04-12T04:37:45Z,,2020-08-19T08:39:54Z,OPEN,False,325,10,17,https://github.com/pengtianabc,feature: add tun2tap support for tun client with tap server,20,[],https://github.com/OpenVPN/openvpn/pull/140,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/140#issuecomment-612769193,Add a optinal param for tun2tap: tun client can connect with tap server.,"Hi,
On Sun, Apr 12, 2020 at 07:18:33PM -0700, pengtian wrote:
 Some device like android and ios can not use tap mode,  i added one `--tun2tap` option of handle arp on tun on client side, so we can use tun client with tap server.
This is definitely interesting stuff.

Arne and I have been thinking of writing something like this, so we
can see the motivation :-) - now we just need to find time for a code
review.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{'THUMBS_UP': ['https://github.com/pengtianabc']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,140,2020-04-12T04:37:45Z,,2020-08-19T08:39:54Z,OPEN,False,325,10,17,https://github.com/pengtianabc,feature: add tun2tap support for tun client with tap server,20,[],https://github.com/OpenVPN/openvpn/pull/140,https://github.com/pengtianabc,4,https://github.com/OpenVPN/openvpn/pull/140#issuecomment-675828544,Add a optinal param for tun2tap: tun client can connect with tap server.,"Sample usage: client side: --dev tun --topology subnet --tun2tap; server side: --dev tap --topology subnet
in some incorrect config, ip address on tun device is error
Known bugs: can not use with compress",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,140,2020-04-12T04:37:45Z,,2020-08-19T08:39:54Z,OPEN,False,325,10,17,https://github.com/pengtianabc,feature: add tun2tap support for tun client with tap server,20,[],https://github.com/OpenVPN/openvpn/pull/140,https://github.com/schwabe,5,https://github.com/OpenVPN/openvpn/pull/140#issuecomment-675955179,Add a optinal param for tun2tap: tun client can connect with tap server.,"Just gave the code a quick look and although the issues I pointed out before are marked resolved, the issues are not resolved. To be included in OpenVPN we still need the code to be improved.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,142,2020-05-07T08:54:50Z,,2020-05-07T09:20:14Z,OPEN,False,5,0,1,https://github.com/ricardo-manriquez,Simple change to allow hostname to be passed as an IV variable for DN…,2,[],https://github.com/OpenVPN/openvpn/pull/142,https://github.com/ricardo-manriquez,1,https://github.com/OpenVPN/openvpn/pull/142,"…S configuration on server
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","…S configuration on server
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,142,2020-05-07T08:54:50Z,,2020-05-07T09:20:14Z,OPEN,False,5,0,1,https://github.com/ricardo-manriquez,Simple change to allow hostname to be passed as an IV variable for DN…,2,[],https://github.com/OpenVPN/openvpn/pull/142,https://github.com/schwabe,2,https://github.com/OpenVPN/openvpn/pull/142#issuecomment-625124926,"…S configuration on server
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","This should go to the mailing list as patch. Also this need some explaination why this should
a) always be send (in contrast to only when push-peer-info is active
b) why a solution that passes this information as UV_ variable with setenv UV_hostname something in the configuration or openvpn --config conf --setenv UV_hostname $(hostname) is an acceptable solution",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,142,2020-05-07T08:54:50Z,,2020-05-07T09:20:14Z,OPEN,False,5,0,1,https://github.com/ricardo-manriquez,Simple change to allow hostname to be passed as an IV variable for DN…,2,[],https://github.com/OpenVPN/openvpn/pull/142,https://github.com/ricardo-manriquez,3,https://github.com/OpenVPN/openvpn/pull/142#issuecomment-625129415,"…S configuration on server
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi thanks for taking my patch for review, I just read that I should send it to the mailing list, but I felt this initial approach was less obtrusive, this is my first time here I hope I'm not bothering
a) I placed the code so it only triggers when push-peer-info is active so as not to leak unwanted or new information just as the MAC address
b) I've tried the whole day to solve this in the way you suggest, but all the solutions bring me to the need of writing up scripts or changing mayor things at the openvpn-gui level, this seems to be requested enough, in the forums and stackoverflow, and I have not been able to find a solution that is clean and keeps the one ""ovpn"" file configuration.
This is just a suggestion for a solution of a problem I stumbled upon. If you deem it acceptable I'm sending it to the mailing list as the documentation states.
Thank you very much for your time!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,145,2020-09-03T20:01:36Z,2020-09-03T20:10:02Z,2020-09-03T20:10:23Z,CLOSED,False,78,290,1,https://github.com/traggerblue,DonLove,1,[],https://github.com/OpenVPN/openvpn/pull/145,https://github.com/traggerblue,1,https://github.com/OpenVPN/openvpn/pull/145,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,145,2020-09-03T20:01:36Z,2020-09-03T20:10:02Z,2020-09-03T20:10:23Z,CLOSED,False,78,290,1,https://github.com/traggerblue,DonLove,1,[],https://github.com/OpenVPN/openvpn/pull/145,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/145#issuecomment-686728927,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",This does not make sense - it even looks as if this commit was not even against openvpn.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,146,2020-12-04T23:22:29Z,2021-11-08T13:34:33Z,2021-11-08T13:34:33Z,CLOSED,False,464,120,12,https://github.com/cladmi,Allow compiling both `networking_sitnl` and `networking_iproute2` supports together to have `--iproute` option,13,[],https://github.com/OpenVPN/openvpn/pull/146,https://github.com/cladmi,1,https://github.com/OpenVPN/openvpn/pull/146,"Context
I have been using the --iproute cmd to easily redirect the tun interface to a network namespace https://github.com/cladmi/openvpn-netns
With the 2.5 version where netlink becomes the default, arch linux stopped shipping --enable-iproute2 to benefit from the new support.
So this prevents relying on --iproute on the new releases.
This patchset proposes having both networking implementation enabled together.
It is a one day of work only effort to try to get feedback if this would be an interesting feature for the project. It may not currently match the project way of doing things, but if there is interest, I can do the required modifications.
Description
The work is split in many incremental commits and can be reviewed one after the other.
The steps to allow using both supports are the following:

Some cleanups
Define  openvpn_net_ctx_t as a union of all implementation contexts
Namespace all networking functions in networking_sitnl and networking_iproute2 and statically call them
Dynamically call the correct function depending on the networking implementation selected

This was done through a struct of function pointers as I thought it was a compact solution.


Initialize networking to select an implementation at runtime
Select iproute2 implementation if --iproute command is used
Link both implementations
Enable iproute2 support by default

Limitations/caveats

no way to manually select the implementation, so this currently only uses iproute2 when the --iproute option is used
the openvpn_net_iface_t implementation specific types was removed as only char is really handled.
Use of function pointers, I am not sure how much the project likes to rely on them, I preferred them over macros for this first version
TODO remaining, when using msg(M_FATAL including error.h was not enough, so currently still a TODO to not forget about it
Some code is still there only to allow compiling when neither iproute nor sitnl are compiled even if not all file would compile anyway. Like the msg(M_FATAL.
PR can for sure be split between cleanups and new features
Some commits may make sense to be squashed
No new tests in the codebase

Testing done
I did test compiling with and without netlink and iproute2 (I added another option to disable netlink for testing).
This was done on several commits but not all of them were completely compiled nor tested.
On the last version I checked the help output to see if it matched the expected strings and another print output for the number of net_backend in the enum.
On the last version, I did run openvpn with the arch-linux configuration https://github.com/archlinux/svntogit-packages/blob/113a33223ce39178149571c412bc845a93f800b4/trunk/PKGBUILD#L43-L49 with both netlink and iproute2 compiled and I could correctly use the iproute2 support by simply passing --iproute my_ip_cmd.
I did not test the netlink support.
Thank you in advance for your time","Context
I have been using the --iproute cmd to easily redirect the tun interface to a network namespace https://github.com/cladmi/openvpn-netns
With the 2.5 version where netlink becomes the default, arch linux stopped shipping --enable-iproute2 to benefit from the new support.
So this prevents relying on --iproute on the new releases.
This patchset proposes having both networking implementation enabled together.
It is a one day of work only effort to try to get feedback if this would be an interesting feature for the project. It may not currently match the project way of doing things, but if there is interest, I can do the required modifications.
Description
The work is split in many incremental commits and can be reviewed one after the other.
The steps to allow using both supports are the following:

Some cleanups
Define  openvpn_net_ctx_t as a union of all implementation contexts
Namespace all networking functions in networking_sitnl and networking_iproute2 and statically call them
Dynamically call the correct function depending on the networking implementation selected

This was done through a struct of function pointers as I thought it was a compact solution.


Initialize networking to select an implementation at runtime
Select iproute2 implementation if --iproute command is used
Link both implementations
Enable iproute2 support by default

Limitations/caveats

no way to manually select the implementation, so this currently only uses iproute2 when the --iproute option is used
the openvpn_net_iface_t implementation specific types was removed as only char is really handled.
Use of function pointers, I am not sure how much the project likes to rely on them, I preferred them over macros for this first version
TODO remaining, when using msg(M_FATAL including error.h was not enough, so currently still a TODO to not forget about it
Some code is still there only to allow compiling when neither iproute nor sitnl are compiled even if not all file would compile anyway. Like the msg(M_FATAL.
PR can for sure be split between cleanups and new features
Some commits may make sense to be squashed
No new tests in the codebase

Testing done
I did test compiling with and without netlink and iproute2 (I added another option to disable netlink for testing).
This was done on several commits but not all of them were completely compiled nor tested.
On the last version I checked the help output to see if it matched the expected strings and another print output for the number of net_backend in the enum.
On the last version, I did run openvpn with the arch-linux configuration https://github.com/archlinux/svntogit-packages/blob/113a33223ce39178149571c412bc845a93f800b4/trunk/PKGBUILD#L43-L49 with both netlink and iproute2 compiled and I could correctly use the iproute2 support by simply passing --iproute my_ip_cmd.
I did not test the netlink support.
Thank you in advance for your time",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,146,2020-12-04T23:22:29Z,2021-11-08T13:34:33Z,2021-11-08T13:34:33Z,CLOSED,False,464,120,12,https://github.com/cladmi,Allow compiling both `networking_sitnl` and `networking_iproute2` supports together to have `--iproute` option,13,[],https://github.com/OpenVPN/openvpn/pull/146,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/146#issuecomment-739172849,"Context
I have been using the --iproute cmd to easily redirect the tun interface to a network namespace https://github.com/cladmi/openvpn-netns
With the 2.5 version where netlink becomes the default, arch linux stopped shipping --enable-iproute2 to benefit from the new support.
So this prevents relying on --iproute on the new releases.
This patchset proposes having both networking implementation enabled together.
It is a one day of work only effort to try to get feedback if this would be an interesting feature for the project. It may not currently match the project way of doing things, but if there is interest, I can do the required modifications.
Description
The work is split in many incremental commits and can be reviewed one after the other.
The steps to allow using both supports are the following:

Some cleanups
Define  openvpn_net_ctx_t as a union of all implementation contexts
Namespace all networking functions in networking_sitnl and networking_iproute2 and statically call them
Dynamically call the correct function depending on the networking implementation selected

This was done through a struct of function pointers as I thought it was a compact solution.


Initialize networking to select an implementation at runtime
Select iproute2 implementation if --iproute command is used
Link both implementations
Enable iproute2 support by default

Limitations/caveats

no way to manually select the implementation, so this currently only uses iproute2 when the --iproute option is used
the openvpn_net_iface_t implementation specific types was removed as only char is really handled.
Use of function pointers, I am not sure how much the project likes to rely on them, I preferred them over macros for this first version
TODO remaining, when using msg(M_FATAL including error.h was not enough, so currently still a TODO to not forget about it
Some code is still there only to allow compiling when neither iproute nor sitnl are compiled even if not all file would compile anyway. Like the msg(M_FATAL.
PR can for sure be split between cleanups and new features
Some commits may make sense to be squashed
No new tests in the codebase

Testing done
I did test compiling with and without netlink and iproute2 (I added another option to disable netlink for testing).
This was done on several commits but not all of them were completely compiled nor tested.
On the last version I checked the help output to see if it matched the expected strings and another print output for the number of net_backend in the enum.
On the last version, I did run openvpn with the arch-linux configuration https://github.com/archlinux/svntogit-packages/blob/113a33223ce39178149571c412bc845a93f800b4/trunk/PKGBUILD#L43-L49 with both netlink and iproute2 compiled and I could correctly use the iproute2 support by simply passing --iproute my_ip_cmd.
I did not test the netlink support.
Thank you in advance for your time","Good morning,
On Fri, Dec 04, 2020 at 03:22:46PM -0800, Gaëtan Harter wrote:
 I have been using the `--iproute cmd` to easily redirect the tun interface to a network namespace https://github.com/cladmi/openvpn-netns

 With the 2.5 version where `netlink` becomes the default, arch linux stopped shipping `--enable-iproute2` to benefit from the new support.
 So this prevents relying on `--iproute` on the new releases.

 This patchset proposes having both networking implementation enabled together.
We have discussed this a bit, and we do not like this approach (like
in ""we do not want to maintain and test the code for having multiple
ifconfig/route backend in parallel, ever"").

For your specific use case, there are three avenues forward

 - recompile locally (and/or ask the arch maintainers if they want to
   do two different package variants - on Gentoo, this would just be an
   USE flag, and you can build whichever variant suits you more)

 - use ""--ifconfig-noexec"" and/or ""--route-noexec"" together with an ""--up""
   script in your openvpn config, shelling out the whole ""set up interface
   and routing"" logic to a script which would then do it whichever way
   you need it to be done.  This is the most flexible, and this will is
   guaranteed to be suported in future versions.

   From the comments in the cladmi/openvpn-netns repo I guess that this
   is what you started with, moving towards ""do this with --iproute $cmd""
   - sorry for suggesting to send you back, but this *is* the well-defined
   interface for ""I want things that openvpn core can not do"", while
   ""--iproute"" is sort of a accidential leftover (no other backend has
   ""the command path to the ifconfig/route binaries is configurable"").


If you want to contribute code - which we do like! - there is option #3

 - add support for VRF and NS on the ""inside interface"" to OpenVPN

    - on a higher level (config options etc.)
    - and in the sitnl backend for your use case

   other developers can then use this as a basis, to implement the VRF
   logic in other platforms backends.

   This would be absolutely great to have :-) - but is no easy undertaking,
   as we need to get the higher level abstraction right first.  This would
   be better discussed on the openvpn-devel mailing list than in a github
   PR, though.


gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,146,2020-12-04T23:22:29Z,2021-11-08T13:34:33Z,2021-11-08T13:34:33Z,CLOSED,False,464,120,12,https://github.com/cladmi,Allow compiling both `networking_sitnl` and `networking_iproute2` supports together to have `--iproute` option,13,[],https://github.com/OpenVPN/openvpn/pull/146,https://github.com/ordex,3,https://github.com/OpenVPN/openvpn/pull/146#issuecomment-739223804,"Context
I have been using the --iproute cmd to easily redirect the tun interface to a network namespace https://github.com/cladmi/openvpn-netns
With the 2.5 version where netlink becomes the default, arch linux stopped shipping --enable-iproute2 to benefit from the new support.
So this prevents relying on --iproute on the new releases.
This patchset proposes having both networking implementation enabled together.
It is a one day of work only effort to try to get feedback if this would be an interesting feature for the project. It may not currently match the project way of doing things, but if there is interest, I can do the required modifications.
Description
The work is split in many incremental commits and can be reviewed one after the other.
The steps to allow using both supports are the following:

Some cleanups
Define  openvpn_net_ctx_t as a union of all implementation contexts
Namespace all networking functions in networking_sitnl and networking_iproute2 and statically call them
Dynamically call the correct function depending on the networking implementation selected

This was done through a struct of function pointers as I thought it was a compact solution.


Initialize networking to select an implementation at runtime
Select iproute2 implementation if --iproute command is used
Link both implementations
Enable iproute2 support by default

Limitations/caveats

no way to manually select the implementation, so this currently only uses iproute2 when the --iproute option is used
the openvpn_net_iface_t implementation specific types was removed as only char is really handled.
Use of function pointers, I am not sure how much the project likes to rely on them, I preferred them over macros for this first version
TODO remaining, when using msg(M_FATAL including error.h was not enough, so currently still a TODO to not forget about it
Some code is still there only to allow compiling when neither iproute nor sitnl are compiled even if not all file would compile anyway. Like the msg(M_FATAL.
PR can for sure be split between cleanups and new features
Some commits may make sense to be squashed
No new tests in the codebase

Testing done
I did test compiling with and without netlink and iproute2 (I added another option to disable netlink for testing).
This was done on several commits but not all of them were completely compiled nor tested.
On the last version I checked the help output to see if it matched the expected strings and another print output for the number of net_backend in the enum.
On the last version, I did run openvpn with the arch-linux configuration https://github.com/archlinux/svntogit-packages/blob/113a33223ce39178149571c412bc845a93f800b4/trunk/PKGBUILD#L43-L49 with both netlink and iproute2 compiled and I could correctly use the iproute2 support by simply passing --iproute my_ip_cmd.
I did not test the netlink support.
Thank you in advance for your time","Hi @cladmi ,
Like @cron2 mentioned, the networking API was implemented with the exact goal in mind of decoupling the network stack implementations and make sure they do not step on each other (while making the code easier to maintain).
From my understanding, it seems that your PR aims at creating a workaround for a feature that is currently not (yet) supported by sitnl. IMHO implementing netns support in sitnl would be the best option.
If you don't want to implement such feature, then I think that using route-noexec/up, as recommended by @cron2 should still work for you, no?
In any case, please feel free to join us on IRC (#openvpn-devel on freenode) if you want to have a live discussion or, even better, bring the topic up in our mailing list where other contributors can also join (not many of us really pay attention to GitHub).",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,146,2020-12-04T23:22:29Z,2021-11-08T13:34:33Z,2021-11-08T13:34:33Z,CLOSED,False,464,120,12,https://github.com/cladmi,Allow compiling both `networking_sitnl` and `networking_iproute2` supports together to have `--iproute` option,13,[],https://github.com/OpenVPN/openvpn/pull/146,https://github.com/cladmi,4,https://github.com/OpenVPN/openvpn/pull/146#issuecomment-739317797,"Context
I have been using the --iproute cmd to easily redirect the tun interface to a network namespace https://github.com/cladmi/openvpn-netns
With the 2.5 version where netlink becomes the default, arch linux stopped shipping --enable-iproute2 to benefit from the new support.
So this prevents relying on --iproute on the new releases.
This patchset proposes having both networking implementation enabled together.
It is a one day of work only effort to try to get feedback if this would be an interesting feature for the project. It may not currently match the project way of doing things, but if there is interest, I can do the required modifications.
Description
The work is split in many incremental commits and can be reviewed one after the other.
The steps to allow using both supports are the following:

Some cleanups
Define  openvpn_net_ctx_t as a union of all implementation contexts
Namespace all networking functions in networking_sitnl and networking_iproute2 and statically call them
Dynamically call the correct function depending on the networking implementation selected

This was done through a struct of function pointers as I thought it was a compact solution.


Initialize networking to select an implementation at runtime
Select iproute2 implementation if --iproute command is used
Link both implementations
Enable iproute2 support by default

Limitations/caveats

no way to manually select the implementation, so this currently only uses iproute2 when the --iproute option is used
the openvpn_net_iface_t implementation specific types was removed as only char is really handled.
Use of function pointers, I am not sure how much the project likes to rely on them, I preferred them over macros for this first version
TODO remaining, when using msg(M_FATAL including error.h was not enough, so currently still a TODO to not forget about it
Some code is still there only to allow compiling when neither iproute nor sitnl are compiled even if not all file would compile anyway. Like the msg(M_FATAL.
PR can for sure be split between cleanups and new features
Some commits may make sense to be squashed
No new tests in the codebase

Testing done
I did test compiling with and without netlink and iproute2 (I added another option to disable netlink for testing).
This was done on several commits but not all of them were completely compiled nor tested.
On the last version I checked the help output to see if it matched the expected strings and another print output for the number of net_backend in the enum.
On the last version, I did run openvpn with the arch-linux configuration https://github.com/archlinux/svntogit-packages/blob/113a33223ce39178149571c412bc845a93f800b4/trunk/PKGBUILD#L43-L49 with both netlink and iproute2 compiled and I could correctly use the iproute2 support by simply passing --iproute my_ip_cmd.
I did not test the netlink support.
Thank you in advance for your time","Thank you @cron2 and @ordex for your answers
Indeed my goal is to have a way to create the tun in a network namespaces, as it is not currently built-in I relied on external scripts to do this.


use ""--ifconfig-noexec"" and/or ""--route-noexec"" together with an ""--up""
script in your openvpn config, shelling out the whole ""set up interface
and routing"" logic to a script which would then do it whichever way
you need it to be done.  This is the most flexible, and this will is
guaranteed to be suported in future versions.
From the comments in the cladmi/openvpn-netns repo I guess that this
is what you started with, moving towards ""do this with --iproute $cmd""
sorry for suggesting to send you back, but this is the well-defined
interface for ""I want things that openvpn core can not do"", while
""--iproute"" is sort of a accidential leftover (no other backend has
""the command path to the ifconfig/route binaries is configurable"").


The --up/noexec scripts is indeed a valid solution for my problem even if it requires more scripting.
I even thought about  doing an --up script that converts the env variables to ip commands and so re-implement the iproute2 support completely with scripts, and then make it call my network namespace indirection.
I just felt I would be duplicating the implementation that is not currently linked and so tried working on having both in the openvpn binary.
Also I did not know about the --ifconfig-noxec options so when I tried, everything was configured by openvpn before calling the script.
I liked the --iproute option as it allowed me to not really worry about the arguments and mostly just pass them to a network namespace with ip -n ${NETNS}.
With the standard --up way, there are more environment variables handling, parsing, conversion from netmask to prefix length as was done by https://github.com/pekman/openvpn-netns

If you want to contribute code - which we do like! - there is option #3


add support for VRF and NS on the ""inside interface"" to OpenVPN

on a higher level (config options etc.)
and in the sitnl backend for your use case





From my understanding, it seems that your PR aims at creating a workaround for a feature that is currently not (yet) supported by sitnl. IMHO implementing netns support in sitnl would be the best option.

Indeed relying on a script it is a workaround for not having the support in sitnl.
If I manage to have a way that works with sitnl and a script, it may be easier to implement a support step by step.
As background, I am personally more interested in the NS support as it provides a simple way to not have any changes on the host and the application in the NS can only see the VPN interface so no bind support needed.
Regarding the current implementation

We have discussed this a bit, and we do not like this approach (like
in ""we do not want to maintain and test the code for having multiple
ifconfig/route backend in parallel, ever"").
Like @cron2 mentioned, the networking API was implemented with the exact goal in mind of decoupling the network stack implementations and make sure they do not step on each other (while making the code easier to maintain).

I implemented it to be selected at startup not be at the same time. My constraint was that they can be compiled together.
It is implemented as a strategy pattern (or alike) to select which implementation is used for the whole application.
For sure really using both at the same time would be a hell and require a lot of overhead with the contexts, so not wanted.
The selection could be done with an option likeopenvpn --networking sitnl or openvpn --networking iproute as you could do by having one binary name for each networking implementation.
I did not do that switch in this version and only currently relied on --iproute for selecting iproute2, to not implement user facing command line options if there was no interest in the underlying change.
What I did was decouple the interface function name from the implementation function name with an indirection
int
net_ctx_init(struct context *c, openvpn_net_ctx_t *ctx)
{
    return net_ops->ctx_init(c, ctx);   /* where `net_ops->ctx_init == net_sitnl_ctx_init` */
}

So, passed the indirection overhead, and command line options, there should be no more testing required than testing them independently.
But I understand the overhead may not be wanted if there is no reason to have several networking implementation available in the same binary. It just means only one implementation can ever be linked.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,146,2020-12-04T23:22:29Z,2021-11-08T13:34:33Z,2021-11-08T13:34:33Z,CLOSED,False,464,120,12,https://github.com/cladmi,Allow compiling both `networking_sitnl` and `networking_iproute2` supports together to have `--iproute` option,13,[],https://github.com/OpenVPN/openvpn/pull/146,https://github.com/flichtenheld,5,https://github.com/OpenVPN/openvpn/pull/146#issuecomment-963147912,"Context
I have been using the --iproute cmd to easily redirect the tun interface to a network namespace https://github.com/cladmi/openvpn-netns
With the 2.5 version where netlink becomes the default, arch linux stopped shipping --enable-iproute2 to benefit from the new support.
So this prevents relying on --iproute on the new releases.
This patchset proposes having both networking implementation enabled together.
It is a one day of work only effort to try to get feedback if this would be an interesting feature for the project. It may not currently match the project way of doing things, but if there is interest, I can do the required modifications.
Description
The work is split in many incremental commits and can be reviewed one after the other.
The steps to allow using both supports are the following:

Some cleanups
Define  openvpn_net_ctx_t as a union of all implementation contexts
Namespace all networking functions in networking_sitnl and networking_iproute2 and statically call them
Dynamically call the correct function depending on the networking implementation selected

This was done through a struct of function pointers as I thought it was a compact solution.


Initialize networking to select an implementation at runtime
Select iproute2 implementation if --iproute command is used
Link both implementations
Enable iproute2 support by default

Limitations/caveats

no way to manually select the implementation, so this currently only uses iproute2 when the --iproute option is used
the openvpn_net_iface_t implementation specific types was removed as only char is really handled.
Use of function pointers, I am not sure how much the project likes to rely on them, I preferred them over macros for this first version
TODO remaining, when using msg(M_FATAL including error.h was not enough, so currently still a TODO to not forget about it
Some code is still there only to allow compiling when neither iproute nor sitnl are compiled even if not all file would compile anyway. Like the msg(M_FATAL.
PR can for sure be split between cleanups and new features
Some commits may make sense to be squashed
No new tests in the codebase

Testing done
I did test compiling with and without netlink and iproute2 (I added another option to disable netlink for testing).
This was done on several commits but not all of them were completely compiled nor tested.
On the last version I checked the help output to see if it matched the expected strings and another print output for the number of net_backend in the enum.
On the last version, I did run openvpn with the arch-linux configuration https://github.com/archlinux/svntogit-packages/blob/113a33223ce39178149571c412bc845a93f800b4/trunk/PKGBUILD#L43-L49 with both netlink and iproute2 compiled and I could correctly use the iproute2 support by simply passing --iproute my_ip_cmd.
I did not test the netlink support.
Thank you in advance for your time","Since this was clearly rejected, is there any point in leaving this PR open? I would propose to close it.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,146,2020-12-04T23:22:29Z,2021-11-08T13:34:33Z,2021-11-08T13:34:33Z,CLOSED,False,464,120,12,https://github.com/cladmi,Allow compiling both `networking_sitnl` and `networking_iproute2` supports together to have `--iproute` option,13,[],https://github.com/OpenVPN/openvpn/pull/146,https://github.com/ordex,6,https://github.com/OpenVPN/openvpn/pull/146#issuecomment-963148764,"Context
I have been using the --iproute cmd to easily redirect the tun interface to a network namespace https://github.com/cladmi/openvpn-netns
With the 2.5 version where netlink becomes the default, arch linux stopped shipping --enable-iproute2 to benefit from the new support.
So this prevents relying on --iproute on the new releases.
This patchset proposes having both networking implementation enabled together.
It is a one day of work only effort to try to get feedback if this would be an interesting feature for the project. It may not currently match the project way of doing things, but if there is interest, I can do the required modifications.
Description
The work is split in many incremental commits and can be reviewed one after the other.
The steps to allow using both supports are the following:

Some cleanups
Define  openvpn_net_ctx_t as a union of all implementation contexts
Namespace all networking functions in networking_sitnl and networking_iproute2 and statically call them
Dynamically call the correct function depending on the networking implementation selected

This was done through a struct of function pointers as I thought it was a compact solution.


Initialize networking to select an implementation at runtime
Select iproute2 implementation if --iproute command is used
Link both implementations
Enable iproute2 support by default

Limitations/caveats

no way to manually select the implementation, so this currently only uses iproute2 when the --iproute option is used
the openvpn_net_iface_t implementation specific types was removed as only char is really handled.
Use of function pointers, I am not sure how much the project likes to rely on them, I preferred them over macros for this first version
TODO remaining, when using msg(M_FATAL including error.h was not enough, so currently still a TODO to not forget about it
Some code is still there only to allow compiling when neither iproute nor sitnl are compiled even if not all file would compile anyway. Like the msg(M_FATAL.
PR can for sure be split between cleanups and new features
Some commits may make sense to be squashed
No new tests in the codebase

Testing done
I did test compiling with and without netlink and iproute2 (I added another option to disable netlink for testing).
This was done on several commits but not all of them were completely compiled nor tested.
On the last version I checked the help output to see if it matched the expected strings and another print output for the number of net_backend in the enum.
On the last version, I did run openvpn with the arch-linux configuration https://github.com/archlinux/svntogit-packages/blob/113a33223ce39178149571c412bc845a93f800b4/trunk/PKGBUILD#L43-L49 with both netlink and iproute2 compiled and I could correctly use the iproute2 support by simply passing --iproute my_ip_cmd.
I did not test the netlink support.
Thank you in advance for your time",@flichtenheld I am fine with closing it,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,147,2021-01-22T20:41:03Z,2021-01-23T08:33:53Z,2021-01-23T08:33:54Z,CLOSED,False,5364,1554,66,https://github.com/langioletto,Release/2.5,75,[],https://github.com/OpenVPN/openvpn/pull/147,https://github.com/langioletto,1,https://github.com/OpenVPN/openvpn/pull/147,"Hi all, I have a root command problem with openvpn 2.5
On debian-10.7.0 I have not installed NET-TOOLS, because in version 2.5 there is no need
This is the contents of my configuration file: /etc/openvpn/ccd/client4
ifconfig-push 192.168.101.18 192.168.101.17 push ""route 192.168.101.0 255.255.255.0 192.168.1.253"" 
But the push route command returns the error: ""Network is unreachable, Linux route add command failed""
the ip address 192.168.1.253 is active and is pinged by the openvpn client, also because it is on the same local network
I use this setup on other clients and it works fine, the other clients have NET-TOOLS installed
Can it still be needed with openvpn version 2.5?
I am attaching the boot log file
ip a
2: enp0s12: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 link/ether 00:14:fd:12:32:f0 brd ff:ff:ff:ff:ff:ff inet 192.168.1.200/24 brd 192.168.1.255 scope global enp0s12 valid_lft forever preferred_lft forever 
openvpn.log","Hi all, I have a root command problem with openvpn 2.5
On debian-10.7.0 I have not installed NET-TOOLS, because in version 2.5 there is no need
This is the contents of my configuration file: /etc/openvpn/ccd/client4
ifconfig-push 192.168.101.18 192.168.101.17 push ""route 192.168.101.0 255.255.255.0 192.168.1.253"" 
But the push route command returns the error: ""Network is unreachable, Linux route add command failed""
the ip address 192.168.1.253 is active and is pinged by the openvpn client, also because it is on the same local network
I use this setup on other clients and it works fine, the other clients have NET-TOOLS installed
Can it still be needed with openvpn version 2.5?
I am attaching the boot log file
ip a
2: enp0s12: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 link/ether 00:14:fd:12:32:f0 brd ff:ff:ff:ff:ff:ff inet 192.168.1.200/24 brd 192.168.1.255 scope global enp0s12 valid_lft forever preferred_lft forever 
openvpn.log",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,147,2021-01-22T20:41:03Z,2021-01-23T08:33:53Z,2021-01-23T08:33:54Z,CLOSED,False,5364,1554,66,https://github.com/langioletto,Release/2.5,75,[],https://github.com/OpenVPN/openvpn/pull/147,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/147#issuecomment-765889213,"Hi all, I have a root command problem with openvpn 2.5
On debian-10.7.0 I have not installed NET-TOOLS, because in version 2.5 there is no need
This is the contents of my configuration file: /etc/openvpn/ccd/client4
ifconfig-push 192.168.101.18 192.168.101.17 push ""route 192.168.101.0 255.255.255.0 192.168.1.253"" 
But the push route command returns the error: ""Network is unreachable, Linux route add command failed""
the ip address 192.168.1.253 is active and is pinged by the openvpn client, also because it is on the same local network
I use this setup on other clients and it works fine, the other clients have NET-TOOLS installed
Can it still be needed with openvpn version 2.5?
I am attaching the boot log file
ip a
2: enp0s12: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 link/ether 00:14:fd:12:32:f0 brd ff:ff:ff:ff:ff:ff inet 192.168.1.200/24 brd 192.168.1.255 scope global enp0s12 valid_lft forever preferred_lft forever 
openvpn.log","Hi,

please do not report user issues in *pull requests*.  This is totally
the wrong forum.

There is an openvpn-users mailing list, and an openvpn forum, and a
community bug tracker, which are all better suited for non-code things.

This said:  are you trying to set up a route by means of ""push route""
that is not actually going towards the tun interface?  This is slightly
unusual config, but it might hint at a bug in the sitnl layer.

Please open a bug via https://community.openvpn.net/openvpn/newticket

gert
…
On Fri, Jan 22, 2021 at 12:41:22PM -0800, langioletto wrote:
 Hi all, I have a root command problem with openvpn 2.5

 On debian-10.7.0 I have not installed NET-TOOLS, because in version 2.5 there is no need

 This is the contents of my configuration file: /etc/openvpn/ccd/client4

 `ifconfig-push 192.168.101.18 192.168.101.17
 push &quot;route 192.168.101.0 255.255.255.0 192.168.1.253&quot;
 `
 But the push route command returns the error: &quot;Network is unreachable, Linux route add command failed&quot;

 the ip address 192.168.1.253 is active and is pinged by the openvpn client, also because it is on the same local network

 I use this setup on other clients and it works fine, the other clients have NET-TOOLS installed

 Can it still be needed with openvpn version 2.5?

 I am attaching the boot log file
 [openvpn.log](https://github.com/OpenVPN/openvpn/files/5858484/openvpn.log)

 You can view, comment on, or merge this pull request online at:

   #147

 -- Commit Summary --

   * Preparing release 2.5_beta1
   * Fix stack overflow in OpenSolaris NEXTADDR()
   * doc: fix typos in cipher-negotiation.rst
   * Changes.rst: fix mistyped option names
   * Improve the documentation for --dhcp-option
   * tun.c: enable using wintun driver under SYSTEM
   * Fix client&#39;s poor man NCP fallback
   * Fixes a bug in management_callback_send_cc_message, should be strlen instead of sizeof
   * Workaround FreeBSD 12+ race condition on tun/tap open with IPv6.
   * Preparing release 2.5_beta2
   * Fix client NCP OCC fallback when server and client cipher are identical
   * Preparing release 2.5_beta3
   * In tap.c use DiInstallDevice to install the driver on a new adapter
   * openvpnmsica: make adapter renaming non-fatal
   * Document that --push-remove is generally more suitable than --push-reset
   * Fix error detection / abort in --inetd corner case.
   * Fix TUNSETGROUP compatibility with very old Linux systems.
   * Fix best gateway selection over netlink
   * Preparing release 2.5_beta4
   * Fix handling of &#39;route remote_host&#39; for IPv6 transport case.
   * Add a remark on dropping privileges when --mlock is used
   * Replace &#39;echo -n&#39; with &#39;printf&#39; in tests/t_lpback.sh
   * Fix description of --client-disconnect calling convention in manpage.
   * man: Add missing --server-ipv6
   * Handle NULL returns from calloc() in sample plugins.
   * Fix --show-gateway for IPv6 on NetBSD/i386.
   * msvc: better support for 32bit architecture
   * socks.c: fix alen for DOMAIN type addresses, bump up buffer sizes
   * man: Improve --remote entry
   * Allow --dhcp-option in config file when windows-driver is wintun
   * Fix netbits setting (in TAP mode) for IPv6 on Windows.
   * sample-plugins: Partially autotoolize the sample-plugins build
   * build: Fix make distclean/distcheck
   * Fix fatal error at switching remotes (#629)
   * If IPv6 pool specification sets pool start to ::0 address, increment.
   * Add demo plugin that excercises &quot;CLIENT_CONNECT&quot; and &quot;CLIENT_CONNECT_V2&quot; paths
   * Fix combination of --dev tap and --topology subnet across multiple platforms.
   * Preparing release 2.5_rc1
   * netsh: Specify interfaces by index rather than name
   * netsh: Clear existing IPv6 DNS servers before configuring new ones
   * netsh: Delete WINS servers on TUN close
   * openvpnmsica: Simplify find_adapters() to void return
   * Set DNS Domain using iservice
   * Improve documentation of --username-as-common-name
   * Alias ADAPTER_DOMAIN_SUFFIX to DOMAIN
   * Fix update_time() and openvpn_gettimeofday() coexistence
   * Preparing release 2.5_rc2
   * Improve error msg when all TAP adapters are in use &#39;or disabled&#39;
   * compat/lz4: Update to v1.9.2
   * Selectively reformat too long lines
   * Speedup TCP remote hosts connections
   * Added &#39;route_ipv6_metric_NN&#39; environment variable for IPv6 route metric.
   * Fix redirecting of IPv4 default gateway if connecting over IPv6.
   * Allow &#39;none&#39; cipher being specified in --data-ciphers
   * networking_iproute2: fix memory leak in net_iface_mtu_set()
   * Add function for common env setting of verify user/pass calls
   * Avoid passing NULL to argv_printf_cat() in temp_file error case.
   * Preparing release 2.5_rc3
   * Preparing release 2.5.0
   * Change travis build scripts to use https when fetching prerequisites.
   * build: Fix missing install of man page in certain environments
   * Fix auth-token not being updated if auth-nocache is set
   * Remove auth_user_pass.wait_for_push variable
   * tls-crypt-v2: fix server memory leak
   * tls-crypt-v2: also preload tls-crypt-v2 keys (if --persist-key)
   * Fix port-share option with TLS-Crypt v2
   * Fix line number reporting on config file errors after &lt;inline&gt; segments
   * Fix too early argv freeing when registering DNS
   * Zero initialise msghdr prior to calling sendmesg
   * Clarify --block-ipv6 intent and direction.
   * Remove 1 second delay before running netsh
   * Skip DHCP renew with Wintun adapter
   * Man page sections corrections
   * Fix tls-auth mismatch OCC message when tls-cryptv2 is used.
   * Document common uses of &#39;echo&#39; directive, re-enable logging for &#39;echo&#39;.

 -- File Changes --

     M .travis/build-deps.sh (4)
     M ChangeLog (1020)
     M Changes.rst (10)
     M config-msvc.h (1)
     M configure.ac (1)
     M doc/Makefile.am (5)
     A doc/gui-notes.txt (369)
     M doc/man-sections/advanced-options.rst (7)
     M doc/man-sections/cipher-negotiation.rst (4)
     M doc/man-sections/client-options.rst (60)
     M doc/man-sections/generic-options.rst (7)
     M doc/man-sections/renegotiation.rst (2)
     M doc/man-sections/script-options.rst (13)
     M doc/man-sections/server-options.rst (36)
     M doc/man-sections/tls-options.rst (6)
     M doc/man-sections/vpn-network-options.rst (36)
     M doc/management-notes.txt (10)
     M sample/Makefile.am (3)
     A sample/sample-plugins/Makefile.am (34)
     A sample/sample-plugins/Makefile.plugins (37)
     A sample/sample-plugins/README (43)
     A sample/sample-plugins/client-connect/README (38)
     A sample/sample-plugins/client-connect/sample-client-connect.c (612)
     D sample/sample-plugins/defer/README (16)
     D sample/sample-plugins/defer/build (15)
     M sample/sample-plugins/defer/simple.c (5)
     D sample/sample-plugins/keying-material-exporter-demo/build (15)
     M sample/sample-plugins/keying-material-exporter-demo/keyingmaterialexporter.c (6)
     D sample/sample-plugins/log/build (15)
     M sample/sample-plugins/log/log.c (5)
     M sample/sample-plugins/log/log_v3.c (5)
     D sample/sample-plugins/simple/README (16)
     D sample/sample-plugins/simple/build (15)
     M sample/sample-plugins/simple/simple.c (5)
     M src/compat/PropertySheet.props (2)
     M src/compat/compat-lz4.c (2187)
     M src/compat/compat-lz4.h (737)
     M src/openvpn/errlevel.h (1)
     M src/openvpn/init.c (20)
     M src/openvpn/manage.c (35)
     M src/openvpn/misc.c (9)
     M src/openvpn/misc.h (12)
     M src/openvpn/networking_iproute2.c (2)
     M src/openvpn/networking_sitnl.c (44)
     M src/openvpn/openvpn.vcxproj (4)
     M src/openvpn/options.c (186)
     M src/openvpn/otime.h (1)
     M src/openvpn/pool.c (18)
     M src/openvpn/ps.c (34)
     M src/openvpn/route.c (64)
     M src/openvpn/socket.c (71)
     M src/openvpn/socks.c (9)
     M src/openvpn/ssl.c (18)
     M src/openvpn/ssl.h (5)
     M src/openvpn/ssl_ncp.c (38)
     M src/openvpn/ssl_verify.c (177)
     M src/openvpn/tun.c (333)
     M src/openvpnmsica/dllmain.c (2)
     M src/openvpnmsica/openvpnmsica.c (16)
     M src/openvpnserv/interactive.c (141)
     M src/tapctl/main.c (2)
     M src/tapctl/tap.c (242)
     M src/tapctl/tap.h (6)
     M tests/t_lpback.sh (8)
     M tests/unit_tests/openvpn/test_ncp.c (14)
     M version.m4 (4)

 -- Patch Links --

 https://github.com/OpenVPN/openvpn/pull/147.patch
 https://github.com/OpenVPN/openvpn/pull/147.diff

 --
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly or view it on GitHub:
 #147


-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             gert@greenie.muc.de",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,147,2021-01-22T20:41:03Z,2021-01-23T08:33:53Z,2021-01-23T08:33:54Z,CLOSED,False,5364,1554,66,https://github.com/langioletto,Release/2.5,75,[],https://github.com/OpenVPN/openvpn/pull/147,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/147#issuecomment-765889291,"Hi all, I have a root command problem with openvpn 2.5
On debian-10.7.0 I have not installed NET-TOOLS, because in version 2.5 there is no need
This is the contents of my configuration file: /etc/openvpn/ccd/client4
ifconfig-push 192.168.101.18 192.168.101.17 push ""route 192.168.101.0 255.255.255.0 192.168.1.253"" 
But the push route command returns the error: ""Network is unreachable, Linux route add command failed""
the ip address 192.168.1.253 is active and is pinged by the openvpn client, also because it is on the same local network
I use this setup on other clients and it works fine, the other clients have NET-TOOLS installed
Can it still be needed with openvpn version 2.5?
I am attaching the boot log file
ip a
2: enp0s12: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 link/ether 00:14:fd:12:32:f0 brd ff:ff:ff:ff:ff:ff inet 192.168.1.200/24 brd 192.168.1.255 scope global enp0s12 valid_lft forever preferred_lft forever 
openvpn.log",PRs are not a suitable way to report problems.  PRs are to request code changes.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,148,2021-03-07T10:18:59Z,2021-03-07T12:50:17Z,2021-03-07T12:52:03Z,CLOSED,False,140,0,3,https://github.com/alimkoca,help/how2work added,3,[],https://github.com/OpenVPN/openvpn/pull/148,https://github.com/alimkoca,1,https://github.com/OpenVPN/openvpn/pull/148,Information about VPNs,Information about VPNs,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,148,2021-03-07T10:18:59Z,2021-03-07T12:50:17Z,2021-03-07T12:52:03Z,CLOSED,False,140,0,3,https://github.com/alimkoca,help/how2work added,3,[],https://github.com/OpenVPN/openvpn/pull/148,https://github.com/schwabe,2,https://github.com/OpenVPN/openvpn/pull/148#issuecomment-792264839,Information about VPNs,This is just some example code from https://www.geeksforgeeks.org/socket-programming-cc/amp/ This has nothing to do with OpenVPN.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,148,2021-03-07T10:18:59Z,2021-03-07T12:50:17Z,2021-03-07T12:52:03Z,CLOSED,False,140,0,3,https://github.com/alimkoca,help/how2work added,3,[],https://github.com/OpenVPN/openvpn/pull/148,https://github.com/alimkoca,3,https://github.com/OpenVPN/openvpn/pull/148#issuecomment-792273831,Information about VPNs,Are you read information in code? Coding process is not finished. And i wrote source code in geeksforgeeks.com but url is like malware code and bot deleted code (Url like this: geeksforgeeks.com/blabla/%27%27socket%27),True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,148,2021-03-07T10:18:59Z,2021-03-07T12:50:17Z,2021-03-07T12:52:03Z,CLOSED,False,140,0,3,https://github.com/alimkoca,help/how2work added,3,[],https://github.com/OpenVPN/openvpn/pull/148,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/148#issuecomment-792274048,Information about VPNs,"Please do not open PRs until the code is ready for inclusion in OpenVPN.
If it has nothing to do with OpenVPN, never open a PR for OpenVPN.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,148,2021-03-07T10:18:59Z,2021-03-07T12:50:17Z,2021-03-07T12:52:03Z,CLOSED,False,140,0,3,https://github.com/alimkoca,help/how2work added,3,[],https://github.com/OpenVPN/openvpn/pull/148,https://github.com/alimkoca,5,https://github.com/OpenVPN/openvpn/pull/148#issuecomment-792274244,Information about VPNs,Ohh sorry,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,148,2021-03-07T10:18:59Z,2021-03-07T12:50:17Z,2021-03-07T12:52:03Z,CLOSED,False,140,0,3,https://github.com/alimkoca,help/how2work added,3,[],https://github.com/OpenVPN/openvpn/pull/148,https://github.com/alimkoca,6,https://github.com/OpenVPN/openvpn/pull/148#issuecomment-792274258,Information about VPNs,I don't know about this,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,149,2021-05-20T14:04:10Z,2021-06-07T10:20:41Z,2021-06-07T10:20:41Z,CLOSED,False,312,248,15,https://github.com/hwundram,Implement Windows CA template match for Crypto-API selector,9,[],https://github.com/OpenVPN/openvpn/pull/149,https://github.com/hwundram,1,https://github.com/OpenVPN/openvpn/pull/149,"The certificate selection process for the Crypto API certificates
is currently fixed to match on subject or identifier. Especially
if certificates that are used for OpenVPN are managed by a Windows CA,
it is appropriate to select the certificate to use by the template
that it is generated from, especially on domain-joined clients which
automatically acquire/renew the corresponding certificate.
The attached match implements the match on TMPL: with either a template
name (which is looked up through CryptFindOIDInfo) or by specifying the
OID of the template directly, which then is matched against the
corresponding X509 extensions specifying the template that the certificate
was generated from.
The logic requires to walk all certificates in the underlying store and
to match the certificate extensions directly. The hook which is
implemented in the certificate selection logic is generic to allow
other Crypto-API certificate matches to also be implemented at some
point in the future.
The logic to match the certificate template is taken from the
implementation in the .NET core runtime, see Pal.Windows/FindPal.cs in
in the implementation of System.Security.Cryptography.X509Certificates.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","The certificate selection process for the Crypto API certificates
is currently fixed to match on subject or identifier. Especially
if certificates that are used for OpenVPN are managed by a Windows CA,
it is appropriate to select the certificate to use by the template
that it is generated from, especially on domain-joined clients which
automatically acquire/renew the corresponding certificate.
The attached match implements the match on TMPL: with either a template
name (which is looked up through CryptFindOIDInfo) or by specifying the
OID of the template directly, which then is matched against the
corresponding X509 extensions specifying the template that the certificate
was generated from.
The logic requires to walk all certificates in the underlying store and
to match the certificate extensions directly. The hook which is
implemented in the certificate selection logic is generic to allow
other Crypto-API certificate matches to also be implemented at some
point in the future.
The logic to match the certificate template is taken from the
implementation in the .NET core runtime, see Pal.Windows/FindPal.cs in
in the implementation of System.Security.Cryptography.X509Certificates.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,150,2021-06-02T03:36:40Z,2021-06-15T09:22:39Z,2021-06-15T09:22:39Z,CLOSED,False,0,0,0,https://github.com/20150723,duplicate function declaration.,2,[],https://github.com/OpenVPN/openvpn/pull/150,https://github.com/20150723,1,https://github.com/OpenVPN/openvpn/pull/150,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,150,2021-06-02T03:36:40Z,2021-06-15T09:22:39Z,2021-06-15T09:22:39Z,CLOSED,False,0,0,0,https://github.com/20150723,duplicate function declaration.,2,[],https://github.com/OpenVPN/openvpn/pull/150,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/150#issuecomment-853272848,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi,

good find.

Please send the patch to the mailing list, as the PR docs say.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,150,2021-06-02T03:36:40Z,2021-06-15T09:22:39Z,2021-06-15T09:22:39Z,CLOSED,False,0,0,0,https://github.com/20150723,duplicate function declaration.,2,[],https://github.com/OpenVPN/openvpn/pull/150,https://github.com/20150723,3,https://github.com/OpenVPN/openvpn/pull/150#issuecomment-853581190,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thanks,
Message has been sent.
Use sendmail for the first time, please contact me if you have any questions.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,150,2021-06-02T03:36:40Z,2021-06-15T09:22:39Z,2021-06-15T09:22:39Z,CLOSED,False,0,0,0,https://github.com/20150723,duplicate function declaration.,2,[],https://github.com/OpenVPN/openvpn/pull/150,https://github.com/cron2,4,https://github.com/OpenVPN/openvpn/pull/150#issuecomment-856203254,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi,
On Wed, Jun 02, 2021 at 10:17:57PM -0700, Jeff wrote:
 1. patch has been sent, If you have any questions, please contact me.
Patch has not arrived on the list.

You can always check the list archives under

  ***@***.***/

to see if your patch made it correctly.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,150,2021-06-02T03:36:40Z,2021-06-15T09:22:39Z,2021-06-15T09:22:39Z,CLOSED,False,0,0,0,https://github.com/20150723,duplicate function declaration.,2,[],https://github.com/OpenVPN/openvpn/pull/150,https://github.com/cron2,5,https://github.com/OpenVPN/openvpn/pull/150#issuecomment-861338404,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Patch has been merged via our ""send to openvpn-devel to get it reviewed and merged"" process.
Thanks for your contribution.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,151,2021-07-06T09:25:30Z,2021-07-06T10:04:27Z,2021-07-06T13:51:02Z,CLOSED,False,29,0,2,https://github.com/klim-iv,Add option for DPI trickery,1,[],https://github.com/OpenVPN/openvpn/pull/151,https://github.com/klim-iv,1,https://github.com/OpenVPN/openvpn/pull/151,"Some internet providers detects attempts to connect OpenVPN server
and blocks it.
Detection executed with using DPI (deep packet inspection) during
establishing connection, such packet sequence is blocked:

client sent: P_CONTROL_HARD_RESET_CLIENT_V2
server sent: ACK
server: P_CONTROL_HARD_RESET_SERVER_V2
client sent: ACK
client sent: P_ACK_V1
server sent: ACK
client sent: P_CONTROL_V1
ISP close socket, connection fails
This patchset add DPI trickery, it delays sent data in step 5.
In that case, server repeat execute step 3. After some attempts
we execute step 5, but now, sequence of packets is not fit to
DPI template and step 8 is executed successful and connection is
established.

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Some internet providers detects attempts to connect OpenVPN server
and blocks it.
Detection executed with using DPI (deep packet inspection) during
establishing connection, such packet sequence is blocked:

client sent: P_CONTROL_HARD_RESET_CLIENT_V2
server sent: ACK
server: P_CONTROL_HARD_RESET_SERVER_V2
client sent: ACK
client sent: P_ACK_V1
server sent: ACK
client sent: P_CONTROL_V1
ISP close socket, connection fails
This patchset add DPI trickery, it delays sent data in step 5.
In that case, server repeat execute step 3. After some attempts
we execute step 5, but now, sequence of packets is not fit to
DPI template and step 8 is executed successful and connection is
established.

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,151,2021-07-06T09:25:30Z,2021-07-06T10:04:27Z,2021-07-06T13:51:02Z,CLOSED,False,29,0,2,https://github.com/klim-iv,Add option for DPI trickery,1,[],https://github.com/OpenVPN/openvpn/pull/151,https://github.com/ordex,2,https://github.com/OpenVPN/openvpn/pull/151#issuecomment-874611346,"Some internet providers detects attempts to connect OpenVPN server
and blocks it.
Detection executed with using DPI (deep packet inspection) during
establishing connection, such packet sequence is blocked:

client sent: P_CONTROL_HARD_RESET_CLIENT_V2
server sent: ACK
server: P_CONTROL_HARD_RESET_SERVER_V2
client sent: ACK
client sent: P_ACK_V1
server sent: ACK
client sent: P_CONTROL_V1
ISP close socket, connection fails
This patchset add DPI trickery, it delays sent data in step 5.
In that case, server repeat execute step 3. After some attempts
we execute step 5, but now, sequence of packets is not fit to
DPI template and step 8 is executed successful and connection is
established.

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","It will take very short time for a DPI logic to be updated to catch this too.
This said, why implementing such trickery when you can directly use tls-crypt which hides the full content of the control packets?
If that is also not enough, there is ongoing work aiming at obfuscating the whole protocol. The latter would be a better approach rather than adding ""trickeries"".",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,151,2021-07-06T09:25:30Z,2021-07-06T10:04:27Z,2021-07-06T13:51:02Z,CLOSED,False,29,0,2,https://github.com/klim-iv,Add option for DPI trickery,1,[],https://github.com/OpenVPN/openvpn/pull/151,https://github.com/klim-iv,3,https://github.com/OpenVPN/openvpn/pull/151#issuecomment-874630693,"Some internet providers detects attempts to connect OpenVPN server
and blocks it.
Detection executed with using DPI (deep packet inspection) during
establishing connection, such packet sequence is blocked:

client sent: P_CONTROL_HARD_RESET_CLIENT_V2
server sent: ACK
server: P_CONTROL_HARD_RESET_SERVER_V2
client sent: ACK
client sent: P_ACK_V1
server sent: ACK
client sent: P_CONTROL_V1
ISP close socket, connection fails
This patchset add DPI trickery, it delays sent data in step 5.
In that case, server repeat execute step 3. After some attempts
we execute step 5, but now, sequence of packets is not fit to
DPI template and step 8 is executed successful and connection is
established.

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","It will take very short time for a DPI logic to be updated to catch this too.
This said, why implementing such trickery when you can directly use tls-crypt which hides the full content of the control packets?
If that is also not enough, there is ongoing work aiming at obfuscating the whole protocol. The latter would be a better approach rather than adding ""trickeries"".

Ok, thanks a lot for you comment. I'll reject patchset",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,151,2021-07-06T09:25:30Z,2021-07-06T10:04:27Z,2021-07-06T13:51:02Z,CLOSED,False,29,0,2,https://github.com/klim-iv,Add option for DPI trickery,1,[],https://github.com/OpenVPN/openvpn/pull/151,https://github.com/schwabe,4,https://github.com/OpenVPN/openvpn/pull/151#issuecomment-874778191,"Some internet providers detects attempts to connect OpenVPN server
and blocks it.
Detection executed with using DPI (deep packet inspection) during
establishing connection, such packet sequence is blocked:

client sent: P_CONTROL_HARD_RESET_CLIENT_V2
server sent: ACK
server: P_CONTROL_HARD_RESET_SERVER_V2
client sent: ACK
client sent: P_ACK_V1
server sent: ACK
client sent: P_CONTROL_V1
ISP close socket, connection fails
This patchset add DPI trickery, it delays sent data in step 5.
In that case, server repeat execute step 3. After some attempts
we execute step 5, but now, sequence of packets is not fit to
DPI template and step 8 is executed successful and connection is
established.

Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",Side note: tls-crypt still does not hide the op codes. But yes. This DPI avoidance is better done with projects that concentrate on that.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,152,2021-07-14T10:09:29Z,2021-07-14T21:07:41Z,2021-07-14T21:07:48Z,CLOSED,False,1,0,1,https://github.com/DavidKorczynski,fix memory leak in add_route_ipv6.,1,[],https://github.com/OpenVPN/openvpn/pull/152,https://github.com/DavidKorczynski,1,https://github.com/OpenVPN/openvpn/pull/152,"Hi,
There is a leak in add_route_ipv6 here:
void
add_route_ipv6(struct route_ipv6 *r6, const struct tuntap *tt,
               unsigned int flags, const struct env_set *es,
               openvpn_net_ctx_t *ctx)
{
    struct gc_arena gc;
    struct argv argv = argv_new();

    const char *network;
    const char *gateway;
    bool status = false;
    const char *device = tt->actual_name;
#if defined(TARGET_LINUX)
    int metric;
#endif
    bool gateway_needed = false;

    if (!(r6->flags & RT_DEFINED) )
    {
        return;
    }

If the first condition is true, then argv will be leaked. This PR fixes it with a simple free.
This was found during efforts in getting fuzzing into openvpn by way of oss-fuzz.
Will submit this to the mailing list when you are happy with the patch.","Hi,
There is a leak in add_route_ipv6 here:
void
add_route_ipv6(struct route_ipv6 *r6, const struct tuntap *tt,
               unsigned int flags, const struct env_set *es,
               openvpn_net_ctx_t *ctx)
{
    struct gc_arena gc;
    struct argv argv = argv_new();

    const char *network;
    const char *gateway;
    bool status = false;
    const char *device = tt->actual_name;
#if defined(TARGET_LINUX)
    int metric;
#endif
    bool gateway_needed = false;

    if (!(r6->flags & RT_DEFINED) )
    {
        return;
    }

If the first condition is true, then argv will be leaked. This PR fixes it with a simple free.
This was found during efforts in getting fuzzing into openvpn by way of oss-fuzz.
Will submit this to the mailing list when you are happy with the patch.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,152,2021-07-14T10:09:29Z,2021-07-14T21:07:41Z,2021-07-14T21:07:48Z,CLOSED,False,1,0,1,https://github.com/DavidKorczynski,fix memory leak in add_route_ipv6.,1,[],https://github.com/OpenVPN/openvpn/pull/152,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/152#issuecomment-879769043,"Hi,
There is a leak in add_route_ipv6 here:
void
add_route_ipv6(struct route_ipv6 *r6, const struct tuntap *tt,
               unsigned int flags, const struct env_set *es,
               openvpn_net_ctx_t *ctx)
{
    struct gc_arena gc;
    struct argv argv = argv_new();

    const char *network;
    const char *gateway;
    bool status = false;
    const char *device = tt->actual_name;
#if defined(TARGET_LINUX)
    int metric;
#endif
    bool gateway_needed = false;

    if (!(r6->flags & RT_DEFINED) )
    {
        return;
    }

If the first condition is true, then argv will be leaked. This PR fixes it with a simple free.
This was found during efforts in getting fuzzing into openvpn by way of oss-fuzz.
Will submit this to the mailing list when you are happy with the patch.","Hi,
On Wed, Jul 14, 2021 at 03:09:44AM -0700, DavidKorczynski wrote:
     if (!(r6-&gt;flags &amp; RT_DEFINED) )
     {
         return;
     }
I'm not sure a route can ever end up here without being RT_DEFINED - but
you're right, *if* it ends up here, argv needs to be free'ed.

Please send a patch to the list.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,152,2021-07-14T10:09:29Z,2021-07-14T21:07:41Z,2021-07-14T21:07:48Z,CLOSED,False,1,0,1,https://github.com/DavidKorczynski,fix memory leak in add_route_ipv6.,1,[],https://github.com/OpenVPN/openvpn/pull/152,https://github.com/DavidKorczynski,3,https://github.com/OpenVPN/openvpn/pull/152#issuecomment-880210787,"Hi,
There is a leak in add_route_ipv6 here:
void
add_route_ipv6(struct route_ipv6 *r6, const struct tuntap *tt,
               unsigned int flags, const struct env_set *es,
               openvpn_net_ctx_t *ctx)
{
    struct gc_arena gc;
    struct argv argv = argv_new();

    const char *network;
    const char *gateway;
    bool status = false;
    const char *device = tt->actual_name;
#if defined(TARGET_LINUX)
    int metric;
#endif
    bool gateway_needed = false;

    if (!(r6->flags & RT_DEFINED) )
    {
        return;
    }

If the first condition is true, then argv will be leaked. This PR fixes it with a simple free.
This was found during efforts in getting fuzzing into openvpn by way of oss-fuzz.
Will submit this to the mailing list when you are happy with the patch.","This is now being resolved on the mailing list, closing.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,153,2021-07-17T06:15:40Z,2021-07-17T08:12:29Z,2021-07-17T08:12:34Z,CLOSED,False,0,6,1,https://github.com/kulikov-a,pool.c: allow /29 with net30,1,[],https://github.com/OpenVPN/openvpn/pull/153,https://github.com/kulikov-a,1,https://github.com/OpenVPN/openvpn/pull/153,"Hi!
please can you explain one change in 2.5?
version 2.4 allowed /29 subnets to be used with net30 topology.
like server 172.18.18.0 255.255.255.248
now, after 1379e52#diff-c352dbfea84a922bc7cc7d59c2bdab978a438266607404943bd6451d99de4e06 this config generates IPv4 pool size is too small (1), must be at least 2
question: is this done on purpose and will not change in the future?
I see no changes in the helper.c - /29 are still allowed with net30
Thanks!!
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi!
please can you explain one change in 2.5?
version 2.4 allowed /29 subnets to be used with net30 topology.
like server 172.18.18.0 255.255.255.248
now, after 1379e52#diff-c352dbfea84a922bc7cc7d59c2bdab978a438266607404943bd6451d99de4e06 this config generates IPv4 pool size is too small (1), must be at least 2
question: is this done on purpose and will not change in the future?
I see no changes in the helper.c - /29 are still allowed with net30
Thanks!!
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,153,2021-07-17T06:15:40Z,2021-07-17T08:12:29Z,2021-07-17T08:12:34Z,CLOSED,False,0,6,1,https://github.com/kulikov-a,pool.c: allow /29 with net30,1,[],https://github.com/OpenVPN/openvpn/pull/153,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/153#issuecomment-881848730,"Hi!
please can you explain one change in 2.5?
version 2.4 allowed /29 subnets to be used with net30 topology.
like server 172.18.18.0 255.255.255.248
now, after 1379e52#diff-c352dbfea84a922bc7cc7d59c2bdab978a438266607404943bd6451d99de4e06 this config generates IPv4 pool size is too small (1), must be at least 2
question: is this done on purpose and will not change in the future?
I see no changes in the helper.c - /29 are still allowed with net30
Thanks!!
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi,
On Fri, Jul 16, 2021 at 11:15:54PM -0700, kulikov-a wrote:
 please can you explain one change in 2.5?
 version 2.4 allowed /29 subnets to be used with net30 topology.
 like `server 172.18.18.0 255.255.255.248`
 now, after 1379e52#diff-c352dbfea84a922bc7cc7d59c2bdab978a438266607404943bd6451d99de4e06 this config generates `IPv4 pool size is too small (1), must be at least 2`
 question: is this done on purpose and will not change in the future?
This is done on purpose, as we do not consider a pool of size 1 a
useful setup.

Use topology subnet if you want to work with a /29.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,153,2021-07-17T06:15:40Z,2021-07-17T08:12:29Z,2021-07-17T08:12:34Z,CLOSED,False,0,6,1,https://github.com/kulikov-a,pool.c: allow /29 with net30,1,[],https://github.com/OpenVPN/openvpn/pull/153,https://github.com/kulikov-a,3,https://github.com/OpenVPN/openvpn/pull/153#issuecomment-881854901,"Hi!
please can you explain one change in 2.5?
version 2.4 allowed /29 subnets to be used with net30 topology.
like server 172.18.18.0 255.255.255.248
now, after 1379e52#diff-c352dbfea84a922bc7cc7d59c2bdab978a438266607404943bd6451d99de4e06 this config generates IPv4 pool size is too small (1), must be at least 2
question: is this done on purpose and will not change in the future?
I see no changes in the helper.c - /29 are still allowed with net30
Thanks!!
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","@cron2
thanks for the clarification and quick response",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,154,2021-08-01T15:38:05Z,2021-11-07T19:06:59Z,2021-11-08T09:10:39Z,CLOSED,False,1,1,1,https://github.com/lstipakov,GitHub Actions: fix MSVC builds,1,[],https://github.com/OpenVPN/openvpn/pull/154,https://github.com/lstipakov,1,https://github.com/OpenVPN/openvpn/pull/154,"By reasons remain unknown, MSVC GitHub Actions
started to fail after some irrelevant change.
While problem is also reproduced on my GitHub fork,
I couldn't reproduce it locally. Despiteadding
debug logging to GitHub Actions it is not clear
what went wrong:
##[debug]Exit code '3221225477' received from command
'""D:\a\openvpn\openvpn\vcpkg\vcpkg.exe""'
Turns out that update to a newer vcpkg commit fixed the problem.
Signed-off-by: Lev Stipakov lev@openvpn.net
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","By reasons remain unknown, MSVC GitHub Actions
started to fail after some irrelevant change.
While problem is also reproduced on my GitHub fork,
I couldn't reproduce it locally. Despiteadding
debug logging to GitHub Actions it is not clear
what went wrong:
##[debug]Exit code '3221225477' received from command
'""D:\a\openvpn\openvpn\vcpkg\vcpkg.exe""'
Turns out that update to a newer vcpkg commit fixed the problem.
Signed-off-by: Lev Stipakov lev@openvpn.net
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,154,2021-08-01T15:38:05Z,2021-11-07T19:06:59Z,2021-11-08T09:10:39Z,CLOSED,False,1,1,1,https://github.com/lstipakov,GitHub Actions: fix MSVC builds,1,[],https://github.com/OpenVPN/openvpn/pull/154,https://github.com/flichtenheld,2,https://github.com/OpenVPN/openvpn/pull/154#issuecomment-962662266,"By reasons remain unknown, MSVC GitHub Actions
started to fail after some irrelevant change.
While problem is also reproduced on my GitHub fork,
I couldn't reproduce it locally. Despiteadding
debug logging to GitHub Actions it is not clear
what went wrong:
##[debug]Exit code '3221225477' received from command
'""D:\a\openvpn\openvpn\vcpkg\vcpkg.exe""'
Turns out that update to a newer vcpkg commit fixed the problem.
Signed-off-by: Lev Stipakov lev@openvpn.net
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",This change has been applied as commit de8871f. The PR should be closed.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,155,2021-08-23T21:50:36Z,2021-09-13T08:13:25Z,2021-09-13T08:13:25Z,CLOSED,False,45,0,1,https://github.com/sinnsfallenangel,README,1,[],https://github.com/OpenVPN/openvpn/pull/155,https://github.com/sinnsfallenangel,1,https://github.com/OpenVPN/openvpn/pull/155,"let's see
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","let's see
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,155,2021-08-23T21:50:36Z,2021-09-13T08:13:25Z,2021-09-13T08:13:25Z,CLOSED,False,45,0,1,https://github.com/sinnsfallenangel,README,1,[],https://github.com/OpenVPN/openvpn/pull/155,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/155#issuecomment-917949321,"let's see
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Not sure what this is about - it seems to be adding a README.txt which is a copy of the existing README file...
So, closing this PR as the intention seems to be unclear (maybe just experimenting with github?) and we do not accept PRs anyway for openvpn core.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/FH0,1,https://github.com/OpenVPN/openvpn/pull/156,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/ordex,2,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-905290255,,"Hi @FH0 is this just a ""cosmetic"" fix? or is it fixing an actual problem?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/FH0,3,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-905338195,,"IN6_IS_ADDR_UNSPECIFIED  need const struct in6_addr * instead of s6_addr.
https://www.ibm.com/docs/en/zos/2.4.0?topic=programming-address-testing-macros",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/schwabe,4,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-905447276,,Yeah that explanation looks sounds. Could you add that to the commit message and send to our mailing list? (See contributing.rst),True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/cron2,5,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-905480261,,"Hi,
On Wed, Aug 25, 2021 at 02:30:52AM -0700, FH0 wrote:
 `IN6_IS_ADDR_UNSPECIFIED`  need `const struct in6_addr *` instead of `s6_addr`.
 https://www.ibm.com/docs/en/zos/2.4.0?topic=programming-address-testing-macros

Interesting.  Why is this working today?

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/schwabe,6,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-905505516,,Pointer to the struct and pointer to the first element of the struct (technically array address) have the same address. So while technically not correct you don't get any wrong behaviour since the address is still the same.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/ordex,7,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-905506638,,"@schwabe Yeah, this is mostly cosmetic.
@FH0 can we please get a patch with this explanation in the commit message sent to our mailing list?
Thanks!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/FH0,8,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-906020693,,"This is not a cosmetic bug fix. I can't compile openvpn with android ndk r23 because of its wrong parameter type.
Also, I can't use  git-send-email because of my network environment. Maybe someone can help me complete this pr, I don't care about ""the copyright"".",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/ordex,9,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-906127406,,"@FH0 when compiling for Android the TARGET_ANDROID define should be set, which would prevent you from even trying to compile that code.
Android should use this other implementation of get_default_gateway_ipv6(): https://github.com/OpenVPN/openvpn/blob/master/src/openvpn/route.c#L3194
While I do believe we should clean up that function call, it also seems that you are not compiling the code properly.
I have sent this patch to the mailing list as requested.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/schwabe,10,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-906321828,,"#define IN6_IS_ADDR_UNSPECIFIED(a) \
  ((((a)->s6_addr32[0]) == 0) && \
   (((a)->s6_addr32[1]) == 0) && \
   (((a)->s6_addr32[2]) == 0) && \
   (((a)->s6_addr32[3]) == 0))

is what Android uses for IN6_IS_ADDR_UNSPECIFIED in both NDK 21 and NDK 23
Might really be trying to compile without TARGET_ANDROID.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/FH0,11,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-906347898,,Thanks for TARGET_ANDROID. It would be better if TARGET_ANDROID could be set automatically.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/schwabe,12,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-906358085,,@FH0 TARGET_ANDROID is just a small piece of the puzzle and is intended when using OpenVPN in a app. With TARGET_ANDROID you MUST use the management interface to actually run the binary. For more details see also https://github.com/OpenVPN/openvpn/blob/master/doc/android.txt,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,156,2021-08-25T08:16:16Z,2021-09-08T01:43:38Z,2021-09-08T01:43:38Z,CLOSED,False,1,1,1,https://github.com/FH0,fix IN6_IS_ADDR_UNSPECIFIED,1,[],https://github.com/OpenVPN/openvpn/pull/156,https://github.com/FH0,13,https://github.com/OpenVPN/openvpn/pull/156#issuecomment-906364430,,"@schwabe If this is the case, I would like to keep TARGET_LINUX. I want openvpn to run with command line for rooted android device.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,157,2021-09-27T02:49:00Z,2022-05-14T23:48:55Z,2022-05-14T23:48:55Z,CLOSED,False,2,2,1,https://github.com/PeiweiHu,Change return value check of BIO_free,1,[],https://github.com/OpenVPN/openvpn/pull/157,https://github.com/PeiweiHu,1,https://github.com/OpenVPN/openvpn/pull/157,"BIO_free return values are not limited to 0 and 1 (although openssl documentation says 0 and 1). I already proposed pr and it will be merged in openssl 3.0. But it's better to change return check of BIO_free to adapt previous versions of openssl.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","BIO_free return values are not limited to 0 and 1 (although openssl documentation says 0 and 1). I already proposed pr and it will be merged in openssl 3.0. But it's better to change return check of BIO_free to adapt previous versions of openssl.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,157,2021-09-27T02:49:00Z,2022-05-14T23:48:55Z,2022-05-14T23:48:55Z,CLOSED,False,2,2,1,https://github.com/PeiweiHu,Change return value check of BIO_free,1,[],https://github.com/OpenVPN/openvpn/pull/157,https://github.com/flichtenheld,2,https://github.com/OpenVPN/openvpn/pull/157#issuecomment-963593413,"BIO_free return values are not limited to 0 and 1 (although openssl documentation says 0 and 1). I already proposed pr and it will be merged in openssl 3.0. But it's better to change return check of BIO_free to adapt previous versions of openssl.
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",So the patch seems technically correct. And BIO_free can indeed return values < 0 if a callback is set. But openvpn never seems to set any callbacks. So is this an actual issue here?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,158,2021-09-30T10:37:02Z,,2021-09-30T11:35:38Z,OPEN,False,90,22,5,https://github.com/lo1ol,Add ability to specify initialize flags for pkcs11 provider,1,[],https://github.com/OpenVPN/openvpn/pull/158,https://github.com/lo1ol,1,https://github.com/OpenVPN/openvpn/pull/158,"New pkcs11-helper interface allows to setup pkcs11 provider via
properties: alonbl/pkcs11-helper@b78d21c
Also pkcs11-helper added ability to setup init args for pkcs11 provider:
alonbl/pkcs11-helper@133f893
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","New pkcs11-helper interface allows to setup pkcs11 provider via
properties: alonbl/pkcs11-helper@b78d21c
Also pkcs11-helper added ability to setup init args for pkcs11 provider:
alonbl/pkcs11-helper@133f893
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{'THUMBS_UP': ['https://github.com/PavelAnfimov']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,159,2021-10-05T16:02:16Z,,2021-12-10T09:25:44Z,OPEN,False,10,8,1,https://github.com/cacamille3,Fix argv leaks in delete_route() and delete_route_ipv6(),7,[],https://github.com/OpenVPN/openvpn/pull/159,https://github.com/cacamille3,1,https://github.com/OpenVPN/openvpn/pull/159,"If a route structure is passed to delete_route() or delete_route_ipv6()
without the RT_DEFINED or RT_ADDED flags set, both functions leak an ""argv""
structure allocation
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","If a route structure is passed to delete_route() or delete_route_ipv6()
without the RT_DEFINED or RT_ADDED flags set, both functions leak an ""argv""
structure allocation
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,159,2021-10-05T16:02:16Z,,2021-12-10T09:25:44Z,OPEN,False,10,8,1,https://github.com/cacamille3,Fix argv leaks in delete_route() and delete_route_ipv6(),7,[],https://github.com/OpenVPN/openvpn/pull/159,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/159#issuecomment-934552989,"If a route structure is passed to delete_route() or delete_route_ipv6()
without the RT_DEFINED or RT_ADDED flags set, both functions leak an ""argv""
structure allocation
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","this has been fixed in master and release/2.5 3 months ago...
commit 5e88f13
Author: David Korczynski david@adalogics.com
Date:   Wed Jul 14 17:25:33 2021 +0100
Fix argv leaks in add_route() and add_route_ipv6()",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,159,2021-10-05T16:02:16Z,,2021-12-10T09:25:44Z,OPEN,False,10,8,1,https://github.com/cacamille3,Fix argv leaks in delete_route() and delete_route_ipv6(),7,[],https://github.com/OpenVPN/openvpn/pull/159,https://github.com/ordex,3,https://github.com/OpenVPN/openvpn/pull/159#issuecomment-934558298,"If a route structure is passed to delete_route() or delete_route_ipv6()
without the RT_DEFINED or RT_ADDED flags set, both functions leak an ""argv""
structure allocation
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","@cacamille3 I just discussed with @cron2 and we figured that your patch is indeed valid.
As explained in the automatic PR message, can you please send your patch to our mailing list for review?
Thanks!
p.s. don't forget your signed-off-by line!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,159,2021-10-05T16:02:16Z,,2021-12-10T09:25:44Z,OPEN,False,10,8,1,https://github.com/cacamille3,Fix argv leaks in delete_route() and delete_route_ipv6(),7,[],https://github.com/OpenVPN/openvpn/pull/159,https://github.com/ordex,4,https://github.com/OpenVPN/openvpn/pull/159#issuecomment-934564602,"If a route structure is passed to delete_route() or delete_route_ipv6()
without the RT_DEFINED or RT_ADDED flags set, both functions leak an ""argv""
structure allocation
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","@cacamille3 as another suggestion, can you please move the declaration and initialization of argv just above gc_init() please? this way we allocate the argv only when needed. (We do similarly in other functions)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,160,2021-10-31T21:42:18Z,,2022-01-09T20:31:12Z,OPEN,False,67,3,3,https://github.com/fkooman,Fix for issue 1161 ( --route-ipv6 does not recognize net_gateway or net_gateway-ipv6 ),2,[],https://github.com/OpenVPN/openvpn/pull/160,https://github.com/fkooman,1,https://github.com/OpenVPN/openvpn/pull/160,"This is a potential fix for 1161. I am sure it is not done properly, some checks (whether iface / metric is defined) are missing I think, but rudimentary testing shows that it works on at least Linux. This patch adds/fixes the net_gateway_ipv6 flag for --route-ipv6.
Any feedback, hints, suggestions welcome before I send it to openvpn-devel@ list.","This is a potential fix for 1161. I am sure it is not done properly, some checks (whether iface / metric is defined) are missing I think, but rudimentary testing shows that it works on at least Linux. This patch adds/fixes the net_gateway_ipv6 flag for --route-ipv6.
Any feedback, hints, suggestions welcome before I send it to openvpn-devel@ list.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,161,2021-11-02T04:40:10Z,2022-04-05T08:10:09Z,2022-04-05T08:10:10Z,CLOSED,False,2718,44,20,https://github.com/selvanair,A built-in provider for using external key with OpenSSL 3.0,27,[],https://github.com/OpenVPN/openvpn/pull/161,https://github.com/selvanair,1,https://github.com/OpenVPN/openvpn/pull/161,"Hooking into callbacks in RSA_METHOD and EVP_PKEY_METHOD
structures is deprecated in OpenSSL 3.0. For signing with external
keys that are not exportable (tokens, key stores, etc.) requires a custom
provider interface so that key operations can be delegated to it.
A single provider is enough for handling all external key options we support:
--management-external-key
--cryptoapicert
--pkcs11-id
The series of patches in this PR implements such a provider.","Hooking into callbacks in RSA_METHOD and EVP_PKEY_METHOD
structures is deprecated in OpenSSL 3.0. For signing with external
keys that are not exportable (tokens, key stores, etc.) requires a custom
provider interface so that key operations can be delegated to it.
A single provider is enough for handling all external key options we support:
--management-external-key
--cryptoapicert
--pkcs11-id
The series of patches in this PR implements such a provider.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,161,2021-11-02T04:40:10Z,2022-04-05T08:10:09Z,2022-04-05T08:10:10Z,CLOSED,False,2718,44,20,https://github.com/selvanair,A built-in provider for using external key with OpenSSL 3.0,27,[],https://github.com/OpenVPN/openvpn/pull/161,https://github.com/selvanair,2,https://github.com/OpenVPN/openvpn/pull/161#issuecomment-968362856,"Hooking into callbacks in RSA_METHOD and EVP_PKEY_METHOD
structures is deprecated in OpenSSL 3.0. For signing with external
keys that are not exportable (tokens, key stores, etc.) requires a custom
provider interface so that key operations can be delegated to it.
A single provider is enough for handling all external key options we support:
--management-external-key
--cryptoapicert
--pkcs11-id
The series of patches in this PR implements such a provider.","Added fixup commits to address all comments marked ""resolved"". To be squashed later.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,161,2021-11-02T04:40:10Z,2022-04-05T08:10:09Z,2022-04-05T08:10:10Z,CLOSED,False,2718,44,20,https://github.com/selvanair,A built-in provider for using external key with OpenSSL 3.0,27,[],https://github.com/OpenVPN/openvpn/pull/161,https://github.com/apollo13,3,https://github.com/OpenVPN/openvpn/pull/161#issuecomment-1088368593,"Hooking into callbacks in RSA_METHOD and EVP_PKEY_METHOD
structures is deprecated in OpenSSL 3.0. For signing with external
keys that are not exportable (tokens, key stores, etc.) requires a custom
provider interface so that key operations can be delegated to it.
A single provider is enough for handling all external key options we support:
--management-external-key
--cryptoapicert
--pkcs11-id
The series of patches in this PR implements such a provider.",Hi @selvanair; I just wanted to drop in and thank you for this pull request. It is basically the first nice example that I could find on how to implement providers in openssl 3. 👍,True,{'THUMBS_UP': ['https://github.com/selvanair']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,161,2021-11-02T04:40:10Z,2022-04-05T08:10:09Z,2022-04-05T08:10:10Z,CLOSED,False,2718,44,20,https://github.com/selvanair,A built-in provider for using external key with OpenSSL 3.0,27,[],https://github.com/OpenVPN/openvpn/pull/161,https://github.com/schwabe,4,https://github.com/OpenVPN/openvpn/pull/161#issuecomment-1088399709,"Hooking into callbacks in RSA_METHOD and EVP_PKEY_METHOD
structures is deprecated in OpenSSL 3.0. For signing with external
keys that are not exportable (tokens, key stores, etc.) requires a custom
provider interface so that key operations can be delegated to it.
A single provider is enough for handling all external key options we support:
--management-external-key
--cryptoapicert
--pkcs11-id
The series of patches in this PR implements such a provider.",This has been merged.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,162,2021-11-20T06:23:19Z,2021-11-22T12:15:03Z,2021-11-22T12:15:03Z,CLOSED,False,1,1,1,https://github.com/tmzullinger,doc/man (vpn-network-options): fix foreign_option_{n} typo,1,[],https://github.com/OpenVPN/openvpn/pull/162,https://github.com/tmzullinger,1,https://github.com/OpenVPN/openvpn/pull/162,"In 2da2936 (Improve the documentation for --dhcp-option, 2020-08-16),
foreign_option_{n} became plural between the first and second versions
of the patch.  Correct it.
Signed-off-by: Todd Zullinger tmz@pobox.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","In 2da2936 (Improve the documentation for --dhcp-option, 2020-08-16),
foreign_option_{n} became plural between the first and second versions
of the patch.  Correct it.
Signed-off-by: Todd Zullinger tmz@pobox.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,162,2021-11-20T06:23:19Z,2021-11-22T12:15:03Z,2021-11-22T12:15:03Z,CLOSED,False,1,1,1,https://github.com/tmzullinger,doc/man (vpn-network-options): fix foreign_option_{n} typo,1,[],https://github.com/OpenVPN/openvpn/pull/162,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/162#issuecomment-975461426,"In 2da2936 (Improve the documentation for --dhcp-option, 2020-08-16),
foreign_option_{n} became plural between the first and second versions
of the patch.  Correct it.
Signed-off-by: Todd Zullinger tmz@pobox.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thanks.
Merged via the devel list process.
commit aee54a4 (master)
commit 96590e0 (release/2.5)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,163,2021-11-20T06:23:50Z,2021-11-22T12:14:26Z,2021-12-17T15:48:22Z,CLOSED,False,3,3,1,https://github.com/tmzullinger,Update IRC information in CONTRIBUTING.rst,1,[],https://github.com/OpenVPN/openvpn/pull/163,https://github.com/tmzullinger,1,https://github.com/OpenVPN/openvpn/pull/163,"The developer IRC channel is now on libera.chat.  Update
CONTRIBUTING.rst to match the wiki.
Signed-off-by: Todd Zullinger tmz@pobox.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","The developer IRC channel is now on libera.chat.  Update
CONTRIBUTING.rst to match the wiki.
Signed-off-by: Todd Zullinger tmz@pobox.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,163,2021-11-20T06:23:50Z,2021-11-22T12:14:26Z,2021-12-17T15:48:22Z,CLOSED,False,3,3,1,https://github.com/tmzullinger,Update IRC information in CONTRIBUTING.rst,1,[],https://github.com/OpenVPN/openvpn/pull/163,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/163#issuecomment-975433252,"The developer IRC channel is now on libera.chat.  Update
CONTRIBUTING.rst to match the wiki.
Signed-off-by: Todd Zullinger tmz@pobox.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thanks, that change makes sense.  Our workflow needs the patch on the list, though - I'll see to it.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,163,2021-11-20T06:23:50Z,2021-11-22T12:14:26Z,2021-12-17T15:48:22Z,CLOSED,False,3,3,1,https://github.com/tmzullinger,Update IRC information in CONTRIBUTING.rst,1,[],https://github.com/OpenVPN/openvpn/pull/163,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/163#issuecomment-975460913,"The developer IRC channel is now on libera.chat.  Update
CONTRIBUTING.rst to match the wiki.
Signed-off-by: Todd Zullinger tmz@pobox.com
Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","merged via the mailing list process.
commit 072dabd (master)
commit 55268c8 (release/2.5)
thanks!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,164,2021-12-09T16:01:03Z,2022-01-10T15:23:06Z,2022-01-10T15:23:06Z,CLOSED,False,1,7,1,https://github.com/cacamille3,--server-ipv6 parsing error display wrong arg,4,[],https://github.com/OpenVPN/openvpn/pull/164,https://github.com/cacamille3,1,https://github.com/OpenVPN/openvpn/pull/164,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,164,2021-12-09T16:01:03Z,2022-01-10T15:23:06Z,2022-01-10T15:23:06Z,CLOSED,False,1,7,1,https://github.com/cacamille3,--server-ipv6 parsing error display wrong arg,4,[],https://github.com/OpenVPN/openvpn/pull/164,https://github.com/ordex,2,https://github.com/OpenVPN/openvpn/pull/164#issuecomment-989994866,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thanks for spotting this and for writing a fix!
Could you please add a Signed-off-by line to your commit and send your patch to the openvpn-devel mailing list for review?
Thanks!
ml: https://lists.sourceforge.net/lists/listinfo/openvpn-devel",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,164,2021-12-09T16:01:03Z,2022-01-10T15:23:06Z,2022-01-10T15:23:06Z,CLOSED,False,1,7,1,https://github.com/cacamille3,--server-ipv6 parsing error display wrong arg,4,[],https://github.com/OpenVPN/openvpn/pull/164,https://github.com/cacamille3,3,https://github.com/OpenVPN/openvpn/pull/164#issuecomment-990196245,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Actually the fix should be different...
else if (streq(p[0], ""server-ipv6"") && p[1] && !p[3])
Should be replaced with
else if (streq(p[0], ""server-ipv6"") && p[1] && !p[2])
and then the following could be removed.
        if (p[2])       /* no ""nopool"" options or similar for IPv6 */
        {
            msg(msglevel, ""error parsing --server-ipv6: %s is not a recognized flag"", p[2]);
            goto err;
        }

What do you think ?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,164,2021-12-09T16:01:03Z,2022-01-10T15:23:06Z,2022-01-10T15:23:06Z,CLOSED,False,1,7,1,https://github.com/cacamille3,--server-ipv6 parsing error display wrong arg,4,[],https://github.com/OpenVPN/openvpn/pull/164,https://github.com/ordex,4,https://github.com/OpenVPN/openvpn/pull/164#issuecomment-990760638,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","@cacamille3 that would not be a ""fix"", but rather a change in behaviour.
The idea behind that error message is that some people expect to be able to pass to --server-ipv6 the same flags as --server. For this reason I'd still keep the message as is, so that people moving to --server-ipv6 are warned about the difference.
Does it make sense to you?
In any case, I'd still submit the fix as proposed originally. Additionally to that you may open a discussion about the change in behaviour on the mailing list, if you want other opinions. This is just mine of course :-)",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,164,2021-12-09T16:01:03Z,2022-01-10T15:23:06Z,2022-01-10T15:23:06Z,CLOSED,False,1,7,1,https://github.com/cacamille3,--server-ipv6 parsing error display wrong arg,4,[],https://github.com/OpenVPN/openvpn/pull/164,https://github.com/selvanair,5,https://github.com/OpenVPN/openvpn/pull/164#issuecomment-991242141,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","@cacamille3 that would not be a ""fix"", but rather a change in behaviour. The idea behind that error message is that some people expect to be able to pass to --server-ipv6 the same flags as --server. For this reason I'd still keep the message as is, so that people moving to --server-ipv6 are warned about the difference. Does it make sense to you?

Does not make sense to me :)
Given that the original code printed an unhelpful message (printing p[3], which is NULL, instead of p[2]), I would say this was not serving any useful purpose in the first place. If the intent was to make the syntax of --server-ipv6 match --server, the additional arg should have been ignored with a warning, not  a fatal error.
So I would say, the proposed (corrected) patch with p[1] && !p[2] is the appropriate fix.
As a more general note, when an option parse error is reported, printing the whole option line or the token that caused the error may be useful for all options, not just this one. Currently we only print the option name that caused the error. But that's beyond this patch.",True,{'THUMBS_UP': ['https://github.com/TinCanTech']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,164,2021-12-09T16:01:03Z,2022-01-10T15:23:06Z,2022-01-10T15:23:06Z,CLOSED,False,1,7,1,https://github.com/cacamille3,--server-ipv6 parsing error display wrong arg,4,[],https://github.com/OpenVPN/openvpn/pull/164,https://github.com/ordex,6,https://github.com/OpenVPN/openvpn/pull/164#issuecomment-991943734,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","@selvanair sure, that makes sense. From a history/patch perspective I'd just prefer to split the two changes, but you're right that at the moment there is nothing that really needs fixing as the message has always been bogus.
Let's go with ""p[1] && !p[2]"" directly then.
@cacamille3 would you send the patch to the mailing list?
Thanks!",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,164,2021-12-09T16:01:03Z,2022-01-10T15:23:06Z,2022-01-10T15:23:06Z,CLOSED,False,1,7,1,https://github.com/cacamille3,--server-ipv6 parsing error display wrong arg,4,[],https://github.com/OpenVPN/openvpn/pull/164,https://github.com/cacamille3,7,https://github.com/OpenVPN/openvpn/pull/164#issuecomment-994621450,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",@ordex Done ✅,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,164,2021-12-09T16:01:03Z,2022-01-10T15:23:06Z,2022-01-10T15:23:06Z,CLOSED,False,1,7,1,https://github.com/cacamille3,--server-ipv6 parsing error display wrong arg,4,[],https://github.com/OpenVPN/openvpn/pull/164,https://github.com/cron2,8,https://github.com/OpenVPN/openvpn/pull/164#issuecomment-1002525445,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi,
On Wed, Dec 15, 2021 at 02:11:56AM -0800, Camille Guérin wrote:
 @ordex Done ???
Never showed up on the list...  so I've re-sent it today, squashed
both changes into one single patch.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,165,2021-12-22T03:12:42Z,2021-12-28T09:24:05Z,2021-12-28T09:24:05Z,CLOSED,False,1,1,1,https://github.com/attritionorg,fix typo CVE,1,[],https://github.com/OpenVPN/openvpn/pull/165,https://github.com/attritionorg,1,https://github.com/OpenVPN/openvpn/pull/165,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,165,2021-12-22T03:12:42Z,2021-12-28T09:24:05Z,2021-12-28T09:24:05Z,CLOSED,False,1,1,1,https://github.com/attritionorg,fix typo CVE,1,[],https://github.com/OpenVPN/openvpn/pull/165,https://github.com/ordex,2,https://github.com/OpenVPN/openvpn/pull/165#issuecomment-1000117936,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Can you please send this patch to the openvpn-devel mailing list, after having added a Signed-off-by line?",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,165,2021-12-22T03:12:42Z,2021-12-28T09:24:05Z,2021-12-28T09:24:05Z,CLOSED,False,1,1,1,https://github.com/attritionorg,fix typo CVE,1,[],https://github.com/OpenVPN/openvpn/pull/165,https://github.com/cron2,3,https://github.com/OpenVPN/openvpn/pull/165#issuecomment-1001513579,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi,
On Thu, Dec 23, 2021 at 12:06:33AM -0800, Antonio Quartulli wrote:
 Can you please send this patch to the openvpn-devel mailing list, after having added a Signed-off-by line?
I can forward the patch to the list, and for documentation fixes, we
can live without a Signed-off-by: - but it is missing a proper Author:,
so it cannot go in as-is

Author: Jericho ***@***.***>

-> please commit with correct author settings (Name + e-mail), and
either push again to the PR, or send to the list.

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,165,2021-12-22T03:12:42Z,2021-12-28T09:24:05Z,2021-12-28T09:24:05Z,CLOSED,False,1,1,1,https://github.com/attritionorg,fix typo CVE,1,[],https://github.com/OpenVPN/openvpn/pull/165,https://github.com/attritionorg,4,https://github.com/OpenVPN/openvpn/pull/165#issuecomment-1001655794,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Please submit the correction as yourself, not from me then. This is a lot of bureaucracy for a single typo in a CVE that causes confusion for your users.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,165,2021-12-22T03:12:42Z,2021-12-28T09:24:05Z,2021-12-28T09:24:05Z,CLOSED,False,1,1,1,https://github.com/attritionorg,fix typo CVE,1,[],https://github.com/OpenVPN/openvpn/pull/165,https://github.com/cron2,5,https://github.com/OpenVPN/openvpn/pull/165#issuecomment-1001664813,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Hi,
On Mon, Dec 27, 2021 at 08:58:50AM -0800, Jericho wrote:
 Please submit the correction as yourself, not from me then. This is a lot of bureaucracy for a single typo in a CVE that causes confusion for your users.
As I said, we can live without the signed-off-by for a simple patch -
for a more complex patch, this is required (as it signals acceptance
of the license etc.).  We do need a proper author name - if only to
give credits where credits are due.

As requested, I've now submitted a patch on my own, fixing the OpenSSL
path in the 2.5.5 release notes in the same go.

thanks for your PR!

gert
…
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,165,2021-12-22T03:12:42Z,2021-12-28T09:24:05Z,2021-12-28T09:24:05Z,CLOSED,False,1,1,1,https://github.com/attritionorg,fix typo CVE,1,[],https://github.com/OpenVPN/openvpn/pull/165,https://github.com/flichtenheld,6,https://github.com/OpenVPN/openvpn/pull/165#issuecomment-1001960878,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",Change has been merged.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,166,2022-01-12T09:59:11Z,2022-03-29T19:01:35Z,2022-03-29T19:02:12Z,CLOSED,False,1009,3,13,https://github.com/d12fk,add support for --dns option,1,[],https://github.com/OpenVPN/openvpn/pull/166,https://github.com/d12fk,1,https://github.com/OpenVPN/openvpn/pull/166,"As a first step towards DNS configuration in openvpn and a unified way
to push DNS related settings to clients in v2 and v3, this commit adds
support for parsing the new --dns option. Later commits will add support
for setting up DNS on different platforms.
For now, --dns and DNS related --dhcp-option can be used together for
smoother transition. Settings from --dns will override ones --dhcp-option
where applicable.
For detailed information about the option consult the documentation in
this commit.","As a first step towards DNS configuration in openvpn and a unified way
to push DNS related settings to clients in v2 and v3, this commit adds
support for parsing the new --dns option. Later commits will add support
for setting up DNS on different platforms.
For now, --dns and DNS related --dhcp-option can be used together for
smoother transition. Settings from --dns will override ones --dhcp-option
where applicable.
For detailed information about the option consult the documentation in
this commit.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,166,2022-01-12T09:59:11Z,2022-03-29T19:01:35Z,2022-03-29T19:02:12Z,CLOSED,False,1009,3,13,https://github.com/d12fk,add support for --dns option,1,[],https://github.com/OpenVPN/openvpn/pull/166,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/166#issuecomment-1013117127,"As a first step towards DNS configuration in openvpn and a unified way
to push DNS related settings to clients in v2 and v3, this commit adds
support for parsing the new --dns option. Later commits will add support
for setting up DNS on different platforms.
For now, --dns and DNS related --dhcp-option can be used together for
smoother transition. Settings from --dns will override ones --dhcp-option
where applicable.
For detailed information about the option consult the documentation in
this commit.","Hi,
On Thu, Jan 13, 2022 at 08:24:32AM -0800, Heiko Hund wrote:
 Went with `plain` now, we'll see if it feels right.
I like ""plain"".  Basic DNS, no frills :-)

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{'THUMBS_UP': ['https://github.com/dsommers']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,166,2022-01-12T09:59:11Z,2022-03-29T19:01:35Z,2022-03-29T19:02:12Z,CLOSED,False,1009,3,13,https://github.com/d12fk,add support for --dns option,1,[],https://github.com/OpenVPN/openvpn/pull/166,https://github.com/d12fk,3,https://github.com/OpenVPN/openvpn/pull/166#issuecomment-1013733899,"As a first step towards DNS configuration in openvpn and a unified way
to push DNS related settings to clients in v2 and v3, this commit adds
support for parsing the new --dns option. Later commits will add support
for setting up DNS on different platforms.
For now, --dns and DNS related --dhcp-option can be used together for
smoother transition. Settings from --dns will override ones --dhcp-option
where applicable.
For detailed information about the option consult the documentation in
this commit.","Besides fixes, added function show_dns_options() to print dns_options, which was previously missing.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,166,2022-01-12T09:59:11Z,2022-03-29T19:01:35Z,2022-03-29T19:02:12Z,CLOSED,False,1009,3,13,https://github.com/d12fk,add support for --dns option,1,[],https://github.com/OpenVPN/openvpn/pull/166,https://github.com/d12fk,4,https://github.com/OpenVPN/openvpn/pull/166#issuecomment-1082262653,"As a first step towards DNS configuration in openvpn and a unified way
to push DNS related settings to clients in v2 and v3, this commit adds
support for parsing the new --dns option. Later commits will add support
for setting up DNS on different platforms.
For now, --dns and DNS related --dhcp-option can be used together for
smoother transition. Settings from --dns will override ones --dhcp-option
where applicable.
For detailed information about the option consult the documentation in
this commit.",Merged as b3e0d95,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,167,2022-01-22T11:56:16Z,2022-01-27T15:04:08Z,2022-01-27T15:04:08Z,CLOSED,False,16,2,1,https://github.com/hardlyli,Update ring_buffer.h,1,[],https://github.com/OpenVPN/openvpn/pull/167,https://github.com/hardlyli,1,https://github.com/OpenVPN/openvpn/pull/167,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,167,2022-01-22T11:56:16Z,2022-01-27T15:04:08Z,2022-01-27T15:04:08Z,CLOSED,False,16,2,1,https://github.com/hardlyli,Update ring_buffer.h,1,[],https://github.com/OpenVPN/openvpn/pull/167,https://github.com/dsommers,2,https://github.com/OpenVPN/openvpn/pull/167#issuecomment-1022248210,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",@hardlyli Can you please provide some reasoning why this pull request is important to you?  How does these changes improve the code?,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/jntass,1,https://github.com/OpenVPN/openvpn/pull/168,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/schwabe,2,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1049874075,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","The whole documentation is missing. But in the end this PR comes down to calling SSL_CTX_use_certificate multiple times different certificates.
OpenSSL says:
The internal certificate store of OpenSSL can hold several private key/certificate pairs at a time. The certificate used depends on the cipher selected, see also SSL_CTX_set_cipher_list(3).
I still wonder what the use case for this is? Hardcoding tls-cipher to force a specific certificate from the server sounds like a very crazy workaround/hack. I am not sure this even works for TLS 1.3.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/selvanair,3,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1050009421,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","I'm also not convinced of the use case even for TLS 1.2 and older. If ECDHE-ECDSA is preferred for key exchange just use an EC cert on the server. For client certificate, some having EC and some RSA require no changes.
Further, changing the meaning of multiple cert and key options (from last one replaces previous to each adds a new cert/key) would be a regression and potentially break some existing configs.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/jntass,4,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1050481625,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","I still wonder what the use case for this is?

I find this option useful when clients have different algorithm preferences.  Part of the algorithm may have been disabled when the client compiled, especially if hardware algorithms are used through the engine configure. Some hardware is only designed to improve algorithm performance, and supports limited algorithms.

I am not sure this even works for TLS 1.3.

For OpenSSL, this works for TLS1.3 through calling SSL_CTX_set1_sigalgs_list() to set the signature algorithms extension in Client Hello. But OpenVPN does not seem to support this configuration yet. So I used TLS1.2 tests",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/schwabe,5,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1050779393,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","If a device cannot do certain signatures, then the same is true for the CA signing the server cert and you would need also need a different CA. And to actually having to  provide to different sets, you need a server that can do soemthing like sigA and sigB and you have clients that can only do sigA and clients that can only do SigB. Otherwise you could just pick one of your two sets of certificates.
To be honest, in order to accept this rather bizzare use of TLS (I am not aware of seeing something like this before), we need a much stronger reason or use than ""I find this useful""
For OpenSSL TLS 1.3, I don't think it is a good idea to let the user configure SSL_CTX_set1_sigalgs_list. We already have tls-groups and tls-cipher and tls-cert-profile that influence the signature algorithms that OpenSSL is willing to use on a higher level that is still very low level for most users.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/jntass,6,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1053528531,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","If a device cannot do certain signatures, then the same is true for the CA signing the server cert and you would need also need a different CA. And to actually having to provide to different sets, you need a server that can do soemthing like sigA and sigB and you have clients that can only do sigA and clients that can only do SigB. Otherwise you could just pick one of your two sets of certificates.

Yes, the server needs to configure multiple CA in this case.

we need a much stronger reason or use than ""I find this useful""

Both the client and the server have the right to choose the signature algorithm to use for the handshake,  how about this.

We already have tls-groups and tls-cipher and tls-cert-profile

TLS1.2 cipher suite includes signature algorithm, but TLS1.3 not. Therefore, tls-cipher cannot be used to configure the signature algorithm used in TLS1.3, tls-cert-profile neither. The status of TLS1.3 is indicated here just to show that the needs of select a signature algorithm does not exist only in TLS1.2.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/schwabe,7,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1053540066,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","@jntass This is all very abstract. Can you name a scenario where you actually need this.

A scenario with concrete algorithms and client where you actually need this featue and cannot have a common CA for all clients. If we accept and maintain this feature we need a way to test and verify that this feature actually works. And so I don't have a sceario for which this feature is needed. Only a hacky way by changing tls-cipher and limiting to TLS 1.2 to trigger the feature. That does not feel particulary useful. Especially since it is TLS 1.2 only.


Both the client and the server have the right to choose the signature algorithm to use for the handshake

Currently the idea is rather the server chooses. That has been the case for lastest features  that we implemented (e.g. data channel negotiation). I do see why this is different. Client offers the algorithms it can do and the server picks the preferred one.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/jntass,8,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1054083145,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","Part of the algorithm may have been disabled when the client compiled, especially if hardware algorithms are used through the engine configure.

This is my current scenario. If only a single certificate is configured on the server, some clients may fail to handshake.  And due to the TLS1.3 cipher suite definition changes, I cannot configure the signature algorithm during the SSL handshake using the tls-cipher option. Then I downgraded to TLS1.2.
So there are only two ways to test. First downgrade to TLS1.2 and use tls-cipher option, Second support for configuring the signature algorithm extension in client hello and using TLS1.3. It seems that the second way is better, but this introduces a new option. I think there is value in that. The tls-cipher option may not be sufficient due to TLS1.3 cipher suite no longer contains signature algorithm. This option is necessary even if the server chooses.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/schwabe,9,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1054108359,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","""some clients fail"". Can you be more concrete? I have a hard time figuring out what these clients are that fail unless you manually configured them in a way that they fail.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/schwabe,10,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1054154423,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","I will summarise why I am currently thinking. These are the reasons that block your patch from being included (that is my personal opinion, other team member might have other opinions):

no convincing scenario where this is actually needed. Only vague client description or deliberately misconfigured clients given as example.

if we cannot understand why this feature is needed, we cannot test it and we cannot maintain, and therefore including it, has to pass a higher bar.


Does not work for TLS 1.3 (or is not the issue an with TLS 1.3?). And a TLS 1.2 only feature feels not really like a good idea.
Documentation missing and as @selvanair noted changing the semantics of cert and key is not good.",True,{'THUMBS_UP': ['https://github.com/dsommers']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/dsommers,11,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1054278292,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2",I agree with Arne's summary.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/jntass,12,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1055174041,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","Scenario as follows


""some clients fail""

All of my clients use device through the engine option. Due to device limitations, some of them support only the ECDSA signature algorithm, while others support only the RSA signature algorithm. So I need to limit the signature algorithms that are supported in the client configuration.

Does not work for TLS 1.3 (or is not the issue an with TLS 1.3?). And a TLS 1.2 only feature feels not really like a good idea.

Regarding tls1.3, as mentioned above I can add another option on this PR to support this feature. If you think it necessary.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/schwabe,13,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1055282197,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","Still too vague to convince me. What are these mysterious devices that can do ECDSA or RSA only? The only restriction that I am aware of that can do ECDSA but not RSA are devices that are configured to ahdere to NIST Suite B. But in that case you want the server also to be in Suite B mode which prohibits having RSA certificates there as well.
Furthermore, if the goal is really to support client with only a restricted subnet with cipher, your statements about TLS 1.3 are contradactionary. As TLS 1.3 chooses them indendepently and your devices will only announce what they support, why do need something for TLS 1.3 then to still restrict it and offering a PR for it when it should be working without that. Or at least does not address the problem that you are describing that you are trying to solve.
I have to be honest here. It feels that you really want this feature in OpenVPN and probably have a good reason for it. But I get also the feeling that you are not telling me the whole story here. This has two effects. First I am annoyed by that (perceived) attitude and second I am not really convinced by the use case you are trying to make, as it is vague and feel like a theorectical problem rather than a real one.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/jntass,14,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1056771966,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","Sorry for not telling the whole story. What I really need is to configure both SM2 certificate(Actually dual SM2 certificates) and RSA certificate, SM2 algorithm is a kind of ECC curve and is the national standard of China. To do SSL VPN, only by configuring dual SM2 certificates can it comply with the regulations. Then it can authenticate some users through SM2 certificate and some users through RSA certificate. This is a feature specific to Chinese users. Support both ECDSA and RSA is an incidental feature.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/jntass,15,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1056778851,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2",The real scenario is to replace the ECDSA in the image above with SM2. SM2 is necessary in some cases in China.,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/petiepooo,16,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1078228539,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","Is there something preventing you from simply running two servers, one for each certificate?",True,{'THUMBS_UP': ['https://github.com/dsommers']}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/jntass,17,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1089713236,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","Most scenarios are one port, and it is difficult to open a new port on the cloud.   Some of the other open source projects(nginx, httpd etc) I've used with support configuring multiple certificates, so maybe OpenVPN can support this as well.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,168,2022-02-24T12:51:02Z,,2022-04-06T11:14:42Z,OPEN,False,82,45,3,https://github.com/jntass,support configure multiple certificates on the server side,2,[],https://github.com/OpenVPN/openvpn/pull/168,https://github.com/schwabe,18,https://github.com/OpenVPN/openvpn/pull/168#issuecomment-1090148161,"support configure multiple certificates on the server side, such as ECC and RSA.
openvpn server configure both ECC and RSA certificates, then openvpn clients can choose different certificates according to cipher suite.
server config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_S.crt
key /opt/local/certs/RSA_S.key
cert /opt/local/certs/ECC_S.crt
key /opt/local/certs/ECC_S.key
client1 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/RSA_C.crt
key /opt/local/certs/RSA_C.key
tls-cipher TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2
client2 config:
ca /opt/local/certs/CA.crt
cert /opt/local/certs/ECC_C.crt
key /opt/local/certs/ECC_C.key
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384
tls-version-max 1.2","@jntass as indicated before by @selvanair to include this feature your patch needs improvements to be considered. And you also mentioned that this only works with TLS 1.2 and not with TLS 1.3. So your patch needs to improved to also support TLS 1.3. A feature that is TLS 1.2 only and does not work unless you disable TLS 1.3, is extremely unlikely to be included.",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,169,2022-02-24T15:34:58Z,2022-02-24T18:00:32Z,2022-02-24T18:00:32Z,CLOSED,False,7,0,1,https://github.com/mohsin,Ignore deprecation warning for daemon on macOS,1,[],https://github.com/OpenVPN/openvpn/pull/169,https://github.com/mohsin,1,https://github.com/OpenVPN/openvpn/pull/169,Follow up to a480eaa (does the same for auth-pam.c).,Follow up to a480eaa (does the same for auth-pam.c).,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,170,2022-03-25T17:05:23Z,2022-04-25T13:13:50Z,2022-04-25T13:13:50Z,CLOSED,False,10,1,1,https://github.com/baentsch,correct tls-groups for OpenSSL3,1,[],https://github.com/OpenVPN/openvpn/pull/170,https://github.com/baentsch,1,https://github.com/OpenVPN/openvpn/pull/170,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing","Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,170,2022-03-25T17:05:23Z,2022-04-25T13:13:50Z,2022-04-25T13:13:50Z,CLOSED,False,10,1,1,https://github.com/baentsch,correct tls-groups for OpenSSL3,1,[],https://github.com/OpenVPN/openvpn/pull/170,https://github.com/flichtenheld,2,https://github.com/OpenVPN/openvpn/pull/170#issuecomment-1108555635,"Thank you for your contribution
You are welcome to open PR, but they are used for discussion only. All
patches must eventually go to the openvpn-devel mailing list for review:

https://lists.sourceforge.net/lists/listinfo/openvpn-devel

Please send your patch using git-send-email. For example to send your latest commit to the list:
$ git send-email --to=openvpn-devel@lists.sourceforge.net HEAD~1

For details, see these Wiki articles:

https://community.openvpn.net/openvpn/wiki/DeveloperDocumentation
https://community.openvpn.net/openvpn/wiki/Contributing",Applied as 711a404,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,171,2022-04-03T10:34:31Z,2022-04-03T10:40:26Z,2022-04-03T10:40:26Z,CLOSED,False,4601,268,52,https://github.com/kaizer1,WHYYYY NOT LOAD from  assets simple .ovpn file ,9,[],https://github.com/OpenVPN/openvpn/pull/171,https://github.com/kaizer1,1,https://github.com/OpenVPN/openvpn/pull/171,this for android questions,this for android questions,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,171,2022-04-03T10:34:31Z,2022-04-03T10:40:26Z,2022-04-03T10:40:26Z,CLOSED,False,4601,268,52,https://github.com/kaizer1,WHYYYY NOT LOAD from  assets simple .ovpn file ,9,[],https://github.com/OpenVPN/openvpn/pull/171,https://github.com/cron2,2,https://github.com/OpenVPN/openvpn/pull/171#issuecomment-1086833611,this for android questions,"Hi,
On Sun, Apr 03, 2022 at 03:34:50AM -0700, Sergei Loskutnikov wrote:
 WHYYYY NOT LOAD from  assets simple .ovpn file

 How could such a super obvious and necessary (basic property?)
 You can view, comment on, or merge this pull request online at:

   #171

 -- Commit Summary --

   * Add support for GitLab CI
   * networking: remove duplicate methods from networking_sitnl.c
   * networking: silence warnings about unused arguments
   * networking: implement net_iface_new and net_iface_del APIs
""something in your PR is wrong"" - seems you tried to push the DCO branch
into master...

But anyway, PRs are not feature requests, but there to bring in code
that brings the features :-) - to discuss feature requests, please
come to https://community.openvpn.net/ or to the openvpn-devel list
(and, most likely, what you are asking for is already there - you can
have ""all that is needed"" - except for username + password - in a
single .ovpn)

Closing this.

gert
-- 
""If was one thing all people took for granted, was conviction that if you
 feed honest figures into a computer, honest figures come out. Never doubted
 it myself till I met a computer with a sense of humor.""
                             Robert A. Heinlein, The Moon is a Harsh Mistress

Gert Doering - Munich, Germany                             ***@***.***",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,172,2022-04-06T10:12:09Z,,2022-04-06T13:12:14Z,OPEN,False,7,1,1,https://github.com/mattock,Describe limitations of auth-user-pass more clearly,1,[],https://github.com/OpenVPN/openvpn/pull/172,https://github.com/mattock,1,https://github.com/OpenVPN/openvpn/pull/172,,,True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,173,2022-04-22T21:29:07Z,2022-04-23T14:37:42Z,2022-04-24T11:45:52Z,CLOSED,False,6,39,4,https://github.com/becm,bump pkcs11-helper vcpkg-port to release 1.29,1,[],https://github.com/OpenVPN/openvpn/pull/173,https://github.com/becm,1,https://github.com/OpenVPN/openvpn/pull/173,"Modification to support win32 inlcluded in upstream version.
Upstream archive format changed back to BZIP2.
Required to restore workflow execution, since pkcs11-helper repo dropped the v1.28 GZIP archive…","Modification to support win32 inlcluded in upstream version.
Upstream archive format changed back to BZIP2.
Required to restore workflow execution, since pkcs11-helper repo dropped the v1.28 GZIP archive…",True,{}
OpenVPN/openvpn,https://github.com/OpenVPN/openvpn,173,2022-04-22T21:29:07Z,2022-04-23T14:37:42Z,2022-04-24T11:45:52Z,CLOSED,False,6,39,4,https://github.com/becm,bump pkcs11-helper vcpkg-port to release 1.29,1,[],https://github.com/OpenVPN/openvpn/pull/173,https://github.com/becm,2,https://github.com/OpenVPN/openvpn/pull/173#issuecomment-1107513516,"Modification to support win32 inlcluded in upstream version.
Upstream archive format changed back to BZIP2.
Required to restore workflow execution, since pkcs11-helper repo dropped the v1.28 GZIP archive…","MSBuild instances succeed again.
Workflows for MinGW builds use old pkcs11-helper 1.26 (defined directly in build.yaml).
Patch sent to Openvpn-devel mailing list.",True,{}
